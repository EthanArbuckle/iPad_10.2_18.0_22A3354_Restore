uint64_t sub_10009AD68(void *a1, void *a2, char a3)
{
  double v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v18[5];
  uint64_t v19;

  v6 = 0.0;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.09, 0.5, 0.0, 0.5, 1.0);
  if ((a3 & 1) == 0)
    v6 = 0.1;
  v8 = swift_allocObject(&unk_1007576B8, 40, 7);
  *(_BYTE *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a1;
  v18[4] = sub_10009B664;
  v19 = v8;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10000AB18;
  v18[3] = &unk_1007576D0;
  v9 = _Block_copy(v18);
  v10 = v19;
  v11 = a2;
  v12 = a1;
  objc_msgSend(v7, "addAnimations:", v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
  v13 = type metadata accessor for TodayTransitionCompanionAnimations.CompanionAnimation();
  v14 = swift_allocObject(v13, 64, 7);
  *(_QWORD *)(v14 + 48) = 0;
  *(_QWORD *)(v14 + 56) = 0;
  *(_QWORD *)(v14 + 16) = v7;
  *(double *)(v14 + 24) = v6;
  v15 = swift_allocObject(&unk_100757708, 32, 7);
  *(_BYTE *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = v11;
  *(_QWORD *)(v14 + 32) = sub_10009B6DC;
  *(_QWORD *)(v14 + 40) = v15;
  v16 = v11;
  sub_10003A350(0, 0);
  return v14;
}

double sub_10009AEE8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  double v7;
  double v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  _QWORD v16[5];
  uint64_t v17;

  v6 = UITraitCollection.isSizeClassCompact.getter(a1);
  if ((v6 & 1) != 0)
    v7 = 0.62;
  else
    v7 = 0.61;
  if ((UITraitCollection.isSizeClassCompact.getter(v6) & 1) != 0)
    v8 = 0.8;
  else
    v8 = 0.84;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:dampingRatio:animations:", 0, v7, v8);
  v10 = swift_allocObject(&unk_100757730, 40, 7);
  *(_BYTE *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a1;
  *(_QWORD *)(v10 + 32) = a2;
  v16[4] = sub_10009B724;
  v17 = v10;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10000AB18;
  v16[3] = &unk_100757748;
  v11 = _Block_copy(v16);
  v12 = v17;
  swift_unknownObjectRetain(a1);
  objc_msgSend(v9, "addAnimations:", v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
  v13 = type metadata accessor for TodayTransitionCompanionAnimations.CompanionAnimation();
  v14 = swift_allocObject(v13, 64, 7);
  result = 0.0;
  *(_OWORD *)(v14 + 32) = 0u;
  *(_OWORD *)(v14 + 48) = 0u;
  *(_QWORD *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = 0;
  return result;
}

uint64_t sub_10009B034(void *a1, uint64_t a2, char a3)
{
  double v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD v17[5];
  uint64_t v18;

  v6 = 0.0;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.2, 0.5, 0.0, 0.5, 1.0);
  v8 = swift_allocObject(&unk_100757780, 40, 7);
  *(_BYTE *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 32) = a2;
  v17[4] = sub_10009B754;
  v18 = v8;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10000AB18;
  v17[3] = &unk_100757798;
  v9 = _Block_copy(v17);
  v10 = v18;
  v11 = a1;
  objc_msgSend(v7, "addAnimations:", v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
  if ((a3 & 1) != 0)
    v6 = 0.3;
  v12 = type metadata accessor for TodayTransitionCompanionAnimations.CompanionAnimation();
  v13 = swift_allocObject(v12, 64, 7);
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(v13 + 56) = 0;
  *(_QWORD *)(v13 + 16) = v7;
  *(double *)(v13 + 24) = v6;
  v14 = swift_allocObject(&unk_1007577D0, 40, 7);
  *(_BYTE *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = v11;
  *(_QWORD *)(v14 + 32) = a2;
  *(_QWORD *)(v13 + 32) = sub_10009B788;
  *(_QWORD *)(v13 + 40) = v14;
  v15 = v11;
  sub_10003A350(0, 0);
  return v13;
}

_QWORD *sub_10009B1B4(void *a1, uint64_t a2, char a3)
{
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void **v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  v6 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.09, 0.5, 0.0, 0.5, 1.0);
  v7 = swift_allocObject(&unk_1007577F8, 33, 7);
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_BYTE *)(v7 + 32) = a3;
  v24 = sub_10009B7D0;
  v25 = v7;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_10000AB18;
  v23 = &unk_100757810;
  v8 = _Block_copy(&v20);
  v9 = v25;
  v10 = a1;
  objc_msgSend(v6, "addAnimations:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
  v11 = swift_allocObject(&unk_100757848, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a2;
  v24 = sub_10009B7DC;
  v25 = v11;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_1000D75E8;
  v23 = &unk_100757860;
  v12 = _Block_copy(&v20);
  v13 = v25;
  v14 = v10;
  objc_msgSend(v6, "addCompletion:", v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  v15 = type metadata accessor for TodayTransitionCompanionAnimations.CompanionAnimation();
  v16 = (_QWORD *)swift_allocObject(v15, 64, 7);
  v16[6] = 0;
  v16[7] = 0;
  v16[2] = v6;
  v16[3] = 0;
  v17 = swift_allocObject(&unk_100757898, 33, 7);
  *(_QWORD *)(v17 + 16) = v14;
  *(_QWORD *)(v17 + 24) = a2;
  *(_BYTE *)(v17 + 32) = a3;
  v16[4] = sub_10009B7E4;
  v16[5] = v17;
  v18 = v14;
  sub_10003A350(0, 0);
  return v16;
}

uint64_t sub_10009B39C(void *a1, char a2)
{
  double v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD v15[5];
  uint64_t v16;

  v4 = 0.1;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.1, 0.5, 0.0, 0.5, 1.0);
  v6 = swift_allocObject(&unk_1007578C0, 25, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + 24) = a2;
  v15[4] = sub_10009B814;
  v16 = v6;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_10000AB18;
  v15[3] = &unk_1007578D8;
  v7 = _Block_copy(v15);
  v8 = v16;
  v9 = a1;
  objc_msgSend(v5, "addAnimations:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  if ((a2 & 1) == 0)
    v4 = 0.0;
  v10 = type metadata accessor for TodayTransitionCompanionAnimations.CompanionAnimation();
  v11 = swift_allocObject(v10, 64, 7);
  *(_QWORD *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 56) = 0;
  *(_QWORD *)(v11 + 16) = v5;
  *(double *)(v11 + 24) = v4;
  v12 = swift_allocObject(&unk_100757910, 25, 7);
  *(_QWORD *)(v12 + 16) = v9;
  *(_BYTE *)(v12 + 24) = a2;
  *(_QWORD *)(v11 + 32) = sub_10009B838;
  *(_QWORD *)(v11 + 40) = v12;
  v13 = v9;
  sub_10003A350(0, 0);
  return v11;
}

uint64_t sub_10009B510()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10009B534()
{
  uint64_t v0;

  return sub_10009A22C(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_10009B550()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10009B574()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10009B5A0()
{
  uint64_t v0;

  sub_10009A280(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_10009B5B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10009B5DC()
{
  uint64_t v0;

  sub_10009A368(*(_BYTE *)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10009B5EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10009B618(uint64_t result)
{
  uint64_t v1;
  void *v2;

  if (*(_BYTE *)(v1 + 16) == 1)
  {
    v2 = *(void **)(v1 + 32);
    result = UITraitCollection.isSizeClassCompact.getter(result);
    if ((result & 1) != 0)
      return (uint64_t)objc_msgSend(v2, "_setContinuousCornerRadius:", 0.0);
  }
  return result;
}

id sub_10009B664()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;

  v1 = *(void **)(v0 + 32);
  if (*(_BYTE *)(v0 + 16))
    v2 = 1.0;
  else
    v2 = 0.0;
  if (*(_BYTE *)(v0 + 16))
    v3 = 0.0;
  else
    v3 = 1.0;
  objc_msgSend(*(id *)(v0 + 24), "setAlpha:", v2);
  return objc_msgSend(v1, "setAlpha:", v3);
}

uint64_t sub_10009B6B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10009B6DC()
{
  uint64_t v0;
  id result;

  if (*(_BYTE *)(v0 + 16) == 1)
    return objc_msgSend(*(id *)(v0 + 24), "setAlpha:", 0.0);
  return result;
}

uint64_t sub_10009B700()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

double sub_10009B724()
{
  uint64_t v0;

  return sub_10009A4C8(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10009B730()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_10009B754()
{
  uint64_t v0;
  id result;

  if (*(_BYTE *)(v0 + 16) == 1)
    return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8AppStore31ListTodayCardCollectionViewCell_lockupContainer), "setAlpha:", 1.0);
  return result;
}

id sub_10009B788()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8AppStore31ListTodayCardCollectionViewCell_lockupContainer), "setAlpha:", 0.0);
}

uint64_t sub_10009B7AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 33, 7);
}

id sub_10009B7D0()
{
  uint64_t v0;

  return sub_10009A544(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

void sub_10009B7DC(uint64_t a1)
{
  uint64_t v1;

  sub_10009A62C(a1, *(_QWORD *)(v1 + 16));
}

id sub_10009B7E4()
{
  uint64_t v0;

  return sub_10009A75C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_10009B7F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_10009B814()
{
  uint64_t v0;
  double v1;

  v1 = 0.0;
  if (*(_BYTE *)(v0 + 24))
    v1 = 1.0;
  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", v1);
}

id sub_10009B838()
{
  uint64_t v0;
  double v1;

  v1 = 1.0;
  if (*(_BYTE *)(v0 + 24))
    v1 = 0.0;
  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", v1);
}

void sub_10009B85C()
{
  uint64_t v0;

  sub_10009A12C(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_10009B86C()
{
  uint64_t v0;

  sub_10009A1AC(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

id sub_10009B87C()
{
  uint64_t v0;
  double v1;

  v1 = 0.3;
  if (!*(_BYTE *)(v0 + 24))
    v1 = 0.0;
  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", v1);
}

uint64_t sub_10009B930(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_10009B950(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v9))
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      if (objc_msgSend(v4, "isSystemItem") && !objc_msgSend(v5, "systemItem"))
      {
        swift_bridgeObjectRelease(a1);

        return 1;
      }
      v7 = objc_msgSend(v5, "style");

      if (v7 == (id)2)
      {
        swift_bridgeObjectRelease(a1);
        return 1;
      }
      ++v3;
      if (v6 == v2)
        goto LABEL_21;
    }
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_21:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_10009BAA8(void *a1)
{
  id v1;
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend(a1, "navigationItem");
  v2 = objc_msgSend(v1, "leftBarButtonItems");
  if (v2)
  {
    v3 = v2;
    v4 = sub_10009BDFC();
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    LOBYTE(v3) = sub_10009B950(v5);
    swift_bridgeObjectRelease(v5);
    if ((v3 & 1) != 0)
    {

      return 1;
    }
  }
  v7 = objc_msgSend(v1, "rightBarButtonItems");
  if (v7)
  {
    v8 = v7;
    v9 = sub_10009BDFC();
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    LOBYTE(v8) = sub_10009B950(v10);
    swift_bridgeObjectRelease(v10);

    if ((v8 & 1) != 0)
      return 1;
  }
  else
  {

  }
  return 0;
}

void sub_10009BBB0(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  void *v8;
  unint64_t v9;
  double *v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  NSString v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double *v27;
  Class isa;
  _QWORD v30[3];
  uint64_t v31;
  double *v32;

  if ((sub_10009BAA8(a1) & 1) == 0)
  {
    v6 = objc_msgSend(a1, "navigationItem");
    v7 = objc_msgSend(v6, "rightBarButtonItems");
    if (v7)
    {
      v8 = v7;
      v9 = sub_10009BDFC();
      v10 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    }
    else
    {
      v10 = _swiftEmptyArrayStorage;
    }
    v32 = v10;
    v11._countAndFlagsBits = 0x445F4E4F49544341;
    v11._object = (void *)0xEB00000000454E4FLL;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    object = localizedString(_:comment:)(v11, v12)._object;
    sub_100060CCC(a2, (uint64_t)v30);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v15 = v31;
    if (v31)
    {
      v16 = sub_100060B40(v30, v31);
      v17 = *(_QWORD *)(v15 - 8);
      v18 = __chkstk_darwin(v16);
      v20 = (char *)&v30[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v17 + 16))(v20, v18);
      v21 = _bridgeAnythingToObjectiveC<A>(_:)(v20, v15);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v30);
    }
    else
    {
      v21 = 0;
    }
    v22 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v14, 2, v21, a3);

    swift_unknownObjectRelease(v21);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)(((unint64_t)v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)(((unint64_t)v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v22);
    specialized Array._endMutation()(v26);
    v27 = v32;
    sub_10009BDFC();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "setRightBarButtonItems:", isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

  }
}

unint64_t sub_10009BDFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083E600;
  if (!qword_10083E600)
  {
    v1 = objc_opt_self(UIBarButtonItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10083E600);
  }
  return result;
}

char *sub_10009BE38(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  char *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  objc_super v46;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_lockupView;
  v12 = type metadata accessor for TodayCardLockupView();
  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12));
  v14 = v5;
  *(_QWORD *)&v5[v11] = objc_msgSend(v13, "init");
  v15 = OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView;
  v16 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v16)), "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_pageTraits] = 0;
  v17 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
  v18 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v17);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_backgroundEffectView] = v18;

  v46.receiver = v14;
  v46.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v46, "initWithFrame:", a1, a2, a3, a4);
  v20 = OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView;
  v21 = *(void **)&v19[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView];
  v22 = v19;
  v23 = v21;
  ArtworkView.accessibilityIgnoresInvertColors.setter(1);

  v24 = *(void **)&v19[v20];
  objc_msgSend(v24, "setContentMode:", 2);
  objc_msgSend(v22, "addSubview:", v24);
  v25 = *(void **)&v22[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_backgroundEffectView];
  objc_msgSend(v25, "_setContinuousCornerRadius:", 14.0);
  objc_msgSend(v22, "addSubview:", v25);
  v26 = OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_lockupView;
  v27 = *(char **)&v22[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_lockupView];
  objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC8AppStore14BaseLockupView_titleLabel], "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC8AppStore14BaseLockupView_subtitleLabel], "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC8AppStore14BaseLockupView_ordinalLabel], "setAccessibilityIgnoresInvertColors:", 1);
  v28 = (void *)objc_opt_self(UIColor);
  v29 = v27;
  sub_1000180BC(objc_msgSend(v28, "whiteColor"));

  v30 = *(id *)(*(_QWORD *)&v22[v26] + OBJC_IVAR____TtC8AppStore14BaseLockupView_ordinalLabel);
  v31 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v30, "setTextColor:", v31);

  v32 = *(void **)(*(_QWORD *)&v22[v26] + OBJC_IVAR____TtC8AppStore14BaseLockupView_subtitleLabel);
  sub_1000520B8();
  v33 = v32;
  v34 = (void *)static UIColor.secondaryText.getter(v33);
  v35 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 2);
  v36 = objc_msgSend(v34, "resolvedColorWithTraitCollection:", v35);

  objc_msgSend(v33, "setTextColor:", v36);
  v37 = *(id *)(*(_QWORD *)&v22[v26] + OBJC_IVAR____TtC8AppStore14BaseLockupView_offerButton);
  v38 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v37, "setTintColor:", v38);

  v39 = *(id *)(*(_QWORD *)&v22[v26] + OBJC_IVAR____TtC8AppStore14BaseLockupView_offerLabel);
  v40 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v39, "setTextColor:", v40);

  v41 = *(id *)(*(_QWORD *)&v22[v26] + OBJC_IVAR____TtC8AppStore19TodayCardLockupView_crossLinkTitleLabel);
  v42 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v41, "setTextColor:", v42);

  v43 = *(id *)(*(_QWORD *)&v22[v26] + OBJC_IVAR____TtC8AppStore19TodayCardLockupView_crossLinkSubtitleLabel);
  v44 = objc_msgSend(v28, "whiteColor");
  objc_msgSend(v43, "setTextColor:", v44);

  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v22[v26]);
  return v22;
}

id sub_10009C314(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  objc_super v15;

  v3 = v2;
  v15.receiver = v2;
  v15.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v15, "layoutSubviews");
  ArtworkView.frame.setter(objc_msgSend(v2, "bounds"));
  v4 = *(void **)&v2[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_backgroundEffectView];
  objc_msgSend(v3, "bounds");
  objc_msgSend(v4, "setFrame:");
  v5 = *(void **)&v3[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_lockupView];
  objc_msgSend(v3, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  CGRect.subtracting(insets:)(14.0, 20.0, 14.0, 20.0, v7, v9, v11, v13);
  return objc_msgSend(v5, "setFrame:");
}

void sub_10009C45C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  char *v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  id v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  void *v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  id v77;
  uint64_t v78;
  void *v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  double *v92;
  double v93;
  double v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  char *v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  double v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  void *v111;
  id v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[44];

  v5 = v4;
  v127 = a2;
  v8 = type metadata accessor for Artwork.Crop(0, a4);
  v117 = *(_QWORD *)(v8 - 8);
  v118 = v8;
  __chkstk_darwin(v8);
  v116 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v10);
  v113 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10007B804((uint64_t *)&unk_10082A400);
  __chkstk_darwin(v12);
  v14 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10007B804((uint64_t *)&unk_100833920);
  __chkstk_darwin(v15);
  v17 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10007B804((uint64_t *)&unk_10082A410);
  __chkstk_darwin(v18);
  v123 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10007B804((uint64_t *)&unk_10083EEB0);
  __chkstk_darwin(v20);
  v122 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10007B804((uint64_t *)&unk_10082A420);
  v23 = __chkstk_darwin(v22);
  v121 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v23);
  v119 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v120 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10007B804((uint64_t *)&unk_10082B1A0);
  __chkstk_darwin(v27);
  v29 = (char *)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Artwork.Style(0);
  __chkstk_darwin(v30);
  v128 = (char *)&v113 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for ArtworkLoader(0);
  v33 = *(_QWORD *)(a3 + qword_10088FD90);
  if (v33)
  {
    v130 = *(_QWORD *)(a3 + qword_10088FD90);
    v34 = swift_retain(v33);
    v129 = a1;
    v35 = CondensedAdLockupWithIconBackground.backgroundArtwork.getter(v34);
    v36 = v5;
    v37 = objc_msgSend(v5, "traitCollection");
    v38 = PageGrid.columnWidth.getter(v37);
    if (qword_100829368 != -1)
      swift_once(&qword_100829368, sub_100050594);
    v124 = v17;
    v125 = v14;
    v126 = a3;
    sub_10005A4BC((uint64_t)&xmmword_100890B80, (uint64_t)v131);
    if (qword_100829370 != -1)
      swift_once(&qword_100829370, sub_100024764);
    sub_1000482BC((uint64_t)v131, (uint64_t)&xmmword_100890CE0, v37, v38);
    v40 = v39;
    sub_100079D00(v131);
    if (v38 > v40)
      v41 = v38;
    else
      v41 = v40;
    v42 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v41, v41);
    swift_release(v35);

    v43 = *(void **)&v36[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView];
    v45 = CondensedAdLockupWithIconBackground.backgroundArtwork.getter(v44);
    v46 = v128;
    Artwork.style.getter(v45);
    v47 = ArtworkView.style.setter(v46);
    *(_QWORD *)&v48 = Artwork.contentMode.getter(v47).n128_u64[0];
    v50 = ArtworkLoaderConfig.size.getter(objc_msgSend(v43, "setContentMode:", v49, v48));
    v52 = ArtworkView.imageSize.setter(v50, v51);
    v53 = Artwork.backgroundColor.getter(v52);
    if (!v53)
    {
      v54 = sub_1000520B8();
      v53 = static UIColor.placeholderBackground.getter(v54);
    }
    ArtworkView.backgroundColor.setter(v53);
    objc_msgSend(v43, "setContentMode:", 2, swift_release(v45).n128_f64[0]);
    v55 = type metadata accessor for ArtworkView(0);
    v56 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v127 = v42;
    v114 = v56;
    v115 = v55;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v42, 2, 1, v43, v55, v56);
    v57 = *(char **)&v36[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_lockupView];
    v58 = CondensedAdLockupWithIconBackground.lockup.getter(objc_msgSend(*(id *)&v57[OBJC_IVAR____TtC8AppStore14BaseLockupView_offerLabel], "_setTextColorFollowsTintColor:", 0));
    v59 = v119;
    v60 = v120;
    (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v120, enum case for OfferButtonPresenterViewAlignment.right(_:), v25);
    v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
    v62 = v121;
    v61(v121, 1, 1, v25);
    v63 = sub_100005C94((unint64_t *)&unk_10082A440, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
    AccessibilityConditional.init(value:axValue:)(v60, v62, v25, v63);
    v64 = sub_10007B804((uint64_t *)&unk_100833930);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v29, 0, 1, v64);
    v65 = type metadata accessor for OfferStyle(0);
    v66 = (uint64_t)v122;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v122, 1, 1, v65);
    v67 = type metadata accessor for OfferEnvironment(0);
    v68 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v123, 1, 1, v67);
    v69 = type metadata accessor for OfferTint(0);
    v70 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v124, 1, 1, v69);
    v71 = sub_10007B804((uint64_t *)&unk_10082A450);
    v72 = (uint64_t)v125;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v125, 1, 1, v71);
    sub_10042028C(v58, v57, (uint64_t)v29, v126, 0, 0, v66, v68, v70, v72);
    v57[OBJC_IVAR____TtC8AppStore19TodayCardLockupView_enforceMaximumOfTwoLinesOverall] = 1;
    sub_100062C88();
    objc_msgSend(v57, "setNeedsLayout");
    sub_100062C88();
    swift_release(v58);
    sub_1000057AC(v72, (uint64_t *)&unk_10082A400);
    sub_1000057AC(v70, (uint64_t *)&unk_100833920);
    sub_1000057AC(v68, (uint64_t *)&unk_10082A410);
    sub_1000057AC(v66, (uint64_t *)&unk_10083EEB0);
    v73 = (id)sub_1000057AC((uint64_t)v29, (uint64_t *)&unk_10082B1A0);
    v74 = *(void **)&v57[OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel];
    if (v74)
    {
      v75 = (void *)objc_opt_self(UIColor);
      v76 = v74;
      v77 = objc_msgSend(v75, "whiteColor");
      objc_msgSend(v76, "setTextColor:", v77);

    }
    v78 = OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel;
    v79 = *(void **)&v57[OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel];
    if (v79)
    {
      v80 = (void *)objc_opt_self(UIColor);
      v81 = v79;
      v82 = objc_msgSend(v80, "whiteColor");
      objc_msgSend(v81, "setTextColor:", v82);

      v83 = *(void **)&v57[v78];
      if (v83)
      {
        v84 = qword_100827D40;
        v85 = v83;
        if (v84 != -1)
          swift_once(&qword_100827D40, sub_1003A47BC);
        v86 = type metadata accessor for FontUseCase(0);
        v87 = sub_10007AF70(v86, (uint64_t)qword_10088D208);
        v88 = *(_QWORD *)(v86 - 8);
        v89 = v113;
        (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v113, v87, v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v89, 0, 1, v86);
        dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v89);

        v73 = *(id *)&v57[v78];
        if (v73)
          v73 = objc_msgSend(v73, "setAccessibilityIgnoresInvertColors:", 1);
      }
    }
    v90 = CondensedAdLockupWithIconBackground.lockup.getter(v73);
    v91 = Lockup.icon.getter(v90);
    swift_release(v90);
    if (v91)
    {
      v92 = (double *)&v57[OBJC_IVAR____TtC8AppStore19TodayCardLockupView_metrics];
      swift_beginAccess(&v57[OBJC_IVAR____TtC8AppStore19TodayCardLockupView_metrics], v131, 0, 0);
      v93 = *v92;
      v94 = v92[1];
      v95 = v116;
      v97 = Artwork.crop.getter(v96);
      v98 = Artwork.Crop.preferredContentMode.getter(v97);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v95, v118);
      v99 = Artwork.config(_:mode:prefersLayeredImage:)(v98, 0, v93, v94);
      v100 = OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView;
      v101 = *(id *)&v57[OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView];
      v102 = v128;
      Artwork.style.getter(v101);
      v103 = ArtworkView.style.setter(v102);
      *(_QWORD *)&v104 = Artwork.contentMode.getter(v103).n128_u64[0];
      v106 = ArtworkLoaderConfig.size.getter(objc_msgSend(v101, "setContentMode:", v105, v104));
      v108 = ArtworkView.imageSize.setter(v106, v107);
      v109 = Artwork.backgroundColor.getter(v108);
      if (!v109)
      {
        v110 = sub_1000520B8();
        v109 = static UIColor.placeholderBackground.getter(v110);
      }
      ArtworkView.backgroundColor.setter(v109);

      v111 = *(void **)&v57[v100];
      objc_msgSend(v111, "setContentMode:", 1);
      v112 = v111;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v99, 2, 1, v112, v115, v114);
      swift_release(v91);
      swift_release(v99);

    }
    swift_release(v130);
    swift_release(v127);
  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v32, v32);
    __break(1u);
  }
}

uint64_t type metadata accessor for CondensedAdLockupWithIconBackgroundView()
{
  return objc_opt_self(_TtC8AppStore39CondensedAdLockupWithIconBackgroundView);
}

double sub_10009CFC0(uint64_t a1, uint64_t a2)
{
  return sub_10004A16C(a1, a2);
}

uint64_t sub_10009CFE8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0
                                        + OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_lockupView)
                            + OBJC_IVAR____TtC8AppStore19TodayCardLockupView_isDisplayingSearchAd);
}

void sub_10009D008()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_lockupView;
  v2 = type metadata accessor for TodayCardLockupView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  v3 = OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView;
  v4 = type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_pageTraits] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/CondensedAdLockupWithIconBackgroundView.swift", 54, 2, 57, 0);
  __break(1u);
}

void sub_10009D0C4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  id v24;
  _QWORD v25[43];
  uint64_t v26;

  v2 = v1;
  sub_100022500(a1, (uint64_t)v25);
  v3 = sub_10007B804((uint64_t *)&unk_100835F00);
  v5 = type metadata accessor for CondensedAdLockupWithIconBackground(0, v4);
  if (swift_dynamicCast(&v26, v25, v3, v5, 6))
  {
    CondensedAdLockupWithIconBackground.backgroundArtwork.getter(v6);
    v7 = objc_msgSend(v2, "traitCollection");
    v8 = PageGrid.columnWidth.getter(v7);
    if (qword_100829368 != -1)
      swift_once(&qword_100829368, sub_100050594);
    sub_10005A4BC((uint64_t)&xmmword_100890B80, (uint64_t)v25);
    if (qword_100829370 != -1)
      swift_once(&qword_100829370, sub_100024764);
    sub_1000482BC((uint64_t)v25, (uint64_t)&xmmword_100890CE0, v7, v8);
    v10 = v9;
    sub_100079D00(v25);
    if (v8 > v10)
      v11 = v8;
    else
      v11 = v10;
    v12 = Artwork.config(_:mode:prefersLayeredImage:)(2, 0, v11, v11);
    swift_release();

    v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_backgroundArtworkView];
    v14 = type metadata accessor for ArtworkView(0);
    v15 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v16 = ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v12, 2, 1, v13, v14, v15);
    v17 = CondensedAdLockupWithIconBackground.lockup.getter(v16);
    v18 = Lockup.icon.getter(v17);
    swift_release();
    if (v18)
    {
      if (qword_1008272E8 != -1)
        swift_once(&qword_1008272E8, sub_1002065C4);
      v19 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v20 = sub_10007AF70(v19, (uint64_t)qword_10088B2C8);
      v21 = SmallLockupLayout.Metrics.artworkSize.getter(v20);
      v23 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v21, v22);
      v24 = objc_retain(*(id *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore39CondensedAdLockupWithIconBackgroundView_lockupView]
                              + OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView));
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v23, 2, 1, v24, v14, v15);
      swift_release();
      swift_release();

    }
    swift_release();
    swift_release();
  }
}

ValueMetadata *type metadata accessor for ShareSheetActionImplementation()
{
  return &type metadata for ShareSheetActionImplementation;
}

unint64_t sub_10009D390()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082A468;
  if (!qword_10082A468)
  {
    v1 = type metadata accessor for ShareSheetAction(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Action, v1);
    atomic_store(result, (unint64_t *)&qword_10082A468);
  }
  return result;
}

uint64_t sub_10009D3D8(uint64_t *a1, uint64_t a2)
{
  return sub_10009D3E0(*a1, a2);
}

uint64_t sub_10009D3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD v63[4];
  _OWORD v64[2];
  uint64_t v65;

  v62 = a2;
  v59 = a1;
  v2 = sub_10007B804(&qword_10083F600);
  __chkstk_darwin(v2);
  v61 = (uint64_t *)((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10007B804(&qword_100829470);
  v60 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v54 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowOrigin(0, v5);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FlowAnimationBehavior(0);
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FlowPresentationContext(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ActionMetrics(0, v17);
  __chkstk_darwin(v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10007B804((uint64_t *)&unk_10083F470);
  __chkstk_darwin(v21);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10007B804((uint64_t *)&unk_10083AFC0);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for FlowPage(0, v25);
  __chkstk_darwin(v28);
  v30 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = 0;
  memset(v64, 0, sizeof(v64));
  (*(void (**)(char *, _QWORD))(v31 + 104))(v30, enum case for FlowPage.shareSheet(_:));
  v32 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v27, 1, 1, v32);
  v33 = type metadata accessor for ReferrerData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v23, 1, 1, v33);
  v63[3] = type metadata accessor for ShareSheetAction(0);
  v63[0] = v59;
  swift_retain(v59);
  static ActionMetrics.notInstrumented.getter(v34);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for FlowPresentationContext.infer(_:), v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v12, enum case for FlowAnimationBehavior.infer(_:), v56);
  v35 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v57 + 104))(v9, enum case for FlowOrigin.inapp(_:), v58);
  v36 = static FlowActionPresentation.stackPush.getter(v35);
  v38 = v37;
  v39 = type metadata accessor for FlowAction(0);
  swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  v52 = v23;
  v40 = v60;
  v41 = v30;
  v42 = v62;
  v43 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)(v64, 0, 0, 0, v41, v27, 0, 0, v52, v63, v20, v16, v12, v9, 0, v36, v38);
  v44 = v61;
  BaseObjectGraph.optional<A>(_:)(v61, v4, v4);
  v45 = v44;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v40 + 48))(v44, 1, v4) == 1)
  {
    sub_10009D84C((uint64_t)v44);
    sub_10007B804(&qword_100830D20);
    v46 = sub_10009D88C();
    v47 = swift_allocError(&type metadata for GeneralActionImplementationError, v46, 0, 0);
    *v48 = 1;
    v49 = Promise.__allocating_init(error:)(v47);
  }
  else
  {
    v50 = (uint64_t)v54;
    (*(void (**)(char *, _QWORD *, uint64_t))(v40 + 32))(v54, v45, v4);
    v49 = sub_100306B84(v43, v42, v50);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v50, v4);
  }
  swift_release(v43);
  return v49;
}

uint64_t sub_10009D84C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10007B804(&qword_10083F600);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10009D88C()
{
  unint64_t result;

  result = qword_100849B40;
  if (!qword_100849B40)
  {
    result = swift_getWitnessTable(&unk_10068896C, &type metadata for GeneralActionImplementationError);
    atomic_store(result, (unint64_t *)&qword_100849B40);
  }
  return result;
}

Swift::Int sub_10009D8D0()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10009D914()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10009D93C(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_10009D97C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  char v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((ASKBagContract.enablePersonalizedAdsPrivacyNotice.getter(v2) & 1) == 0
    || (ASKBagContract.enablePersonalizedAdsPrivacyNoticeHighlightedOption.getter() & 1) == 0)
  {
    return 0;
  }
  v5 = (_QWORD *)ASKBagContract.personalizedAdsPrivacyNoticeEnabledRegions.getter();
  v6 = static Locale.current.getter(v5);
  v7 = Locale.regionCode.getter(v6);
  v9 = v8;
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  if (!v9)
    goto LABEL_8;
  v11 = sub_10009DAD8(v7, v9, v5);
  swift_bridgeObjectRelease(v5);
  v12 = swift_bridgeObjectRelease(v9);
  if ((v11 & 1) == 0)
    return 0;
  v5 = (_QWORD *)ASKBagContract.personalizedAdsPrivacyNoticeHighlightedOptionEnabledRegions.getter(v12);
  v13 = static Locale.current.getter(v5);
  v14 = Locale.regionCode.getter(v13);
  v16 = v15;
  v10(v4, v0);
  if (!v16)
  {
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v17 = sub_10009DAD8(v14, v16, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v16);
  return (v17 & 1) != 0;
}

uint64_t sub_10009DAD8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009DB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v7 = v6;
      sub_10009E258();
      v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v5)
        break;
      v5 = 5;
      while (1)
      {
        v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v16 = *(id *)(a2 + 8 * v5);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_6;
        ++v5;
        if (v15 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v10 = 1;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = v11;
      v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0)
        goto LABEL_6;
      ++v10;
      if (v12 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_10009DD10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 32));
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v5 == v8 && v7 == v9)
  {
LABEL_20:
    swift_bridgeObjectRelease_n(v7, 2);
    return 1;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v7);
  result = swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease(a2);
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  v14 = 5;
  while (1)
  {
    v15 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
      break;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(a2 + 8 * v14));
    v7 = v17;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v16 == v18 && v7 == v19)
    {
      swift_bridgeObjectRelease(a2);
      goto LABEL_20;
    }
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v7, v18, v19, 0);
    swift_bridgeObjectRelease(v7);
    result = swift_bridgeObjectRelease(v21);
    if ((v22 & 1) != 0)
      goto LABEL_7;
    ++v14;
    if (v15 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009DE64(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009DEC8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  __n128 v14;
  _QWORD v16[4];

  v1 = type metadata accessor for OSLogger(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10002C1D4();
  v6 = objc_msgSend(v5, "latestVersionForPersonalizedAdsConsent");

  v7 = sub_10002C1D4();
  objc_msgSend(v7, "setAcknowledgedVersionForPersonalizedAds:", v6);

  if (qword_100826AA0 != -1)
    swift_once(&qword_100826AA0, sub_10000B1BC);
  v8 = sub_10007AF70(v1, (uint64_t)qword_10082A470);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
  v9 = sub_10007B804((uint64_t *)&unk_10082D0C0);
  v10 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v11 = swift_allocObject(v9, ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ 2 * *(_QWORD *)(v10 + 72), *(unsigned __int8 *)(v10 + 80) | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100661E10;
  LogMessage.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001006A6D60);
  v12 = sub_10002C1D4();
  v13 = objc_msgSend(v12, "acknowledgedVersionForPersonalizedAds");

  v16[3] = &type metadata for Int;
  v16[0] = v13;
  static LogMessage.safe(_:)(v16);
  sub_1000608D4((uint64_t)v16);
  Logger.info(_:)(v11, v1, &protocol witness table for OSLogger);
  v14 = swift_bridgeObjectRelease(v11);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v14);
}

uint64_t getEnumTagSinglePayload for AdPrivacyOnboardingStep.ButtonsStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AdPrivacyOnboardingStep.ButtonsStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10009E17C + 4 * byte_100661E25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10009E1B0 + 4 * byte_100661E20[v4]))();
}

uint64_t sub_10009E1B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009E1B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10009E1C0);
  return result;
}

uint64_t sub_10009E1CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10009E1D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10009E1D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009E1E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10009E1EC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_10009E1F4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AdPrivacyOnboardingStep.ButtonsStyle()
{
  return &type metadata for AdPrivacyOnboardingStep.ButtonsStyle;
}

unint64_t sub_10009E214()
{
  unint64_t result;

  result = qword_10082A530;
  if (!qword_10082A530)
  {
    result = swift_getWitnessTable(&unk_100661EB8, &type metadata for AdPrivacyOnboardingStep.ButtonsStyle);
    atomic_store(result, (unint64_t *)&qword_10082A530);
  }
  return result;
}

unint64_t sub_10009E258()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083C300;
  if (!qword_10083C300)
  {
    v1 = objc_opt_self(UIGestureRecognizer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10083C300);
  }
  return result;
}

uint64_t sub_10009E294()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_10009E2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t ObjectType;
  int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = type metadata accessor for LegacyAppState(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  dispatch thunk of AppStateMachine.currentState.getter(ObjectType, a2);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v8 == enum case for LegacyAppState.updatable(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 20;
  }
  else if (v8 == enum case for LegacyAppState.downloadable(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 30;
  }
  else if (v8 == enum case for LegacyAppState.downloading(_:) || v8 == enum case for LegacyAppState.installing(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
    v10 = type metadata accessor for LegacyAppState.AppInstallationDetails(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
    return 5;
  }
  else if (v8 == enum case for LegacyAppState.openable(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);

    v11 = type metadata accessor for OpenableDestination(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v6, v11);
    return 40;
  }
  else if (v8 == enum case for LegacyAppState.buyable(_:) || v8 == enum case for LegacyAppState.unknown(_:))
  {
    return 12;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
}

uint64_t sub_10009E49C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t ObjectType;
  int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = type metadata accessor for LegacyAppState(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  dispatch thunk of AppStateMachine.currentState.getter(ObjectType, a2);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v8 == enum case for LegacyAppState.updatable(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 20;
  }
  else if (v8 == enum case for LegacyAppState.downloadable(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 30;
  }
  else if (v8 == enum case for LegacyAppState.downloading(_:) || v8 == enum case for LegacyAppState.installing(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
    v10 = type metadata accessor for LegacyAppState.AppInstallationDetails(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
    return 5;
  }
  else if (v8 == enum case for LegacyAppState.openable(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);

    v11 = type metadata accessor for OpenableDestination(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v6, v11);
    return 40;
  }
  else if (v8 == enum case for LegacyAppState.buyable(_:) || v8 == enum case for LegacyAppState.unknown(_:))
  {
    return 10;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
}

double sub_10009E680()
{
  double result;

  result = 320.0;
  xmmword_100889EE0 = xmmword_100661F30;
  return result;
}

double sub_10009E694()
{
  double result;

  result = 375.0;
  xmmword_100889EF0 = xmmword_100661F40;
  return result;
}

double sub_10009E6A8()
{
  double result;

  result = 461.0;
  xmmword_100889F00 = xmmword_100661F50;
  return result;
}

double sub_10009E6BC()
{
  double result;

  result = 461.0;
  xmmword_100889F10 = xmmword_100661F60;
  return result;
}

double sub_10009E6D0()
{
  double result;

  result = 705.0;
  xmmword_100889F20 = xmmword_100661F70;
  return result;
}

double sub_10009E6E4()
{
  double result;

  result = 773.0;
  xmmword_100889F30 = xmmword_100661F80;
  return result;
}

double sub_10009E6F8()
{
  double result;

  result = 727.0;
  xmmword_100889F40 = xmmword_100661F90;
  return result;
}

double sub_10009E70C()
{
  double result;

  result = 982.0;
  xmmword_100889F50 = xmmword_100661FA0;
  return result;
}

double sub_10009E720()
{
  double result;

  result = 1195.0;
  xmmword_100889F60 = xmmword_100661FB0;
  return result;
}

uint64_t sub_10009E734(uint64_t a1)
{
  return sub_10009E754(8.0, a1, qword_10082A5D8);
}

uint64_t sub_10009E744(uint64_t a1)
{
  return sub_10009E754(4.0, a1, qword_10082A5F0);
}

uint64_t sub_10009E754(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v15[5];

  v5 = type metadata accessor for FontSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  sub_100033BAC(v9, a3);
  sub_10007AF70(v9, (uint64_t)a3);
  if (qword_100827CF0 != -1)
    swift_once(&qword_100827CF0, sub_10008344C);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_10007AF70(v10, (uint64_t)qword_10088D118);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v11, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v15[3] = v5;
  v15[4] = &protocol witness table for FontSource;
  v12 = sub_100024638(v15);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  StaticDimension.init(_:scaledLike:)(v15, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10009E8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  _BYTE *v8;
  uint64_t ObjectType;
  char v10;
  int v11;
  _BYTE v12[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (_BYTE *)Strong;
    ObjectType = swift_getObjectType();
    v10 = dispatch thunk of AppStateMachine.hasCurrentBetaState.getter(ObjectType, a5);
    v11 = v8[OBJC_IVAR____TtC8AppStore14BaseLockupView_isBetaApp];
    v8[OBJC_IVAR____TtC8AppStore14BaseLockupView_isBetaApp] = v10 & 1;
    if ((v10 & 1) != v11)
      sub_100063B98();

  }
}

id sub_10009E95C()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  id v6;
  objc_super v8;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8AppStore14BaseLockupView_stateMachine];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore14BaseLockupView_stateMachine];
  if (v3)
  {
    v4 = *((_QWORD *)v2 + 1);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain(v3);
    v6 = v1;
    dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)(v6, ObjectType, v4);

    swift_unknownObjectRelease(v3);
  }
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for BaseLockupView();
  return objc_msgSendSuper2(&v8, "dealloc");
}

id sub_10009EAF4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  __n128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  double v27;
  id v28;
  id v29;
  id v30;
  uint64_t v32;
  id v33;
  id v34;
  id v35;

  v1 = v0;
  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
  v8 = sub_10007AF88(0xD000000000000014, 0x80000001006A6F70, 0, v7);
  if (qword_100826AF0 != -1)
    swift_once(&qword_100826AF0, sub_10009E734);
  v35 = v6;
  v9 = type metadata accessor for StaticDimension(0);
  v10 = sub_10007AF70(v9, (uint64_t)qword_10082A5D8);
  static Dimensions.defaultRoundingRule.getter(v10);
  v11 = AnyDimension.value(in:rounded:)(v1, v5, v9, &protocol witness table for StaticDimension);
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
  if (qword_100827CF0 != -1)
    swift_once(&qword_100827CF0, sub_10008344C);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = sub_10007AF70(v13, (uint64_t)qword_10088D118);
  v15 = objc_msgSend(v1, "traitCollection");
  v16 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v14, v15);

  v34 = v16;
  objc_msgSend(v16, "capHeight");
  v18 = floor((v17 - v11) * 0.5);
  v19 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
  v20 = objc_msgSend((id)objc_opt_self(UIColor), "systemYellowColor");
  v21 = objc_msgSend(v8, "imageWithTintColor:", v20);
  v33 = v8;
  v22 = v21;

  objc_msgSend(v19, "setImage:", v22);
  objc_msgSend(v19, "setBounds:", 0.0, v18, v11, v11);
  v23 = sub_100008FE4(0, &qword_10082A698, NSMutableAttributedString_ptr);
  v24 = objc_msgSend((id)swift_getObjCClassFromMetadata(v23), "attributedStringWithAttachment:", v19);
  v25 = v35;
  objc_msgSend(v35, "appendAttributedString:", v24);
  if (qword_100826AF8 != -1)
    swift_once(&qword_100826AF8, sub_10009E744);
  v26 = sub_10007AF70(v9, (uint64_t)qword_10082A5F0);
  static Dimensions.defaultRoundingRule.getter(v26);
  v27 = AnyDimension.value(in:rounded:)(v1, v5, v9, &protocol witness table for StaticDimension);
  v12(v5, v2);
  v28 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
  objc_msgSend(v28, "setBounds:", 0.0, 0.0, v27, 0.0);
  v29 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v28, "setImage:", v29);

  v30 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v28);
  objc_msgSend(v25, "appendAttributedString:", v30);

  return v25;
}

id sub_10009EF04(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;

  v3 = v2;
  v6 = type metadata accessor for DirectionalTextAlignment(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10007B804(&qword_10082D610);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel;
  result = *(id *)&v3[OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel];
  if ((a1 & 1) != 0)
  {
    if (result)
      goto LABEL_10;
    if (qword_100827CE8 != -1)
      swift_once(&qword_100827CE8, sub_100083430);
    v16 = type metadata accessor for FontUseCase(0);
    v17 = sub_10007AF70(v16, (uint64_t)qword_10088D100);
    v18 = *(_QWORD *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v13, v17, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v16);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DirectionalTextAlignment.none(_:), v6);
    v19 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
    v20 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v13, 1, 0, 1, 0, v9, 0, 0);
    v21 = *(void **)&v3[v14];
    *(_QWORD *)&v3[v14] = v20;
    v22 = v20;
    if (v21)
      objc_msgSend(v21, "removeFromSuperview");
    if (*(_QWORD *)&v3[v14])
      objc_msgSend(v3, "addSubview:");

    result = *(id *)&v3[v14];
    if (result)
    {
LABEL_10:
      objc_msgSend(result, "setTextColor:", a2, v11);
      result = *(id *)&v3[v14];
      if (result)
        return objc_msgSend(result, "setHidden:", 0);
    }
  }
  else if (result)
  {
    objc_msgSend(result, "setHidden:", 1, v11);
    result = *(id *)&v3[v14];
    if (result)
      return objc_msgSend(result, "setText:", 0);
  }
  return result;
}

void sub_10009F154()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel;
  v10 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel];
  if (v10)
    goto LABEL_9;
  if (qword_100827D38 != -1)
    swift_once(&qword_100827D38, sub_1000832D0);
  v11 = type metadata accessor for FontUseCase(0);
  v12 = sub_10007AF70(v11, (uint64_t)qword_10088D1F0);
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, v12, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v14 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  v15 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 1, 0, 1, 0, v5, 0, 0);
  v16 = *(void **)&v1[v9];
  *(_QWORD *)&v1[v9] = v15;
  v17 = v15;
  if (v16)
    objc_msgSend(v16, "removeFromSuperview");
  if (*(_QWORD *)&v1[v9])
    objc_msgSend(v1, "addSubview:");

  v10 = *(void **)&v1[v9];
  if (v10)
  {
LABEL_9:
    v18 = v10;
    dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

    v19 = *(void **)&v1[v9];
    if (v19)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v20 = v19;
      v21 = (void *)static UIColor.tertiaryText.getter(v20);
      objc_msgSend(v20, "setTextColor:", v21);

      v22 = *(void **)&v1[v9];
      if (v22)
        objc_msgSend(v22, "setHidden:", 0);
    }
  }
}

uint64_t sub_10009F408()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009F42C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10009F458(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_10009E8A8(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_10009F464()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void (*v14)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  objc_class *v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  Class v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;

  v1 = v0;
  v40 = type metadata accessor for DirectionalTextAlignment(0);
  v2 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView;
  type metadata accessor for ArtworkView(0);
  *(_QWORD *)&v0[v8] = static ArtworkView.iconArtworkView.getter();
  v9 = OBJC_IVAR____TtC8AppStore14BaseLockupView_ordinalLabel;
  if (qword_100827D50 != -1)
    swift_once(&qword_100827D50, sub_100083418);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_10007AF70(v10, (uint64_t)qword_10088D238);
  v12 = *(_QWORD *)(v10 - 8);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v13(v7, v11, v10);
  v14 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
  v14(v7, 0, 1, v10);
  v15 = enum case for DirectionalTextAlignment.none(_:);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v39(v4, enum case for DirectionalTextAlignment.none(_:), v40);
  v38 = (Class)type metadata accessor for DynamicTypeLabel(0);
  v16 = objc_allocWithZone(v38);
  *(_QWORD *)&v1[v9] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 1, 0, 1, 0, v4, 0, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel] = 0;
  v17 = OBJC_IVAR____TtC8AppStore14BaseLockupView_titleLabel;
  if (qword_100827CF0 != -1)
    swift_once(&qword_100827CF0, sub_10008344C);
  v18 = sub_10007AF70(v10, (uint64_t)qword_10088D118);
  v13(v7, v18, v10);
  v14(v7, 0, 1, v10);
  v19 = v15;
  v39(v4, v15, v40);
  v20 = objc_allocWithZone(v38);
  *(_QWORD *)&v1[v17] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 2, 0, 1, 0, v4, 0, 0);
  v37 = OBJC_IVAR____TtC8AppStore14BaseLockupView_subtitleLabel;
  if (qword_100827D10 != -1)
    swift_once(&qword_100827D10, sub_100083400);
  v21 = sub_10007AF70(v10, (uint64_t)qword_10088D178);
  v13(v7, v21, v10);
  v14(v7, 0, 1, v10);
  v22 = v15;
  v35 = v13;
  v36 = v14;
  v23 = v39;
  v24 = v40;
  v39(v4, v22, v40);
  v25 = v38;
  v26 = objc_allocWithZone(v38);
  v27 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 2, 0, 1, 0, v4, 0, 0);
  *(_QWORD *)&v1[v37] = v27;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel] = 0;
  v37 = OBJC_IVAR____TtC8AppStore14BaseLockupView_offerLabel;
  v35(v7, v21, v10);
  v36(v7, 0, 1, v10);
  v23(v4, v19, v24);
  v28 = objc_allocWithZone(v25);
  v29 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v7, 1, 0, 1, 0, v4, 0, 0);
  *(_QWORD *)&v1[v37] = v29;
  v30 = OBJC_IVAR____TtC8AppStore14BaseLockupView_offerButton;
  *(_QWORD *)&v1[v30] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for OfferButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v31 = &v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_offerLabelPresenter];
  *v31 = 0u;
  v31[1] = 0u;
  v32 = &v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_title];
  *v32 = 0;
  v32[1] = 0;
  v33 = OBJC_IVAR____TtC8AppStore14BaseLockupView_titleTextColor;
  sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
  *(_QWORD *)&v1[v33] = static UIColor.primaryText.getter();
  v34 = &v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_stateMachine];
  *v34 = 0;
  v34[1] = 0;
  v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_isBetaApp] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/BaseLockupView.swift", 29, 2, 159, 0);
  __break(1u);
}

void sub_10009F990()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for PresentationContextViewController();
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v2, "setBackgroundColor:", v3);

    v4 = objc_msgSend(v0, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setUserInteractionEnabled:", 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10009FB30(char a1)
{
  char *v1;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  id v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  CGFloat MinX;
  CGFloat v32;
  CGFloat MinY;
  objc_super v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  v34.receiver = v1;
  v34.super_class = (Class)type metadata accessor for PresentationContextViewController();
  objc_msgSendSuper2(&v34, "viewDidAppear:", a1 & 1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_contextViewController];
  if (v3)
  {
    v4 = OBJC_IVAR____TtC8AppStore33PresentationContextViewController_hasPresentedViewController;
    if ((v1[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_hasPresentedViewController] & 1) == 0)
    {
      v5 = v3;
      v6 = objc_msgSend(v5, "popoverPresentationController");
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, "sourceView");
        if (v8)
        {
          v9 = v8;
          v10 = objc_msgSend(v8, "window");
          if (v10)
          {
            v11 = v10;
            v12 = objc_msgSend(v9, "superview");
            if (v12)
            {
              v13 = v12;
              objc_msgSend(v9, "frame");
              objc_msgSend(v13, "convertRect:toCoordinateSpace:", v11);
              v15 = v14;
              v17 = v16;
              v19 = v18;
              v21 = v20;

            }
            else
            {
              v19 = 0.0;
              v21 = 0.0;
              v15 = 0.0;
              v17 = 0.0;
            }
            v22 = objc_msgSend(v1, "view");
            objc_msgSend(v7, "setSourceView:", v22);

            objc_msgSend(v7, "sourceRect");
            v24 = v23;
            v26 = v25;
            v28 = v27;
            v30 = v29;
            v35.origin.x = v15;
            v35.origin.y = v17;
            v35.size.width = v19;
            v35.size.height = v21;
            MinX = CGRectGetMinX(v35);
            v36.size.width = v19;
            v32 = MinX;
            v36.origin.x = v15;
            v36.origin.y = v17;
            v36.size.height = v21;
            MinY = CGRectGetMinY(v36);
            v37.origin.x = v24;
            v37.origin.y = v26;
            v37.size.width = v28;
            v37.size.height = v30;
            v38 = CGRectOffset(v37, v32, MinY);
            objc_msgSend(v7, "setSourceRect:", v38.origin.x, v38.origin.y, v38.size.width, v38.size.height);

            v7 = v9;
          }
          else
          {
            v11 = v9;
          }

          v7 = v11;
        }

      }
      objc_msgSend(v1, "presentViewController:animated:completion:", v5, v1[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_animatedContext], 0);

      v1[v4] = 1;
    }
  }
}

void sub_10009FDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  void *v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  _BYTE *v11;
  objc_super v12;
  _QWORD aBlock[5];
  _QWORD *v14;

  v7 = *(void **)&v3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_contextViewController];
  *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_contextViewController] = 0;

  v3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_hasPresentedViewController] = 0;
  v8 = (_QWORD *)swift_allocObject(&unk_100757BE0, 40, 7);
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v3;
  aBlock[4] = sub_1000A01E4;
  v14 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000AB18;
  aBlock[3] = &unk_100757BF8;
  v9 = _Block_copy(aBlock);
  v10 = v14;
  sub_10003A340(a2, a3);
  v11 = v3;
  swift_release(v10);
  v12.receiver = v11;
  v12.super_class = (Class)type metadata accessor for PresentationContextViewController();
  objc_msgSendSuper2(&v12, "dismissViewControllerWithTransition:completion:", a1, v9);
  _Block_release(v9);
}

void sub_10009FECC(void (*a1)(__n128), uint64_t a2, char *a3)
{
  __n128 v6;
  id v7;
  void (*v8)(__n128);
  uint64_t v9;
  __n128 v10;
  id v11;
  id v12;

  if (a1)
  {
    v6 = swift_retain(a2);
    a1(v6);
    sub_10003A350((uint64_t)a1, a2);
  }
  v7 = objc_msgSend(a3, "presentedViewController");

  if (!v7
    && (a3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_isPresentingActivityViewController] & 1) == 0)
  {
    v8 = *(void (**)(__n128))&a3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_dismissOverride];
    if (v8)
    {
      v9 = *(_QWORD *)&a3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_dismissOverride + 8];
      v10 = swift_retain(v9);
      v8(v10);
      sub_10003A350((uint64_t)v8, v9);
    }
    else
    {
      v11 = objc_msgSend(a3, "presentingViewController");
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v11, "dismissViewControllerAnimated:completion:", 0, 0);

      }
    }
  }
}

id sub_1000A00A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PresentationContextViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PresentationContextViewController()
{
  return objc_opt_self(_TtC8AppStore33PresentationContextViewController);
}

uint64_t sub_1000A0154@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_100005B8C(*v1 + OBJC_IVAR____TtC8AppStore33PresentationContextViewController_flowController, a1);
}

uint64_t sub_1000A016C()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8AppStore33PresentationContextViewController_actionRunner));
}

uint64_t sub_1000A0180()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A01A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1000A01B0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1000A01E4()
{
  uint64_t v0;

  sub_10009FECC(*(void (**)(__n128))(v0 + 16), *(_QWORD *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_1000A01F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10007B804(&qword_100833160);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1000A028C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SnapshotPageTraitEnvironment();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void UIViewController.pageContainerSize.getter()
{
  void *v0;
  id v1;
  void *v2;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "bounds");

  }
  else
  {
    __break(1u);
  }
}

double UIViewController.pageMarginInsets.getter()
{
  sub_100074840();
  return 0.0;
}

id UIViewController.snapshotPageTraitEnvironment.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  objc_class *v6;
  char *v7;
  char *v8;
  objc_super v10;

  objc_msgSend(v0, "pageContainerSize");
  v2 = v1;
  v4 = v3;
  v5 = objc_msgSend(v0, "traitCollection");
  v6 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = &v7[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *(_QWORD *)v8 = v2;
  *((_QWORD *)v8 + 1) = v4;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v5;
  v10.receiver = v7;
  v10.super_class = v6;
  return objc_msgSendSuper2(&v10, "init");
}

uint64_t type metadata accessor for SnapshotPageTraitEnvironment()
{
  return objc_opt_self(_TtC8AppStore28SnapshotPageTraitEnvironment);
}

double sub_1000A04BC()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  double v3;
  double MaxY;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  void *v16;
  void *v17;
  id v18;
  double v19;
  CGRect v21;

  v1 = v0 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  v3 = 0.0;
  MaxY = 0.0;
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "navigationController");

    if (v6)
    {
      v7 = objc_msgSend(v6, "navigationBar");

      objc_msgSend(v7, "frame");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v21.origin.x = v9;
      v21.origin.y = v11;
      v21.size.width = v13;
      v21.size.height = v15;
      MaxY = CGRectGetMaxY(v21);
    }
  }
  v16 = *(void **)(v0 + 32);
  if (v16)
  {
    v17 = (void *)swift_unknownObjectWeakLoadStrong(v1);
    v18 = v16;
    sub_1001389E0(v17);
    v3 = v19;

  }
  return fmax(v3 - MaxY, 16.0);
}

void sub_1000A05C8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(double, double);
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  id v7;

  v1 = v0;
  v2 = *(void (**)(double, double))(v0 + 40);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 48);
    swift_retain(*(_QWORD *)(v1 + 48));
    v2(1.0, 0.0);
    sub_10003A350((uint64_t)v2, v3);
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "navigationController");

    if (v6)
    {
      v7 = objc_msgSend(v6, "navigationBar");

      objc_msgSend(v7, "_setTitleOpacity:", 1.0);
    }
  }
  *(_BYTE *)(v1 + 88) = 0;
}

void sub_1000A0684(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  __n128 v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t Strong;
  _QWORD *v32;
  double v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;

  v36 = a2;
  v4 = type metadata accessor for Uber.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v34 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10007B804(&qword_10082A808);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10007B804(&qword_10082A810);
  __chkstk_darwin(v10);
  v35 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - v16;
  v18 = *(void **)(v2 + 32);
  v37 = v2;
  *(_QWORD *)(v2 + 32) = a1;
  a1;

  if (a1)
  {
    Uber.style.getter(v19);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v20(v17, 0, 1, v4);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v20(v17, 1, 1, v4);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v14, enum case for Uber.Style.inline(_:), v4);
  v20(v14, 0, 1, v4);
  v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1000A1BA8((uint64_t)v17, (uint64_t)v9);
  sub_1000A1BA8((uint64_t)v14, v21);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v23 = v22(v9, 1, v4);
  v24 = v35;
  if (v23 == 1)
  {
    sub_1000057AC((uint64_t)v14, &qword_10082A810);
    sub_1000057AC((uint64_t)v17, &qword_10082A810);
    v25 = v22((char *)v21, 1, v4);
    v26 = v37;
    if (v25 == 1)
    {
      sub_1000057AC((uint64_t)v9, &qword_10082A810);
      goto LABEL_13;
    }
  }
  else
  {
    sub_1000A1BA8((uint64_t)v9, v35);
    if (v22((char *)v21, 1, v4) != 1)
    {
      v27 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v34, v21, v4);
      v28 = sub_1000A1BF0();
      v29 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v27, v4, v28);
      v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v27, v4);
      sub_1000057AC((uint64_t)v14, &qword_10082A810);
      sub_1000057AC((uint64_t)v17, &qword_10082A810);
      v30((char *)v24, v4);
      sub_1000057AC((uint64_t)v9, &qword_10082A810);
      v26 = v37;
      if ((v29 & 1) != 0)
        goto LABEL_13;
      goto LABEL_11;
    }
    sub_1000057AC((uint64_t)v14, &qword_10082A810);
    sub_1000057AC((uint64_t)v17, &qword_10082A810);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
    v26 = v37;
  }
  sub_1000057AC((uint64_t)v9, &qword_10082A808);
LABEL_11:
  Strong = swift_unknownObjectWeakLoadStrong(v26 + 16);
  if (Strong)
  {
    v32 = (_QWORD *)Strong;
    v33 = sub_1000A04BC();
    (*(void (**)(_QWORD, _QWORD))((swift_isaMask & *v32) + 0x1C0))(*(_QWORD *)&v33, 0);

  }
LABEL_13:
  sub_1000A0A18(v36);
}

void sub_1000A0A18(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *Strong;
  void *v20;
  id v21;
  id v22;
  char *v23;
  char *v24;
  id v25;
  char v26;
  char *v27;
  uint64_t v28;
  id v29;
  double v30;
  double v31;
  void *v32;
  double v33;
  uint64_t v34;
  void *v35;
  id v36;
  double v37;
  double v38;
  double v39;
  void (*v40)(double, double);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  int v59;
  uint64_t v60;
  __n128 v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  double v68;
  void (*v69)(_QWORD, __n128, double);
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  uint64_t v75;
  void (*v76)(_QWORD, __n128, double);
  uint64_t v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v2 = v1;
  v4 = type metadata accessor for Uber.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  v81 = v4;
  v82 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10007B804(&qword_10082A808);
  __chkstk_darwin(v8);
  v80 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10007B804(&qword_10082A810);
  __chkstk_darwin(v10);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v75 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v75 - v17;
  if (!*(_QWORD *)(v2 + 32))
    return;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (!Strong)
    return;
  v20 = Strong;
  v21 = objc_msgSend(Strong, "collectionView");

  if (!v21)
    return;
  sub_1000A1B6C();
  v22 = a1;
  v78 = v18;
  v23 = v12;
  v24 = v7;
  v25 = v22;
  v26 = static NSObject.== infix(_:_:)(v22, v21);

  v79 = v25;
  v27 = v24;
  v28 = (uint64_t)v23;

  if ((v26 & 1) == 0 || *(_BYTE *)(v2 + 88) != 1)
    return;
  v29 = v79;
  objc_msgSend(v79, "_systemContentInset");
  objc_msgSend(v29, "contentOffset");
  v31 = v30;
  v32 = *(void **)(v2 + 32);
  v33 = 0.0;
  v34 = v2 + 16;
  if (v32)
  {
    v35 = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
    v36 = v32;
    sub_1001389E0(v35);
    v33 = v37;

  }
  v38 = fmin(v31 / v33, 1.0);
  if (v38 < 0.0)
    v39 = 0.0;
  else
    v39 = v38;
  v40 = *(void (**)(double, double))(v2 + 40);
  if (v40)
  {
    v41 = *(_QWORD *)(v2 + 48);
    swift_retain(v41);
    v40(v39, 0.0);
    sub_10003A350((uint64_t)v40, v41);
  }
  v42 = *(_QWORD *)(v2 + 72);
  v43 = v81;
  v44 = v82;
  if (!v42)
    goto LABEL_31;
  v76 = *(void (**)(_QWORD, __n128, double))(v2 + 72);
  v77 = v2 + 16;
  v45 = *(_QWORD *)(v2 + 80);
  v46 = *(_QWORD *)(v2 + 32);
  v75 = v45;
  if (v46)
  {
    v47 = *(_QWORD *)(v46 + OBJC_IVAR____TtC8AppStore14UberHeaderView_uber);
    sub_10003A340(v42, v45);
    v48 = swift_retain(v47);
    v49 = (uint64_t)v78;
    Uber.style.getter(v48);
    v50 = swift_release(v47);
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v51)(v49, 0, 1, v43, v50);
  }
  else
  {
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
    v53 = v45;
    v49 = (uint64_t)v78;
    v51(v78, 1, 1, v81);
    v54 = v53;
    v29 = v79;
    v52 = swift_retain(v54);
  }
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v44 + 104))(v15, enum case for Uber.Style.inline(_:), v43, v52);
  v51(v15, 0, 1, v43);
  v55 = *(int *)(v8 + 48);
  v56 = v80;
  v57 = v80 + v55;
  sub_1000A1BA8(v49, v80);
  sub_1000A1BA8((uint64_t)v15, v57);
  v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  if (v58(v56, 1, v43) == 1)
  {
    sub_1000057AC((uint64_t)v15, &qword_10082A810);
    v56 = v80;
    sub_1000057AC(v49, &qword_10082A810);
    v59 = v58(v57, 1, v43);
    v34 = v77;
    if (v59 == 1)
    {
      v60 = sub_1000057AC(v56, &qword_10082A810);
LABEL_24:
      if (v39 >= 0.5)
        v68 = 0.35;
      else
        v68 = 0.2;
      v61.n128_u64[0] = 1.0;
      if (v39 < 0.5)
        v61.n128_f64[0] = 0.0;
      v70 = v75;
      v69 = v76;
      v76(v60, v61, v68);
      sub_1000A1390(v29, *(uint64_t *)&v68, 0, v39);
      sub_10003A350((uint64_t)v69, v70);
      goto LABEL_32;
    }
  }
  else
  {
    sub_1000A1BA8(v56, v28);
    v62 = v58(v57, 1, v43);
    v34 = v77;
    if (v62 != 1)
    {
      v63 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v27, v57, v43);
      v64 = sub_1000A1BF0();
      v65 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v27, v43, v64);
      v66 = v43;
      v67 = *(void (**)(char *, uint64_t))(v63 + 8);
      v29 = v79;
      v67(v27, v66);
      sub_1000057AC((uint64_t)v15, &qword_10082A810);
      sub_1000057AC((uint64_t)v78, &qword_10082A810);
      v67((char *)v28, v66);
      v60 = sub_1000057AC(v56, &qword_10082A810);
      if ((v65 & 1) != 0)
        goto LABEL_24;
      goto LABEL_30;
    }
    sub_1000057AC((uint64_t)v15, &qword_10082A810);
    sub_1000057AC((uint64_t)v78, &qword_10082A810);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v28, v43);
  }
  sub_1000057AC(v56, &qword_10082A808);
LABEL_30:
  sub_10003A350((uint64_t)v76, v75);
LABEL_31:
  sub_1000A1390(v29, 0, 1, v39);
LABEL_32:
  sub_1000A1730(v39);
  v71 = (void *)swift_unknownObjectWeakLoadStrong(v34);
  if (v71)
  {
    v72 = v71;
    v73 = objc_msgSend(v71, "navigationController");

    if (v73)
    {
      v74 = objc_msgSend(v73, "navigationBar");

      objc_msgSend(v74, "_setTitleOpacity:", v39);
    }
  }
}

uint64_t sub_1000A0FE8(double a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  unint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  void *Strong;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v44;

  v7 = v6;
  v11 = type metadata accessor for Uber.Style(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10007B804(&qword_10082A808);
  __chkstk_darwin(v15);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10007B804(&qword_10082A810);
  __chkstk_darwin(v18);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v44 - v22;
  v26 = __chkstk_darwin(v24);
  v27 = (char *)&v44 - v25;
  if (a4 > a2)
    goto LABEL_2;
  v26.n128_f64[0] = fabs(a6);
  if (v26.n128_f64[0] <= 0.4)
  {
    v29 = *(_QWORD *)(v6 + 32);
    if (v29)
    {
      v30 = *(_QWORD *)(v29 + OBJC_IVAR____TtC8AppStore14UberHeaderView_uber);
      v31 = swift_retain(v30);
      Uber.style.getter(v31);
      v32 = swift_release(v30);
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56);
      v33(v27, 0, 1, v11, v32);
    }
    else
    {
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56);
      v33((char *)&v44 - v25, 1, 1, v11, v26);
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v23, enum case for Uber.Style.inline(_:), v11);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v33)(v23, 0, 1, v11);
    v34 = (uint64_t)&v17[*(int *)(v15 + 48)];
    sub_1000A1BA8((uint64_t)v27, (uint64_t)v17);
    sub_1000A1BA8((uint64_t)v23, v34);
    v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (v35((uint64_t)v17, 1, v11) == 1)
    {
      sub_1000057AC((uint64_t)v23, &qword_10082A810);
      sub_1000057AC((uint64_t)v27, &qword_10082A810);
      if (v35(v34, 1, v11) == 1)
      {
        sub_1000057AC((uint64_t)v17, &qword_10082A810);
        v28 = 0;
        return v28 & 1;
      }
      goto LABEL_12;
    }
    sub_1000A1BA8((uint64_t)v17, (uint64_t)v20);
    if (v35(v34, 1, v11) == 1)
    {
      sub_1000057AC((uint64_t)v23, &qword_10082A810);
      sub_1000057AC((uint64_t)v27, &qword_10082A810);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
LABEL_12:
      sub_1000057AC((uint64_t)v17, &qword_10082A808);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, v34, v11);
    v36 = sub_1000A1BF0();
    v37 = dispatch thunk of static Equatable.== infix(_:_:)(v20, v14, v11, v36);
    v38 = *(void (**)(char *, uint64_t))(v12 + 8);
    v38(v14, v11);
    sub_1000057AC((uint64_t)v23, &qword_10082A810);
    sub_1000057AC((uint64_t)v27, &qword_10082A810);
    v38(v20, v11);
    sub_1000057AC((uint64_t)v17, &qword_10082A810);
    if ((v37 & 1) != 0)
    {
LABEL_2:
      v28 = 0;
      return v28 & 1;
    }
  }
LABEL_14:
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7 + 16);
  if (Strong)
  {
    v40 = Strong;
    v41 = objc_msgSend(Strong, "traitCollection");

    LOBYTE(v40) = UITraitCollection.prefersAccessibilityLayouts.getter(v42);
    v28 = v40 ^ 1;
  }
  else
  {
    v28 = 1;
  }
  return v28 & 1;
}

uint64_t sub_1000A1390(void *a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  double v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  __n128 v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char *v34;
  unint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  void (*v38)(double, double);
  uint64_t v39;
  char *v40;
  id v41;

  v41 = a1;
  v8 = type metadata accessor for Uber.Style(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v40 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10007B804(&qword_10082A808);
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10007B804(&qword_10082A810);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v40 - v18;
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v40 - v22;
  if ((a3 & 1) != 0)
  {
    objc_msgSend(v41, "_verticalVelocity", v21.n128_f64[0]);
    v24 = v21.n128_f64[0];
  }
  else
  {
    v24 = *(double *)&a2;
  }
  v25 = v4;
  v26 = v4[4];
  if (v26)
  {
    v27 = *(_QWORD *)(v26 + OBJC_IVAR____TtC8AppStore14UberHeaderView_uber);
    v28 = swift_retain(v27);
    Uber.style.getter(v28);
    v29 = swift_release(v27);
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    v30(v23, 0, 1, v8, v29);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
    v30(v23, 1, 1, v8, v21);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v19, enum case for Uber.Style.inline(_:), v8);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v30)(v19, 0, 1, v8);
  v31 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1000A1BA8((uint64_t)v23, (uint64_t)v13);
  sub_1000A1BA8((uint64_t)v19, v31);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v32((uint64_t)v13, 1, v8) == 1)
  {
    sub_1000057AC((uint64_t)v19, &qword_10082A810);
    sub_1000057AC((uint64_t)v23, &qword_10082A810);
    if (v32(v31, 1, v8) == 1)
    {
      result = sub_1000057AC((uint64_t)v13, &qword_10082A810);
LABEL_14:
      v38 = (void (*)(double, double))v25[7];
      if (!v38)
        return result;
      v39 = v25[8];
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  sub_1000A1BA8((uint64_t)v13, (uint64_t)v16);
  if (v32(v31, 1, v8) == 1)
  {
    sub_1000057AC((uint64_t)v19, &qword_10082A810);
    sub_1000057AC((uint64_t)v23, &qword_10082A810);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
LABEL_12:
    result = sub_1000057AC((uint64_t)v13, &qword_10082A808);
    goto LABEL_16;
  }
  v34 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v40, v31, v8);
  v35 = sub_1000A1BF0();
  v36 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v34, v8, v35);
  v37 = *(void (**)(char *, uint64_t))(v9 + 8);
  v37(v34, v8);
  sub_1000057AC((uint64_t)v19, &qword_10082A810);
  sub_1000057AC((uint64_t)v23, &qword_10082A810);
  v37(v16, v8);
  result = sub_1000057AC((uint64_t)v13, &qword_10082A810);
  if ((v36 & 1) != 0)
    goto LABEL_14;
LABEL_16:
  v38 = (void (*)(double, double))v25[5];
  if (!v38)
    return result;
  v39 = v25[6];
LABEL_18:
  swift_retain(v39);
  v38(a4, v24);
  return sub_10003A350((uint64_t)v38, v39);
}

void sub_1000A1730(double a1)
{
  uint64_t v1;
  void *Strong;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "navigationItem");

    v10 = objc_msgSend(v5, "titleView");
    if (v10)
    {
      v6 = type metadata accessor for UberNavigationBarTitleView();
      v7 = swift_dynamicCastClass(v10, v6);
      if (v7)
      {
        v8 = v7;
        if (*(_BYTE *)(v7 + OBJC_IVAR____TtC8AppStore26UberNavigationBarTitleView_hasBackButton) == 1)
        {
          v9 = OBJC_IVAR____TtC8AppStore26UberNavigationBarTitleView_backButtonStyle;
          if (a1 < 0.5 != *(_BYTE *)(v7 + OBJC_IVAR____TtC8AppStore26UberNavigationBarTitleView_backButtonStyle)
            && *(_BYTE *)(v7 + OBJC_IVAR____TtC8AppStore26UberNavigationBarTitleView_canSetBackButtonStyle) == 1)
          {
            sub_1004A0B1C(a1 < 0.5, 1);
            *(_BYTE *)(v8 + v9) = a1 < 0.5;
          }
        }
      }

    }
  }
}

void sub_1000A1858(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  void *v11;
  id v12;
  id v13;
  char v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  double MaxY;
  void *v28;
  id v29;
  id v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  void *v39;
  void *v40;
  id v41;
  double v42;
  double v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  CGRect v50;

  v5 = v4;
  if (*(_QWORD *)(v4 + 32))
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
    if (Strong)
    {
      v11 = Strong;
      v12 = objc_msgSend(Strong, "collectionView");

      if (v12)
      {
        sub_1000A1B6C();
        v13 = a1;
        v14 = static NSObject.== infix(_:_:)(v13, v12);

        if ((v14 & 1) != 0)
        {
          objc_msgSend(v13, "contentSize");
          v16 = v15;
          v18 = v17;
          objc_msgSend(v13, "frame");
          if ((sub_1000A0FE8(v16, v18, v19, v20, a3, a4) & 1) != 0 && *(double *)(a2 + 8) > 0.0)
          {
            objc_msgSend(v13, "contentInset");
            v22 = v21;
            objc_msgSend(v13, "_systemContentInset");
            v24 = v23;
            v25 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
            v26 = 0.0;
            MaxY = 0.0;
            if (v25)
            {
              v28 = v25;
              v29 = objc_msgSend(v25, "navigationController");

              if (v29)
              {
                v30 = objc_msgSend(v29, "navigationBar");

                objc_msgSend(v30, "frame");
                v32 = v31;
                v34 = v33;
                v36 = v35;
                v38 = v37;

                v50.origin.x = v32;
                v50.origin.y = v34;
                v50.size.width = v36;
                v50.size.height = v38;
                MaxY = CGRectGetMaxY(v50);
              }
            }
            v39 = *(void **)(v5 + 32);
            if (v39)
            {
              v40 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
              v41 = v39;
              sub_1001389E0(v40);
              v43 = v42;

              v44 = *(_QWORD *)(v5 + 32);
              if (v44)
                v26 = *(double *)(v44 + OBJC_IVAR____TtC8AppStore14UberHeaderView_reflectionOutset);
            }
            else
            {
              v43 = 0.0;
            }
            v45 = v43 + v26 - v24;
            if (v45 < 0.0)
              v45 = 0.0;
            v46 = *(double *)(a2 + 8);
            if (v46 <= v45)
            {
              v47 = 0.07;
              if (a4 < 0.0)
                v47 = 0.5;
              v48 = v47 * v45;
              v49 = v45 - MaxY;
              if (v46 <= v48)
                v49 = -(v22 + v24);
              *(double *)(a2 + 8) = v49;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1000A1AD8()
{
  uint64_t v0;

  sub_1000834F4(v0 + 16);

  sub_10003A350(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  sub_10003A350(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_10003A350(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 89, 7);
}

uint64_t type metadata accessor for UberedPageScrollObserver()
{
  return objc_opt_self(_TtC8AppStore24UberedPageScrollObserver);
}

void sub_1000A1B3C(UIScrollView in)
{
  ScrollObserver.willDecelerate(in:)(in);
}

void sub_1000A1B44(UIScrollView in)
{
  ScrollObserver.didDecelerate(in:)(in);
}

void sub_1000A1B50(UIScrollView in, Swift::Bool willDecelerate)
{
  ScrollObserver.didEndDragging(in:willDecelerate:)(in, willDecelerate);
}

void sub_1000A1B58(UIScrollView in)
{
  ScrollObserver.willBeginDragging(in:)(in);
}

uint64_t sub_1000A1B64(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return ScrollObserver.didScroll(visibleItems:layoutEnvironment:contentOffset:)(a1, a2, *v2);
}

unint64_t sub_1000A1B6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082A800;
  if (!qword_10082A800)
  {
    v1 = objc_opt_self(UIScrollView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10082A800);
  }
  return result;
}

uint64_t sub_1000A1BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804(&qword_10082A810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000A1BF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082A818;
  if (!qword_10082A818)
  {
    v1 = type metadata accessor for Uber.Style(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Uber.Style, v1);
    atomic_store(result, (unint64_t *)&qword_10082A818);
  }
  return result;
}

uint64_t sub_1000A1C38(uint64_t a1, uint64_t a2)
{
  return sub_1000A1C50(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SearchBarObservingPresenter.searchBarCancelAction.getter);
}

uint64_t sub_1000A1C44(uint64_t a1, uint64_t a2)
{
  return sub_1000A1C50(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SearchBarObservingPresenter.searchFieldClearAction.getter);
}

uint64_t sub_1000A1C50(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(_QWORD *__return_ptr))(a2 + 8))(v8);
  v4 = v9;
  v5 = v10;
  sub_100060B40(v8, v9);
  v6 = a3(v4, v5);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v8);
  return v6;
}

uint64_t sub_1000A1CB8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t (*v15)(_QWORD, uint64_t, double);

  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v2 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)(v1 + 48) = 0;
    *(_QWORD *)(v1 + 56) = 0;
LABEL_5:
    v12 = 0;
    goto LABEL_7;
  }
  v4 = *(double *)(v1 + 16);
  objc_msgSend(a1, "_verticalVelocity");
  v6 = v5;
  objc_msgSend(a1, "_systemContentInset");
  v8 = v7;
  objc_msgSend(a1, "contentInset");
  v10 = v8 + v9;
  objc_msgSend(a1, "contentOffset");
  v2 = *(_QWORD *)(v1 + 48);
  if (v10 + v11 < v4)
  {
    *(_QWORD *)(v1 + 48) = 0;
    *(_QWORD *)(v1 + 56) = v6;
    goto LABEL_5;
  }
  *(_QWORD *)(v1 + 48) = 1;
  *(_QWORD *)(v1 + 56) = v6;
  v12 = 1;
LABEL_7:
  v13 = ProductNavigationBarMode.rawValue.getter(v12);
  result = ProductNavigationBarMode.rawValue.getter(v2);
  if (v13 != result)
  {
    v15 = *(uint64_t (**)(_QWORD, uint64_t, double))(v1 + 32);
    if (v15)
      return v15(*(_QWORD *)(v1 + 48), 1, *(double *)(v1 + 56));
  }
  return result;
}

uint64_t sub_1000A1DB0()
{
  uint64_t v0;

  sub_10003A350(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for ProductScrollObserver()
{
  return objc_opt_self(_TtC8AppStore21ProductScrollObserver);
}

double sub_1000A1E10(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  uint64_t v13;
  double v14;

  v2 = type metadata accessor for TimingCurve(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10007B804(&qword_10082A908);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = fabs(a1);
  if (v10 >= 5.0)
    v11 = 1.0;
  else
    v11 = v10 / 5.0;
  v14 = 0.3;
  v13 = 0x3FA999999999999ALL;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for TimingCurve.linear(_:), v2);
  Interpolator.init(fromValue:toValue:curve:)(&v14, &v13, v5, &type metadata for Double, &protocol witness table for Double);
  Interpolator.value(forInput:)(&v14, v6, v11);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1000A1F5C()
{
  return sub_100005C94(&qword_10082A910, type metadata accessor for RoundedButtonCollectionViewCell, (uint64_t)&unk_100662220);
}

double sub_1000A1F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  double v4;
  uint64_t v6;

  v0 = type metadata accessor for RoundedButton(0);
  v1 = sub_100005C94(&qword_10082A918, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedButton, (uint64_t)&protocol conformance descriptor for RoundedButton);
  ItemLayoutContext.typedModel<A>(as:)(&v6, v0, v0, v1);
  v2 = v6;
  if (!v6)
    return 0.0;
  v3 = sub_1000D2308();
  v4 = sub_10060F0B4(v2, (uint64_t)v3);
  swift_release(v2);
  swift_unknownObjectRelease(v3);
  return v4;
}

UIContentSizeCategory sub_1000A202C()
{
  qword_10082A920 = (uint64_t)UIContentSizeCategoryAccessibilityExtraLarge;
  return UIContentSizeCategoryAccessibilityExtraLarge;
}

id sub_1000A2044(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  id v12;
  double left;
  double bottom;
  double right;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews] = _swiftEmptyArrayStorage;
  v10 = v4;
  static SearchTagsRibbonViewLayout.Metrics.standard.getter();
  *(_QWORD *)&v10[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels] = 0;
  v10[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_shouldEvenlyDistribute] = 1;
  v10[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_isInsideSearchAd] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsCalculator] = 0;
  v11 = &v10[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;

  v24.receiver = v10;
  v24.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v16 = v12;
  objc_msgSend(v16, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v17 = qword_100826B00;
  v18 = v16;
  if (v17 != -1)
    swift_once(&qword_100826B00, sub_1000A202C);
  objc_msgSend(v18, "setMaximumContentSizeCategory:", qword_10082A920);

  v19 = sub_10007B804(&qword_10082E950);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100661A30;
  *(_QWORD *)(v20 + 32) = type metadata accessor for UITraitLegibilityWeight(0);
  *(_QWORD *)(v20 + 40) = &protocol witness table for UITraitLegibilityWeight;
  v21 = v18;
  v22 = UIView.registerForTraitChanges<A>(_:handler:)(v20, sub_1000A36AC, 0, ObjectType);
  swift_unknownObjectRelease(v22);
  swift_bridgeObjectRelease(v20);

  return v21;
}

id sub_1000A2270()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews];
  v3 = swift_bridgeObjectRetain(v2);
  v4 = SearchTagsRibbonViewLayout.Metrics.maximumNumberOfItems.getter(v3);
  result = (id)sub_1003E5388(v4, v2);
  v9 = result;
  v10 = (v8 >> 1) - v7;
  if (v8 >> 1 == v7)
    goto LABEL_5;
  if ((uint64_t)(v8 >> 1) > v7)
  {
    v11 = (uint64_t *)(v6 + 16 * v7);
    do
    {
      v12 = *v11;
      v11 += 2;
      objc_msgSend(v1, "addSubview:", v12);
      --v10;
    }
    while (v10);
LABEL_5:
    swift_unknownObjectRelease(v9);
    return objc_msgSend(v1, "setNeedsLayout");
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A2314()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  __n128 v19;
  char *v20;
  __n128 v21;
  void (*v22)(__n128);
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[32];
  objc_super v31;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v27 = type metadata accessor for LayoutRect(0);
  v3 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SearchTagsRibbonViewLayout(0, v8);
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31.receiver = v1;
  v31.super_class = ObjectType;
  objc_msgSendSuper2(&v31, "layoutSubviews", v12);
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews];
  swift_bridgeObjectRetain(v15);
  v17 = sub_1000A2524(v16);
  v18 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v10, &v1[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metrics], v6, v18);
  SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)(v17, v10, v1[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_shouldEvenlyDistribute]);
  v19 = LayoutMarginsAware<>.layoutFrame.getter(ObjectType);
  SearchTagsRibbonViewLayout.placeChildren(relativeTo:in:)(v1, v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v27);
  v20 = &v1[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock];
  v21 = swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock], v30, 32, 0);
  v22 = *(void (**)(__n128))v20;
  if (*(_QWORD *)v20)
  {
    v23 = *((_QWORD *)v20 + 1);
    swift_endAccess(v30);
    v24 = swift_retain(v23);
    v22(v24);
    sub_10003A350((uint64_t)v22, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v14, v29, v21);
    return swift_endAccess(v30);
  }
}

_QWORD *sub_1000A2524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = sub_10007B804(&qword_10082A988);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10007B804(&qword_100829F80);
  v6 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v24 = (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return _swiftEmptyArrayStorage;
  v23 = v1;
  swift_bridgeObjectRetain(a1);
  v22 = a1;
  v12 = (uint64_t *)(a1 + 40);
  v13 = _swiftEmptyArrayStorage;
  do
  {
    v14 = (void *)*(v12 - 1);
    v15 = *v12;
    ObjectType = swift_getObjectType();
    v17 = v14;
    dispatch thunk of MetadataRibbonItemView.searchLayoutContext.getter(ObjectType, v15);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v25) == 1)
    {
      sub_1000057AC((uint64_t)v5, &qword_10082A988);
    }
    else
    {
      sub_10003F510((uint64_t)v5, (uint64_t)v10, &qword_100829F80);
      sub_10003F510((uint64_t)v10, v24, &qword_100829F80);
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
        v13 = (_QWORD *)sub_100095020(0, v13[2] + 1, 1, (unint64_t)v13);
      v19 = v13[2];
      v18 = v13[3];
      if (v19 >= v18 >> 1)
        v13 = (_QWORD *)sub_100095020(v18 > 1, v19 + 1, 1, (unint64_t)v13);
      v13[2] = v19 + 1;
      sub_10003F510(v24, (uint64_t)v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v19, &qword_100829F80);
    }
    v12 += 2;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease(v22);
  return v13;
}

double sub_1000A2794(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  double v20;
  _BYTE v22[16];

  v7 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for SearchTagsRibbonViewLayout(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews);
  swift_bridgeObjectRetain(v16);
  v18 = sub_1000A2524(v17);
  v19 = swift_bridgeObjectRelease(v16);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, v3 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metrics, v7, v19);
  SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)(v18, v11, *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_shouldEvenlyDistribute));
  v20 = SearchTagsRibbonViewLayout.measurements(fitting:in:)(a1, a2, a3);
  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
  return v20;
}

void sub_1000A2988(uint64_t a1, char a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  char *v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  _QWORD *v53;

  v7 = type metadata accessor for MetadataRibbonItemViewType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_shouldEvenlyDistribute] = a2;
  v53 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v34 = a1;
    else
      v34 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v34);
    if (v11)
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRelease(a1);
    v33 = _swiftEmptyArrayStorage;
    goto LABEL_36;
  }
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v11)
    goto LABEL_35;
LABEL_3:
  if (v11 < 1)
  {
    __break(1u);
    return;
  }
  v44 = v3;
  v45 = a3;
  v12 = 0;
  v13 = a1 & 0xC000000000000001;
  v14 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
  v52 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
  v51 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
  v50 = enum case for MetadataRibbonItemViewType.starRating(_:);
  v49 = enum case for MetadataRibbonItemViewType.textLabel(_:);
  v48 = enum case for MetadataRibbonItemViewType.divider(_:);
  v47 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
  v46 = v10;
  do
  {
    if (v13)
    {
      v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
    }
    else
    {
      v15 = *(_QWORD *)(a1 + 8 * v12 + 32);
      v16 = swift_retain(v15);
    }
    MetadataRibbonItem.viewContainerType.getter(v16);
    v17 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
    if ((_DWORD)v17 == (_DWORD)v14
      || (_DWORD)v17 == v52
      || (_DWORD)v17 == v51
      || (_DWORD)v17 == v50
      || (_DWORD)v17 == v49
      || (_DWORD)v17 == v48
      || (_DWORD)v17 == v47)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v24 = v14;
      v25 = v13;
      v26 = v7;
      v27 = v8;
      v28 = v11;
      v29 = a1;
      v30 = v53[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
      v31 = v30;
      a1 = v29;
      v11 = v28;
      v8 = v27;
      v7 = v26;
      v13 = v25;
      v14 = v24;
      v10 = v46;
      v32 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v15);
      specialized ContiguousArray._endMutation()(v32);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_release(v15);
    }
    ++v12;
  }
  while (v11 != v12);
  swift_bridgeObjectRelease(a1);
  v33 = v53;
  v3 = v44;
  a3 = v45;
LABEL_36:
  v35 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels];
  *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels] = v33;
  swift_bridgeObjectRelease(v35);
  swift_retain(a3);
  v36 = v3;
  v38 = sub_1000A443C(a1, a3, v36, v37);
  swift_release(a3);

  v39 = OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews;
  v40 = *(_QWORD *)&v36[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews];
  v41 = *(_QWORD *)(v40 + 16);
  if (v41)
  {
    *(_QWORD *)&v42 = swift_bridgeObjectRetain(*(_QWORD *)&v36[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews]).n128_u64[0];
    v43 = 32;
    do
    {
      objc_msgSend(*(id *)(v40 + v43), "removeFromSuperview", v42, v44, v45);
      v43 += 16;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease(v40);
    v40 = *(_QWORD *)&v36[v39];
  }
  *(_QWORD *)&v36[v39] = v38;
  swift_bridgeObjectRelease(v40);
  sub_1000A2270();
  objc_msgSend(v36, "setNeedsLayout");
}

uint64_t sub_1000A2D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  swift_getObjectType();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels);
  swift_bridgeObjectRetain(v1);
  v3 = sub_1000F69D8(v2, 0);
  swift_bridgeObjectRelease(v1);
  return v3 & 1;
}

id sub_1000A2DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v1);
  v2 = OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    *(_QWORD *)&v5 = swift_bridgeObjectRetain(*(_QWORD *)(v0
                                                        + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews)).n128_u64[0];
    v6 = 32;
    do
    {
      objc_msgSend(*(id *)(v3 + v6), "removeFromSuperview", v5);
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v3);
    v3 = *(_QWORD *)(v0 + v2);
  }
  *(_QWORD *)(v0 + v2) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v3);
  return sub_1000A2270();
}

void sub_1000A2E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  char *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  id v33;
  __n128 v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45[24];
  char v46[24];

  v4 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v46, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v12 = (char *)Strong;
    v13 = a2 + 16;
    swift_beginAccess(v13, v45, 0, 0);
    v14 = swift_weakLoadStrong(v13);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)&v12[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels];
      if (v16
        && (v17 = *(_QWORD *)&v12[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews],
            (v18 = *(_QWORD *)(v17 + 16)) != 0))
      {
        v19 = *(void **)(v17 + 32);
        v20 = v16 & 0xFFFFFFFFFFFFFF8;
        v40 = *(_QWORD *)&v12[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews];
        v44 = v16;
        v38 = v16 & 0xFFFFFFFFFFFFFF8;
        if ((unint64_t)v16 >> 62)
          goto LABEL_27;
        v21 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRetain(v17);
        v16 = v19;
        if (v21)
        {
          do
          {
            v37 = v15;
            v39 = v10;
            v17 = 0;
            v22 = v44;
            v20 = v44 & 0xC000000000000001;
            v41 = v21 - 1;
            v42 = v18 - 1;
            v43 = v44 & 0xC000000000000001;
            v18 = 48;
            v15 = v40;
            if ((v44 & 0xC000000000000001) != 0)
            {
LABEL_8:
              v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v22);
              goto LABEL_11;
            }
            while (v17 < *(_QWORD *)(v38 + 16))
            {
              v10 = *(char **)(v22 + 8 * v17 + 32);
              v23 = swift_retain(v10);
LABEL_11:
              dispatch thunk of MetadataRibbonItem.impressionMetrics.getter(v23);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
              {
                swift_release(v10);

                v16 = sub_1000057AC((uint64_t)v6, &qword_10082E4B0);
              }
              else
              {
                v24 = v39;
                (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v39, v6, v7);
                if ((objc_msgSend(v19, "isHidden", v37) & 1) != 0)
                {
                  (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v7);
                  swift_release(v10);

                }
                else
                {
                  objc_msgSend(v19, "frame");
                  v26 = v25;
                  v28 = v27;
                  v30 = v29;
                  v32 = v31;
                  v33 = objc_msgSend(v12, "superview");
                  objc_msgSend(v12, "convertRect:toView:", v33, v26, v28, v30, v32);

                  ImpressionsCalculator.addElement(_:at:)(v24);
                  v34 = swift_release(v10);
                  v16 = (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v24, v7, v34);
                }
                v15 = v40;
              }
              if (v42 == v17)
              {
LABEL_24:

                swift_release(v37);
                swift_bridgeObjectRelease(v44);
                swift_bridgeObjectRelease(v15);
                return;
              }
              v20 = *(_QWORD *)(v15 + 16);
              if (v17 + 1 >= v20)
              {
                __break(1u);
                break;
              }
              if (v41 == v17)
                goto LABEL_24;
              v16 = (uint64_t)*(id *)(v15 + v18);
              v19 = (void *)v16;
              ++v17;
              v18 += 16;
              v22 = v44;
              if (v43)
                goto LABEL_8;
            }
            __break(1u);
LABEL_27:
            if (v16 >= 0)
              v35 = v20;
            else
              v35 = v16;
            swift_bridgeObjectRetain(v16);
            swift_bridgeObjectRetain(v17);
            v36 = v19;
            v16 = _CocoaArrayWrapper.endIndex.getter(v35);
            v21 = v16;
          }
          while (v16);
        }

        swift_release(v15);
        swift_bridgeObjectRelease(v44);
        swift_bridgeObjectRelease(v40);

      }
      else
      {

        swift_release(v15);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_1000A32B0()
{
  return type metadata accessor for SearchTagsRibbonView(0);
}

uint64_t type metadata accessor for SearchTagsRibbonView(uint64_t a1)
{
  uint64_t result;

  result = qword_10082A958;
  if (!qword_10082A958)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchTagsRibbonView);
  return result;
}

uint64_t sub_1000A32F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\b";
    v4[3] = &unk_1006622B0;
    v4[4] = &unk_1006622B0;
    v4[5] = "\b";
    v4[6] = &unk_1006622C8;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000A3390()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsCalculator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1000A33D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_1000A3428(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsCalculator, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1000A346C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_10003A340(*v1, v1[1]);
  return v2;
}

uint64_t sub_1000A34C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10003A350(v6, v7);
}

uint64_t (*sub_1000A3520(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock, a1, 33, 0);
  return j_j__swift_endAccess;
}

void (*sub_1000A3564(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject(&unk_100757CE8, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16, v2);
  v5 = swift_allocObject(&unk_100757D10, 24, 7);
  swift_weakInit(v5 + 16, a2);
  v6 = swift_allocObject(&unk_100757D38, 32, 7);
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  return sub_1000A36A4;
}

uint64_t sub_1000A35F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(v3, a2);
  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, ObjectType, a3);
}

uint64_t sub_1000A3630()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A3654()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A3678()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000A36A4()
{
  uint64_t v0;

  sub_1000A2E40(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_1000A36AC(void *a1)
{
  return objc_msgSend(a1, "setNeedsLayout");
}

uint64_t sub_1000A36B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[3];
  v3 = a1[4];
  sub_100060B40(a1, v2);
  v4 = UIMutableTraits.preferredContentSizeCategory.getter(v2, v3);
  if (qword_100826B00 != -1)
    swift_once(&qword_100826B00, sub_1000A202C);
  v5 = (id)qword_10082A920;
  v6 = static UIContentSizeCategory.< infix(_:_:)(v5, v4);
  if ((v6 & 1) != 0)
    v7 = (void *)v4;
  else
    v7 = v5;
  if ((v6 & 1) != 0)
    v4 = (uint64_t)v5;

  v8 = a1[3];
  v9 = a1[4];
  sub_100063B70((uint64_t)a1, v8);
  return UIMutableTraits.preferredContentSizeCategory.setter(v4, v8, v9);
}

void sub_1000A3778(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  _QWORD *v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  int v41;
  uint64_t v42;
  unint64_t *v43;
  uint64_t (*v44)(uint64_t);
  void *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  double v59;
  Swift::Int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  Swift::String v71;
  Swift::String v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  __int128 *v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  __n128 v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  id v98;
  void *v99;
  int v100;
  int v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  int v107;
  int v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  __int128 *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  unint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  _QWORD v138[5];

  v6 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SearchTagsRibbonViewLayout(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for LabelPlaceholder(0, v12);
  v117 = *(_QWORD *)(v118 - 8);
  v15 = __chkstk_darwin(v118);
  v116 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for DynamicTextAppearance(0, v15);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v128 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v113 = (char *)&v100 - v19;
  __chkstk_darwin(v20);
  v112 = (char *)&v100 - v21;
  v22 = sub_10007B804(&qword_100829F80);
  v127 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v119 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v132 = (uint64_t)&v100 - v25;
  __chkstk_darwin(v26);
  v137 = (uint64_t)&v100 - v27;
  v28 = type metadata accessor for MetadataRibbonItemViewType(0);
  v130 = *(_QWORD *)(v28 - 8);
  v131 = v28;
  __chkstk_darwin(v28);
  v129 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for MetadataRibbonItem(0);
  if ((Array.isNotEmpty.getter(a1, v30) & 1) == 0)
    return;
  v111 = UITraitCollection.modifyingTraits(_:)(sub_1000A36B8, v31);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v93 = a1;
    else
      v93 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v32 = _CocoaArrayWrapper.endIndex.getter(v93);
    if (v32)
      goto LABEL_4;
LABEL_40:
    v91 = swift_bridgeObjectRelease(a1);
    v92 = _swiftEmptyArrayStorage;
LABEL_41:
    static SearchTagsRibbonViewLayout.Metrics.standard.getter(v91);
    SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)(v92, v9, 0);
    type metadata accessor for TraitEnvironmentPlaceholder(0);
    v94 = sub_10007B804((uint64_t *)&unk_10082B4A0);
    v95 = swift_allocObject(v94, 40, 7);
    *(_OWORD *)(v95 + 16) = xmmword_100661700;
    v96 = (void *)v111;
    *(_QWORD *)(v95 + 32) = v111;
    v138[0] = v95;
    specialized Array._endMutation()(v95);
    v97 = v138[0];
    v98 = v96;
    v99 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v97);
    SearchTagsRibbonViewLayout.measurements(fitting:in:)(v99, a2, a3);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return;
  }
  v32 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v32)
    goto LABEL_40;
LABEL_4:
  if (v32 >= 1)
  {
    v102 = v9;
    v103 = v14;
    v104 = v11;
    v105 = v10;
    v33 = 0;
    v126 = a1 & 0xC000000000000001;
    v125 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    v110 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    v108 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    v107 = enum case for MetadataRibbonItemViewType.starRating(_:);
    v122 = v137 + 40;
    v106 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    v101 = enum case for MetadataRibbonItemViewType.divider(_:);
    v121 = (__int128 *)(v132 + 40);
    v100 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    v34 = (uint64_t)v119;
    v120 = v119 + 40;
    v35 = JUMeasuringSizeCompressed[0];
    v36 = JUMeasuringSizeCompressed[1];
    v37 = _swiftEmptyArrayStorage;
    v124 = a1;
    v109 = v22;
    v123 = v32;
    while (1)
    {
      if (v126)
      {
        v38 = specialized _ArrayBuffer._getElementSlowPath(_:)(v33, a1);
      }
      else
      {
        v38 = *(_QWORD *)(a1 + 8 * v33 + 32);
        v39 = swift_retain(v38);
      }
      v40 = v129;
      MetadataRibbonItem.viewContainerType.getter(v39);
      v41 = (*(uint64_t (**)(char *, uint64_t))(v130 + 88))(v40, v131);
      v135 = v33;
      v136 = v37;
      if (v41 == v125)
        break;
      if (v41 == v110)
      {
        v42 = type metadata accessor for MetadataRibbonEditorsChoiceView(0);
        v43 = (unint64_t *)&unk_10082D5E0;
        v44 = type metadata accessor for MetadataRibbonEditorsChoiceView;
        v45 = &unk_10066F690;
        goto LABEL_23;
      }
      if (v41 == v108)
      {
        v42 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        v43 = (unint64_t *)&unk_10082A978;
        v44 = type metadata accessor for MetadataRibbonIconWithLabelView;
        v45 = &unk_100666D70;
        goto LABEL_23;
      }
      if (v41 == v107)
      {
        v42 = type metadata accessor for MetadataRibbonStarRatingView(0);
        v43 = (unint64_t *)&unk_10082D5F0;
        v44 = type metadata accessor for MetadataRibbonStarRatingView;
        v45 = &unk_1006850A0;
        goto LABEL_23;
      }
      if (v41 == v106)
      {
        v42 = type metadata accessor for MetadataRibbonTagView(0);
        v43 = (unint64_t *)&unk_10082A970;
        v44 = type metadata accessor for MetadataRibbonTagView;
        v45 = &unk_10066E568;
        goto LABEL_23;
      }
      if (v41 == v101)
      {
        v42 = type metadata accessor for MetadataRibbonBarView(0);
        v43 = (unint64_t *)&unk_10082D5D0;
        v44 = type metadata accessor for MetadataRibbonBarView;
        v45 = &unk_100678768;
        goto LABEL_23;
      }
      if (v41 == v100)
      {
        v42 = type metadata accessor for MetadataRibbonHighlightedTextView(0);
        v43 = (unint64_t *)&unk_10082A968;
        v44 = type metadata accessor for MetadataRibbonHighlightedTextView;
        v45 = &unk_10066E2E8;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v130 + 8))(v129, v131);
      swift_release(v38);
      a1 = v124;
      v86 = v123;
LABEL_32:
      if (v86 == ++v33)
      {
        v91 = swift_bridgeObjectRelease(a1);
        v10 = v105;
        v92 = v37;
        v11 = v104;
        v14 = v103;
        v9 = v102;
        goto LABEL_41;
      }
    }
    v42 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView(0);
    v43 = (unint64_t *)&unk_10082A980;
    v44 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
    v45 = &unk_100661980;
LABEL_23:
    v46 = sub_100005C94(v43, v44, (uint64_t)v45);
    v47 = (_QWORD *)swift_allocObject(&unk_100757D60, 40, 7);
    v47[2] = v42;
    v47[3] = v46;
    v47[4] = v38;
    v48 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
    v49 = swift_retain(v38);
    v50 = LayoutViewPlaceholder.init(measureWith:)(sub_1000A4304, v47, v49);
    v51 = v137;
    v52 = v137 + *(int *)(v22 + 96);
    MetadataRibbonItem.id.getter();
    *(_QWORD *)(v51 + 64) = v48;
    *(_QWORD *)(v51 + 72) = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)(v51 + 40) = v50;
    v133 = v50;
    v53 = swift_retain(v50);
    *(_BYTE *)(v51 + 80) = dispatch thunk of static MetadataRibbonItemView.isBaselineAligned.getter(v42, v46, v53) & 1;
    *(_BYTE *)(v51 + 81) = dispatch thunk of static MetadataRibbonItemView.shouldForceIntrinsicSizeDuringLayout.getter(v42, v46) & 1;
    MetadataRibbonItem.itemType.getter();
    v54 = type metadata accessor for MetadataRibbonItemType(0);
    v55 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v52, 0, 1, v54);
    v134 = v38;
    v56 = dispatch thunk of MetadataRibbonItem.maxCharacterCount.getter(v55);
    v58 = v57;
    v59 = 0.0;
    if ((v57 & 1) == 0)
    {
      v60 = v56;
      v61 = DynamicTextAppearance.init()(v56);
      static CustomTextStyle<>.metadataRibbon.getter(v61);
      if (qword_100829178 != -1)
        swift_once(&qword_100829178, sub_1005BC28C);
      v62 = type metadata accessor for MetadataRibbonTextStyle(0);
      v63 = sub_10007AF70(v62, (uint64_t)qword_100890620);
      v138[3] = v62;
      v138[4] = sub_100005C94((unint64_t *)&qword_100829F20, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
      v64 = sub_100024638(v138);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v64, v63, v62);
      v65 = v113;
      v66 = v128;
      DynamicTextAppearance.withCustomTextStyle(_:)(v138);
      v67 = v114;
      v68 = *(void (**)(char *, uint64_t))(v114 + 8);
      v69 = v115;
      v68(v66, v115);
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v138);
      v70 = v112;
      DynamicTextAppearance.withNumberOfLines(_:)(1);
      v68(v65, v69);
      v71._countAndFlagsBits = 77;
      v71._object = (void *)0xE100000000000000;
      v72 = String.init(repeating:count:)(v71, v60);
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v65, v70, v69);
      v73 = LabelPlaceholder.Options.init(rawValue:)(0);
      v74 = v116;
      LabelPlaceholder.init(_:with:where:)(v72._countAndFlagsBits, v72._object, v65, v73);
      v59 = LabelPlaceholder.measure(toFit:with:)(v35, v36);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v74, v118);
      v68(v70, v69);
      v22 = v109;
      v34 = (uint64_t)v119;
    }
    v75 = v137;
    v76 = v137 + *(int *)(v22 + 112);
    *(double *)v76 = v59;
    v77 = v58 & 1;
    *(_BYTE *)(v76 + 8) = v77;
    v78 = v132;
    v79 = v132 + *(int *)(v22 + 96);
    sub_100061BC0(v75, v132);
    v80 = v121;
    sub_100022500(v122, (uint64_t)v121);
    v81 = *(_BYTE *)(v75 + 80);
    v82 = *(_BYTE *)(v75 + 81);
    sub_1000A4330(v52, v79);
    v83 = v34 + *(int *)(v22 + 96);
    v84 = v34 + *(int *)(v22 + 112);
    v85 = *(_OWORD *)(v78 + 16);
    *(_OWORD *)v34 = *(_OWORD *)v78;
    *(_OWORD *)(v34 + 16) = v85;
    *(_QWORD *)(v34 + 32) = *(_QWORD *)(v78 + 32);
    sub_10000F5F4(v80, (uint64_t)v120);
    *(_BYTE *)(v34 + 80) = v81;
    *(_BYTE *)(v34 + 81) = v82;
    sub_10003F510(v79, v83, &qword_100829F18);
    *(double *)v84 = v59;
    *(_BYTE *)(v84 + 8) = v77;
    v37 = v136;
    if ((swift_isUniquelyReferenced_nonNull_native(v136) & 1) == 0)
      v37 = (_QWORD *)sub_100095020(0, v37[2] + 1, 1, (unint64_t)v37);
    a1 = v124;
    v86 = v123;
    v87 = v134;
    v33 = v135;
    v88 = v133;
    v90 = v37[2];
    v89 = v37[3];
    if (v90 >= v89 >> 1)
      v37 = (_QWORD *)sub_100095020(v89 > 1, v90 + 1, 1, (unint64_t)v37);
    v37[2] = v90 + 1;
    sub_10003F510(v34, (uint64_t)v37+ ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80))+ *(_QWORD *)(v127 + 72) * v90, &qword_100829F80);
    swift_release(v88);
    swift_release(v87);
    sub_1000057AC(v137, &qword_100829F80);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_1000A42E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A4304(uint64_t a1)
{
  uint64_t v1;

  return dispatch thunk of static MetadataRibbonItemView.measurements(for:fitting:in:)(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1000A4330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804(&qword_100829F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000A4378()
{
  _BYTE *v0;
  _QWORD *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews] = &_swiftEmptyArrayStorage;
  static SearchTagsRibbonViewLayout.Metrics.standard.getter();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels] = 0;
  v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_shouldEvenlyDistribute] = 1;
  v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_isInsideSearchAd] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsCalculator] = 0;
  v1 = &v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock];
  *v1 = 0;
  v1[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/SearchTagsRibbonView.swift", 35, 2, 43, 0);
  __break(1u);
}

_QWORD *sub_1000A443C(uint64_t a1, uint64_t a2, void *a3, __n128 a4)
{
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _BYTE *v27;
  int v28;
  void *v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t (*v32)(uint64_t);
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(_BYTE *, uint64_t);
  uint64_t v51;
  _BYTE *v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t v55;
  _BYTE *v56;
  double v57;
  double v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v67;
  _BYTE v68[4];
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  int v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  Swift::Int v85;
  uint64_t v86;
  int v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  unint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD v102[5];

  v94 = a2;
  v84 = type metadata accessor for LabelPlaceholder(0, a4);
  v83 = *(_QWORD *)(v84 - 8);
  v6 = __chkstk_darwin(v84);
  v82 = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v81 = type metadata accessor for DynamicTextAppearance(0, v6);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v93 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v79 = &v68[-v10];
  __chkstk_darwin(v11);
  v78 = &v68[-v12];
  v13 = sub_10007B804(&qword_100829F18);
  __chkstk_darwin(v13);
  v15 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for MetadataRibbonItemViewType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v95 = &v68[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((unint64_t)a1 >> 62)
    goto LABEL_38;
  v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v19)
  {
    v88 = v15;
    v92 = a1 & 0xC000000000000001;
    v91 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    v77 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    v73 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    v72 = enum case for MetadataRibbonItemViewType.starRating(_:);
    v71 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    v70 = enum case for MetadataRibbonItemViewType.divider(_:);
    v20 = 4;
    v69 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    v21 = JUMeasuringSizeCompressed[0];
    v22 = JUMeasuringSizeCompressed[1];
    v23 = _swiftEmptyArrayStorage;
    v89 = a1;
    v76 = a3;
    v75 = v16;
    v74 = v17;
    v90 = v19;
    while (1)
    {
      v101 = v23;
      v15 = (_BYTE *)(v20 - 4);
      if (!v92)
        break;
      v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, a1);
      v26 = v20 - 3;
      if (__OFADD__(v15, 1))
        goto LABEL_37;
LABEL_9:
      v98 = v26;
      v27 = v95;
      v100 = v24;
      MetadataRibbonItem.viewContainerType.getter(v25);
      v28 = (*(uint64_t (**)(_BYTE *, uint64_t))(v17 + 88))(v27, v16);
      v97 = v20;
      if (v28 == v91)
      {
        v29 = a3;
        v30 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView(0);
        v31 = (unint64_t *)&unk_10082A980;
        v32 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
        v33 = &unk_100661980;
LABEL_23:
        v34 = sub_100005C94(v31, v32, (uint64_t)v33);
        v35 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v30)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
        dispatch thunk of MetadataRibbonItemView.apply(_:asPartOf:)(v100, v94, v30, v34);
        MetadataRibbonItem.id.getter(v102);
        v36 = dispatch thunk of MetadataRibbonItemView.id.setter(v102, v30, v34);
        v37 = v88;
        MetadataRibbonItem.itemType.getter(v36);
        v38 = type metadata accessor for MetadataRibbonItemType(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 0, 1, v38);
        v96 = v30;
        v99 = v34;
        v39 = dispatch thunk of MetadataRibbonItemView.itemType.setter(v37, v30, v34);
        v40 = dispatch thunk of MetadataRibbonItem.maxCharacterCount.getter(v39);
        LODWORD(v30) = v41;
        a3 = v29;
        v42 = objc_msgSend(v29, "traitCollection");
        if ((v30 & 1) != 0)
        {

          v58 = 0.0;
          a1 = v89;
        }
        else
        {
          v85 = v40;
          v86 = (uint64_t)v42;
          v87 = v30;
          v43 = DynamicTextAppearance.init()(v42);
          static CustomTextStyle<>.metadataRibbon.getter(v43);
          if (qword_100829178 != -1)
            swift_once(&qword_100829178, sub_1005BC28C);
          v44 = type metadata accessor for MetadataRibbonTextStyle(0);
          v45 = sub_10007AF70(v44, (uint64_t)qword_100890620);
          v102[3] = v44;
          v102[4] = sub_100005C94((unint64_t *)&qword_100829F20, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
          v46 = sub_100024638(v102);
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v46, v45, v44);
          v47 = v79;
          v48 = v93;
          DynamicTextAppearance.withCustomTextStyle(_:)(v102);
          v49 = v80;
          v50 = *(void (**)(_BYTE *, uint64_t))(v80 + 8);
          v51 = v81;
          v50(v48, v81);
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v102);
          v52 = v78;
          DynamicTextAppearance.withNumberOfLines(_:)(1);
          v50(v47, v51);
          v53._countAndFlagsBits = 77;
          v53._object = (void *)0xE100000000000000;
          v54 = String.init(repeating:count:)(v53, v85);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 16))(v47, v52, v51);
          v55 = LabelPlaceholder.Options.init(rawValue:)(0);
          v56 = v82;
          LabelPlaceholder.init(_:with:where:)(v54._countAndFlagsBits, v54._object, v47, v55);
          v30 = v86;
          v57 = LabelPlaceholder.measure(toFit:with:)(v21, v22);
          (*(void (**)(_BYTE *, uint64_t))(v83 + 8))(v56, v84);
          v50(v52, v51);

          v58 = v57;
          a1 = v89;
          a3 = v76;
          v16 = v75;
          v17 = v74;
          LOBYTE(v30) = v87;
        }
        dispatch thunk of MetadataRibbonItemView.labelMaxWidth.setter(*(_QWORD *)&v58, v30 & 1, v96, v99);
        swift_release(v100);
        if ((swift_isUniquelyReferenced_nonNull_native(v101) & 1) != 0)
          v23 = v101;
        else
          v23 = sub_10009595C(0, v101[2] + 1, 1, v101);
        v60 = v23[2];
        v59 = v23[3];
        if (v60 >= v59 >> 1)
          v23 = sub_10009595C((_QWORD *)(v59 > 1), v60 + 1, 1, v23);
        v23[2] = v60 + 1;
        v61 = &v23[2 * v60];
        v62 = v99;
        v61[4] = v35;
        v61[5] = v62;
        v63 = v90;
        v64 = v97;
        goto LABEL_33;
      }
      if (v28 == v77)
      {
        v29 = a3;
        v30 = type metadata accessor for MetadataRibbonEditorsChoiceView(0);
        v31 = (unint64_t *)&unk_10082D5E0;
        v32 = type metadata accessor for MetadataRibbonEditorsChoiceView;
        v33 = &unk_10066F690;
        goto LABEL_23;
      }
      if (v28 == v73)
      {
        v29 = a3;
        v30 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        v31 = (unint64_t *)&unk_10082A978;
        v32 = type metadata accessor for MetadataRibbonIconWithLabelView;
        v33 = &unk_100666D70;
        goto LABEL_23;
      }
      if (v28 == v72)
      {
        v29 = a3;
        v30 = type metadata accessor for MetadataRibbonStarRatingView(0);
        v31 = (unint64_t *)&unk_10082D5F0;
        v32 = type metadata accessor for MetadataRibbonStarRatingView;
        v33 = &unk_1006850A0;
        goto LABEL_23;
      }
      if (v28 == v71)
      {
        v29 = a3;
        v30 = type metadata accessor for MetadataRibbonTagView(0);
        v31 = (unint64_t *)&unk_10082A970;
        v32 = type metadata accessor for MetadataRibbonTagView;
        v33 = &unk_10066E568;
        goto LABEL_23;
      }
      if (v28 == v70)
      {
        v29 = a3;
        v30 = type metadata accessor for MetadataRibbonBarView(0);
        v31 = (unint64_t *)&unk_10082D5D0;
        v32 = type metadata accessor for MetadataRibbonBarView;
        v33 = &unk_100678768;
        goto LABEL_23;
      }
      if (v28 == v69)
      {
        v29 = a3;
        v30 = type metadata accessor for MetadataRibbonHighlightedTextView(0);
        v31 = (unint64_t *)&unk_10082A968;
        v32 = type metadata accessor for MetadataRibbonHighlightedTextView;
        v33 = &unk_10066E2E8;
        goto LABEL_23;
      }
      (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v95, v16);
      swift_release(v100);
      v63 = v90;
      v64 = v97;
      v23 = v101;
LABEL_33:
      v20 = v64 + 1;
      if (v98 == v63)
      {
        v65 = v23;
        swift_bridgeObjectRelease(a1);
        return v65;
      }
    }
    v25 = swift_retain(*(_QWORD *)(a1 + 8 * v20));
    v26 = v20 - 3;
    if (!__OFADD__(v15, 1))
      goto LABEL_9;
LABEL_37:
    __break(1u);
LABEL_38:
    if (a1 < 0)
      v67 = a1;
    else
      v67 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v19 = _CocoaArrayWrapper.endIndex.getter(v67);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1000A4CCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  NSString v26;
  double v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t inited;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  char *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  objc_class *v77;
  char *v78;
  NSString v79;
  id v80;
  id v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  objc_class *v94;
  char *v95;
  uint64_t *v96;
  uint64_t v97;
  char *v98;
  void *v99;
  uint64_t v100;
  NSString v101;
  double v102;
  id v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v110;
  __int128 v111;
  char v112;
  objc_super v113;
  objc_super v114;
  char v115[40];
  char v116[40];
  char v117;
  objc_super v118;
  unint64_t v119;

  v3 = type metadata accessor for ShareSheetData.Metadata(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (uint64_t *)((char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v119 = (unint64_t)_swiftEmptyArrayStorage;
  ShareSheetData.metadata.getter(v5);
  v8 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == enum case for ShareSheetData.Metadata.article(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v7, v3);
    v9 = *v7;
    v10 = objc_allocWithZone((Class)type metadata accessor for URLActivityItemProvider());
    swift_retain(v1);
    swift_retain(a1);
    v11 = sub_1005D74E8(v1, a1, (uint64_t)&_swiftEmptySetSingleton);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v13 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v12 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v13 >= v12 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
    v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
    v15 = specialized Array._endMutation()(v14);
    v16 = ShareSheetArticleMetadata.text.getter(v15);
    v18 = v17;
    v19 = (objc_class *)type metadata accessor for TextActivityItemProvider();
    v20 = (char *)objc_allocWithZone(v19);
    v21 = (uint64_t *)&v20[OBJC_IVAR____TtC8AppStore24TextActivityItemProvider_text];
    *v21 = v16;
    v21[1] = v18;
    v22 = qword_100826F30;
    v23 = v20;
    swift_bridgeObjectRetain(v18);
    if (v22 != -1)
      swift_once(&qword_100826F30, sub_1001793D0);
    v24 = (void *)qword_100830F70;
    swift_bridgeObjectRetain(qword_100830F70);
    sub_1000A5538((uint64_t)&_swiftEmptySetSingleton, v24);
    *(_QWORD *)&v23[OBJC_IVAR____TtC8AppStore24TextActivityItemProvider_excludedActivityTypes] = v25;

    v26 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v18).n128_u64[0];
    v113.receiver = v23;
    v113.super_class = v19;
    v28 = objc_msgSendSuper2(&v113, "initWithPlaceholderItem:", v26, v27);

    v29 = v28;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    v31 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v30 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v31 >= v30 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
    v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
    v33 = specialized Array._endMutation()(v32);
    v34 = ShareSheetArticleMetadata.artwork.getter(v33);
    if (v34)
    {
      v35 = v34;
      v36 = sub_10007B804((uint64_t *)&unk_1008509A0);
      v37 = &v112;
LABEL_10:
      inited = swift_initStackObject(v36, v37);
      *(_OWORD *)(inited + 16) = xmmword_100661A30;
      v39 = (void *)UIActivityTypeSaveToNotes;
      *(_QWORD *)(inited + 32) = UIActivityTypeSaveToNotes;
      swift_retain(a1);
      swift_retain(v35);
      v40 = v39;
      sub_1000D8EA4(inited);
      v42 = v41;
      swift_setDeallocating(inited);
      type metadata accessor for ActivityType(0);
      swift_arrayDestroy(inited + 32, 1, v43);
      v44 = objc_allocWithZone((Class)type metadata accessor for ArtworkActivityItemProvider());
      v45 = sub_1003C9F9C(v35, a1, v42);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
      v47 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v46 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v47 >= v46 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
      v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v45);
      specialized Array._endMutation()(v48);
      swift_release(v9);

      v49 = v35;
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v8 == enum case for ShareSheetData.Metadata.product(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v7, v3);
    v50 = *v7;
    v51 = sub_10007B804((uint64_t *)&unk_1008509A0);
    v52 = swift_initStackObject(v51, v116);
    v111 = xmmword_100661A30;
    *(_OWORD *)(v52 + 16) = xmmword_100661A30;
    v53 = (void *)UIActivityTypeSaveToNotes;
    *(_QWORD *)(v52 + 32) = UIActivityTypeSaveToNotes;
    swift_retain(v1);
    swift_retain(a1);
    v54 = v53;
    sub_1000D8EA4(v52);
    v56 = v55;
    swift_setDeallocating(v52);
    type metadata accessor for ActivityType(0);
    v58 = v57;
    swift_arrayDestroy(v52 + 32, 1, v57);
    v59 = objc_allocWithZone((Class)type metadata accessor for URLActivityItemProvider());
    v11 = sub_1005D74E8(v1, a1, v56);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v60 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v61 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v60 >= v61 >> 1)
    {
      v110 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v60 + 1, 1);
      v60 = v110;
    }
    v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v11);
    v63 = specialized Array._endMutation()(v62);
    v64 = ShareSheetProductMetadata.icon.getter(v63);
    v65 = swift_initStackObject(v51, v115);
    *(_OWORD *)(v65 + 16) = v111;
    *(_QWORD *)(v65 + 32) = v54;
    swift_retain(a1);
    v66 = v54;
    sub_1000D8EA4(v65);
    v68 = v67;
    swift_setDeallocating(v65);
    swift_arrayDestroy(v65 + 32, 1, v58);
    v69 = objc_allocWithZone((Class)type metadata accessor for ArtworkActivityItemProvider());
    v70 = sub_1003C9F9C(v64, a1, v68);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
    v72 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v71 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v72 >= v71 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
    v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
    v74 = specialized Array._endMutation()(v73);
    v75 = ShareSheetProductMetadata.notesMetadata.getter(v74);
    if (v75)
    {
      v76 = v75;
      v77 = (objc_class *)type metadata accessor for NotesMetadataActivityItemProvider();
      v78 = (char *)objc_allocWithZone(v77);
      *(_OWORD *)&v78[OBJC_IVAR____TtC8AppStore33NotesMetadataActivityItemProvider____lazy_storage___notesMetadata] = xmmword_100662360;
      *(_QWORD *)&v78[OBJC_IVAR____TtC8AppStore33NotesMetadataActivityItemProvider_metadata] = v76;
      swift_retain(v76);
      v79 = String._bridgeToObjectiveC()();
      v114.receiver = v78;
      v114.super_class = v77;
      v80 = objc_msgSendSuper2(&v114, "initWithPlaceholderItem:", v79);

      v81 = v80;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
      v83 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v82 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v83 >= v82 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v82 > 1, v83 + 1, 1);
      v84 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v83, v81);
      specialized Array._endMutation()(v84);
      swift_release(v50);

      v85 = v76;
    }
    else
    {
      v85 = v50;
    }
    swift_release(v85);

    goto LABEL_36;
  }
  if (v8 == enum case for ShareSheetData.Metadata.appEvent(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v7, v3);
    v9 = *v7;
    v86 = objc_allocWithZone((Class)type metadata accessor for URLActivityItemProvider());
    swift_retain(v1);
    swift_retain(a1);
    v11 = sub_1005D74E8(v1, a1, (uint64_t)&_swiftEmptySetSingleton);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v88 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v87 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v88 >= v87 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v87 > 1, v88 + 1, 1);
    v89 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v88, v11);
    v90 = specialized Array._endMutation()(v89);
    v91 = ShareSheetAppEventMetadata.text.getter(v90);
    v93 = v92;
    v94 = (objc_class *)type metadata accessor for TextActivityItemProvider();
    v95 = (char *)objc_allocWithZone(v94);
    v96 = (uint64_t *)&v95[OBJC_IVAR____TtC8AppStore24TextActivityItemProvider_text];
    *v96 = v91;
    v96[1] = v93;
    v97 = qword_100826F30;
    v98 = v95;
    swift_bridgeObjectRetain(v93);
    if (v97 != -1)
      swift_once(&qword_100826F30, sub_1001793D0);
    v99 = (void *)qword_100830F70;
    swift_bridgeObjectRetain(qword_100830F70);
    sub_1000A5538((uint64_t)&_swiftEmptySetSingleton, v99);
    *(_QWORD *)&v98[OBJC_IVAR____TtC8AppStore24TextActivityItemProvider_excludedActivityTypes] = v100;

    v101 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v102 = swift_bridgeObjectRelease(v93).n128_u64[0];
    v118.receiver = v98;
    v118.super_class = v94;
    v103 = objc_msgSendSuper2(&v118, "initWithPlaceholderItem:", v101, v102);

    v29 = v103;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    v105 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v104 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v105 >= v104 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v104 > 1, v105 + 1, 1);
    v106 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v105, v29);
    v107 = specialized Array._endMutation()(v106);
    v108 = ShareSheetAppEventMetadata.artwork.getter(v107);
    if (v108)
    {
      v35 = v108;
      v36 = sub_10007B804((uint64_t *)&unk_1008509A0);
      v37 = &v117;
      goto LABEL_10;
    }
LABEL_31:
    v49 = v9;
LABEL_32:
    swift_release(v49);

LABEL_36:
    return v119;
  }
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v7, v3);
  return v119;
}

void sub_1000A5538(uint64_t a1, void *a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  id v14[2];

  v3 = 0;
  v14[1] = a2;
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    sub_1001F5BCC(v14, *(id *)(*(_QWORD *)(a1 + 48) + 8 * v10));

  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1000A56A0()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  NSString v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "viewDidLoad");
  v1 = objc_msgSend(v0, "collectionView");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for SeparatorSupplementaryView(0);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3);
    v5 = String._bridgeToObjectiveC()();
    static UICollectionReusableView.defaultReuseIdentifier.getter(v6);
    v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", ObjCClassFromMetadata, v5, v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  }
}

void sub_1000A5780(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000A56A0();

}

double sub_1000A57B4()
{
  void *v0;
  id v1;
  double v2;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = static Separator.thickness(compatibleWith:)();

  return v2;
}

void sub_1000A5800(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;

  v3 = sub_10007B804(&qword_10082B110);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Uber.Style(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = dispatch thunk of BaseGenericPagePresenter.uber.getter(v8);
  if (v11)
  {
    v13 = v11;
    v14.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for Uber.Style.above(_:), v6);
    v15 = type metadata accessor for Uber.AssetType(0, v14);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v5, 1, 1, v15);
    v16 = type metadata accessor for Uber(0);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    swift_retain_n(v13, 2);
    v17 = Uber.init(style:assetType:artwork:compactArtwork:video:compactVideo:iconArtwork:title:)(v10, v5, v13, v13, 0, 0, 0, 0, 0);
    v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_uber];
    *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_uber] = v17;
    swift_retain(v17);
    sub_10019841C(v18);
    swift_release(v13);
    swift_release(v18);
    *(_QWORD *)&v12 = swift_release(v17).n128_u64[0];
  }
  v19 = objc_msgSend(v1, "collectionView", v12);
  sub_1003A16C4(a1, v19);

  sub_1000A6CF4((uint64_t (*)(void))sub_1000A617C);
}

double sub_1000A59D4(void *a1)
{
  id v1;
  uint64_t v2;
  double v3;
  double v4;

  v1 = a1;
  sub_1000A5A2C((uint64_t)v1, v2);
  v4 = v3;

  return v4;
}

void sub_1000A5A2C(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  double v4;
  double v5;
  id v6;
  id v7;
  id v8;
  id v9;
  BOOL v10;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  objc_msgSend(v2, "pageContainerSize");
  v5 = v4;
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = objc_msgSend(v6, "userInterfaceIdiom");

  if (v7 != (id)1
    || ((v8 = objc_msgSend(v2, "traitCollection"),
         v9 = objc_msgSend(v8, "horizontalSizeClass"),
         v8,
         v9 == (id)2)
      ? (v10 = v5 <= 672.0)
      : (v10 = 1),
        v10))
  {
    v11.receiver = v2;
    v11.super_class = ObjectType;
    objc_msgSendSuper2(&v11, "pageMarginInsets");
  }
  else
  {
    sub_1000A0258();
  }
}

id sub_1000A5B44(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  objc_class *ObjectType;
  NSString v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  NSIndexPath v14;
  id v15;
  NSString v16;
  objc_super v18;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  if (a2 == 0xD000000000000039 && a3 == 0x80000001006A75D0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0xD000000000000039, 0x80000001006A75D0, 0) & 1) != 0)
  {
    v9 = String._bridgeToObjectiveC()();
    type metadata accessor for SeparatorSupplementaryView(0);
    static UICollectionReusableView.defaultReuseIdentifier.getter(v10);
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v14.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v15 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v9, v13, v14.super.isa);

  }
  else
  {
    v16 = String._bridgeToObjectiveC()();
    v14.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v18.receiver = v4;
    v18.super_class = ObjectType;
    v15 = objc_msgSendSuper2(&v18, "collectionView:viewForSupplementaryElementOfKind:atIndexPath:", a1, v16, v14.super.isa);

  }
  return v15;
}

id sub_1000A5CB0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  __n128 v19;
  uint64_t v21;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v16 = a3;
  v17 = a1;
  v18 = sub_1000A5B44(v16, v13, v15);

  v19 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v19);
  return v18;
}

void sub_1000A5D98(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  char *v30;
  __n128 v31;
  void (*v32)(char *, uint64_t);
  NSString v33;
  Class isa;
  uint64_t v35;
  objc_class *ObjectType;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _BYTE v40[24];
  objc_super v41;

  v6 = v5;
  v37 = a5;
  v38 = a1;
  v39 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = type metadata accessor for ComponentSeparator.Position(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ComponentSeparator(0);
  v35 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v35 - v17;
  if ((a3 == 0xD000000000000039 && a4 == 0x80000001006A75D0
     || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, 0xD000000000000039, 0x80000001006A75D0, 0) & 1) != 0)
    && (v19 = type metadata accessor for SeparatorSupplementaryView(0), (v20 = swift_dynamicCastClass(v39, v19)) != 0))
  {
    v21 = (char *)v20;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for ComponentSeparator.Position.top(_:), v9);
    v22 = v39;
    sub_1000A5A2C((uint64_t)v22, v23);
    v25 = v24;
    sub_1000A5A2C(v26, v27);
    ComponentSeparator.init(position:leadingInset:trailingInset:)(v12, v25, v28);
    v29 = v35;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v15, v18, v13);
    v30 = &v21[OBJC_IVAR____TtC8AppStore26SeparatorSupplementaryView_separator];
    v31 = swift_beginAccess(&v21[OBJC_IVAR____TtC8AppStore26SeparatorSupplementaryView_separator], v40, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v29 + 24))(v30, v15, v13, v31);
    swift_endAccess(v40);
    objc_msgSend(v21, "setNeedsLayout");
    v32 = *(void (**)(char *, uint64_t))(v29 + 8);
    v32(v15, v13);

    v32(v18, v13);
  }
  else
  {
    v33 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v41.receiver = v6;
    v41.super_class = ObjectType;
    objc_msgSendSuper2(&v41, "collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:", v38, v39, v33, isa);

  }
}

uint64_t sub_1000A6014(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  uint64_t v23;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v17 = v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  v18 = a3;
  v19 = a4;
  v20 = a1;
  sub_1000A5D98((uint64_t)v18, v19, v15, v17, (uint64_t)v14);

  v21 = swift_bridgeObjectRelease(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
}

uint64_t type metadata accessor for VersionHistoryViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10082A9B8;
  if (!qword_10082A9B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for VersionHistoryViewController);
  return result;
}

uint64_t sub_1000A6148(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 256, 0, v2, a1 + 1448);
}

unint64_t sub_1000A617C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  double v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  NSString v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  NSString v42;
  id v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v49;
  unint64_t v50;

  v2 = type metadata accessor for ShelfBackground(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (id *)((char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __chkstk_darwin(v6);
  v9 = (id *)((char *)&v49 - v8);
  v50 = (unint64_t)_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)((char *)v0 + qword_10082CFB0);
  v11 = (*(double (**)(__n128))((swift_isaMask & *v0) + 0x4F8))(v7);
  v12 = sub_1000B0A48(v11);
  if (v12)
  {
    v13 = v12;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v1 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v1 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v1 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v13);
    specialized Array._endMutation()(v15);

  }
  v16 = sub_1000B05EC(v0, v10);
  if (v16)
  {
    v17 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v20);

  }
  v21 = type metadata accessor for GenericPagePresenter(0);
  v22 = sub_100005C94(&qword_10082AFE0, (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v21, v22) < 1)
    goto LABEL_14;
  dispatch thunk of ShelfPresenter.background(for:)(0, v21, v22);
  if ((*(unsigned int (**)(id *, uint64_t))(v3 + 88))(v9, v2) != enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(id *, uint64_t))(v3 + 8))(v9, v2);
    goto LABEL_14;
  }
  (*(void (**)(id *, uint64_t))(v3 + 96))(v9, v2);

  v23 = (char *)v9 + *(int *)(sub_10007B804(&qword_10082D0F0) + 48);
  v24 = type metadata accessor for ShelfBackgroundStyle(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v26 = objc_msgSend(v25, "fractionalWidthDimension:", 1.0);
  v27 = objc_msgSend(v25, "absoluteDimension:", 2000.0);
  v28 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v26, v27);

  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v28, v29, 1, 0.0, -2000.0);

  objc_msgSend(v30, "setExtendsBoundary:", 0);
  v9 = (id *)v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v1 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v31 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v1 >= v31 >> 1)
    goto LABEL_23;
  while (1)
  {
    v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v9);
    specialized Array._endMutation()(v32);

LABEL_14:
    if (dispatch thunk of ShelfPresenter.sectionCount.getter(v21, v22) < 1)
      break;
    v33 = dispatch thunk of ShelfPresenter.sectionCount.getter(v21, v22);
    v34 = __OFSUB__(v33, 1);
    v35 = v33 - 1;
    if (!v34)
    {
      dispatch thunk of ShelfPresenter.background(for:)(v35, v21, v22);
      if ((*(unsigned int (**)(id *, uint64_t))(v3 + 88))(v5, v2) == enum case for ShelfBackground.color(_:))
      {
        (*(void (**)(id *, uint64_t))(v3 + 96))(v5, v2);

        v36 = (char *)v5 + *(int *)(sub_10007B804(&qword_10082D0F0) + 48);
        v37 = type metadata accessor for ShelfBackgroundStyle(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
        v38 = (void *)objc_opt_self(NSCollectionLayoutDimension);
        v39 = objc_msgSend(v38, "fractionalWidthDimension:", 1.0);
        v40 = objc_msgSend(v38, "absoluteDimension:", 2000.0);
        v41 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v39, v40);

        v42 = String._bridgeToObjectiveC()();
        v43 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v41, v42, 5, 0.0, 2000.0);

        objc_msgSend(v43, "setExtendsBoundary:", 0);
        v44 = v43;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
        v46 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v45 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v46 >= v45 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
        v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v44);
        specialized Array._endMutation()(v47);

      }
      else
      {
        (*(void (**)(id *, uint64_t))(v3 + 8))(v5, v2);
      }
      return v50;
    }
    __break(1u);
LABEL_23:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v1 + 1, 1);
  }
  return v50;
}

unint64_t sub_1000A6768()
{
  char *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  NSString v35;
  id v36;
  id v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v42;
  unint64_t v43;

  v2 = type metadata accessor for ShelfBackground(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (id *)((char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v8 = (id *)((char *)&v42 - v7);
  v43 = (unint64_t)_swiftEmptyArrayStorage;
  v9 = sub_1000B05EC(v0, *(_QWORD *)&v0[qword_10082CFB0]);
  if (v9)
  {
    v10 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
    v12 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v11 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v12 >= v11 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
    v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
    specialized Array._endMutation()(v13);

  }
  v14 = type metadata accessor for ReviewsPagePresenter(0);
  v15 = sub_100005C94(&qword_10082B048, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v14, v15) < 1)
    goto LABEL_10;
  dispatch thunk of ShelfPresenter.background(for:)(0, v14, v15);
  if ((*(unsigned int (**)(id *, uint64_t))(v3 + 88))(v8, v2) != enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(id *, uint64_t))(v3 + 8))(v8, v2);
    goto LABEL_10;
  }
  (*(void (**)(id *, uint64_t))(v3 + 96))(v8, v2);

  v16 = (char *)v8 + *(int *)(sub_10007B804(&qword_10082D0F0) + 48);
  v17 = type metadata accessor for ShelfBackgroundStyle(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v18 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v19 = objc_msgSend(v18, "fractionalWidthDimension:", 1.0);
  v20 = objc_msgSend(v18, "absoluteDimension:", 2000.0);
  v21 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v19, v20);

  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v21, v22, 1, 0.0, -2000.0);

  objc_msgSend(v23, "setExtendsBoundary:", 0);
  v8 = (id *)v23;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v1 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v24 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v1 >= v24 >> 1)
    goto LABEL_19;
  while (1)
  {
    v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v8);
    specialized Array._endMutation()(v25);

LABEL_10:
    if (dispatch thunk of ShelfPresenter.sectionCount.getter(v14, v15) < 1)
      break;
    v26 = dispatch thunk of ShelfPresenter.sectionCount.getter(v14, v15);
    v27 = __OFSUB__(v26, 1);
    v28 = v26 - 1;
    if (!v27)
    {
      dispatch thunk of ShelfPresenter.background(for:)(v28, v14, v15);
      if ((*(unsigned int (**)(id *, uint64_t))(v3 + 88))(v5, v2) == enum case for ShelfBackground.color(_:))
      {
        (*(void (**)(id *, uint64_t))(v3 + 96))(v5, v2);

        v29 = (char *)v5 + *(int *)(sub_10007B804(&qword_10082D0F0) + 48);
        v30 = type metadata accessor for ShelfBackgroundStyle(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
        v31 = (void *)objc_opt_self(NSCollectionLayoutDimension);
        v32 = objc_msgSend(v31, "fractionalWidthDimension:", 1.0);
        v33 = objc_msgSend(v31, "absoluteDimension:", 2000.0);
        v34 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v32, v33);

        v35 = String._bridgeToObjectiveC()();
        v36 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v34, v35, 5, 0.0, 2000.0);

        objc_msgSend(v36, "setExtendsBoundary:", 0);
        v37 = v36;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
        v39 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v38 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v39 >= v38 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
        v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v37);
        specialized Array._endMutation()(v40);

      }
      else
      {
        (*(void (**)(id *, uint64_t))(v3 + 8))(v5, v2);
      }
      return v43;
    }
    __break(1u);
LABEL_19:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v1 + 1, 1);
  }
  return v43;
}

void sub_1000A6CDC()
{
  sub_1000A6CF4((uint64_t (*)(void))sub_1000A617C);
}

void sub_1000A6CE8()
{
  sub_1000A6CF4((uint64_t (*)(void))sub_1000A6768);
}

void sub_1000A6CF4(uint64_t (*a1)(void))
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  Class isa;
  void *v13;
  id v14;

  v3 = objc_msgSend(v1, "collectionView");
  if (v3)
  {
    v4 = v3;
    v14 = objc_msgSend(v3, "collectionViewLayout");

    if (v14)
    {
      v5 = type metadata accessor for BaseCollectionCompositionalLayout();
      v6 = (void *)swift_dynamicCastClass(v14, v5);
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, "configuration");
        v9 = sub_100008FE4(0, &qword_10082AFF0, UICollectionViewCompositionalLayoutConfiguration_ptr);
        v10 = (void *)NSCopying.makeCopy()(v9);

        v11 = a1();
        sub_100008FE4(0, &qword_10082C530, NSCollectionLayoutBoundarySupplementaryItem_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v10, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

        objc_msgSend(v7, "setConfiguration:", v10);
        v13 = v10;
      }
      else
      {
        v13 = v14;
      }

    }
  }
}

void sub_1000A6E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int64_t v27;
  _QWORD *v28;
  uint64_t v29;
  double (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD aBlock[5];
  uint64_t v65;
  uint64_t v66;

  v4 = v3;
  v60 = a1;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  v63 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexSet(0);
  v57 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v59 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804((uint64_t *)&unk_10082D0D0);
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v58 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(v3, "collectionView", v14);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "collectionViewLayout");

    objc_msgSend(v18, "invalidateLayout");
  }
  v19 = *(_QWORD *)&v4[qword_10082CFB0];
  v20 = objc_msgSend(v4, "collectionView");
  v56 = v19;
  if (!v20)
  {
    v23 = a3;
    goto LABEL_8;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "collectionViewLayout");

  v23 = a3;
  v20 = 0;
  if (!v22)
  {
LABEL_8:
    v26 = v59;
    v25 = v60;
    goto LABEL_9;
  }
  v24 = type metadata accessor for BaseCollectionCompositionalLayout();
  v20 = (id)swift_dynamicCastClass(v22, v24);
  v26 = v59;
  v25 = v60;
  if (!v20)
  {

    v20 = 0;
  }
LABEL_9:
  v55 = v20;
  v27 = *(_QWORD *)(v25 + 16);
  v28 = _swiftEmptyArrayStorage;
  if (v27)
  {
    v52 = a2;
    v53 = v23;
    v54 = v4;
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000FE840(0, v27, 0);
    v29 = v25 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
    v61 = *(_QWORD *)(v63 + 72);
    v30 = *(double (**)(char *, uint64_t, uint64_t))(v63 + 16);
    v31 = v11;
    do
    {
      v32 = v62;
      v33.n128_f64[0] = v30(v10, v29, v62);
      v34 = IndexPath.section.getter(v33);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v10, v32);
      v28 = (_QWORD *)aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native(aBlock[0]) & 1) == 0)
      {
        sub_1000FE840(0, v28[2] + 1, 1);
        v28 = (_QWORD *)aBlock[0];
      }
      v36 = v28[2];
      v35 = v28[3];
      if (v36 >= v35 >> 1)
      {
        sub_1000FE840(v35 > 1, v36 + 1, 1);
        v28 = (_QWORD *)aBlock[0];
      }
      v28[2] = v36 + 1;
      v28[v36 + 4] = v34;
      v29 += v61;
      --v27;
    }
    while (v27);
    v11 = v31;
    v23 = v53;
    v4 = v54;
    a2 = v52;
    v26 = v59;
  }
  v37 = sub_100005C94(&qword_10082D070, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of SetAlgebra.init()(v11);
  v38 = v28[2];
  if (v38)
  {
    v39 = v28 + 4;
    do
    {
      v40 = *v39++;
      v66 = v40;
      dispatch thunk of SetAlgebra.insert(_:)(aBlock, &v66, v11, v37);
      --v38;
    }
    while (v38);
  }
  v41 = swift_bridgeObjectRelease(v28);
  v43 = v57;
  v42 = (uint64_t)v58;
  (*(void (**)(char *, char *, uint64_t, __n128))(v57 + 32))(v58, v26, v11, v41);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v42, 0, 1, v11);
  sub_1000B0C90(v42, (uint64_t)sub_1000B0C60, (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter, &qword_10082AFE0, (uint64_t)sub_1000B0BFC);

  sub_1000057AC(v42, (uint64_t *)&unk_10082D0D0);
  v44 = objc_msgSend(v4, "collectionView");
  if (v44)
  {
    v45 = v44;
    v46 = (_QWORD *)swift_allocObject(&unk_100757DE0, 48, 7);
    v46[2] = a2;
    v46[3] = v23;
    v47 = v60;
    v46[4] = v4;
    v46[5] = v47;
    v48 = swift_allocObject(&unk_100757E08, 32, 7);
    *(_QWORD *)(v48 + 16) = sub_1000B0B88;
    *(_QWORD *)(v48 + 24) = v46;
    aBlock[4] = sub_10002342C;
    v65 = v48;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000479AC;
    aBlock[3] = &unk_100757E20;
    v49 = _Block_copy(aBlock);
    v50 = v65;
    v51 = v4;
    swift_bridgeObjectRetain(v47);
    objc_msgSend(v45, "performBatchUpdates:completion:", v49, 0, swift_release(v50).n128_f64[0]);
    _Block_release(v49);
    swift_release(v46);

  }
}

void sub_1000A731C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int64_t v27;
  _QWORD *v28;
  uint64_t v29;
  double (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD aBlock[5];
  uint64_t v65;
  uint64_t v66;

  v4 = v3;
  v60 = a1;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  v63 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexSet(0);
  v57 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v59 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804((uint64_t *)&unk_10082D0D0);
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v58 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(v3, "collectionView", v14);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "collectionViewLayout");

    objc_msgSend(v18, "invalidateLayout");
  }
  v19 = *(_QWORD *)&v4[qword_10082CFB0];
  v20 = objc_msgSend(v4, "collectionView");
  v56 = v19;
  if (!v20)
  {
    v23 = a3;
    goto LABEL_8;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "collectionViewLayout");

  v23 = a3;
  v20 = 0;
  if (!v22)
  {
LABEL_8:
    v26 = v59;
    v25 = v60;
    goto LABEL_9;
  }
  v24 = type metadata accessor for BaseCollectionCompositionalLayout();
  v20 = (id)swift_dynamicCastClass(v22, v24);
  v26 = v59;
  v25 = v60;
  if (!v20)
  {

    v20 = 0;
  }
LABEL_9:
  v55 = v20;
  v27 = *(_QWORD *)(v25 + 16);
  v28 = _swiftEmptyArrayStorage;
  if (v27)
  {
    v52 = a2;
    v53 = v23;
    v54 = v4;
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000FE840(0, v27, 0);
    v29 = v25 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
    v61 = *(_QWORD *)(v63 + 72);
    v30 = *(double (**)(char *, uint64_t, uint64_t))(v63 + 16);
    v31 = v11;
    do
    {
      v32 = v62;
      v33.n128_f64[0] = v30(v10, v29, v62);
      v34 = IndexPath.section.getter(v33);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v10, v32);
      v28 = (_QWORD *)aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native(aBlock[0]) & 1) == 0)
      {
        sub_1000FE840(0, v28[2] + 1, 1);
        v28 = (_QWORD *)aBlock[0];
      }
      v36 = v28[2];
      v35 = v28[3];
      if (v36 >= v35 >> 1)
      {
        sub_1000FE840(v35 > 1, v36 + 1, 1);
        v28 = (_QWORD *)aBlock[0];
      }
      v28[2] = v36 + 1;
      v28[v36 + 4] = v34;
      v29 += v61;
      --v27;
    }
    while (v27);
    v11 = v31;
    v23 = v53;
    v4 = v54;
    a2 = v52;
    v26 = v59;
  }
  v37 = sub_100005C94(&qword_10082D070, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of SetAlgebra.init()(v11);
  v38 = v28[2];
  if (v38)
  {
    v39 = v28 + 4;
    do
    {
      v40 = *v39++;
      v66 = v40;
      dispatch thunk of SetAlgebra.insert(_:)(aBlock, &v66, v11, v37);
      --v38;
    }
    while (v38);
  }
  v41 = swift_bridgeObjectRelease(v28);
  v43 = v57;
  v42 = (uint64_t)v58;
  (*(void (**)(char *, char *, uint64_t, __n128))(v57 + 32))(v58, v26, v11, v41);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v42, 0, 1, v11);
  sub_1000B0C90(v42, (uint64_t)sub_1000B107C, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, &qword_10082B048, (uint64_t)sub_1000B1068);

  sub_1000057AC(v42, (uint64_t *)&unk_10082D0D0);
  v44 = objc_msgSend(v4, "collectionView");
  if (v44)
  {
    v45 = v44;
    v46 = (_QWORD *)swift_allocObject(&unk_100757ED0, 48, 7);
    v46[2] = a2;
    v46[3] = v23;
    v47 = v60;
    v46[4] = v4;
    v46[5] = v47;
    v48 = swift_allocObject(&unk_100757EF8, 32, 7);
    *(_QWORD *)(v48 + 16) = sub_1000B1054;
    *(_QWORD *)(v48 + 24) = v46;
    aBlock[4] = sub_1000B1050;
    v65 = v48;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000479AC;
    aBlock[3] = &unk_100757F10;
    v49 = _Block_copy(aBlock);
    v50 = v65;
    v51 = v4;
    swift_bridgeObjectRetain(v47);
    objc_msgSend(v45, "performBatchUpdates:completion:", v49, 0, swift_release(v50).n128_f64[0]);
    _Block_release(v49);
    swift_release(v46);

  }
}

uint64_t sub_1000A77DC(uint64_t a1, __n128 a2)
{
  return sub_1000A77F4(a1, &qword_10082AFE8, a2);
}

uint64_t sub_1000A77E8(uint64_t a1, __n128 a2)
{
  return sub_1000A77F4(a1, &qword_10082B050, a2);
}

uint64_t sub_1000A77F4(uint64_t a1, uint64_t *a2, __n128 a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v20;
  uint64_t v21;
  char v22[8];
  _QWORD v23[3];
  uint64_t v24;

  v6 = type metadata accessor for OSLogger(0, a3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100826EB0 != -1)
    swift_once(&qword_100826EB0, sub_10007E844);
  v10 = sub_10007AF70(v6, (uint64_t)qword_10088AA78);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_10007B804((uint64_t *)&unk_10082D0C0);
  v12 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 3 * *(_QWORD *)(v12 + 72), *(unsigned __int8 *)(v12 + 80) | 7);
  *(_OWORD *)(v13 + 16) = xmmword_100662370;
  v24 = sub_10007B804(a2);
  v23[0] = v3;
  v14 = v3;
  static LogMessage.safe(_:)(v23);
  sub_1000057AC((uint64_t)v23, (uint64_t *)&unk_10082B490);
  LogMessage.init(stringLiteral:)(0xD00000000000002CLL, 0x80000001006A7580);
  swift_getErrorValue(a1, v22, &v20);
  v15 = v20;
  v16 = v21;
  v24 = v21;
  v17 = sub_100024638(v23);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v17, v15, v16);
  static LogMessage.sensitive(_:)(v23);
  sub_1000057AC((uint64_t)v23, (uint64_t *)&unk_10082B490);
  Logger.error(_:)(v13, v6, &protocol witness table for OSLogger);
  v18 = swift_bridgeObjectRelease(v13);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v18);
}

uint64_t sub_1000A79EC()
{
  return type metadata accessor for VersionHistoryViewController(0);
}

void sub_1000A79F8()
{
  char *v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)&v0[qword_10082CFB0];
  v2 = objc_msgSend(v0, "collectionView");
  *(_BYTE *)(v1 + 80) = 1;

  sub_1000A6CF4((uint64_t (*)(void))sub_1000A617C);
}

void sub_1000A7A50()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "collectionView");
  sub_1000A7BF8(v1);

  sub_1000A6CF4((uint64_t (*)(void))sub_1000A617C);
}

uint64_t sub_1000A7AB8(uint64_t a1, __n128 a2)
{
  return sub_1000A77F4(a1, &qword_10082AFE8, a2);
}

uint64_t sub_1000A7AD4()
{
  return sub_100005C94(&qword_10082AFA8, type metadata accessor for VersionHistoryViewController, (uint64_t)&unk_1006623B0);
}

uint64_t sub_1000A7B00()
{
  return sub_100005C94(&qword_10082AFB0, type metadata accessor for VersionHistoryViewController, (uint64_t)&unk_100663880);
}

uint64_t sub_1000A7B2C()
{
  return sub_100005C94(&qword_10082AFB8, type metadata accessor for VersionHistoryViewController, (uint64_t)&unk_1006638B8);
}

void sub_1000A7B58(void (*a1)(void), uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  Class isa;

  a1();
  v4 = objc_msgSend(a3, "collectionView");
  if (v4)
  {
    v5 = v4;
    type metadata accessor for IndexPath(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "deleteItemsAtIndexPaths:", isa);

  }
}

void sub_1000A7BF8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  char isEscapingClosureAtFileLocation;
  uint64_t v30;
  uint64_t v31;
  id v32;
  _QWORD aBlock[5];
  uint64_t v34;
  char *v35;

  v3 = type metadata accessor for IndexSet(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  *(_BYTE *)(v1 + 80) = 0;
  if (a1)
  {
    v32 = a1;
    v13 = (char *)objc_msgSend(v32, "numberOfSections");
    v14 = type metadata accessor for GenericPagePresenter(0);
    v15 = sub_100005C94(&qword_10082AFE0, (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    v16 = dispatch thunk of ShelfPresenter.sectionCount.getter(v14, v15);
    if ((uint64_t)v13 < v16)
    {
      v17 = (char *)v16;
      if (__OFSUB__(v16, v13))
      {
        __break(1u);
        goto LABEL_11;
      }
      if (v16 - (uint64_t)v13 >= 1)
      {
        v31 = v4;
        v18 = sub_100005C94(&qword_10082D070, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
        dispatch thunk of SetAlgebra.init()(v3);
        do
        {
          v35 = v13;
          dispatch thunk of SetAlgebra.insert(_:)(aBlock, &v35, v3, v18);
          ++v13;
        }
        while (v17 != v13);
        v19 = v31;
        v20 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v20(v12, v9, v3);
        v21 = (void *)objc_opt_self(UIView);
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v6, v12, v3);
        v22 = *(unsigned __int8 *)(v19 + 80);
        v23 = (v22 + 24) & ~v22;
        v24 = swift_allocObject(&unk_100757E58, v23 + v5, v22 | 7);
        *(_QWORD *)(v24 + 16) = v32;
        v20((char *)(v24 + v23), v6, v3);
        v25 = swift_allocObject(&unk_100757E80, 32, 7);
        *(_QWORD *)(v25 + 16) = sub_1000B0C7C;
        *(_QWORD *)(v25 + 24) = v24;
        aBlock[4] = sub_1000B1050;
        v34 = v25;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000479AC;
        aBlock[3] = &unk_100757E98;
        v26 = _Block_copy(aBlock);
        v27 = v34;
        v28 = v32;
        swift_retain(v25);
        objc_msgSend(v21, "performWithoutAnimation:", v26, swift_release(v27).n128_f64[0]);
        _Block_release(v26);

        (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v3);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v25, "", 98, 128, 48, 1);
        swift_release(v24);
        swift_release(v25);
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return;
LABEL_11:
        __break(1u);
        return;
      }
    }

  }
}

void sub_1000A7F18(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  char isEscapingClosureAtFileLocation;
  uint64_t v30;
  uint64_t v31;
  id v32;
  _QWORD aBlock[5];
  uint64_t v34;
  char *v35;

  v3 = type metadata accessor for IndexSet(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  *(_BYTE *)(v1 + 80) = 0;
  if (a1)
  {
    v32 = a1;
    v13 = (char *)objc_msgSend(v32, "numberOfSections");
    v14 = type metadata accessor for ReviewsPagePresenter(0);
    v15 = sub_100005C94(&qword_10082B048, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
    v16 = dispatch thunk of ShelfPresenter.sectionCount.getter(v14, v15);
    if ((uint64_t)v13 < v16)
    {
      v17 = (char *)v16;
      if (__OFSUB__(v16, v13))
      {
        __break(1u);
        goto LABEL_11;
      }
      if (v16 - (uint64_t)v13 >= 1)
      {
        v31 = v4;
        v18 = sub_100005C94(&qword_10082D070, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
        dispatch thunk of SetAlgebra.init()(v3);
        do
        {
          v35 = v13;
          dispatch thunk of SetAlgebra.insert(_:)(aBlock, &v35, v3, v18);
          ++v13;
        }
        while (v17 != v13);
        v19 = v31;
        v20 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v20(v12, v9, v3);
        v21 = (void *)objc_opt_self(UIView);
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v6, v12, v3);
        v22 = *(unsigned __int8 *)(v19 + 80);
        v23 = (v22 + 24) & ~v22;
        v24 = swift_allocObject(&unk_100757F48, v23 + v5, v22 | 7);
        *(_QWORD *)(v24 + 16) = v32;
        v20((char *)(v24 + v23), v6, v3);
        v25 = swift_allocObject(&unk_100757F70, 32, 7);
        *(_QWORD *)(v25 + 16) = sub_1000B0C7C;
        *(_QWORD *)(v25 + 24) = v24;
        aBlock[4] = sub_1000B1050;
        v34 = v25;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000479AC;
        aBlock[3] = &unk_100757F88;
        v26 = _Block_copy(aBlock);
        v27 = v34;
        v28 = v32;
        swift_retain(v25);
        objc_msgSend(v21, "performWithoutAnimation:", v26, swift_release(v27).n128_f64[0]);
        _Block_release(v26);

        (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v3);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v25, "", 98, 128, 48, 1);
        swift_release(v24);
        swift_release(v25);
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return;
LABEL_11:
        __break(1u);
        return;
      }
    }

  }
}

uint64_t sub_1000A8238(uint64_t (*a1)(uint64_t), unint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  __n128 v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  _BYTE v51[24];

  v5 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ImpressionMetrics(0);
  v46 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v48 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v42 - v12;
  v14 = *(_QWORD *)(v2 + 16);
  v15 = ((uint64_t (*)(_QWORD, __n128))a1)(0, v11);
  v49 = sub_100005C94(a2, a1, (uint64_t)&protocol conformance descriptor for BaseShelfPresenter);
  result = dispatch thunk of ShelfPresenter.sectionCount.getter(v15, v49);
  if ((result & 0x8000000000000000) == 0)
  {
    v17 = v46;
    if (!result)
      return result;
    v18 = 0;
    v19 = (_QWORD *)(v2 + 56);
    v44 = v14;
    v45 = v7;
    v43 = v15;
    v47 = result;
    while (result != v18)
    {
      v20 = dispatch thunk of ShelfPresenter.shelf(for:)(v18, v15, v49);
      Shelf.impressionMetrics.getter();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v7, 1, v8) == 1)
      {
        swift_release(v20);
        sub_1000057AC((uint64_t)v7, &qword_10082E4B0);
      }
      else
      {
        v21 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        v21(v13, v7, v8);
        v22 = swift_beginAccess(v19, v51, 33, 0);
        v23 = v13;
        v24 = v13;
        v25 = v8;
        (*(void (**)(char *, char *, uint64_t, __n128))(v17 + 16))(v48, v24, v8, v22);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v19);
        v50 = (_QWORD *)*v19;
        v27 = v50;
        *v19 = 0x8000000000000000;
        v29 = sub_100062890(v18);
        v30 = v27[2];
        v31 = (v28 & 1) == 0;
        v32 = v30 + v31;
        if (__OFADD__(v30, v31))
          goto LABEL_21;
        v33 = v28;
        if (v27[3] >= v32)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1000AE0C8();
        }
        else
        {
          sub_1000A9AE4(v32, isUniquelyReferenced_nonNull_native);
          v34 = sub_100062890(v18);
          if ((v33 & 1) != (v35 & 1))
            goto LABEL_24;
          v29 = v34;
        }
        v17 = v46;
        v36 = v50;
        if ((v33 & 1) != 0)
        {
          v8 = v25;
          (*(void (**)(unint64_t, char *, uint64_t))(v46 + 40))(v50[7] + *(_QWORD *)(v46 + 72) * v29, v48, v25);
        }
        else
        {
          v50[(v29 >> 6) + 8] |= 1 << v29;
          *(_QWORD *)(v36[6] + 8 * v29) = v18;
          v8 = v25;
          v21((char *)(v36[7] + *(_QWORD *)(v17 + 72) * v29), v48, v25);
          v37 = v36[2];
          v38 = __OFADD__(v37, 1);
          v39 = v37 + 1;
          if (v38)
            goto LABEL_22;
          v36[2] = v39;
        }
        v40 = *v19;
        *v19 = v50;
        swift_bridgeObjectRelease(v40);
        swift_endAccess(v51);
        v41 = swift_release(v20);
        v13 = v23;
        (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v23, v8, v41);
        v7 = v45;
        v15 = v43;
      }
      ++v18;
      result = v47;
      if (v47 == v18)
        return result;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
LABEL_24:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
  return result;
}

uint64_t sub_1000A8594(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(_BYTE *, uint64_t);
  void (*v35)(_QWORD *, _QWORD);
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  _BYTE *v48;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v50;
  __n128 v51;
  uint64_t v52;
  __n128 v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  _BYTE v62[16];
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(_BYTE *, _BYTE *, uint64_t, __n128);
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[5];
  char v83[32];
  uint64_t v84;

  v3 = sub_10007B804((uint64_t *)&unk_10082F860);
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  __chkstk_darwin(v3);
  v71 = &v62[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v5);
  v70 = &v62[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = type metadata accessor for ImpressionMetrics(0);
  v81 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v64 = &v62[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v63 = &v62[-v9];
  v10 = type metadata accessor for IndexSet(0);
  v67 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v69 = &v62[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v75 = type metadata accessor for IndexSet.Index(0, v11);
  v13 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v78 = &v62[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v77 = &v62[-v16];
  v17 = sub_10007B804(&qword_10082AFC0);
  v18 = __chkstk_darwin(v17);
  v20 = &v62[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  IndexSet.makeIterator()(v18);
  v21 = *(int *)(v17 + 36);
  v76 = v20;
  v22 = &v20[v21];
  v80 = a2;
  v66 = (uint64_t *)(a2 + 56);
  v23 = swift_beginAccess(a2 + 56, v83, 0, 0);
  v79 = v13;
  v74 = *(void (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v13 + 16);
  v65 = v10;
  v24 = v75;
  while (1)
  {
    v28 = v77;
    v74(v77, v22, v24, v23);
    v29 = sub_100005C94(&qword_10082AFC8, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    v30 = v78;
    v31 = (uint64_t)v76;
    dispatch thunk of Collection.endIndex.getter(v78, v10, v29);
    v32 = sub_100005C94(&qword_10082AFD0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
    v33 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v30, v24, v32);
    v34 = *(void (**)(_BYTE *, uint64_t))(v79 + 8);
    v34(v30, v24);
    v34(v28, v24);
    if ((v33 & 1) != 0)
      break;
    v35 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v82, v22, v10, v29);
    v37 = *v36;
    v35(v82, 0);
    v38 = v67;
    v39 = v69;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v67 + 16))(v69, v31, v10);
    v40 = v22;
    dispatch thunk of Collection.formIndex(after:)(v22, v10, v29);
    (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v39, v10);
    v41 = v66;
    v42 = *v66;
    v43 = v68;
    if (*(_QWORD *)(*v66 + 16))
    {
      v44 = sub_100062890(v37);
      if ((v45 & 1) != 0)
      {
        v46 = v81;
        v47 = *(_QWORD *)(v42 + 56) + *(_QWORD *)(v81 + 72) * v44;
        v48 = v64;
        (*(void (**)(_BYTE *, unint64_t, uint64_t))(v81 + 16))(v64, v47, v43);
        v49 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v46 + 32);
        v50 = v63;
        v49(v63, v48, v43);
        v52 = *(_QWORD *)(v80 + 112);
        if (v52)
        {
          v53 = swift_retain(*(_QWORD *)(v80 + 112));
          ImpressionsCalculator.removeElement(_:)(v50, v53);
          v51 = swift_release(v52);
        }
        (*(void (**)(_BYTE *, uint64_t, __n128))(v81 + 8))(v50, v43, v51);
      }
    }
    swift_beginAccess(v41, v82, 33, 0);
    v54 = sub_100062890(v37);
    if ((v55 & 1) != 0)
    {
      v56 = v54;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v41);
      v58 = *v41;
      v84 = *v41;
      *v41 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000AE0C8();
        v58 = v84;
      }
      v59 = v70;
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v81 + 32))(v70, *(_QWORD *)(v58 + 56) + *(_QWORD *)(v81 + 72) * v56, v43);
      sub_1000ACF10(v56, v58);
      v60 = *v41;
      *v41 = v58;
      swift_bridgeObjectRelease(v60);
      v26 = (uint64_t)v59;
      v25 = 0;
      v10 = v65;
    }
    else
    {
      v25 = 1;
      v26 = (uint64_t)v70;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v26, v25, 1, v43);
    sub_1000057AC(v26, &qword_10082E4B0);
    swift_endAccess(v82);
    v84 = v37;
    AnyHashable.init<A>(_:)(v82, &v84, &type metadata for Int, &protocol witness table for Int);
    v27 = v71;
    StatePath.init(component:)(v82, &type metadata for AnyHashable);
    TransientStateStore.removeState(at:recursively:)(v27, 1);
    (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v27, v73);
    v22 = v40;
  }
  return sub_1000057AC(v31, &qword_10082AFC0);
}

uint64_t sub_1000A8B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(_QWORD *, _QWORD);
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  _QWORD v40[5];
  uint64_t v41;

  v36 = a2;
  v2 = sub_10007B804((uint64_t *)&unk_10082F860);
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  __chkstk_darwin(v2);
  v33 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for IndexSet(0);
  v32 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexSet.Index(0, v5);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v38 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - v11;
  v13 = sub_10007B804(&qword_10082AFC0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexSet.makeIterator()(v14);
  v17 = &v16[*(int *)(v13 + 36)];
  v39 = v8;
  v37 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  while (1)
  {
    v37(v12, v17, v7);
    v18 = sub_100005C94(&qword_10082AFC8, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    v19 = v38;
    dispatch thunk of Collection.endIndex.getter(v38, v4, v18);
    v20 = sub_100005C94(&qword_10082AFD0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
    v21 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v19, v7, v20);
    v22 = *(void (**)(char *, uint64_t))(v39 + 8);
    v22(v19, v7);
    v22(v12, v7);
    if ((v21 & 1) != 0)
      break;
    v23 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v40, v17, v4, v18);
    v25 = *v24;
    v23(v40, 0);
    v26 = v31;
    v27 = v32;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v31, v16, v4);
    dispatch thunk of Collection.formIndex(after:)(v17, v4, v18);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v4);
    v41 = v25;
    AnyHashable.init<A>(_:)(v40, &v41, &type metadata for Int, &protocol witness table for Int);
    v28 = v33;
    StatePath.init(component:)(v40, &type metadata for AnyHashable);
    TransientStateStore.removeState(at:recursively:)(v28, 1);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  }
  return sub_1000057AC((uint64_t)v16, &qword_10082AFC0);
}

void sub_1000A8E0C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int64_t v40;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B108);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v39 = a2;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v37 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v38 = 1 << *(_BYTE *)(v5 + 32);
    v40 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v19 >= v40)
          goto LABEL_34;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v40)
            goto LABEL_34;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v40)
            {
LABEL_34:
              if ((v39 & 1) != 0)
              {
                if (v38 >= 64)
                  bzero((void *)(v5 + 64), 8 * v40);
                else
                  *v10 = v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v9 >= v40)
                  goto LABEL_34;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v9 = v21;
          }
        }
LABEL_24:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(_QWORD *)(v5 + 56) + 40 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v24 = *(_BYTE *)(v22 + 32);
      v26 = *(_QWORD *)(v22 + 16);
      v25 = *(_QWORD *)(v22 + 24);
      v28 = *(_QWORD *)v22;
      v27 = *(_QWORD *)(v22 + 8);
      v29 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v23);
      v30 = -1 << *(_BYTE *)(v8 + 32);
      v31 = v29 & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v14 + 8 * v32);
        }
        while (v36 == -1);
        v15 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v15) = v23;
      v16 = *(_QWORD *)(v8 + 56) + 40 * v15;
      *(_QWORD *)v16 = v28;
      *(_QWORD *)(v16 + 8) = v27;
      *(_QWORD *)(v16 + 16) = v26;
      *(_QWORD *)(v16 + 24) = v25;
      *(_BYTE *)(v16 + 32) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1000A90DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];
  _OWORD v41[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B000);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_25;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v17 >= v37)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v38 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v37)
        goto LABEL_37;
      v19 = *(_QWORD *)(v38 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v37)
        {
LABEL_37:
          swift_release(v5);
          if ((v39 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v19 = *(_QWORD *)(v38 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_46;
            if (v13 >= v37)
              goto LABEL_37;
            v19 = *(_QWORD *)(v38 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_24;
          }
        }
        v13 = v20;
      }
    }
LABEL_24:
    v11 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_25:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v39 & 1) != 0)
    {
      sub_100061B74(v22, v41);
    }
    else
    {
      sub_100061B84((uint64_t)v22, (uint64_t)v41);
      v23 = v21;
    }
    v24 = *(_QWORD *)(v8 + 40);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v27 = v26;
    Hasher.init(_seed:)(v40, v24);
    String.hash(into:)(v40, v25, v27);
    v28 = Hasher._finalize()();
    swift_bridgeObjectRelease(v27);
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v21;
    sub_100061B74(v41, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v18 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v18, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_1000A9414(uint64_t a1, uint64_t a2)
{
  sub_1000A9E20(a1, a2, &qword_10082B0A0);
}

void sub_1000A9420(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = type metadata accessor for AdamId(0);
  v46 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v2;
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B020);
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_release(v8);
    v39 = v42;
LABEL_44:
    *v39 = v10;
    return;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v44 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  v16 = swift_retain(v8);
  v17 = 0;
  HIDWORD(v41) = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v45 = v18;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_26;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v22 >= v43)
    {
      swift_release(v8);
      v39 = v42;
      v23 = v44;
      if ((v41 & 0x100000000) != 0)
      {
LABEL_39:
        v40 = 1 << *(_BYTE *)(v8 + 32);
        if (v40 >= 64)
          bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v40;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_43:
      swift_release(v8);
      goto LABEL_44;
    }
    v23 = v44;
    v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v43)
        goto LABEL_36;
      v24 = v44[v17];
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_26:
    v26 = *(_QWORD *)(v46 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v46 + v45))(v7, *(_QWORD *)(v8 + 48) + v26 * v21, v5, v16);
    v27 = v8;
    v28 = *(_BYTE *)(*(_QWORD *)(v8 + 56) + v21);
    v29 = *(_QWORD *)(v10 + 40);
    v30 = sub_100005C94(&qword_10082B028, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, (uint64_t)&protocol conformance descriptor for AdamId);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v5, v30);
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(*(_QWORD *)(v10 + 48) + v26 * v19, v7, v5);
    *(_BYTE *)(*(_QWORD *)(v10 + 56) + v19) = v28;
    ++*(_QWORD *)(v10 + 16);
    v8 = v27;
  }
  v25 = v22 + 2;
  if (v25 >= v43)
  {
LABEL_36:
    swift_release(v8);
    v39 = v42;
    if ((v41 & 0x100000000) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v24 = v44[v25];
  if (v24)
  {
    v17 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v17 >= v43)
      goto LABEL_36;
    v24 = v44[v17];
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
}

void sub_1000A97BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::UInt64 v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  Swift::UInt64 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  __int128 v39;
  uint64_t v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082AFF8);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v35 = v3;
    v36 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v23 = v22 | (v9 << 6);
      }
      else
      {
        v24 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return;
        }
        if (v24 >= v36)
          goto LABEL_39;
        v25 = v37[v24];
        ++v9;
        if (!v25)
        {
          v9 = v24 + 1;
          if (v24 + 1 >= v36)
            goto LABEL_39;
          v25 = v37[v9];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v36)
            {
LABEL_39:
              if ((v38 & 1) == 0)
              {
                swift_release(v5);
                v3 = v35;
                goto LABEL_46;
              }
              v34 = 1 << *(_BYTE *)(v5 + 32);
              if (v34 >= 64)
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v34;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v25 = v37[v26];
            if (!v25)
            {
              while (1)
              {
                v9 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_48;
                if (v9 >= v36)
                  goto LABEL_39;
                v25 = v37[v9];
                ++v26;
                if (v25)
                  goto LABEL_36;
              }
            }
            v9 = v26;
          }
        }
LABEL_36:
        v12 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v9 << 6);
      }
      v31 = *(_QWORD *)(v5 + 48) + 24 * v23;
      v39 = *(_OWORD *)v31;
      v32 = *(_QWORD *)(v31 + 16);
      v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v23);
      if ((v38 & 1) == 0)
        swift_bridgeObjectRetain(v33);
      Hasher.init(_seed:)(v40, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v39);
      Hasher._combine(_:)(*((Swift::UInt *)&v39 + 1));
      if ((v32 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v14 = v32;
      else
        v14 = 0;
      Hasher._combine(_:)(v14);
      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        v20 = v39;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v16) >> 6;
        v20 = v39;
        do
        {
          if (++v18 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          v29 = v18 == v28;
          if (v18 == v28)
            v18 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v18);
        }
        while (v30 == -1);
        v19 = __clz(__rbit64(~v30)) + (v18 << 6);
      }
      *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v21 = *(_QWORD *)(v8 + 48) + 24 * v19;
      *(_OWORD *)v21 = v20;
      *(_QWORD *)(v21 + 16) = v32;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_46:
  *v3 = v8;
}

void sub_1000A9AD8(uint64_t a1, uint64_t a2)
{
  sub_100065794(a1, a2, &qword_10082B060);
}

void sub_1000A9AE4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v3 = v2;
  v6 = type metadata accessor for ImpressionMetrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10007B804(&qword_10082AFD8);
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v38 = v3;
    v13 = 0;
    v14 = *(_QWORD *)(v10 + 64);
    v41 = (_QWORD *)(v10 + 64);
    v15 = 1 << *(_BYTE *)(v10 + 32);
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v17 = v16 & v14;
    v40 = (unint64_t)(v15 + 63) >> 6;
    v18 = v11 + 64;
    v39 = a2;
    v19 = 16;
    if ((a2 & 1) != 0)
      v19 = 32;
    v42 = v19;
    while (1)
    {
      if (v17)
      {
        v21 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v23 >= v40)
          goto LABEL_35;
        v24 = v41[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v40)
            goto LABEL_35;
          v24 = v41[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_35:
              if ((v39 & 1) == 0)
              {
                swift_release(v10);
                v3 = v38;
                goto LABEL_42;
              }
              v36 = 1 << *(_BYTE *)(v10 + 32);
              if (v36 >= 64)
                bzero(v41, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v41 = -1 << v36;
              v3 = v38;
              *(_QWORD *)(v10 + 16) = 0;
              break;
            }
            v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_44;
                if (v13 >= v40)
                  goto LABEL_35;
                v24 = v41[v13];
                ++v25;
                if (v24)
                  goto LABEL_25;
              }
            }
            v13 = v25;
          }
        }
LABEL_25:
        v17 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v22);
      v27 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + v42))(v9, *(_QWORD *)(v10 + 56) + v27 * v22, v6);
      v28 = static Hasher._hash(seed:_:)(*(_QWORD *)(v12 + 40), v26);
      v29 = -1 << *(_BYTE *)(v12 + 32);
      v30 = v28 & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v18 + 8 * (v30 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v18 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v18 + 8 * v31);
        }
        while (v35 == -1);
        v20 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v20) = v26;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 56) + v27 * v20, v9, v6);
      ++*(_QWORD *)(v12 + 16);
    }
  }
  swift_release(v10);
LABEL_42:
  *v3 = v12;
}

void sub_1000A9E14(uint64_t a1, uint64_t a2)
{
  sub_1000A9E20(a1, a2, &qword_10082B0F0);
}

void sub_1000A9E20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10007B804(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = 0;
    v11 = (uint64_t *)(v6 + 64);
    v12 = 1 << *(_BYTE *)(v6 + 32);
    v35 = -1 << v12;
    v36 = v12;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v14 = v13 & *(_QWORD *)(v6 + 64);
    v37 = (unint64_t)(v12 + 63) >> 6;
    v15 = v8 + 64;
    while (1)
    {
      if (v14)
      {
        v22 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v23 = v22 | (v10 << 6);
      }
      else
      {
        v24 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v24 >= v37)
          goto LABEL_36;
        v25 = v11[v24];
        ++v10;
        if (!v25)
        {
          v10 = v24 + 1;
          if (v24 + 1 >= v37)
            goto LABEL_36;
          v25 = v11[v10];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v37)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v36 >= 64)
                  bzero((void *)(v6 + 64), 8 * v37);
                else
                  *v11 = v35;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v25 = v11[v26];
            if (!v25)
            {
              while (1)
              {
                v10 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_44;
                if (v10 >= v37)
                  goto LABEL_36;
                v25 = v11[v10];
                ++v26;
                if (v25)
                  goto LABEL_33;
              }
            }
            v10 = v26;
          }
        }
LABEL_33:
        v14 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v10 << 6);
      }
      v31 = 8 * v23;
      v32 = *(_QWORD *)(v6 + 56);
      v33 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v31);
      v34 = *(_QWORD *)(v32 + v31);
      if ((a2 & 1) == 0)
        swift_retain(*(_QWORD *)(v32 + v31));
      v16 = static Hasher._hash(seed:_:)(*(_QWORD *)(v9 + 40), v33);
      v17 = -1 << *(_BYTE *)(v9 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v29 = v19 == v28;
          if (v19 == v28)
            v19 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v19);
        }
        while (v30 == -1);
        v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }
      *(_QWORD *)(v15 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = 8 * v20;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + v21) = v33;
      *(_QWORD *)(*(_QWORD *)(v9 + 56) + v21) = v34;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  swift_release(v6);
  *v4 = v9;
}

void sub_1000AA0D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  _QWORD v42[9];

  v3 = v2;
  v6 = type metadata accessor for Accessory(0);
  v40 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10007B804(&qword_10082B0B8);
  v41 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v37 = v3;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v21 >= v38)
      break;
    v22 = v39;
    v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_36;
      v23 = v39[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_36:
          swift_release(v9);
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_45;
            if (v17 >= v38)
              goto LABEL_36;
            v23 = v39[v17];
            ++v24;
            if (v23)
              goto LABEL_23;
          }
        }
        v17 = v24;
      }
    }
LABEL_23:
    v15 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(_QWORD *)(v9 + 48) + v25 * v20;
    if ((v41 & 1) != 0)
    {
      sub_1000B100C(v26, (uint64_t)v8);
      v27 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v20);
    }
    else
    {
      sub_100057828(v26, (uint64_t)v8);
      v27 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v20);
    }
    Hasher.init(_seed:)(v42, *(_QWORD *)(v11 + 40));
    sub_100105A98((uint64_t)v42);
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_1000B100C((uint64_t)v8, *(_QWORD *)(v11 + 48) + v25 * v18);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v37;
  v22 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release(v9);
  *v3 = v11;
}

void sub_1000AA438(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B100);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = a2;
    v36 = v3;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    v35 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v20 >= v14)
          goto LABEL_34;
        v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v14)
            goto LABEL_34;
          v21 = v10[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_34:
              if ((v37 & 1) == 0)
              {
                swift_release(v5);
                v3 = v36;
                goto LABEL_41;
              }
              if (v35 >= 64)
                bzero((void *)(v5 + 64), 8 * v14);
              else
                *v10 = v34;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v9 >= v14)
                  goto LABEL_34;
                v21 = v10[v9];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v9 = v22;
          }
        }
LABEL_24:
        v13 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v23 = 8 * v19;
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v23);
      v25 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v23);
      v26 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v24);
      v27 = -1 << *(_BYTE *)(v8 + 32);
      v28 = v26 & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v15 + 8 * v29);
        }
        while (v33 == -1);
        v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v17) = v24;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v17) = v25;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_1000AA6E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t v49;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v2;
  v9 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B0F8);
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
    v42 = v46;
LABEL_44:
    *v42 = v11;
    return;
  }
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v48 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v47 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  v17 = swift_retain(v9);
  v18 = 0;
  v45 = a2;
  v19 = 16;
  if ((a2 & 1) != 0)
    v19 = 32;
  v49 = v19;
  while (1)
  {
    if (v15)
    {
      v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v23 = v22 | (v18 << 6);
      goto LABEL_26;
    }
    v24 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v24 >= v47)
    {
      swift_release(v9);
      v42 = v46;
      v25 = v48;
      if ((v45 & 1) != 0)
      {
LABEL_39:
        v43 = 1 << *(_BYTE *)(v9 + 32);
        if (v43 >= 64)
          bzero(v25, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v25 = -1 << v43;
        *(_QWORD *)(v9 + 16) = 0;
      }
LABEL_43:
      swift_release(v9);
      goto LABEL_44;
    }
    v25 = v48;
    v26 = v48[v24];
    ++v18;
    if (!v26)
    {
      v18 = v24 + 1;
      if (v24 + 1 >= v47)
        goto LABEL_36;
      v26 = v48[v18];
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v18 << 6);
LABEL_26:
    v28 = *(_QWORD *)(v6 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + v49))(v8, *(_QWORD *)(v9 + 48) + v28 * v23, v5, v17);
    v29 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v23);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v11 + 40);
    v33 = sub_100005C94((unint64_t *)&unk_100847850, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v5, v33);
    v35 = -1 << *(_BYTE *)(v11 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v16 + 8 * v37);
      }
      while (v41 == -1);
      v20 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v28 * v20, v8, v5);
    v21 = (_QWORD *)(*(_QWORD *)(v11 + 56) + 16 * v20);
    *v21 = v31;
    v21[1] = v30;
    ++*(_QWORD *)(v11 + 16);
  }
  v27 = v24 + 2;
  if (v27 >= v47)
  {
LABEL_36:
    swift_release(v9);
    v42 = v46;
    if ((v45 & 1) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v26 = v48[v27];
  if (v26)
  {
    v18 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v18 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v18 >= v47)
      goto LABEL_36;
    v26 = v48[v18];
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
}

void sub_1000AAA78(uint64_t a1, uint64_t a2)
{
  sub_100065794(a1, a2, &qword_10082B0C0);
}

void sub_1000AAA84(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B078);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_100061B74(v24, v38);
      }
      else
      {
        sub_100061B84((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain(v22);
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_100061B74(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1000AAD80(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B080);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      swift_bridgeObjectRetain(v33);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1000AB094(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B070);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = v3;
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_25;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v20 >= v38)
      break;
    v21 = (_QWORD *)(v5 + 64);
    v22 = *(_QWORD *)(v39 + 8 * v20);
    ++v13;
    if (!v22)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v38)
        goto LABEL_37;
      v22 = *(_QWORD *)(v39 + 8 * v13);
      if (!v22)
      {
        v23 = v20 + 2;
        if (v23 >= v38)
        {
LABEL_37:
          swift_release(v5);
          v3 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v22 = *(_QWORD *)(v39 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v13 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_46;
            if (v13 >= v38)
              goto LABEL_37;
            v22 = *(_QWORD *)(v39 + 8 * v13);
            ++v23;
            if (v22)
              goto LABEL_24;
          }
        }
        v13 = v23;
      }
    }
LABEL_24:
    v11 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_25:
    v24 = *(_QWORD *)(v5 + 48) + 40 * v19;
    if ((a2 & 1) != 0)
    {
      v25 = *(_OWORD *)v24;
      v26 = *(_OWORD *)(v24 + 16);
      v42 = *(_QWORD *)(v24 + 32);
      v40 = v25;
      v41 = v26;
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_100061BC0(v24, (uint64_t)&v40);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      swift_retain(v27);
    }
    v28 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v8 + 48) + 40 * v14;
    v16 = v40;
    v17 = v41;
    *(_QWORD *)(v15 + 32) = v42;
    *(_OWORD *)v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v27;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v37;
  v21 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v21, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v21 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_1000AB3A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  int v45;
  char *v46;
  uint64_t v47;
  _QWORD v48[9];

  v3 = v2;
  v47 = type metadata accessor for AdamId(0);
  v6 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10007B804(&qword_10082B0A8);
  v45 = a2;
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v42 = v3;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v44 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v43 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  v16 = swift_retain(v8);
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    if (v22 >= v43)
      goto LABEL_36;
    v23 = v44[v22];
    ++v17;
    if (!v23)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v43)
        goto LABEL_36;
      v23 = v44[v17];
      if (!v23)
        break;
    }
LABEL_23:
    v14 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v8 + 56);
    v26 = v8;
    v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v6 + 72);
    v31 = v25 + v30 * v21;
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 32))(v46, v31, v47, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v46, v31, v47, v16);
      swift_bridgeObjectRetain(v28);
    }
    Hasher.init(_seed:)(v48, *(_QWORD *)(v10 + 40));
    String.hash(into:)(v48, v29, v28);
    v32 = Hasher._finalize()();
    v33 = -1 << *(_BYTE *)(v10 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v29;
    v19[1] = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v10 + 56) + v30 * v18, v46, v47);
    ++*(_QWORD *)(v10 + 16);
    v8 = v26;
  }
  v24 = v22 + 2;
  if (v24 < v43)
  {
    v23 = v44[v24];
    if (!v23)
    {
      while (1)
      {
        v17 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_43;
        if (v17 >= v43)
          goto LABEL_36;
        v23 = v44[v17];
        ++v24;
        if (v23)
          goto LABEL_23;
      }
    }
    v17 = v24;
    goto LABEL_23;
  }
LABEL_36:
  swift_release();
  v3 = v42;
  if ((v45 & 1) != 0)
  {
    v40 = 1 << *(_BYTE *)(v8 + 32);
    if (v40 >= 64)
      bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v44 = -1 << v40;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_41:
  swift_release();
  *v3 = v10;
}

void sub_1000AB70C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B0B0);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v31[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v33, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1000ABA10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B030);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v30[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1000ABD18(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  char v41;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B0C8);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v40 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v38 = v3;
  v39 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v23 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v24 = v23 | (v13 << 6);
      goto LABEL_34;
    }
    v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v25 >= v39)
      break;
    v26 = (_QWORD *)(v5 + 64);
    v27 = *(_QWORD *)(v40 + 8 * v25);
    ++v13;
    if (!v27)
    {
      v13 = v25 + 1;
      if (v25 + 1 >= v39)
        goto LABEL_36;
      v27 = *(_QWORD *)(v40 + 8 * v13);
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v39)
        {
LABEL_36:
          swift_release(v5);
          v3 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v27 = *(_QWORD *)(v40 + 8 * v28);
        if (!v27)
        {
          while (1)
          {
            v13 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_45;
            if (v13 >= v39)
              goto LABEL_36;
            v27 = *(_QWORD *)(v40 + 8 * v13);
            ++v28;
            if (v27)
              goto LABEL_33;
          }
        }
        v13 = v28;
      }
    }
LABEL_33:
    v11 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_34:
    v33 = 8 * v24;
    v34 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v33);
    v35 = *(void **)(*(_QWORD *)(v5 + 56) + v33);
    if ((v41 & 1) == 0)
    {
      swift_retain(v34);
      v36 = v35;
    }
    v14 = *(_QWORD *)(v8 + 40);
    v15 = type metadata accessor for Artwork(0);
    v16 = sub_100005C94((unint64_t *)&qword_10082B0D0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v15, v16);
    v18 = -1 << *(_BYTE *)(v8 + 32);
    v19 = v17 & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v12 + 8 * (v19 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v12 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v31 = v20 == v30;
        if (v20 == v30)
          v20 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v20);
      }
      while (v32 == -1);
      v21 = __clz(__rbit64(~v32)) + (v20 << 6);
    }
    *(_QWORD *)(v12 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = 8 * v21;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v22) = v34;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v22) = v35;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v38;
  v26 = (_QWORD *)(v5 + 64);
  if ((v41 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1000AC048(uint64_t a1, uint64_t a2)
{
  sub_1000AC990(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for AdamId, &qword_10082B118, &qword_10082B028, (uint64_t)&protocol conformance descriptor for AdamId);
}

void sub_1000AC06C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B0E0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = a2;
    v33 = v3;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v11;
    v32 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v19 >= v14)
          goto LABEL_34;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v14)
            goto LABEL_34;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v14)
            {
LABEL_34:
              if ((v34 & 1) == 0)
              {
                swift_release(v5);
                v3 = v33;
                goto LABEL_41;
              }
              if (v32 >= 64)
                bzero((void *)(v5 + 64), 8 * v14);
              else
                *v10 = v31;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_43;
                if (v9 >= v14)
                  goto LABEL_34;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v9 = v21;
          }
        }
LABEL_24:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v35 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v18);
      v23 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v22);
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v26);
        }
        while (v30 == -1);
        v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v16) = v22;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + 16 * v16) = v35;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_1000AC30C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t, __n128);
  uint64_t v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;

  v53 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v52 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v2;
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B068);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v7, a1, a2);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    swift_release(v7);
    v42 = v46;
LABEL_44:
    *v42 = v9;
    return;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v48 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v47 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  v15 = swift_retain(v7);
  v16 = 0;
  v45 = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v49 = v7;
  v50 = v17;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v21 = v20 | (v16 << 6);
      goto LABEL_26;
    }
    v22 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v22 >= v47)
    {
      swift_release(v7);
      v42 = v46;
      v23 = v48;
      if ((v45 & 1) != 0)
      {
LABEL_39:
        v43 = 1 << *(_BYTE *)(v7 + 32);
        if (v43 >= 64)
          bzero(v23, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v43;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_43:
      swift_release(v7);
      goto LABEL_44;
    }
    v23 = v48;
    v24 = v48[v22];
    ++v16;
    if (!v24)
    {
      v16 = v22 + 1;
      if (v22 + 1 >= v47)
        goto LABEL_36;
      v24 = v48[v16];
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v16 << 6);
LABEL_26:
    v26 = *(_QWORD *)(v5 + 72);
    v27 = v5;
    v28 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + v50);
    v29 = v53;
    v28(v52, *(_QWORD *)(v7 + 48) + v26 * v21, v53, v15);
    v30 = (char *)(*(_QWORD *)(v7 + 56) + 2 * v21);
    v51 = v30[1];
    v31 = *v30;
    v32 = *(_QWORD *)(v9 + 40);
    v33 = sub_100005C94((unint64_t *)&unk_100847850, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v32, v29, v33);
    v35 = -1 << *(_BYTE *)(v9 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v14 + 8 * (v36 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v14 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      v5 = v27;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      v5 = v27;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v14 + 8 * v37);
      }
      while (v41 == -1);
      v18 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 48) + v26 * v18, v52, v53);
    v19 = (_BYTE *)(*(_QWORD *)(v9 + 56) + 2 * v18);
    *v19 = v31;
    v19[1] = v51;
    ++*(_QWORD *)(v9 + 16);
    v7 = v49;
  }
  v25 = v22 + 2;
  if (v25 >= v47)
  {
LABEL_36:
    swift_release(v7);
    v42 = v46;
    if ((v45 & 1) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v24 = v48[v25];
  if (v24)
  {
    v16 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v16 >= v47)
      goto LABEL_36;
    v24 = v48[v16];
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
}

void sub_1000AC6BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10007B804(&qword_10082B098);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v35 = 1 << *(_BYTE *)(v5 + 32);
    v36 = v3;
    v37 = (unint64_t)(v11 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v21 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v22 = v21 | (v9 << 6);
      }
      else
      {
        v23 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v23 >= v37)
          goto LABEL_36;
        v24 = v10[v23];
        ++v9;
        if (!v24)
        {
          v9 = v23 + 1;
          if (v23 + 1 >= v37)
            goto LABEL_36;
          v24 = v10[v9];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v37)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                swift_release();
                v3 = v36;
                goto LABEL_43;
              }
              if (v35 >= 64)
                bzero((void *)(v5 + 64), 8 * v37);
              else
                *v10 = v34;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                v9 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_45;
                if (v9 >= v37)
                  goto LABEL_36;
                v24 = v10[v9];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v9 = v25;
          }
        }
LABEL_33:
        v13 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v9 << 6);
      }
      v30 = 8 * v22;
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
      v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
      if ((a2 & 1) == 0)
        v33 = v32;
      v15 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v31);
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v31;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release();
LABEL_43:
  *v3 = v8;
}

void sub_1000AC96C(uint64_t a1, uint64_t a2)
{
  sub_1000AC990(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, &qword_10082B038, &qword_10082B040, (uint64_t)&protocol conformance descriptor for BadgeType);
}

void sub_1000AC990(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t i;
  uint64_t (*v50)(uint64_t);
  unint64_t *v51;
  uint64_t v52;
  int v53;

  v51 = a5;
  v52 = a6;
  v8 = v6;
  v50 = a3;
  v11 = a3(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v46 - v13;
  v15 = *v8;
  if (*(_QWORD *)(*v8 + 24) > a1)
    a1 = *(_QWORD *)(*v8 + 24);
  sub_10007B804(a4);
  v53 = a2;
  v16 = static _DictionaryStorage.resize(original:capacity:move:)(v15, a1, a2);
  v17 = v16;
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_43;
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = *(_QWORD *)(v15 + 64);
  v48 = (_QWORD *)(v15 + 64);
  if (v18 < 64)
    v20 = ~(-1 << v18);
  else
    v20 = -1;
  v21 = v20 & v19;
  v46 = v8;
  v47 = (unint64_t)(v18 + 63) >> 6;
  v22 = v16 + 64;
  v23 = swift_retain(v15);
  v24 = 0;
  for (i = v15; ; v15 = i)
  {
    if (v21)
    {
      v26 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v27 = v26 | (v24 << 6);
      goto LABEL_24;
    }
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v28 >= v47)
      break;
    v29 = v48;
    v30 = v48[v28];
    ++v24;
    if (!v30)
    {
      v24 = v28 + 1;
      if (v28 + 1 >= v47)
        goto LABEL_36;
      v30 = v48[v24];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v47)
        {
LABEL_36:
          swift_release(v15);
          v8 = v46;
          if ((v53 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v30 = v48[v31];
        if (!v30)
        {
          while (1)
          {
            v24 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_45;
            if (v24 >= v47)
              goto LABEL_36;
            v30 = v48[v24];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v24 = v31;
      }
    }
LABEL_23:
    v21 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v24 << 6);
LABEL_24:
    v32 = *(_QWORD *)(v12 + 72);
    v33 = *(_QWORD *)(v15 + 48) + v32 * v27;
    if ((v53 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v12 + 32))(v14, v33, v11, v23);
      v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v27);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v12 + 16))(v14, v33, v11, v23);
      v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v27);
      swift_retain(v34);
    }
    v35 = *(_QWORD *)(v17 + 40);
    v36 = sub_100005C94(v51, v50, v52);
    v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v11, v36);
    v38 = -1 << *(_BYTE *)(v17 + 32);
    v39 = v37 & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v22 + 8 * (v39 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v22 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v22 + 8 * v40);
      }
      while (v44 == -1);
      v25 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v22 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(*(_QWORD *)(v17 + 48) + v32 * v25, v14, v11);
    *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v25) = v34;
    ++*(_QWORD *)(v17 + 16);
  }
  swift_release(v15);
  v8 = v46;
  v29 = v48;
  if ((v53 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v45 = 1 << *(_BYTE *)(v15 + 32);
  if (v45 >= 64)
    bzero(v29, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v45;
  *(_QWORD *)(v15 + 16) = 0;
LABEL_43:
  swift_release(v15);
  *v8 = v17;
}

unint64_t sub_1000ACD1C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::Int v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;
        Hasher.init(_seed:)(v30, v10);
        v15 = v11;
        String.hash(into:)(v30, v12, v14);
        v16 = Hasher._finalize()();

        result = swift_bridgeObjectRelease(v14);
        v17 = v16 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v17 < v8)
            goto LABEL_5;
        }
        else if (v17 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v17)
        {
LABEL_11:
          v18 = *(_QWORD *)(a2 + 48);
          v19 = (_QWORD *)(v18 + 8 * v3);
          v20 = (_QWORD *)(v18 + 8 * v6);
          if (v3 != v6 || v19 >= v20 + 1)
            *v19 = *v20;
          v21 = *(_QWORD *)(a2 + 56);
          v22 = (_OWORD *)(v21 + 32 * v3);
          v23 = (_OWORD *)(v21 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v22 >= v23 + 2))
          {
            v9 = v23[1];
            *v22 = *v23;
            v22[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v25 = *v24;
    v26 = (-1 << v3) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v4 + 8 * (result >> 6));
    v26 = *v24;
    v25 = (-1 << result) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000ACF10(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ImpressionMetrics(0) - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000AD0CC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v11);
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1)
              *v15 = *v11;
            v16 = *(_QWORD *)(a2 + 56);
            v17 = (_OWORD *)(v16 + 32 * v3);
            v18 = (_OWORD *)(v16 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v17 >= v18 + 2))
            {
              v9 = v18[1];
              *v17 = *v18;
              v17[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000AD260(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000AD434(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000AD608(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000AD7DC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1000AD970()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;

  v1 = v0;
  sub_10007B804(&qword_10082B108);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v27 = __clz(__rbit64(v25));
    v12 = (v25 - 1) & v25;
    v15 = v27 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)(v19 + 32);
    v21 = *(_OWORD *)v19;
    v22 = *(_OWORD *)(v19 + 16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v23 = v21;
    *(_OWORD *)(v23 + 16) = v22;
    *(_BYTE *)(v23 + 32) = v20;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000ADB14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v1 = v0;
  sub_10007B804(&qword_10082B000);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_100061B84(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_100061B74(v23, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    v19 = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000ADCD8()
{
  sub_1000AE4B4(&qword_10082B0A0);
}

void sub_1000ADCE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = type metadata accessor for AdamId(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007B804(&qword_10082B020);
  v23 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v23 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000ADF04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10007B804(&qword_10082AFF8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_OWORD *)v21 = *(_OWORD *)v17;
    *(_QWORD *)(v21 + 16) = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AE0BC()
{
  sub_1000AFE10(&qword_10082B060);
}

void sub_1000AE0C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for ImpressionMetrics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007B804(&qword_10082AFD8);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AE2E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  sub_10007B804(&qword_10082B058);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_100061B84(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_100061B74(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AE4A8()
{
  sub_1000AE4B4(&qword_10082B0F0);
}

void sub_1000AE4B4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_10007B804(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    swift_retain(v18);
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AE64C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_10007B804(&qword_10082B0E8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    v22 = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AE7FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for Accessory(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007B804(&qword_10082B0B8);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v26 = v1;
  v8 = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v10)
    memmove(v8, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v9 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v27 + 72) * v18;
    sub_100057828(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4);
    v20 = 8 * v18;
    v21 = *(void **)(*(_QWORD *)(v5 + 56) + v20);
    sub_1000B100C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
    v22 = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    swift_release(v5);
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v9 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v9 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1000AEA18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_10007B804(&qword_10082B018);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AEBD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_10007B804(&qword_10082B100);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AED5C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007B804(&qword_10082B0F8);
  v6 = *v0;
  v7 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_28:
    *v1 = v8;
    return;
  }
  v26 = v1;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v27 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v8 + 48) + v19;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v28 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v20);
    v22(v21, v5, v2);
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v28;
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    swift_release(v6);
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1000AEF90()
{
  sub_1000AFE10(&qword_10082B0C0);
}

void sub_1000AEF9C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_10007B804(&qword_10082B078);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_100061B84(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_100061B74(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1000AF180()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10007B804(&qword_10082B080);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AF334()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v1 = v0;
  sub_10007B804(&qword_10082B070);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_100061BC0(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    v17 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v18 = v23[0];
    v19 = v23[1];
    *(_QWORD *)(v17 + 32) = v24;
    *(_OWORD *)v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    swift_retain(v16);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AF50C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = type metadata accessor for AdamId(0);
  v1 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007B804(&qword_10082B0A8);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return;
  }
  v7 = v5;
  v8 = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    swift_bridgeObjectRetain(v20);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1000AF768()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_10007B804(&qword_10082B0B0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AF914()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10007B804(&qword_10082B030);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    swift_bridgeObjectRetain(v17);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AFABC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_10007B804(&qword_10082B0C8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    swift_retain(v17);
    v19 = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AFC60()
{
  sub_1000B03BC((uint64_t (*)(_QWORD))&type metadata accessor for AdamId, &qword_10082B118);
}

void sub_1000AFC74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  sub_10007B804(&qword_10082B0E0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AFE04()
{
  sub_1000AFE10(&qword_10082B0D8);
}

void sub_1000AFE10(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v2 = v1;
  sub_10007B804(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_26;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    v19 = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v14)
    goto LABEL_26;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000AFFA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  _BYTE *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = type metadata accessor for IndexPath(0);
  v1 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007B804(&qword_10082B068);
  v31 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    v29 = v31;
LABEL_28:
    *v29 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v7)
    memmove(v6, (const void *)(v3 + 64), 8 * v7);
  v9 = 0;
  v10 = *(_QWORD *)(v3 + 16);
  v36 = v5;
  v37 = v3;
  *(_QWORD *)(v5 + 16) = v10;
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v32 = v3 + 64;
  v33 = (unint64_t)(v11 + 63) >> 6;
  v15 = v34;
  v14 = v35;
  v16 = v5;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v9 << 6);
      v19 = v37;
      goto LABEL_12;
    }
    v26 = v9 + 1;
    v19 = v37;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *(_QWORD *)(v32 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *(_QWORD *)(v32 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 2 * v18;
    v22 = (char *)(*(_QWORD *)(v19 + 56) + v21);
    v23 = *v22;
    v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v25 = (_BYTE *)(*(_QWORD *)(v16 + 56) + v21);
    *v25 = v23;
    v25[1] = v24;
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    swift_release(v37);
    v29 = v31;
    v5 = v36;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v32 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v33)
      goto LABEL_26;
    v27 = *(_QWORD *)(v32 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1000B0208()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_10007B804(&qword_10082B098);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000B03A8()
{
  sub_1000B03BC((uint64_t (*)(_QWORD))&type metadata accessor for BadgeType, &qword_10082B038);
}

void sub_1000B03BC(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - v6;
  sub_10007B804(a2);
  v27 = v2;
  v8 = *v2;
  v9 = static _DictionaryStorage.copy(original:)(*v2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    swift_release(v8);
    *v27 = v10;
    return;
  }
  v11 = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)v11 >= v8 + 64 + 8 * v12)
    memmove(v11, (const void *)(v8 + 64), 8 * v12);
  v28 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v29 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v14);
      if (!v24)
        break;
    }
LABEL_25:
    v17 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = 8 * v19;
    v22 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v22;
    swift_retain(v22);
  }
  v25 = v23 + 2;
  if (v25 >= v29)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

id sub_1000B05EC(void *a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  double v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;

  if (*(_BYTE *)(a2 + 80) != 1)
    return 0;
  v2 = objc_msgSend(a1, "traitCollection");
  if (qword_1008287B0 != -1)
    swift_once(&qword_1008287B0, sub_10007EB0C);
  v3 = type metadata accessor for StaticDimension(0);
  sub_10007AF70(v3, (uint64_t)qword_10088EFF8);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v4 = sub_10007B804((uint64_t *)&unk_10082B4A0);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100661700;
  *(_QWORD *)(v5 + 32) = v2;
  v6 = v2;
  v7 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v5);
  v8 = dispatch thunk of AnyDimension.rawValue(in:)(v7, v3, &protocol witness table for StaticDimension);

  v9 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v10 = objc_msgSend(v9, "fractionalWidthDimension:", 1.0);
  v11 = objc_msgSend(v9, "absoluteDimension:", v8);
  v12 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v10, v11);

  static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v16 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v12, v15, 5);

  return v16;
}

void sub_1000B07D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSString v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  _OWORD v26[2];

  v4 = type metadata accessor for AutomationSemantics(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10007B804(&qword_10082B088);
  swift_allocObject(v8, 120, 7);
  v9 = swift_retain_n(a1, 2);
  v10 = sub_100335A6C(v9);
  swift_retain(a2);
  v11 = (void *)sub_100333D50(a1, v10, a2);
  v12 = sub_100005C94(&qword_10082B090, type metadata accessor for VersionHistoryViewController, (uint64_t)&unk_1006623E8);
  v13 = v11;
  swift_retain(a1);
  v14 = v13;
  dispatch thunk of BaseGenericPagePresenter.view.setter(v11, v12);
  swift_release(a1);
  swift_retain(a1);
  v15 = (char *)v14;
  dispatch thunk of BaseGenericPagePresenter.pageTitle.getter();
  v17 = v16;
  v18 = swift_release(a1).n128_u64[0];
  if (v17)
  {
    v19 = String._bridgeToObjectiveC()();
    v18 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v15, "setTitle:", v19, *(double *)&v18);

  v15[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_prefersLargeTitle] = 1;
  v20 = *(_QWORD *)&v15[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_uber];
  v21 = v15;
  v22 = objc_msgSend(v21, "navigationItem");
  v23 = v22;
  if (v20)
    v24 = 2;
  else
    v24 = 3;
  objc_msgSend(v22, "setLargeTitleDisplayMode:", v24);

  v25 = objc_msgSend(v21, "view");
  if (v25)
  {
    memset(v26, 0, sizeof(v26));
    static AutomationSemantics.page(name:id:)(0x486E6F6973726576, 0xEE0079726F747369, v26);
    sub_1000057AC((uint64_t)v26, (uint64_t *)&unk_10082B490);
    UIView.setAutomationSemantics(_:)(v7);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    __break(1u);
  }
}

id sub_1000B0A48(double a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  NSString v6;
  id v7;

  if (a1 <= 0.0)
    return 0;
  v2 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v3 = objc_msgSend(v2, "fractionalWidthDimension:", 1.0);
  v4 = objc_msgSend(v2, "absoluteDimension:", a1);
  v5 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v3, v4);

  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v5, v6, 1);

  return v7;
}

uint64_t sub_1000B0B60(uint64_t a1)
{
  return sub_1000B0C90(a1, (uint64_t)sub_1000B0C60, (uint64_t (*)(uint64_t))&type metadata accessor for GenericPagePresenter, &qword_10082AFE0, (uint64_t)sub_1000B0BFC);
}

void sub_1000B0B88()
{
  uint64_t v0;

  sub_1000A7B58(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1000B0BA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B0BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_10082D0D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B0BFC()
{
  uint64_t v0;

  return sub_1000A8B10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1000B0C14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082F870;
  if (!qword_10082F870)
  {
    v1 = sub_100072594((uint64_t *)&unk_100838C90);
    result = swift_getWitnessTable(&protocol conformance descriptor for TransientStateStore<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10082F870);
  }
  return result;
}

uint64_t sub_1000B0C60()
{
  uint64_t v0;

  return sub_1000A8594(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000B0C80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B0C90(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  __n128 v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t (*v41)(uint64_t);
  unint64_t *v42;
  uint64_t v43;
  uint64_t v44[3];

  v41 = a3;
  v42 = a4;
  v39 = a2;
  v7 = v5;
  v9 = sub_10007B804((uint64_t *)&unk_10082D0D0);
  __chkstk_darwin(v9);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v37 - v13;
  v15 = type metadata accessor for IndexSet(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)v37 - v20;
  sub_1000B0BB4(a1, (uint64_t)v14);
  v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v40(v14, 1, v15) == 1)
  {
    sub_1000057AC((uint64_t)v14, (uint64_t *)&unk_10082D0D0);
    v22 = v7[14];
    if (v22)
    {
      swift_retain(v7[14]);
      ImpressionsCalculator.removeAllElements()();
      swift_release(v22);
    }
    swift_beginAccess(v7 + 7, v44, 1, 0);
    v23 = v7[7];
    v7[7] = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    v37[1] = v37;
    v44[0] = v7[3];
    __chkstk_darwin(v44[0]);
    v37[0] = 0;
    v38 = a5;
    v37[-2] = v21;
    v37[-1] = v7;
    swift_retain(v24);
    v25 = a1;
    v26 = v18;
    v27 = sub_10007B804((uint64_t *)&unk_100838C90);
    v28 = sub_1000B0C14();
    a5 = v38;
    v29 = v27;
    v18 = v26;
    a1 = v25;
    StateStore.performTransaction<A>(_:)(v39, &v37[-4], v29, (char *)&type metadata for () + 8, v28);
    v30 = swift_release(v44[0]);
    (*(void (**)(char *, uint64_t, __n128))(v16 + 8))(v21, v15, v30);
  }
  v31 = v40;
  sub_1000A8238(v41, v42);
  sub_1000B0BB4(a1, (uint64_t)v11);
  if (v31(v11, 1, v15) == 1)
    return sub_1000057AC((uint64_t)v11, (uint64_t *)&unk_10082D0D0);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v11, v15);
  v43 = v7[3];
  __chkstk_darwin(v43);
  v37[-2] = v18;
  v37[-1] = v7;
  swift_retain(v33);
  v34 = sub_10007B804((uint64_t *)&unk_100838C90);
  v35 = sub_1000B0C14();
  StateStore.performTransaction<A>(_:)(a5, &v37[-4], v34, (char *)&type metadata for () + 8, v35);
  v36 = swift_release(v43);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v36);
}

uint64_t sub_1000B0FB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000B0FCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexSet(0) - 8) + 80);
  sub_1004B6144(*(void **)(v0 + 16), (NSIndexSet *)((v1 + 24) & ~v1));
}

uint64_t sub_1000B0FFC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B100C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Accessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B1068()
{
  return sub_1000B0BFC();
}

uint64_t sub_1000B107C()
{
  return sub_1000B0C60();
}

void sub_1000B1090(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  _BYTE v28[24];
  _BYTE v29[24];

  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a2 + 16;
  swift_beginAccess(a2 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (!Strong)
    return;
  v12 = (void *)Strong;
  v13 = (uint64_t *)(Strong + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_todayCards);
  swift_beginAccess(Strong + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_todayCards, &v26, 32, 0);
  v14 = *v13;
  if ((*v13 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v15 = *(_QWORD *)(v14 + 8 * a1 + 32);
      swift_retain(v15);
      goto LABEL_6;
    }
    __break(1u);
    return;
  }
  v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v14);
LABEL_6:
  swift_endAccess(&v26);

  v16 = swift_retain(v15);
  v17 = TodayCard.clickAction.getter(v16);
  swift_release(v15);
  if (!v17)
  {
LABEL_12:
    swift_release(v15);
    return;
  }
  swift_beginAccess(v10, v28, 0, 0);
  v18 = swift_unknownObjectWeakLoadStrong(v10);
  if (!v18 || (v19 = (void *)v18, v20 = UIResponder.nearestActionRunner.getter(), v19, !v20))
  {
    swift_release(v17);
    goto LABEL_12;
  }
  swift_beginAccess(v10, v25, 0, 0);
  v21 = swift_unknownObjectWeakLoadStrong(v10);
  if (v21)
  {
    v22 = v21;
    *((_QWORD *)&v27 + 1) = type metadata accessor for TodayBrickShelfCollectionViewCell(0);
    *(_QWORD *)&v26 = v22;
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
  dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v17, &v26, v9, a3);
  swift_release(v15);
  swift_release(v20);
  v23 = swift_release(v17);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v23);
  sub_1000608D4((uint64_t)&v26);
}

double sub_1000B12C0(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v11 = type metadata accessor for SmallStoryCardLayout.Metrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v11).n128_u64[0];
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (objc_class *)objc_msgSend(a8, "traitCollection", v13);
  sub_1001990C4(v16, (uint64_t)v15);

  v17 = sub_1000B143C(a8);
  v18 = type metadata accessor for SmallStoryCardLayout(0);
  v19 = sub_1000B1704();
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v15, a8, v18, v19, v17, a2);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return a1;
}

uint64_t sub_1000B13C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_1000B14E8(a1, a3, a4, a7);
}

double sub_1000B13D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  double result;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_todayCards);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_todayCards, v4, 1, 0);
  v2 = *v1;
  *v1 = (uint64_t)_swiftEmptyArrayStorage;
  sub_1001F3FE4(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

double sub_1000B143C(void *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;
  double v7;

  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v3 = v2;
  PageTraitEnvironment.pageColumnMargin.getter();
  v5 = (v3 - v4) / 1.5;
  v6 = objc_msgSend(a1, "traitCollection");
  if (objc_msgSend(v6, "userInterfaceIdiom") == (id)1 && objc_msgSend(v6, "horizontalSizeClass") == (id)2)
  {
    PageTraitEnvironment.pageColumnWidth.getter();
    v5 = v7;
  }

  return v5;
}

uint64_t sub_1000B14E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  double v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)(unint64_t);
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[24];

  v5 = v4;
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_objectGraph);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_objectGraph) = a3;
  swift_release(v9);
  v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_artworkLoader);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_artworkLoader) = a2;
  swift_retain(a3);
  swift_release(v10);
  v11 = objc_msgSend(a4, "snapshotPageTraitEnvironment", swift_retain(a2).n128_f64[0]);
  v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_pageTraits);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_pageTraits) = v11;
  *(_QWORD *)&v13 = swift_unknownObjectRelease(v12).n128_u64[0];
  v14 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_flowLayout);
  objc_msgSend(a4, "pageMarginInsets", v13);
  v15 = Shelf.items.getter(objc_msgSend(v14, "setSectionInset:"));
  v16 = sub_100573A00(v15);
  swift_bridgeObjectRelease(v15);
  if (v16)
    v17 = v16;
  else
    v17 = _swiftEmptyArrayStorage;
  v18 = (uint64_t *)(v5 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_todayCards);
  swift_beginAccess(v5 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_todayCards, v26, 1, 0);
  v19 = *v18;
  *v18 = (uint64_t)v17;
  sub_1001F3FE4(v19);
  swift_bridgeObjectRelease(v19);
  v20 = swift_allocObject(&unk_100758060, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v5);
  v21 = swift_allocObject(&unk_100758088, 32, 7);
  *(_QWORD *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 24) = a3;
  v22 = (void (**)(unint64_t))(v5
                                               + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_didSelectHandler);
  v23 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_didSelectHandler);
  v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_didSelectHandler + 8);
  *v22 = sub_1000B16FC;
  v22[1] = (void (*)(unint64_t))v21;
  swift_retain(a3);
  return sub_10003A350(v23, v24);
}

uint64_t sub_1000B16AC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B16D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000B16FC(unint64_t a1)
{
  uint64_t v1;

  sub_1000B1090(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1000B1704()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100834640;
  if (!qword_100834640)
  {
    v1 = type metadata accessor for SmallStoryCardLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SmallStoryCardLayout, v1);
    atomic_store(result, (unint64_t *)&qword_100834640);
  }
  return result;
}

double sub_1000B174C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;

  v2 = v1;
  v3 = (id)ASKDeviceTypeGetCurrent(a1);
  v4 = ASKDeviceTypePad;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v5 == v8 && v7 == v9)
  {

    swift_bridgeObjectRelease_n(v7, 2);
LABEL_11:
    v18 = (_QWORD *)(v1 + 56);
    return *(double *)v18;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);

  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0 || (UITraitCollection.prefersAccessibilityLayouts.getter(v13) & 1) != 0)
    goto LABEL_11;
  v14 = *(double *)(v1 + 56);
  v15 = *(_QWORD *)(v1 + 88);
  if (*(_QWORD *)(v15 + 16))
  {
    v16 = sub_100062890(*(_QWORD *)(*(_QWORD *)(v2 + 96) + 16));
    if ((v17 & 1) != 0)
    {
      v18 = (_QWORD *)(*(_QWORD *)(v15 + 56) + 32 * v16);
      return *(double *)v18;
    }
  }
  return v14;
}

void sub_1000B1884(char a1@<W0>, double *a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v6;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  double Width;
  uint64_t v16;
  double v17;
  double v18;
  char v19;
  double v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  double MinX;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  double v43;
  double v44;
  uint64_t v45;
  double v46;
  CGFloat v47;
  CGFloat v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  unint64_t v53;
  unint64_t v54;
  __int128 *v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  CGFloat v60;
  double v61;
  CGFloat v62;
  double v64;
  double v65;
  double MinY;
  double v67;
  double MaxX;
  double v69;
  double MaxY;
  double v71;
  char v72;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v74;
  unint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double *v90;
  double *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  uint64_t v103;
  __int128 *v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  CGFloat v108;
  CGFloat v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  CGFloat v113;
  double v114;
  uint64_t v115;
  _OWORD v116[3];
  uint64_t v117;
  char v118[8];
  uint64_t v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;

  v91 = a2;
  v111 = type metadata accessor for FloatingPointRoundingRule(0);
  v110 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)sub_10055138C((uint64_t)_swiftEmptyArrayStorage);
  v120.origin.x = a3;
  v120.origin.y = a4;
  v120.size.width = a5;
  v120.size.height = a6;
  Width = CGRectGetWidth(v120);
  v16 = 0;
  v17 = *(double *)v6;
  v18 = *(double *)(v6 + 8);
  v114 = *(double *)(v6 + 16);
  v112 = *(_QWORD *)(v6 + 40);
  v19 = *(_BYTE *)(v6 + 48);
  if (Width <= 0.0)
    goto LABEL_12;
  v16 = 0;
  v20 = 0.0;
  while (1)
  {
    if (v17 + v20 <= Width)
    {
      v21 = __OFADD__(v16++, 1);
      if (v21)
        break;
    }
    v20 = v17 + *(double *)(v6 + 24) + v20;
    if (v20 >= Width)
      goto LABEL_8;
  }
  __break(1u);
LABEL_8:
  if (v112 < 2 || v16 <= 0)
  {
LABEL_12:
    v26 = sub_10007B804(&qword_10082B120);
    v24 = swift_allocObject(v26, 40, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100661A30;
    v27 = *(_QWORD *)(v6 + 96);
    *(_QWORD *)(v24 + 32) = v27;
    swift_bridgeObjectRetain(v27);
    v25 = 1;
  }
  else
  {
    v22 = *(_QWORD *)(v6 + 96);
    v23 = sub_10007B804((uint64_t *)&unk_10082D830);
    v24 = Array.chunked(by:)(v16, v22, v23);
    v25 = *(_QWORD *)(v24 + 16);
    if (!v25)
    {
LABEL_69:
      swift_bridgeObjectRelease(v24);
      v86 = 0.0;
      v87 = 0.0;
      v88 = 0.0;
      v89 = 0.0;
      goto LABEL_71;
    }
  }
  v28 = *(_QWORD *)(v24 + 32);
  v94 = v24 + 32;
  v29 = *(_QWORD *)(v28 + 16);
  if (v16 < v29)
    v29 = v16;
  v30 = (double)v29 + -1.0;
  if (v30 < 0.0)
    v30 = 0.0;
  v102 = (double)v29;
  v31 = v17 * (double)v29 + v114 * v30;
  v109 = v31;
  v113 = a6;
  v108 = a3;
  v32 = a3;
  if ((v19 & 1) != 0)
  {
    v39 = a4;
    v40 = a5;
    v41 = a6;
    v42 = (CGRectGetWidth(*(CGRect *)&v32) - v31) * 0.5;
    v121.origin.x = a3;
    v33 = a4;
    v121.origin.y = a4;
    v35 = a5;
    v121.size.width = a5;
    v121.size.height = a6;
    MinX = CGRectGetMinX(v121) + v42;
  }
  else
  {
    v33 = a4;
    v34 = a4;
    v35 = a5;
    v36 = a5;
    v37 = a6;
    MinX = CGRectGetMinX(*(CGRect *)&v32);
  }
  v43 = 0.0;
  if ((a1 & 1) != 0)
    v44 = MinX;
  else
    v44 = 0.0;
  v45 = v112;
  if (v112 >= v25)
    v45 = v25;
  v46 = v18 * (double)v45 + v114 * (double)(v25 - 1);
  if ((a1 & 1) != 0)
  {
    v47 = v108;
    v122.origin.x = v108;
    v122.origin.y = v33;
    v122.size.width = v35;
    v48 = v113;
    v122.size.height = v113;
    v107 = (CGRectGetHeight(v122) - v46) * 0.5;
    v123.origin.x = v47;
    v123.origin.y = v33;
    v123.size.width = v35;
    v123.size.height = v48;
    v43 = CGRectGetMinY(v123) + v107;
  }
  v93 = *(_QWORD *)(v24 + 16);
  if (!v93)
    goto LABEL_69;
  v49 = 0;
  *(double *)&v50 = 0.0;
  v104 = (__int128 *)&v115;
  v103 = (uint64_t)v116 + 8;
  LODWORD(v108) = enum case for FloatingPointRoundingRule.down(_:);
  v97 = *(_QWORD *)&v102 & 0x7FF0000000000000;
  v96 = (uint64_t)v102;
  v107 = COERCE_DOUBLE(v118);
  v101 = 0.0;
  v99 = 0.0;
  v98 = 0.0;
  v100 = 0.0;
  v92 = v24;
  while (2)
  {
    if ((unint64_t)v50 >= *(_QWORD *)(v24 + 16))
    {
LABEL_79:
      __break(1u);
LABEL_80:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
      __break(1u);
      return;
    }
    v51 = *(_QWORD *)(v94 + 8 * v50);
    v95 = v50 + 1;
    v52 = v114 * (double)v50 + v43 + v18 * (double)v50;
    v53 = *(_QWORD *)(v51 + 16);
    v105 = v51 + 32;
    v106 = v51;
    swift_bridgeObjectRetain(v51);
    v54 = 0;
    v113 = *(double *)&v50;
    if (v53)
    {
LABEL_32:
      if (v54 < *(_QWORD *)(v106 + 16))
      {
        v55 = v104;
        sub_100022500(v105 + 40 * v54, (uint64_t)v104);
        *(_QWORD *)&v116[0] = v54;
        sub_10000F5F4(v55, v103);
        ++v54;
        goto LABEL_35;
      }
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    while (1)
    {
      v54 = v53;
      memset(v116, 0, sizeof(v116));
LABEL_35:
      sub_1000B2B70((uint64_t)v116, (uint64_t)&v117);
      if (!v119)
        break;
      v56 = v117;
      v57 = v114 * (double)v117 + v44 + v17 * (double)v117;
      v58 = v110;
      v59 = v111;
      (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v13, LODWORD(v108), v111);
      v60 = CGPoint.rounded(_:)(v13, v57, v52);
      v62 = v61;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v59);
      v124.origin.x = v60;
      v124.origin.y = v62;
      v124.size.width = v17;
      v124.size.height = v18;
      v129.origin.x = v44;
      v129.origin.y = v43;
      v129.size.width = v109;
      v129.size.height = v46;
      if (!CGRectIntersectsRect(v124, v129) || v50 >= v112)
        goto LABEL_54;
      if (v97 == 0x7FF0000000000000)
        goto LABEL_75;
      if (v102 <= -9.22337204e18)
        goto LABEL_76;
      if (v102 >= 9.22337204e18)
        goto LABEL_77;
      if (v56 < v96)
      {
        v125.origin.x = v60;
        v125.origin.y = v62;
        v125.size.width = v17;
        v125.size.height = v18;
        v64 = CGRectGetMinX(v125);
        v65 = v100;
        if (v64 < v100)
          v65 = v64;
        v100 = v65;
        v126.origin.x = v60;
        v126.origin.y = v62;
        v126.size.width = v17;
        v126.size.height = v18;
        MinY = CGRectGetMinY(v126);
        v67 = v98;
        if (MinY < v98)
          v67 = MinY;
        v98 = v67;
        v127.origin.x = v60;
        v127.origin.y = v62;
        v127.size.width = v17;
        v127.size.height = v18;
        MaxX = CGRectGetMaxX(v127);
        v69 = v99;
        if (v99 <= MaxX)
          v69 = MaxX;
        v99 = v69;
        v128.origin.x = v60;
        v128.origin.y = v62;
        v128.size.width = v17;
        v128.size.height = v18;
        MaxY = CGRectGetMaxY(v128);
        v71 = v101;
        if (v101 <= MaxY)
          v71 = MaxY;
        v101 = v71;
        v72 = 1;
      }
      else
      {
LABEL_54:
        v72 = 0;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
      *(_QWORD *)&v116[0] = v14;
      v75 = sub_100062890(v49);
      v76 = v14[2];
      v77 = (v74 & 1) == 0;
      v78 = v76 + v77;
      if (__OFADD__(v76, v77))
      {
        __break(1u);
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      v79 = v74;
      if (v14[3] >= v78)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v14 = *(_QWORD **)&v116[0];
          if ((v74 & 1) != 0)
            goto LABEL_63;
        }
        else
        {
          sub_1000AD970();
          v14 = *(_QWORD **)&v116[0];
          if ((v79 & 1) != 0)
            goto LABEL_63;
        }
      }
      else
      {
        sub_1000A8E0C(v78, isUniquelyReferenced_nonNull_native);
        v80 = sub_100062890(v49);
        if ((v79 & 1) != (v81 & 1))
          goto LABEL_80;
        v75 = v80;
        v14 = *(_QWORD **)&v116[0];
        if ((v79 & 1) != 0)
        {
LABEL_63:
          v85 = v14[7] + 40 * v75;
          *(CGFloat *)v85 = v60;
          *(CGFloat *)(v85 + 8) = v62;
          *(double *)(v85 + 16) = v17;
          *(double *)(v85 + 24) = v18;
          *(_BYTE *)(v85 + 32) = v72;
          goto LABEL_64;
        }
      }
      v14[(v75 >> 6) + 8] |= 1 << v75;
      *(_QWORD *)(v14[6] + 8 * v75) = v49;
      v82 = v14[7] + 40 * v75;
      *(CGFloat *)v82 = v60;
      *(CGFloat *)(v82 + 8) = v62;
      *(double *)(v82 + 16) = v17;
      *(double *)(v82 + 24) = v18;
      *(_BYTE *)(v82 + 32) = v72;
      v83 = v14[2];
      v21 = __OFADD__(v83, 1);
      v84 = v83 + 1;
      if (v21)
        goto LABEL_78;
      v14[2] = v84;
LABEL_64:
      swift_bridgeObjectRelease(0x8000000000000000);
      *(double *)&v50 = v113;
      if (__OFADD__(v49, 1))
        goto LABEL_73;
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(*(_QWORD **)&v107);
      ++v49;
      if (v54 != v53)
        goto LABEL_32;
    }
    swift_bridgeObjectRelease(v106);
    v50 = v95;
    v24 = v92;
    if (v95 != v93)
      continue;
    break;
  }
  swift_bridgeObjectRelease(v92);
  v89 = v101;
  v86 = v100;
  v88 = v99;
  v87 = v98;
LABEL_71:
  v90 = v91;
  *(_QWORD *)v91 = v14;
  v90[1] = v86;
  v90[2] = v87;
  v90[3] = v88;
  v90[4] = v89;
}

_QWORD *sub_1000B20DC@<X0>(char a1@<W0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v6;
  _QWORD *v12;
  __n128 v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  double Width;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  double v30;
  double v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  double MinX;
  unint64_t v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double MinY;
  double MaxX;
  double MaxY;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v52;
  unint64_t v53;
  uint64_t v54;
  _BOOL8 v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *result;
  double v65;
  __int128 v66[2];
  _OWORD v67[3];
  uint64_t v68;
  _QWORD v69[5];
  uint64_t v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;

  v12 = (_QWORD *)sub_10055138C((uint64_t)_swiftEmptyArrayStorage);
  v14 = (id)ASKDeviceTypeGetCurrent(v13);
  v15 = ASKDeviceTypePad;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v18 = v17;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v21 = v20;
  if (v16 == v19 && v18 == v20)
    v23 = 1;
  else
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v19, v20, 0);

  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v21);
  v71.origin.x = a3;
  v71.origin.y = a4;
  v71.size.width = a5;
  v71.size.height = a6;
  Width = CGRectGetWidth(v71);
  v25 = *(double *)(v6 + 16);
  v26 = v25;
  if ((v23 & 1) == 0)
    v26 = *(double *)(v6 + 24);
  v27 = *(double *)v6;
  v28 = *(double *)(v6 + 8);
  v29 = 0;
  if (Width > 0.0)
  {
    v30 = v27 + v26;
    v31 = 0.0;
    while (1)
    {
      if (v27 + v31 <= Width)
      {
        v32 = __OFADD__(v29++, 1);
        if (v32)
          break;
      }
      v31 = v30 + v31;
      if (v31 >= Width)
        goto LABEL_16;
    }
    __break(1u);
  }
LABEL_16:
  v33 = *(_QWORD *)(v6 + 96);
  v70 = v33;
  v34 = *(_QWORD *)(v33 + 16);
  if (v34 >= v29)
    v35 = v29;
  else
    v35 = *(_QWORD *)(v33 + 16);
  v36 = v35 - 1;
  if (__OFSUB__(v35, 1))
    goto LABEL_58;
  v37 = 0.0;
  v38 = 0.0;
  if (v36 >= 1)
  {
    v72.origin.x = a3;
    v72.origin.y = a4;
    v72.size.width = a5;
    v72.size.height = a6;
    v38 = (CGRectGetWidth(v72) - v27 * (double)v35) / (double)v36;
  }
  if ((v23 & 1) != 0)
    v38 = v25;
  v65 = v38;
  v73.origin.x = a3;
  v73.origin.y = a4;
  v73.size.width = a5;
  v73.size.height = a6;
  MinX = CGRectGetMinX(v73);
  if ((a1 & 1) != 0)
  {
    v74.origin.x = a3;
    v74.origin.y = a4;
    v74.size.width = a5;
    v74.size.height = a6;
    v37 = floor(CGRectGetMidY(v74) + v28 * -0.5);
  }
  swift_bridgeObjectRetain(v33);
  v40 = 0;
  v41 = 0.0;
  v42 = 0.0;
  v43 = 0.0;
  v44 = 0.0;
  while (1)
  {
    if (v40 == v34)
    {
      v40 = v34;
      memset(v67, 0, sizeof(v67));
    }
    else
    {
      if (v40 >= v34)
        goto LABEL_56;
      sub_100022500(v33 + 32 + 40 * v40, (uint64_t)v66);
      *(_QWORD *)&v67[0] = v40;
      sub_10000F5F4(v66, (uint64_t)v67 + 8);
      ++v40;
    }
    sub_1000B2B70((uint64_t)v67, (uint64_t)&v68);
    if (!v69[3])
    {
      result = sub_1000B2BB8(&v70);
      *(_QWORD *)a2 = v12;
      *(double *)(a2 + 8) = v44;
      *(double *)(a2 + 16) = v43;
      *(double *)(a2 + 24) = v42;
      *(double *)(a2 + 32) = v41;
      return result;
    }
    v46 = v68;
    if (v68 < v29)
    {
      v76.origin.x = MinX;
      v76.origin.y = v37;
      v76.size.width = v27;
      v76.size.height = v28;
      v47 = CGRectGetMinX(v76);
      if (v47 < v44)
        v44 = v47;
      v77.origin.x = MinX;
      v77.origin.y = v37;
      v77.size.width = v27;
      v77.size.height = v28;
      MinY = CGRectGetMinY(v77);
      if (MinY < v43)
        v43 = MinY;
      v78.origin.x = MinX;
      v78.origin.y = v37;
      v78.size.width = v27;
      v78.size.height = v28;
      MaxX = CGRectGetMaxX(v78);
      if (v42 <= MaxX)
        v42 = MaxX;
      v79.origin.x = MinX;
      v79.origin.y = v37;
      v79.size.width = v27;
      v79.size.height = v28;
      MaxY = CGRectGetMaxY(v79);
      if (v41 <= MaxY)
        v41 = MaxY;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
    *(_QWORD *)&v67[0] = v12;
    v53 = sub_100062890(v46);
    v54 = v12[2];
    v55 = (v52 & 1) == 0;
    v56 = v54 + v55;
    if (__OFADD__(v54, v55))
      break;
    v57 = v52;
    if (v12[3] >= v56)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v12 = *(_QWORD **)&v67[0];
        if ((v52 & 1) != 0)
          goto LABEL_27;
      }
      else
      {
        sub_1000AD970();
        v12 = *(_QWORD **)&v67[0];
        if ((v57 & 1) != 0)
          goto LABEL_27;
      }
    }
    else
    {
      sub_1000A8E0C(v56, isUniquelyReferenced_nonNull_native);
      v58 = sub_100062890(v46);
      if ((v57 & 1) != (v59 & 1))
        goto LABEL_59;
      v53 = v58;
      v12 = *(_QWORD **)&v67[0];
      if ((v57 & 1) != 0)
      {
LABEL_27:
        v45 = v12[7] + 40 * v53;
        *(double *)v45 = MinX;
        *(double *)(v45 + 8) = v37;
        *(double *)(v45 + 16) = v27;
        *(double *)(v45 + 24) = v28;
        *(_BYTE *)(v45 + 32) = v46 < v29;
        goto LABEL_28;
      }
    }
    v12[(v53 >> 6) + 8] |= 1 << v53;
    *(_QWORD *)(v12[6] + 8 * v53) = v46;
    v60 = v12[7] + 40 * v53;
    *(double *)v60 = MinX;
    *(double *)(v60 + 8) = v37;
    *(double *)(v60 + 16) = v27;
    *(double *)(v60 + 24) = v28;
    *(_BYTE *)(v60 + 32) = v46 < v29;
    v61 = v12[2];
    v32 = __OFADD__(v61, 1);
    v62 = v61 + 1;
    if (v32)
      goto LABEL_57;
    v12[2] = v62;
LABEL_28:
    swift_bridgeObjectRelease(0x8000000000000000);
    v75.origin.x = MinX;
    v75.origin.y = v37;
    v75.size.width = v27;
    v75.size.height = v28;
    MinX = v65 + CGRectGetMaxX(v75);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v69);
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
  return result;
}

void sub_1000B2580(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  id v12;
  __n128 v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  id v28;
  double v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  id v58;
  __int128 v59[2];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  double v66[5];
  uint64_t v67;

  v6 = v5;
  v12 = objc_msgSend(a1, "traitCollection");
  v14 = sub_1000B174C(v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;

  v55 = v16;
  v56 = v14;
  v53 = v20;
  v54 = v18;
  v21 = CGRect.subtracting(insets:)(v14, v16, v18, v20, a2, a3, a4, a5);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v58 = a1;
  v28 = objc_msgSend(a1, "traitCollection");
  LOBYTE(v12) = UITraitCollection.prefersAccessibilityLayouts.getter(v28);

  if ((v12 & 1) != 0)
    sub_1000B1884(1, v66, v21, v23, v25, v27);
  else
    sub_1000B20DC(1, (uint64_t)v66, v21, v23, v25, v27);
  v51 = v66[2];
  v52 = v66[1];
  v49 = v66[4];
  v50 = v66[3];
  v29 = v66[0];
  v67 = *(_QWORD *)(v6 + 96);
  v30 = *(_QWORD *)(v67 + 16);
  v57 = v67 + 32;
  swift_bridgeObjectRetain(v67);
  v31 = 0;
  while (1)
  {
    if (v31 == v30)
    {
      v61 = 0u;
      v62 = 0u;
      v31 = v30;
      v60 = 0u;
      goto LABEL_11;
    }
    if (v31 >= v30)
      break;
    sub_100022500(v57 + 40 * v31, (uint64_t)v59);
    *(_QWORD *)&v60 = v31;
    sub_10000F5F4(v59, (uint64_t)&v60 + 8);
    ++v31;
LABEL_11:
    sub_1000B2B70((uint64_t)&v60, (uint64_t)&v63);
    if (!v65)
    {
      sub_1000B2BB8(&v67);
      swift_bridgeObjectRelease(*(_QWORD *)&v29);
      v48 = CGRect.adding(outsets:)(v56, v55, v54, v53, v52, v51, v50 - v52, v49 - v51);
      LayoutRect.init(representing:)(v48);
      return;
    }
    v33 = v63;
    sub_10000F5F4(&v64, (uint64_t)&v60);
    v34 = *((_QWORD *)&v61 + 1);
    v35 = v62;
    sub_100060B40(&v60, *((uint64_t *)&v61 + 1));
    v36 = objc_msgSend(v58, "traitCollection");
    if (*(_QWORD *)(*(_QWORD *)&v29 + 16))
      sub_100062890(v33);
    v37 = CGRect.withLayoutDirection(using:relativeTo:)(v36);
    v39 = v38;
    v41 = v40;
    v43 = v42;

    dispatch thunk of LayoutView.frame.setter(v34, v35, v37, v39, v41, v43);
    v44 = *((_QWORD *)&v61 + 1);
    v45 = v62;
    sub_100060B40(&v60, *((uint64_t *)&v61 + 1));
    if (*(_QWORD *)(*(_QWORD *)&v29 + 16) && (v46 = sub_100062890(v33), (v47 & 1) != 0))
      v32 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v29 + 56) + 40 * v46 + 32) ^ 1;
    else
      v32 = 1;
    dispatch thunk of LayoutView.isHidden.setter(v32 & 1, v44, v45);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v60);
  }
  __break(1u);
}

void sub_1000B2914(void *a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v6[5];
  _OWORD v7[2];

  v3 = v1[5];
  v6[4] = v1[4];
  v7[0] = v3;
  *(_OWORD *)((char *)v7 + 10) = *(_OWORD *)((char *)v1 + 90);
  v4 = v1[1];
  v6[0] = *v1;
  v6[1] = v4;
  v5 = v1[3];
  v6[2] = v1[2];
  v6[3] = v5;
  swift_getObjectType();
  sub_1000B2984(a1, (uint64_t)v6);
}

void sub_1000B2984(void *a1, uint64_t a2)
{
  id v4;
  __n128 v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  _QWORD *v22;
  id v23;
  void *v24;
  double v25[5];

  v4 = objc_msgSend(a1, "traitCollection");
  v6 = sub_1000B174C(v5);
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v14 = CGSize.subtracting(insets:)(v13);
  v16 = v15;
  v17 = objc_msgSend(a1, "traitCollection");
  LOBYTE(v4) = UITraitCollection.prefersAccessibilityLayouts.getter(v17);

  if ((v4 & 1) != 0)
    sub_1000B1884(0, v25, 0.0, 0.0, v14, v16);
  else
    sub_1000B20DC(0, (uint64_t)v25, 0.0, 0.0, v14, v16);
  v18 = v25[1];
  v19 = v25[2];
  v21 = v25[3];
  v20 = v25[4];
  v22 = sub_1000B2BB8(v25);
  CGSize.adding(outsets:)(v22, v6, v8, v10, v12, v21 - v18, v20 - v19);
  v23 = objc_msgSend(a1, "traitCollection");
  v24 = v23;
  if ((*(_BYTE *)(a2 + 105) & 1) == 0 && *(_BYTE *)(a2 + 104) == 6)
  {
    UITraitCollection.prefersAccessibilityLayouts.getter(v23);

  }
  else
  {

  }
}

uint64_t sub_1000B2B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804(&qword_10082B128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1000B2BB8(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

UIColor sub_1000B2BE0()
{
  id v0;
  id v1;
  UIColor result;

  sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
  v0 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.1);

  result.super.isa = UIColor.init(light:dark:)((UIColor)v1, (UIColor)objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.168627451, 0.188235294, 0.231372549, 1.0)).super.isa;
  qword_100889FA0 = (uint64_t)result.super.isa;
  return result;
}

char *sub_1000B2CAC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t ObjectType;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  objc_super v24;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v11 = &v5[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_itemLayoutContext];
  v13 = type metadata accessor for ItemLayoutContext(0, v12);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_spotlightView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separatorView] = 0;
  v14 = &v5[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator];
  v15 = type metadata accessor for Separator(0);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v5[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_isPartOfSpotlightShelf] = 0;
  LOBYTE(ObjectType) = (*(uint64_t (**)(uint64_t))(ObjectType + 128))(v16) & 1;
  v17 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseLockupView(0));
  v18 = v5;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView] = sub_1003E4110(ObjectType);

  v24.receiver = v18;
  v24.super_class = (Class)type metadata accessor for InAppPurchaseLockupCollectionViewCell(0);
  v19 = (char *)objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  v20 = objc_msgSend(v19, "contentView");
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v21 = objc_msgSend(v19, "contentView");
  v22 = *(id *)&v19[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView];
  objc_msgSend(v21, "addSubview:", v22);

  return v19;
}

id sub_1000B2F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char *v13;
  char *v14;
  void (*v15)(char *, _BYTE *, uint64_t);
  char *v16;
  void (*v17)(_BYTE *, uint64_t);
  char *v18;
  char *v19;
  __n128 v20;
  _BYTE v21[24];
  char v22[24];

  v1 = sub_10007B804((uint64_t *)&unk_10084CE60);
  __chkstk_darwin(v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Separator(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v21[-v9];
  v11 = v0 + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator, v22, 0, 0);
  sub_1000B5070(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000057AC((uint64_t)v3, (uint64_t *)&unk_10084CE60);
    return sub_1000B4BEC(0);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v10, v3, v4);
    v13 = *(char **)(v0 + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separatorView);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v10, v4);
    if (v13)
    {
      v14 = &v13[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
      swift_beginAccess(&v13[OBJC_IVAR____TtC8AppStore13SeparatorView_separator], v21, 33, 0);
      v15 = *(void (**)(char *, _BYTE *, uint64_t))(v5 + 24);
      v16 = v13;
      v15(v14, v7, v4);
      swift_endAccess(v21);
      objc_msgSend(v16, "setNeedsLayout");
      v17 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v17(v7, v4);

      return (id)((uint64_t (*)(_BYTE *, uint64_t))v17)(v10, v4);
    }
    else
    {
      v18 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v19 = &v18[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
      v20 = swift_beginAccess(&v18[OBJC_IVAR____TtC8AppStore13SeparatorView_separator], v21, 33, 0);
      (*(void (**)(char *, _BYTE *, uint64_t, __n128))(v5 + 40))(v19, v7, v4, v20);
      swift_endAccess(v21);
      sub_1000B4BEC(v18);

      return (id)(*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
}

uint64_t sub_1000B320C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v14;
  __n128 v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  id v17;
  _BYTE v20[24];

  v2 = v1;
  v4 = type metadata accessor for InAppPurchaseTheme(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v20[-v10 - 8];
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView];
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
  v13(&v20[-v10 - 8], a1, v4, v9);
  v14 = v12 + OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_theme;
  v15 = swift_beginAccess(v12 + OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_theme, v20, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v5 + 24))(v14, v11, v4, v15);
  swift_endAccess(v20);
  sub_1003E3D50();
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  v16((uint64_t)v11, v4);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v13)(v7, v14, v4);
  LODWORD(v12) = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 88))(v7, v4);
  LODWORD(v11) = enum case for InAppPurchaseTheme.spotlight(_:);
  v16((uint64_t)v7, v4);
  if ((_DWORD)v12 == (_DWORD)v11
    && !*(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_spotlightView])
  {
    v17 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    sub_1000B4C94(v17);

  }
  objc_msgSend(v2, "setNeedsLayout");
  return v16(a1, v4);
}

uint64_t sub_1000B33C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  char v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  double v31;

  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10007B804((uint64_t *)&unk_10082B230);
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)&v10 = __chkstk_darwin(v8).n128_u64[0];
  v12 = (char *)&v28[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, "traitCollection", v10);
  v14 = UITraitCollection.prefersAccessibilityLayouts.getter(v13);

  if ((v14 & 1) != 0)
  {
    if (qword_1008275D8 != -1)
      swift_once(&qword_1008275D8, sub_1002A1AC8);
    v16 = type metadata accessor for Separator(0);
    v17 = sub_10007AF70(v16, (uint64_t)qword_10088BDD8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a2, v17, v16);
  }
  else
  {
    if (qword_1008285A0 != -1)
      swift_once(&qword_1008285A0, sub_1003E36D0);
    v19 = type metadata accessor for InAppPurchaseLockupViewLayout.Metrics(0, v15);
    sub_10007AF70(v19, (uint64_t)qword_10088EA18);
    InAppPurchaseLockupViewLayout.Metrics.iconSize.getter();
    v28[0] = a1;
    Conditional.evaluate(with:)(v28, v8);
    v20 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v21 = v31;
    InAppPurchaseLockupViewLayout.Metrics.iconMargin.getter(v28, v20);
    v22 = v29;
    v23 = v30;
    sub_100060B40(v28, v29);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v22);
    v24 = AnyDimension.value(in:rounded:)(a1, v7, v22, v23);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v25 = v21 + v24;
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v28);
    if (qword_1008275D8 != -1)
      swift_once(&qword_1008275D8, sub_1002A1AC8);
    v26 = type metadata accessor for Separator(0);
    sub_10007AF70(v26, (uint64_t)qword_10088BDD8);
    return Separator.withLeadingInset(_:)(v25);
  }
}

id sub_1000B3658()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  id v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char *v23;
  char **v24;
  char *v25;
  __n128 v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  char *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  __n128 v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t, __n128);
  int v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  __n128 v44;
  char *v45;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  void *v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  char v57;
  __n128 v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char v69[24];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74[24];
  CGRect v75;
  objc_super v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;

  v1 = v0;
  v2 = type metadata accessor for InAppPurchaseTheme(0);
  v68 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v66 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v67 = (char *)&v64 - v5;
  __chkstk_darwin(v6);
  v8 = (char *)&v64 - v7;
  v9 = type metadata accessor for Separator(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (objc_class *)type metadata accessor for InAppPurchaseLockupCollectionViewCell(0);
  v76.receiver = v0;
  v76.super_class = v13;
  objc_msgSendSuper2(&v76, "layoutSubviews");
  v14 = objc_msgSend(v0, "contentView");
  v15 = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
  *(_QWORD *)&v16 = LayoutMarginsAware<>.layoutFrame.getter(v15).n128_u64[0];
  v18 = v17;
  v20 = v19;
  v22 = v21;

  v75.origin.x = v16;
  v75.origin.y = v18;
  v75.size.width = v20;
  v75.size.height = v22;
  v23 = *(char **)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separatorView];
  v24 = &off_1007F9000;
  if (v23)
  {
    v25 = &v23[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
    v26 = swift_beginAccess(&v23[OBJC_IVAR____TtC8AppStore13SeparatorView_separator], v69, 0, 0);
    v27 = *(void (**)(char *, char *, uint64_t, __n128))(v10 + 16);
    v27(v12, v25, v9, v26);
    v28 = v23;
    v29 = Separator.frame(forBoundingRect:in:)(v28, v16, v18, v20, v22);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v36 = *(void (**)(char *, uint64_t))(v10 + 8);
    v36(v12, v9);
    objc_msgSend(v28, "setFrame:", v29, v31, v33, v35);
    ((void (*)(char *, char *, uint64_t))v27)(v12, v25, v9);
    v24 = &off_1007F9000;
    CGRect.inset(bySeparator:in:)(v12, v1);

    v36(v12, v9);
  }
  v65 = *(char **)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView];
  v37 = &v65[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_theme];
  v38 = swift_beginAccess(&v65[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_theme], v74, 0, 0);
  v39 = v68;
  v40 = *(void (**)(char *, char *, uint64_t, __n128))(v68 + 16);
  v40(v8, v37, v2, v38);
  v41 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v8, v2);
  v42 = enum case for InAppPurchaseTheme.spotlight(_:);
  v43 = *(void (**)(char *, uint64_t))(v39 + 8);
  v43(v8, v2);
  v45 = v67;
  if (v41 == (_DWORD)v42)
  {
    x = v75.origin.x;
    y = v75.origin.y;
    width = v75.size.width;
    height = v75.size.height;
    CGRectGetMinX(v75);
    if (qword_100826B10 != -1)
      swift_once(&qword_100826B10, sub_1000B3CAC);
    v77.origin.x = x;
    v77.origin.y = y;
    v77.size.width = width;
    v77.size.height = height;
    CGRectGetMinY(v77);
    v78.origin.x = x;
    v78.origin.y = y;
    v78.size.width = width;
    v78.size.height = height;
    CGRectGetWidth(v78);
    v79.origin.x = x;
    v79.origin.y = y;
    v79.size.width = width;
    v79.size.height = height;
    v44.n128_f64[0] = CGRectGetHeight(v79);
  }
  v50 = *(void **)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_spotlightView];
  if (v50)
  {
    v51 = v50;
    CGRect.withLayoutDirection(in:relativeTo:)(v1);
    objc_msgSend(v51, v24[242]);

  }
  v40(v45, v37, v2, v44);
  v52 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 104))(v66, v42, v2);
  v53 = sub_100005C94((unint64_t *)&unk_10082B1C0, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseTheme, (uint64_t)&protocol conformance descriptor for InAppPurchaseTheme);
  dispatch thunk of RawRepresentable.rawValue.getter(&v72, v2, v53);
  dispatch thunk of RawRepresentable.rawValue.getter(&v70, v2, v53);
  v54 = v73;
  v55 = v71;
  if (v72 == v70 && v73 == v71)
  {
    v56 = swift_bridgeObjectRelease_n(v73, 2);
    ((void (*)(char *, uint64_t, __n128))v43)(v52, v2, v56);
    v43(v45, v2);
  }
  else
  {
    v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v70, v71, 0);
    swift_bridgeObjectRelease(v54);
    v58 = swift_bridgeObjectRelease(v55);
    ((void (*)(char *, uint64_t, __n128))v43)(v52, v2, v58);
    v43(v45, v2);
    if ((v57 & 1) == 0)
      goto LABEL_15;
  }
  if (qword_100826B10 != -1)
    swift_once(&qword_100826B10, sub_1000B3CAC);
LABEL_15:
  if (v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_isPartOfSpotlightShelf] == 1
    && qword_100826B10 != -1)
  {
    swift_once(&qword_100826B10, sub_1000B3CAC);
  }
  v59 = v75.origin.x;
  v60 = v75.origin.y;
  v61 = v75.size.width;
  v62 = v75.size.height;
  CGRectGetMinX(v75);
  v80.origin.x = v59;
  v80.origin.y = v60;
  v80.size.width = v61;
  v80.size.height = v62;
  CGRectGetMinY(v80);
  v81.origin.x = v59;
  v81.origin.y = v60;
  v81.size.width = v61;
  v81.size.height = v62;
  CGRectGetWidth(v81);
  v82.origin.x = v59;
  v82.origin.y = v60;
  v82.size.width = v61;
  v82.size.height = v62;
  CGRectGetHeight(v82);
  CGRect.withLayoutDirection(in:relativeTo:)(v1);
  return objc_msgSend(v65, v24[242]);
}

void sub_1000B3CAC()
{
  qword_100889FA8 = 0x4024000000000000;
}

uint64_t sub_1000B3CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  _BYTE *v63;
  id v64;
  __n128 v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  NSString v69;
  uint64_t v70;
  char *v71;
  id v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  NSString v76;
  uint64_t v77;
  uint64_t v78;
  char **v79;
  uint64_t v80;
  char *v81;
  __n128 v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  char *v98;
  uint64_t v99;
  int v100;
  id v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t, uint64_t);
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  void *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v127 = a4;
  v144 = a3;
  v142 = a2;
  v146 = a1;
  v6 = sub_10007B804((uint64_t *)&unk_10082A420);
  v7 = __chkstk_darwin(v6);
  v141 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v7);
  v139 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v140 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10007B804((uint64_t *)&unk_10082B1A0);
  __chkstk_darwin(v10);
  v128 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10007B804((uint64_t *)&unk_10082E210);
  __chkstk_darwin(v12);
  v133 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v131 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for OfferEnvironment(0);
  v120 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v119 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v118 = (char *)&v113 - v17;
  __chkstk_darwin(v18);
  v121 = (char *)&v113 - v19;
  v20 = sub_10007B804((uint64_t *)&unk_10082A450);
  v137 = *(_QWORD *)(v20 - 8);
  v138 = v20;
  __chkstk_darwin(v20);
  v145 = (uint64_t)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for InAppPurchaseTheme(0);
  v23 = __chkstk_darwin(v22);
  v126 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for Shelf.PresentationHints(0, v23);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for FloatingPointRoundingRule(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10007B804((uint64_t *)&unk_10084CE60);
  __chkstk_darwin(v27);
  v29 = (char *)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for ComponentLayoutOptions(0);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v33 = (char *)&v113 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for Separator(0);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v37 = (char *)&v113 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a5;
  v39 = sub_1000B33C4(a5, (uint64_t)v37);
  static ComponentLayoutOptions.separatorHidden.getter(v39);
  v40 = sub_100005C94((unint64_t *)&qword_10082B1B0, (uint64_t (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions, (uint64_t)&protocol conformance descriptor for ComponentLayoutOptions);
  LOBYTE(a5) = dispatch thunk of SetAlgebra.isSuperset(of:)(v33, v30, v40);
  v41 = *(void (**)(char *, uint64_t))(v31 + 8);
  v41(v33, v30);
  v135 = v35;
  v136 = v34;
  v143 = v37;
  if ((a5 & 1) != 0)
  {
    v114 = v38;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v29, 1, 1, v34);
    v42 = v129;
    v43 = (uint64_t)&v129[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator];
    swift_beginAccess(&v129[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator], &v147, 33, 0);
    sub_1000B5028((uint64_t)v29, v43);
    swift_endAccess(&v147);
    sub_1000B2F94();
    v44 = sub_1000057AC((uint64_t)v29, (uint64_t *)&unk_10084CE60);
    static ComponentLayoutOptions.fixedHeightContainer.getter(v44);
    v45 = dispatch thunk of SetAlgebra.isSuperset(of:)(v33, v30, v40);
    v41(v33, v30);
    v46 = objc_msgSend(v42, "contentView");
    v47 = v46;
    v48 = v42;
    if ((v45 & 1) != 0)
    {
      objc_msgSend(v46, "layoutMargins");
      objc_msgSend(v47, "setLayoutMargins:");

    }
    else
    {
      Separator.verticalOutset.getter(&v147);
      v52 = v148;
      v53 = v149;
      sub_100060B40(&v147, v148);
      v54 = v115;
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v52);
      AnyDimension.value(in:rounded:)(v114, v54, v52, v53);
      (*(void (**)(char *, uint64_t))(v116 + 8))(v54, v117);
      objc_msgSend(v47, "layoutMargins");
      objc_msgSend(v47, "setLayoutMargins:");

      v49 = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v147);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v29, v37, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v29, 0, 1, v34);
    v48 = v129;
    v50 = (uint64_t)&v129[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator];
    swift_beginAccess(&v129[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator], &v147, 33, 0);
    sub_1000B5028((uint64_t)v29, v50);
    swift_endAccess(&v147);
    sub_1000B2F94();
    sub_1000057AC((uint64_t)v29, (uint64_t *)&unk_10084CE60);
    v51 = objc_msgSend(v48, "contentView");
    objc_msgSend(v51, "layoutMargins");
    objc_msgSend(v51, "setLayoutMargins:");

  }
  v55 = (uint64_t)v128;
  v56 = (uint64_t)v126;
  v57 = v125;
  v58 = v124;
  v59 = v123;
  static Shelf.PresentationHints.inProductPageSpotlight.getter(v49);
  v60 = sub_100005C94((unint64_t *)&unk_10082B190, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v61 = dispatch thunk of SetAlgebra.isSuperset(of:)(v59, v57, v60);
  v62 = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v59, v57);
  v48[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_isPartOfSpotlightShelf] = v61 & 1;
  InAppPurchaseLockup.theme.getter(v62);
  sub_1000B320C(v56);
  v63 = *(_BYTE **)&v48[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView];
  v64 = *(id *)&v63[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_titleLabel];
  Lockup.title.getter(v65);
  if (v66)
  {
    v68 = v66;
    v69 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v67 = swift_bridgeObjectRelease(v68).n128_u64[0];
  }
  else
  {
    v69 = 0;
  }
  v70 = v134;
  v71 = v143;
  objc_msgSend(v64, "setText:", v69, v67);

  v72 = *(id *)&v63[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_descriptionLabel];
  InAppPurchaseLockup.descriptionText.getter();
  if (v73)
  {
    v75 = v73;
    v76 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v74 = swift_bridgeObjectRelease(v75).n128_u64[0];
  }
  else
  {
    v76 = 0;
  }
  objc_msgSend(v72, "setText:", v76, v74);

  v78 = Lockup.offerDisplayProperties.getter(v77);
  v79 = &off_1007F9000;
  if (v78)
  {
    v80 = v78;
    v81 = v118;
    OfferDisplayProperties.environment.getter();
    v82 = swift_release(v80);
    v83 = v120;
    v84 = v121;
    v85 = v122;
    (*(void (**)(char *, char *, uint64_t, __n128))(v120 + 32))(v121, v81, v122, v82);
    v86 = v119;
    (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v119, enum case for OfferEnvironment.widthConstrainedLockup(_:), v85);
    LOBYTE(v81) = static OfferEnvironment.== infix(_:_:)(v84, v86);
    v87 = *(void (**)(char *, uint64_t))(v83 + 8);
    v87(v86, v85);
    if ((v81 & 1) != 0)
    {
      v88 = v130;
      v89 = v131;
      v90 = v132;
      (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v131, enum case for OfferButtonSubtitlePosition.below(_:), v132);
      v91 = v133;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v133, 1, 1, v90);
      v92 = sub_100005C94((unint64_t *)&qword_10082E240, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
      AccessibilityConditional.init(value:axValue:)(v89, v91, v90, v92);
      v93 = v63[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_isHeightConstrained];
      v63[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_isHeightConstrained] = 1;
      v79 = &off_1007F9000;
      if ((v93 & 1) == 0)
        objc_msgSend(v63, "setNeedsLayout");
      v87(v121, v122);
      goto LABEL_20;
    }
    v87(v84, v85);
    v79 = &off_1007F9000;
  }
  v94 = v130;
  v95 = v131;
  v96 = v132;
  (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v131, enum case for OfferButtonSubtitlePosition.right(_:), v132);
  v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56);
  v98 = v133;
  v97(v133, 1, 1, v96);
  v99 = sub_100005C94((unint64_t *)&qword_10082E240, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
  AccessibilityConditional.init(value:axValue:)(v95, v98, v96, v99);
  v100 = v63[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_isHeightConstrained];
  v63[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_isHeightConstrained] = 0;
  if (v100 == 1)
    objc_msgSend(v63, v79[260]);
LABEL_20:
  v101 = *(id *)&v63[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_offerButton];
  v102 = Lockup.offerDisplayProperties.getter(v101);
  v104 = Lockup.buttonAction.getter(v103);
  v106 = v139;
  v105 = v140;
  (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v140, enum case for OfferButtonPresenterViewAlignment.left(_:), v70);
  v107 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56);
  v108 = v141;
  v107(v141, 1, 1, v70);
  v109 = sub_100005C94((unint64_t *)&unk_10082A440, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
  AccessibilityConditional.init(value:axValue:)(v105, v108, v70, v109);
  v110 = sub_10007B804((uint64_t *)&unk_100833930);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v55, 0, 1, v110);
  v111 = v145;
  sub_100556868(v102, v104, 0, v55, v145, v142, 0, 0);

  swift_release(v104);
  swift_release(v102);
  sub_1000057AC(v55, (uint64_t *)&unk_10082B1A0);
  objc_msgSend(v48, v79[260]);
  (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v111, v138);
  return (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v71, v136);
}

id sub_1000B4860()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InAppPurchaseLockupCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000B4910()
{
  return type metadata accessor for InAppPurchaseLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for InAppPurchaseLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10082B168;
  if (!qword_10082B168)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InAppPurchaseLockupCollectionViewCell);
  return result;
}

void sub_1000B4954(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  sub_1000059F0(319, (unint64_t *)&qword_10082D7D0, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = "\b";
    v6[3] = "\b";
    sub_1000059F0(319, (unint64_t *)&unk_10082B180, (uint64_t (*)(uint64_t))&type metadata accessor for Separator);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      v6[5] = &unk_1006624A0;
      swift_updateClassMetadata2(a1, 256, 6, v6, a1 + 80);
    }
  }
}

double sub_1000B4A18(void *a1, char a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Separator(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v23[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1000B33C4(a1, (uint64_t)v15);
  type metadata accessor for InAppPurchaseLockupView(0);
  v16 = sub_1003C5010(a1, a3, a4);
  v18 = v16;
  if ((a2 & 1) != 0)
  {
    Separator.verticalOutset.getter(v23);
    v19 = v24;
    v20 = v25;
    sub_100060B40(v23, v24);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v19);
    AnyDimension.value(in:rounded:)(a1, v11, v19, v20);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v23);
  }
  else
  {
    v18 = CGSize.adding(separator:in:)(v15, a1, v16, v17);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v18;
}

id sub_1000B4BEC(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separatorView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separatorView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "addSubview:", v8);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_1000B4C94(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_spotlightView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_spotlightView];
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = *(void **)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = a1;
  v6 = a1;

  v7 = *(void **)&v1[v3];
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v8, "_setCornerRadius:", 4.0);
    if (qword_100826B08 != -1)
      swift_once(&qword_100826B08, sub_1000B2BE0);
    objc_msgSend(v8, "setBackgroundColor:", qword_100889FA0);
    v9 = objc_msgSend(v1, "contentView");
    objc_msgSend(v9, "insertSubview:atIndex:", v8, 0);

  }
  return objc_msgSend(v1, "setNeedsLayout");
}

uint64_t sub_1000B4D90(uint64_t a1, double a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  double v24;
  id v25;
  char v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  _QWORD v35[2];

  v35[1] = a1;
  v8 = type metadata accessor for Separator(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Shelf.PresentationHints(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  v18 = v17;
  type metadata accessor for InAppPurchaseLockupView(0);
  sub_1003C5010(a5, v18, a3);
  v20 = v19;
  static Shelf.PresentationHints.inProductPageSpotlight.getter(v21);
  v22 = sub_100005C94((unint64_t *)&unk_10082B190, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v23 = dispatch thunk of SetAlgebra.isSuperset(of:)(v16, v13, v22);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((v23 & 1) != 0)
  {
    if (qword_100826B10 != -1)
      swift_once(&qword_100826B10, sub_1000B3CAC);
    v20 = v20 + *(double *)&qword_100889FA8 + *(double *)&qword_100889FA8;
  }
  sub_1000B33C4(a5, (uint64_t)v12);
  v24 = Separator.height(in:)(a5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  objc_msgSend(a5, "pageMarginInsets");
  v25 = objc_msgSend(a5, "traitCollection");
  v26 = UITraitCollection.isSizeClassRegular.getter(v25);

  if ((v26 & 1) != 0 || JUScreenClassGetPortraitWidth(1) >= a2)
  {
    PageTraitEnvironment.pageColumnWidth.getter();
    v30 = v31;
  }
  else
  {
    PageTraitEnvironment.pageColumnWidth.getter();
    v28 = v27;
    PageTraitEnvironment.pageColumnMargin.getter();
    v30 = v28 - (v29 + v29);
  }
  v32 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutDimension), "absoluteDimension:", v30);
  v33 = static ComponentLayoutBuilder.columnGroup(separatedBy:itemHeight:groupWidth:rowCount:)(v24, v20);

  return v33;
}

uint64_t sub_1000B5028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_10084CE60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B5070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_10084CE60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B5124()
{
  return type metadata accessor for InAppPurchaseNonTiledLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for InAppPurchaseNonTiledLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10082B1F8;
  if (!qword_10082B1F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InAppPurchaseNonTiledLockupCollectionViewCell);
  return result;
}

uint64_t sub_1000B5168(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 304);
}

id sub_1000B519C()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(*(_QWORD *)(v0
                                                   + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView)
                                       + OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_iconView)
                           + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView));
}

double sub_1000B51D0()
{
  uint64_t v0;

  if (qword_1008285A8 != -1)
    swift_once(&qword_1008285A8, sub_1003E3C6C);
  v0 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
  sub_10007AF70(v0, (uint64_t)qword_10088EA30);
  return InAppPurchaseIconLayout.Metrics.mainIconDimension.getter();
}

void sub_1000B5234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;

  v3 = type metadata accessor for Artwork.Style(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork.Crop(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain(a1);
    v12 = Artwork.crop.getter(v11);
    v13 = Artwork.Crop.preferredContentMode.getter(v12);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (qword_1008285A8 != -1)
      swift_once(&qword_1008285A8, sub_1003E3C6C);
    v14 = type metadata accessor for InAppPurchaseIconLayout.Metrics(0);
    sub_10007AF70(v14, (uint64_t)qword_10088EA30);
    v15 = InAppPurchaseIconLayout.Metrics.mainIconDimension.getter();
    v16 = Artwork.config(_:mode:prefersLayeredImage:)(v13, 0, v15, v15);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView);
    v18 = OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_iconView;
    v19 = objc_retain(*(id *)(*(_QWORD *)(v17 + OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_iconView)
                            + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView));
    Artwork.style.getter(v19);
    v20 = ArtworkView.style.setter(v6);
    v21 = objc_msgSend(v19, "setContentMode:", Artwork.contentMode.getter(v20));
    v22 = ArtworkLoaderConfig.size.getter(v21);
    v24 = ArtworkView.imageSize.setter(v22, v23);
    v25 = Artwork.backgroundColor.getter(v24);
    if (!v25)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v25 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v25);

    v26 = *(void **)(*(_QWORD *)(v17 + v18) + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView);
    objc_msgSend(v26, "setContentMode:", v13);
    v27 = type metadata accessor for ArtworkView(0);
    v28 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v29 = v26;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v16, 2, 1, v29, v27, v28);
    swift_release(a1);
    swift_release(v16);

  }
}

void sub_1000B54A8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  id v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _QWORD v42[2];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0);
  __chkstk_darwin(v6);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AspectRatio(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v42[1] = a2;
    swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v42[0] = Artwork.Crop.preferredContentMode.getter(v19);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (qword_100826D50 != -1)
      swift_once(&qword_100826D50, sub_100127648);
    v20 = sub_10007AF70(v9, (uint64_t)qword_10088A788);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v20, v9);
    v21 = objc_msgSend(v3, "contentView");
    v22 = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
    LayoutMarginsAware<>.layoutFrame.getter(v22);
    v24 = v23;

    v26 = AspectRatio.height(fromWidth:)(v25, v24);
    v27 = objc_msgSend(v3, "contentView");
    LayoutMarginsAware<>.layoutFrame.getter(v22);
    v29 = v28;

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = v42[0];
    v31 = Artwork.config(_:mode:prefersLayeredImage:)(v42[0], 0, v29, v26);
    v32 = *(id *)&v3[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView];
    Artwork.style.getter(v32);
    v33 = ArtworkView.style.setter(v8);
    v34 = objc_msgSend(v32, "setContentMode:", Artwork.contentMode.getter(v33));
    v35 = ArtworkLoaderConfig.size.getter(v34);
    v37 = ArtworkView.imageSize.setter(v35, v36);
    v38 = Artwork.backgroundColor.getter(v37);
    if (!v38)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v38 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v38);

    objc_msgSend(v32, "setContentMode:", v30);
    v39 = type metadata accessor for ArtworkView(0);
    v40 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v41 = v32;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v31, 2, 1, v41, v39, v40);
    swift_release(a1);
    swift_release(v31);

  }
}

void sub_1000B57D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;

  v2 = v1;
  swift_getObjectType();
  v4 = type metadata accessor for Artwork.Style(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain(a1);
    v13 = Artwork.crop.getter(v12);
    v14 = Artwork.Crop.preferredContentMode.getter(v13);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore31SmallBreakoutCollectionViewCell_pageTraits);
    if (v15)
    {
      swift_getObjectType();
      swift_unknownObjectRetain(v15);
      v17 = sub_10014F7C0(v16);
      v19 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v17 = 0.0;
      v19 = 0.0;
    }
    v20 = Artwork.config(_:mode:prefersLayeredImage:)(v14, 0, v17, v19);
    v21 = OBJC_IVAR____TtC8AppStore31SmallBreakoutCollectionViewCell_iconView;
    v22 = *(id *)(v2 + OBJC_IVAR____TtC8AppStore31SmallBreakoutCollectionViewCell_iconView);
    Artwork.style.getter(v22);
    v23 = ArtworkView.style.setter(v7);
    v24 = objc_msgSend(v22, "setContentMode:", Artwork.contentMode.getter(v23));
    v25 = ArtworkLoaderConfig.size.getter(v24);
    v27 = ArtworkView.imageSize.setter(v25, v26);
    v28 = Artwork.backgroundColor.getter(v27);
    if (!v28)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v28 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v28);

    objc_msgSend(*(id *)(v2 + v21), "setContentMode:", v14);
    v29 = *(void **)(v2 + v21);
    v30 = type metadata accessor for ArtworkView(0);
    v31 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v32 = v29;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v20, 2, 1, v32, v30, v31);
    swift_release(a1);
    swift_release(v20);

  }
}

void sub_1000B5A44(uint64_t a1, uint64_t a2)
{
  sub_1000B6784(a1, a2, &OBJC_IVAR____TtC8AppStore26TodayCardLockupOverlayView_lockupView);
}

void sub_1000B5A50(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  double v25;
  double v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  _QWORD v46[2];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RibbonBarItemCellLayout.Metrics(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Artwork.Crop(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v46[1] = a2;
    swift_retain(a1);
    v20 = Artwork.crop.getter(v19);
    v46[0] = Artwork.Crop.preferredContentMode.getter(v20);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v21 = objc_msgSend(v3, "traitCollection");
    v22 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore31RibbonBarItemCollectionViewCell_artworkSize];
    v23 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore31RibbonBarItemCollectionViewCell_artworkSize + 8];
    v24 = v3[OBJC_IVAR____TtC8AppStore31RibbonBarItemCollectionViewCell_artworkSize + 16];
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v21) & 1) != 0)
      sub_1005C2270((UITraitCollection)v21, (uint64_t)v14);
    else
      sub_1005C24E4(v22, v23, v24, v25, v26, v27, v28);
    v29 = v46[0];

    v30 = RibbonBarItemCellLayout.Metrics.artworkSize.getter();
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v33 = Artwork.config(_:mode:prefersLayeredImage:)(v29, 0, v30, v32);
    v34 = *(id *)&v3[OBJC_IVAR____TtC8AppStore31RibbonBarItemCollectionViewCell_artworkView];
    Artwork.style.getter(v34);
    v35 = ArtworkView.style.setter(v9);
    *(_QWORD *)&v36 = Artwork.contentMode.getter(v35).n128_u64[0];
    v38 = ArtworkLoaderConfig.size.getter(objc_msgSend(v34, "setContentMode:", v37, v36));
    v40 = ArtworkView.imageSize.setter(v38, v39);
    v41 = Artwork.backgroundColor.getter(v40);
    if (!v41)
    {
      v42 = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v41 = static UIColor.placeholderBackground.getter(v42);
    }
    ArtworkView.backgroundColor.setter(v41);

    objc_msgSend(v34, "setContentMode:", v29);
    v43 = type metadata accessor for ArtworkView(0);
    v44 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v45 = v34;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v33, 2, 1, v45, v43, v44);
    swift_release(a1);
    swift_release(v33);

  }
}

void sub_1000B5D2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;

  v3 = type metadata accessor for Artwork.Style(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork.Crop(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain(a1);
    v12 = Artwork.crop.getter(v11);
    v13 = Artwork.Crop.preferredContentMode.getter(v12);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = Artwork.config(_:mode:prefersLayeredImage:)(v13, 0, *(double *)(v1 + OBJC_IVAR____TtC8AppStore23QuoteCollectionViewCell_preferredArtworkSize), *(double *)(v1 + OBJC_IVAR____TtC8AppStore23QuoteCollectionViewCell_preferredArtworkSize + 8));
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore23QuoteCollectionViewCell_quoteView);
    v16 = OBJC_IVAR____TtC8AppStore9QuoteView_artworkView;
    v17 = *(id *)(v15 + OBJC_IVAR____TtC8AppStore9QuoteView_artworkView);
    Artwork.style.getter(v17);
    v18 = ArtworkView.style.setter(v6);
    v19 = objc_msgSend(v17, "setContentMode:", Artwork.contentMode.getter(v18));
    v20 = ArtworkLoaderConfig.size.getter(v19);
    v22 = ArtworkView.imageSize.setter(v20, v21);
    v23 = Artwork.backgroundColor.getter(v22);
    if (!v23)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v23 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v23);

    objc_msgSend(*(id *)(v15 + v16), "setContentMode:", v13);
    v24 = *(void **)(v15 + v16);
    v25 = type metadata accessor for ArtworkView(0);
    v26 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v27 = v24;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v14, 2, 1, v27, v25, v26);
    swift_release(a1);
    swift_release(v14);

  }
}

void sub_1000B5F58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;

  v2 = v1;
  v4 = type metadata accessor for Artwork.Style(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Artwork.Crop(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - v13;
  if (a1)
  {
    swift_retain(a1);
    v16 = Artwork.crop.getter(v15);
    static Artwork.Crop.boundingBox.getter(v16);
    v17 = sub_100005C94((unint64_t *)&unk_100835F10, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.Crop, (uint64_t)&protocol conformance descriptor for Artwork.Crop);
    v18 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v14, v8, v17);
    v19 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
    v20 = v19(v11, v8);
    if ((v18 & 1) != 0)
      v21 = 6;
    else
      v21 = Artwork.Crop.preferredContentMode.getter(v20);
    v19(v14, v8);
    v22 = Artwork.config(_:mode:prefersLayeredImage:)(v21, 0, *(double *)(v2 + OBJC_IVAR____TtC8AppStore29LargeLockupCollectionViewCell_preferredArtworkSize), *(double *)(v2 + OBJC_IVAR____TtC8AppStore29LargeLockupCollectionViewCell_preferredArtworkSize + 8));
    v23 = *(id *)(v2 + OBJC_IVAR____TtC8AppStore29LargeLockupCollectionViewCell_artworkView);
    Artwork.style.getter(v23);
    v24 = ArtworkView.style.setter(v7);
    v25 = objc_msgSend(v23, "setContentMode:", Artwork.contentMode.getter(v24));
    v26 = ArtworkLoaderConfig.size.getter(v25);
    v28 = ArtworkView.imageSize.setter(v26, v27);
    v29 = Artwork.backgroundColor.getter(v28);
    if (!v29)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v29 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v29);

    objc_msgSend(v23, "setContentMode:", v21);
    v30 = type metadata accessor for ArtworkView(0);
    v31 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v32 = v23;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v22, 2, 1, v32, v30, v31);
    swift_release(a1);
    swift_release(v22);

  }
}

void sub_1000B61E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  _BYTE v44[24];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0);
  __chkstk_darwin(v6);
  v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v44[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v44[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    v43 = a2;
    swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v20 = Artwork.Crop.preferredContentMode.getter(v19);
    v21 = *(void (**)(char *, uint64_t))(v15 + 8);
    v22 = v20;
    v21(v17, v14);
    v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_lockupView);
    v24 = v23 + OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics;
    v25 = swift_beginAccess(v23 + OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics, v44, 0, 0);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v24, v9, v25);
    v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, v27, v29);
    v31 = OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView;
    v32 = *(id *)(v23 + OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView);
    Artwork.style.getter(v32);
    v33 = ArtworkView.style.setter(v8);
    v34 = objc_msgSend(v32, "setContentMode:", Artwork.contentMode.getter(v33));
    v35 = ArtworkLoaderConfig.size.getter(v34);
    v37 = ArtworkView.imageSize.setter(v35, v36);
    v38 = Artwork.backgroundColor.getter(v37);
    if (!v38)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v38 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v38);

    v39 = *(void **)(v23 + v31);
    objc_msgSend(v39, "setContentMode:", v22);
    v40 = type metadata accessor for ArtworkView(0);
    v41 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v42 = v39;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v42, v40, v41);
    swift_release(a1);
    swift_release(v30);

  }
}

void sub_1000B649C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _BYTE v43[24];

  v3 = v2;
  v6 = type metadata accessor for Artwork.Style(0);
  __chkstk_darwin(v6);
  v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v43[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    v42 = a2;
    swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v20 = Artwork.Crop.preferredContentMode.getter(v19);
    v21 = *(void (**)(char *, uint64_t))(v15 + 8);
    v22 = v20;
    v21(v17, v14);
    v23 = OBJC_IVAR____TtC8AppStore35TodayCardMarketingLockupOverlayView_lockupView;
    v24 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore35TodayCardMarketingLockupOverlayView_lockupView)
                    + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_lockupView)
        + OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics;
    v25 = swift_beginAccess(v24, v43, 0, 0);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v24, v9, v25);
    v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, v27, v29);
    v31 = *(id *)(*(_QWORD *)(v3 + v23) + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_artworkView);
    Artwork.style.getter(v31);
    v32 = ArtworkView.style.setter(v8);
    v33 = objc_msgSend(v31, "setContentMode:", Artwork.contentMode.getter(v32));
    v34 = ArtworkLoaderConfig.size.getter(v33);
    v36 = ArtworkView.imageSize.setter(v34, v35);
    v37 = Artwork.backgroundColor.getter(v36);
    if (!v37)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v37 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v37);

    objc_msgSend(*(id *)(*(_QWORD *)(v3 + v23) + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_artworkView), "setContentMode:", v22);
    v38 = *(void **)(*(_QWORD *)(v3 + v23) + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_artworkView);
    v39 = type metadata accessor for ArtworkView(0);
    v40 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v41 = v38;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v41, v39, v40);
    swift_release(a1);
    swift_release(v30);

  }
}

void sub_1000B6778(uint64_t a1, uint64_t a2)
{
  sub_1000B6784(a1, a2, &OBJC_IVAR____TtC8AppStore34TodayCardAppEventLockupOverlayView_lockupView);
}

void sub_1000B6784(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _QWORD v43[3];
  _BYTE v44[24];

  v6 = type metadata accessor for Artwork.Style(0);
  __chkstk_darwin(v6);
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Artwork.Crop(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v43[1] = a2;
    swift_retain(a1);
    v19 = Artwork.crop.getter(v18);
    v20 = Artwork.Crop.preferredContentMode.getter(v19);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v21 = *a3;
    v22 = v20;
    v23 = *(_QWORD *)(v43[2] + v21);
    v24 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_lockupView)
        + OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics;
    v25 = swift_beginAccess(v24, v44, 0, 0);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, v24, v9, v25);
    v27 = SmallLockupLayout.Metrics.artworkSize.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v30 = Artwork.config(_:mode:prefersLayeredImage:)(v22, 0, v27, v29);
    v31 = OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_artworkView;
    v32 = *(id *)(v23 + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_artworkView);
    Artwork.style.getter(v32);
    v33 = ArtworkView.style.setter(v8);
    v34 = objc_msgSend(v32, "setContentMode:", Artwork.contentMode.getter(v33));
    v35 = ArtworkLoaderConfig.size.getter(v34);
    v37 = ArtworkView.imageSize.setter(v35, v36);
    v38 = Artwork.backgroundColor.getter(v37);
    if (!v38)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v38 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v38);

    v39 = *(void **)(v23 + v31);
    objc_msgSend(v39, "setContentMode:", v22);
    v40 = type metadata accessor for ArtworkView(0);
    v41 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v42 = v39;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v30, 2, 1, v42, v40, v41);
    swift_release(a1);
    swift_release(v30);

  }
}

void sub_1000B6A50(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  id v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  char *v44;
  char *v45;
  _QWORD v46[3];

  v3 = v2;
  v45 = v3;
  ObjectType = swift_getObjectType();
  v6 = type metadata accessor for Artwork.Style(0);
  __chkstk_darwin(v6);
  v44 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10007B804((uint64_t *)&unk_10082B230);
  v43 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MediumLockupLayout.Metrics(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Artwork.Crop(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v41 = a2;
    swift_retain(a1);
    v22 = Artwork.crop.getter(v21);
    v40 = Artwork.Crop.preferredContentMode.getter(v22);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v23 = v45;
    v24 = objc_msgSend(v45, "traitCollection");
    sub_1005416BC((uint64_t)v16);

    MediumLockupLayout.Metrics.artworkSize.getter();
    v25 = *(void (**)(char *, uint64_t))(v13 + 8);
    v26 = v40;
    v25(v16, v12);
    v46[0] = v23;
    Conditional.evaluate(with:)(v46, v8);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v8);
    v27 = Artwork.config(_:mode:prefersLayeredImage:)(v26, 0, *(double *)&v46[1], *(double *)&v46[2]);
    v28 = *(id *)&v23[OBJC_IVAR____TtC8AppStore30MediumLockupCollectionViewCell_artworkView];
    v29 = v44;
    Artwork.style.getter(v28);
    v30 = ArtworkView.style.setter(v29);
    v31 = objc_msgSend(v28, "setContentMode:", Artwork.contentMode.getter(v30));
    v32 = ArtworkLoaderConfig.size.getter(v31);
    v34 = ArtworkView.imageSize.setter(v32, v33);
    v35 = Artwork.backgroundColor.getter(v34);
    if (!v35)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v35 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v35);

    objc_msgSend(v28, "setContentMode:", v26);
    v36 = type metadata accessor for ArtworkView(0);
    v37 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v38 = v28;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v27, 2, 1, v38, v36, v37);
    swift_release(a1);
    swift_release(v27);

  }
}

void sub_1000B6D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;

  v3 = type metadata accessor for Artwork.Style(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork.Crop(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain(a1);
    v12 = Artwork.crop.getter(v11);
    v13 = Artwork.Crop.preferredContentMode.getter(v12);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = Artwork.config(_:mode:prefersLayeredImage:)(v13, 0, *(double *)(v1 + qword_10088C948), *(double *)(v1 + qword_10088C948 + 8));
    v15 = *(id *)(v1 + qword_10088C940);
    Artwork.style.getter(v15);
    v16 = ArtworkView.style.setter(v6);
    v17 = objc_msgSend(v15, "setContentMode:", Artwork.contentMode.getter(v16));
    v18 = ArtworkLoaderConfig.size.getter(v17);
    v20 = ArtworkView.imageSize.setter(v18, v19);
    v21 = Artwork.backgroundColor.getter(v20);
    if (!v21)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v21 = static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter(v21);

    objc_msgSend(v15, "setContentMode:", v13);
    v22 = type metadata accessor for ArtworkView(0);
    v23 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v24 = v15;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v14, 2, 1, v24, v22, v23);
    swift_release(a1);
    swift_release(v14);

  }
}

void sub_1000B6F80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  id v11;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView);
  v5 = OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_iconView;
  v6 = objc_retain(*(id *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_iconView)
                         + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView));
  ArtworkView.isImageHidden.setter(1);

  v7 = *(void **)(*(_QWORD *)(v4 + v5) + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView);
  v8 = type metadata accessor for ArtworkView(0);
  v9 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v11 = v7;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v11, a2, v8, v9, v10);

}

uint64_t sub_1000B7054(uint64_t a1)
{
  uint64_t result;

  result = sub_100005C94(&qword_10082B208, type metadata accessor for InAppPurchaseNonTiledLockupCollectionViewCell, (uint64_t)&unk_100662500);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1000B7090(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  id v7;

  if (a1)
  {
    v7 = a1;
    sub_100599BA4(v7, a6);

  }
}

uint64_t sub_1000B70D4()
{
  return sub_100005C94((unint64_t *)&unk_10082B240, type metadata accessor for ProductRatingsCollectionViewCell, (uint64_t)&unk_100662568);
}

uint64_t sub_1000B7100()
{
  return ShelfLayoutContext.shelfPresentationHints.getter();
}

double sub_1000B7120(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  __C::UIContentSizeCategory_optional v7;
  id v8;
  Class isa;
  void *v10;
  id v11;
  void (*v12)(char *, _QWORD, uint64_t);
  id v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;
  __C::UIContentSizeCategory_optional v28;

  v2 = type metadata accessor for SystemImage(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, "traitCollection", v4);
  if (qword_1008290F8 != -1)
    swift_once(&qword_1008290F8, sub_10059E218);
  v28.is_nil = qword_1008904D0;
  v28.value._rawValue = 0;
  isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v28, v7).super.isa;

  v10 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v11 = objc_msgSend(v10, "configurationWithTextStyle:scale:", UIFontTextStyleHeadline, 2);
  v12 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v12(v6, enum case for SystemImage.star(_:), v2);
  v13 = objc_msgSend(v11, "configurationWithTraitCollection:", isa);
  v14 = (void *)static SystemImage.load(_:with:)(v6, v13);

  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  objc_msgSend(v14, "contentInsets");
  v17 = v16;
  objc_msgSend(v14, "contentInsets");
  v19 = v17 + v18;
  objc_msgSend(v14, "size");
  v21 = v20 - v19;
  objc_msgSend(v14, "contentInsets");
  objc_msgSend(v14, "contentInsets");
  objc_msgSend(v14, "size");

  v22 = objc_msgSend(v10, "configurationWithTextStyle:scale:", UIFontTextStyleHeadline, 2);
  v12(v6, enum case for SystemImage.starFill(_:), v2);
  v23 = objc_msgSend(v22, "configurationWithTraitCollection:", isa);
  v24 = (void *)static SystemImage.load(_:with:)(v6, v23);

  v25 = ((uint64_t (*)(char *, uint64_t))v15)(v6, v2);
  UIImage.baselineOffsetFromBottom.getter(v25);
  objc_msgSend(v24, "contentInsets");

  return v21 * 5.0 + 24.0;
}

id sub_1000B73E4(void *a1)
{
  id v2;
  id v4;

  if (qword_1008290F0 != -1)
    swift_once(&qword_1008290F0, sub_10059E200);
  v2 = (id)qword_1008904C8;
  if ((static UIContentSizeCategory.< infix(_:_:)(v2, a1) & 1) != 0)
    return v2;
  v4 = a1;

  return v4;
}

double sub_1000B745C(void *a1, double a2)
{
  id v3;
  double v4;

  v3 = objc_msgSend(a1, "traitCollection");
  v4 = sub_1003AB6EC((uint64_t)v3, a2);

  return v4;
}

double sub_1000B74D0(void *a1, void *a2, int a3, double a4, double a5, uint64_t a6, char *a7)
{
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  double v43;
  _QWORD *v44;
  void *v45;
  float v46;
  id v47;
  double v48;
  Class isa;
  Swift::Int v50;
  void *object;
  uint64_t v52;
  float v53;
  void *v54;
  uint64_t v55;
  uint64_t inited;
  NSString *v57;
  unint64_t v58;
  id v59;
  NSString v60;
  Class v61;
  id v62;
  char *v63;
  uint64_t v64;
  void *v65;
  id v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  Swift::String v78;
  Swift::String v79;
  Swift::String v80;
  char *v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Swift::Int v87;
  Swift::String v88;
  Swift::String v89;
  Swift::String v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  void (*v97)(_QWORD *, char *, uint64_t);
  char *v98;
  _QWORD *v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  id v130;
  void *v131;
  char *v132;
  _QWORD v133[28];
  _QWORD v134[5];
  uint64_t v135[5];
  _QWORD v136[5];
  _QWORD v137[5];
  uint64_t v138[5];
  char v139;
  char v140[80];
  NSNumber_optional v141;

  v129 = a7;
  v116 = a3;
  v131 = a2;
  v10 = type metadata accessor for Adaptive(0);
  v126 = *(_QWORD *)(v10 - 8);
  v127 = v10;
  v11 = __chkstk_darwin(v10);
  v125 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for TextAppearance(0, v11);
  v121 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v123 = (char *)&v107 - v15;
  v112 = (_QWORD *)type metadata accessor for FontSource(0);
  v120 = *(v112 - 1);
  __chkstk_darwin(v112);
  v119 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FontUseCase(0);
  v117 = *(_QWORD *)(v17 - 8);
  v118 = v17;
  v18 = __chkstk_darwin(v17);
  v115 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for DynamicTextAppearance(0, v18);
  v113 = *(_QWORD *)(v20 - 8);
  v114 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v107 - v25;
  v27 = type metadata accessor for LabelPlaceholder(0, v24);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v107 - v32;
  v35 = __chkstk_darwin(v34);
  v37 = (char *)&v107 - v36;
  v130 = a1;
  v38 = Ratings.status.getter(v35);
  if (v39)
  {
    v40 = v38;
    v41 = v39;
    type metadata accessor for ProductNoRatingsView();
    v42.n128_f64[0] = a4;
    v43 = sub_10020FD78(v40, v41, v131, v42, a5);
    swift_bridgeObjectRelease(v41);
  }
  else
  {
    v107 = v22;
    v108 = v26;
    v44 = v112;
    v128 = v37;
    v129 = v33;
    v110 = v30;
    v111 = v28;
    v109 = v27;
    v45 = v131;
    v46 = Ratings.ratingAverage.getter(v38);
    v47 = objc_allocWithZone((Class)NSNumber);
    *(float *)&v48 = v46;
    v141.value.super.super.isa = (Class)objc_msgSend(v47, "initWithFloat:", v48);
    isa = v141.value.super.super.isa;
    v141.is_nil = 1;
    object = localizedStringForDecimal(_:_:)(v141, v50).value._object;

    if (!object)
    {
      v53 = Ratings.ratingAverage.getter(v52);
      Float.description.getter(v53);
      object = v54;
    }
    v55 = sub_10007B804(&qword_100830EA0);
    inited = swift_initStackObject(v55, v140);
    *(_OWORD *)(inited + 16) = xmmword_100661A30;
    *(_QWORD *)(inited + 64) = &type metadata for CGFloat;
    *(_QWORD *)(inited + 32) = NSKernAttributeName;
    *(_QWORD *)(inited + 40) = 0xC010000000000000;
    v57 = NSKernAttributeName;
    v58 = sub_10005FA64(inited);
    v59 = objc_allocWithZone((Class)NSAttributedString);
    v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    type metadata accessor for Key(0);
    sub_100005C94((unint64_t *)&qword_10082B250, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100661674);
    v61 = Dictionary._bridgeToObjectiveC()().super.isa;
    v62 = objc_msgSend(v59, "initWithString:attributes:", v60, v61, swift_bridgeObjectRelease(v58).n128_f64[0]);

    v112 = v62;
    v63 = v107;
    DynamicTextAppearance.init()(v112);
    if (qword_1008290E8 != -1)
      swift_once(&qword_1008290E8, sub_10059E098);
    v116 &= 1u;
    v64 = sub_10007B804((uint64_t *)&unk_10082E270);
    sub_10007AF70(v64, (uint64_t)qword_1008904B0);
    v65 = v45;
    v66 = objc_msgSend(v45, "snapshotPageTraitEnvironment");
    v133[0] = v66;
    v67 = v115;
    Conditional.evaluate(with:)(v133, v64);
    swift_unknownObjectRelease(v66);
    v68 = v108;
    DynamicTextAppearance.withFontUseCase(_:)(v67);
    v70 = v117;
    v69 = v118;
    (*(void (**)(char *, uint64_t))(v117 + 8))(v67, v118);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v63, v114);
    v71 = LabelPlaceholder.Options.init(rawValue:)(0);
    LabelPlaceholder.init(_:with:where:)(v62, v68, v71);
    v72 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
    v115 = (char *)LayoutViewPlaceholder.init(measureWith:)(sub_1000B7120, 0, v73);
    v74 = v119;
    v75 = v120;
    if (qword_100827F18 != -1)
      swift_once(&qword_100827F18, sub_1003A5B30);
    v76 = sub_10007AF70(v69, (uint64_t)qword_10088D778);
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v74, v76, v69);
    (*(void (**)(char *, _QWORD, _QWORD *))(v75 + 104))(v74, enum case for FontSource.useCase(_:), v44);
    v77 = (void *)FontSource.font(in:for:)(v65, sub_1000B73E4, 0);
    (*(void (**)(char *, _QWORD *))(v75 + 8))(v74, v44);
    v78._object = (void *)0x80000001006A7750;
    v78._countAndFlagsBits = 0xD000000000000012;
    v79._countAndFlagsBits = 0;
    v79._object = (void *)0xE000000000000000;
    v80 = localizedStringWithCount(_:count:comment:)(v78, 5, v79);
    v81 = v122;
    TextAppearance.init()(v80._countAndFlagsBits);
    v82 = v123;
    TextAppearance.withFont(_:)(v77);
    v83 = *(void (**)(char *, uint64_t))(v121 + 8);
    v84 = v124;
    v83(v81, v124);
    v85 = LabelPlaceholder.Options.init(rawValue:)(0);
    v86 = LabelPlaceholder.init(_:with:where:)(v80._countAndFlagsBits, v80._object, v82, v85);
    v87 = Ratings.totalNumberOfRatings.getter(v86);
    v88._countAndFlagsBits = 0xD000000000000013;
    v88._object = (void *)0x80000001006A7770;
    v89._countAndFlagsBits = 0;
    v89._object = (void *)0xE000000000000000;
    v90 = localizedStringWithCount(_:count:comment:)(v88, v87, v89);
    TextAppearance.init()(v90._countAndFlagsBits);
    v130 = v77;
    TextAppearance.withFont(_:)(v77);
    v83(v81, v84);
    v91 = LabelPlaceholder.Options.init(rawValue:)(0);
    LabelPlaceholder.init(_:with:where:)(v90._countAndFlagsBits, v90._object, v82, v91);
    swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
    v124 = LayoutViewPlaceholder.init(measureWith:)(sub_1000B745C, 0, v92);
    v93 = (uint64_t)v125;
    v94 = v109;
    v95 = v111;
    if (qword_1008290E0 != -1)
      swift_once(&qword_1008290E0, sub_10059DC24);
    v134[3] = v94;
    v134[4] = &protocol witness table for LabelPlaceholder;
    v96 = sub_100024638(v134);
    v97 = *(void (**)(_QWORD *, char *, uint64_t))(v95 + 16);
    v97(v96, v128, v94);
    v98 = v115;
    v132 = v115;
    Measurable.placeable.getter(v135, v72, &protocol witness table for LayoutViewPlaceholder);
    v136[3] = v94;
    v136[4] = &protocol witness table for LabelPlaceholder;
    v99 = sub_100024638(v136);
    v97(v99, v129, v94);
    v137[3] = v94;
    v137[4] = &protocol witness table for LabelPlaceholder;
    v100 = sub_100024638(v137);
    v101 = v110;
    v97(v100, v110, v94);
    v102 = v124;
    v132 = (char *)v124;
    Measurable.placeable.getter(v138, v72, &protocol witness table for LayoutViewPlaceholder);
    sub_1000B7FDC((uint64_t)&xmmword_1008903D0, (uint64_t)v133);
    v139 = v116;
    v103 = objc_msgSend(v131, "traitCollection");
    sub_1005B121C(v93);
    v104 = v127;
    v43 = dispatch thunk of Placeable.measure(toFit:with:)(v103, v127, &protocol witness table for Adaptive, a4, a5);
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v93, v104);

    swift_release(v98);
    swift_release(v102);

    sub_1000B8018(v133);
    v105 = *(void (**)(char *, uint64_t))(v111 + 8);
    v105(v101, v94);
    v105(v129, v94);
    v105(v128, v94);
  }
  return v43;
}

double sub_1000B7D70(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *ObjectType;
  double v30;
  double v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;

  v2 = v1;
  v3 = type metadata accessor for Shelf.PresentationHints(0, a1);
  v35 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  v9 = type metadata accessor for PageGrid(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for Ratings(0, v11);
  v15 = sub_100005C94(&qword_10082C400, (uint64_t (*)(uint64_t))&type metadata accessor for Ratings, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  ItemLayoutContext.typedModel<A>(as:)(&v36, v14, v14, v15);
  v16 = v36;
  if (!v36)
    return 0.0;
  KeyPath = swift_getKeyPath(&unk_1006625B8);
  v34 = v2;
  v18 = KeyPath;
  ItemLayoutContext.subscript.getter(v13);
  swift_release(v18);
  v20 = PageGrid.componentMeasuringSize(spanning:)(v19);
  v22 = v21;
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  v23 = sub_1000D2308();
  v24 = swift_getKeyPath(&unk_1006625E8);
  ItemLayoutContext.subscript.getter(v8);
  v25 = swift_release(v24);
  static Shelf.PresentationHints.isSeeAllContext.getter(v25);
  v26 = sub_100005C94((unint64_t *)&unk_10082B190, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v27 = dispatch thunk of SetAlgebra.isSuperset(of:)(v5, v3, v26);
  v28 = *(void (**)(char *, uint64_t))(v35 + 8);
  v28(v5, v3);
  v28(v8, v3);
  ObjectType = (char *)swift_getObjectType();
  sub_1000B74D0(v16, v23, v27 & 1, v20, v22, v34, ObjectType);
  v31 = v30;
  swift_unknownObjectRelease(v23);
  swift_release(v16);
  return v31;
}

uint64_t sub_1000B7FBC()
{
  return ShelfLayoutContext.shelfPresentationHints.getter();
}

uint64_t sub_1000B7FDC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductRatingsLayout.Metrics(a2, a1);
  return a2;
}

_QWORD *sub_1000B8018(_QWORD *a1)
{
  destroy for ProductRatingsLayout(a1);
  return a1;
}

uint64_t sub_1000B804C(uint64_t a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  int64x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  __n128 v28;
  __n128 v29;
  void (*v35)(_QWORD);
  double left;
  double bottom;
  double right;
  uint64_t v39;
  __int128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v44;
  __int128 v45;
  __n128 v46;
  __int128 v47;
  __n128 v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  __n128 v56;
  __int128 v57;
  BOOL v58;
  __n128 v59;
  __n128 v60;
  double v61;
  double v62;
  __int128 v63;
  __n128 v64;
  int64x2_t v66;
  double v67;
  double top;
  uint64_t v69;
  _BOOL4 v70;
  int64x2_t v71;
  uint64_t v72;
  void (*v73)(int64x2_t *, _QWORD, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[2];

  v71.i64[0] = a1;
  v1 = sub_10007B804(&qword_10082B258);
  v2 = __chkstk_darwin(v1);
  v4 = &v66.i8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for PageGrid.HorizontalMargins(0, v2);
  v74 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (int64x2_t *)((char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10007B804(&qword_10082B260);
  __chkstk_darwin(v8);
  v10 = &v66.i8[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v66.i8[-v12];
  __chkstk_darwin(v14);
  v16 = &v66.i8[-v15];
  __chkstk_darwin(v17);
  v19 = &v66.i8[-v18];
  v20 = sub_10007B804(&qword_10082B268);
  v21 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = (v23 + 32) & ~v23;
  v76 = v22;
  v25 = swift_allocObject(v20, v24 + 6 * v22, v23 | 7);
  *(_OWORD *)(v25 + 16) = xmmword_100662620;
  v69 = v25;
  v75 = v25 + v24;
  if (qword_100826AA8 != -1)
    swift_once(&qword_100826AA8, sub_10009E680);
  v26 = xmmword_100889EE0;
  v78[0] = 0x3FF0000000000000;
  v27 = sub_10008358C();
  v28 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4030000000000000;
  v78[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v28);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v29);
  __asm { FMOV            V0.2D, #16.0 }
  *v7 = _Q0;
  v35 = *(void (**)(_QWORD))(v74 + 104);
  LODWORD(v74) = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v73 = (void (*)(int64x2_t *, _QWORD, uint64_t))v35;
  v35(v7);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v78[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for Bool, &protocol witness table for Bool);
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v39 = v75;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v26, *((double *)&v26 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v72 = v39 + v76;
  if (qword_100826AB0 != -1)
    swift_once(&qword_100826AB0, sub_10009E694);
  v40 = xmmword_100889EF0;
  v78[0] = 0x3FF0000000000000;
  v41 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4034000000000000;
  v78[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v41);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v42);
  __asm { FMOV            V0.2D, #20.0 }
  *v7 = _Q0;
  v73(v7, v74, v5);
  LOBYTE(v78[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for Bool, &protocol witness table for Bool);
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v40, *((double *)&v40 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  v72 = v5;
  if (qword_100826AB8 != -1)
    swift_once(&qword_100826AB8, sub_10009E6A8);
  v45 = xmmword_100889F00;
  v77 = 0x4000000000000000;
  v78[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v44);
  v70 = v71.i64[0] < 2;
  LOBYTE(v78[0]) = v71.i64[0] < 2;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for Bool, &protocol witness table for Bool);
  v78[0] = 0x4034000000000000;
  v46 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v46);
  v66 = vdupq_n_s64(0x4041000000000000uLL);
  *v7 = v66;
  v73(v7, v74, v72);
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v67 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v45, *((double *)&v45 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100826AD8 != -1)
    swift_once(&qword_100826AD8, sub_10009E6F8);
  v47 = xmmword_100889F40;
  v78[0] = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  LOBYTE(v78[0]) = v70;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for Bool, &protocol witness table for Bool);
  v78[0] = 0x4034000000000000;
  v48 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v48);
  *v7 = v66;
  v73(v7, v74, v72);
  v49 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v47, *((double *)&v47 + 1), v49, v51, v53, v55);
  if (qword_100826AE0 != -1)
    swift_once(&qword_100826AE0, sub_10009E70C);
  v57 = xmmword_100889F50;
  v77 = 0x4000000000000000;
  v78[0] = 0x4004000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v56);
  v58 = v71.i64[0] < 3;
  LOBYTE(v78[0]) = v71.i64[0] < 3;
  LOBYTE(v77) = v70;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for Bool, &protocol witness table for Bool, v59);
  v78[0] = 0x4038000000000000;
  v60 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v60);
  v71 = vdupq_n_s64(0x404A000000000000uLL);
  *v7 = v71;
  v73(v7, v74, v72);
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v62 = v67;
  v61 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v57, *((double *)&v57 + 1), top, v67, bottom, right);
  if (qword_100826AE8 != -1)
    swift_once(&qword_100826AE8, sub_10009E720);
  v63 = xmmword_100889F60;
  v78[0] = 0x4008000000000000;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  LOBYTE(v78[0]) = v58;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for Bool, &protocol witness table for Bool);
  v78[0] = 0x4038000000000000;
  v64 = PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  v77 = 0x4034000000000000;
  v78[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v78, &v77, &type metadata for CGFloat, v27, v64);
  *v7 = v71;
  v73(v7, v74, v72);
  v78[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v78, &type metadata for CGFloat, v27);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v19, v4, v10, v16, v13, v7, *(double *)&v63, *((double *)&v63 + 1), v61, v62, bottom, right);
  return v69;
}

uint64_t sub_1000B8998()
{
  return sub_100005C94(&qword_10082B278, type metadata accessor for LinkableTextCollectionViewCell, (uint64_t)&unk_100662630);
}

double sub_1000B89C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  double v52;
  double v53;
  double v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t OpaqueTypeConformance2;
  uint64_t v62;
  double v63;
  double v64;
  double v65;
  _QWORD v67[2];
  void (*v68)(char *, uint64_t);
  id v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  _QWORD v88[6];

  v2 = sub_10007B804(&qword_10082B280);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v78 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  v7 = __chkstk_darwin(v6);
  v77 = (_QWORD *)((char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for LinkableTextCollectionViewCellLayout.Metrics(0, v7);
  v74 = *(_QWORD *)(v9 - 8);
  v75 = v9;
  __chkstk_darwin(v9);
  v76 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LinkableTextCollectionViewCellLayout(0);
  v85 = *(_QWORD *)(v11 - 8);
  v86 = v11;
  v12 = __chkstk_darwin(v11);
  v84 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LabelPlaceholder(0, v12);
  v82 = *(_QWORD *)(v14 - 8);
  v83 = v14;
  v15 = __chkstk_darwin(v14);
  v81 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for DynamicTextAppearance(0, v15);
  v73 = *(_QWORD **)(v80 - 8);
  __chkstk_darwin(v80);
  v18 = (char *)v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v87 = (char *)v67 - v20;
  v21 = type metadata accessor for FontUseCase(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for LinkableText(0);
  v26 = sub_100005C94((unint64_t *)&qword_10082E560, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v27 = a1;
  ItemLayoutContext.typedModel<A>(as:)(v88, v25, v25, v26);
  v28 = v88[0];
  if (!v88[0])
    return 0.0;
  v70 = v5;
  v71 = v3;
  v72 = v2;
  sub_10005FA28();
  if (qword_1008281E8 != -1)
    swift_once(&qword_1008281E8, sub_1003A7450);
  v29 = sub_10007AF70(v21, (uint64_t)qword_10088DFE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v29, v21);
  KeyPath = swift_getKeyPath(&unk_100662680);
  v67[1] = v27;
  ItemLayoutContext.subscript.getter(v88);
  swift_release(KeyPath);
  v31 = (void *)v88[0];
  v32 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v24, v88[0]);

  v33 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  v34 = LinkableText.styledText.getter(v33);
  v69 = v32;
  v35 = (void *)dispatch thunk of StyledText.asAttributedString(using:)(v32);
  swift_release(v34);
  DynamicTextAppearance.init()(v36);
  v37 = v87;
  DynamicTextAppearance.withFontUseCase(_:)(v29);
  v38 = v73;
  v39 = v80;
  v68 = (void (*)(char *, uint64_t))v73[1];
  v68(v18, v80);
  ((void (*)(char *, char *, uint64_t))v38[2])(v18, v37, v39);
  v73 = v35;
  v40 = LabelPlaceholder.Options.init(rawValue:)(0);
  v41 = v81;
  LabelPlaceholder.init(_:with:where:)(v35, v18, v40);
  v67[0] = v28;
  if (qword_100828FF0 != -1)
    swift_once(&qword_100828FF0, sub_10057EE7C);
  v42 = v75;
  v43 = sub_10007AF70(v75, (uint64_t)qword_100890258);
  v44 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v76, v43, v42);
  v45 = v83;
  v88[3] = v83;
  v88[4] = &protocol witness table for LabelPlaceholder;
  v46 = sub_100024638(v88);
  v47 = v82;
  (*(void (**)(_QWORD *, char *, uint64_t))(v82 + 16))(v46, v41, v45);
  v48 = v84;
  LinkableTextCollectionViewCellLayout.init(metrics:textLabel:)(v44, v88);
  v49 = swift_getKeyPath(&unk_1006626B0);
  v50 = v77;
  ItemLayoutContext.subscript.getter(v77);
  swift_release(v49);
  v52 = PageGrid.componentMeasuringSize(spanning:)(v51);
  v54 = v53;
  (*(void (**)(_QWORD *, uint64_t))(v78 + 8))(v50, v79);
  v55 = swift_getKeyPath(&unk_100662680);
  ItemLayoutContext.subscript.getter(v88);
  swift_release(v55);
  v56 = (void *)v88[0];
  v57 = sub_100005C94(&qword_10082B288, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableTextCollectionViewCellLayout, (uint64_t)&protocol conformance descriptor for LinkableTextCollectionViewCellLayout);
  v58 = v70;
  v59 = v86;
  v60 = dispatch thunk of CustomLayout.layout.getter(v86, v57);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v60, &opaque type descriptor for <<opaque return type of LinkableTextCollectionViewCellLayout.layout>>, 1);
  v62 = v72;
  v63 = dispatch thunk of Placeable.measure(toFit:with:)(v56, v72, OpaqueTypeConformance2, v52, v54);
  v65 = v64;
  (*(void (**)(char *, uint64_t, double))(v71 + 8))(v58, v62, v63);

  swift_release(v67[0]);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v48, v59);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v45);
  v68(v87, v39);
  return v65;
}

unint64_t sub_1000B8FB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082B290;
  if (!qword_10082B290)
  {
    v1 = type metadata accessor for FootnoteCollectionViewCell(255);
    result = swift_getWitnessTable(&unk_1006626E0, v1);
    atomic_store(result, (unint64_t *)&qword_10082B290);
  }
  return result;
}

uint64_t sub_1000B9000()
{
  return ShelfLayoutContext.shelf.getter();
}

uint64_t sub_1000B9020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.items.getter();
  *a1 = result;
  return result;
}

double sub_1000B904C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t KeyPath;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  id v27;
  double v28;
  double v29;
  __n128 v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];

  v33 = a2;
  v37 = type metadata accessor for PageGrid(0);
  v35 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v3 = (char **)((char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for ComponentLayoutOptions(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v32 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10007B804(&qword_10082B298);
  v34 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char **)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_10007B804((uint64_t *)&unk_10083A0A0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v14);
  ReadOnlyLens.value.getter(v41, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  KeyPath = swift_getKeyPath(&unk_100662730);
  ItemLayoutContext.subscript.getter(v11);
  swift_release(KeyPath);
  v18 = swift_getKeyPath(&unk_100662760);
  ReadOnlyLens.subscript.getter(v18, v8);
  v19 = swift_release(v18);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v9 + 8))(v11, v8, v19);
  v20 = swift_bridgeObjectRelease(v40);
  ItemLayoutContext.state.getter(v20);
  v21 = type metadata accessor for ObjectGraph(0);
  v22 = swift_dynamicCastClassUnconditional(v33, v21, 0, 0, 0);
  v23 = (uint64_t)v32;
  ItemLayoutContext.componentLayoutOptions.getter(v22);
  v24 = swift_getKeyPath(&unk_100662790);
  ItemLayoutContext.subscript.getter(v3);
  swift_release(v24);
  v26 = PageGrid.componentMeasuringSize(spanning:)(v25);
  (*(void (**)(_QWORD *, uint64_t))(v35 + 8))(v3, v37);
  v27 = sub_1000D2308();
  sub_1005C8F54((uint64_t)v41, (uint64_t)v7, v26, v23, v27);
  v29 = v28;
  v30 = swift_unknownObjectRelease(v27);
  (*(void (**)(uint64_t, uint64_t, __n128))(v38 + 8))(v23, v39, v30);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v36);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v41);
  return v29;
}

uint64_t sub_1000B9344()
{
  return ShelfLayoutContext.shelf.getter();
}

uint64_t sub_1000B9364@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Shelf.items.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000B9390()
{
  return sub_100005C94(&qword_10082B2A0, (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView, (uint64_t)&protocol conformance descriptor for NSObject);
}

id sub_1000B93BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView)
                             + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer)
                 + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
  if (!v1)
    return 0;
  v2 = type metadata accessor for VideoView(0);
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
  {
    result = *(id *)(v3 + qword_100844118);
  }
  else
  {
    v5 = objc_opt_self(UIImageView);
    result = (id)swift_dynamicCastObjCClass(v1, v5);
    if (!result)
      return result;
  }
  return objc_msgSend(result, "image");
}

void sub_1000B9464(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView);
  v3 = OBJC_IVAR____TtC8AppStore9MediaView_contentContainer;
  v4 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer)
                + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
  if (v4)
  {
    v5 = objc_msgSend(v4, "layer");
    objc_msgSend(v5, "removeAllAnimations");

    v6 = *(void **)(*(_QWORD *)(v2 + v3)
                  + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
    if (v6)
    {
      objc_msgSend(v6, "setAlpha:", 1.0);
      v7 = *(void **)(*(_QWORD *)(v2 + v3)
                    + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
      if (v7)
      {
        v8 = type metadata accessor for VideoView(0);
        v9 = swift_dynamicCastClass(v7, v8);
        if (v9)
        {
          v10 = *(void **)(v9 + qword_100844118);
LABEL_8:
          v13 = v7;
          objc_msgSend(v10, "setImage:", a1);

          goto LABEL_9;
        }
        v11 = objc_opt_self(UIImageView);
        v12 = swift_dynamicCastObjCClass(v7, v11);
        if (v12)
        {
          v10 = (void *)v12;
          goto LABEL_8;
        }
      }
    }
  }
LABEL_9:

}

void (*sub_1000B9588(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  a1[1] = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView)
                             + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer)
                 + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
  if (v3)
  {
    v4 = type metadata accessor for VideoView(0);
    v5 = swift_dynamicCastClass(v3, v4);
    if (v5)
    {
      v6 = *(id *)(v5 + qword_100844118);
LABEL_6:
      v6 = objc_msgSend(v6, "image");
      goto LABEL_7;
    }
    v7 = objc_opt_self(UIImageView);
    v6 = (id)swift_dynamicCastObjCClass(v3, v7);
    if (v6)
      goto LABEL_6;
  }
  else
  {
    v6 = 0;
  }
LABEL_7:
  *a1 = v6;
  return sub_1000B9648;
}

void sub_1000B9648(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    sub_1000B9464(v2);

  }
  else
  {
    sub_1000B9464(*a1);
  }
}

void sub_1000B969C(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView);
  v5 = OBJC_IVAR____TtC8AppStore9MediaView_contentContainer;
  v6 = *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer)
                 + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
  if (v6)
  {
    v8 = type metadata accessor for VideoView(0);
    v9 = swift_dynamicCastClass(v6, v8);
    if (v9)
    {
      v10 = objc_msgSend(*(id *)(v9 + qword_100844118), "image");
    }
    else
    {
      v11 = objc_opt_self(UIImageView);
      v12 = (void *)swift_dynamicCastObjCClass(v6, v11);
      if (!v12)
        goto LABEL_9;
      v10 = objc_msgSend(v12, "image");
    }
    v13 = v10;

    if (v13 && (a2 & 1) == 0)
    {
      v14 = a1;
      sub_1000B9464(a1);
      return;
    }
  }
LABEL_9:
  v15 = *(void **)(*(_QWORD *)(v4 + v5)
                 + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
  if (v15)
  {
    v16 = type metadata accessor for VideoView(0);
    if (swift_dynamicCastClass(v15, v16))
    {
      v26 = v15;
      sub_10000A358((uint64_t)a1, a1 == 0);

    }
    else
    {
      v17 = objc_opt_self(UIImageView);
      v18 = swift_dynamicCastObjCClass(v15, v17);
      if (v18)
      {
        v19 = (void *)v18;
        v20 = v15;
        objc_msgSend(v19, "setAlpha:", 0.0);
        objc_msgSend(v19, "setImage:", a1);
        type metadata accessor for Animation(0);
        v21 = (void *)static Animation.fadeInPropertyAnimator.getter();
        v22 = swift_allocObject(&unk_1007581A8, 24, 7);
        *(_QWORD *)(v22 + 16) = v19;
        aBlock[4] = sub_1000B9990;
        v28 = v22;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10000AB18;
        aBlock[3] = &unk_1007581C0;
        v23 = _Block_copy(aBlock);
        v24 = v28;
        v25 = v20;
        objc_msgSend(v21, "addAnimations:", v23, swift_release(v24).n128_f64[0]);
        _Block_release(v23);
        objc_msgSend(v21, "startAnimation");

      }
    }
  }
}

void (*sub_1000B9924(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000B9588(v2);
  return sub_10000F60C;
}

uint64_t sub_1000B996C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000B9990()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
}

uint64_t sub_1000B99A4(double a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(_BYTE *, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v32;
  void (*v33)(_BYTE *, uint64_t, __n128);
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v9 = type metadata accessor for AspectRatio(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Uber.Style(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v19 = &v34[-v18];
  v20 = sub_10013A924(a5, a4, *(uint64_t *)&a2, *(uint64_t *)&a1, 0);
  LOBYTE(a5) = UITraitCollection.isSizeClassCompact.getter(v21);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v19, a4, v13);
  if ((a5 & 1) == 0)
  {
    v28 = (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v19, v13);
LABEL_6:
    Artwork.size.getter(v28);
    AspectRatio.init(_:_:)(v29);
    a2 = AspectRatio.width(fromHeight:)(v30, v20);
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
    v25 = 4;
    return Artwork.config(_:mode:prefersLayeredImage:)(v25, 0, a2, v20);
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for Uber.Style.inline(_:), v13);
  v22 = sub_100005C94(&qword_10082E290, (uint64_t (*)(uint64_t))&type metadata accessor for Uber.Style, (uint64_t)&protocol conformance descriptor for Uber.Style);
  dispatch thunk of RawRepresentable.rawValue.getter(&v38, v13, v22);
  dispatch thunk of RawRepresentable.rawValue.getter(&v36, v13, v22);
  v23 = v39;
  v24 = v37;
  if (v38 != v36 || v39 != v37)
  {
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v39, v36, v37, 0);
    swift_bridgeObjectRelease(v23);
    v32 = swift_bridgeObjectRelease(v24);
    v33 = *(void (**)(_BYTE *, uint64_t, __n128))(v14 + 8);
    v33(v16, v13, v32);
    v28 = ((uint64_t (*)(_BYTE *, uint64_t))v33)(v19, v13);
    if ((v35 & 1) != 0)
    {
      v25 = 2;
      return Artwork.config(_:mode:prefersLayeredImage:)(v25, 0, a2, v20);
    }
    goto LABEL_6;
  }
  v25 = 2;
  v26 = swift_bridgeObjectRelease_n(v39, 2);
  v27 = *(void (**)(_BYTE *, uint64_t, __n128))(v14 + 8);
  v27(v16, v13, v26);
  ((void (*)(_BYTE *, uint64_t))v27)(v19, v13);
  return Artwork.config(_:mode:prefersLayeredImage:)(v25, 0, a2, v20);
}

uint64_t sub_1000B9C20()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  int64x2_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  void (*v35)(_QWORD);
  double left;
  double bottom;
  double right;
  __n128 v39;
  __int128 v40;
  __n128 v41;
  __n128 v42;
  __int128 v44;
  __n128 v45;
  __int128 v46;
  __n128 v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  __int128 v55;
  __n128 v56;
  double v57;
  double v58;
  __int128 v59;
  __n128 v60;
  uint64_t result;
  int64x2_t v62;
  double v63;
  double top;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(int64x2_t *, _QWORD, uint64_t);
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];

  v0 = sub_10007B804(&qword_10082B258);
  v1 = __chkstk_darwin(v0);
  v3 = &v62.i8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = type metadata accessor for PageGrid.HorizontalMargins(0, v1);
  v4 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v6 = (int64x2_t *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10007B804(&qword_10082B260);
  __chkstk_darwin(v7);
  v9 = &v62.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v62.i8[-v11];
  __chkstk_darwin(v13);
  v15 = &v62.i8[-v14];
  __chkstk_darwin(v16);
  v18 = &v62.i8[-v17];
  v19 = sub_10007B804(&qword_10082B268);
  v20 = *(_QWORD *)(type metadata accessor for PageGrid.Breakpoint(0) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v66 = v21;
  v24 = swift_allocObject(v19, v23 + 6 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100662620;
  v65 = v24;
  v69 = v24 + v23;
  if (qword_100826AA8 != -1)
    swift_once(&qword_100826AA8, sub_10009E680);
  v25 = xmmword_100889EE0;
  v71 = 0x3FF0000000000000;
  v72[0] = 0x3FF8000000000000;
  v26 = sub_10008358C();
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v27);
  v71 = 0x4030000000000000;
  v72[0] = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v28);
  v72[0] = 0x4030000000000000;
  v71 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v29);
  __asm { FMOV            V0.2D, #16.0 }
  *v6 = _Q0;
  v35 = *(void (**)(_QWORD))(v4 + 104);
  v68 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  v67 = (void (*)(int64x2_t *, _QWORD, uint64_t))v35;
  v35(v6);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v25, *((double *)&v25 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100826AB0 != -1)
    swift_once(&qword_100826AB0, sub_10009E694);
  v40 = xmmword_100889EF0;
  v71 = 0x3FF0000000000000;
  v72[0] = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v39);
  v71 = 0x4034000000000000;
  v72[0] = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v41);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v42);
  __asm { FMOV            V0.2D, #20.0 }
  *v6 = _Q0;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v40, *((double *)&v40 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100826AB8 != -1)
    swift_once(&qword_100826AB8, sub_10009E6A8);
  v44 = xmmword_100889F00;
  v72[0] = 0x4008000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4034000000000000;
  v45 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v45);
  v62 = vdupq_n_s64(0x4041000000000000uLL);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v63 = left;
  top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v44, *((double *)&v44 + 1), UIEdgeInsetsZero.top, left, bottom, right);
  if (qword_100826AD8 != -1)
    swift_once(&qword_100826AD8, sub_10009E6F8);
  v46 = xmmword_100889F40;
  v72[0] = 0x4010000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4034000000000000;
  v47 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v47);
  *v6 = v62;
  v67(v6, v68, v70);
  v48 = static UIEdgeInsets.horizontal(left:right:)(26.0, 26.0);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v46, *((double *)&v46 + 1), v48, v50, v52, v54);
  if (qword_100826AE0 != -1)
    swift_once(&qword_100826AE0, sub_10009E70C);
  v55 = xmmword_100889F50;
  v72[0] = 0x4014000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4038000000000000;
  v56 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v56);
  v62 = vdupq_n_s64(0x404A000000000000uLL);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v58 = v63;
  v57 = top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v55, *((double *)&v55 + 1), top, v63, bottom, right);
  if (qword_100826AE8 != -1)
    swift_once(&qword_100826AE8, sub_10009E720);
  v59 = xmmword_100889F60;
  v72[0] = 0x4018000000000000;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v72[0] = 0x4038000000000000;
  v60 = PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  v71 = 0x4034000000000000;
  v72[0] = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)(v72, &v71, &type metadata for CGFloat, v26, v60);
  *v6 = v62;
  v67(v6, v68, v70);
  LOBYTE(v72[0]) = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for Bool, &protocol witness table for Bool);
  v72[0] = 0;
  PageGrid.DirectionalValue.init(_:)(v72, &type metadata for CGFloat, v26);
  result = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)(v18, v3, v9, v15, v12, v6, *(double *)&v59, *((double *)&v59 + 1), v57, v58, bottom, right);
  qword_10082B2A8 = v65;
  return result;
}

void *CrossLinkPresenter.crossFadeAnimationDuration.unsafeMutableAddressor()
{
  return &static CrossLinkPresenter.crossFadeAnimationDuration;
}

double static SubscriptionLockupPresenter.crossFadeAnimationDuration.getter()
{
  return 0.33;
}

uint64_t CrossLinkPresenter.adamId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_adamId;
  v4 = type metadata accessor for AdamId(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CrossLinkPresenter.isVisible.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible, v3, 0, 0);
  return *v1;
}

uint64_t sub_1000BA5E4(char a1)
{
  uint64_t v1;
  int v3;
  _BYTE *v4;
  uint64_t result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  _BYTE v13[24];

  v3 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible, v13, 1, 0);
  v6 = *v4;
  *v4 = a1;
  if (v6 != v3)
  {
    v7 = v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view, &v12, 0, 0);
    result = swift_unknownObjectWeakLoadStrong(v7);
    if (result)
    {
      v9 = result;
      v10 = *(_QWORD *)(v7 + 8);
      ObjectType = swift_getObjectType(result, v8);
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v10 + 32))(a1 & 1, 1, ObjectType, v10);
      return swift_unknownObjectRelease(v9);
    }
  }
  return result;
}

uint64_t CrossLinkPresenter.view.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t CrossLinkPresenter.view.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v15;
  char v16[24];

  v5 = v2 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view, v16, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  v6 = swift_unknownObjectWeakAssign(v5, a1);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(Strong, v8);
    v12 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
    swift_beginAccess(v12, &v15, 0, 0);
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v10 + 32))(*v12, 1, ObjectType, v10);
    swift_unknownObjectRelease(a1);
    v13 = v9;
  }
  else
  {
    v13 = a1;
  }
  return swift_unknownObjectRelease(v13);
}

void (*CrossLinkPresenter.view.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_1000BA830;
}

void sub_1000BA830(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  unsigned __int8 *v14;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    v7 = v3[5] + v3[6];
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
    Strong = swift_unknownObjectWeakLoadStrong(v7);
    if (Strong)
    {
      v10 = Strong;
      v11 = v3[5];
      v12 = *(_QWORD *)(v11 + v3[6] + 8);
      ObjectType = swift_getObjectType(Strong, v9);
      v14 = (unsigned __int8 *)(v11 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
      swift_beginAccess(v14, v3, 0, 0);
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v12 + 32))(*v14, 1, ObjectType, v12);
      swift_unknownObjectRelease(v10);
    }
  }
  free(v3);
}

uint64_t CrossLinkPresenter.__allocating_init(adamId:title:subtitle:includeBetaApps:view:appStateController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v18;

  v18 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  CrossLinkPresenter.init(adamId:title:subtitle:includeBetaApps:view:appStateController:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v18;
}

_QWORD *CrossLinkPresenter.init(adamId:title:subtitle:includeBetaApps:view:appStateController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v51;
  __n128 v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  char v67[24];
  char v68[32];

  v11 = v10;
  v66 = a6;
  v60 = a3;
  v61 = a5;
  v54 = a2;
  v55 = a4;
  v15 = *v10;
  v58 = a10;
  v59 = v15;
  v16 = type metadata accessor for LegacyAppState(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v57 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v54 - v20;
  v22 = (char *)v10 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view;
  *((_QWORD *)v22 + 1) = 0;
  swift_unknownObjectWeakInit(v22, 0);
  v23 = (char *)v11 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_adamId;
  v24 = type metadata accessor for AdamId(0);
  v62 = *(_QWORD *)(v24 - 8);
  v63 = v24;
  (*(void (**)(char *, uint64_t))(v62 + 16))(v23, a1);
  swift_beginAccess(v22, v68, 1, 0);
  v56 = a8;
  *((_QWORD *)v22 + 1) = a8;
  v25 = a7;
  swift_unknownObjectWeakAssign(v22, a7);
  ObjectType = swift_getObjectType();
  v64 = a9;
  v65 = a1;
  v27 = dispatch thunk of AppStateController.stateMachine(forApp:)(a1, ObjectType, v58);
  v29 = v28;
  v30 = (_QWORD *)((char *)v11 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_stateMachine);
  *v30 = v27;
  v30[1] = v28;
  v31 = swift_getObjectType();
  swift_unknownObjectRetain(v27);
  v58 = v31;
  dispatch thunk of AppStateMachine.currentStateIncludingBeta(_:)(v66, v31, v29);
  v32 = v57;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v57, v21, v16);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v32, v16);
  if (v33 == enum case for LegacyAppState.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v32, v16);
    v34 = type metadata accessor for InstallationType(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v32, v34);
    v35 = 1;
    v36 = v25;
    goto LABEL_11;
  }
  v36 = v25;
  if (v33 == enum case for LegacyAppState.updatable(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v32, v16);
LABEL_10:
    v35 = 1;
    goto LABEL_11;
  }
  if (v33 == enum case for LegacyAppState.installing(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v32, v16);
    v37 = type metadata accessor for LegacyAppState.AppInstallationDetails(0);
LABEL_9:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v32, v37);
    goto LABEL_10;
  }
  if (v33 == enum case for LegacyAppState.openable(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v32, v16);

    v37 = type metadata accessor for OpenableDestination(0);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v32, v16);
  v35 = 0;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
  v38 = (unsigned __int8 *)v11 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible;
  *((_BYTE *)v11 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible) = v35;
  v39 = swift_allocObject(&unk_100758228, 24, 7);
  swift_weakInit(v39 + 16, v11);
  v40 = swift_allocObject(&unk_100758250, 40, 7);
  *(_QWORD *)(v40 + 16) = v39;
  *(_BYTE *)(v40 + 24) = v66 & 1;
  *(_QWORD *)(v40 + 32) = v59;
  swift_retain(v11);
  v41 = swift_retain(v39);
  dispatch thunk of AppStateMachine.addStateTransitionObserver(_:action:)(v11, sub_1000BB13C, v40, v58, v29, v41);
  swift_release(v11);
  swift_release(v39);
  swift_release(v40);
  if (v36)
  {
    v42 = swift_getObjectType();
    v43 = v56;
    v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v56 + 40);
    v45 = swift_unknownObjectRetain(v36);
    v47 = v60;
    v46 = v61;
    v44(v54, v60, v55, v61, v42, v43, v45);
    swift_bridgeObjectRelease(v47);
    swift_bridgeObjectRelease(v46);
    swift_unknownObjectRelease(v36);
    v48 = swift_getObjectType();
    swift_beginAccess(v38, v67, 0, 0);
    v49 = *v38;
    v50 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v43 + 32);
    v51 = swift_unknownObjectRetain(v36);
    v50(v49, 0, v48, v43, v51);
    swift_unknownObjectRelease(v27);
    swift_unknownObjectRelease(v64);
    swift_unknownObjectRelease_n(v36, 2);
  }
  else
  {
    swift_unknownObjectRelease(v64);
    swift_unknownObjectRelease(v27);
    swift_bridgeObjectRelease(v60);
    v52 = swift_bridgeObjectRelease(v61);
  }
  (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v65, v63, v52);
  return v11;
}

uint64_t sub_1000BAE48()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1000BAE6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  double result;
  uint64_t v16;
  uint64_t ObjectType;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29[24];
  char v30[24];
  char v31[24];

  v7 = type metadata accessor for LegacyAppState(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v29[-v12 - 8];
  a3 += 16;
  swift_beginAccess(a3, v31, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (!Strong)
    return result;
  v16 = Strong;
  ObjectType = swift_getObjectType();
  dispatch thunk of AppStateMachine.currentStateIncludingBeta(_:)(a4 & 1, ObjectType, a2);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v18 == enum case for LegacyAppState.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v10, v7);
    v19 = type metadata accessor for InstallationType(0);
LABEL_10:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v10, v19);
    goto LABEL_11;
  }
  if (v18 != enum case for LegacyAppState.updatable(_:))
  {
    if (v18 == enum case for LegacyAppState.installing(_:))
    {
      (*(void (**)(char *, uint64_t))(v8 + 96))(v10, v7);
      v19 = type metadata accessor for LegacyAppState.AppInstallationDetails(0);
    }
    else
    {
      if (v18 != enum case for LegacyAppState.openable(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        v20 = 0;
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v8 + 96))(v10, v7);

      v19 = type metadata accessor for OpenableDestination(0);
    }
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_11:
  v20 = 1;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v21 = (_BYTE *)(v16 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
  swift_beginAccess(v16 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible, v30, 1, 0);
  v22 = *v21;
  *v21 = v20;
  if ((_DWORD)v20 == v22
    || (v23 = v16 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view,
        swift_beginAccess(v16 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view, v29, 0, 0),
        (v24 = swift_unknownObjectWeakLoadStrong(v23)) == 0))
  {
    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  else
  {
    v25 = v24;
    v26 = *(_QWORD *)(v23 + 8);
    v27 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 32))(v20, 1, v27, v26);
    swift_release(v16);
    *(_QWORD *)&result = swift_unknownObjectRelease(v25).n128_u64[0];
  }
  return result;
}

uint64_t sub_1000BB118()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1000BB13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000BAE6C(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t CrossLinkPresenter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_stateMachine);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_stateMachine))
  {
    v3 = v2[1];
    ObjectType = swift_getObjectType();
    dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)(v0, ObjectType, v3);
  }
  v5 = v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_adamId;
  v6 = type metadata accessor for AdamId(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  sub_1000834F4(v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view);
  swift_unknownObjectRelease(*v2);
  return v1;
}

uint64_t CrossLinkPresenter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_stateMachine);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_stateMachine))
  {
    v3 = v2[1];
    ObjectType = swift_getObjectType();
    dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)(v0, ObjectType, v3);
  }
  v5 = v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_adamId;
  v6 = type metadata accessor for AdamId(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  sub_1000834F4(v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view);
  swift_unknownObjectRelease(*v2);
  return swift_deallocClassInstance(v1, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
}

uint64_t sub_1000BB288@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

uint64_t sub_1000BB2D8(char *a1)
{
  return sub_1000BA5E4(*a1);
}

uint64_t sub_1000BB2FC()
{
  return type metadata accessor for CrossLinkPresenter(0);
}

uint64_t type metadata accessor for CrossLinkPresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10082B2E0;
  if (!qword_10082B2E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CrossLinkPresenter);
  return result;
}

uint64_t sub_1000BB340(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for AdamId(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100662888;
    v4[2] = &unk_1006628A0;
    v4[3] = &unk_1006628B8;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for SpacerTextAttachment()
{
  return objc_opt_self(_TtC8AppStoreP33_D572B0067BF63E82624B4FEE97AFF75B20SpacerTextAttachment);
}

void sub_1000BB4B8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for InsetCollectionViewControllerContentView();
    if (swift_dynamicCastClass(v2, v3))
    {

      return;
    }

  }
  __break(1u);
}

void sub_1000BB524(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v5 = objc_msgSend(v1, "view");
  if (v5)
  {
    v3 = type metadata accessor for InsetCollectionViewControllerContentView();
    v4 = swift_dynamicCastClass(v5, v3);
    if (v4)
    {
      *(_BYTE *)(v4
               + OBJC_IVAR____TtC8AppStoreP33_F9B20E6387F6F627D5761E6B0A83FE5540InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = a1 & 1;

      return;
    }

  }
  __break(1u);
}

uint64_t sub_1000BB5A0()
{
  return sub_1000BD164((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:));
}

void sub_1000BB5AC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, "navigationController");
  if (!v1)
    return;
  v2 = v1;
  v3 = objc_msgSend(v1, "viewControllers");

  v4 = sub_1000BD66C();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
    if (v11)
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease(v5);
    return;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_12;
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v5 + 32);
LABEL_7:
    v7 = v6;
    swift_bridgeObjectRelease(v5);
    v8 = v0;
    v9 = v7;
    static NSObject.== infix(_:_:)(v9, v8);

    return;
  }
  __break(1u);
}

uint64_t sub_1000BB6E4(char a1)
{
  _QWORD *v1;

  *((_BYTE *)v1 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_prefersLargeTitle) = a1;
  return (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1F0))();
}

void sub_1000BB70C(uint64_t a1, char a2)
{
  sub_1000BB73C(a1, a2, &OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarTransitionDistance);
}

uint64_t sub_1000BB718()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarAppearanceProgress);
}

void sub_1000BB730(uint64_t a1, char a2)
{
  sub_1000BB73C(a1, a2, &OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarAppearanceProgress);
}

void sub_1000BB73C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *a3;
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 8) = a2 & 1;
  sub_1000BB754();
}

void sub_1000BB754()
{
  char *v0;
  double v1;
  id v2;
  unsigned int v3;
  id v4;
  double v5;
  double v6;
  id v7;
  double v8;
  id v9;
  unsigned int v10;
  id v11;
  double v12;
  double v13;
  id v14;
  id v15;
  id v16;

  if ((v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarAppearanceProgress + 8] & 1) != 0)
  {
    if ((v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarTransitionDistance + 8] & 1) != 0)
    {
      v16 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v16, "_setManualScrollEdgeAppearanceEnabled:", 0);
LABEL_11:

      return;
    }
    v8 = *(double *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarTransitionDistance];
    v9 = objc_msgSend(v0, "navigationItem");
    v10 = objc_msgSend(v9, "_isManualScrollEdgeAppearanceEnabled");

    if (!v10
      || (v11 = objc_msgSend(v0, "navigationItem"),
          objc_msgSend(v11, "_autoScrollEdgeTransitionDistance"),
          v13 = v12,
          v11,
          v13 != v8))
    {
      v14 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v14, "_setManualScrollEdgeAppearanceEnabled:", 0);

      v15 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v15, "_setAutoScrollEdgeTransitionDistance:", v8);

      v16 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v16, "_setManualScrollEdgeAppearanceEnabled:", 1);
      goto LABEL_11;
    }
  }
  else
  {
    v1 = *(double *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarAppearanceProgress];
    v2 = objc_msgSend(v0, "navigationItem");
    v3 = objc_msgSend(v2, "_isManualScrollEdgeAppearanceEnabled");

    if (!v3
      || (v4 = objc_msgSend(v0, "navigationItem"),
          objc_msgSend(v4, "_manualScrollEdgeAppearanceProgress"),
          v6 = v5,
          v4,
          v6 != v1))
    {
      v7 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v7, "_setManualScrollEdgeAppearanceEnabled:", 1);

      v16 = objc_msgSend(v0, "navigationItem");
      objc_msgSend(v16, "_setManualScrollEdgeAppearanceProgress:", v1);
      goto LABEL_11;
    }
  }
}

uint64_t sub_1000BB9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;

  v3 = sub_10007B804((uint64_t *)&unk_10082B4A0);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100661700;
  v5 = sub_10007B804((uint64_t *)&unk_10083F420);
  v6 = type metadata accessor for Accessory(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v5, v10 + v8, v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100661A30;
  v12 = (_BYTE *)(v11 + v10);
  v13 = (uint64_t)&v12[*(int *)(sub_10007B804((uint64_t *)&unk_10082B4B0) + 48)];
  *v12 = 1;
  sub_100005B48(a2, v13, (uint64_t *)&unk_10083F430);
  swift_storeEnumTagMultiPayload(v12, v6, 3);
  v14 = swift_allocObject(&unk_100758290, 18, 7);
  *(_WORD *)(v14 + 16) = 512;
  v15 = type metadata accessor for NavigationAccessory();
  v16 = (_QWORD *)swift_allocObject(v15, 48, 7);
  swift_bridgeObjectRetain(v11);
  v17 = sub_10054EF4C((uint64_t)_swiftEmptyArrayStorage);
  v16[2] = sub_1000BD7C4;
  v16[3] = v14;
  v16[4] = v11;
  v16[5] = v17;
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(v4 + 32) = v16;
  specialized Array._endMutation()(v18);
  return v4;
}

void sub_1000BBB04(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v2 = sub_10007B804((uint64_t *)&unk_10083F430);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StoreTab(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v44 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a1;
  v8 = a1 >> 62;
  if (a1 >> 62)
  {
    v35 = v46;
    if (v46 < 0)
      v36 = v46;
    else
      v36 = v46 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v46);
    v45 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v35);
    if (v45)
    {
LABEL_3:
      if (v45 < 1)
      {
        __break(1u);
        goto LABEL_36;
      }
      v38 = v8;
      v39 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph;
      v9 = v46 & 0xC000000000000001;
      swift_bridgeObjectRetain(v46);
      v10 = 0;
      v40 = v9;
      v41 = v4;
      do
      {
        if (v9)
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v46);
        else
          v11 = *(id *)(v46 + 8 * v10 + 32);
        v12 = v11;
        v13 = type metadata accessor for AccountButton(0);
        v14 = swift_dynamicCastClass(v12, v13);
        if (v14)
        {
          v15 = v14;
          sub_100005B48(v14 + qword_10088F4F8, (uint64_t)v4, (uint64_t *)&unk_10083F430);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
          {

            sub_1000057AC((uint64_t)v4, (uint64_t *)&unk_10083F430);
          }
          else
          {
            v16 = v5;
            (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v44, v4, v5);
            v17 = type metadata accessor for FloatingUnifiedMessageCoordinator(0);
            v18 = v42;
            v43 = *(_QWORD *)(v42 + v39);
            v19 = v6;
            v20 = type metadata accessor for ObjectGraph(0);
            v21 = v12;
            v22 = v17;
            v23 = v17;
            v4 = v41;
            inject<A, B>(_:from:)(&v47, v22, v43, v23, v20);
            v24 = (void *)v47;
            v25 = v15;
            v26 = v18;
            v9 = v40;
            v27 = v44;
            FloatingUnifiedMessageCoordinator.register(accountButton:with:for:)(v25, v26, v44);

            v6 = v19;
            v5 = v16;
            (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v16);
          }
        }
        else
        {

        }
        ++v10;
      }
      while (v45 != v10);
      swift_bridgeObjectRelease(v46);
      if (v38)
      {
        v32 = v46;
        if (v46 < 0)
          v33 = v46;
        else
          v33 = v46 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v46);
        v34 = _CocoaArrayWrapper.endIndex.getter(v33);
        swift_bridgeObjectRelease(v32);
        if (v34 != 1)
        {
LABEL_16:
          v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StackView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
          *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore9StackView_axis] = 0;
          objc_msgSend(v4, "setNeedsLayout");
          *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore9StackView_alignment] = 5;
          objc_msgSend(v4, "setNeedsLayout");
          *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore9StackView_spacing] = 0x4030000000000000;
          objc_msgSend(v4, "setNeedsLayout");
          v47 = (unint64_t)_swiftEmptyArrayStorage;
          swift_bridgeObjectRetain(v46);
          sub_1000C4D44(v28);
          v5 = v47;
          if (!(v47 >> 62))
          {
            v29 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!v29)
            {
LABEL_21:
              swift_bridgeObjectRelease(v5);
              return;
            }
            goto LABEL_18;
          }
LABEL_36:
          if (v5 < 0)
            v37 = v5;
          else
            v37 = v5 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v5);
          v29 = _CocoaArrayWrapper.endIndex.getter(v37);
          swift_bridgeObjectRelease(v5);
          if (!v29)
            goto LABEL_21;
LABEL_18:
          if (v29 >= 1)
          {
            for (i = 0; i != v29; ++i)
            {
              v31 = *(_QWORD *)(v5 + 8 * i + 32);
              objc_msgSend(v4, "addSubview:", v31);
            }
            goto LABEL_21;
          }
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
      }
      else if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
      {
        goto LABEL_16;
      }
      if (v9)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
        return;
      }
      if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        *(id *)(v46 + 32);
        return;
      }
      goto LABEL_42;
    }
  }
  else
  {
    v45 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v45)
      goto LABEL_3;
  }
}

void sub_1000BBF80()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  __n128 v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  double v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = (uint64_t)v0;
  v54 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationAccessories;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationAccessories];
  v3 = objc_msgSend(v0, "traitCollection", swift_bridgeObjectRetain(v2).n128_f64[0]);
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph];
  if ((unint64_t)v2 >> 62)
    goto LABEL_31;
  v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  v6 = v3;
  swift_retain(v4);
LABEL_3:
  v55 = v1;
  v56 = v4;
  if (v5)
  {
    v4 = 0;
    v7 = v2 & 0xC000000000000001;
    v1 = 4;
    while (1)
    {
      v9 = v1 - 4;
      if (v7)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v1 - 4, v2);
        v11 = v1 - 3;
        if (__OFADD__(v9, 1))
          goto LABEL_29;
      }
      else
      {
        v10 = *(_QWORD *)(v2 + 8 * v1);
        swift_retain(v10);
        v11 = v1 - 3;
        if (__OFADD__(v9, 1))
        {
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          if (v2 < 0)
            v27 = v2;
          else
            v27 = v2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v2);
          v28 = v3;
          swift_retain(v4);
          v5 = _CocoaArrayWrapper.endIndex.getter(v27);
          goto LABEL_3;
        }
      }
      if ((*(unsigned __int8 (**)(id))(v10 + 16))(v3))
      {
        swift_release(v10);
        v8 = _swiftEmptyArrayStorage;
      }
      else
      {
        v12 = *(_QWORD *)(v10 + 32);
        swift_retain(v56);
        swift_retain(v10);
        swift_bridgeObjectRetain(v12);
        v8 = sub_100363E74(v13, v10, v56);
        swift_bridgeObjectRelease(v12);
        swift_release_n(v10, 2);
        v7 = v2 & 0xC000000000000001;
        swift_release(v56);
      }
      sub_1000C4D44((uint64_t)v8);
      ++v1;
      if (v11 == v5)
      {
        swift_release(v56);
        swift_bridgeObjectRelease(v2);
        v1 = v55;
        goto LABEL_16;
      }
    }
  }
  swift_release(v4);
  swift_bridgeObjectRelease(v2);
  v4 = 0;
LABEL_16:

  swift_bridgeObjectRelease(v2);
  sub_1000BBB04((unint64_t)_swiftEmptyArrayStorage);
  v15 = v14;
  v16 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v53 = v15;
  (*(void (**)(void *, __n128))((swift_isaMask & *(_QWORD *)v1) + 0x208))(v15, v16);
  v17 = objc_msgSend((id)v1, "navigationItem");
  v18 = *(_QWORD *)(v1 + v54);
  v19 = objc_msgSend((id)v1, "traitCollection", swift_bridgeObjectRetain(v18).n128_f64[0]);
  if (!((unint64_t)v18 >> 62))
  {
    v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(v56);
    swift_bridgeObjectRetain(v18);
    v21 = v19;
    if (v20)
      goto LABEL_18;
LABEL_39:
    swift_release(v56);
    swift_bridgeObjectRelease(v18);
    goto LABEL_40;
  }
  if (v18 < 0)
    v29 = v18;
  else
    v29 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_retain(v56);
  swift_bridgeObjectRetain(v18);
  v30 = v19;
  v20 = _CocoaArrayWrapper.endIndex.getter(v29);
  if (!v20)
    goto LABEL_39;
LABEL_18:
  v52 = v17;
  v3 = (id)(v18 & 0xC000000000000001);
  v1 = 4;
  do
  {
    v22 = v1 - 4;
    if (v3)
    {
      v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v1 - 4, v18);
      v24 = v1 - 3;
      if (__OFADD__(v22, 1))
        goto LABEL_30;
    }
    else
    {
      v23 = *(_QWORD *)(v18 + 8 * v1);
      swift_retain(v23);
      v24 = v1 - 3;
      if (__OFADD__(v22, 1))
        goto LABEL_30;
    }
    if ((*(unsigned __int8 (**)(id))(v23 + 16))(v19) == 1)
    {
      v25 = *(_QWORD *)(v23 + 32);
      swift_retain(v56);
      swift_retain(v23);
      swift_bridgeObjectRetain(v25);
      v2 = (uint64_t)sub_100363E74(v26, v23, v56);
      swift_bridgeObjectRelease(v25);
      swift_release_n(v23, 2);
      v3 = (id)(v18 & 0xC000000000000001);
      swift_release(v56);
    }
    else
    {
      swift_release(v23);
      v2 = (uint64_t)_swiftEmptyArrayStorage;
    }
    sub_1000C4D44(v2);
    ++v1;
  }
  while (v24 != v20);
  swift_release(v56);
  swift_bridgeObjectRelease(v18);
  v1 = v55;
  v17 = v52;
LABEL_40:

  swift_bridgeObjectRelease(v18);
  sub_1000BBB04((unint64_t)_swiftEmptyArrayStorage);
  v32 = v31;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (v32)
  {
    v33 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v32);

  }
  else
  {
    v33 = 0;
  }
  objc_msgSend(v17, "setLeftBarButtonItem:", v33);

  if ((sub_10009BAA8((void *)v1) & 1) == 0)
  {
    v34 = *(_QWORD *)(v1 + v54);
    v35 = objc_msgSend((id)v1, "traitCollection", swift_bridgeObjectRetain(v34).n128_f64[0]);
    if ((unint64_t)v34 >> 62)
      goto LABEL_58;
    v36 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(v56);
    swift_bridgeObjectRetain(v34);
    v37 = v35;
    while (v36)
    {
      v38 = v34 & 0xC000000000000001;
      v1 = 4;
      while (1)
      {
        v40 = v1 - 4;
        if (!v38)
          break;
        v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(v1 - 4, v34);
        v42 = v1 - 3;
        if (__OFADD__(v40, 1))
          goto LABEL_57;
LABEL_54:
        if ((*(unsigned __int8 (**)(id))(v41 + 16))(v35) == 2)
        {
          v43 = *(_QWORD *)(v41 + 32);
          swift_retain(v56);
          swift_retain(v41);
          swift_bridgeObjectRetain(v43);
          v39 = sub_100363E74(v44, v41, v56);
          swift_bridgeObjectRelease(v43);
          swift_release_n(v41, 2);
          v38 = v34 & 0xC000000000000001;
          swift_release(v56);
        }
        else
        {
          swift_release(v41);
          v39 = _swiftEmptyArrayStorage;
        }
        sub_1000C4D44((uint64_t)v39);
        ++v1;
        if (v42 == v36)
        {
          swift_release(v56);
          swift_bridgeObjectRelease(v34);
          v1 = v55;
          goto LABEL_63;
        }
      }
      v41 = *(_QWORD *)(v34 + 8 * v1);
      swift_retain(v41);
      v42 = v1 - 3;
      if (!__OFADD__(v40, 1))
        goto LABEL_54;
LABEL_57:
      __break(1u);
LABEL_58:
      if (v34 < 0)
        v45 = v34;
      else
        v45 = v34 & 0xFFFFFFFFFFFFFF8;
      swift_retain(v56);
      swift_bridgeObjectRetain(v34);
      v46 = v35;
      v36 = _CocoaArrayWrapper.endIndex.getter(v45);
    }
    swift_release(v56);
    swift_bridgeObjectRelease(v34);
LABEL_63:

    swift_bridgeObjectRelease(v34);
    sub_1000BBB04((unint64_t)_swiftEmptyArrayStorage);
    v48 = v47;
    *(_QWORD *)&v49 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
    if (v48)
    {
      v50 = objc_msgSend((id)v1, "navigationItem", v49);
      v51 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v48);
      objc_msgSend(v50, "setRightBarButtonItem:", v51);

    }
  }

}

uint64_t sub_1000BC6CC(char a1)
{
  return sub_100009D84(a1, (SEL *)&selRef_viewWillAppear_, (unsigned int *)&enum case for StoreViewControllerLifecycleEvent.willAppear(_:));
}

void sub_1000BC6E0(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  unint64_t v13;
  id v14;
  char v15;
  id v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  char v34[24];
  _QWORD v35[3];
  uint64_t v36;
  objc_super v37;

  v2 = v1;
  v4 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v37.receiver = v2;
  v37.super_class = v8;
  objc_msgSendSuper2(&v37, "viewWillDisappear:", a1 & 1);
  v9 = objc_msgSend(v2, "navigationController");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v2, "parentViewController");
    if (!v11)
      goto LABEL_5;
    v12 = v11;
    v13 = sub_1000BD66C();
    v10 = v10;
    v14 = v12;
    v15 = static NSObject.== infix(_:_:)(v14, v10);

    if ((v15 & 1) == 0)
      goto LABEL_5;
    v16 = objc_msgSend(v10, "viewControllers");
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v13);

    sub_1003AB8E8((uint64_t)v2, v17);
    LOBYTE(v16) = v18;
    swift_bridgeObjectRelease(v17);
    if ((v16 & 1) != 0)
    {
      v27 = (uint64_t)&v2[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver];
      swift_beginAccess(&v2[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver], v30, 0, 0);
      sub_100005B48(v27, (uint64_t)v35, (uint64_t *)&unk_10082B470);
      if (v36)
      {
        sub_100022500((uint64_t)v35, (uint64_t)v31);
        sub_1000057AC((uint64_t)v35, (uint64_t *)&unk_10082B470);
        v28 = v32;
        v29 = v33;
        sub_100060B40(v31, v32);
        (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for StoreViewControllerLifecycleEvent.dismissedByBackButton(_:), v4);
        dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v7, v28, v29);

        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
        _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v31);
      }
      else
      {

        sub_1000057AC((uint64_t)v35, (uint64_t *)&unk_10082B470);
      }
    }
    else
    {
LABEL_5:

    }
  }
  v19 = (uint64_t)&v2[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver];
  swift_beginAccess(&v2[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver], v34, 0, 0);
  sub_100005B48(v19, (uint64_t)v35, (uint64_t *)&unk_10082B470);
  if (v36)
  {
    sub_100022500((uint64_t)v35, (uint64_t)v31);
    sub_1000057AC((uint64_t)v35, (uint64_t *)&unk_10082B470);
    v20 = v32;
    v21 = v33;
    sub_100060B40(v31, v32);
    static ViewWillDisappearReason.inferred(for:)(v2);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for StoreViewControllerLifecycleEvent.willDisappear(_:), v4);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v7, v20, v21);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v31);
  }
  else
  {
    sub_1000057AC((uint64_t)v35, (uint64_t *)&unk_10082B470);
  }
  v22 = (void *)objc_opt_self(NSNotificationCenter);
  v23 = objc_msgSend(v22, "defaultCenter");
  objc_msgSend(v23, "removeObserver:name:object:", v2, UIApplicationDidBecomeActiveNotification, 0);

  v24 = objc_msgSend(v22, "defaultCenter");
  objc_msgSend(v24, "removeObserver:name:object:", v2, UIApplicationDidEnterBackgroundNotification, 0);

  v25 = type metadata accessor for FloatingUnifiedMessageCoordinator(0);
  BaseObjectGraph.optional<A>(_:)(v35, v25, v25);
  v26 = (void *)v35[0];
  if (v35[0])
  {
    FloatingUnifiedMessageCoordinator.viewControllerDidDissappear(_:)((UIViewController)v2);

  }
}

id sub_1000BCAD4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  id result;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  void *v22;
  Class isa;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  char v39[24];
  _BYTE v40[24];
  uint64_t v41;
  objc_super v42;

  v1 = v0;
  v2 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10007B804((uint64_t *)&unk_100834600);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v42.receiver = v1;
  v42.super_class = v12;
  objc_msgSendSuper2(&v42, "as_viewWillBecomeFullyVisible");
  v35 = v1;
  result = objc_msgSend(v1, "collectionView");
  if (result)
  {
    v14 = result;
    v15 = objc_msgSend(result, "indexPathsForSelectedItems");

    if (v15)
    {
      v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v5);

      v17 = (_QWORD *)v16;
    }
    else
    {
      v17 = _swiftEmptyArrayStorage;
    }
    v30 = v3;
    v31 = v2;
    v18 = v17[2];
    v33 = v17;
    if (v18)
    {
      v19 = (char *)v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v34 = *(_QWORD *)(v6 + 72);
      v20 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      while (1)
      {
        v20(v11, v19, v5);
        v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v21(v11, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
        result = objc_msgSend(v35, "collectionView");
        if (!result)
        {
          __break(1u);
          goto LABEL_17;
        }
        v22 = result;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v22, "deselectItemAtIndexPath:animated:", isa, 1);

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v19 += v34;
        if (!--v18)
          goto LABEL_12;
      }
    }
    else
    {
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
LABEL_12:
      v21(v11, 1, 1, v5);
    }
    swift_bridgeObjectRelease(v33);
    v24 = &v35[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver];
    swift_beginAccess(&v35[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver], v39, 0, 0);
    sub_100005B48((uint64_t)v24, (uint64_t)v40, (uint64_t *)&unk_10082B470);
    if (v41)
    {
      sub_100022500((uint64_t)v40, (uint64_t)v36);
      sub_1000057AC((uint64_t)v40, (uint64_t *)&unk_10082B470);
      v25 = v37;
      v26 = v38;
      sub_100060B40(v36, v37);
      v28 = v30;
      v27 = v31;
      v29 = v32;
      (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v32, enum case for StoreViewControllerLifecycleEvent.willBecomeFullyVisible(_:), v31);
      dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v29, v25, v26);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v27);
      return (id)_s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v36);
    }
    else
    {
      return (id)sub_1000057AC((uint64_t)v40, (uint64_t *)&unk_10082B470);
    }
  }
  else
  {
LABEL_17:
    __break(1u);
  }
  return result;
}

uint64_t sub_1000BCE60()
{
  return sub_1000BCED0((SEL *)&selRef_as_viewDidBecomeFullyVisible, &enum case for StoreViewControllerLifecycleEvent.didBecomeFullyVisible(_:));
}

uint64_t sub_1000BCEBC()
{
  return sub_1000BCED0((SEL *)&selRef_as_viewWillBecomePartiallyVisible, &enum case for StoreViewControllerLifecycleEvent.willBecomePartiallyVisible(_:));
}

uint64_t sub_1000BCED0(SEL *a1, unsigned int *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];
  uint64_t v20;
  objc_super v21;

  v5 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v21.receiver = v2;
  v21.super_class = v9;
  objc_msgSendSuper2(&v21, *a1);
  v10 = (uint64_t)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v10, v18, 0, 0);
  sub_100005B48(v10, (uint64_t)v19, (uint64_t *)&unk_10082B470);
  if (!v20)
    return sub_1000057AC((uint64_t)v19, (uint64_t *)&unk_10082B470);
  sub_100022500((uint64_t)v19, (uint64_t)v15);
  sub_1000057AC((uint64_t)v19, (uint64_t *)&unk_10082B470);
  v11 = v16;
  v12 = v17;
  sub_100060B40(v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *a2, v5);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v8, v11, v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v15);
}

uint64_t sub_1000BD060()
{
  return sub_1000BCED0((SEL *)&selRef_as_viewDidBecomePartiallyVisible, &enum case for StoreViewControllerLifecycleEvent.didBecomePartiallyVisible(_:));
}

uint64_t sub_1000BD0BC(char a1)
{
  return sub_100009D84(a1, (SEL *)&selRef_viewDidDisappear_, (unsigned int *)&enum case for StoreViewControllerLifecycleEvent.didDisappear(_:));
}

uint64_t sub_1000BD158()
{
  return sub_1000BD164((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:));
}

uint64_t sub_1000BD164(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];
  uint64_t v17;

  v3 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v7, v15, 0, 0);
  sub_100005B48(v7, (uint64_t)v16, (uint64_t *)&unk_10082B470);
  if (!v17)
    return sub_1000057AC((uint64_t)v16, (uint64_t *)&unk_10082B470);
  sub_100022500((uint64_t)v16, (uint64_t)v12);
  sub_1000057AC((uint64_t)v16, (uint64_t *)&unk_10082B470);
  v8 = v13;
  v9 = v14;
  sub_100060B40(v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *a1, v3);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v6, v8, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v12);
}

void sub_1000BD2C8(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  double (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD v14[4];
  char v15;

  v3 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController);
  v5 = v4;
  static ViewControllerContainment.remove(_:)(v4);

  v6 = *(void **)((char *)v1 + v3);
  *(_QWORD *)((char *)v1 + v3) = a1;
  v7 = a1;

  v8 = *(void **)((char *)v1 + v3);
  v9 = *(double (**)(void))((swift_isaMask & *v1) + 0x190);
  v13 = v8;
  v14[0] = v9();
  v14[1] = v10;
  v14[2] = v11;
  v14[3] = v12;
  v15 = 0;
  static ViewControllerContainment.add(_:to:frame:)(v8, v1, v14);

}

id sub_1000BD458()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1000BD64C()
{
  sub_1000BBF80();
}

unint64_t sub_1000BD66C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082B480;
  if (!qword_10082B480)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10082B480);
  }
  return result;
}

void sub_1000BD6A8()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;
  char *v3;
  char *v4;

  v1 = &v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_automationSemanticPageId];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_registeredForApplicationDidBecomeActive] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_statusBarBackgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController] = 0;
  v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_prefersLargeTitle] = 0;
  v3 = &v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarTransitionDistance];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = &v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarAppearanceProgress];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationAccessories] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDataSource] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/StoreCollectionViewController.swift", 44, 2, 47, 0);
  __break(1u);
}

uint64_t sub_1000BD7B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 18, 7);
}

uint64_t sub_1000BD7C4(uint64_t a1)
{
  uint64_t v1;

  return sub_10010622C(a1, *(unsigned __int8 *)(v1 + 16), *(unsigned __int8 *)(v1 + 17));
}

char *sub_1000BD7D0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t ObjectType;
  char *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;

  ObjectType = swift_getObjectType();
  v6 = &v2[qword_100889FE8];
  *((_QWORD *)v6 + 1) = 0;
  v7 = swift_unknownObjectWeakInit(v6, 0);
  v8 = type metadata accessor for AdvertRotationControllerProvider(0, v7);
  v9 = type metadata accessor for ObjectGraph(0);
  v10 = v2;
  inject<A, B>(_:from:)(&v22, v8, a2, v8, v9);
  *(_QWORD *)&v10[qword_10082B4C0] = v22;

  swift_retain(a1);
  swift_retain(a2);
  v11 = (char *)sub_100071A58(a1, a2, &qword_10082BA30, (uint64_t (*)(uint64_t))&type metadata accessor for SearchFocusDiffablePagePresenter, &qword_10082BA38, &qword_10082BA40, (uint64_t)&unk_1007582B8, (uint64_t)sub_1000BF840);
  v12 = *(void **)&v11[qword_10088BE38];
  v13 = *(_QWORD *)&v11[qword_10082B4C0];
  v14 = v11;
  v15 = v12;
  v16 = swift_retain(v13);
  CompoundScrollObserver.addChild(_:)(v16, &protocol witness table for AdvertRotationControllerProvider);

  swift_release(v13);
  v17 = sub_10007B804(&qword_10082E950);
  v18 = swift_allocObject(v17, 64, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100661E10;
  *(_QWORD *)(v18 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v18 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(_QWORD *)(v18 + 48) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v18 + 56) = &protocol witness table for UITraitLayoutDirection;
  v19 = v14;
  v20 = UIViewController.registerForTraitChanges<A>(_:handler:)(v18, sub_1000BF690, 0, ObjectType);
  swift_unknownObjectRelease(v20);
  swift_bridgeObjectRelease(v18);

  swift_release(a1);
  swift_release(a2);
  return v19;
}

uint64_t sub_1000BD9A4(uint64_t a1, uint64_t a2)
{
  return sub_100071A58(a1, a2, &qword_10082BB50, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, &qword_10082BB58, &qword_10082BB60, (uint64_t)&unk_100758420, (uint64_t)sub_1000BF960);
}

uint64_t sub_1000BD9D8(uint64_t a1, uint64_t a2)
{
  return sub_1000BDA40(a1, a2, &qword_10082BA50, (uint64_t (*)(uint64_t))&type metadata accessor for ProductDiffablePagePresenter, &qword_10082BA58, &qword_10082BA60, (uint64_t)&unk_1007582E0, (uint64_t)sub_1000BF860);
}

uint64_t sub_1000BDA0C(uint64_t a1, uint64_t a2)
{
  return sub_1000BDA40(a1, a2, &qword_10082BA90, (uint64_t (*)(uint64_t))&type metadata accessor for SearchChartsAndCategoriesDiffablePagePresenter, &qword_10082BA98, &qword_10082BAA0, (uint64_t)&unk_100758330, (uint64_t)sub_1000BF8A0);
}

uint64_t sub_1000BDA40(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5, unint64_t *a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  id v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  id v93;
  uint64_t result;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t *v99;
  uint64_t (*v100)(uint64_t);
  uint64_t v101;
  uint64_t *v102;
  unint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE v107[24];
  _QWORD v108[6];

  v104 = a7;
  v105 = a8;
  v103 = a6;
  v99 = a5;
  v100 = a4;
  v106 = a2;
  v11 = type metadata accessor for Dependency(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8[qword_100839F00] = 0x409F400000000000;
  v16 = qword_100839F08;
  v17 = type metadata accessor for VisibleShelfSupplementaryCollectionElementsObserver(0, v13);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = v8;
  *(_QWORD *)&v8[v16] = VisibleShelfSupplementaryCollectionElementsObserver.init()();
  v19 = qword_100839F10;
  v20 = type metadata accessor for ExpandableCellScrollOffsetCollectionElementsObserver(0);
  v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v22 = v21 + OBJC_IVAR____TtC8AppStore52ExpandableCellScrollOffsetCollectionElementsObserver_expandingIndexPath;
  v23 = type metadata accessor for IndexPath(0);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(_QWORD *)&v18[v19] = v21;
  *(_QWORD *)&v18[qword_100839F18] = 0;
  *(_QWORD *)&v18[qword_100839F20] = 0;
  ShelfBasedCollectionViewControllerDependencies.init()(v24);
  v18[qword_10088BE08] = 0;
  v18[qword_10088BE20] = 0;
  *(_QWORD *)&v18[qword_100839F28] = 0;
  *(_QWORD *)&v18[qword_100839F30] = 0;
  *(_QWORD *)&v18[qword_10088BE28] = 0;
  *(_QWORD *)&v18[qword_10088BE30] = 0;
  v25 = qword_10088BE38;
  v26 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0));
  *(_QWORD *)&v18[v25] = CompoundScrollObserver.init(children:)(_swiftEmptyArrayStorage);
  v27 = qword_10088BE40;
  v102 = a3;
  v28 = sub_10007B804(a3);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  *(_QWORD *)&v18[v27] = InfiniteScrollObserver.init(paginatedPresenter:triggerDistance:)(0, 500.0);
  v18[qword_10088BE48] = 1;
  v29 = qword_10088BE50;
  v30 = type metadata accessor for ComponentHeightCache(0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  *(_QWORD *)&v18[v29] = ComponentHeightCache.init()();
  v31 = type metadata accessor for InteractiveSectionBackgroundScrollObserverStore();
  v32 = swift_allocObject(v31, 24, 7);
  *(_QWORD *)(v32 + 16) = sub_1000722D8((uint64_t)_swiftEmptyArrayStorage);
  v108[0] = v32;
  Dependency.init<A>(satisfying:with:)(v31, v108, v31);
  v33 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  *(_QWORD *)&v18[qword_10088BE00] = a1;
  v34 = swift_retain(a1);
  v35 = TimedMetricsPagePresenter.impressionsCalculator.getter(v34);
  ImpressionsCalculator.isVisible.setter(1);
  swift_release(v35);
  v36 = type metadata accessor for ArtworkLoader(0);
  BaseObjectGraph.inject<A>(_:)(v108, v36, v36);
  *(_QWORD *)&v18[qword_10088BE10] = v108[0];
  v37 = type metadata accessor for InlineUnifiedMessagePresenter(0);
  BaseObjectGraph.inject<A>(_:)(v108, v37, v37);
  *(_QWORD *)&v18[qword_10088BE18] = v108[0];
  v38 = type metadata accessor for ImpressionsCalculator(0);
  BaseObjectGraph.optional<A>(_:)(v108, v38, v38);
  v39 = v108[0];
  v40 = type metadata accessor for ImpressionsScrollObserver(0);
  swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  *(_QWORD *)&v18[qword_100839F38] = ImpressionsScrollObserver.init(_:)(v39);

  v41 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  swift_retain(v33);
  v101 = v33;
  v42 = sub_100072478((uint64_t)v41, v33);

  swift_retain(a1);
  v43 = v42;

  swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
  v44 = InfiniteScrollObserver.init(paginatedPresenter:triggerDistance:)(a1, 500.0);
  v45 = (char *)qword_10088BE40;
  v46 = *(_QWORD *)((char *)v43 + qword_10088BE40);
  *(_QWORD *)((char *)v43 + qword_10088BE40) = v44;
  swift_release(v46);
  v96 = type metadata accessor for VideoPlaybackCoordinator(0);
  v47 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph;
  v48 = *(void **)(*(_QWORD *)((char *)v43 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph)
                 + qword_10088FDC8);
  if (!v48)
  {
    swift_retain(*(_QWORD *)((char *)v43 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph));
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v96, v96);
    __break(1u);
LABEL_10:
    v95 = v45;
    swift_retain(v32);
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v96, v96);
    __break(1u);
    return result;
  }
  v98 = v45;
  v49 = (char *)v43;
  v50 = v48;
  dispatch thunk of VideoPlaybackCoordinator.setParentViewController(_:)(v49);

  v51 = type metadata accessor for PlaybackCoordinator(0);
  v52 = *(_QWORD *)((char *)v43 + v47);
  v53 = type metadata accessor for ObjectGraph(0);
  swift_retain(v52);
  v97 = v53;
  inject<A, B>(_:from:)(v108, v51, v52, v51, v53);
  swift_release(v52);
  v54 = (void *)v108[0];
  v55 = v49;
  dispatch thunk of PlaybackCoordinator.setParentViewController(_:)(v55);

  v56 = v100;
  v108[3] = v100(0);
  v108[4] = sub_100005C94(v99, v56, (uint64_t)&protocol conformance descriptor for TimedMetricsPagePresenter<A>);
  v108[0] = a1;
  v57 = (uint64_t)&v55[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver];
  swift_beginAccess(&v55[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver], v107, 33, 0);
  swift_retain(a1);
  v58 = v55;
  sub_1000725D8((uint64_t)v108, v57);
  swift_endAccess(v107);

  v59 = swift_retain(a1);
  v60 = dispatch thunk of TimedMetricsPagePresenter.pendingPageRender.getter(v59);
  swift_release(a1);
  if (v60)
  {
    v61 = *(_QWORD *)&v58[qword_10088BE10];
    v62 = swift_retain(v61);
    PendingPageRender.observeAssets(_:)(v62, &protocol witness table for ArtworkLoader);
    swift_release(v60);
    swift_release(v61);
  }
  v63 = *(_QWORD *)&v58[qword_10088BE10];
  swift_retain(a1);
  v64 = swift_retain(v63);
  v65 = dispatch thunk of TimedMetricsPagePresenter.pageRenderMetrics.getter(v64);
  v66 = swift_release(a1);
  ArtworkLoader.pageRenderMetrics.setter(v65, v66);
  swift_release(v63);
  v67 = qword_10088BE38;
  v45 = *(char **)&v58[qword_10088BE38];
  v32 = *(_QWORD *)((char *)v43 + v47);
  v68 = *(void **)(v32 + qword_10088FDC8);
  if (!v68)
    goto LABEL_10;
  v69 = type metadata accessor for VideoPlaybackScrollObserver(0);
  swift_allocObject(v69, *(unsigned int *)(v69 + 48), *(unsigned __int16 *)(v69 + 52));
  v70 = v68;
  v71 = v45;
  v72 = VideoPlaybackScrollObserver.init(_:)(v68);
  CompoundScrollObserver.addChild(_:)(v72, &protocol witness table for VideoPlaybackScrollObserver);

  swift_release(v72);
  v73 = *(_QWORD *)((char *)v43 + v47);
  v74 = *(id *)&v58[v67];
  swift_retain(v73);
  inject<A, B>(_:from:)(v108, v51, v73, v51, v97);
  v75 = swift_release(v73);
  v76 = v108[0];
  v77 = type metadata accessor for PlaybackScrollObserver(0, v75);
  swift_allocObject(v77, *(unsigned int *)(v77 + 48), *(unsigned __int16 *)(v77 + 52));
  v78 = PlaybackScrollObserver.init(_:)(v76);
  CompoundScrollObserver.addChild(_:)(v78, &protocol witness table for PlaybackScrollObserver);

  swift_release(v78);
  v79 = *(void **)&v58[v67];
  v80 = *(_QWORD *)&v98[(_QWORD)v43];
  v81 = sub_10002A538(v103, v102, (uint64_t)&protocol conformance descriptor for InfiniteScrollObserver<A>);
  v82 = v79;
  v83 = swift_retain(v80);
  CompoundScrollObserver.addChild(_:)(v83, v81);

  swift_release(v80);
  v84 = *(_QWORD *)&v58[qword_100839F38];
  if (v84)
    v85 = &protocol witness table for ImpressionsScrollObserver;
  else
    v85 = 0;
  v86 = *(id *)&v58[v67];
  v87 = swift_retain(v84);
  CompoundScrollObserver.addChild(_:)(v87, v85);

  v88 = swift_release(v84);
  v89 = (*(uint64_t (**)(__n128))((swift_isaMask & *(_QWORD *)v58) + 0x4C8))(v88);
  v90 = *(_QWORD *)&v58[qword_10088BE28];
  *(_QWORD *)&v58[qword_10088BE28] = v89;
  swift_release(v90);
  v91 = *(void **)&v58[qword_10088BE18];
  v92 = swift_allocObject(v104, 24, 7);
  swift_unknownObjectWeakInit(v92 + 16, v58);
  v93 = v91;
  swift_retain(v92);
  InlineUnifiedMessagePresenter.actionHandler.setter(v105, v92);
  swift_release(v101);

  swift_release(v92);
  swift_release(a1);
  swift_release(v106);
  return (uint64_t)v58;
}

uint64_t sub_1000BE2AC(uint64_t a1, uint64_t a2)
{
  return sub_1000BDA40(a1, a2, &qword_10082BAD0, (uint64_t (*)(uint64_t))&type metadata accessor for ArcadeSeeAllGamesDiffablePagePresenter, &qword_10082BAD8, &qword_10082BAE0, (uint64_t)&unk_100758380, (uint64_t)sub_1000BF8E0);
}

uint64_t sub_1000BE2E0(uint64_t a1, uint64_t a2)
{
  return sub_100071A58(a1, a2, &qword_10082BAF0, (uint64_t (*)(uint64_t))&type metadata accessor for GenericDiffablePagePresenter, &qword_10082BAF8, &qword_10082BB00, (uint64_t)&unk_1007583A8, (uint64_t)sub_1000BF900);
}

uint64_t sub_1000BE314(uint64_t a1, uint64_t a2)
{
  return sub_100071A58(a1, a2, &qword_10082BB30, (uint64_t (*)(uint64_t))&type metadata accessor for ArticleDiffablePagePresenter, &qword_10082BB38, &qword_10082BB40, (uint64_t)&unk_1007583F8, (uint64_t)sub_1000BF940);
}

uint64_t sub_1000BE348(uint64_t a1, uint64_t a2)
{
  return sub_100071A58(a1, a2, &qword_10082BB70, (uint64_t (*)(uint64_t))&type metadata accessor for MSODiffablePagePresenter, &qword_10082BB78, &qword_10082BB80, (uint64_t)&unk_100758448, (uint64_t)sub_1000BF980);
}

uint64_t sub_1000BE37C(uint64_t a1, uint64_t a2)
{
  return sub_100071A58(a1, a2, &qword_10082BBB0, (uint64_t (*)(uint64_t))&type metadata accessor for SearchResultsDiffablePagePresenter, &qword_10082BBB8, &qword_10082BBC0, (uint64_t)&unk_100758498, (uint64_t)sub_1000BF9C0);
}

uint64_t sub_1000BE3B0(uint64_t a1, uint64_t a2)
{
  return sub_100071A58(a1, a2, &qword_10082BB90, (uint64_t (*)(uint64_t))&type metadata accessor for TopChartDiffableSegmentPresenter, &qword_10082BB98, &qword_10082BBA0, (uint64_t)&unk_100758470, (uint64_t)sub_1000BF9A0);
}

void sub_1000BE3E4()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  id v26;
  void *v27;
  objc_super v28[2];
  objc_super v29;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for FloatingPointRoundingRule(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AutomationSemantics(0);
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = __chkstk_darwin(v7).n128_u64[0];
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29.receiver = v0;
  v29.super_class = ObjectType;
  objc_msgSendSuper2(&v29, "viewDidLoad", v9);
  v12 = objc_msgSend(v0, "collectionView");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "setKeyboardDismissMode:", 1);

  }
  v14 = objc_msgSend(v1, "collectionView");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "setAllowsSelection:", 1);

  }
  v16 = objc_msgSend(v1, "collectionView");
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "setContentInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  }
  v18 = objc_msgSend(v1, "collectionView");
  if (v18)
  {
    v19 = v18;
    memset(v28, 0, sizeof(v28));
    static AutomationSemantics.page(name:id:)(0x6F46686372616573, 0xEB00000000737563, v28);
    sub_1000057AC((uint64_t)v28, (uint64_t *)&unk_10082B490);
    UIView.setAutomationSemantics(_:)(v11);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v20 = sub_10007B804(&qword_10082E950);
    v21 = swift_allocObject(v20, 64, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100661E10;
    *(_QWORD *)(v21 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v21 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    *(_QWORD *)(v21 + 48) = type metadata accessor for UITraitLegibilityWeight(0);
    *(_QWORD *)(v21 + 56) = &protocol witness table for UITraitLegibilityWeight;
    v22 = UIViewController.registerForTraitChanges<A>(_:handler:)(v21, sub_1000BF6D8, 0, ObjectType);
    swift_unknownObjectRelease(v22);
    swift_bridgeObjectRelease(v21);
    if (qword_1008287C0 != -1)
      swift_once(&qword_1008287C0, sub_100432508);
    v23 = type metadata accessor for StaticDimension(0);
    v24 = sub_10007AF70(v23, (uint64_t)qword_10088F028);
    static Dimensions.defaultRoundingRule.getter(v24);
    v25 = AnyDimension.value(in:rounded:)(v1, v6, v23, &protocol witness table for StaticDimension);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    objc_msgSend(v1, "additionalSafeAreaInsets");
    objc_msgSend(v1, "setAdditionalSafeAreaInsets:", v25);
    v26 = objc_msgSend(v1, "view");
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v26, "setNeedsLayout");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1000BE728(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000BE3E4();

}

void sub_1000BE75C(void *a1, uint64_t a2)
{
  sub_1000BE798(a1, a2, (const char **)&selRef_as_viewDidBecomeFullyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_1000BE770(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000BE814(a1, a2, a3, (const char **)&selRef_viewDidAppear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerDidAppear());
}

void sub_1000BE784(void *a1, uint64_t a2)
{
  sub_1000BE798(a1, a2, (const char **)&selRef_as_viewWillBecomePartiallyVisible, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_1000BE798(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  const char *v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType(a1, a2);
  v6 = *a3;
  v7 = v9.receiver;
  v8 = objc_msgSendSuper2(&v9, v6);
  a4(v8);

}

void sub_1000BE800(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000BE814(a1, a2, a3, (const char **)&selRef_viewDidDisappear_, (void (*)(id))&AdvertRotationControllerProvider.viewControllerWillDisappear());
}

void sub_1000BE814(void *a1, uint64_t a2, uint64_t a3, const char **a4, void (*a5)(id))
{
  const char *v8;
  id v9;
  id v10;
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType(a1, a2);
  v8 = *a4;
  v9 = v11.receiver;
  v10 = objc_msgSendSuper2(&v11, v8, a3);
  a5(v10);

}

uint64_t sub_1000BE884()
{
  return sub_1000BE8F0((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appEnteredWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appDidForeground());
}

void sub_1000BE8A0(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000BE884();

}

uint64_t sub_1000BE8D4()
{
  return sub_1000BE8F0((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appExitedWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appWillBackground());
}

uint64_t sub_1000BE8F0(unsigned int *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  uint64_t v23;

  v7 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v11, v21, 0, 0);
  sub_1000BFA68(v11, (uint64_t)v22);
  if (v23)
  {
    sub_100022500((uint64_t)v22, (uint64_t)v18);
    sub_1000057AC((uint64_t)v22, (uint64_t *)&unk_10082B470);
    v12 = v19;
    v13 = v20;
    sub_100060B40(v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *a1, v7);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v10, v12, v13);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v18);
  }
  else
  {
    v14 = sub_1000057AC((uint64_t)v22, (uint64_t *)&unk_10082B470);
  }
  v15 = a2(v14);
  return a3(v15);
}

void sub_1000BEA54(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000BE8D4();

}

id sub_1000BEA88()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_10007B804(&qword_10083A110);
  v4 = swift_allocObject(v3, 80, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100662370;
  v5 = *(_QWORD *)&v0[qword_10088BE00];
  v6 = *(_QWORD *)&v0[qword_10082B4C0];
  v7 = sub_10007B804(&qword_10082BC08);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_retain(v5);
  v8 = swift_retain(v6);
  v9 = SearchAdsCollectionElementsObserver.init(presenter:advertControllerProvider:)(v5, v6, v8);
  v10 = sub_10002A538(&qword_10082BC10, &qword_10082BC08, (uint64_t)&protocol conformance descriptor for SearchAdsCollectionElementsObserver<A, B>);
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v10;
  v11 = type metadata accessor for SearchAdBackgroundCollectionElementsObserver();
  v12 = swift_allocObject(v11, 17, 7);
  *(_BYTE *)(v12 + 16) = 1;
  v13 = sub_100005C94(&qword_10082BC18, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdBackgroundCollectionElementsObserver, (uint64_t)&unk_10067C490);
  *(_QWORD *)(v4 + 48) = v12;
  *(_QWORD *)(v4 + 56) = v13;
  v14 = sub_100005C94(&qword_10082BBE8, type metadata accessor for SearchFocusDiffablePageViewController, (uint64_t)&unk_1006744F0);
  v15 = ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v25, ObjectType, v14);
  v16 = TimedMetricsPagePresenter.impressionsCalculator.getter(v15);
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph];
  swift_retain(v6);
  result = objc_msgSend(v1, "collectionView", swift_retain(v17).n128_f64[0]);
  if (result)
  {
    v19 = result;
    v20 = type metadata accessor for SearchImpressionsCollectionElementsObserver(0);
    swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    *(_QWORD *)(v4 + 64) = SearchImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:advertRotationControllerProvider:objectGraph:collectionView:)(v25, v16, v6, v17, v19);
    *(_QWORD *)(v4 + 72) = &protocol witness table for ImpressionsCollectionElementsObserver;
    v21 = type metadata accessor for CompoundCollectionElementsObserver(0);
    swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    v22 = CompoundCollectionElementsObserver.init(children:)(v4);
    v23 = sub_1005F39B8();
    if (swift_dynamicCastClass(v23, v21))
    {
      v24 = CompoundCollectionElementsObserver.removingChildren(where:)(sub_10001D760, 0);
      CompoundCollectionElementsObserver.addChild(_:)(v24, &protocol witness table for CompoundCollectionElementsObserver);
      swift_unknownObjectRelease(v23);
      swift_release(v24);
    }
    else
    {
      swift_unknownObjectRelease(v23);
    }
    return (id)v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1000BED04@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for SearchFocusPageShelfLayoutSpacingProvider;
  result = sub_1000BFA24();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1000BED34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14[2];

  v0 = sub_10007B804(&qword_10082A0B0);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100661E10;
  v2 = type metadata accessor for SearchAdItemSupplementaryProvider();
  v3 = swift_allocObject(v2, 17, 7);
  *(_BYTE *)(v3 + 16) = 1;
  v4 = sub_100005C94(&qword_10082BBF0, (uint64_t (*)(uint64_t))type metadata accessor for SearchAdItemSupplementaryProvider, (uint64_t)&unk_100672334);
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = sub_10007B804(&qword_10082BA48);
  v6 = sub_10002A538(&qword_10082BBF8, &qword_10082BA48, (uint64_t)&unk_1006744F0);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v14, v5, v6);
  v7 = type metadata accessor for GenericPageItemSupplementaryProvider();
  v8 = swift_allocObject(v7, 64, 7);
  sub_100022500((uint64_t)v14, v8 + 16);
  v9 = type metadata accessor for GenericPageSeparatorItemSupplementaryProvider();
  v10 = swift_allocObject(v9, 56, 7);
  sub_10000F5F4(v14, v10 + 16);
  *(_QWORD *)(v8 + 56) = v10;
  v11 = sub_100005C94((unint64_t *)&unk_10083A130, (uint64_t (*)(uint64_t))type metadata accessor for GenericPageItemSupplementaryProvider, (uint64_t)&unk_10067E538);
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v11;
  v12 = type metadata accessor for CompoundItemSupplementaryProvider(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  return CompoundItemSupplementaryProvider.init(children:)(v1);
}

uint64_t sub_1000BEE9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[32];
  __int128 v24;
  _QWORD v25[4];
  __int128 v26;
  _QWORD v27[4];
  _QWORD v28[4];
  _QWORD v29[5];

  ObjectType = swift_getObjectType();
  v4 = sub_100005C94(&qword_10082BBE8, type metadata accessor for SearchFocusDiffablePageViewController, (uint64_t)&unk_1006744F0);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v29, ObjectType, v4);
  v26 = xmmword_100661E10;
  v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  v27[3] = swift_getObjectType();
  v27[0] = v5;
  v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v28[3] = swift_getObjectType();
  v28[0] = v6;
  sub_100061B84((uint64_t)v27, (uint64_t)v25);
  sub_100061B84((uint64_t)v25, (uint64_t)v23);
  v7 = sub_10007B804((uint64_t *)&unk_10083A100);
  v8 = sub_10007B804(&qword_10082A030);
  if ((swift_dynamicCast(&v24, v23, v7, v8, 6) & 1) == 0)
    v24 = 0uLL;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v25);
  if ((_QWORD)v24)
  {
    v21 = v24;
    v9 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v9 = sub_10002778C(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = sub_10002778C((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    v9[2] = v11 + 1;
    *(_OWORD *)&v9[2 * v11 + 4] = v21;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  sub_100061B84((uint64_t)v28, (uint64_t)v25);
  sub_100061B84((uint64_t)v25, (uint64_t)v23);
  v12 = sub_10007B804((uint64_t *)&unk_10083A100);
  v13 = sub_10007B804(&qword_10082A030);
  if ((swift_dynamicCast(&v24, v23, v12, v13, 6) & 1) == 0)
    v24 = 0uLL;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v25);
  if ((_QWORD)v24)
  {
    v22 = v24;
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_10002778C(0, v9[2] + 1, 1, v9);
    v15 = v9[2];
    v14 = v9[3];
    v16 = v22;
    if (v15 >= v14 >> 1)
    {
      v20 = sub_10002778C((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v16 = v22;
      v9 = v20;
    }
    v9[2] = v15 + 1;
    *(_OWORD *)&v9[2 * v15 + 4] = v16;
  }
  swift_arrayDestroy(v27, v26, (char *)&type metadata for Any + 8);
  v17 = *(_QWORD *)(v1 + qword_10088BE50);
  v18 = type metadata accessor for SearchFocusLayoutSectionProvider(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  swift_retain(v17);
  result = sub_10059F36C(v29, (uint64_t)v9, v17, 0);
  a1[3] = v18;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = result;
  return result;
}

unint64_t sub_1000BF1A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  v2 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = PageGridCache.init()();
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = PageGridCache.init()();
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v5 = PageGridCache.init()();
  a1[3] = (uint64_t)&type metadata for SearchFocusPageGridProvider;
  result = sub_1000BF9E0();
  a1[4] = result;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

void sub_1000BF244(void *a1, uint64_t a2, void *a3)
{
  id v4;
  char *v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)swift_getObjectType(a1, a2);
  v4 = a3;
  v5 = (char *)v12.receiver;
  objc_msgSendSuper2(&v12, "scrollViewWillBeginDragging:", v4);
  v6 = &v5[qword_100889FE8];
  Strong = swift_unknownObjectWeakLoadStrong(&v5[qword_100889FE8]);
  if (Strong)
  {
    v9 = Strong;
    v10 = *((_QWORD *)v6 + 1);
    ObjectType = swift_getObjectType(Strong, v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);

    swift_unknownObjectRelease(v9);
  }
  else
  {

  }
}

uint64_t sub_1000BF2F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = type metadata accessor for SearchFocusShelfComponentTypeMappingProvider();
  v3 = swift_allocObject(v2, 24, 7);
  v4 = type metadata accessor for AppPromotionsShelfComponentTypeMappingProvider();
  *(_QWORD *)(v3 + 16) = swift_allocObject(v4, 16, 7);
  a1[3] = v2;
  result = sub_100005C94(&qword_10082BBD8, (uint64_t (*)(uint64_t))type metadata accessor for SearchFocusShelfComponentTypeMappingProvider, (uint64_t)&unk_100666248);
  a1[4] = result;
  *a1 = v3;
  return result;
}

void sub_1000BF374(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = sub_10007B804(&qword_10082BBD0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005F5338(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for DiffablePagePresenter.UpdatePhase.initial<A>(_:))
    AdvertRotationControllerProvider.viewControllerWillBeReloaded()();
  else
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000BF444()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_10082B4C0));
  return sub_1000834F4(v0 + qword_100889FE8);
}

uint64_t sub_1000BF470(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_10082B4C0));
  return sub_1000834F4(a1 + qword_100889FE8);
}

uint64_t type metadata accessor for SearchFocusDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10082B4F0;
  if (!qword_10082B4F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchFocusDiffablePageViewController);
  return result;
}

uint64_t sub_1000BF4E4(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = &unk_1006629D8;
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 1264);
}

uint64_t sub_1000BF530()
{
  return type metadata accessor for SearchFocusDiffablePageViewController(0);
}

void sub_1000BF538(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  _QWORD v17[4];
  char v18[24];

  v6 = type metadata accessor for ActionRunner.Origin(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = Strong;
    v12 = UIResponder.nearestActionRunner.getter();

    if (v12)
    {
      v17[3] = sub_10007B804(a3);
      v17[0] = v11;
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ActionRunner.Origin.userInitiated(_:), v6);
      v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph];
      v14 = v11;
      swift_retain(v13);
      dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, v17, v9, v13);

      swift_release(v12);
      v15 = swift_release(v13);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v15);
      sub_1000057AC((uint64_t)v17, (uint64_t *)&unk_10082B490);
    }
    else
    {

    }
  }
}

void sub_1000BF690(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "collectionView");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "reloadData");

  }
  else
  {
    __break(1u);
  }
}

void sub_1000BF6D8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;

  v2 = type metadata accessor for FloatingPointRoundingRule(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1008287C0 != -1)
    swift_once(&qword_1008287C0, sub_100432508);
  v6 = type metadata accessor for StaticDimension(0);
  v7 = sub_10007AF70(v6, (uint64_t)qword_10088F028);
  static Dimensions.defaultRoundingRule.getter(v7);
  v8 = AnyDimension.value(in:rounded:)(a1, v5, v6, &protocol witness table for StaticDimension);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(a1, "additionalSafeAreaInsets");
  objc_msgSend(a1, "setAdditionalSafeAreaInsets:", v8);
  v9 = objc_msgSend(a1, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setNeedsLayout");

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000BF81C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000BF840(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BA48);
}

void sub_1000BF860(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BA68);
}

void sub_1000BF880(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BA88);
}

void sub_1000BF8A0(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BAA8);
}

void sub_1000BF8C0(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BAC8);
}

void sub_1000BF8E0(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BAE8);
}

void sub_1000BF900(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BB08);
}

void sub_1000BF920(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BB28);
}

void sub_1000BF940(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BB48);
}

void sub_1000BF960(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BB68);
}

void sub_1000BF980(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BB88);
}

void sub_1000BF9A0(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BBA8);
}

void sub_1000BF9C0(uint64_t a1)
{
  uint64_t v1;

  sub_1000BF538(a1, v1, &qword_10082BBC8);
}

unint64_t sub_1000BF9E0()
{
  unint64_t result;

  result = qword_10082BBE0;
  if (!qword_10082BBE0)
  {
    result = swift_getWitnessTable(&unk_10066D0DC, &type metadata for SearchFocusPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_10082BBE0);
  }
  return result;
}

unint64_t sub_1000BFA24()
{
  unint64_t result;

  result = qword_10082BC00;
  if (!qword_10082BC00)
  {
    result = swift_getWitnessTable(&unk_10066AD7C, &type metadata for SearchFocusPageShelfLayoutSpacingProvider);
    atomic_store(result, (unint64_t *)&qword_10082BC00);
  }
  return result;
}

uint64_t sub_1000BFA68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_10082B470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for ProductRatingsRegularLayout(_QWORD *a1)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 8);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 13);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 18);
}

uint64_t initializeWithCopy for ProductRatingsRegularLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 64, a2 + 64);
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 128) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 104, a2 + 104);
  v7 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 168) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 144, a2 + 144);
  return a1;
}

_QWORD *assignWithCopy for ProductRatingsRegularLayout(_QWORD *a1, _QWORD *a2)
{
  sub_1000640DC(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1000640DC(a1 + 8, a2 + 8);
  sub_1000640DC(a1 + 13, a2 + 13);
  sub_1000640DC(a1 + 18, a2 + 18);
  return a1;
}

__n128 initializeWithTake for ProductRatingsRegularLayout(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_QWORD *)(a1 + 176) = *((_QWORD *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for ProductRatingsRegularLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 64));
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 104));
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 144));
  v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsRegularLayout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 184))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsRegularLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRatingsRegularLayout()
{
  return &type metadata for ProductRatingsRegularLayout;
}

uint64_t initializeWithCopy for ProductRatingsRegularLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

_QWORD *assignWithCopy for ProductRatingsRegularLayout.Metrics(_QWORD *a1, _QWORD *a2)
{
  sub_1000640DC(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

__n128 initializeWithTake for ProductRatingsRegularLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ProductRatingsRegularLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsRegularLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsRegularLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRatingsRegularLayout.Metrics()
{
  return &type metadata for ProductRatingsRegularLayout.Metrics;
}

void sub_1000BFF50(uint64_t a1, CGFloat a2, CGFloat a3, double a4, double a5)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  CGFloat v17;
  double v18;
  double v19;
  CGFloat v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  CGFloat v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double Height;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  CGFloat MaxX;
  double v38;
  CGFloat v39;
  double v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  double v64;
  CGFloat MinX;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;

  v6 = (uint64_t)v5;
  v12 = v5 + 8;
  v13 = v5[11];
  v14 = v5[12];
  sub_100060B40(v5 + 8, v13);
  v15 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v13, v14, a4, a5);
  v17 = v16;
  v19 = v18;
  v20 = v15 + 4.0;
  v70.origin.x = a2;
  v70.origin.y = a3;
  v70.size.width = a4;
  v70.size.height = a5;
  MinX = CGRectGetMinX(v70);
  sub_1000C04B8((uint64_t)v5, (uint64_t)v67);
  v21 = v68;
  v22 = v69;
  sub_100060B40(v67, v68);
  v23 = AnyDimension.value(with:)(a1, v21, v22);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v67);
  v71.origin.y = v23 - v19;
  v71.origin.x = MinX;
  v71.size.width = v20;
  v71.size.height = v17;
  v24 = CGRectGetMaxX(v71) + *(double *)(v6 + 40);
  v25 = *(_QWORD *)(v6 + 128);
  v26 = *(_QWORD *)(v6 + 136);
  sub_100060B40((_QWORD *)(v6 + 104), v25);
  v72.origin.x = a2;
  v72.origin.y = a3;
  v72.size.width = a4;
  v72.size.height = a5;
  v27 = CGRectGetWidth(v72) - v24;
  v73.origin.x = a2;
  v73.origin.y = a3;
  v73.size.width = a4;
  v73.size.height = a5;
  Height = CGRectGetHeight(v73);
  v29 = dispatch thunk of Placeable.measure(toFit:with:)(a1, v25, v26, v27, Height);
  v31 = v30;
  v33 = v32;
  sub_1000C04B8(v6, (uint64_t)v67);
  v34 = v68;
  v35 = v69;
  sub_100060B40(v67, v68);
  v36 = AnyDimension.value(with:)(a1, v34, v35);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v67);
  v74.origin.x = v24;
  v74.origin.y = v36 - v33;
  v74.size.width = v29;
  v74.size.height = v31;
  MaxX = CGRectGetMaxX(v74);
  v38 = *(double *)(v6 + 56);
  v39 = MaxX + *(double *)(v6 + 48);
  v75.origin.x = a2;
  v75.origin.y = a3;
  v75.size.width = a4;
  v75.size.height = a5;
  v40 = CGRectGetWidth(v75) - v39;
  if (v40 < v38)
    v38 = v40;
  v76.origin.x = a2;
  v76.origin.y = a3;
  v76.size.width = a4;
  v76.size.height = a5;
  CGRectGetWidth(v76);
  v41 = (_QWORD *)(v6 + 144);
  v42 = *(_QWORD *)(v6 + 168);
  v43 = *(_QWORD *)(v6 + 176);
  sub_100060B40((_QWORD *)(v6 + 144), v42);
  v77.origin.x = a2;
  v77.origin.y = a3;
  v77.size.width = a4;
  v77.size.height = a5;
  v44 = CGRectGetHeight(v77);
  dispatch thunk of Placeable.measure(toFit:with:)(a1, v42, v43, v38, v44);
  sub_1000C04B8(v6, (uint64_t)v67);
  v45 = v68;
  v46 = v69;
  sub_100060B40(v67, v68);
  AnyDimension.value(with:)(a1, v45, v46);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v67);
  v47 = *(_QWORD *)(v6 + 88);
  v48 = *(_QWORD *)(v6 + 96);
  sub_100060B40(v12, v47);
  v49 = CGRect.withLayoutDirection(using:relativeTo:)(a1);
  dispatch thunk of Placeable.place(at:with:)(a1, v47, v48, v49, v50, v51, v52);
  v53 = *(_QWORD *)(v6 + 128);
  v54 = *(_QWORD *)(v6 + 136);
  sub_100060B40((_QWORD *)(v6 + 104), v53);
  v55 = CGRect.withLayoutDirection(using:relativeTo:)(a1);
  dispatch thunk of Placeable.place(at:with:)(a1, v53, v54, v55, v56, v57, v58);
  v60 = *(_QWORD *)(v6 + 168);
  v59 = *(_QWORD *)(v6 + 176);
  sub_100060B40(v41, v60);
  v61 = CGRect.withLayoutDirection(using:relativeTo:)(a1);
  dispatch thunk of Placeable.place(at:with:)(a1, v60, v59, v61, v62, v63, v64);
}

uint64_t sub_1000C030C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000C0484(v1, a1);
}

double sub_1000C0318(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_1000C04B8(v2, (uint64_t)v8);
  v5 = v9;
  v6 = v10;
  sub_100060B40(v8, v9);
  AnyDimension.value(with:)(a1, v5, v6);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v8);
  return a2;
}

uint64_t sub_1000C03A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1000C050C();
  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, v4);
}

unint64_t sub_1000C03E8()
{
  unint64_t result;

  result = qword_10082BC20;
  if (!qword_10082BC20)
  {
    result = swift_getWitnessTable(&unk_100662A4C, &type metadata for ProductRatingsRegularLayout);
    atomic_store(result, (unint64_t *)&qword_10082BC20);
  }
  return result;
}

unint64_t sub_1000C0430()
{
  unint64_t result;

  result = qword_10082BC28;
  if (!qword_10082BC28)
  {
    result = swift_getWitnessTable(&unk_100662A24, &type metadata for ProductRatingsRegularLayout);
    atomic_store(result, (unint64_t *)&qword_10082BC28);
  }
  return result;
}

uint64_t sub_1000C0474(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006E0464, 1);
}

uint64_t sub_1000C0484(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ProductRatingsRegularLayout(a2, a1);
  return a2;
}

uint64_t sub_1000C04B8(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a1 + 56);
  return a2;
}

unint64_t sub_1000C050C()
{
  unint64_t result;

  result = qword_10082BC30;
  if (!qword_10082BC30)
  {
    result = swift_getWitnessTable(&unk_100662A7C, &type metadata for ProductRatingsRegularLayout);
    atomic_store(result, (unint64_t *)&qword_10082BC30);
  }
  return result;
}

double sub_1000C0554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6;
  uint64_t v10;
  id v11;
  uint64_t v12;
  double v13;
  void *v14;
  uint64_t v15;
  double result;

  v10 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_objectGraph);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_objectGraph) = a3;
  swift_retain_n(a3, 2);
  sub_1004A15D4(v10);
  swift_release(v10);
  v11 = objc_msgSend(a6, "snapshotPageTraitEnvironment", swift_release(a3).n128_f64[0]);
  v12 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_pageTraits);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_pageTraits) = v11;
  *(_QWORD *)&v13 = swift_unknownObjectRelease(v12).n128_u64[0];
  v14 = *(void **)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_flowLayout);
  objc_msgSend(a6, "pageMarginInsets", v13);
  objc_msgSend(v14, "setSectionInset:");
  v15 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_media);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_media) = a1;
  swift_retain_n(a1, 2);
  sub_1004A1504(v15);
  swift_release(v15);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

double sub_1000C0658(uint64_t *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1004A3224(*a1, 0, 0, a8, 0.0, 0.0, a2, a3, a2);
}

double sub_1000C0680(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_1000C0554(*a1, a2, a3, a4, a5, a6);
}

double sub_1000C0688()
{
  return 0.0;
}

uint64_t sub_1000C0694()
{
  return sub_100005C94(&qword_10082BC38, (uint64_t (*)(uint64_t))&type metadata accessor for ProductMedia, (uint64_t)&protocol conformance descriptor for ProductMedia);
}

void sub_1000C0800(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char **v4;
  id v5;
  void *v6;
  char **v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  double *v26;
  double *v27;
  double MidX;
  BOOL v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  void *v33;
  double v34;
  id v35;
  double v36;
  double v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  double v48;
  double v49;
  void *v50;
  id v51;
  void *v52;
  double v53;
  double v54;
  double v55;
  id v56;
  double v57;
  id v58;
  id v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  id v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  char **v75;
  id v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char **v80;
  unint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t i;
  id v90;
  void *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  id v95;
  void *v96;
  uint64_t v97;
  id v98;
  id v99;
  id v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  double v107;
  double v108;
  double width;
  double height;
  double v111;
  double v112;
  double MidY;
  __int128 aBlock;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;

  v2 = v1;
  v3 = a1;
  v4 = &selRef_accessibilityHeadingView;
  v5 = objc_msgSend(a1, "viewForKey:", UITransitionContextFromViewKey, sub_10050C8DC(0));
  v6 = v5;
  v7 = &off_1007F9000;
  if (v5)
  {
    objc_msgSend(v5, "frame");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
  }
  else
  {
    v16 = objc_msgSend(v3, "containerView");
    objc_msgSend(v16, "bounds");
    v9 = v17;
    v11 = v18;
    v13 = v19;
    v15 = v20;

  }
  v21 = objc_msgSend(v3, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  v22 = v21;
  if (v21)
  {
    v23 = objc_msgSend(v21, "traitCollection");

    v24 = objc_msgSend(v23, "horizontalSizeClass");
  }
  else
  {
    v24 = 0;
  }
  v25 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toCardView);
  if (!v25
    || (v26 = (double *)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toBounds),
        (*(_BYTE *)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toBounds + 32) & 1) != 0)
    || (v27 = (double *)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toCenter),
        (*(_BYTE *)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toCenter + 16) & 1) != 0))
  {
    v29 = v24 != (id)1 || v22 == 0;
    v111 = 0.0;
    if (v29)
      v30 = 0.25;
    else
      v30 = 0.0;
    v118.origin.x = v9;
    v118.origin.y = v11;
    v118.size.width = v13;
    v118.size.height = v15;
    v31 = v30 * CGRectGetWidth(v118);
    v119.origin.x = v9;
    v119.origin.y = v11;
    v119.size.width = v13;
    v119.size.height = v15;
    v32 = CGRectGetHeight(v119) * 0.25;
    v120.origin.x = v9;
    v120.origin.y = v11;
    v120.size.width = v13;
    v120.size.height = v15;
    v121 = CGRectInset(v120, v31, v32);
    width = v121.size.width;
    height = v121.size.height;
    v121.origin.x = v9;
    v121.origin.y = v11;
    v121.size.width = v13;
    v121.size.height = v15;
    MidX = CGRectGetMidX(v121);
    v122.origin.x = v9;
    v122.origin.y = v11;
    v122.size.width = v13;
    v122.size.height = v15;
    MidY = CGRectGetMidY(v122);
    v108 = 0.0;
  }
  else
  {
    MidX = *v27;
    MidY = v27[1];
    width = v26[2];
    height = v26[3];
    v108 = v26[1];
    v111 = *v26;
  }
  v33 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toCollectionViewController);
  v34 = 0.0;
  v112 = MidX;
  if (v33)
  {
    v35 = objc_msgSend(v33, "view");
    v36 = 0.0;
    v37 = MidY;
    if (v35)
    {
      v38 = v35;
      objc_msgSend(v35, "bounds");
      v40 = v39;
      v42 = v41;
      v44 = v43;
      v46 = v45;
      v47 = objc_msgSend(v3, "containerView");
      objc_msgSend(v38, "convertRect:toCoordinateSpace:", v47, v40, v42, v44, v46);
      v36 = v48;
      v34 = v49;

      MidX = v112 + v36;
      v37 = MidY + v34;
    }
  }
  else
  {
    v36 = 0.0;
    v37 = MidY;
  }
  v50 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_detailPageViewController);
  if (!v50)
  {
LABEL_25:
    v107 = v37;
    v53 = MidX;
    v123.origin.x = v9;
    v123.origin.y = v11;
    v123.size.width = v13;
    v123.size.height = v15;
    v54 = CGRectGetMidX(v123);
    v124.origin.x = v9;
    v124.origin.y = v11;
    v124.size.width = v13;
    v124.size.height = v15;
    v55 = CGRectGetMidY(v124);
    sub_1000C18C8(v25, (uint64_t)v6, v3, v54, v55, 0.0, 0.0, v13, v15, v36, v34);
    v56 = objc_msgSend(v3, "viewForKey:", UITransitionContextToViewKey);
    v57 = *(double *)&v56;
    if (v56)
    {
      v58 = v56;
      v59 = objc_msgSend(v3, "containerView");
      objc_msgSend(v59, "bounds");
      v61 = v60;
      v63 = v62;
      v65 = v64;
      v67 = v66;

      objc_msgSend(v58, "setFrame:", v61, v63, v65, v67);
      if (v25)
      {
        v7 = v25;
        v4 = (char **)objc_msgSend(v3, "containerView");
        objc_msgSend(v4, "insertSubview:below:", v58, v7);

      }
      else
      {
        v4 = (char **)objc_msgSend(v3, "containerView");
        objc_msgSend(v4, "insertSubview:below:", v58, v6);
      }

    }
    v117 = (uint64_t)_swiftEmptyArrayStorage;
    v68 = sub_1000C1218(v25, v6, (uint64_t)v3, v111, v108, width, height, v112, MidY, v53, v107);
    if (v68)
    {
      v4 = (char **)v68;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
      v7 = *(char ***)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v69 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v7 >= v69 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, (char *)v7 + 1, 1);
      v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v4);
      specialized Array._endMutation()(v70);

    }
    if (!v6)
      goto LABEL_39;
    v4 = v6;
    if (UIAccessibilityIsReduceMotionEnabled())
      goto LABEL_38;
    v107 = v57;
    v71 = swift_allocObject(&unk_100758890, 24, 7);
    *(_QWORD *)(v71 + 16) = v4;
    v72 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    *(_QWORD *)&v116 = sub_1000C1CDC;
    *((_QWORD *)&v116 + 1) = v71;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v115 = sub_10000AB18;
    *((_QWORD *)&v115 + 1) = &unk_1007588A8;
    v73 = _Block_copy(&aBlock);
    v74 = *((_QWORD *)&v116 + 1);
    v75 = v4;
    swift_release(v74);
    v76 = objc_msgSend(v72, "initWithDuration:controlPoint1:controlPoint2:animations:", v73, 0.216, 0.33, 0.0, 0.83, 0.83);
    _Block_release(v73);
    v77 = swift_allocObject(&unk_1007588E0, 24, 7);
    *(_QWORD *)(v77 + 16) = v75;
    *(_QWORD *)&v116 = sub_1000C1CF0;
    *((_QWORD *)&v116 + 1) = v77;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v115 = sub_1000D75E8;
    *((_QWORD *)&v115 + 1) = &unk_1007588F8;
    v78 = _Block_copy(&aBlock);
    v79 = *((_QWORD *)&v116 + 1);
    v80 = v75;
    objc_msgSend(v76, "addCompletion:", v78, swift_release(v79).n128_f64[0]);
    _Block_release(v78);

    v4 = (char **)v76;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
    v7 = *(char ***)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v81 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v7 >= v81 >> 1)
      goto LABEL_65;
    while (1)
    {
      v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v4);
      specialized Array._endMutation()(v82);
      v57 = v107;
LABEL_38:

LABEL_39:
      v83 = sub_1000C1544(v25, v6, (uint64_t)v3, v111, v108, width, height, v112, MidY);
      if (v83)
      {
        v84 = v83;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v84);
        v3 = *(char **)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v85 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if ((unint64_t)v3 >= v85 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v85 > 1, v3 + 1, 1);
        v86 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, v84);
        specialized Array._endMutation()(v86);

      }
      v87 = v117;
      if ((unint64_t)v117 >> 62)
      {
        if (v117 < 0)
          v92 = v117;
        else
          v92 = v117 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v117, 2);
        v88 = _CocoaArrayWrapper.endIndex.getter(v92);
        if (!v88)
          goto LABEL_55;
      }
      else
      {
        v88 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v117, 2);
        if (!v88)
          goto LABEL_55;
      }
      if (v88 >= 1)
        break;
      __break(1u);
LABEL_65:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v81 > 1, (char *)v7 + 1, 1);
    }
    for (i = 0; i != v88; ++i)
    {
      if ((v87 & 0xC000000000000001) != 0)
        v90 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v87);
      else
        v90 = *(id *)(v87 + 8 * i + 32);
      v91 = v90;
      objc_msgSend(v90, "startAnimation", v104, v105);

    }
LABEL_55:
    swift_bridgeObjectRelease_n(v87, 2);
    if (v25)
    {
      v93 = v25;
      if (UIAccessibilityIsReduceMotionEnabled())
      {

      }
      else
      {
        v94 = swift_allocObject(&unk_100758840, 24, 7);
        *(_QWORD *)(v94 + 16) = v93;
        v95 = objc_allocWithZone((Class)UIViewPropertyAnimator);
        *(_QWORD *)&v116 = sub_1000B9990;
        *((_QWORD *)&v116 + 1) = v94;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v115 = sub_10000AB18;
        *((_QWORD *)&v115 + 1) = &unk_100758858;
        v96 = _Block_copy(&aBlock);
        v97 = *((_QWORD *)&v116 + 1);
        v98 = v93;
        swift_release(v97);
        v99 = objc_msgSend(v95, "initWithDuration:controlPoint1:controlPoint2:animations:", v96, 0.13, 0.17, 0.0, 0.67, 1.0);
        _Block_release(v96);

        if (v99)
        {
          objc_msgSend(v99, "startAnimationAfterDelay:", 0.083);
          v100 = v99;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v100);
          v102 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v101 = *(_QWORD *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v102 >= v101 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v101 > 1, v102 + 1, 1);
          v103 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v102, v100);
          specialized Array._endMutation()(v103);

          v87 = v117;
          goto LABEL_63;
        }
      }
    }

LABEL_63:
    swift_bridgeObjectRelease(v87);
    return;
  }
  v51 = objc_msgSend(v50, "view");
  if (v51)
  {
    v52 = v51;
    objc_msgSend(v51, "transform");
    v105 = v115;
    v106 = aBlock;
    v104 = v116;

    aBlock = v106;
    v115 = v105;
    v116 = v104;
    objc_msgSend(v25, "setTransform:", &aBlock);
    goto LABEL_25;
  }
  __break(1u);
}

id sub_1000C1218(void *a1, void *a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  void *v11;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  void **v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;

  if (UIAccessibilityIsReduceMotionEnabled())
    return 0;
  v24 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 180.0, 22.0, 0.0, 0.0);
  v23 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v24, 0.0);

  v25 = swift_allocObject(&unk_1007587A0, 104, 7);
  *(_QWORD *)(v25 + 16) = v11;
  *(_QWORD *)(v25 + 24) = a1;
  *(double *)(v25 + 32) = a4;
  *(double *)(v25 + 40) = a5;
  *(double *)(v25 + 48) = a6;
  *(double *)(v25 + 56) = a7;
  *(double *)(v25 + 64) = a8;
  *(double *)(v25 + 72) = a9;
  *(_QWORD *)(v25 + 80) = a2;
  *(double *)(v25 + 88) = a10;
  *(double *)(v25 + 96) = a11;
  v40 = sub_1000C1C30;
  v41 = v25;
  v36 = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_10000AB18;
  v39 = &unk_1007587B8;
  v26 = _Block_copy(&v36);
  v27 = v41;
  v28 = a2;
  v29 = v11;
  v30 = a1;
  objc_msgSend(v23, "addAnimations:", v26, swift_release(v27).n128_f64[0]);
  _Block_release(v26);
  v31 = swift_allocObject(&unk_1007587F0, 32, 7);
  *(_QWORD *)(v31 + 16) = a3;
  *(_QWORD *)(v31 + 24) = v29;
  v40 = sub_1000C1C78;
  v41 = v31;
  v36 = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_1000D75E8;
  v39 = &unk_100758808;
  v32 = _Block_copy(&v36);
  v33 = v41;
  v34 = v29;
  swift_unknownObjectRetain(a3);
  objc_msgSend(v23, "addCompletion:", v32, swift_release(v33).n128_f64[0]);
  _Block_release(v32);
  return v23;
}

id sub_1000C1438(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, void *a10, void *a11)
{
  _QWORD v22[6];

  sub_10050C8DC(1);
  objc_msgSend(a10, "setBounds:", a1, a2, a3, a4);
  objc_msgSend(a10, "setCenter:", a5, a6);
  if (a10)
  {
    v22[0] = 0x3FF0000000000000;
    v22[1] = 0;
    v22[2] = 0;
    v22[3] = 0x3FF0000000000000;
    v22[4] = 0;
    v22[5] = 0;
    objc_msgSend(a10, "setTransform:", v22);
  }
  objc_msgSend(a11, "setBounds:", a1, a2, a3, a4);
  return objc_msgSend(a11, "setCenter:", a7, a8);
}

id sub_1000C1544(void *a1, void *a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  void *v9;
  _QWORD *v19;
  id v20;
  void *v21;
  _QWORD *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  _QWORD *v27;
  void *v28;
  _QWORD *v29;
  id v30;
  id v31;
  void **v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  _QWORD *v38;

  if (!UIAccessibilityIsReduceMotionEnabled())
    return 0;
  objc_msgSend(a1, "setBounds:", a4, a5, a6, a7);
  objc_msgSend(a1, "setCenter:", a8, a9);
  v19 = (_QWORD *)swift_allocObject(&unk_100758700, 40, 7);
  v19[2] = v9;
  v19[3] = a1;
  v19[4] = a2;
  v20 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v37 = sub_1000C1BB0;
  v38 = v19;
  v33 = _NSConcreteStackBlock;
  v34 = 1107296256;
  v35 = sub_10000AB18;
  v36 = &unk_100758718;
  v21 = _Block_copy(&v33);
  v22 = v38;
  v23 = a2;
  v24 = v9;
  v25 = a1;
  swift_release(v22);
  v26 = objc_msgSend(v20, "initWithDuration:curve:animations:", 0, v21, 0.3);
  _Block_release(v21);
  v27 = (_QWORD *)swift_allocObject(&unk_100758750, 40, 7);
  v27[2] = a2;
  v27[3] = a3;
  v27[4] = v24;
  v37 = sub_1000C1BF0;
  v38 = v27;
  v33 = _NSConcreteStackBlock;
  v34 = 1107296256;
  v35 = sub_1000D75E8;
  v36 = &unk_100758768;
  v28 = _Block_copy(&v33);
  v29 = v38;
  v30 = v24;
  v31 = v23;
  swift_unknownObjectRetain(a3);
  objc_msgSend(v26, "addCompletion:", v28, swift_release(v29).n128_f64[0]);
  _Block_release(v28);
  return v26;
}

id sub_1000C1758(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v5;
  id result;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  _QWORD v12[6];
  _BYTE v13[24];

  v5 = (_QWORD *)(a1 + OBJC_IVAR____TtC8AppStore27AnimatedTransitionWithTasks_tasks);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC8AppStore27AnimatedTransitionWithTasks_tasks, v13, 0, 0);
  v7 = *v5;
  v8 = *(_QWORD *)(*v5 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain(*v5);
    v9 = (_BYTE *)(v7 + 48);
    do
    {
      if (*v9 == 1)
      {
        v11 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v9 - 2);
        v10 = *((_QWORD *)v9 - 1);
        swift_retain(v10);
        v11(1, 1);
        swift_release(v10);
      }
      v9 += 24;
      --v8;
    }
    while (v8);
    result = (id)swift_bridgeObjectRelease(v7);
  }
  if (a2)
  {
    objc_msgSend(a2, "setAlpha:", 1.0);
    v12[0] = 0x3FF0000000000000;
    v12[1] = 0;
    v12[2] = 0;
    v12[3] = 0x3FF0000000000000;
    v12[4] = 0;
    v12[5] = 0;
    result = objc_msgSend(a2, "setTransform:", v12);
  }
  if (a3)
    return objc_msgSend(a3, "setAlpha:", 0.0);
  return result;
}

void sub_1000C1868(uint64_t a1, id a2, id a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if (!a1)
  {
    v8 = v3;
    if (a2)
      objc_msgSend(a2, "setHidden:", 1);
    objc_msgSend(a3, "completeTransition:", 1, v4, v8, v5, v6);
    sub_10050C8DC(2);
  }
}

void sub_1000C18C8(void *a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v11;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v27;

  if (a1)
  {
    v20 = *(void **)(v11 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toCollectionViewController);
    if (!v20)
    {
      v27 = a1;
      v24 = objc_msgSend(a3, "containerView");
      objc_msgSend(v24, "insertSubview:below:", v27, a2);
      goto LABEL_7;
    }
    v21 = a1;
    v22 = v20;
    v23 = objc_msgSend(v22, "view");
    if (v23)
    {
      v24 = v23;
      objc_msgSend(v23, "addSubview:", v21);

LABEL_7:
      objc_msgSend(a1, "setHidden:", 0);
      objc_msgSend(a1, "setBounds:", a6, a7, a8, a9);
      objc_msgSend(a1, "setCenter:", a4 - a10, a5 - a11);
      objc_msgSend(a1, "setNeedsLayout");
      objc_msgSend(a1, "layoutIfNeeded");
      objc_msgSend(a1, "setAlpha:", 0.0);

      return;
    }
    __break(1u);
  }
}

void sub_1000C1AA8()
{
  uint64_t v0;

}

id sub_1000C1AE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppPromotionDetailPageCloseAnimation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppPromotionDetailPageCloseAnimation()
{
  return objc_opt_self(_TtC8AppStore36AppPromotionDetailPageCloseAnimation);
}

uint64_t sub_1000C1B7C()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_1000C1BB0()
{
  uint64_t v0;

  return sub_1000C1758(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1000C1BBC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1000C1BF0(uint64_t a1)
{
  uint64_t v1;

  sub_1000C1868(a1, *(id *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_1000C1BFC()
{
  id *v0;

  return swift_deallocObject(v0, 104, 7);
}

id sub_1000C1C30()
{
  uint64_t v0;

  return sub_1000C1438(*(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 72), *(double *)(v0 + 88), *(double *)(v0 + 96), *(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 80));
}

uint64_t sub_1000C1C4C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_1000C1C78(uint64_t a1)
{
  uint64_t v1;
  double result;

  if (!a1)
  {
    objc_msgSend(*(id *)(v1 + 16), "completeTransition:", 1);
    return sub_10050C8DC(2);
  }
  return result;
}

uint64_t sub_1000C1CB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000C1CDC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

id sub_1000C1CF0(id result)
{
  uint64_t v1;

  if (!result)
    return objc_msgSend(*(id *)(v1 + 16), "setHidden:", 1);
  return result;
}

id sub_1000C1D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  Swift::String_optional v24;
  Class isa;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  id v30;
  id v31;
  __int128 v32;
  __int128 v33;
  UIImage_optional v34;
  UIAction_optional v35;
  UIMenu_optional v36;

  *(_BYTE *)(v2 + qword_10082BD40) = 0;
  v5 = qword_10082BD48;
  v6 = type metadata accessor for ProductReviewFlowPreviewingCollectionElementsObserver();
  v7 = swift_allocObject(v6, 17, 7);
  *(_BYTE *)(v7 + 16) = 0;
  *(_QWORD *)(v2 + v5) = v7;
  swift_retain(a1);
  swift_retain(a2);
  v8 = (id)sub_1000BD9A4(a1, a2);
  result = objc_msgSend(v8, "collectionView");
  if (result)
  {
    v10 = result;
    v11 = sub_10007B804(&qword_10082E950);
    v12 = swift_allocObject(v11, 48, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100661A30;
    *(_QWORD *)(v12 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
    *(_QWORD *)(v12 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    v13 = sub_100008FE4(0, (unint64_t *)&qword_100833940, UICollectionView_ptr);
    v14 = UIView.registerForTraitChanges<A>(_:handler:)(v12, sub_1000C1FD8, 0, v13);
    swift_unknownObjectRelease(v14);

    v15 = swift_bridgeObjectRelease(v12);
    v16 = ReviewsDiffablePagePresenter.trailingNavBarAction.getter(v15);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v8, "navigationItem");
      sub_100008FE4(0, (unint64_t *)&qword_10083E600, UIBarButtonItem_ptr);
      v19 = swift_retain(v17);
      v20 = Action.title.getter(v19);
      v22 = v21;
      swift_release(v17);
      v32 = 0u;
      v33 = 0u;
      swift_retain(a1);
      v23 = swift_retain(v17);
      v34.is_nil = sub_1000C3E58(v23, a1, 0, (uint64_t)&v32);
      v24.value._countAndFlagsBits = v20;
      v24.value._object = v22;
      v34.value.super.isa = 0;
      v35.value.super.super.isa = 0;
      isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v24, v34, v35, v36).super.super.isa;
      objc_msgSend(v18, "setRightBarButtonItem:", isa, v32, v33);
      swift_release(v17);

    }
    v26 = v8;
    ReviewsDiffablePagePresenter.title.getter();
    v28 = v27;
    v29 = String._bridgeToObjectiveC()();
    objc_msgSend(v26, "setTitle:", v29, swift_bridgeObjectRelease(v28).n128_f64[0]);

    *((_BYTE *)v26 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_prefersLargeTitle) = 1;
    v30 = v26;
    v31 = objc_msgSend(v30, "navigationItem");
    objc_msgSend(v31, "setLargeTitleDisplayMode:", 3);

    swift_release(a1);
    swift_release(a2);

    return v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000C1FD8(void *a1)
{
  return objc_msgSend(a1, "reloadData");
}

uint64_t sub_1000C1FE4(char a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_10007B804(&qword_10082C2F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ItemLayoutContext(0, v7);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v14 = __chkstk_darwin(v12).n128_u64[0];
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21.receiver = v1;
  v21.super_class = ObjectType;
  result = (uint64_t)objc_msgSendSuper2(&v21, "viewWillAppear:", a1 & 1, v14);
  v18 = qword_10082BD40;
  if ((*((_BYTE *)v1 + qword_10082BD40) & 1) == 0)
  {
    sub_1000C21B4((uint64_t)v6);
    v19 = sub_10007B804(&qword_10082C2F8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v6, 1, v19) == 1)
    {
      result = sub_1000057AC((uint64_t)v6, &qword_10082C2F0);
    }
    else
    {
      v20 = &v6[*(int *)(v19 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v6, v12);
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v20, v8);
      sub_1000C2AEC((uint64_t)v16);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
  }
  *((_BYTE *)v1 + v18) = 1;
  return result;
}

uint64_t sub_1000C21B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *);
  char *v33;
  id *v34;
  __n128 v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t result;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  __n128 v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t (**v100)(_QWORD, _QWORD);
  uint64_t v101;
  uint64_t v102;
  unint64_t *v103;
  char v104[24];
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  _OWORD v108[2];
  uint64_t v109;

  v85 = a1;
  v2 = type metadata accessor for ProductReview.ReviewSource(0);
  v100 = *(uint64_t (***)(_QWORD, _QWORD))(v2 - 8);
  v101 = v2;
  v3 = __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = type metadata accessor for ItemLayoutContext.Metadata(0, v3);
  v95 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v94 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for ItemLayoutContext(0, v7);
  v92 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v9 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for IndexPath(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v99 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10007B804((uint64_t *)&unk_10083A0A0);
  v102 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10007B804(&qword_10082C310);
  v97 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v86 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10007B804(&qword_10082C318);
  __chkstk_darwin(v16);
  v103 = (unint64_t *)((char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v96 = (char *)&v80 - v19;
  v87 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v84 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v83 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10007B804(&qword_10083A0B0);
  __chkstk_darwin(v21);
  v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ShelfLayoutContext(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v98 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v1;
  ReviewsDiffablePagePresenter.initialFocusedReviewId.getter(&v105, v26);
  if (!*((_QWORD *)&v106 + 1))
  {
    v29 = &qword_100829F10;
    v30 = (char *)&v105;
    goto LABEL_5;
  }
  v108[0] = v105;
  v108[1] = v106;
  v109 = v107;
  sub_1000C3970(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_10007E32C((uint64_t)v108);
    v29 = &qword_10083A0B0;
    v30 = v23;
LABEL_5:
    sub_1000057AC((uint64_t)v30, v29);
    goto LABEL_23;
  }
  v31 = v24;
  v80 = v25;
  v32 = *(void (**)(char *, char *))(v25 + 32);
  v33 = v98;
  v81 = v31;
  v32(v98, v23);
  v34 = (id *)(v1 + qword_100839F20);
  v35 = swift_beginAccess(v28 + qword_100839F20, v104, 0, 0);
  if (*v34)
  {
    v36 = *v34;
    v37 = v83;
    ShelfLayoutContext.shelf.getter(v36);
    v38 = dispatch thunk of ModelMappedDiffableDataSource.itemModels(in:)(v37);

    result = (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v37, v87);
    if (v38)
    {
      v40 = 0;
      v83 = (char *)v38;
      v41 = *(_QWORD *)(v38 + 16);
      LODWORD(v84) = enum case for ProductReview.ReviewSource.user(_:);
      v42 = v99;
      v43 = v103;
      v87 = v41;
      v82 = v9;
      v88 = v14;
      while (1)
      {
        if (v40 == v41)
        {
          v45 = 1;
          v40 = v41;
          v46 = v102;
        }
        else
        {
          v46 = v102;
          if (v40 >= *((_QWORD *)v83 + 2))
          {
            __break(1u);
            return result;
          }
          v47 = &v86[*(int *)(v14 + 48)];
          (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v47, &v83[((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ *(_QWORD *)(v102 + 72) * v40], v11);
          v48 = (char *)v103 + *(int *)(v14 + 48);
          *v103 = v40;
          v49 = v47;
          v42 = v99;
          (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v48, v49, v11);
          v43 = v103;
          v45 = 0;
          ++v40;
        }
        v50 = v97;
        (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v43, v45, 1, v14);
        v51 = (uint64_t)v43;
        v52 = v96;
        sub_10003F510(v51, (uint64_t)v96, &qword_10082C318);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v52, 1, v14) == 1)
        {
          v75 = swift_bridgeObjectRelease(v83);
          (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v98, v81, v75);
          sub_10007E32C((uint64_t)v108);
          v72 = sub_10007B804(&qword_10082C2F8);
          v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56);
          v74 = v85;
          return v73(v74, 1, 1, v72);
        }
        v53 = *(_QWORD *)v52;
        v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v46 + 32))(v13, &v52[*(int *)(v14 + 48)], v11);
        v55 = v13;
        v56 = v46;
        v57 = v11;
        v58 = v42;
        v59 = ShelfLayoutContext.index.getter(v54);
        v60 = IndexPath.init(item:section:)(v53, v59);
        v61 = v94;
        ItemLayoutContext.Metadata.init()(v60);
        ShelfLayoutContext.itemLayoutContext(for:at:metadata:)(v55, v42, v61);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v61, v93);
        v62 = type metadata accessor for ProductReview(0);
        v63 = sub_100005C94(&qword_10082C320, (uint64_t (*)(uint64_t))&type metadata accessor for ProductReview, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
        v64 = ItemLayoutContext.typedModel<A>(as:)(&v105, v62, v62, v63);
        v65 = v105;
        if ((_QWORD)v105)
        {
          ProductReview.source.getter(v64);
          v66 = ((uint64_t (**)(uint64_t *, uint64_t))v100)[11](v5, v101);
          if (v66 != (_DWORD)v84)
          {
            v44 = swift_release(v65);
            (*(void (**)(char *, uint64_t, __n128))(v92 + 8))(v9, v91, v44);
            v42 = v99;
            (*(void (**)(char *, uint64_t))(v89 + 8))(v99, v90);
            v13 = v55;
            v11 = v57;
            (*(void (**)(char *, uint64_t))(v102 + 8))(v55, v57);
            result = ((uint64_t (**)(uint64_t *, uint64_t))v100)[1](v5, v101);
            goto LABEL_10;
          }
          v67 = v92;
          v68 = ((uint64_t (**)(uint64_t *, uint64_t))v100)[12](v5, v101);
          v69 = *v5;
          Review.id.getter(&v105, v68);
          v70 = static AnyHashable.== infix(_:_:)(&v105, v108);
          swift_release(v69);
          swift_release(v65);
          sub_10007E32C((uint64_t)&v105);
          v11 = v57;
          (*(void (**)(char *, uint64_t))(v102 + 8))(v55, v57);
          if ((v70 & 1) != 0)
          {
            v76 = swift_bridgeObjectRelease(v83);
            (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v98, v81, v76);
            sub_10007E32C((uint64_t)v108);
            v77 = sub_10007B804(&qword_10082C2F8);
            v78 = v85;
            v79 = v85 + *(int *)(v77 + 48);
            (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v85, v99, v90);
            (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v79, v82, v91);
            return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v78, 0, 1, v77);
          }
          v9 = v82;
          (*(void (**)(char *, uint64_t))(v67 + 8))(v82, v91);
          v42 = v99;
          result = (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v99, v90);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v92 + 8))(v9, v91);
          (*(void (**)(char *, uint64_t))(v89 + 8))(v58, v90);
          result = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v55, v57);
          v42 = v58;
          v11 = v57;
        }
        v13 = v55;
LABEL_10:
        v14 = v88;
        v43 = v103;
        v41 = v87;
      }
    }
  }
  (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v33, v81, v35);
  sub_10007E32C((uint64_t)v108);
LABEL_23:
  v71 = v85;
  v72 = sub_10007B804(&qword_10082C2F8);
  v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56);
  v74 = v71;
  return v73(v74, 1, 1, v72);
}

uint64_t sub_1000C2AEC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  Class isa;
  _QWORD v23[2];

  v2 = v1;
  v23[0] = a1;
  v3 = sub_10007B804((uint64_t *)&unk_10083A0A0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10007B804((uint64_t *)&unk_10084DA50);
  __chkstk_darwin(v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10007B804(&qword_10082C300);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.mutableState.getter(v12);
  WritableStateLens.init(_:)(v9, &_s14descr100770C89C5StateVN);
  v15 = sub_1000C4220();
  WritableStateLens<A>.updateValue(_:)(sub_1000C3DA0, 0, v10, v15);
  ItemLayoutContext.item.getter(v16);
  v17 = type metadata accessor for ReviewsDiffablePagePresenter(0);
  v18 = sub_100005C94(&qword_10082C2C0, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  ReloadableItemPagePresenter.reloadItem(_:)(v6, v17, v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v19 = objc_msgSend(v2, "collectionView", v23[0]);
  if (v19)
  {
    v20 = v19;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v20, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 1, 0);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

void sub_1000C2CF4(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1000C1FE4(a3);

}

uint64_t sub_1000C2D34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = sub_10007B804(&qword_10082C2E8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v6, v2) != enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:)
    || (ReviewsDiffablePagePresenter.isUpdatingSortOption.getter() & 1) == 0)
  {
    sub_1005F5A2C(a1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_1000C2E10(void *a1, double a2, double a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void **v12;
  uint64_t v13;
  double (*v14)(uint64_t, uint64_t);
  void *v15;
  void (*v16)(int);
  uint64_t v17;
  objc_super v18;

  v18.receiver = v3;
  v18.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v18, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v16 = (void (*)(int))static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
  v17 = 0;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_1005ABDA4;
  v15 = &unk_100758988;
  v7 = _Block_copy(&v12);
  v8 = swift_allocObject(&unk_1007589C0, 24, 7);
  *(_QWORD *)(v8 + 16) = v3;
  v16 = sub_1000C4218;
  v17 = v8;
  v12 = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_1005ABDA4;
  v15 = &unk_1007589D8;
  v9 = _Block_copy(&v12);
  v10 = v17;
  v11 = v3;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v7, v9, swift_release(v10).n128_f64[0]);
  _Block_release(v9);
  _Block_release(v7);
}

void sub_1000C2F3C(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "collectionView");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "reloadData");

  }
  else
  {
    __break(1u);
  }
}

void sub_1000C2F88(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_1000C2E10(a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

unint64_t sub_1000C2FF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  unint64_t result;

  v3 = *(_QWORD *)(v1 + qword_10088BE00);
  v4 = type metadata accessor for PageGridCache(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = swift_retain(v3);
  v6 = PageGridCache.init()(v5);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v8 = PageGridCache.init()(v7);
  a1[3] = (uint64_t)&type metadata for ReviewsPageGridProvider;
  result = sub_1000C41B0();
  a1[4] = result;
  *a1 = v6;
  a1[1] = v8;
  a1[2] = v3;
  return result;
}

uint64_t sub_1000C3094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t result;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[40];
  _QWORD v26[5];
  __int128 v27;
  __int128 v28;
  _QWORD v29[4];
  _QWORD v30[4];

  ObjectType = swift_getObjectType();
  v28 = xmmword_100661E10;
  v4 = sub_100005C94(&qword_10082C2B8, type metadata accessor for ReviewsDiffablePageViewController, (uint64_t)&unk_1006744F0);
  v5 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter(ObjectType, v4);
  v29[3] = swift_getObjectType();
  v29[0] = v5;
  v6 = ShelfBasedCollectionViewController.collectionElementsObserver.getter(ObjectType, v4);
  v30[3] = swift_getObjectType();
  v30[0] = v6;
  sub_100061B84((uint64_t)v29, (uint64_t)v26);
  sub_100061B84((uint64_t)v26, (uint64_t)v25);
  v7 = sub_10007B804((uint64_t *)&unk_10083A100);
  v8 = sub_10007B804(&qword_10082A030);
  if ((swift_dynamicCast(&v27, v25, v7, v8, 6) & 1) == 0)
    v27 = 0uLL;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v26);
  if ((_QWORD)v27)
  {
    v23 = v27;
    v9 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v9 = sub_10002778C(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = sub_10002778C((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
    v9[2] = v11 + 1;
    *(_OWORD *)&v9[2 * v11 + 4] = v23;
  }
  else
  {
    v9 = _swiftEmptyArrayStorage;
  }
  sub_100061B84((uint64_t)v30, (uint64_t)v26);
  sub_100061B84((uint64_t)v26, (uint64_t)v25);
  v12 = sub_10007B804((uint64_t *)&unk_10083A100);
  v13 = sub_10007B804(&qword_10082A030);
  if ((swift_dynamicCast(&v27, v25, v12, v13, 6) & 1) == 0)
    v27 = 0uLL;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v26);
  if ((_QWORD)v27)
  {
    v24 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_10002778C(0, v9[2] + 1, 1, v9);
    v15 = v9[2];
    v14 = v9[3];
    v16 = v24;
    if (v15 >= v14 >> 1)
    {
      v22 = sub_10002778C((_QWORD *)(v14 > 1), v15 + 1, 1, v9);
      v16 = v24;
      v9 = v22;
    }
    v9[2] = v15 + 1;
    *(_OWORD *)&v9[2 * v15 + 4] = v16;
  }
  swift_arrayDestroy(v29, v28, (char *)&type metadata for Any + 8);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v26, ObjectType, v4);
  v17 = *(_QWORD *)(v1 + qword_10088BE50);
  v18 = type metadata accessor for GenericPageLayoutSectionProvider(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  sub_100022500((uint64_t)v26, (uint64_t)v25);
  v19 = swift_retain(v17);
  v20 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)(v25, v9, v17, 0, v19);
  result = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v26);
  a1[3] = v18;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = v20;
  return result;
}

uint64_t sub_1000C33B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + qword_10088BE00);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph);
  v3 = type metadata accessor for ReviewsPageShelfSupplementaryProvider();
  v4 = swift_allocObject(v3, 48, 7);
  v5 = swift_weakInit(v4 + 40, 0);
  swift_weakAssign(v5, v1);
  v6 = sub_100005C94(&qword_10082C2C8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  *(_QWORD *)(v4 + 32) = 0;
  swift_unknownObjectWeakInit(v4 + 24, 0);
  *(_QWORD *)(v4 + 32) = v6;
  swift_unknownObjectWeakAssign(v7, v1);
  *(_QWORD *)(v4 + 16) = v2;
  sub_100005C94(&qword_10082C2D8, (uint64_t (*)(uint64_t))type metadata accessor for ReviewsPageShelfSupplementaryProvider, (uint64_t)&unk_1006719A0);
  swift_retain(v2);
  return v4;
}

uint64_t sub_1000C34A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::OpaquePointer v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1005F3DF8();
  v4 = type metadata accessor for CompoundCollectionElementsObserver(0);
  if (swift_dynamicCastClass(v3, v4))
  {
    v5 = CompoundCollectionElementsObserver.removingChildren(where:)(sub_1000C3700, 0);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    swift_unknownObjectRelease(v3);
    swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    v5 = CompoundCollectionElementsObserver.init(children:)(_swiftEmptyArrayStorage);
  }
  v6 = sub_10007B804(&qword_10083A110);
  v7._rawValue = (void *)swift_allocObject(v6, 64, 7);
  *((_OWORD *)v7._rawValue + 1) = xmmword_100661E10;
  v8 = sub_100005C94(&qword_10082C2B8, type metadata accessor for ReviewsDiffablePageViewController, (uint64_t)&unk_1006744F0);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter(v21, ObjectType, v8);
  v9 = *(_QWORD *)(v1 + qword_10088BE00);
  v10 = *(_QWORD *)(v1 + qword_10088BE50);
  v11 = sub_100005C94(&qword_10082C2C0, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v12 = sub_100005C94(&qword_10082C2C8, (uint64_t (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter, (uint64_t)&protocol conformance descriptor for DiffablePagePresenter<A>);
  v13 = type metadata accessor for ProductReviewSelectionHandlerCollectionElementsObserver(0);
  v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  swift_unknownObjectWeakInit(v14 + qword_10082E850, 0);
  *(_QWORD *)(v14 + qword_10082E860) = 0;
  swift_unknownObjectWeakAssign(v15, v1);
  sub_100022500((uint64_t)v21, v14 + qword_10082E858);
  swift_retain(v9);
  v16 = swift_retain(v10);
  v17 = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)(v9, v11, v12, v10, v16);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v21);
  *((_QWORD *)v7._rawValue + 4) = v17;
  *((_QWORD *)v7._rawValue + 5) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  v18 = *(_QWORD *)(v1 + qword_10082BD48);
  v19 = sub_100005C94(&qword_10082C2D0, (uint64_t (*)(uint64_t))type metadata accessor for ProductReviewFlowPreviewingCollectionElementsObserver, (uint64_t)&unk_100689618);
  *((_QWORD *)v7._rawValue + 6) = v18;
  *((_QWORD *)v7._rawValue + 7) = v19;
  swift_retain(v18);
  CompoundCollectionElementsObserver.addChildren(_:)(v7);
  swift_bridgeObjectRelease(v7._rawValue);
  return v5;
}

BOOL sub_1000C3700(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SelectionHandlerCollectionElementsObserver(0);
  return swift_dynamicCastClass(a1, v2) != 0;
}

void sub_1000C3738()
{
  char *v0;
  char *v1;
  id v2;
  __n128 v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v4 = (void *)UITraitCollection.modifyingTraits(_:)(sub_1000C41A8, v3);

  v5 = objc_msgSend(v1, "view");
  if (v5)
  {
    v6 = v5;
    if (qword_100829060 != -1)
      swift_once(&qword_100829060, sub_10058C4B0);
    v7 = objc_msgSend((id)qword_100890338, "resolvedColorWithTraitCollection:", v4);
    objc_msgSend(v6, "setBackgroundColor:", v7);

    *(_BYTE *)(*(_QWORD *)&v1[qword_10082BD48] + 16) = 1;
  }
  else
  {
    __break(1u);
  }
}

void sub_1000C3848(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  if (a2)
  {
    v7 = a2;
    v3 = objc_msgSend(v7, "traitCollection");
    v4 = objc_msgSend(v3, "userInterfaceLevel");

    v5 = *(_QWORD *)(a1 + 24);
    v6 = *(_QWORD *)(a1 + 32);
    sub_100063B70(a1, v5);
    UIMutableTraits.userInterfaceLevel.setter(v4, v5, v6);

  }
}

void sub_1000C38DC()
{
  char *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v2, "setBackgroundColor:", v3);

    *(_BYTE *)(*(_QWORD *)&v0[qword_10082BD48] + 16) = 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_1000C3970(char *a1@<X8>)
{
  char *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  __n128 v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t KeyPath;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __n128 v34;
  void (*v35)(char *, uint64_t, __n128);
  uint64_t v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, __n128);
  char *v39;
  uint64_t (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[32];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for Shelf.ContentType(0);
  v52 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v51 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v50 = (char *)&v39 - v8;
  v9 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v47 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  __chkstk_darwin(v9);
  v46 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10007B804(&qword_10083A0B0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ShelfLayoutContext(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v49 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (id *)&v1[qword_100839F20];
  v18 = swift_beginAccess(v17, v57, 0, 0);
  if (*v17)
  {
    v19 = *v17;
    v20 = objc_msgSend(v2, "collectionView");
    if (!v20)
    {
LABEL_21:
      __break(1u);
      return;
    }
    v21 = v20;
    v22 = dispatch thunk of UICollectionViewDiffableDataSource.numberOfSections(in:)();

    if (v22 < 0)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v22)
    {
      v39 = a1;
      v43 = enum case for Shelf.ContentType.productReview(_:);
      v23 = sub_100005C94(&qword_10082C2B8, type metadata accessor for ReviewsDiffablePageViewController, (uint64_t)&unk_1006744F0);
      v24 = 0;
      v41 = v23;
      v42 = ObjectType;
      v44 = v15;
      v45 = v14;
      while (v22 != v24)
      {
        ShelfBasedCollectionViewController.shelfLayoutContext(for:)(v24, ObjectType, v23);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
        {
          sub_1000057AC((uint64_t)v13, &qword_10083A0B0);
        }
        else
        {
          v40 = *(uint64_t (**)(char *, char *, uint64_t))(v15 + 32);
          v25 = v40(v49, v13, v14);
          v26 = v46;
          ShelfLayoutContext.shelf.getter(v25);
          KeyPath = swift_getKeyPath(&unk_100662BB0);
          v28 = v48;
          ReadOnlyLens.subscript.getter(KeyPath, v48);
          v29 = swift_release(KeyPath);
          (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v26, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v51, v43, v5);
          v30 = sub_100005C94((unint64_t *)&qword_10082C328, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
          dispatch thunk of RawRepresentable.rawValue.getter(&v55, v5, v30);
          dispatch thunk of RawRepresentable.rawValue.getter(&v53, v5, v30);
          v31 = v56;
          v32 = v54;
          if (v55 == v53 && v56 == v54)
          {
            v37 = swift_bridgeObjectRelease_n(v56, 2);
            v38 = *(void (**)(char *, uint64_t, __n128))(v52 + 8);
            v38(v51, v5, v37);
            ((void (*)(char *, uint64_t))v38)(v50, v5);
LABEL_17:
            a1 = v39;
            v14 = v45;
            v40(v39, v49, v45);
            v36 = 0;
            v15 = v44;
            goto LABEL_18;
          }
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v56, v53, v54, 0);
          swift_bridgeObjectRelease(v31);
          v34 = swift_bridgeObjectRelease(v32);
          v35 = *(void (**)(char *, uint64_t, __n128))(v52 + 8);
          v35(v51, v5, v34);
          ((void (*)(char *, uint64_t))v35)(v50, v5);
          if ((v33 & 1) != 0)
            goto LABEL_17;
          v15 = v44;
          v14 = v45;
          (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v45);
          v23 = v41;
          ObjectType = v42;
        }
        if (v22 == ++v24)
        {
          v36 = 1;
          a1 = v39;
          goto LABEL_18;
        }
      }
      __break(1u);
      goto LABEL_20;
    }
  }
  v36 = 1;
LABEL_18:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56))(a1, v36, 1, v14, v18);
}

_BYTE *sub_1000C3DA0(_BYTE *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1000C3DA8()
{
  uint64_t v0;

  return swift_release(*(_QWORD *)(v0 + qword_10082BD48));
}

uint64_t sub_1000C3DB8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + qword_10082BD48));
}

uint64_t type metadata accessor for ReviewsDiffablePageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10082BD78;
  if (!qword_10082BD78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReviewsDiffablePageViewController);
  return result;
}

uint64_t sub_1000C3E04(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_100662B98;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 1264);
}

uint64_t sub_1000C3E50()
{
  return type metadata accessor for ReviewsDiffablePageViewController(0);
}

uint64_t sub_1000C3E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  _BYTE v18[32];

  v8 = Action.title.getter();
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    v12 = Action.artwork.getter(v8);
    if (v12)
    {
      v13 = v12;
      if ((dispatch thunk of Artwork.isSystemImage.getter(v12) & 1) != 0)
      {
        v14 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v13, 0, 1);
      }
      else if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) != 0)
      {
        v14 = sub_1002D362C(v13, 0);
      }
      else
      {
        v14 = 0;
      }
      swift_release(v13);
    }
    else
    {
      v14 = 0;
    }
    sub_100008FE4(0, (unint64_t *)&qword_100844710, UIAction_ptr);
    sub_100060CCC(a4, (uint64_t)v18);
    v16 = (_QWORD *)swift_allocObject(&unk_100758948, 72, 7);
    v16[2] = a2;
    v16[3] = &protocol witness table for ReviewsDiffablePagePresenter;
    v16[4] = a1;
    sub_10003F510((uint64_t)v18, (uint64_t)(v16 + 5), (uint64_t *)&unk_10082B490);
    v15 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v10, v11, 0, 0, v14, 0, 0, 0, 0, a3, 0, sub_1000C3FF8, v16);
  }
  else
  {
    swift_release(a1);
    swift_release(a2);
    v15 = 0;
  }
  sub_1000057AC(a4, (uint64_t *)&unk_10082B490);
  return v15;
}

uint64_t sub_1000C3FF8(uint64_t a1)
{
  uint64_t *v1;

  return sub_100306950(a1, v1[2], v1[3], v1[4], (uint64_t)(v1 + 5));
}

uint64_t sub_1000C4008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  _BYTE v18[32];

  v8 = Action.title.getter(a1);
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    v12 = Action.artwork.getter(v8);
    if (v12)
    {
      v13 = v12;
      if ((dispatch thunk of Artwork.isSystemImage.getter(v12) & 1) != 0)
      {
        v14 = (id)static SystemImage.load(artwork:with:includePrivateImages:)(v13, 0, 1);
      }
      else if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) != 0)
      {
        v14 = sub_1002D362C(v13, 0);
      }
      else
      {
        v14 = 0;
      }
      swift_release(v13);
    }
    else
    {
      v14 = 0;
    }
    sub_100008FE4(0, (unint64_t *)&qword_100844710, UIAction_ptr);
    sub_100060CCC(a4, (uint64_t)v18);
    v16 = (_QWORD *)swift_allocObject(&unk_100758970, 72, 7);
    v16[2] = a2;
    v16[3] = &protocol witness table for ReviewsPagePresenter;
    v16[4] = a1;
    sub_10003F510((uint64_t)v18, (uint64_t)(v16 + 5), (uint64_t *)&unk_10082B490);
    v15 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v10, v11, 0, 0, v14, 0, 0, 0, 0, a3, 0, sub_1000C4270, v16);
  }
  else
  {
    swift_release(a1);
    swift_release(a2);
    v15 = 0;
  }
  sub_1000057AC(a4, (uint64_t *)&unk_10082B490);
  return v15;
}

void sub_1000C41A8(uint64_t a1)
{
  uint64_t v1;

  sub_1000C3848(a1, *(void **)(v1 + 16));
}

unint64_t sub_1000C41B0()
{
  unint64_t result;

  result = qword_10082C2E0;
  if (!qword_10082C2E0)
  {
    result = swift_getWitnessTable(&unk_100674D40, &type metadata for ReviewsPageGridProvider);
    atomic_store(result, (unint64_t *)&qword_10082C2E0);
  }
  return result;
}

uint64_t sub_1000C41F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000C4218(int a1)
{
  uint64_t v1;

  sub_1000C2F3C(a1, *(id *)(v1 + 16));
}

unint64_t sub_1000C4220()
{
  unint64_t result;

  result = qword_10082C308;
  if (!qword_10082C308)
  {
    result = swift_getWitnessTable(&unk_10067C308, &_s14descr100770C89C5StateVN);
    atomic_store(result, (unint64_t *)&qword_10082C308);
  }
  return result;
}

void sub_1000C4274()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *Strong;
  double v10;
  double v11;
  void (*v12)(double, double);
  uint64_t v13;
  double v14;
  double v15;

  v1 = v0;
  v2 = (void *)v0[4];
  objc_msgSend(v2, "_systemContentInset");
  v4 = v3;
  objc_msgSend(v2, "contentOffset");
  v6 = v5;
  objc_msgSend(v2, "contentInset");
  v8 = v7;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 2);
  sub_1001389E0(Strong);
  v11 = v10;

  v12 = (void (*)(double, double))v0[5];
  if (v12)
  {
    v13 = v0[6];
    v14 = fmin((v4 + v6 + v8) / (v11 - v4), 1.0);
    if (v14 < 0.0)
      v15 = 0.0;
    else
      v15 = v14;
    swift_retain(v1[6]);
    v12(v15, 0.0);
    sub_10003A350((uint64_t)v12, v13);
  }
  sub_1000C4358(v2);
}

void sub_1000C4358(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  char *v12;
  void *Strong;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  char *v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void (*v26)(id, double, double);
  uint64_t v27;
  id v28;
  double v29;
  void *v30;
  void *v31;
  id v32;
  id v33;

  v2 = v1;
  objc_msgSend(a1, "_systemContentInset");
  v5 = v4;
  objc_msgSend(a1, "contentOffset");
  v7 = v6;
  objc_msgSend(a1, "contentInset");
  v9 = v5 + v7 + v8;
  objc_msgSend(a1, "frame");
  v11 = v10;
  v12 = *(char **)(v2 + 24);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
  v14 = sub_100138BBC(Strong, v11);
  v16 = v15;

  if (v9 >= 0.0)
  {
    v17 = -v9;
    if (-v16 - *(double *)&v12[OBJC_IVAR____TtC8AppStore14UberHeaderView_reflectionOutset] > -v9)
      v17 = -v16 - *(double *)&v12[OBJC_IVAR____TtC8AppStore14UberHeaderView_reflectionOutset];
  }
  else
  {
    v16 = fabs(v9) + v16;
    v17 = 0.0;
  }
  objc_msgSend(v12, "setFrame:", 0.0, v17, v14, v16);
  v18 = v9 * 0.28;
  if (v9 * 0.28 < 0.0)
    v18 = 0.0;
  v19 = *(char **)(*(_QWORD *)&v12[OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView]
                 + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer);
  v20 = *(double *)&v19[OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_parallaxY];
  *(double *)&v19[OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_parallaxY] = v18;
  if (v18 != v20)
    objc_msgSend(v19, "setNeedsLayout");
  v21 = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
  sub_1001389E0(v21);
  v23 = v22;

  v24 = fmin(v9 / (v23 - v5), 1.0);
  if (v24 < 0.0)
    v25 = 0.0;
  else
    v25 = v24;
  v26 = *(void (**)(id, double, double))(v2 + 40);
  if (v26)
  {
    v27 = *(_QWORD *)(v2 + 48);
    v28 = objc_msgSend(*(id *)(v2 + 32), "_verticalVelocity", swift_retain(v27).n128_f64[0]);
    v26(v28, v25, v29);
    sub_10003A350((uint64_t)v26, v27);
  }
  sub_1000A1730(v25);
  v30 = (void *)swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (v30)
  {
    v31 = v30;
    v32 = objc_msgSend(v30, "navigationController");

    if (v32)
    {
      v33 = objc_msgSend(v32, "navigationBar");

      objc_msgSend(v33, "_setTitleOpacity:", v25);
    }
  }
}

CGFloat sub_1000C45E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  void *Strong;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  double v19;

  v1 = v0;
  v2 = *(void **)(v0 + 32);
  objc_msgSend(v2, "_systemContentInset");
  v4 = v3;
  objc_msgSend(v2, "contentOffset");
  v6 = v5;
  objc_msgSend(v2, "contentInset");
  v8 = v4 + v6 + v7;
  objc_msgSend(v2, "frame");
  v10 = v9;
  v11 = *(_QWORD *)(v1 + 24);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  v13 = sub_100138BBC(Strong, v10);
  v15 = v14;

  if (v8 >= 0.0)
  {
    v16 = -v8;
    if (-v15 - *(double *)(v11 + OBJC_IVAR____TtC8AppStore14UberHeaderView_reflectionOutset) > -v8)
      v16 = -v15 - *(double *)(v11 + OBJC_IVAR____TtC8AppStore14UberHeaderView_reflectionOutset);
  }
  else
  {
    v15 = fabs(v8) + v15;
    v16 = 0.0;
  }
  v17 = 0;
  v18 = v13;
  v19 = v15;
  return CGRectGetHeight(*(CGRect *)(&v16 - 1))
       - v4
       - *(double *)(v11 + OBJC_IVAR____TtC8AppStore14UberHeaderView_contentBottomInset);
}

uint64_t sub_1000C4700()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);

  sub_10003A350(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for UberScrollObserver()
{
  return objc_opt_self(_TtC8AppStore18UberScrollObserver);
}

uint64_t sub_1000C4760(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  return ScrollObserver.willEndDragging(in:with:targetContentOffset:)(a1, a2, *v2);
}

void sub_1000C4768(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100094EE8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  sub_10007B804(&qword_10082D8E0);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_1000C48D0(uint64_t a1)
{
  return sub_1000C5114(a1, &type metadata accessor for Artwork, (unint64_t *)&unk_10082C440, &qword_10082C438, (uint64_t *)sub_10046C8AC);
}

void sub_1000C48F4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_100095034(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for VerticalFlowLayout.Child(0, v8);
  if (v10 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v2;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v2);
  v23 = v21 + v2;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

uint64_t sub_1000C4A5C(uint64_t a1)
{
  return sub_1000C4D8C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C600C);
}

uint64_t sub_1000C4A68(uint64_t a1)
{
  return sub_1000C4D8C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C6220);
}

uint64_t sub_1000C4A74(uint64_t a1)
{
  return sub_1000C4D8C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C6434);
}

void sub_1000C4A80(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_100095618(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

void sub_1000C4BD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100095830(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  sub_10007B804((uint64_t *)&unk_10082C460);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_1000C4D38(uint64_t a1)
{
  return sub_1000C4D8C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C6648);
}

uint64_t sub_1000C4D44(uint64_t a1)
{
  return sub_1000C4D8C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C685C);
}

uint64_t sub_1000C4D50(uint64_t a1)
{
  return sub_1000C5114(a1, &type metadata accessor for ArtworkLoaderConfig, &qword_10082C458, &qword_10082C450, (uint64_t *)sub_10046C9A8);
}

uint64_t sub_1000C4D74(uint64_t a1)
{
  return sub_1000C4D8C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C6C84);
}

uint64_t sub_1000C4D80(uint64_t a1)
{
  return sub_1000C4D8C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C6E98);
}

uint64_t sub_1000C4D8C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

void sub_1000C4F48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100096058(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  sub_10007B804((uint64_t *)&unk_10082C590);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_1000C50A8(uint64_t a1)
{
  return sub_1000C4D8C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C70AC);
}

uint64_t sub_1000C50B4(uint64_t a1)
{
  return sub_1000C5114(a1, (unint64_t *)type metadata accessor for DebugSetting, &qword_10082C4A0, &qword_10082C498, (uint64_t *)sub_10046C8AC);
}

uint64_t sub_1000C50D8(uint64_t a1)
{
  return sub_1000C4D8C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C78F0);
}

uint64_t sub_1000C50E4(uint64_t a1)
{
  return sub_1000C4D8C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C7AF4);
}

uint64_t sub_1000C50F0(uint64_t a1)
{
  return sub_1000C5114(a1, (unint64_t *)type metadata accessor for DebugSection, &qword_10082C4F0, &qword_10082C4E8, (uint64_t *)sub_10046C8AC);
}

uint64_t sub_1000C5114(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_1000C5E04(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

void sub_1000C5324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  SEL *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  SEL *v45;
  __n128 v46;
  void *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t inited;
  char *v54;
  id v55;
  id v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t j;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t i;
  id v71;
  void *v72;
  uint64_t v73;
  id v74;
  id v75;
  SEL *v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  id v85;
  NSString v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  id v91;
  id v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106[56];
  char v107[56];
  _QWORD v108[4];

  v3 = (char *)v2;
  v101 = a2;
  v4 = sub_10007B804((uint64_t *)&unk_10082C3F0);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Shelf.PresentationHints(0, v5);
  v104 = *(_QWORD *)(v8 - 8);
  v105 = v8;
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for ComponentLayoutOptions(0);
  v102 = *(_QWORD *)(v11 - 8);
  v103 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10007B804((uint64_t *)&unk_10084DA50);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Ratings(0, v16);
  v20 = sub_100005C94(&qword_10082C400, (uint64_t (*)(uint64_t))&type metadata accessor for Ratings, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  ItemLayoutContext.typedModel<A>(as:)(v108, v19, v19, v20);
  v21 = v108[0];
  if (v108[0])
  {
    v22 = swift_retain(v108[0]);
    ItemLayoutContext.mutableState.getter(v22);
    v23 = type metadata accessor for ObjectGraph(0);
    v24 = swift_dynamicCastClassUnconditional(v101, v23, 0, 0, 0);
    ItemLayoutContext.componentLayoutOptions.getter(v24);
    KeyPath = swift_getKeyPath(&unk_100662D18);
    ItemLayoutContext.subscript.getter(v10);
    swift_release(KeyPath);
    v26 = sub_1000D2308();
    sub_1000C7EA0(v21, (uint64_t)v18, (int)v13, (uint64_t)v10, v26, v2);
    v27 = swift_unknownObjectRelease(v26);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v104 + 8))(v10, v105, v27);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v13, v103);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    swift_release(v21);
    v28 = swift_getKeyPath(&unk_100662D48);
    ItemLayoutContext.subscript.getter(v7);
    swift_release(v28);
    v29 = type metadata accessor for PageGrid(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v7, 0, 1, v29);
    v30 = v2 + OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_pageGrid;
    swift_beginAccess(&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_pageGrid], v108, 33, 0);
    sub_1000C8048((uint64_t)v7, v30);
    swift_endAccess(v108);
    v31 = (SEL *)&off_1007F9000;
    objc_msgSend(v3, "setNeedsLayout");
    sub_1000C8090((uint64_t)v7);
    v105 = v21;
    v33 = Ratings.status.getter(v32);
    if (!v34)
    {
      v50 = OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_hasRatings;
      v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_hasRatings] = 1;
      v52 = sub_10007B804((uint64_t *)&unk_10082B4A0);
      inited = swift_initStackObject(v52, v107);
      *(_OWORD *)(inited + 16) = xmmword_100662C90;
      v13 = *(char **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_currentRatingLabel];
      *(_QWORD *)(inited + 32) = v13;
      v36 = *(void **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_outOfRatingLabel];
      *(_QWORD *)(inited + 40) = v36;
      v47 = *(void **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_ratingCountLabel];
      *(_QWORD *)(inited + 48) = v47;
      v108[0] = inited;
      specialized Array._endMutation()(inited);
      v39 = (void *)v108[0];
      v48 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_starViews];
      if (!((unint64_t)v48 >> 62))
      {
        v54 = v13;
        v55 = v36;
        v56 = v47;
        v57 = swift_bridgeObjectRetain(v48);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v57);
        sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
LABEL_11:
        v108[0] = v39;
        sub_1000C4D8C(v48, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C685C);
        v58 = v108[0];
        v59 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_progressBarViews];
        if ((unint64_t)v59 >> 62)
        {
          if (v59 < 0)
            v95 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_progressBarViews];
          else
            v95 = v59 & 0xFFFFFFFFFFFFFF8;
          v96 = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
          v97 = swift_bridgeObjectRetain(v59);
          v98 = _bridgeCocoaArray<A>(_:)(v95, v96, v97);
          swift_bridgeObjectRelease(v59);
          v59 = v98;
        }
        else
        {
          v60 = swift_bridgeObjectRetain(*(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_progressBarViews]);
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v60);
          sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
        }
        v108[0] = v58;
        sub_1000C4D8C(v59, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C685C);
        v61 = v108[0];
        if ((v3[v50] & 1) != 0)
        {
          v62 = 0;
        }
        else
        {
          v68 = type metadata accessor for ProductNoRatingsView();
          v62 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v68)), "init");
        }
        sub_1004C6F34(v62);
        if ((unint64_t)v61 >> 62)
        {
          if (v61 < 0)
            v99 = v61;
          else
            v99 = v61 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v61);
          v69 = _CocoaArrayWrapper.endIndex.getter(v99);
          if (v69)
            goto LABEL_27;
        }
        else
        {
          v69 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v61);
          if (v69)
          {
LABEL_27:
            if (v69 < 1)
            {
              __break(1u);
              return;
            }
            for (i = 0; i != v69; ++i)
            {
              if ((v61 & 0xC000000000000001) != 0)
                v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v61);
              else
                v71 = *(id *)(v61 + 8 * i + 32);
              v72 = v71;
              objc_msgSend(v71, "setHidden:", (v3[v50] & 1) == 0);

            }
          }
        }
        v87 = swift_bridgeObjectRelease_n(v61, 2).n128_u64[0];
LABEL_63:
        objc_msgSend(v3, v31[260], *(double *)&v87);
        swift_release(v105);
        return;
      }
LABEL_50:
      if (v48 < 0)
        v88 = v48;
      else
        v88 = v48 & 0xFFFFFFFFFFFFFF8;
      v89 = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
      v90 = v13;
      v91 = v36;
      v92 = v47;
      v93 = swift_bridgeObjectRetain(v48);
      v94 = _bridgeCocoaArray<A>(_:)(v88, v89, v93);
      swift_bridgeObjectRelease(v48);
      v48 = v94;
      goto LABEL_11;
    }
    v35 = v34;
    v104 = v33;
    v36 = (void *)OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_hasRatings;
    v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_hasRatings] = 0;
    v37 = sub_10007B804((uint64_t *)&unk_10082B4A0);
    v38 = swift_initStackObject(v37, v106);
    *(_OWORD *)(v38 + 16) = xmmword_100662C90;
    v39 = *(void **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_currentRatingLabel];
    *(_QWORD *)(v38 + 32) = v39;
    v40 = *(void **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_outOfRatingLabel];
    *(_QWORD *)(v38 + 40) = v40;
    v31 = *(SEL **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_ratingCountLabel];
    *(_QWORD *)(v38 + 48) = v31;
    v108[0] = v38;
    specialized Array._endMutation()(v38);
    v41 = v108[0];
    v42 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_starViews];
    if ((unint64_t)v42 >> 62)
    {
      if (v42 < 0)
        v13 = *(char **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_starViews];
      else
        v13 = (char *)(v42 & 0xFFFFFFFFFFFFFF8);
      v73 = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
      v74 = v39;
      v75 = v40;
      v76 = v31;
      v77 = swift_bridgeObjectRetain(v42);
      v78 = _bridgeCocoaArray<A>(_:)(v13, v73, v77);
      swift_bridgeObjectRelease(v42);
      v42 = v78;
    }
    else
    {
      v43 = v39;
      v44 = v40;
      v45 = v31;
      v46 = swift_bridgeObjectRetain(v42);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v46);
      sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
    }
    v108[0] = v41;
    sub_1000C4D8C(v42, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C685C);
    v47 = (void *)v108[0];
    v48 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_progressBarViews];
    if ((unint64_t)v48 >> 62)
    {
      if (v48 < 0)
        v79 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_progressBarViews];
      else
        v79 = v48 & 0xFFFFFFFFFFFFFF8;
      v80 = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
      v81 = swift_bridgeObjectRetain(v48);
      v82 = _bridgeCocoaArray<A>(_:)(v79, v80, v81);
      swift_bridgeObjectRelease(v48);
      v48 = v82;
    }
    else
    {
      v49 = swift_bridgeObjectRetain(*(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_progressBarViews]);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v49);
      sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
    }
    v108[0] = v47;
    sub_1000C4D8C(v48, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1000C685C);
    v50 = v108[0];
    if ((*((_BYTE *)v36 + (_QWORD)v3) & 1) != 0)
    {
      v51 = 0;
    }
    else
    {
      v63 = type metadata accessor for ProductNoRatingsView();
      v51 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v63)), "init");
    }
    sub_1004C6F34(v51);
    if ((unint64_t)v50 >> 62)
    {
      if (v50 < 0)
        v83 = v50;
      else
        v83 = v50 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v50);
      v64 = _CocoaArrayWrapper.endIndex.getter(v83);
      if (v64)
        goto LABEL_18;
    }
    else
    {
      v64 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v50);
      if (v64)
      {
LABEL_18:
        if (v64 >= 1)
        {
          for (j = 0; j != v64; ++j)
          {
            if ((v50 & 0xC000000000000001) != 0)
              v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v50);
            else
              v66 = *(id *)(v50 + 8 * j + 32);
            v67 = v66;
            objc_msgSend(v66, "setHidden:", (*((_BYTE *)v36 + (_QWORD)v3) & 1) == 0);

          }
          goto LABEL_45;
        }
        __break(1u);
        goto LABEL_50;
      }
    }
LABEL_45:
    swift_bridgeObjectRelease_n(v50, 2);
    v84 = &v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_noRatingsView];
    swift_beginAccess(&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_noRatingsView], v108, 0, 0);
    if (*(_QWORD *)v84)
    {
      v85 = *(id *)(*(_QWORD *)v84 + OBJC_IVAR____TtC8AppStore20ProductNoRatingsView_statusLabel);
      v86 = String._bridgeToObjectiveC()();
      objc_msgSend(v85, "setText:", v86, swift_bridgeObjectRelease(v35).n128_f64[0]);

    }
    else
    {
      v87 = swift_bridgeObjectRelease(v35).n128_u64[0];
    }
    v31 = (SEL *)&off_1007F9000;
    goto LABEL_63;
  }
}

uint64_t sub_1000C5C3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000C8118(v3, a1);
}

uint64_t sub_1000C5C90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000C80D0(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_1000C5CEC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_1000C5D34()
{
  void *v0;

  return objc_msgSend(v0, "prepareForReuse");
}

uint64_t sub_1000C5D48(uint64_t a1)
{
  uint64_t v1;

  return static ConfigurableCell.reuseIdentifier(in:)(a1, v1);
}

uint64_t sub_1000C5D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_100005C94(&qword_10082C430, type metadata accessor for ProductRatingsLegacyCollectionViewCell, (uint64_t)&unk_100662CD0);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1000C5DBC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C5E04(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for Artwork, (unint64_t *)&unk_10082C440, &qword_10082C438, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10046C8AC);
}

uint64_t sub_1000C5DE0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C5E04(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for HeroCarouselScrollView.PageViewTracker, &qword_10082C4E0, &qword_10082C4D8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10046C8AC);
}

uint64_t sub_1000C5E04(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD, __n128);
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t result;
  _BYTE v29[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v27 = a3;
    else
      v27 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_1000C8160(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_10007B804(a6);
          v23 = (void (*)(_BYTE *, _QWORD, __n128))a7(v29, i, a3, v22, v20);
          v25 = *v24;
          v26 = swift_retain(*v24);
          v23(v29, 0, v26);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C600C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C528, &qword_10082C518);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C518);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, &qword_10082C520, NSCollectionLayoutSupplementaryItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C6220(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C540, &qword_10082C538);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C538);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, &qword_10082C530, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C6434(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160((unint64_t *)&unk_10082C5C0, &qword_10082C5B0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C5B0);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, &qword_10082C5B8, NSCollectionLayoutGroup_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C6648(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C478, &qword_10082C470);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C470);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C685C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160((unint64_t *)&unk_10082C410, &qword_10082C408);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C408);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C6A70(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C4D0, &qword_10082C4C8);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C4C8);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, (unint64_t *)&qword_10082B480, UIViewController_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C6C84(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C5A8, &qword_10082C5A0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C5A0);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, (unint64_t *)&qword_1008303D0, UICollectionViewLayoutAttributes_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C6E98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C508, &qword_10082C500);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C500);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, &qword_10082C4F8, AMSNotificationSettingsItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C70AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C588, &qword_10082C578);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C578);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, (unint64_t *)&qword_10082C580, UIKeyCommand_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C72C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C570, &qword_10082C568);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C568);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, (unint64_t *)&qword_10082C560, NSValue_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C74D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160((unint64_t *)&unk_10082C4B8, &qword_10082C4B0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C4B0);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, &qword_10082C4A8, CALayer_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C76E8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C490, &qword_10082C488);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C488);
          v13 = sub_10046C9FC(v19, i, a3);
          v15 = *v14;
          v16 = swift_unknownObjectRetain(*v14);
          ((void (*)(uint64_t **, _QWORD, __n128))v13)(v19, 0, v16);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10007B804(&qword_10082C480);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C78F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C510, (uint64_t *)&unk_10082C460);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804((uint64_t *)&unk_10082C460);
          v13 = sub_10046C954(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for CGColor(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000C7AF4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000C8160(&qword_10082C558, &qword_10082C548);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10007B804(&qword_10082C548);
          v13 = sub_10046C900(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008FE4(0, (unint64_t *)&qword_10082C550, UILabel_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

double *sub_1000C7D0C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  double **v4;
  unint64_t v5;
  uint64_t v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  double *result;
  int64_t v13;
  uint64_t v14;
  double *v15;
  char *v16;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = *v4;
  v8 = *((_QWORD *)*v4 + 2);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = (double *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)result || v9 > *((_QWORD *)v7 + 3) >> 1)
    goto LABEL_8;
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9)
        v13 = v8 + v6;
      else
        v13 = v8;
      result = sub_100096458(result, v13, 1, v7);
      v7 = result;
      if (v5 != a3)
        goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_12:
  v14 = *((_QWORD *)v7 + 2);
  if ((*((_QWORD *)v7 + 3) >> 1) - v14 < v6)
    goto LABEL_25;
  if (v6 < 0)
  {
LABEL_27:
    result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_28;
  }
  v15 = &v7[2 * v14 + 4];
  v16 = (char *)(a2 + 16 * a3);
  if (v16 >= (char *)&v15[2 * v6] || v15 >= (double *)&v16[16 * v6])
  {
    result = (double *)memcpy(v15, v16, 16 * v6);
    if (!v6)
    {
LABEL_22:
      *v4 = v7;
      return result;
    }
    v18 = *((_QWORD *)v7 + 2);
    v19 = __OFADD__(v18, v6);
    v20 = v18 + v6;
    if (!v19)
    {
      *((_QWORD *)v7 + 2) = v20;
      goto LABEL_22;
    }
    goto LABEL_26;
  }
  result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1000C7EA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[40];
  _QWORD v28[5];

  v24 = a5;
  v25 = a6;
  v23 = a4;
  v9 = sub_10007B804((uint64_t *)&unk_10084DA50);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804(&qword_10082F7D0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Ratings(0, v15);
  v28[3] = v18;
  v28[4] = sub_100005C94(&qword_10082C400, (uint64_t (*)(uint64_t))&type metadata accessor for Ratings, (uint64_t)&protocol conformance descriptor for ProductRatingsAndReviewsComponent);
  v28[0] = a1;
  sub_100022500((uint64_t)v28, (uint64_t)v27);
  swift_retain(a1);
  v19 = sub_10007B804((uint64_t *)&unk_10082C420);
  if (swift_dynamicCast(&v26, v27, v19, v18, 6))
  {
    v20 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
    v21 = type metadata accessor for NilState(0);
    WritableStateLens.init(_:)(v12, v21);
    sub_1004CE5E8(v20, (int)v17, a3, v23, v24);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    swift_release(v20);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v28);
}

uint64_t sub_1000C8048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_10082C3F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C8090(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10007B804((uint64_t *)&unk_10082C3F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C80D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804(&qword_10082D9A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C8118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804(&qword_10082D9A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C8160(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100072594(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000C81A0(uint64_t a1, NSString a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13)
{
  char *v13;
  char *v14;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  void *v38;
  void *v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  char v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[2];
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[24];
  __int128 v103;
  __int128 v104;

  v14 = v13;
  v99 = a7;
  v100 = a8;
  v98 = a6;
  v84[1] = a3;
  v18 = type metadata accessor for AdamId(0);
  v19 = __chkstk_darwin(v18);
  v84[0] = (char *)v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for OfferLabelStyle(0, v19);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v85 = (char *)v84 - v23;
  v24 = sub_10007B804((uint64_t *)&unk_10082E210);
  __chkstk_darwin(v24);
  v96 = (char *)v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v92 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v93 = (char *)v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10007B804((uint64_t *)&unk_10082A450);
  v94 = *(_QWORD *)(v28 - 8);
  v95 = v28;
  __chkstk_darwin(v28);
  v30 = (char *)v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_10007B804((uint64_t *)&unk_10082B1A0);
  __chkstk_darwin(v31);
  v33 = (char *)v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_10007B804((uint64_t *)&unk_100840780);
  *(_QWORD *)&v35 = __chkstk_darwin(v34).n128_u64[0];
  v37 = (char *)v84 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(void **)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_titleLabel];
  v101 = a5;
  if (a2)
    a2 = String._bridgeToObjectiveC()();
  v97 = a13;
  v89 = a12;
  v90 = a10;
  v91 = a9;
  objc_msgSend(v38, "setText:", a2, v35);

  v39 = *(void **)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_descriptionLabel];
  if (a4)
    a4 = String._bridgeToObjectiveC()();
  objc_msgSend(v39, "setText:", a4);

  if ((a11 & 1) != 0)
  {
    v41 = enum case for Wordmark.arcade(_:);
    v42 = type metadata accessor for Wordmark(0, v40);
    v43 = *(_QWORD *)(v42 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v37, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
    sub_1000520B8();
    v44 = (void *)static UIColor.primaryText.getter();
    sub_100269F7C((uint64_t)v37, (uint64_t)v44);

  }
  else
  {
    v45 = type metadata accessor for Wordmark(0, v40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v37, 1, 1, v45);
    sub_100269F7C((uint64_t)v37, 0);
  }
  sub_1000057AC((uint64_t)v37, (uint64_t *)&unk_100840780);
  v46 = sub_10007B804((uint64_t *)&unk_100833930);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v33, 1, 1, v46);
  v47 = v92;
  v48 = v93;
  (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v93, enum case for OfferButtonSubtitlePosition.below(_:), v26);
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
  v50 = v96;
  v49(v96, 1, 1, v26);
  v51 = sub_100005C94((unint64_t *)&qword_10082E240, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
  AccessibilityConditional.init(value:axValue:)(v48, v50, v26, v51);
  v52 = v101;
  v53 = v97;
  sub_100556868(v101, v89, 0, (uint64_t)v33, (uint64_t)v30, v97, 0, 0);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v30, v95);
  sub_1000057AC((uint64_t)v33, (uint64_t *)&unk_10082B1A0);
  sub_1000C8AC8(v90, v98, v99, v100, v91, 0, v14, v53);
  v54 = *(_QWORD *)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerDisplayProperties];
  *(_QWORD *)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerDisplayProperties] = v52;
  swift_retain(v52);
  swift_release(v54);
  if (!v52)
    goto LABEL_11;
  swift_retain(v52);
  v55 = v85;
  OfferDisplayProperties.offerLabelStyle.getter(v56);
  v57 = v87;
  v58 = v86;
  v59 = v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v87 + 104))(v86, enum case for OfferLabelStyle.none(_:), v88);
  v60 = sub_100005C94((unint64_t *)&unk_100842F90, (uint64_t (*)(uint64_t))&type metadata accessor for OfferLabelStyle, (uint64_t)&protocol conformance descriptor for OfferLabelStyle);
  v61 = dispatch thunk of static Equatable.== infix(_:_:)(v55, v58, v59, v60);
  v62 = *(void (**)(char *, uint64_t))(v57 + 8);
  v62(v58, v59);
  v62(v55, v59);
  if ((v61 & 1) != 0)
  {
    swift_release(v52);
LABEL_11:
    v103 = 0u;
    v104 = 0u;
    v63 = (uint64_t)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerLabelPresenter];
    swift_beginAccess(&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerLabelPresenter], v102, 33, 0);
    sub_10006393C((uint64_t)&v103, v63);
    swift_endAccess(v102);
    sub_1000C8938(0, 0);
    objc_msgSend(v14, "setNeedsLayout");
    return;
  }
  v64 = swift_retain(v52);
  v65 = v84[0];
  OfferDisplayProperties.adamId.getter(v64);
  v66 = v53 + qword_10088FDA0;
  v67 = *(_QWORD *)(v53 + qword_10088FDA0);
  if (!v67)
  {
    v81 = sub_10007B804(&qword_100831060);
    v82 = v81;
LABEL_18:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v81, v82);
    __break(1u);
    return;
  }
  v68 = type metadata accessor for ASKBagContract(0);
  v69 = *(_QWORD *)(v53 + qword_10088FDB0);
  if (!v69)
  {
    v83 = v68;
    swift_unknownObjectRetain(v67);
    v81 = v83;
    v82 = v83;
    goto LABEL_18;
  }
  v70 = *(_QWORD *)(v66 + 8);
  swift_unknownObjectRetain(v67);
  v71 = swift_retain(v69);
  v72 = ASKBagContract.arePreordersCancellable.getter(v71);
  v73 = swift_release(v69);
  v74 = type metadata accessor for OfferLabelPresenter(0, v73);
  swift_allocObject(v74, *(unsigned int *)(v74 + 48), *(unsigned __int16 *)(v74 + 52));
  v75 = OfferLabelPresenter.init(offerDisplayProperties:adamId:appStateController:arePreordersCancellable:)(v52, v65, v67, v70, v72 & 1);
  *((_QWORD *)&v104 + 1) = v74;
  *(_QWORD *)&v103 = v75;
  v76 = (uint64_t)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerLabelPresenter];
  swift_beginAccess(&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerLabelPresenter], v102, 33, 0);
  swift_retain(v75);
  sub_10006393C((uint64_t)&v103, v76);
  swift_endAccess(v102);
  v77 = (void *)objc_opt_self(UIView);
  v78 = objc_msgSend(v77, "areAnimationsEnabled");
  objc_msgSend(v77, "setAnimationsEnabled:", 0);
  v79 = sub_100005C94(&qword_10082C5D0, type metadata accessor for AppShowcaseLockupView, (uint64_t)&unk_100662D78);
  swift_unknownObjectRetain(v14);
  OfferLabelPresenter.view.setter(v80, v79);
  objc_msgSend(v14, "layoutIfNeeded");
  objc_msgSend(v77, "setAnimationsEnabled:", v78);
  swift_release(v52);
  swift_release(v75);
}

id sub_1000C8938(uint64_t a1, NSString a2)
{
  char *v2;
  void *v5;
  id result;
  void *v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  char v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v5 = *(void **)&v2[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerLabel];
  result = objc_msgSend(v5, "text");
  if (!result)
  {
    if (!a2)
      return result;
    goto LABEL_10;
  }
  v7 = result;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v10 = v9;

  if (!a2)
  {
    swift_bridgeObjectRelease(v10);
    goto LABEL_12;
  }
  if (v8 == a1 && v10 == a2)
    return (id)swift_bridgeObjectRelease(v10);
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, a1, a2, 0);
  result = (id)swift_bridgeObjectRelease(v10);
  if ((v12 & 1) == 0)
  {
LABEL_10:
    a2 = String._bridgeToObjectiveC()();
LABEL_12:
    objc_msgSend(v5, "setText:", a2);

    v13 = objc_msgSend(v5, "text");
    if (v13)
    {
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    v18 = static String.isNilOrEmpty(_:)(v15, v17);
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v5, "setHidden:", v18 & 1);
    return objc_msgSend(v2, "setNeedsLayout");
  }
  return result;
}

void sub_1000C8AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char *a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];

  v16 = type metadata accessor for AdamId(0);
  v18 = __chkstk_darwin(v16);
  v20 = &v32[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a3 && a5)
  {
    v31 = a4;
    (*(void (**)(_BYTE *, uint64_t, __n128))(v17 + 16))(v20, a1, v18);
    v21 = *(_QWORD *)(a8 + qword_10088FDA0);
    if (v21)
    {
      v22 = *(_QWORD *)(a8 + qword_10088FDA0 + 8);
      v23 = type metadata accessor for CrossLinkPresenter(0);
      swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRetain(a5);
      swift_unknownObjectRetain(v21);
      v24 = a7;
      v25 = CrossLinkPresenter.init(adamId:title:subtitle:includeBetaApps:view:appStateController:)((uint64_t)v20, a2, a3, v31, a5, a6 & 1, (uint64_t)a7, (uint64_t)&off_100765F20, v21, v22);
      v26 = &v24[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_crossLinkPresenter];
      swift_beginAccess(&v24[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_crossLinkPresenter], v32, 1, 0);
      v27 = *(_QWORD *)v26;
      *(_QWORD *)v26 = v25;
      swift_release(v27);
    }
    else
    {
      v30 = sub_10007B804(&qword_100831060);
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRetain(a5);
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v30, v30);
      __break(1u);
    }
  }
  else
  {
    v28 = &a7[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_crossLinkPresenter];
    swift_beginAccess(&a7[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_crossLinkPresenter], v32, 1, 0);
    v29 = *(_QWORD *)v28;
    *(_QWORD *)v28 = 0;
    swift_release(v29);
    sub_10026E43C(0, 0);
  }
}

void sub_1000C8CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char *a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];

  v16 = type metadata accessor for AdamId(0);
  v18 = __chkstk_darwin(v16);
  v20 = &v32[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a3 && a5)
  {
    v31 = a4;
    (*(void (**)(_BYTE *, uint64_t, __n128))(v17 + 16))(v20, a1, v18);
    v21 = *(_QWORD *)(a8 + qword_10088FDA0);
    if (v21)
    {
      v22 = *(_QWORD *)(a8 + qword_10088FDA0 + 8);
      v23 = type metadata accessor for CrossLinkPresenter(0);
      swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRetain(a5);
      swift_unknownObjectRetain(v21);
      v24 = a7;
      v25 = CrossLinkPresenter.init(adamId:title:subtitle:includeBetaApps:view:appStateController:)((uint64_t)v20, a2, a3, v31, a5, a6 & 1, (uint64_t)a7, (uint64_t)&off_10075D430, v21, v22);
      v26 = &v24[OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_crossLinkPresenter];
      swift_beginAccess(&v24[OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_crossLinkPresenter], v32, 1, 0);
      v27 = *(_QWORD *)v26;
      *(_QWORD *)v26 = v25;
      swift_release(v27);
    }
    else
    {
      v30 = sub_10007B804(&qword_100831060);
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRetain(a5);
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v30, v30);
      __break(1u);
    }
  }
  else
  {
    v28 = &a7[OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_crossLinkPresenter];
    swift_beginAccess(&a7[OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_crossLinkPresenter], v32, 1, 0);
    v29 = *(_QWORD *)v28;
    *(_QWORD *)v28 = 0;
    swift_release(v29);
    sub_100162938(0, 0);
  }
}

void sub_1000C8E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, _QWORD);
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[32];
  uint64_t v26;
  _QWORD *v27;

  v1 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  v23 = *(_QWORD *)(v1 - 8);
  v24 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for GuidedSearchTokenCollection(0);
  v5 = sub_1000C9088();
  v6 = dispatch thunk of Collection.count.getter(v4, v5);
  v7 = _swiftEmptyArrayStorage;
  if (!v6)
  {
LABEL_7:
    sub_10047E8F4((uint64_t)v7);
    swift_bridgeObjectRelease(v7);
    return;
  }
  v8 = v6;
  v27 = _swiftEmptyArrayStorage;
  sub_1000FE8A4(0, v6 & ~(v6 >> 63), 0);
  v7 = v27;
  dispatch thunk of Collection.startIndex.getter(&v26, v4, v5);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v22[1] = v0;
    do
    {
      v9 = (uint64_t (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v25, &v26, v4, v5);
      v11 = *v10;
      swift_retain(*v10);
      v12 = v9(v25, 0);
      v13 = GuidedSearchToken.leadingIcon.getter(v12);
      v14 = GuidedSearchToken.displayName.getter(v13);
      v16 = v15;
      v17 = GuidedSearchToken.isSelected.getter();
      swift_release(v11);
      v18 = v24;
      v19 = (uint64_t *)&v3[*(int *)(v24 + 20)];
      *v19 = v14;
      v19[1] = v16;
      v3[*(int *)(v18 + 24)] = v17 & 1;
      v27 = v7;
      v21 = v7[2];
      v20 = v7[3];
      if (v21 >= v20 >> 1)
      {
        sub_1000FE8A4(v20 > 1, v21 + 1, 1);
        v7 = v27;
      }
      v7[2] = v21 + 1;
      sub_1000C90D0((uint64_t)v3, (uint64_t)v7+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v21);
      dispatch thunk of Collection.formIndex(after:)(&v26, v4, v5);
      --v8;
    }
    while (v8);
    goto LABEL_7;
  }
  __break(1u);
}

unint64_t sub_1000C9088()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083F440;
  if (!qword_10083F440)
  {
    v1 = type metadata accessor for GuidedSearchTokenCollection(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for GuidedSearchTokenCollection, v1);
    atomic_store(result, (unint64_t *)&qword_10083F440);
  }
  return result;
}

uint64_t sub_1000C90D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GuidedSearchTokenPaletteView.Token(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C9114(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  _QWORD v26[2];
  _OWORD v27[2];
  uint64_t v28;

  v7 = v6;
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v26[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v7 + 56) = a1;
  *(_QWORD *)(v7 + 64) = a2;
  *(_BYTE *)(v7 + 72) = a3;
  *(_QWORD *)(v7 + 80) = a4;
  *(_QWORD *)(v7 + 88) = a5;
  *(_BYTE *)(v7 + 96) = a6;
  v19 = UUID.init()(v16);
  v20 = UUID.uuidString.getter(v19);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  v26[0] = v20;
  v26[1] = v22;
  AnyHashable.init<A>(_:)(v27, v26, &type metadata for String, &protocol witness table for String);
  v23 = v27[1];
  *(_OWORD *)(v7 + 16) = v27[0];
  *(_OWORD *)(v7 + 32) = v23;
  *(_QWORD *)(v7 + 48) = v28;
  return v7;
}

uint64_t sub_1000C9218(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  if (*(_QWORD *)v1 != *a1)
    goto LABEL_10;
  if ((static AnyHashable.== infix(_:_:)(a1 + 2, v1 + 16) & 1) == 0)
    goto LABEL_10;
  v3 = type metadata accessor for BoolUserDefaultsDebugSetting();
  v4 = swift_dynamicCastClass(a1, v3);
  if (!v4)
    goto LABEL_10;
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 56);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = v6 == v8 && v7 == v9;
  if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v8, v9, 0), v12 = 0, (v11 & 1) != 0))
  {
    if (*(unsigned __int8 *)(v5 + 72) != *(unsigned __int8 *)(v1 + 72))
    {
LABEL_10:
      v12 = 0;
      return v12 & 1;
    }
    v14 = *(_QWORD *)(v5 + 80);
    v15 = *(_QWORD *)(v5 + 88);
    v16 = *(_QWORD *)(v1 + 80);
    v17 = *(_QWORD *)(v1 + 88);
    if (v14 == v16 && v15 == v17
      || (v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v16, v17, 0), v12 = 0, (v18 & 1) != 0))
    {
      v12 = *(_BYTE *)(v5 + 96) ^ *(_BYTE *)(v1 + 96) ^ 1;
    }
  }
  return v12 & 1;
}

void sub_1000C92E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  AnyHashable.hash(into:)();
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  Hasher._combine(_:)(*(_BYTE *)(v2 + 72));
  v6 = *(_QWORD *)(v2 + 80);
  v7 = *(_QWORD *)(v2 + 88);
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  Hasher._combine(_:)(*(_BYTE *)(v2 + 96));
}

uint64_t sub_1000C9378()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
}

uint64_t sub_1000C9394()
{
  uint64_t v0;

  sub_10007E32C(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  return swift_deallocClassInstance(v0, 97, 7);
}

uint64_t type metadata accessor for BoolUserDefaultsDebugSetting()
{
  return objc_opt_self(_TtC8AppStore28BoolUserDefaultsDebugSetting);
}

char *sub_1000C93E8(uint64_t a1, void *a2)
{
  _BYTE *v2;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  objc_super v23;

  v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isTransitioning] = 0;
  v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_sizeCategory] = 7;
  v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_originalSizeCategory] = 7;
  v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_disableAnimatedFontChange] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_numberOfLines] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel] = 0;
  v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isAnimatingSizeCategoryChange] = 0;
  v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_labelRequiresUnanimatedLayout] = 0;
  v5 = &v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_applyPendingFontChange];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition];
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeOutDelay] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInDelay] = 0;
  v7 = type metadata accessor for DynamicTypeLabel(0);
  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v7));
  v9 = v2;
  v10 = objc_msgSend(v8, "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label] = v10;
  objc_msgSend(v10, "setContentMode:", 3);
  *(_QWORD *)&v9[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fontForSizeCategory] = a1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_defaultFont] = a2;
  v11 = a2;

  v23.receiver = v9;
  v23.super_class = (Class)type metadata accessor for TodayTransitioningLabelView();
  v12 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label;
  v14 = *(void **)&v12[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label];
  v15 = v12;
  v16 = objc_msgSend(v14, "layer");
  v17 = objc_msgSend(v15, "traitCollection");
  UITraitCollection.prefersRightToLeftLayouts.getter();

  objc_msgSend(v16, "setAnchorPoint:", 0.0, 0.0);
  objc_msgSend(v15, "addSubview:", *(_QWORD *)&v12[v13]);
  v18 = sub_10007B804(&qword_10082E950);
  v19 = swift_allocObject(v18, 48, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100661A30;
  *(_QWORD *)(v19 + 32) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v19 + 40) = &protocol witness table for UITraitLayoutDirection;
  v20 = v15;
  v21 = UIView.registerForTraitChanges(_:action:)(v19, "layoutDirectionDidChange");
  swift_unknownObjectRelease(v21);
  swift_bridgeObjectRelease(v19);

  return v20;
}

void sub_1000C9670(char *a1)
{
  void *v1;
  id v3;

  v1 = *(void **)&a1[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel];
  if (v1)
  {
    v3 = v1;
    objc_msgSend(a1, "bounds");
    objc_msgSend(v3, "setFrame:");

  }
}

void sub_1000C96E0(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  char v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  id v24;

  v3 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_sizeCategory);
  if (v3 == 7)
    return;
  v4 = v2;
  if (a1 == 7)
    goto LABEL_4;
  switch(v3)
  {
    case 6:
      if (a1 == 6)
        goto LABEL_27;
      goto LABEL_4;
    case 5:
      if (a1 == 5)
        goto LABEL_27;
      goto LABEL_4;
    case 4:
      if (a1 == 4)
        goto LABEL_27;
LABEL_4:
      v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fontForSizeCategory);
      if (*(_QWORD *)(v7 + 16) && (v8 = sub_100347444(v3), (v9 & 1) != 0))
        v10 = (id *)(*(_QWORD *)(v7 + 56) + 8 * v8);
      else
        v10 = (id *)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_defaultFont);
      v11 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
      v24 = *v10;
      v12 = objc_msgSend(v11, "font");

      v13 = objc_msgSend(v11, "font");
      if (v13)
      {
        sub_10005FA28();
        v14 = v24;
        v15 = v13;
        LOBYTE(v13) = static NSObject.== infix(_:_:)(v15, v14);

      }
      objc_msgSend((id)objc_opt_self(UIView), "inheritedAnimationDuration");
      v17 = 0;
      if (a1 == 6)
      {
        v18 = v24;
      }
      else
      {
        v18 = v24;
        if (a2 != 6 && v12 && (v13 & 1) == 0)
          v17 = (v16 > 0.0) & (*(_BYTE *)(v4
                                        + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_disableAnimatedFontChange) ^ 1);
      }
      sub_100054B9C(v18, v17);

      return;
  }
  if ((a1 - 7) > 0xFCu || v3 != a1)
    goto LABEL_4;
LABEL_27:
  v19 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
  v20 = objc_msgSend(v19, "font");

  if (!v20)
  {
    v21 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fontForSizeCategory);
    if (*(_QWORD *)(v21 + 16))
    {
      v22 = sub_100347444(v3);
      if ((v23 & 1) != 0)
        objc_msgSend(v19, "setFont:", *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22));
    }
  }
}

void sub_1000C997C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  id v24;
  void **aBlock;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char v31[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isAnimatingSizeCategoryChange) = 1;
    v6 = (void *)objc_opt_self(UIView);
    objc_msgSend(v6, "inheritedAnimationDuration");
    v8 = v7 * 0.8;
    v9 = *(double *)&v5[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeOutDelay];
    v10 = swift_allocObject(&unk_100758C28, 24, 7);
    *(_QWORD *)(v10 + 16) = v5;
    v29 = sub_1000CA858;
    v30 = v10;
    aBlock = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10000AB18;
    v28 = &unk_100758C40;
    v11 = _Block_copy(&aBlock);
    v12 = v30;
    v13 = v5;
    swift_release(v12);
    objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 131684, v11, 0, v8, v9);
    _Block_release(v11);
    objc_msgSend(v6, "inheritedAnimationDuration");
    v15 = v14;
    v16 = swift_allocObject(&unk_100758C78, 24, 7);
    *(_QWORD *)(v16 + 16) = v13;
    v29 = sub_1000CA878;
    v30 = v16;
    aBlock = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_10000AB18;
    v28 = &unk_100758C90;
    v17 = _Block_copy(&aBlock);
    v18 = v30;
    v19 = v13;
    swift_release(v18);
    v20 = swift_allocObject(&unk_100758CC8, 32, 7);
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = a2;
    v29 = sub_1000CA8CC;
    v30 = v20;
    aBlock = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_1000D75E8;
    v28 = &unk_100758CE0;
    v21 = _Block_copy(&aBlock);
    v22 = v30;
    v23 = v19;
    v24 = a2;
    swift_release(v22);
    objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 66148, v17, v21, v15, 0.0);
    _Block_release(v21);
    _Block_release(v17);
    sub_1000C9BEC();

  }
}

void sub_1000C9BEC()
{
  char *v0;
  void *v1;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double Height;
  CGFloat v20;
  CGFloat tx;
  CGFloat ty;
  void *v23;
  CGFloat v24;
  CGFloat v25;
  double v26;
  double v27;
  CGFloat v28;
  void *v29;
  CGFloat v30;
  char *v31;
  double v32;
  double v33;
  CGFloat v34;
  void *v35;
  CGFloat v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  id v42;
  CGAffineTransform v43;
  CGAffineTransform aBlock;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label];
    v42 = v1;
    objc_msgSend(v2, "bounds");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;
    objc_msgSend(v42, "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v45.origin.x = v4;
    v45.origin.y = v6;
    v45.size.width = v8;
    v45.size.height = v10;
    if (CGRectIsEmpty(v45)
      || (v46.origin.x = v12, v46.origin.y = v14, v46.size.width = v16, v46.size.height = v18, CGRectIsEmpty(v46)))
    {

    }
    else
    {
      v47.origin.x = v12;
      v47.origin.y = v14;
      v47.size.width = v16;
      v47.size.height = v18;
      Height = CGRectGetHeight(v47);
      v48.origin.x = v4;
      v48.origin.y = v6;
      v48.size.width = v8;
      v48.size.height = v10;
      v20 = Height / CGRectGetHeight(v48);
      objc_msgSend(v42, "transform");
      CGAffineTransformScale(&v43, &aBlock, 1.0 / v20, 1.0 / v20);
      v38 = *(_OWORD *)&v43.c;
      v40 = *(_OWORD *)&v43.a;
      tx = v43.tx;
      ty = v43.ty;
      v23 = (void *)objc_opt_self(UIView);
      objc_msgSend(v23, "setAnimationsEnabled:", 0);
      *(_OWORD *)&aBlock.a = v40;
      *(_OWORD *)&aBlock.c = v38;
      aBlock.tx = tx;
      aBlock.ty = ty;
      objc_msgSend(v42, "setTransform:", &aBlock);
      objc_msgSend(v23, "setAnimationsEnabled:", 1);
      objc_msgSend(v2, "transform");
      CGAffineTransformScale(&v43, &aBlock, v20, v20);
      v39 = *(_OWORD *)&v43.c;
      v41 = *(_OWORD *)&v43.a;
      v24 = v43.tx;
      v25 = v43.ty;
      objc_msgSend(v23, "inheritedAnimationDuration");
      v27 = v26;
      v28 = COERCE_DOUBLE(swift_allocObject(&unk_100758B38, 72, 7));
      *(_QWORD *)(*(_QWORD *)&v28 + 16) = v0;
      *(_OWORD *)(*(_QWORD *)&v28 + 24) = v41;
      *(_OWORD *)(*(_QWORD *)&v28 + 40) = v39;
      *(CGFloat *)(*(_QWORD *)&v28 + 56) = v24;
      *(CGFloat *)(*(_QWORD *)&v28 + 64) = v25;
      *(_QWORD *)&aBlock.tx = sub_1000CA5B4;
      aBlock.ty = v28;
      *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
      *(_QWORD *)&aBlock.b = 1107296256;
      *(_QWORD *)&aBlock.c = sub_10000AB18;
      *(_QWORD *)&aBlock.d = &unk_100758B50;
      v29 = _Block_copy(&aBlock);
      v30 = aBlock.ty;
      v31 = v0;
      swift_release(*(_QWORD *)&v30);
      objc_msgSend(v23, "animateWithDuration:delay:options:animations:completion:", 197220, v29, 0, v27, 0.0);
      _Block_release(v29);
      objc_msgSend(v23, "inheritedAnimationDuration");
      v33 = v32;
      v34 = COERCE_DOUBLE(swift_allocObject(&unk_100758B88, 24, 7));
      *(_QWORD *)(*(_QWORD *)&v34 + 16) = v31;
      *(_QWORD *)&aBlock.tx = sub_1000CA600;
      aBlock.ty = v34;
      *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
      *(_QWORD *)&aBlock.b = 1107296256;
      *(_QWORD *)&aBlock.c = sub_10000AB18;
      *(_QWORD *)&aBlock.d = &unk_100758BA0;
      v35 = _Block_copy(&aBlock);
      v36 = aBlock.ty;
      v37 = v31;
      swift_release(*(_QWORD *)&v36);
      objc_msgSend(v23, "animateWithDuration:delay:options:animations:completion:", 197220, v35, 0, v33, 0.0);

      _Block_release(v35);
    }
  }
}

void sub_1000C9F88(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  NSString v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD v12[6];

  if ((a1 & 1) != 0)
  {
    v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition + 8);
    if (v5)
    {
      v6 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
      swift_bridgeObjectRetain(*(_QWORD *)(a2
                                         + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition
                                         + 8));
      v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v5);
      objc_msgSend(v6, "setText:", v7);

    }
    v8 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
    objc_msgSend(v8, "setFont:", a3);
    objc_msgSend(v8, "setAlpha:", 1.0);
    objc_msgSend(v8, "setNumberOfLines:", *(_QWORD *)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_numberOfLines));
    v12[0] = 0x3FF0000000000000;
    v12[1] = 0;
    v12[2] = 0;
    v12[3] = 0x3FF0000000000000;
    v12[4] = 0;
    v12[5] = 0;
    objc_msgSend(v8, "setTransform:", v12);
    v9 = OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel;
    v10 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
    if (v10)
    {
      objc_msgSend(v10, "removeFromSuperview");
      v11 = *(void **)(a2 + v9);
    }
    else
    {
      v11 = 0;
    }
    *(_QWORD *)(a2 + v9) = 0;

    *(_BYTE *)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isAnimatingSizeCategoryChange) = 0;
  }
}

id sub_1000CA0CC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label), "setAlpha:", 1.0);
}

uint64_t sub_1000CA0E8(uint64_t result, uint64_t a2)
{
  if ((result & 1) != 0)
    *(_BYTE *)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_labelRequiresUnanimatedLayout) = 0;
  return result;
}

uint64_t sub_1000CA0FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  NSString v5;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  NSString v12;
  void *v13;
  NSString v14;
  id v15;
  NSString v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD *v21;

  v5 = a2;
  if (!a4)
  {
    v11 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
    if (a2)
      v12 = String._bridgeToObjectiveC()();
    else
      v12 = 0;
    objc_msgSend(v11, "setText:", v12);

    v19 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
    if (!v19)
      goto LABEL_17;
    v20 = v19;
    if (v5)
      v14 = String._bridgeToObjectiveC()();
    else
      v14 = 0;
    objc_msgSend(v19, "setText:", v14);

LABEL_16:
LABEL_17:
    v21 = (_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition);
    v18 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition + 8);
    *v21 = 0;
    v21[1] = 0;
    return swift_bridgeObjectRelease(v18);
  }
  v8 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
  if (!v8)
  {
    v13 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
    swift_bridgeObjectRetain(a4);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
    objc_msgSend(v13, "setText:", v14);
    goto LABEL_16;
  }
  v9 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
  if (a2)
  {
    swift_bridgeObjectRetain(a4);
    v10 = v8;
    v5 = String._bridgeToObjectiveC()();
  }
  else
  {
    swift_bridgeObjectRetain(a4);
    v15 = v8;
  }
  objc_msgSend(v9, "setText:", v5);

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setText:", v16);

  v17 = (_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition);
  v18 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition + 8);
  *v17 = a3;
  v17[1] = a4;

  return swift_bridgeObjectRelease(v18);
}

uint64_t sub_1000CA2C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  unsigned __int8 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
  if (v2)
  {
    objc_msgSend(v2, "removeFromSuperview");
    v3 = *(void **)(v0 + v1);
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)(v0 + v1) = 0;

  v4 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_sizeCategory);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_sizeCategory) = 7;
  sub_1000C96E0(v4, 7);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_originalSizeCategory) = 7;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isTransitioning) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_labelRequiresUnanimatedLayout) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isAnimatingSizeCategoryChange) = 0;
  v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_applyPendingFontChange);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_applyPendingFontChange);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_applyPendingFontChange + 8);
  *v5 = 0;
  v5[1] = 0;
  return sub_10003A350(v6, v7);
}

id sub_1000CA370()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  char v5;
  double v6;

  v1 = (void *)objc_opt_self(UIView);
  objc_msgSend(v1, "setAnimationsEnabled:", 0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel];
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v0, "traitCollection");
    v5 = UITraitCollection.prefersRightToLeftLayouts.getter();

    v6 = 0.0;
    if ((v5 & 1) != 0)
      v6 = 1.0;
    objc_msgSend(v3, "setAnchorPoint:", v6, 0.0);

  }
  return objc_msgSend(v1, "setAnimationsEnabled:", 1);
}

id sub_1000CA48C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TodayTransitioningLabelView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000CA53C()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(__n128);
  uint64_t v3;
  __n128 v4;
  uint64_t result;

  v1 = *v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_applyPendingFontChange;
  v2 = *(void (**)(__n128))v1;
  if (*(_QWORD *)v1)
  {
    v3 = *(_QWORD *)(v1 + 8);
    v4 = swift_retain(v3);
    v2(v4);
    return sub_10003A350((uint64_t)v2, v3);
  }
  return result;
}

uint64_t sub_1000CA590()
{
  uint64_t v0;

  return swift_deallocObject(v0, 72, 7);
}

id sub_1000CA5B4()
{
  uint64_t v0;
  void *v1;
  __int128 v2;
  _OWORD v4[3];

  v1 = *(void **)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
  v2 = *(_OWORD *)(v0 + 40);
  v4[0] = *(_OWORD *)(v0 + 24);
  v4[1] = v2;
  v4[2] = *(_OWORD *)(v0 + 56);
  return objc_msgSend(v1, "setTransform:", v4);
}

id sub_1000CA600()
{
  uint64_t v0;
  id result;
  _QWORD v2[6];

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
  if (result)
  {
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return objc_msgSend(result, "setTransform:", v2);
  }
  return result;
}

id sub_1000CA64C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v2 = type metadata accessor for DirectionalTextAlignment(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeLabel(0);
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "init");
  objc_msgSend(v6, "setNumberOfLines:", objc_msgSend(a1, "numberOfLines"));
  v7 = v6;
  objc_msgSend(v7, "setLineBreakMode:", objc_msgSend(a1, "lineBreakMode"));

  v8 = v7;
  objc_msgSend(v8, "setLineBreakStrategy:", objc_msgSend(a1, "lineBreakStrategy"));

  v9 = v8;
  objc_msgSend(v9, "setUserInteractionEnabled:", objc_msgSend(a1, "isUserInteractionEnabled"));

  dispatch thunk of DynamicTypeLabel.directionalTextAlignment.getter();
  v10 = dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter(v4);
  v11 = dispatch thunk of DynamicTypeLabel.contentSizeCategoryMapping.getter(v10);
  dispatch thunk of DynamicTypeLabel.contentSizeCategoryMapping.setter(v11);
  v12 = objc_msgSend(a1, "text");
  objc_msgSend(v9, "setText:", v12);

  return v9;
}

uint64_t sub_1000CA7DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000CA800()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000CA82C()
{
  uint64_t v0;

  sub_1000C997C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000CA834()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000CA858()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label), "setAlpha:", 0.0);
}

id sub_1000CA878()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
  if (result)
    return objc_msgSend(result, "setAlpha:", 1.0);
  return result;
}

uint64_t sub_1000CA8A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000CA8CC(char a1)
{
  uint64_t v1;

  sub_1000C9F88(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1000CA8D4()
{
  uint64_t v0;

  sub_1000C9670(*(char **)(v0 + 16));
}

uint64_t sub_1000CA8DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1000CA8EC()
{
  uint64_t v0;
  char *v1;
  void *v2;

  v1 = *(char **)(v0 + 16);
  v2 = *(void **)&v1[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label];
  objc_msgSend(v1, "bounds");
  return objc_msgSend(v2, "setFrame:");
}

uint64_t sub_1000CA92C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000CA93C()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;

  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isTransitioning] = 0;
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_sizeCategory] = 7;
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_originalSizeCategory] = 7;
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_disableAnimatedFontChange] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_numberOfLines] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel] = 0;
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isAnimatingSizeCategoryChange] = 0;
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_labelRequiresUnanimatedLayout] = 0;
  v1 = &v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_applyPendingFontChange];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeOutDelay] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInDelay] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/TodayCardTransitionLabelView.swift", 43, 2, 48, 0);
  __break(1u);
}

double sub_1000CAA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Locale.storefront.getter(v2);
  v6 = Locale.baseWritingDirection.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_100889FF0 = 10329570;
  *(_QWORD *)algn_100889FF8 = 0xA300000000000000;
  qword_10088A000 = 10395106;
  unk_10088A008 = 0xA300000000000000;
  qword_10088A010 = v6;
  unk_10088A018 = xmmword_100662E30;
  unk_10088A028 = xmmword_100662E40;
  result = 5.0;
  *(_OWORD *)&qword_10088A038 = xmmword_100662E50;
  return result;
}

double sub_1000CAB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Locale.storefront.getter(v2);
  v6 = Locale.baseWritingDirection.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_10088A048 = 10395106;
  unk_10088A050 = 0xA300000000000000;
  qword_10088A058 = 10395106;
  unk_10088A060 = 0xA300000000000000;
  qword_10088A068 = v6;
  unk_10088A070 = xmmword_100662E30;
  unk_10088A080 = xmmword_100662E40;
  result = 5.0;
  *(_OWORD *)&qword_10088A090 = xmmword_100662E50;
  return result;
}

double sub_1000CABE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v13;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Locale.storefront.getter(v2);
  v6 = Locale.baseWritingDirection.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_10088A0A0 = 10387682;
  *(_QWORD *)algn_10088A0A8 = 0xA300000000000000;
  qword_10088A0B0 = 10256610;
  unk_10088A0B8 = 0xA300000000000000;
  qword_10088A0C0 = v6;
  unk_10088A0C8 = xmmword_100662E60;
  __asm { FMOV            V0.2D, #8.0 }
  unk_10088A0D8 = _Q0;
  result = 7.0;
  *(_OWORD *)&qword_10088A0E8 = xmmword_100662E70;
  return result;
}

double sub_1000CACA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Locale.storefront.getter(v2);
  v6 = Locale.baseWritingDirection.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_10088A0F8 = 43970;
  unk_10088A100 = 0xA200000000000000;
  qword_10088A108 = 48066;
  unk_10088A110 = 0xA200000000000000;
  qword_10088A118 = v6;
  *(_OWORD *)algn_10088A120 = xmmword_100662E80;
  *(_OWORD *)&algn_10088A120[16] = xmmword_100662E90;
  result = 7.0;
  *(_OWORD *)&qword_10088A140 = xmmword_100662E70;
  return result;
}

double sub_1000CAD60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = static Locale.storefront.getter(v2);
  v6 = Locale.baseWritingDirection.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_10088A150 = 9208035;
  *(_QWORD *)algn_10088A158 = 0xA300000000000000;
  qword_10088A160 = 9273571;
  unk_10088A168 = 0xA300000000000000;
  qword_10088A170 = v6;
  unk_10088A178 = xmmword_100662EA0;
  unk_10088A188 = xmmword_100662EB0;
  result = 9.0;
  *(_OWORD *)&qword_10088A198 = xmmword_100662EC0;
  return result;
}

id sub_1000CAE24(uint64_t a1)
{
  return sub_1000CAE4C(45.0, a1, &qword_10082C758);
}

id sub_1000CAE3C(uint64_t a1)
{
  return sub_1000CAE4C(23.0, a1, &qword_10082C760);
}

id sub_1000CAE4C(double a1, uint64_t a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", a1, UIFontWeightBold);
  *a3 = result;
  return result;
}

id sub_1000CAEA8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.78, 0.78, 0.8, 1.0);
  qword_10082C768 = (uint64_t)result;
  return result;
}

id sub_1000CAFA8()
{
  return sub_1000CCD7C((uint64_t (*)(_QWORD))type metadata accessor for QuotesLabel);
}

uint64_t type metadata accessor for QuotesLabel()
{
  return objc_opt_self(_TtC8AppStoreP33_29EE9522A5DC5D80B942784E0C6042DE11QuotesLabel);
}

uint64_t sub_1000CAFD4(uint64_t a1)
{
  return sub_1000CB01C(a1, qword_10088A1A8, &qword_100828240, (uint64_t)qword_10088E0F0, (uint64_t)sub_1003A75E4);
}

uint64_t sub_1000CAFF8(uint64_t a1)
{
  return sub_1000CB01C(a1, qword_10088A1C0, &qword_100828248, (uint64_t)qword_10088E108, (uint64_t)sub_1003A75FC);
}

uint64_t sub_1000CB01C(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = type metadata accessor for FontUseCase(0);
  sub_100033BAC(v9, a2);
  v10 = sub_10007AF70(v9, (uint64_t)a2);
  if (*a3 != -1)
    swift_once(a3, a5);
  v11 = sub_10007AF70(v9, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v10, v11, v9);
}

uint64_t sub_1000CB0B4(uint64_t a1)
{
  return sub_1000CB0D4(25.0, a1, qword_10088A1D8);
}

uint64_t sub_1000CB0C4(uint64_t a1)
{
  return sub_1000CB0D4(9.0, a1, qword_10088A1F0);
}

uint64_t sub_1000CB0D4(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v15[5];

  v5 = type metadata accessor for FontSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  sub_100033BAC(v9, a3);
  sub_10007AF70(v9, (uint64_t)a3);
  if (qword_100826B60 != -1)
    swift_once(&qword_100826B60, sub_1000CAFD4);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_10007AF70(v10, (uint64_t)qword_10088A1A8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v11, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v15[3] = v5;
  v15[4] = &protocol witness table for FontSource;
  v12 = sub_100024638(v15);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  StaticDimension.init(_:scaledLike:)(v15, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000CB228(uint64_t a1)
{
  return sub_1000CB248(20.0, a1, qword_10088A208);
}

uint64_t sub_1000CB238(uint64_t a1)
{
  return sub_1000CB248(4.0, a1, qword_10088A220);
}

uint64_t sub_1000CB248(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v15[5];

  v5 = type metadata accessor for FontSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  sub_100033BAC(v9, a3);
  sub_10007AF70(v9, (uint64_t)a3);
  if (qword_100826B68 != -1)
    swift_once(&qword_100826B68, sub_1000CAFF8);
  v10 = type metadata accessor for FontUseCase(0);
  v11 = sub_10007AF70(v10, (uint64_t)qword_10088A1C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v11, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FontSource.useCase(_:), v5);
  v15[3] = v5;
  v15[4] = &protocol witness table for FontSource;
  v12 = sub_100024638(v15);
  (*(void (**)(_QWORD *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  StaticDimension.init(_:scaledLike:)(v15, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000CB39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  UIFontTextStyle *v3;
  uint64_t v4;
  _QWORD *v5;
  NSString *v6;
  _QWORD v9[5];

  v0 = type metadata accessor for FontSource(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (UIFontTextStyle *)((char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for StaticDimension(0);
  sub_100033BAC(v4, qword_10088A238);
  sub_10007AF70(v4, (uint64_t)qword_10088A238);
  *v3 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for FontSource.textStyle(_:), v0);
  v9[3] = v0;
  v9[4] = &protocol witness table for FontSource;
  v5 = sub_100024638(v9);
  (*(void (**)(_QWORD *, UIFontTextStyle *, uint64_t))(v1 + 16))(v5, v3, v0);
  v6 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v9, 24.0);
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1000CB4A4(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  __n128 v6;
  char Attributed;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  NSString *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString *v23;
  void *v24;
  id v25;
  unint64_t v26;
  id v27;
  NSString v28;
  Class isa;
  id v30;
  __int128 v31;
  __int128 v32;
  id v33;
  id v34;
  UIImage *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  double v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  char v48[112];
  _OWORD v49[5];
  uint64_t v50;

  v3 = v2;
  type metadata accessor for LanguageAwareString(0);
  v6 = swift_bridgeObjectRetain(a2);
  Attributed = static LanguageAwareString.alwaysGenerateAttributedString.getter(v6);
  v8 = static LanguageAwareString.keepStatisticsOnLanguageComponents.getter();
  v9 = (void *)LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:keepStatisticsOnLanguageComponents:)(a1, a2, 0, Attributed & 1, v8 & 1);
  if (v9)
  {
    v10 = dispatch thunk of LanguageAwareString.thresholdBaseWritingDirection.getter();
    v11 = v10;
    v12 = &v2[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs];
    if (v10 != *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs + 32])
    {
      *((_QWORD *)v12 + 4) = v10;
      v46 = *(id *)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_leadingQuote];
      v47 = a1;
      v13 = 8;
      if (v10 == 1)
        v13 = 24;
      v14 = *(_QWORD *)&v12[v13];
      swift_bridgeObjectRetain(v14);
      v15 = sub_10007B804(&qword_100830EA0);
      inited = swift_initStackObject(v15, v48);
      *(_OWORD *)(inited + 16) = xmmword_100661E10;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      v17 = qword_100826B48;
      v18 = NSFontAttributeName;
      if (v17 != -1)
        swift_once(&qword_100826B48, sub_1000CAE24);
      v19 = (void *)qword_10082C758;
      v20 = sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
      *(_QWORD *)(inited + 40) = v19;
      *(_QWORD *)(inited + 64) = v20;
      *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
      v21 = qword_100826B58;
      v22 = v19;
      v23 = NSForegroundColorAttributeName;
      if (v21 != -1)
        swift_once(&qword_100826B58, sub_1000CAEA8);
      v24 = (void *)qword_10082C768;
      *(_QWORD *)(inited + 104) = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      *(_QWORD *)(inited + 80) = v24;
      v25 = v24;
      v26 = sub_10005FA64(inited);
      v27 = objc_allocWithZone((Class)NSAttributedString);
      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
      type metadata accessor for Key(0);
      sub_10005FA80();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v30 = objc_msgSend(v27, "initWithString:attributes:", v28, isa, swift_bridgeObjectRelease(v26).n128_f64[0]);

      objc_msgSend(v46, "setAttributedText:", v30);
      v31 = *((_OWORD *)v12 + 3);
      v49[2] = *((_OWORD *)v12 + 2);
      v49[3] = v31;
      v49[4] = *((_OWORD *)v12 + 4);
      v50 = *((_QWORD *)v12 + 10);
      v32 = *((_OWORD *)v12 + 1);
      v49[0] = *(_OWORD *)v12;
      v49[1] = v32;
      v33 = objc_allocWithZone((Class)type metadata accessor for QuotesLabel());
      sub_1000CD9D0((uint64_t)v49);
      v34 = objc_msgSend(v33, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v35 = sub_1000CD39C((uint64_t)v49);

      sub_1000CDA04((uint64_t)v49);
      v36 = *(void **)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote];
      *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote] = v35;

      a1 = v47;
    }
  }
  else
  {
    v11 = 0;
  }
  v37 = *(void **)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_quoteLabel];
  sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
  if (qword_100826B60 != -1)
    swift_once(&qword_100826B60, sub_1000CAFD4);
  v38 = type metadata accessor for FontUseCase(0);
  v39 = sub_10007AF70(v38, (uint64_t)qword_10088A1A8);
  v40 = objc_msgSend(v3, "traitCollection");
  v41 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v39, v40);

  v42 = *(void **)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote];
  v43 = *(double *)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs + 72];
  v44 = v42;
  v45 = sub_1000CD6B0(v43, a1, a2, v41, v42, v11, v9 == 0);

  objc_msgSend(v37, "setAttributedText:", v45, swift_bridgeObjectRelease(a2).n128_f64[0]);
}

void sub_1000CB8DC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  double v33;
  id v34;
  double v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v38 = a1;
  v5 = type metadata accessor for DirectionalTextAlignment(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10007B804(&qword_10082D610);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtC8AppStore9QuoteView_creditLabel;
  v14 = *(void **)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_creditLabel];
  if (!v14 || (v15 = objc_msgSend(v14, "text", v10)) == 0)
  {
    if (!a2)
      return;
LABEL_11:
    v22 = *(void **)&v3[v13];
    if (!v22)
      goto LABEL_12;
LABEL_19:
    v34 = v22;
    if (a2)
    {
      v36 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v35 = swift_bridgeObjectRelease(a2).n128_u64[0];
    }
    else
    {
      v36 = 0;
    }
    objc_msgSend(v22, "setText:", v36, v35);

    goto LABEL_23;
  }
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v19 = v18;

  if (a2)
  {
    if (v17 == v38 && v19 == a2)
    {
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v19);
      return;
    }
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v38, a2, 0);
    swift_bridgeObjectRelease(v19);
    if ((v21 & 1) != 0)
    {
      swift_bridgeObjectRelease(a2);
      return;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRelease(v19);
  v22 = *(void **)&v3[v13];
  if (v22)
    goto LABEL_19;
LABEL_12:
  if (qword_100826B68 != -1)
    swift_once(&qword_100826B68, sub_1000CAFF8);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_10007AF70(v23, (uint64_t)qword_10088A1C0);
  v25 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v12, v24, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v12, 0, 1, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DirectionalTextAlignment.none(_:), v5);
  v26 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  v27 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v12, 0, 0, 1, 0, v8, 0, 0);
  v28 = *(void **)&v3[v13];
  *(_QWORD *)&v3[v13] = v27;

  v29 = *(void **)&v3[v13];
  if (!v29
    || (v30 = (void *)objc_opt_self(UIColor),
        v31 = v29,
        v32 = objc_msgSend(v30, "systemGrayColor"),
        objc_msgSend(v31, "setTextColor:", v32),
        v31,
        v32,
        !*(_QWORD *)&v3[v13]))
  {
    swift_bridgeObjectRelease(a2);
    __break(1u);
    return;
  }
  objc_msgSend(v3, "addSubview:");
  v22 = *(void **)&v3[v13];
  if (v22)
    goto LABEL_19;
  *(_QWORD *)&v33 = swift_bridgeObjectRelease(a2).n128_u64[0];
LABEL_23:
  objc_msgSend(v3, "setNeedsLayout", v33);
}

id sub_1000CBC14()
{
  unsigned __int8 *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  void *v7;
  id v8;
  __n128 v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for CornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0[OBJC_IVAR____TtC8AppStore9QuoteView_artworkHasRoundedCorners];
  v7 = *(void **)&v0[OBJC_IVAR____TtC8AppStore9QuoteView_artworkView];
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for CornerStyle.continuous(_:), v2);
  v8 = v7;
  v9.n128_u64[0] = 0;
  if (v6)
    v9.n128_f64[0] = 8.0;
  ArtworkView.setCorner(radius:style:)(v5, v9);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return objc_msgSend(v1, "setNeedsLayout");
}

char *sub_1000CBCF4(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  id v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  objc_super *v28;
  objc_super v29;
  objc_super v30;
  objc_class *v31;
  id v32;
  double left;
  double bottom;
  double right;
  char *v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  BOOL v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t inited;
  uint64_t v52;
  id v53;
  NSString *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  NSString *v59;
  void *v60;
  id v61;
  unint64_t v62;
  id v63;
  NSString v64;
  Class isa;
  id v66;
  void *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  id v72;
  id v73;
  UIImage *v74;
  void *v75;
  _QWORD v77[2];
  uint64_t v78;
  uint64_t v79;
  objc_super v80[6];
  void *v81;
  _OWORD v82[5];
  uint64_t v83;

  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v13);
  v15 = (char *)v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore9QuoteView_creditLabel] = 0;
  v16 = &v4[OBJC_IVAR____TtC8AppStore9QuoteView_artworkAspectRatio];
  v17 = type metadata accessor for AspectRatio(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v4[OBJC_IVAR____TtC8AppStore9QuoteView_isFullWidthArtwork] = 0;
  v4[OBJC_IVAR____TtC8AppStore9QuoteView_artworkHasRoundedCorners] = 0;
  v18 = objc_allocWithZone((Class)UILabel);
  v19 = v4;
  v20 = objc_msgSend(v18, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v19[OBJC_IVAR____TtC8AppStore9QuoteView_leadingQuote] = v20;
  if (qword_100826B60 != -1)
    swift_once(&qword_100826B60, sub_1000CAFD4);
  v21 = type metadata accessor for FontUseCase(0);
  v22 = sub_10007AF70(v21, (uint64_t)qword_10088A1A8);
  v23 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v15, v22, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v15, 0, 1, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v24 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v19[OBJC_IVAR____TtC8AppStore9QuoteView_quoteLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 0, 1, 0, v12, 0, 0);
  *(_QWORD *)&v19[OBJC_IVAR____TtC8AppStore9QuoteView_artworkView] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v25._object = (void *)0x80000001006A8210;
  v25._countAndFlagsBits = 0xD000000000000010;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v27 = localizedString(_:comment:)(v25, v26);
  sub_1000CD1DC(v27._countAndFlagsBits, v27._object);
  swift_bridgeObjectRelease(v27._object);
  v28 = (objc_super *)&v19[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs];
  v29 = v80[4];
  v28[2] = v80[3];
  v28[3] = v29;
  v28[4] = v80[5];
  v28[5].receiver = v81;
  v30 = v80[2];
  *v28 = v80[1];
  v28[1] = v30;

  v31 = (objc_class *)type metadata accessor for QuoteView(0);
  v80[0].receiver = v19;
  v80[0].super_class = v31;
  v32 = -[objc_super initWithFrame:](v80, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v36 = (char *)v32;
  objc_msgSend(v36, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v37 = OBJC_IVAR____TtC8AppStore9QuoteView_artworkView;
  v38 = *(id *)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_artworkView];
  ArtworkView.roundedCorners.setter(-1);

  v39 = *(id *)&v36[v37];
  v40 = static ArtworkView.iconBorderWidth.getter(v39);
  dispatch thunk of RoundedCornerView.borderWidth.setter(v40);

  v41 = *(id *)&v36[v37];
  v42 = static ArtworkView.iconBorderColor.getter(v41);
  dispatch thunk of RoundedCornerView.borderColor.setter(v42);

  objc_msgSend(*(id *)&v36[v37], "setHidden:", 1);
  v78 = OBJC_IVAR____TtC8AppStore9QuoteView_leadingQuote;
  v43 = *(void **)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_leadingQuote];
  objc_msgSend(v43, "setClipsToBounds:", 0);
  v44 = &v36[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs];
  v45 = *(_QWORD *)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs + 32];
  v46 = v45 == 1;
  if (v45 == 1)
    v47 = v44 + 16;
  else
    v47 = &v36[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs];
  v48 = 8;
  if (v46)
    v48 = 24;
  v49 = *(_QWORD *)&v44[v48];
  v77[1] = *(_QWORD *)v47;
  swift_bridgeObjectRetain(v49);
  v50 = sub_10007B804(&qword_100830EA0);
  inited = swift_initStackObject(v50, &v79);
  *(_OWORD *)(inited + 16) = xmmword_100661E10;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v52 = qword_100826B48;
  v53 = v43;
  v54 = NSFontAttributeName;
  if (v52 != -1)
    swift_once(&qword_100826B48, sub_1000CAE24);
  v55 = (void *)qword_10082C758;
  v56 = sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v55;
  *(_QWORD *)(inited + 64) = v56;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v57 = qword_100826B58;
  v58 = v55;
  v59 = NSForegroundColorAttributeName;
  if (v57 != -1)
    swift_once(&qword_100826B58, sub_1000CAEA8);
  v60 = (void *)qword_10082C768;
  *(_QWORD *)(inited + 104) = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v60;
  v61 = v60;
  v62 = sub_10005FA64(inited);
  v63 = objc_allocWithZone((Class)NSAttributedString);
  v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49);
  type metadata accessor for Key(0);
  sub_10005FA80();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v66 = objc_msgSend(v63, "initWithString:attributes:", v64, isa, swift_bridgeObjectRelease(v62).n128_f64[0]);

  objc_msgSend(v53, "setAttributedText:", v66);
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v36[v78]);
  v67 = *(void **)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_quoteLabel];
  objc_msgSend(v67, "setTextAlignment:", 4);
  objc_msgSend(v36, "addSubview:", v67);
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v36[v37]);
  v68 = *((_OWORD *)v44 + 1);
  v82[0] = *(_OWORD *)v44;
  v82[1] = v68;
  v69 = *((_OWORD *)v44 + 2);
  v70 = *((_OWORD *)v44 + 3);
  v71 = *((_OWORD *)v44 + 4);
  v83 = *((_QWORD *)v44 + 10);
  v82[3] = v70;
  v82[4] = v71;
  v82[2] = v69;
  v72 = objc_allocWithZone((Class)type metadata accessor for QuotesLabel());
  sub_1000CD9D0((uint64_t)v82);
  v73 = objc_msgSend(v72, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v74 = sub_1000CD39C((uint64_t)v82);

  sub_1000CDA04((uint64_t)v82);
  v75 = *(void **)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote];
  *(_QWORD *)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote] = v74;

  return v36;
}

void sub_1000CC484()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  void *v14;
  double MinY;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  double v23;
  double v24;
  double v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  double v30;
  CGFloat Width;
  char *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  unint64_t v41;
  char *v45;
  CGFloat v46;
  double v47;
  double v48;
  double v49;
  double MaxY;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  id v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  double v63;
  void *v64;
  uint64_t v65;
  id v66;
  double v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  double MinX;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  id v83;
  double v84;
  double v85;
  double v86;
  void (*v87)(char *, uint64_t);
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  id v91;
  objc_class *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  id v99;
  char *v100;
  unint64_t v101;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  objc_class *v119;
  char *v120;
  void (*v121)(char *, uint64_t);
  uint64_t (*v122)(char *, uint64_t, uint64_t);
  char *v123;
  void (*v124)(char *, uint64_t);
  char v125[24];
  objc_super v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;

  v1 = v0;
  v2 = type metadata accessor for AspectRatio(0);
  v116 = *(_QWORD *)(v2 - 8);
  v117 = v2;
  __chkstk_darwin(v2);
  v114 = (char *)&v113 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10007B804((uint64_t *)&unk_10082E1A0);
  __chkstk_darwin(v4);
  v115 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FloatingPointRoundingRule(0);
  v124 = *(void (**)(char *, uint64_t))(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticDimension(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (objc_class *)type metadata accessor for QuoteView(0);
  v126.receiver = v0;
  v126.super_class = v13;
  objc_msgSendSuper2(&v126, "layoutSubviews");
  v14 = *(void **)&v0[OBJC_IVAR____TtC8AppStore9QuoteView_leadingQuote];
  objc_msgSend(v14, "sizeToFit");
  *(_QWORD *)&v127.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v13).n128_u64[0];
  MinY = CGRectGetMinY(v127);
  if (qword_100826B70 != -1)
    swift_once(&qword_100826B70, sub_1000CB0B4);
  v16 = sub_10007AF70(v9, (uint64_t)qword_10088A1D8);
  v122 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v17 = v122(v12, v16, v9);
  v18 = *(void **)&v0[OBJC_IVAR____TtC8AppStore9QuoteView_quoteLabel];
  static Dimensions.defaultRoundingRule.getter(v17);
  v19 = v12;
  v20 = v9;
  v21 = v8;
  v22 = objc_msgSend(v18, "traitCollection");
  v23 = StaticDimension.value(compatibleWith:rounded:)(v22, v21);

  objc_msgSend(v18, "firstBaselineFromTop");
  v25 = v23 - v24;
  v26 = (void (*)(char *, uint64_t))*((_QWORD *)v124 + 1);
  v120 = v21;
  v27 = v21;
  v28 = v20;
  v118 = v6;
  v124 = v26;
  v26(v27, v6);
  v29 = *(void (**)(char *, uint64_t))(v10 + 8);
  v123 = v19;
  v121 = v29;
  v29(v19, v20);
  v30 = MinY + v25;
  objc_msgSend(v14, "frame");
  Width = CGRectGetWidth(v128);
  v32 = &v1[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs];
  v33 = Width
      + *(double *)&v1[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs + 56]
      + *(double *)&v1[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs + 40];
  LayoutMarginsAware<>.layoutFrame.getter(v13);
  v35 = v34 - v33;
  objc_msgSend(v18, "sizeThatFits:", v34 - v33, 1.79769313e308);
  v37 = v36;
  v39 = v38;
  v40 = *((_QWORD *)v32 + 4);
  v41 = LayoutMarginsAware<>.layoutFrame.getter(v13).n128_u64[0];
  if (v40 == 1)
  {
    objc_msgSend(v18, "setFrame:", CGRectGetMaxX(*(CGRect *)&v41) - v37 - v33, v30, v37, v39);
    v45 = v1;
    *(_QWORD *)&v129.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v13).n128_u64[0];
    v46 = CGRectGetMaxX(v129) - *((double *)v32 + 5);
    objc_msgSend(v14, "frame");
    v47 = v46 - CGRectGetWidth(v130);
  }
  else
  {
    objc_msgSend(v18, "setFrame:", v33 + CGRectGetMinX(*(CGRect *)&v41), v30, v37, v39);
    v45 = v1;
    v47 = LayoutMarginsAware<>.layoutFrame.getter(v13).n128_f64[0] + *((double *)v32 + 5);
  }
  v119 = v13;
  objc_msgSend(v18, "frame");
  v49 = v48 + *((double *)v32 + 6);
  objc_msgSend(v14, "frame");
  objc_msgSend(v14, "setFrame:", v47, v49);
  objc_msgSend(v18, "frame");
  MaxY = CGRectGetMaxY(v131);
  v51 = v118;
  v52 = v122;
  if (qword_100826B78 != -1)
    swift_once(&qword_100826B78, sub_1000CB0C4);
  v53 = sub_10007AF70(v28, (uint64_t)qword_10088A1F0);
  v54 = v123;
  v55 = v52(v123, v53, v28);
  v56 = v28;
  v57 = v120;
  static Dimensions.defaultRoundingRule.getter(v55);
  v58 = objc_msgSend(v18, "traitCollection");
  v59 = StaticDimension.value(compatibleWith:rounded:)(v58, v57);

  objc_msgSend(v18, "lastBaselineFromBottom");
  v61 = v59 - v60;
  v124(v57, v51);
  v62 = v56;
  v121(v54, v56);
  v63 = MaxY + v61;
  v64 = *(void **)&v45[OBJC_IVAR____TtC8AppStore9QuoteView_creditLabel];
  v65 = v51;
  if (v64)
  {
    v66 = v64;
    objc_msgSend(v66, "sizeThatFits:", v35, 1.79769313e308);
    v68 = v67;
    v70 = v69;
    v71 = *((_QWORD *)v32 + 4);
    objc_msgSend(v18, "frame");
    if (v71 == 1)
      MinX = CGRectGetMaxX(*(CGRect *)&v72) - v68;
    else
      MinX = CGRectGetMinX(*(CGRect *)&v72);
    v77 = v45;
    if (qword_100826B80 != -1)
      swift_once(&qword_100826B80, sub_1000CB228);
    v78 = v62;
    v79 = sub_10007AF70(v62, (uint64_t)qword_10088A208);
    v81 = v122;
    v80 = v123;
    v82 = v122(v123, v79, v62);
    static Dimensions.defaultRoundingRule.getter(v82);
    v83 = objc_msgSend(v66, "traitCollection");
    v84 = StaticDimension.value(compatibleWith:rounded:)(v83, v57);

    objc_msgSend(v66, "firstBaselineFromTop");
    v86 = v84 - v85;
    v87 = v124;
    v124(v57, v65);
    v88 = v121;
    v121(v80, v78);
    objc_msgSend(v66, "setFrame:", MinX, v63 + v86, v68, v70);
    objc_msgSend(v66, "frame");
    CGRectGetMaxY(v132);
    if (qword_100826B88 != -1)
      swift_once(&qword_100826B88, sub_1000CB238);
    v89 = sub_10007AF70(v78, (uint64_t)qword_10088A220);
    v90 = v81(v80, v89, v78);
    static Dimensions.defaultRoundingRule.getter(v90);
    v91 = objc_msgSend(v66, "traitCollection");
    StaticDimension.value(compatibleWith:rounded:)(v91, v57);

    objc_msgSend(v66, "lastBaselineFromBottom");
    v87(v57, v65);
    v88(v80, v78);
  }
  else
  {
    v77 = v45;
    v78 = v62;
  }
  v92 = v119;
  v93 = OBJC_IVAR____TtC8AppStore9QuoteView_artworkView;
  if ((objc_msgSend(*(id *)&v77[OBJC_IVAR____TtC8AppStore9QuoteView_artworkView], "isHidden") & 1) == 0)
  {
    v94 = OBJC_IVAR____TtC8AppStore9QuoteView_isFullWidthArtwork;
    if (v77[OBJC_IVAR____TtC8AppStore9QuoteView_isFullWidthArtwork] == 1)
      objc_msgSend(v77, "frame");
    else
      v95 = LayoutMarginsAware<>.layoutFrame.getter(v92).n128_u64[0];
    CGRectGetMinX(*(CGRect *)&v95);
    if (qword_100826B90 != -1)
      swift_once(&qword_100826B90, sub_1000CB39C);
    sub_10007AF70(v78, (uint64_t)qword_10088A238);
    v99 = objc_msgSend(v77, "traitCollection");
    v100 = v120;
    static Dimensions.defaultRoundingRule.getter(v99);
    StaticDimension.value(compatibleWith:rounded:)(v99, v100);

    v124(v100, v65);
    if (v77[v94] == 1)
      objc_msgSend(v77, "frame");
    else
      v101 = LayoutMarginsAware<>.layoutFrame.getter(v92).n128_u64[0];
    v106 = v116;
    v105 = v117;
    v107 = (uint64_t)v115;
    v108 = CGRectGetWidth(*(CGRect *)&v101);
    v109 = (uint64_t)&v77[OBJC_IVAR____TtC8AppStore9QuoteView_artworkAspectRatio];
    swift_beginAccess(&v77[OBJC_IVAR____TtC8AppStore9QuoteView_artworkAspectRatio], v125, 0, 0);
    sub_1000CDA38(v109, v107);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v107, 1, v105))
    {
      sub_1000CDA80(v107);
      *(_QWORD *)&v133.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v92).n128_u64[0];
      CGRectGetHeight(v133);
    }
    else
    {
      v110 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v114, v107, v105);
      v111 = sub_1000CDA80(v107);
      AspectRatio.height(fromWidth:)(v111, v108);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v110, v105);
    }
    v112 = *(id *)&v77[v93];
    ArtworkView.frame.setter(v112);

  }
}

id sub_1000CCD70()
{
  return sub_1000CCD7C(type metadata accessor for QuoteView);
}

id sub_1000CCD7C(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1000CCE4C()
{
  return type metadata accessor for QuoteView(0);
}

uint64_t type metadata accessor for QuoteView(uint64_t a1)
{
  uint64_t result;

  result = qword_10082C7E8;
  if (!qword_10082C7E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for QuoteView);
  return result;
}

void sub_1000CCE90(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "\b";
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_100662F18;
  v4[4] = "\b";
  sub_100005C14(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = &unk_100662F30;
    v4[8] = &unk_100662F30;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

uint64_t destroy for QuoteGlyphs(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for QuoteGlyphs(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

_QWORD *assignWithCopy for QuoteGlyphs(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  return a1;
}

__n128 initializeWithTake for QuoteGlyphs(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for QuoteGlyphs(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuoteGlyphs(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuoteGlyphs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteGlyphs()
{
  return &type metadata for QuoteGlyphs;
}

unint64_t sub_1000CD194(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100754CF0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

void sub_1000CD1DC(uint64_t a1, void *a2)
{
  char *v4;
  Swift::String v5;

  swift_bridgeObjectRetain(a2);
  v5._countAndFlagsBits = a1;
  v5._object = a2;
  v4 = (char *)sub_1000CD234 + 4 * byte_100662ED8[sub_1000CD194(v5)];
  __asm { BR              X10 }
}

__n128 sub_1000CD234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __n128 v9;
  __int128 v10;

  if (qword_100826B20 != -1)
    swift_once(&qword_100826B20, sub_1000CAA5C);
  v2 = qword_10088A000;
  v1 = unk_10088A008;
  v4 = qword_100889FF0;
  v3 = *(_QWORD *)algn_100889FF8;
  v5 = qword_10088A010;
  v9 = (__n128)unk_10088A028;
  v10 = unk_10088A018;
  v6 = qword_10088A038;
  v7 = unk_10088A040;
  swift_bridgeObjectRetain(*(_QWORD *)algn_100889FF8);
  swift_bridgeObjectRetain(v1);
  *(_QWORD *)v0 = v4;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 40) = v10;
  result = v9;
  *(__n128 *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v0 + 80) = v7;
  return result;
}

UIImage *sub_1000CD39C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  NSString *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString *v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  Class isa;
  id v21;
  double v22;
  double v23;
  CGFloat Height;
  id v25;
  double v26;
  CGFloat v27;
  UIImage *v28;
  uint64_t v30;
  CGSize v31;
  CGRect v32;
  CGRect v33;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = sub_10007B804(&qword_100830EA0);
  inited = swift_initStackObject(v3, &v30);
  *(_OWORD *)(inited + 16) = xmmword_100661E10;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v5 = qword_100826B50;
  v6 = NSFontAttributeName;
  if (v5 != -1)
    swift_once(&qword_100826B50, sub_1000CAE3C);
  v7 = (void *)qword_10082C760;
  v8 = sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v9 = qword_100826B58;
  v10 = v7;
  v11 = NSForegroundColorAttributeName;
  if (v9 != -1)
    swift_once(&qword_100826B58, sub_1000CAEA8);
  v12 = (void *)qword_10082C768;
  *(_QWORD *)(inited + 104) = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v12;
  v13 = v12;
  v14 = sub_10005FA64(inited);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = 24;
  if (v15 == 1)
    v16 = 8;
  v17 = *(_QWORD *)(a1 + v16);
  swift_bridgeObjectRetain(v17);
  v18 = objc_allocWithZone((Class)NSAttributedString);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  type metadata accessor for Key(0);
  sub_10005FA80();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v21 = objc_msgSend(v18, "initWithString:attributes:", v19, isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend(v2, "setAttributedText:", v21);
  objc_msgSend(v2, "sizeToFit");
  objc_msgSend(v2, "frame");
  v22 = CGRectGetWidth(v32) + *(double *)(a1 + 64);
  if (v15 == 1)
    v23 = 0.0;
  else
    v23 = *(double *)(a1 + 64);
  objc_msgSend(v2, "frame");
  Height = CGRectGetHeight(v33);
  v25 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v25, "scale");
  v27 = v26;

  v31.width = v22;
  v31.height = Height;
  UIGraphicsBeginImageContextWithOptions(v31, 0, v27);
  objc_msgSend(v2, "frame");
  objc_msgSend(v2, "drawTextInRect:", v23, 0.0);
  v28 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  return v28;
}

id sub_1000CD6B0(double a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, char a7)
{
  id v7;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  NSString *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSString *v20;
  id v21;
  unint64_t v22;
  id v23;
  NSString v24;
  Class isa;
  id v26;
  unint64_t v27;
  id v28;
  NSString v29;
  Class v30;
  id v31;
  id v32;
  double v33;
  double v34;
  id v35;
  uint64_t v37;

  v7 = a3;
  if (a3)
  {
    v13 = sub_10007B804(&qword_100830EA0);
    inited = swift_initStackObject(v13, &v37);
    *(_OWORD *)(inited + 16) = xmmword_100661E10;
    *(_QWORD *)(inited + 32) = NSParagraphStyleAttributeName;
    v15 = qword_1008289D0;
    v16 = NSParagraphStyleAttributeName;
    swift_bridgeObjectRetain(v7);
    if (v15 != -1)
      swift_once(&qword_1008289D0, sub_100462B10);
    if ((a7 & 1) != 0)
      v17 = -1;
    else
      v17 = a6;
    v18 = objc_msgSend((id)qword_10088F538, "paragraphStyleWithBaseWritingDirection:", v17);
    v19 = sub_100008FE4(0, &qword_10082C800, NSParagraphStyle_ptr);
    *(_QWORD *)(inited + 40) = v18;
    *(_QWORD *)(inited + 64) = v19;
    *(_QWORD *)(inited + 72) = NSFontAttributeName;
    *(_QWORD *)(inited + 104) = sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
    *(_QWORD *)(inited + 80) = a4;
    v20 = NSFontAttributeName;
    v21 = a4;
    v22 = sub_10005FA64(inited);
    v23 = objc_allocWithZone((Class)NSMutableAttributedString);
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    type metadata accessor for Key(0);
    sub_10005FA80();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v7 = objc_msgSend(v23, "initWithString:attributes:", v24, isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

    if (a5)
    {
      v26 = a5;
      v27 = sub_10005FA64((uint64_t)_swiftEmptyArrayStorage);
      v28 = objc_allocWithZone((Class)NSAttributedString);
      v29 = String._bridgeToObjectiveC()();
      v30 = Dictionary._bridgeToObjectiveC()().super.isa;
      v31 = objc_msgSend(v28, "initWithString:attributes:", v29, v30, swift_bridgeObjectRelease(v27).n128_f64[0]);

      objc_msgSend(v7, "appendAttributedString:", v31);
      v32 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
      objc_msgSend(v32, "setImage:", v26);
      objc_msgSend(v26, "size");
      objc_msgSend(v32, "setBounds:", 0.0, -a1, v33, v34);
      v35 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v32);
      objc_msgSend(v7, "appendAttributedString:", v35);

    }
  }
  return v7;
}

uint64_t sub_1000CD9D0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRetain(v2);
  return a1;
}

uint64_t sub_1000CDA04(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1000CDA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_10082E1A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CDA80(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10007B804((uint64_t *)&unk_10082E1A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1000CDAC0(void *result, double a2)
{
  uint64_t v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  __n128 v9;

  if (*(double *)(v2 + 32) != a2)
  {
    v3 = result;
    *(double *)(v2 + 32) = a2;
    objc_msgSend(result, "_systemContentInset");
    v5 = v4;
    objc_msgSend(v3, "contentOffset");
    v7 = v6;
    v8 = objc_msgSend(v3, "contentInset");
    v9.n128_f64[0] = fmin((v5 + v7 + v9.n128_f64[0] - *(double *)(v2 + 32)) / *(double *)(v2 + 40), 1.0);
    if (v9.n128_f64[0] < 0.0)
      v9.n128_f64[0] = 0.0;
    return (void *)(*(uint64_t (**)(id, __n128))(v2 + 16))(v8, v9);
  }
  return result;
}

uint64_t sub_1000CDB58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_1000CDB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  void (*v11)(char *, uint64_t, __n128);
  __n128 v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for VerticalStack(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v14 - v8;
  VerticalStack.init(with:)(sub_100017AB8, 0, v7);
  swift_retain(v1);
  VerticalStack.adding(_:with:)(v1 + 256, sub_1000CE280, v1);
  v10 = swift_release(v1);
  v11 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v11(v5, v2, v10);
  swift_retain(v1);
  VerticalStack.adding(_:with:)(v1 + 216, sub_1000CE2BC, v1);
  v12 = swift_release(v1);
  return ((uint64_t (*)(char *, uint64_t, __n128))v11)(v9, v2, v12);
}

uint64_t sub_1000CDC98(uint64_t a1, uint64_t a2)
{
  _BYTE v3[40];

  sub_100022500(a2 + 16, (uint64_t)v3);
  return VerticalStack.Properties.topSpacing.setter(v3);
}

uint64_t sub_1000CDCD0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  sub_100022500(a2 + 176, (uint64_t)v4);
  VerticalStack.Properties.topSpacing.setter(v4);
  sub_100022500(a2 + 96, (uint64_t)v4);
  return VerticalStack.Properties.bottomSpacing.setter(v4);
}

uint64_t sub_1000CDD20()
{
  _QWORD *v0;

  sub_1000CE2C4(v0 + 2);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v0 + 27);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v0 + 32);
  return swift_deallocClassInstance(v0, 296, 7);
}

uint64_t type metadata accessor for ShelfFooterViewLayout()
{
  return objc_opt_self(_TtC8AppStore21ShelfFooterViewLayout);
}

uint64_t destroy for ShelfFooterViewLayout.Metrics(_QWORD *a1)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 5);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 10);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 15);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 20);
}

_OWORD *initializeWithCopy for ShelfFooterViewLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  v8 = *(_OWORD *)((char *)a2 + 184);
  *(_OWORD *)((char *)a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
  return a1;
}

_QWORD *assignWithCopy for ShelfFooterViewLayout.Metrics(_QWORD *a1, _QWORD *a2)
{
  sub_1000640DC(a1, a2);
  sub_1000640DC(a1 + 5, a2 + 5);
  sub_1000640DC(a1 + 10, a2 + 10);
  sub_1000640DC(a1 + 15, a2 + 15);
  sub_1000640DC(a1 + 20, a2 + 20);
  return a1;
}

__n128 initializeWithTake for ShelfFooterViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for ShelfFooterViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 80));
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 120));
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((_QWORD *)(a1 + 160));
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfFooterViewLayout.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfFooterViewLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfFooterViewLayout.Metrics()
{
  return &type metadata for ShelfFooterViewLayout.Metrics;
}

uint64_t sub_1000CE078()
{
  return sub_1000CDB7C();
}

_OWORD *sub_1000CE098@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1000CE24C((_OWORD *)(*(_QWORD *)v1 + 16), a1);
}

uint64_t sub_1000CE0A8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006630E8, a2);
  return CustomLayout.measure(toFit:with:)(a1, a2, WitnessTable, a3, a4);
}

uint64_t sub_1000CE100(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006630E8, a2);
  return CustomLayout.place(at:with:)(a1, a2, WitnessTable, a3, a4, a5, a6);
}

uint64_t sub_1000CE170(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1006630E8, a2);
  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, WitnessTable);
}

uint64_t sub_1000CE1B8()
{
  return sub_1000CE200(&qword_10082C970, (uint64_t)&unk_100663088);
}

uint64_t sub_1000CE1DC()
{
  return sub_1000CE200(&qword_10082C978, (uint64_t)&unk_100663060);
}

uint64_t sub_1000CE200(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ShelfFooterViewLayout();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000CE23C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1006E0A48, 1);
}

_OWORD *sub_1000CE24C(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for ShelfFooterViewLayout.Metrics(a2, a1);
  return a2;
}

uint64_t sub_1000CE280()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_100022500(v0 + 16, (uint64_t)v2);
  return VerticalStack.Properties.topSpacing.setter(v2);
}

uint64_t sub_1000CE2BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1000CDCD0(a1, v1);
}

_QWORD *sub_1000CE2C4(_QWORD *a1)
{
  destroy for ShelfFooterViewLayout.Metrics(a1);
  return a1;
}

void *sub_1000CE2F0()
{
  return &protocol witness table for VerticalStack;
}

void sub_1000CE2FC()
{
  qword_10088A270 = 0x4072C00000000000;
}

uint64_t sub_1000CE310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD v10[5];

  v0 = type metadata accessor for FontSource(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StaticDimension(0);
  sub_100033BAC(v4, qword_10088A278);
  sub_10007AF70(v4, (uint64_t)qword_10088A278);
  if (qword_1008280F0 != -1)
    swift_once(&qword_1008280F0, sub_1003A68D0);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_10007AF70(v5, (uint64_t)qword_10088DD00);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v6, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  v10[3] = v0;
  v10[4] = &protocol witness table for FontSource;
  v7 = sub_100024638(v10);
  (*(void (**)(_QWORD *, char *, uint64_t))(v1 + 16))(v7, v3, v0);
  StaticDimension.init(_:scaledLike:)(v10, 50.0);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

char *sub_1000CE460(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  char *v12;
  id v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD, _QWORD);
  uint64_t v16;
  void (*v17)(_QWORD, _QWORD, _QWORD);
  char *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  char *v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  _QWORD *v40;
  _OWORD v41[10];

  v40 = a1;
  v2 = type metadata accessor for StaticDimension(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v1[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10, 0);
  v11 = objc_allocWithZone((Class)type metadata accessor for ArcadeWelcomeContentView());
  v12 = v1;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_arcadeWelcomeContentView] = v13;
  type metadata accessor for RoundedTitledButton(0);
  if (qword_1008280F0 != -1)
    swift_once(&qword_1008280F0, sub_1003A68D0);
  v14 = sub_10007AF70(v6, (uint64_t)qword_10088DD00);
  v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
  v15(v9, v14, v6);
  if (qword_100826BA0 != -1)
    swift_once(&qword_100826BA0, sub_1000CE310);
  v16 = sub_10007AF70(v2, (uint64_t)qword_10088A278);
  v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 16);
  v17(v5, v16, v2);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_familyButton] = sub_100612E08((uint64_t)v9, (uint64_t)v5);
  v15(v9, v14, v6);
  v17(v5, v16, v2);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_continueButton] = sub_100612E08((uint64_t)v9, (uint64_t)v5);

  sub_1000CEC50(v40, v41);
  v18 = sub_100609330(v41);
  v19 = OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_familyButton;
  v20 = *(void **)&v18[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_familyButton];
  v21 = (void *)objc_opt_self(UIColor);
  v22 = v18;
  v23 = v20;
  v24 = objc_msgSend(v21, "clearColor");
  objc_msgSend(v23, "setBackgroundColor:", v24);

  v25 = *(void **)&v18[v19];
  sub_1000520B8();
  v26 = v25;
  v27 = (void *)static UIColor.appTint.getter();
  objc_msgSend(v26, "setTintColor:", v27);

  v28 = *(void **)&v22[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_arcadeWelcomeContentView];
  v29 = OBJC_IVAR____TtC8AppStore18OnboardingPageView_contentView;
  v30 = *(void **)&v22[OBJC_IVAR____TtC8AppStore18OnboardingPageView_contentView];
  *(_QWORD *)&v22[OBJC_IVAR____TtC8AppStore18OnboardingPageView_contentView] = v28;
  v31 = v28;
  v32 = v22;
  v33 = v31;

  if (*(_QWORD *)&v22[v29])
    objc_msgSend(*(id *)&v32[OBJC_IVAR____TtC8AppStore18OnboardingPageView_contentScrollView], "addSubview:");
  objc_msgSend(v32, "setNeedsLayout", v40);

  objc_msgSend(v32, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v34 = OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_continueButton;
  v35 = *(id *)&v32[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_continueButton];
  v36 = (void *)static UIColor.appTint.getter();
  objc_msgSend(v35, "setBackgroundColor:", v36);

  v37 = *(void **)&v32[v34];
  v38 = objc_msgSend(v21, "whiteColor");
  objc_msgSend(v37, "setTintColor:", v38);

  sub_1000CEC8C(v40);
  return v32;
}

id sub_1000CE834(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  NSString v11;
  uint64_t v12;
  void (**v13)();
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  void (**v25)();
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = *(char **)&v2[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_continueButton];
  v7 = ArcadeWelcomeContent.continueAction.getter();
  Action.title.getter(v7);
  v9 = v8;
  v10 = swift_release(v7).n128_u64[0];
  if (v9)
  {
    v11 = String._bridgeToObjectiveC()();
    v10 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v6, "setTitle:forState:", v11, 0, *(double *)&v10);

  v12 = swift_allocObject(&unk_100758FE0, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v13 = (void (**)())&v6[qword_100890990];
  v14 = *(_QWORD *)&v6[qword_100890990];
  v15 = *(_QWORD *)&v6[qword_100890990 + 8];
  *v13 = sub_1000CEC10;
  v13[1] = (void (*)())v12;
  sub_10003A350(v14, v15);
  if (qword_100826B98 != -1)
    swift_once(&qword_100826B98, sub_1000CE2FC);
  sub_1005E2B68(v6, qword_10088A270, 0);
  objc_msgSend(v3, "setNeedsLayout");
  v16 = *(char **)&v3[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_familyButton];
  sub_1006095CC(v16);
  v17 = ArcadeWelcomeContent.familyAction.getter();
  if (v17)
  {
    v18 = v17;
    v19 = a2;
    v21 = Action.title.getter(v17).n128_u64[0];
    if (v20)
    {
      v22 = v20;
      v23 = String._bridgeToObjectiveC()();
      v21 = swift_bridgeObjectRelease(v22).n128_u64[0];
    }
    else
    {
      v23 = 0;
    }
    a2 = v19;
    objc_msgSend(v16, "setTitle:forState:", v23, 0, *(double *)&v21);

    v24 = swift_allocObject(&unk_100758FE0, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16);
    v25 = (void (**)())&v16[qword_100890990];
    v26 = *(_QWORD *)&v16[qword_100890990];
    v27 = *(_QWORD *)&v16[qword_100890990 + 8];
    *v25 = sub_1000CEC30;
    v25[1] = (void (*)())v24;
    sub_10003A350(v26, v27);
    sub_1005E2B68(v16, qword_10088A270, 0);
    objc_msgSend(v3, "setNeedsLayout");
    swift_release(v18);
  }
  else
  {
    sub_1006095CC(v16);
  }
  sub_1001E0DB8(a1, a2);
  return objc_msgSend(v3, "setNeedsLayout");
}

void sub_1000CEAA0(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_delegate);

    if (v6)
    {
      a2();
      swift_unknownObjectRelease(v6);
    }
  }
}

uint64_t sub_1000CEB28()
{
  uint64_t v0;

  return sub_1000834F4(v0 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_delegate);
}

uint64_t type metadata accessor for ArcadeWelcomePageView()
{
  return objc_opt_self(_TtC8AppStore21ArcadeWelcomePageView);
}

uint64_t sub_1000CEBEC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000CEC10()
{
  uint64_t v0;

  sub_1000CEAA0(v0, (void (*)(void))&dispatch thunk of ArcadeWelcomePagePresenter.didTapContinueButton());
}

void sub_1000CEC30()
{
  uint64_t v0;

  sub_1000CEAA0(v0, (void (*)(void))&dispatch thunk of ArcadeWelcomePagePresenter.didTapFamilyButton());
}

_OWORD *sub_1000CEC50(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for OnboardingPageView.LayoutMetrics(a2, a1);
  return a2;
}

_QWORD *sub_1000CEC8C(_QWORD *a1)
{
  destroy for OnboardingPageView.LayoutMetrics(a1);
  return a1;
}

uint64_t sub_1000CECC0(uint64_t a1)
{
  return sub_10007F918(a1, qword_10088A290, 0xD000000000000024, 0x80000001006AAB80);
}

uint64_t sub_1000CECE4(uint64_t a1)
{
  return sub_10007F918(a1, qword_10088A2A8, 0xD000000000000022, 0x80000001006AAB50);
}

uint64_t sub_1000CED08(uint64_t a1)
{
  return sub_10007F918(a1, qword_10088A2D8, 0xD000000000000026, 0x80000001006AABD0);
}

uint64_t sub_1000CED2C(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1000CED40(result, a2);
  return result;
}

uint64_t sub_1000CED40(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

id sub_1000CED84(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD v27[4];
  objc_super v28;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = sub_10007B804(&qword_10082CA40);
  __chkstk_darwin(v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViewCount] = 0;
  v13 = type metadata accessor for TodayCardChinLockupListIconView(0);
  v14 = v4;
  ViewRecycler.init()(v13);
  v15 = sub_1000D0B28();
  ReusePool.init(recycler:limit:)(v12, 6, v10, v15);
  swift_weakInit(&v14[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsCalculator], 0);
  v16 = &v14[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &v14[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_todayCardStyle];
  v18 = enum case for TodayCard.Style.light(_:);
  v19 = type metadata accessor for TodayCard.Style(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  v20 = &v14[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_clickActionHandler];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v14[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded] = 0;
  v14[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory] = 7;
  v14[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_wantsCardConsistentMargins] = 0;

  v28.receiver = v14;
  v28.super_class = ObjectType;
  v21 = objc_msgSendSuper2(&v28, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v21, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraExtraLarge);
  objc_msgSend(v21, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v22 = sub_10007B804(&qword_10082E950);
  v23 = swift_allocObject(v22, 48, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100661A30;
  *(_QWORD *)(v23 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v23 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v27[3] = ObjectType;
  v27[0] = v21;
  v24 = v21;
  v25 = UIView.registerForTraitChanges(_:target:action:)(v23, v27, "setNeedsLayout");
  swift_unknownObjectRelease(v25);

  swift_bridgeObjectRelease(v23);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v27);
  return v24;
}

void sub_1000CF048()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  char v8;
  char *v9;
  __n128 v10;
  id v11;
  char v13[24];

  v1 = v0;
  v2 = type metadata accessor for TodayCard.Style(0);
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v4 = __chkstk_darwin(v2).n128_u64[0];
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded] & 1) != 0
    || v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory] != 6
    || (v7 = objc_msgSend(v0, "traitCollection", v4),
        v8 = UITraitCollection.prefersAccessibilityLayouts.getter(v7),
        v7,
        (v8 & 1) != 0))
  {
    v9 = &v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_todayCardStyle];
    v10 = swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_todayCardStyle], v13, 0, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v3 + 16))(v6, v9, v2, v10);
    v11 = (id)sub_10000D5FC((uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    v11 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  objc_msgSend(v1, "setBackgroundColor:", v11);

}

void sub_1000CF194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  uint64_t v7;
  _QWORD *v8;
  _BYTE *v9;
  uint64_t v10;
  int v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  int v18;
  char *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  Swift::Int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSString *v34;
  double Width;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63[24];
  double v64[13];
  CGRect v65;

  v9 = v6;
  v57 = a6;
  v10 = a5;
  v55 = a2;
  v12 = a5;
  v13 = type metadata accessor for TodayCard.Style(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory];
  v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory] = v10;
  if (v12 == 7)
  {
    if (v18 == 7)
      goto LABEL_6;
LABEL_5:
    objc_msgSend(v9, "setNeedsLayout");
    goto LABEL_6;
  }
  if (v18 == 7)
    goto LABEL_5;
  switch(v10)
  {
    case 6u:
      if (v18 != 6)
        goto LABEL_5;
      break;
    case 5u:
      if (v18 != 5)
        goto LABEL_5;
      break;
    case 4u:
      if (v18 != 4)
        goto LABEL_5;
      break;
    default:
      if ((v18 - 7) > 0xFCu || v18 != v10)
        goto LABEL_5;
      break;
  }
LABEL_6:
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, a4, v13, v15);
  v19 = &v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_todayCardStyle];
  v20 = swift_beginAccess(&v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_todayCardStyle], v64, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v14 + 24))(v19, v17, v13, v20);
  swift_endAccess(v64);
  sub_1000CF048();
  v21 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v22 = TodayCardLockupListOverlay.lockups.getter(v21);
  v23 = (unint64_t)v22 >> 62;
  if (!((unint64_t)v22 >> 62))
  {
    if (*(uint64_t *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10) >= 6)
      v24 = 6;
    else
      v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
  while (1)
  {
    v44 = v22 < 0 ? v22 : v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v45 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRetain(v22);
    v46 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(v22);
    if (v46 < 0)
      break;
    if (v45 >= 6)
      v47 = 6;
    else
      v47 = v45;
    if (v45 >= 0)
      v24 = v47;
    else
      v24 = 6;
    swift_bridgeObjectRetain(v22);
    v33 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(v22);
    if (v33 < v24)
    {
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
LABEL_10:
    if ((v22 & 0xC000000000000001) != 0 && v24)
    {
      type metadata accessor for Lockup(0);
      v25 = 0;
      do
      {
        v26 = v25 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v25);
        v25 = v26;
      }
      while (v24 != v26);
    }
    if (v23)
    {
      if (v22 < 0)
        v28 = v22;
      else
        v28 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v23 = _CocoaArrayWrapper.subscript.getter(0, v24, v28);
      v8 = v29;
      v27 = v30;
      v32 = v31;
      swift_bridgeObjectRelease_n(v22, 2);
      v24 = v32 >> 1;
    }
    else
    {
      v27 = 0;
      v23 = v22 & 0xFFFFFFFFFFFFFF8;
      v8 = (_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 32);
    }
    v33 = v24 - v27;
    if (__OFSUB__(v24, v27))
      goto LABEL_71;
    sub_1000CF784(v24 - v27, v57);
    *(_QWORD *)&v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViewCount] = v33;
    v34 = (NSString *)objc_msgSend(v9, "traitCollection");
    objc_msgSend(v9, "bounds");
    Width = CGRectGetWidth(v65);
    sub_1000D19AC(v34, v10, v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded], (uint64_t)v64, Width);

    v36 = (uint64_t *)&v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews];
    swift_beginAccess(&v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews], v63, 0, 0);
    v10 = *v36;
    v53 = v9;
    v52 = v23;
    if (v27 == v24)
    {
      swift_bridgeObjectRetain(v10);
      swift_unknownObjectRetain(v23);
LABEL_78:
      swift_bridgeObjectRelease(v10);
      v49 = v52;
      swift_unknownObjectRelease(v52);
      sub_1000D1E34((uint64_t)v64);
      v50 = v53;
      sub_1000CF048();
      objc_msgSend(v50, "setNeedsLayout");
      swift_unknownObjectRelease(v49);
      return;
    }
    if (v27 >= v24)
      goto LABEL_72;
    v33 = v27;
    v7 = v8[v27];
    v62 = (unint64_t)v10 >> 62;
    if (!((unint64_t)v10 >> 62))
    {
      v22 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v10);
      swift_unknownObjectRetain(v23);
      swift_retain(v7);
      if (!v22)
        goto LABEL_77;
      goto LABEL_26;
    }
LABEL_73:
    if (v10 < 0)
      v48 = v10;
    else
      v48 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v10, 2);
    swift_unknownObjectRetain(v23);
    swift_retain(v7);
    v22 = _CocoaArrayWrapper.endIndex.getter(v48);
    swift_bridgeObjectRelease(v10);
    if (!v22)
    {
LABEL_77:
      swift_release(v7);
      goto LABEL_78;
    }
LABEL_26:
    v37 = 0;
    v61 = v10 & 0xC000000000000001;
    v38 = v10 & 0xFFFFFFFFFFFFFF8;
    v56 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v10 < 0)
      v38 = v10;
    v54 = v38;
    v60 = ~v33 + v24;
    v58 = (uint64_t)&v8[v33 + 1];
    v59 = v33 + 1;
    while (1)
    {
      if (v61)
      {
        v39 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v10);
      }
      else
      {
        if (v37 >= *(_QWORD *)(v56 + 16))
          goto LABEL_58;
        v39 = *(id *)(v10 + 8 * v37 + 32);
      }
      v8 = v39;
      v23 = v37 + 1;
      if (__OFADD__(v37, 1))
        break;
      v22 = v7;
      v40 = Lockup.icon.getter(v39);
      if (v40)
      {
        v41 = v40;
        v9 = (_BYTE *)v33;
        v42 = Lockup.clickAction.getter();
        v22 = (uint64_t)v8;
        sub_1000CFBA8(v64[0], v64[1], v41, v42, v55);
        swift_release(v7);

        swift_release(v41);
        v43 = v42;
        v33 = (uint64_t)v9;
        swift_release(v43);
      }
      else
      {
        swift_release(v7);

      }
      if (v60 == v37)
        goto LABEL_78;
      if ((uint64_t)(v59 + v37) < v33 || (uint64_t)(v59 + v37) >= v24)
        goto LABEL_57;
      v7 = *(_QWORD *)(v58 + 8 * v37);
      if (v62)
      {
        swift_bridgeObjectRetain(v10);
        swift_retain(v7);
        v22 = _CocoaArrayWrapper.endIndex.getter(v54);
        swift_bridgeObjectRelease(v10);
      }
      else
      {
        v22 = *(_QWORD *)(v56 + 16);
        swift_retain(*(_QWORD *)(v58 + 8 * v37));
      }
      ++v37;
      if (v23 == v22)
        goto LABEL_77;
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
  }
  __break(1u);
}

void sub_1000CF784(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  _BYTE v41[24];
  char v42[24];

  v3 = v2;
  v6 = (uint64_t *)&v3[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews];
  swift_beginAccess(&v3[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews], v42, 0, 0);
  v7 = *v6;
  if ((unint64_t)*v6 >> 62)
  {
    if (v7 < 0)
      v8 = *v6;
    else
      v8 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v6);
    v9 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v7);
    if (v9 == a1)
      return;
  }
  else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) == a1)
  {
    return;
  }
  v10 = *v6;
  if ((unint64_t)*v6 >> 62)
    goto LABEL_41;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
  v12 = *v6;
  v13 = (unint64_t)*v6 >> 62;
  if (v11 < a1)
  {
    if (v13)
    {
      if (v12 < 0)
        v37 = *v6;
      else
        v37 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v6);
      a2 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease(v12);
      v14 = a1 - a2;
      if (!__OFSUB__(a1, a2))
      {
LABEL_13:
        if ((v14 & 0x8000000000000000) == 0)
        {
          if (v14)
          {
            v15 = &v3[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViewReusePool];
            do
            {
              swift_beginAccess(v15, v41, 33, 0);
              v16 = sub_10007B804(&qword_10082CB48);
              ReusePool.dequeue(or:)(&v40, sub_1000CFEAC, 0, v16);
              swift_endAccess(v41);
              v17 = v40;
              objc_msgSend(v3, "addSubview:", v40);
              swift_beginAccess(v6, v41, 33, 0);
              v18 = v17;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
              v20 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v19 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v20 >= v19 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
              v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
              specialized Array._endMutation()(v21);
              swift_endAccess(v41);

              --v14;
            }
            while (v14);
          }
          return;
        }
        goto LABEL_51;
      }
    }
    else
    {
      a2 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      v14 = a1 - a2;
      if (!__OFSUB__(a1, a2))
        goto LABEL_13;
    }
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (!v13)
  {
    v22 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v23 = v22 - a1;
    if (!__OFSUB__(v22, a1))
      goto LABEL_22;
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_52:
  if (v12 < 0)
    v38 = v12;
  else
    v38 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v39 = _CocoaArrayWrapper.endIndex.getter(v38);
  swift_bridgeObjectRelease(v12);
  v23 = v39 - a1;
  if (__OFSUB__(v39, a1))
    goto LABEL_57;
LABEL_22:
  if (v23 < 0)
  {
LABEL_58:
    __break(1u);
    return;
  }
  if (v23)
  {
    v3 += OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViewReusePool;
    v10 = (uint64_t)&qword_10082CB48;
    do
    {
      swift_beginAccess(v6, v41, 33, 0);
      a1 = *v6;
      if ((unint64_t)*v6 >> 62)
      {
        if (a1 < 0)
          v34 = *v6;
        else
          v34 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v6);
        v35 = _CocoaArrayWrapper.endIndex.getter(v34);
        swift_bridgeObjectRelease(a1);
        if (!v35)
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          if (v10 < 0)
            v36 = v10;
          else
            v36 = v10 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v10);
          v11 = _CocoaArrayWrapper.endIndex.getter(v36);
          swift_bridgeObjectRelease(v10);
          goto LABEL_10;
        }
      }
      else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_39;
      }
      a1 = *v6;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v6);
      *v6 = a1;
      if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || a1 < 0 || (a1 & 0x4000000000000000) != 0)
      {
        isUniquelyReferenced_nonNull_bridgeObject = sub_10046C7B4(a1);
        a1 = isUniquelyReferenced_nonNull_bridgeObject;
        *v6 = isUniquelyReferenced_nonNull_bridgeObject;
      }
      v26 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v26)
        goto LABEL_40;
      v27 = v26 - 1;
      v28 = *(char **)((a1 & 0xFFFFFFFFFFFFFF8) + 8 * v27 + 0x20);
      *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v27;
      specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
      swift_endAccess(v41);
      if (a2)
      {
        v29 = *(void **)&v28[OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView];
        v30 = type metadata accessor for ArtworkView(0);
        v31 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
        v32 = v29;
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v32, 1, v30, v31, v33);

      }
      objc_msgSend(v28, "removeFromSuperview");
      v40 = v28;
      swift_beginAccess(v3, v41, 33, 0);
      v24 = sub_10007B804(&qword_10082CB48);
      ReusePool.recycle(_:)(&v40, v24);
      swift_endAccess(v41);

      --v23;
    }
    while (v23);
  }
}

uint64_t sub_1000CFBA8(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  _QWORD v43[3];

  v6 = v5;
  v42 = a5;
  v10 = sub_10007B804((uint64_t *)&unk_100835F20);
  __chkstk_darwin(v10);
  v12 = (char *)&v43[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Artwork.Style(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v43[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Artwork.Crop(0, v14);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v43[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = Artwork.crop.getter(v21);
  v23 = Artwork.Crop.preferredContentMode.getter(v22);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v24 = Artwork.config(_:mode:prefersLayeredImage:)(v23, 0, a1, a2);
  v25 = *(void **)(v6 + OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView);
  Artwork.style.getter(v24);
  v26 = ArtworkView.style.setter(v16);
  v27 = objc_msgSend(v25, "setContentMode:", Artwork.contentMode.getter(v26));
  v28 = ArtworkLoaderConfig.size.getter(v27);
  v30 = ArtworkView.imageSize.setter(v28, v29);
  v31 = Artwork.backgroundColor.getter(v30);
  if (!v31)
  {
    v32 = sub_1000520B8();
    v31 = static UIColor.placeholderBackground.getter(v32);
  }
  ArtworkView.backgroundColor.setter(v31);
  v33 = type metadata accessor for ArtworkView(0);
  v34 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v24, 2, 1, v25, v33, v34);
  if (a4)
  {
    v43[0] = a4;
    v35 = type metadata accessor for Action(0);
    v36 = type metadata accessor for ObjectGraph(0);
    v37 = sub_100005C94(&qword_10082A198, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
    swift_retain(a4);
    ComponentModel.pairedWith<A>(objectGraph:)(v42, v35, v36, v37);
    swift_release(a4);
    swift_release(v24);
    v38 = sub_10007B804((uint64_t *)&unk_100833700);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v12, 0, 1, v38);
  }
  else
  {
    swift_release(v24);
    v39 = sub_10007B804((uint64_t *)&unk_100833700);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v12, 1, 1, v39);
  }
  v40 = v6 + OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_clickAction;
  swift_beginAccess(v40, v43, 33, 0);
  sub_1000D1E5C((uint64_t)v12, v40);
  return swift_endAccess(v43);
}

id sub_1000CFEAC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id result;

  v2 = type metadata accessor for TodayCardChinLockupListIconView(0);
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  *a1 = result;
  return result;
}

void sub_1000CFEE8()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  NSString *v7;
  double Width;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  double v23;
  double v24;
  double v25;
  double v26;
  __n128 v27;
  char *v28;
  void (*v29)(__n128);
  uint64_t v30;
  __n128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;
  _OWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  CGRect v60;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39.receiver = v1;
  v39.super_class = ObjectType;
  objc_msgSendSuper2(&v39, "layoutSubviews", v4);
  v7 = (NSString *)objc_msgSend(v1, "traitCollection");
  objc_msgSend(v1, "bounds");
  Width = CGRectGetWidth(v60);
  v9 = OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory;
  v10 = OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded;
  sub_1000D19AC(v7, v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory], v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded], (uint64_t)v40, Width);
  v33 = v40[1];
  v34 = v40[0];
  v11 = v41;
  v12 = v42;
  v13 = v43;
  v32 = v44;
  v14 = v45;
  v15 = v46;
  v16 = v47;

  v17 = &v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews], &v38, 0, 0);
  v18 = *(_QWORD *)v17;
  swift_bridgeObjectRetain(v18);
  v20 = sub_100275A68(v19);
  swift_bridgeObjectRelease(v18);
  v21 = v1[v9];
  v22 = v1[v10];
  v48 = v34;
  v49 = v33;
  v50 = v11;
  v51 = v12;
  v52 = v13;
  v53 = v32;
  v54 = v14;
  v55 = v15;
  v56 = v16;
  v57 = v20;
  v58 = v21;
  v59 = v22;
  objc_msgSend(v1, "bounds");
  sub_1000B2580(v1, v23, v24, v25, v26);
  swift_bridgeObjectRelease(v20);
  v27 = swift_bridgeObjectRelease(v16);
  (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v6, v36, v27);
  v28 = &v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock], &v37, 0, 0);
  v29 = *(void (**)(__n128))v28;
  if (*(_QWORD *)v28)
  {
    v30 = *((_QWORD *)v28 + 1);
    v31 = swift_retain(v30);
    v29(v31);
    sub_10003A350((uint64_t)v29, v30);
  }
}

double sub_1000D014C()
{
  char *v0;
  char *v1;
  NSString *v2;
  double Width;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  id v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  id v32;
  char v33;
  id v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  double v39;
  double v40;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45[24];
  _OWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  char v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  CGRect v65;

  v1 = v0;
  v2 = (NSString *)objc_msgSend(v0, "traitCollection");
  objc_msgSend(v1, "bounds");
  Width = CGRectGetWidth(v65);
  v4 = OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory;
  v5 = OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded;
  sub_1000D19AC(v2, v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory], v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded], (uint64_t)v46, Width);
  v43 = v46[1];
  v44 = v46[0];
  v6 = v47;
  v7 = v48;
  v8 = v49;
  v42 = v50;
  v9 = v51;
  v10 = v52;
  v11 = v53;

  v12 = &v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews], v45, 0, 0);
  v13 = *(_QWORD *)v12;
  swift_bridgeObjectRetain(v13);
  v15 = sub_100275A68(v14);
  swift_bridgeObjectRelease(v13);
  v16 = v1[v4];
  v17 = v1[v5];
  v54[0] = v44;
  v54[1] = v43;
  v55 = v6;
  v56 = v7;
  v57 = v8;
  v58 = v42;
  v59 = v9;
  v60 = v10;
  v61 = v11;
  v62 = v15;
  v63 = v16;
  v64 = v17;
  v18 = objc_msgSend(v1, "traitCollection");
  if (qword_100829368 != -1)
    swift_once(&qword_100829368, sub_100050594);
  sub_1000418FC(v18, (uint64_t)&xmmword_100890B80, 1);
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v19) & 1) != 0)
  {
    v20 = 20.0;
    v21 = 20.0;
  }
  else
  {
    v20 = 13.0;
    v21 = 13.0;
  }
  static UIEdgeInsets.vertical(top:bottom:)(v20, v21);
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(v22) & 1) != 0)
  {
    v23 = 20.0;
    v24 = 20.0;
  }
  else
  {
    v23 = 13.0;
    v24 = 13.0;
  }
  static UIEdgeInsets.vertical(top:bottom:)(v23, v24);

  v25 = objc_msgSend(v1, "traitCollection");
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v26 = sub_10007B804((uint64_t *)&unk_10082B4A0);
  v27 = swift_allocObject(v26, 40, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100661700;
  *(_QWORD *)(v27 + 32) = v25;
  v28 = v25;
  v29 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v27);
  sub_1000D15E8(v29, (uint64_t)v54);
  v31 = v30;
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v11);

  if ((v1[v5] & 1) != 0
    || v1[v4] != 6
    || (v32 = objc_msgSend(v1, "traitCollection"),
        v33 = UITraitCollection.prefersAccessibilityLayouts.getter(v32),
        v32,
        (v33 & 1) != 0))
  {
    v34 = objc_msgSend(v1, "traitCollection", v42, v43, v44);
    sub_1000418FC(v34, (uint64_t)&xmmword_100890B80, 1);
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v35) & 1) != 0)
    {
      v36 = 20.0;
      v37 = 20.0;
    }
    else
    {
      v36 = 13.0;
      v37 = 13.0;
    }
    static UIEdgeInsets.vertical(top:bottom:)(v36, v37);
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v38) & 1) != 0)
    {
      v39 = 20.0;
      v40 = 20.0;
    }
    else
    {
      v39 = 13.0;
      v40 = 13.0;
    }
    static UIEdgeInsets.vertical(top:bottom:)(v39, v40);

  }
  return v31;
}

void sub_1000D04F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews, v13, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v2);
    return;
  }
  if (v2 < 0)
    v12 = v2;
  else
    v12 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v5 = (char *)*(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = *(void **)&v5[OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView];
      v8 = type metadata accessor for ArtworkView(0);
      v9 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v10 = v7;
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v10, 1, v8, v9, v11);

    }
    while (v3 != v4);
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1000D0648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _BYTE v40[40];
  char v41[24];
  char v42[24];

  v6 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ImpressionMetrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = a2 + 16;
    swift_beginAccess(v15, v41, 0, 0);
    v16 = swift_weakLoadStrong(v15);
    if (!v16)
    {

      return;
    }
    v17 = v16;
    sub_100022500(a3, (uint64_t)v40);
    v18 = sub_10007B804((uint64_t *)&unk_10082C420);
    v19 = type metadata accessor for TodayCard(0);
    v20 = swift_dynamicCast(&v39, v40, v18, v19, 6);
    if ((v20 & 1) != 0)
    {
      v21 = v39;
      v22 = TodayCard.overlay.getter(v20);
      v23 = swift_release(v21);
      if (v22)
      {
        v24 = type metadata accessor for TodayCardLockupListOverlay(0, v23);
        v25 = swift_dynamicCastClass(v22, v24);
        if (v25)
        {
          v36 = v22;
          v26 = TodayCardLockupListOverlay.lockups.getter(v25);
          v27 = v26;
          v37 = v17;
          if ((unint64_t)v26 >> 62)
          {
            if (v26 >= 0)
              v26 &= 0xFFFFFFFFFFFFFF8uLL;
            v28 = _CocoaArrayWrapper.endIndex.getter(v26);
            if (v28)
              goto LABEL_8;
          }
          else
          {
            v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v28)
            {
LABEL_8:
              if (v28 < 1)
              {
                __break(1u);
                return;
              }
              v29 = 0;
              v38 = v27 & 0xC000000000000001;
              v30 = v27;
              do
              {
                if (v38)
                {
                  v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
                }
                else
                {
                  v31 = *(_QWORD *)(v27 + 8 * v29 + 32);
                  v32 = swift_retain(v31);
                }
                Lockup.impressionMetrics.getter(v32);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
                {
                  swift_release(v31);
                  sub_1000057AC((uint64_t)v8, &qword_10082E4B0);
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
                  objc_msgSend(v14, "frame");
                  ImpressionsCalculator.addElement(_:at:)(v12);
                  v33 = swift_release(v31);
                  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v33);
                }
                ++v29;
                v27 = v30;
              }
              while (v28 != v29);
            }
          }

          swift_bridgeObjectRelease(v27);
          swift_release(v36);
          v34 = v37;
          goto LABEL_20;
        }
        swift_release(v22);
      }
    }

    v34 = v17;
LABEL_20:
    swift_release(v34);
  }
}

uint64_t sub_1000D09DC()
{
  return type metadata accessor for TodayCardChinLockupListView(0);
}

uint64_t type metadata accessor for TodayCardChinLockupListView(uint64_t a1)
{
  return sub_10005C8A8(a1, (uint64_t *)&unk_10082CA28, (uint64_t)&nominal type descriptor for TodayCardChinLockupListView);
}

void sub_1000D09F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_1000D0AC4(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = "\b";
    v6[4] = &unk_100663218;
    v4 = type metadata accessor for TodayCard.Style(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_100663218;
      v6[7] = &unk_100663230;
      v6[8] = &unk_100663248;
      v6[9] = &unk_100663230;
      swift_updateClassMetadata2(a1, 256, 10, v6, a1 + 80);
    }
  }
}

void sub_1000D0AC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_10082CA38)
  {
    v2 = sub_100072594(&qword_10082CA40);
    v3 = sub_1000D0B28();
    v4 = type metadata accessor for ReusePool(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_10082CA38);
  }
}

unint64_t sub_1000D0B28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082CA48;
  if (!qword_10082CA48)
  {
    v1 = sub_100072594(&qword_10082CA40);
    result = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10082CA48);
  }
  return result;
}

void sub_1000D0B74(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1000CF194(*a1, a2, a3, a4, a5, a6);
}

void sub_1000D0B7C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded) = a1;
  sub_1000CF048();
}

uint64_t sub_1000D0B8C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_wantsCardConsistentMargins);
}

uint64_t sub_1000D0B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_clickActionHandler);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_clickActionHandler);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_clickActionHandler + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_10003A350(v4, v5);
}

uint64_t sub_1000D0BC0()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "accessibilityElements");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, (char *)&type metadata for Any + 8);

  return v3;
}

uint64_t sub_1000D0C1C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsCalculator;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsCalculator, v3, 0, 0);
  return swift_weakLoadStrong(v1);
}

uint64_t sub_1000D0C64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsCalculator;
  swift_beginAccess(v3, v5, 1, 0);
  swift_weakAssign(v3, a1);
  return swift_release(a1);
}

void (*sub_1000D0CBC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v5);
  return sub_1000D0D2C;
}

void sub_1000D0D2C(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_weakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_release(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_release(v4);
  }
  free(v3);
}

uint64_t sub_1000D0D98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_10003A340(*v1, v1[1]);
  return v2;
}

uint64_t sub_1000D0DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10003A350(v6, v7);
}

uint64_t (*sub_1000D0E4C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock, a1, 33, 0);
  return j__swift_endAccess;
}

void (*sub_1000D0E90(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9[2];

  v5 = swift_allocObject(&unk_1007590B0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v2);
  v6 = swift_allocObject(&unk_1007590D8, 24, 7);
  swift_weakInit(v6 + 16, a2);
  sub_100022500(a1, (uint64_t)v9);
  v7 = swift_allocObject(&unk_100759100, 72, 7);
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v6;
  sub_10000F5F4(v9, v7 + 32);
  return sub_1000D1F20;
}

char *sub_1000D0F48(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  objc_super v21;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView;
  type metadata accessor for ArtworkView(0);
  v11 = v4;
  *(_QWORD *)&v4[v10] = static ArtworkView.iconArtworkView.getter();
  v12 = &v11[OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_clickAction];
  v13 = sub_10007B804((uint64_t *)&unk_100833700);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);

  v21.receiver = v11;
  v21.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v21, "initWithFrame:", a1, a2, a3, a4);
  v15 = OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView;
  v16 = *(void **)&v14[OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView];
  v17 = v14;
  objc_msgSend(v17, "addSubview:", v16);
  v18 = v16;
  ArtworkView.setImageDisablesAnimations.setter(0);

  objc_msgSend(*(id *)&v14[v15], "setUserInteractionEnabled:", 0);
  v19 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v17, "handleTap");
  objc_msgSend(v19, "setDelaysTouchesBegan:", 1);
  objc_msgSend(v17, "addGestureRecognizer:", v19);

  return v17;
}

uint64_t sub_1000D121C()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  _QWORD v25[4];
  uint64_t v26;
  char v27[24];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = type metadata accessor for ActionRunner.Origin(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10007B804((uint64_t *)&unk_100835F20);
  __chkstk_darwin(v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10007B804((uint64_t *)&unk_100833700);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_clickAction];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_clickAction], v27, 0, 0);
  sub_1000D1F2C(v14, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v15 = (uint64_t *)&unk_100835F20;
    v16 = v9;
    return sub_1000057AC((uint64_t)v16, v15);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v17 = UIResponder.nearestActionRunner.getter();
  if (v17)
  {
    v18 = v17;
    ObjectGraphPair.value.getter(&v26, v10);
    v19 = ObjectType;
    v20 = v26;
    v25[3] = v19;
    v25[0] = v1;
    v21 = v1;
    v22 = ObjectGraphPair.objectGraph.getter(v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ActionRunner.Origin.userInitiated(_:), v3);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v20, v25, v6, v22);
    swift_release(v18);
    swift_release(v20);
    v23 = swift_release(v22);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v23);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v15 = (uint64_t *)&unk_10082B490;
    v16 = (char *)v25;
    return sub_1000057AC((uint64_t)v16, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1000D14CC()
{
  return type metadata accessor for TodayCardChinLockupListIconView(0);
}

uint64_t type metadata accessor for TodayCardChinLockupListIconView(uint64_t a1)
{
  return sub_10005C8A8(a1, (uint64_t *)&unk_10082CA80, (uint64_t)&nominal type descriptor for TodayCardChinLockupListIconView);
}

void sub_1000D14E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1000D1564(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_1000D1564(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10082D7F0)
  {
    v2 = sub_100072594((uint64_t *)&unk_100833700);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10082D7F0);
  }
}

uint64_t sub_1000D15BC()
{
  return sub_100005C94(&qword_10082CA90, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCardLockupListOverlay, (uint64_t)&protocol conformance descriptor for TodayCardOverlay);
}

void sub_1000D15E8(void *a1, uint64_t a2)
{
  id v4;
  __n128 v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  _QWORD *v22;
  id v23;
  void *v24;
  double v25[5];

  v4 = objc_msgSend(a1, "traitCollection");
  v6 = sub_1000B174C(v5);
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v14 = CGSize.subtracting(insets:)(v13);
  v16 = v15;
  v17 = objc_msgSend(a1, "traitCollection");
  LOBYTE(v4) = UITraitCollection.prefersAccessibilityLayouts.getter(v17);

  if ((v4 & 1) != 0)
    sub_1000B1884(0, v25, 0.0, 0.0, v14, v16);
  else
    sub_1000B20DC(0, (uint64_t)v25, 0.0, 0.0, v14, v16);
  v18 = v25[1];
  v19 = v25[2];
  v21 = v25[3];
  v20 = v25[4];
  v22 = sub_1000B2BB8(v25);
  CGSize.adding(outsets:)(v22, v6, v8, v10, v12, v21 - v18, v20 - v19);
  v23 = objc_msgSend(a1, "traitCollection");
  v24 = v23;
  if ((*(_BYTE *)(a2 + 105) & 1) == 0 && *(_BYTE *)(a2 + 104) == 6)
  {
    UITraitCollection.prefersAccessibilityLayouts.getter(v23);

  }
  else
  {

  }
}

void sub_1000D17D4(uint64_t a1, void *a2)
{
  id v4;
  NSString *v5;
  NSString *v6;
  NSString *v7;
  id v8;
  char v9;

  if ((UITraitCollection.prefersAccessibilityLayouts.getter(a1) & 1) == 0)
  {
    if (qword_100829368 == -1)
      return;
LABEL_14:
    swift_once(&qword_100829368, sub_100050594);
    return;
  }
  v4 = objc_msgSend(a2, "preferredContentSizeCategory");
  v5 = UIContentSizeCategoryAccessibilityMedium;
  v6 = UIContentSizeCategoryAccessibilityExtraLarge;
  if ((static UIContentSizeCategory.<= infix(_:_:)(v5, v6) & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)(v4, v5) & 1) != 0)
  {
    v7 = v6;
    v8 = v4;
    v9 = static UIContentSizeCategory.<= infix(_:_:)(v8, v7);

    if ((v9 & 1) != 0)
    {
      if (qword_1008284A0 != -1)
        swift_once(&qword_1008284A0, sub_1003B4030);
      return;
    }
  }
  else
  {

  }
  if (qword_100829368 != -1)
    goto LABEL_16;
  while (1)
  {
    sub_1000418FC(a2, (uint64_t)&xmmword_100890B80, 1);
    if (!__OFSUB__(a1, 1))
      break;
    __break(1u);
LABEL_16:
    swift_once(&qword_100829368, sub_100050594);
  }
}

unint64_t sub_1000D19AC@<X0>(NSString *a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  UIContentSizeCategory v8;
  __n128 v10;
  id v11;
  uint64_t v12;
  NSString *v13;
  NSString *v14;
  id v15;
  char v16;
  double v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int8x16_t v31;
  uint64_t v32;
  uint64_t inited;
  unint64_t v34;
  unint64_t result;
  __int128 v36;
  __int128 v37;
  char v38;
  double v39;
  double v40;
  id v41;
  NSString *v42;
  id v43;
  char v44;
  double v45;
  uint64_t v46;
  NSString *v47;
  NSString *v48;
  NSString *v49;
  char v50;
  int8x16_t v51;
  int8x16_t v52;
  _BYTE v53[152];

  v8 = a1;
  if ((UITraitCollection.prefersAccessibilityLayouts.getter(a1) & 1) == 0)
  {
    v18 = (id)ASKDeviceTypeGetCurrent(v10);
    v19 = ASKDeviceTypePad;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v22 = v21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v25 = v24;
    v17 = 16.0;
    if (v20 != v23 || v22 != v24)
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v23, v24, 0) & 1) != 0)
        v17 = 16.0;
      else
        v17 = 10.0;
    }

    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v25);
    v12 = 1;
    sub_1000D17D4(1, v8);
    a5 = v27;
    v29 = v28;
    if (((a2 != 7) & ~a3 & (a2 == 6)) != 0)
      v30 = -1;
    else
      v30 = 0;
    v31 = (int8x16_t)vdupq_n_s64(v30);
    v52 = vbslq_s8(v31, *(int8x16_t *)&UIEdgeInsetsZero.top, (int8x16_t)xmmword_100663180);
    v51 = vbslq_s8(v31, *(int8x16_t *)&UIEdgeInsetsZero.bottom, (int8x16_t)xmmword_100663180);
    v32 = sub_10007B804(&qword_10082CB40);
    inited = swift_initStackObject(v32, v53);
    *(_OWORD *)(inited + 16) = xmmword_100662370;
    *(_QWORD *)(inited + 32) = 2;
    *(_OWORD *)(inited + 40) = xmmword_100663190;
    *(_OWORD *)(inited + 56) = xmmword_100663190;
    *(_QWORD *)(inited + 72) = 3;
    *(_OWORD *)(inited + 80) = xmmword_1006631A0;
    *(_OWORD *)(inited + 96) = xmmword_1006631A0;
    *(_QWORD *)(inited + 112) = 4;
    *(_OWORD *)(inited + 120) = xmmword_1006631B0;
    *(_OWORD *)(inited + 136) = xmmword_1006631B0;
    v34 = sub_100551688(inited);
    result = swift_setDeallocating(inited);
    v37 = (__int128)v51;
    v36 = (__int128)v52;
    v38 = 0;
    v39 = 22.0;
    v40 = 8.0;
    goto LABEL_34;
  }
  v11 = -[NSString preferredContentSizeCategory](v8, "preferredContentSizeCategory");
  v12 = UIContentSizeCategoryAccessibilityMedium;
  v13 = UIContentSizeCategoryAccessibilityExtraLarge;
  if ((static UIContentSizeCategory.<= infix(_:_:)(v12, v13) & 1) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)(v11, v12) & 1) == 0)
  {

    v17 = 20.0;
    goto LABEL_21;
  }
  v14 = v13;
  v15 = v11;
  v16 = static UIContentSizeCategory.<= infix(_:_:)(v15, v14);

  v17 = 20.0;
  if ((v16 & 1) == 0)
    goto LABEL_21;
  if (qword_1008284A0 != -1)
    goto LABEL_38;
  while (1)
  {
    if (*(double *)&qword_10088E748 >= a5)
      v17 = 10.0;
    else
      v17 = 16.0;
LABEL_21:
    v41 = -[NSString preferredContentSizeCategory](v8, "preferredContentSizeCategory");
    v12 = (uint64_t)(id)v12;
    v13 = v13;
    if ((static UIContentSizeCategory.<= infix(_:_:)(v12, v13) & 1) == 0)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if ((static UIContentSizeCategory.>= infix(_:_:)(v41, v12) & 1) != 0)
    {
      v42 = v13;
      v43 = v41;
      v44 = static UIContentSizeCategory.<= infix(_:_:)(v43, v42);

      if ((v44 & 1) != 0)
      {
        v12 = 1;
        goto LABEL_27;
      }
    }
    else
    {

    }
    v12 = 2;
LABEL_27:
    sub_1000D17D4(v12, v8);
    a5 = v45;
    v29 = v46;
    v13 = (NSString *)-[NSString preferredContentSizeCategory](v8, "preferredContentSizeCategory");
    v8 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
    v47 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
    if ((static UIContentSizeCategory.<= infix(_:_:)(v8, v47) & 1) != 0)
      break;
LABEL_37:
    __break(1u);
LABEL_38:
    swift_once(&qword_1008284A0, sub_1003B4030);
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)(v13, v8) & 1) != 0)
  {
    v48 = v47;
    v49 = v13;
    v50 = static UIContentSizeCategory.<= infix(_:_:)(v49, v48);

    if ((v50 & 1) != 0)
    {
      v38 = 1;
      goto LABEL_33;
    }
  }
  else
  {

  }
  v38 = 0;
LABEL_33:
  result = sub_100551688((uint64_t)_swiftEmptyArrayStorage);
  v36 = xmmword_1006631C0;
  v34 = result;
  v40 = v17;
  v39 = v17;
  v37 = xmmword_1006631C0;
LABEL_34:
  *(double *)a4 = a5;
  *(_QWORD *)(a4 + 8) = v29;
  *(double *)(a4 + 16) = v17;
  *(double *)(a4 + 24) = v40;
  *(double *)(a4 + 32) = v39;
  *(_QWORD *)(a4 + 40) = v12;
  *(_BYTE *)(a4 + 48) = v38;
  *(_OWORD *)(a4 + 56) = v36;
  *(_OWORD *)(a4 + 72) = v37;
  *(_QWORD *)(a4 + 88) = v34;
  return result;
}

uint64_t sub_1000D1E34(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));
  return a1;
}

uint64_t sub_1000D1E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_100835F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D1EA4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D1EC8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D1EEC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v0 + 4);
  return swift_deallocObject(v0, 72, 7);
}

void sub_1000D1F20()
{
  uint64_t v0;

  sub_1000D0648(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

uint64_t sub_1000D1F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_100835F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000D1F74()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = sub_10007B804(&qword_10082CA40);
  __chkstk_darwin(v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViewCount] = 0;
  v4 = type metadata accessor for TodayCardChinLockupListIconView(0);
  ViewRecycler.init()(v4);
  v5 = sub_1000D0B28();
  ReusePool.init(recycler:limit:)(v3, 6, v1, v5);
  swift_weakInit(&v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsCalculator], 0);
  v6 = &v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_todayCardStyle];
  v8 = enum case for TodayCard.Style.light(_:);
  v9 = type metadata accessor for TodayCard.Style(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = &v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_clickActionHandler];
  *v10 = 0;
  v10[1] = 0;
  v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded] = 0;
  v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory] = 7;
  v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_wantsCardConsistentMargins] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/TodayCardChinLockupListView.swift", 42, 2, 106, 0);
  __break(1u);
}

void sub_1000D2104(void *a1)
{
  uint64_t v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;

  v16 = objc_msgSend(*(id *)(v1 + 16), "view");
  if (v16)
  {
    objc_msgSend(a1, "_systemContentInset");
    v4 = v3;
    v6 = v5;
    objc_msgSend(a1, "contentOffset");
    v8 = v7;
    v10 = v9;
    objc_msgSend(a1, "contentInset");
    v12 = v6 + v8 + v11;
    v14 = v4 + v10 + v13;
    objc_msgSend(a1, "bounds");
    objc_msgSend(v16, "setFrame:", sub_1000D21DC(v12, v14, v15));

  }
  else
  {
    __break(1u);
  }
}

double sub_1000D21DC(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v3 + 16);
  sub_10062C354(a3);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore27ArticleHeaderViewController_cell);
  v6 = type metadata accessor for ListTodayCardCollectionViewCell(0);
  if (!swift_dynamicCastClass(v5, v6))
  {
    v7 = type metadata accessor for LegacyListTodayCardCollectionViewCell(0);
    swift_dynamicCastClass(v5, v7);
  }
  return 0.0;
}

uint64_t sub_1000D22B8()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 33, 7);
}

uint64_t type metadata accessor for ArticleHeaderScrollObserver()
{
  return objc_opt_self(_TtC8AppStore27ArticleHeaderScrollObserver);
}

id sub_1000D2308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t);
  uint64_t v11;
  double v12;
  __n128 v13;
  __n128 v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  double *v18;
  objc_super v20;

  v0 = type metadata accessor for PageGrid(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ShelfLayoutContext(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = ItemLayoutContext.parentShelfLayoutContext.getter(v6);
  ShelfLayoutContext.contentPageGrid.getter(v9);
  v10 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v11 = v10(v8, v4);
  v12 = PageGrid.containerWidth.getter(v11);
  v13.n128_f64[0] = (*(double (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  ItemLayoutContext.parentShelfLayoutContext.getter(v13);
  v15 = ShelfLayoutContext.traitCollection.getter(v14);
  v10(v8, v4);
  v16 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v17 = (char *)objc_allocWithZone(v16);
  v18 = (double *)&v17[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *v18 = v12;
  v18[1] = 1.79769313e308;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v15;
  v20.receiver = v17;
  v20.super_class = v16;
  return objc_msgSendSuper2(&v20, "init");
}

uint64_t sub_1000D2470()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *, char *, uint64_t);
  void (*v13)(char *, uint64_t);
  _QWORD *v14;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD v19[3];
  void *v20;
  void *v21;
  _QWORD v22[3];
  uint64_t v23;
  void *v24;
  _QWORD v25[5];

  v0 = type metadata accessor for FontSource(0);
  v1 = *(_QWORD **)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FootnoteLayout.Metrics(0, v2);
  sub_100033BAC(v5, qword_10088A328);
  v18 = sub_10007AF70(v5, (uint64_t)qword_10088A328);
  if (qword_100827DF8 != -1)
    swift_once(&qword_100827DF8, sub_1003A4B80);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10007AF70(v6, (uint64_t)qword_10088D418);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v17(v4, v7, v6);
  v8 = enum case for FontSource.useCase(_:);
  v9 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v9(v4, enum case for FontSource.useCase(_:), v0);
  v10 = type metadata accessor for StaticDimension(0);
  v25[3] = v10;
  v25[4] = &protocol witness table for StaticDimension;
  sub_100024638(v25);
  v23 = v0;
  v24 = &protocol witness table for FontSource;
  v11 = sub_100024638(v22);
  v12 = (void (*)(_QWORD *, char *, uint64_t))v1[2];
  v12(v11, v4, v0);
  StaticDimension.init(_:scaledLike:)(v22, 30.0);
  v13 = (void (*)(char *, uint64_t))v1[1];
  v13(v4, v0);
  v17(v4, v7, v6);
  v9(v4, v8, v0);
  v23 = v10;
  v24 = &protocol witness table for StaticDimension;
  sub_100024638(v22);
  v20 = (void *)v0;
  v21 = &protocol witness table for FontSource;
  v14 = sub_100024638(v19);
  v12(v14, v4, v0);
  StaticDimension.init(_:scaledLike:)(v19, 20.0);
  v13(v4, v0);
  v20 = &type metadata for Double;
  v21 = &protocol witness table for Double;
  v19[0] = 0x4018000000000000;
  return FootnoteLayout.Metrics.init(textSpace:bottomSpace:chevronMargin:)(v25, v22, v19);
}

uint64_t sub_1000D26AC()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
  result = static UIColor.secondaryText.getter(v0);
  qword_10082CC00 = result;
  return result;
}

uint64_t sub_1000D26EC()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
  result = static UIColor.tertiaryText.getter(v0);
  qword_10082CC08 = result;
  return result;
}

uint64_t sub_1000D272C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  NSString *v5;
  id v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v0 = type metadata accessor for SystemImage(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for SystemImage.chevronForward(_:), v0);
  v4 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v5 = UIFontTextStyleFootnote;
  v6 = objc_msgSend(v4, "configurationWithTextStyle:scale:", v5, 1);

  v7 = static SystemImage.load(_:with:)(v3, v6);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_10088A340 = v7;
  return result;
}

char *sub_1000D2824(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  char *v31;
  __n128 v32;
  id v33;
  double left;
  double bottom;
  double right;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_class *ObjectType;
  objc_super v48;
  _QWORD v49[5];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v44 = type metadata accessor for Separator.Position(0, v10);
  v11 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Separator(0);
  v45 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DirectionalTextAlignment(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v21);
  v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView] = 0;
  v5[OBJC_IVAR____TtC8AppStore12FootnoteView_hasChevron] = 0;
  v5[OBJC_IVAR____TtC8AppStore12FootnoteView_textLightensOnHighlight] = 0;
  v5[OBJC_IVAR____TtC8AppStore12FootnoteView_isHighlighted] = 0;
  v24 = qword_100827DF8;
  v25 = v5;
  if (v24 != -1)
    swift_once(&qword_100827DF8, sub_1003A4B80);
  v26 = type metadata accessor for FontUseCase(0);
  v27 = sub_10007AF70(v26, (uint64_t)qword_10088D418);
  v28 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v23, v27, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v23, 0, 1, v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for DirectionalTextAlignment.none(_:), v17);
  v29 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v25[OBJC_IVAR____TtC8AppStore12FootnoteView_textLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v23, 0, 0, 1, 0, v20, 0, 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for Separator.Position.top(_:), v44);
  v49[3] = type metadata accessor for ZeroDimension(0);
  v49[4] = &protocol witness table for ZeroDimension;
  sub_100024638(v49);
  static ZeroDimension.zero.getter();
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v13, v49, 0.0, 0.0);
  v30 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SeparatorView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v31 = &v30[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
  v32 = swift_beginAccess(&v30[OBJC_IVAR____TtC8AppStore13SeparatorView_separator], v49, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v45 + 40))(v31, v16, v46, v32);
  swift_endAccess(v49);
  *(_QWORD *)&v25[OBJC_IVAR____TtC8AppStore12FootnoteView_separatorView] = v30;

  v48.receiver = v25;
  v48.super_class = ObjectType;
  v33 = objc_msgSendSuper2(&v48, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v37 = (char *)v33;
  objc_msgSend(v37, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  v38 = OBJC_IVAR____TtC8AppStore12FootnoteView_textLabel;
  v39 = qword_100826BD0;
  v40 = *(id *)&v37[OBJC_IVAR____TtC8AppStore12FootnoteView_textLabel];
  if (v39 != -1)
    swift_once(&qword_100826BD0, sub_1000D26AC);
  objc_msgSend(v40, "setTextColor:", qword_10082CC00);

  v41 = *(id *)&v37[v38];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v37[v38]);
  objc_msgSend(v37, "addSubview:", *(_QWORD *)&v37[OBJC_IVAR____TtC8AppStore12FootnoteView_separatorView]);

  return v37;
}

double sub_1000D2D00(__n128 a1, double a2)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  double v20;
  __int128 v22;
  __int128 v23;
  void *v24;
  _QWORD v25[5];

  v4 = a1.n128_f64[0];
  v5 = type metadata accessor for FootnoteLayout.Metrics(0, a1);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FootnoteLayout(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100826BC8 != -1)
    swift_once(&qword_100826BC8, sub_1000D2470);
  v14 = sub_10007AF70(v5, (uint64_t)qword_10088A328);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v14, v5);
  v15 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore12FootnoteView_textLabel);
  v25[3] = type metadata accessor for DynamicTypeLabel(0);
  v25[4] = &protocol witness table for UILabel;
  v25[0] = v15;
  v16 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView);
  if (v16)
  {
    *((_QWORD *)&v23 + 1) = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
    v24 = &protocol witness table for UIView;
    *(_QWORD *)&v22 = v16;
  }
  else
  {
    v24 = 0;
    v22 = 0u;
    v23 = 0u;
  }
  v17 = v15;
  v18 = v16;
  FootnoteLayout.init(metrics:labelView:chevronView:)(v9, v25, &v22);
  v19 = sub_100005C94(&qword_10082CC68, (uint64_t (*)(uint64_t))&type metadata accessor for FootnoteLayout, (uint64_t)&protocol conformance descriptor for FootnoteLayout);
  v20 = dispatch thunk of Measurable.measurements(fitting:in:)(v2, v10, v19, v4, a2);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v20;
}

uint64_t sub_1000D2F34()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  __n128 v24;
  char *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  char *v34;
  __n128 v35;
  uint64_t v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  void *v53;
  _QWORD v54[5];
  objc_super v55;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v47 = type metadata accessor for Separator(0);
  v3 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for LayoutRect(0);
  v6 = *(_QWORD *)(v46 - 8);
  v7 = __chkstk_darwin(v46);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FootnoteLayout.Metrics(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FootnoteLayout(0, v12);
  v49 = *(_QWORD *)(v15 - 8);
  v50 = v15;
  *(_QWORD *)&v16 = __chkstk_darwin(v15).n128_u64[0];
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55.receiver = v1;
  v55.super_class = ObjectType;
  v48 = ObjectType;
  objc_msgSendSuper2(&v55, "layoutSubviews", v16);
  if (qword_100826BC8 != -1)
    swift_once(&qword_100826BC8, sub_1000D2470);
  v19 = sub_10007AF70(v10, (uint64_t)qword_10088A328);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v19, v10);
  v20 = *(void **)&v1[OBJC_IVAR____TtC8AppStore12FootnoteView_textLabel];
  v54[3] = type metadata accessor for DynamicTypeLabel(0);
  v54[4] = &protocol witness table for UILabel;
  v54[0] = v20;
  v21 = *(void **)&v1[OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView];
  if (v21)
  {
    *((_QWORD *)&v52 + 1) = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
    v53 = &protocol witness table for UIView;
    *(_QWORD *)&v51 = v21;
  }
  else
  {
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
  }
  v22 = v20;
  v23 = v21;
  FootnoteLayout.init(metrics:labelView:chevronView:)(v14, v54, &v51);
  v24 = LayoutMarginsAware<>.layoutFrame.getter(v48);
  FootnoteLayout.placeChildren(relativeTo:in:)(v1, v24);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v46);
  v25 = *(char **)&v1[OBJC_IVAR____TtC8AppStore12FootnoteView_separatorView];
  objc_msgSend(v1, "bounds");
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v34 = &v25[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
  v35 = swift_beginAccess(&v25[OBJC_IVAR____TtC8AppStore13SeparatorView_separator], v54, 0, 0);
  v36 = v47;
  (*(void (**)(char *, char *, uint64_t, __n128))(v3 + 16))(v5, v34, v47, v35);
  v37 = Separator.frame(forBoundingRect:in:)(v25, v27, v29, v31, v33);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v36);
  objc_msgSend(v25, "setFrame:", v37, v39, v41, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v18, v50);
}

void sub_1000D329C(char a1)
{
  char *v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;

  if (v1[OBJC_IVAR____TtC8AppStore12FootnoteView_hasChevron] != (a1 & 1))
  {
    v2 = v1;
    if (v1[OBJC_IVAR____TtC8AppStore12FootnoteView_hasChevron])
    {
      if (qword_100826BE0 != -1)
        swift_once(&qword_100826BE0, sub_1000D272C);
      v3 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", qword_10088A340);
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v4 = (void *)static UIColor.tableViewCellChevron.getter();
      objc_msgSend(v3, "setTintColor:", v4);

      v5 = OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView;
      v6 = *(void **)&v2[OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView];
      v7 = v3;
      if (v6)
      {
        objc_msgSend(v6, "removeFromSuperview");
        v6 = *(void **)&v2[v5];
      }
      *(_QWORD *)&v2[v5] = v3;
      v14 = v3;

      v11 = *(void **)&v2[v5];
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v2, "addSubview:", v12);
        objc_msgSend(v2, "setNeedsLayout");

      }
      else
      {

      }
    }
    else
    {
      v8 = OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView;
      v9 = *(void **)&v2[OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView];
      if (v9)
      {
        objc_msgSend(v9, "removeFromSuperview");
        v10 = *(void **)&v2[v8];
      }
      else
      {
        v10 = 0;
      }
      *(_QWORD *)&v2[v8] = 0;

      v13 = *(void **)&v2[v8];
      if (v13)
      {
        v15 = v13;
        objc_msgSend(v2, "addSubview:", v15);
        objc_msgSend(v2, "setNeedsLayout");

      }
    }
  }
}

uint64_t type metadata accessor for FootnoteView()
{
  return objc_opt_self(_TtC8AppStore12FootnoteView);
}

double sub_1000D34FC(uint64_t a1, uint64_t a2, int a3, void *a4, __n128 a5)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  _BYTE v60[40];
  _BYTE v61[40];
  __int128 v62;
  __int128 v63;
  void *v64;
  _QWORD v65[6];

  v55 = a3;
  v54 = a1;
  v7 = type metadata accessor for FootnoteLayout.Metrics(0, a5);
  v56 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for FootnoteLayout(0, v8);
  v57 = *(_QWORD *)(v58 - 8);
  v11 = __chkstk_darwin(v58);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LabelPlaceholderCompatibility(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
  if (qword_100827DF8 != -1)
    swift_once(&qword_100827DF8, sub_1003A4B80);
  v18 = type metadata accessor for FontUseCase(0);
  v19 = sub_10007AF70(v18, (uint64_t)qword_10088D418);
  v59 = a4;
  v20 = objc_msgSend(a4, "traitCollection");
  v21 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v19, v20);

  v22 = type metadata accessor for Feature(0);
  v65[3] = v22;
  v65[4] = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v23 = sub_100024638(v65);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v23, enum case for Feature.measurement_with_labelplaceholder(_:), v22);
  swift_bridgeObjectRetain(a2);
  v24 = v21;
  LOBYTE(v22) = isFeatureEnabled(_:)(v65);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v65);
  v25 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v54, a2, v24, 4, 0, 0, 0, 0, v22 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v65, v25);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if ((v55 & 1) != 0)
  {
    if (qword_100826BE0 != -1)
      swift_once(&qword_100826BE0, sub_1000D272C);
    objc_msgSend((id)qword_10088A340, "size", v54);
    v27 = v26;
    v29 = v28;
    v30 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
    v31 = LayoutViewPlaceholder.init(representing:)(v27, v29);
    *((_QWORD *)&v63 + 1) = v30;
    v64 = &protocol witness table for LayoutViewPlaceholder;
    *(_QWORD *)&v62 = v31;
  }
  else
  {
    v64 = 0;
    v62 = 0u;
    v63 = 0u;
  }
  v32 = v59;
  if (qword_100826BC8 != -1)
    swift_once(&qword_100826BC8, sub_1000D2470);
  v33 = sub_10007AF70(v7, (uint64_t)qword_10088A328);
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v10, v33, v7);
  sub_100022500((uint64_t)v65, (uint64_t)v61);
  sub_10005054C((uint64_t)&v62, (uint64_t)v60);
  FootnoteLayout.init(metrics:labelView:chevronView:)(v10, v61, v60);
  v34 = objc_msgSend(v32, "pageMarginInsets");
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v43 = CGSize.subtracting(insets:)(v34);
  v45 = v44;
  v46 = sub_100005C94(&qword_10082CC68, (uint64_t (*)(uint64_t))&type metadata accessor for FootnoteLayout, (uint64_t)&protocol conformance descriptor for FootnoteLayout);
  v47 = v32;
  v48 = v58;
  v49 = dispatch thunk of Measurable.measurements(fitting:in:)(v47, v58, v46, v43, v45);
  v52 = CGSize.adding(outsets:)(v50, v36, v38, v40, v42, v49, v51);

  (*(void (**)(char *, uint64_t))(v57 + 8))(v13, v48);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v65);
  sub_10005050C((uint64_t)&v62);
  return v52;
}

void sub_1000D397C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Bool v17;
  void *v18;
  char v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  void *v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  _BYTE v31[32];
  _BYTE v32[24];
  UIImage_optional v33;

  v10 = sub_10007B804(&qword_10082CC80);
  __chkstk_darwin(v10);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = a6 + 16;
  sub_1000D75A0(a3, (uint64_t)v12);
  v14 = type metadata accessor for Artwork.URLTemplate(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_1000057AC((uint64_t)v12, &qword_10082CC80);
  }
  else
  {
    v19 = Artwork.URLTemplate.isSystemImage.getter();
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v12, v14);
    if ((v19 & 1) != 0)
    {
      if (a1)
      {
        v20 = objc_msgSend(a1, "imageByApplyingSymbolConfiguration:", a5);
        if (v20)
        {
          v21 = v20;
          objc_msgSend(v20, "size");
          v23 = v22;
          v25 = v24;

          swift_beginAccess(v13, v32, 0, 0);
          Strong = swift_unknownObjectWeakLoadStrong(v13);
          if (Strong)
          {
            v27 = (void *)Strong;
            v28 = (void (*)(_BYTE *, _QWORD))ArtworkView.frame.modify(v31);
            *(_QWORD *)(v29 + 16) = v23;
            *(_QWORD *)(v29 + 24) = v25;
            v28(v31, 0);

          }
        }
      }
    }
  }
  swift_beginAccess(v13, v31, 0, 0);
  v16 = swift_unknownObjectWeakLoadStrong(v13);
  if (v16)
  {
    v18 = (void *)v16;
    v33.value.super.isa = (Class)a1;
    v33.is_nil = 0;
    ArtworkView.show(image:isAnimationPermitted:)(v33, v17);

  }
}

uint64_t sub_1000D3B28(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  __n128 v52;
  uint64_t (*v53)(char *, _QWORD, uint64_t, __n128);
  uint64_t v54;
  char *v55;
  __n128 v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  id v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __n128 v82;
  uint64_t (*v83)(char *, uint64_t);
  uint64_t v84;
  __n128 v85;
  unsigned int (*v86)(char *, uint64_t);
  unsigned int v87;
  uint64_t (*v88)(char *, uint64_t);
  char *v89;
  uint64_t v90;
  unsigned int v91;
  char *v92;
  unsigned int v93;
  uint64_t (*v94)(char *, uint64_t);
  void (*v95)(char *, _QWORD, uint64_t);
  char *v96;
  uint64_t (*v97)(char *, uint64_t);
  char *v98;
  __n128 v99;
  __n128 v100;
  uint64_t v101;
  unsigned int (*v102)(char *, uint64_t);
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  __n128 v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  __n128 v117;
  void (*v118)(char *, uint64_t, __n128);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(char *, uint64_t);
  char *v129;
  __n128 v130;
  char *v131;
  __n128 v132;
  char *v133;
  uint64_t v134;
  char *v135;
  __n128 v136;
  char *v137;
  uint64_t v138;
  void *v139;
  char *v140;
  uint64_t v141;
  void *v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  void *v148;
  char *v149;
  void *v150;
  uint64_t v151;
  void *v152;
  id v153;
  uint64_t v154;
  id v155;
  Swift::String v156;
  void *object;
  uint64_t v158;
  uint64_t v159;
  uint64_t result;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  _QWORD *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t (*v188)(char *, uint64_t);
  char *v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _OWORD v195[2];
  _OWORD v196[2];

  v7 = v6;
  v177 = a5;
  v183 = a4;
  v182 = a3;
  v181 = a2;
  v10 = type metadata accessor for AutomationSemantics(0);
  v186 = *(_QWORD *)(v10 - 8);
  v187 = v10;
  __chkstk_darwin(v10);
  v185 = (char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10007B804((uint64_t *)&unk_100835F20);
  v13 = __chkstk_darwin(v12);
  v178 = (char *)&v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = type metadata accessor for BadgeViewSpacing(0, v13);
  v174 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v172 = (char **)((char *)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v173 = (char *)&v161 - v17;
  v18 = type metadata accessor for BadgeType(0);
  v19 = *(_QWORD *)(v18 - 8);
  v193 = v18;
  v194 = v19;
  __chkstk_darwin(v18);
  v179 = (char *)&v161 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v176 = (char *)&v161 - v22;
  __chkstk_darwin(v23);
  v190 = (char *)&v161 - v24;
  __chkstk_darwin(v25);
  v189 = (char *)&v161 - v26;
  __chkstk_darwin(v27);
  v171 = (char *)&v161 - v28;
  __chkstk_darwin(v29);
  v167 = (char *)&v161 - v30;
  v170 = type metadata accessor for BadgeValueViewAlignment(0);
  v188 = *(uint64_t (**)(char *, uint64_t))(v170 - 8);
  __chkstk_darwin(v170);
  v168 = (char *)&v161 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v169 = (char *)&v161 - v33;
  v34 = sub_10007B804(&qword_10083EF10);
  v35 = __chkstk_darwin(v34);
  v161 = (char *)&v161 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = type metadata accessor for BadgeLeadingValue(0, v35);
  v37 = *(_QWORD *)(v180 - 8);
  v38 = __chkstk_darwin(v180);
  v40 = (char *)&v161 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for BadgeCaptionCappingType(0, v38);
  v42 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v165 = (char *)&v161 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v161 - v45;
  v47 = type metadata accessor for ArtworkLoader(0);
  v162 = a6;
  v48 = *(_QWORD *)(a6 + qword_10088FD90);
  if (v48)
  {
    swift_retain(*(_QWORD *)(a6 + qword_10088FD90));
    v164 = sub_1000D5D6C();
    v163 = v49;
    swift_retain(v48);
    sub_1000D6104(a1, v48);
    v51 = v50;
    v184 = v48;
    v52 = swift_release(v48);
    v166 = v42;
    v53 = *(uint64_t (**)(char *, _QWORD, uint64_t, __n128))(v42 + 104);
    v191 = v46;
    v192 = v41;
    v54 = v53(v46, enum case for BadgeCaptionCappingType.none(_:), v41, v52);
    Badge.leadingValue.getter(v54);
    v55 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_leadingValue];
    v56 = swift_beginAccess(&v7[OBJC_IVAR____TtC8AppStore9BadgeView_leadingValue], v196, 33, 0);
    v57 = v55;
    v58 = v180;
    (*(void (**)(char *, char *, uint64_t, __n128))(v37 + 24))(v57, v40, v180, v56);
    swift_endAccess(v196);
    objc_msgSend(v7, "setNeedsLayout");
    (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v58);
    v59 = (uint64_t *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_valueText];
    v60 = *(_QWORD *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_valueText + 8];
    v61 = v163;
    *v59 = v164;
    v59[1] = v61;
    swift_bridgeObjectRelease(v60);
    sub_100432908();
    v62 = v51;
    sub_100435D3C(v51);

    v64 = Badge.heading.getter(v63);
    v66 = v64;
    v180 = (uint64_t)v62;
    if (v65)
    {
      *(_QWORD *)&v196[0] = v64;
      *((_QWORD *)&v196[0] + 1) = v65;
      v67 = (uint64_t)v161;
      static Locale.storefront.getter(v64);
      v68 = type metadata accessor for Locale(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v67, 0, 1, v68);
      v69 = sub_100069034();
      v66 = StringProtocol.uppercased(with:)(v67, &type metadata for String, v69);
      v71 = v70;
      sub_1000057AC(v67, &qword_10083EF10);
      swift_bridgeObjectRelease(*((_QWORD *)&v196[0] + 1));
    }
    else
    {
      v71 = 0;
    }
    v72 = v193;
    v73 = v167;
    v74 = v165;
    sub_100432818(v66, v71);
    v75 = objc_msgSend(v7, "traitCollection");
    v76 = UITraitCollection.prefersAccessibilityLayouts.getter(v75);

    if ((v76 & 1) != 0)
      v77 = 4;
    else
      v77 = 1;
    v78 = OBJC_IVAR____TtC8AppStore9BadgeView_alignment;
    *(_QWORD *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_alignment] = v77;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_valueLabel], "setTextAlignment:");
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_captionLabel], "setTextAlignment:", *(_QWORD *)&v7[v78]);
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_headingLabel], "setTextAlignment:", *(_QWORD *)&v7[v78]);
    objc_msgSend(v7, "setNeedsLayout");
    v79 = v166;
    v80 = v192;
    (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v74, v191, v192);
    v81 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_captionCappingType];
    v82 = swift_beginAccess(&v7[OBJC_IVAR____TtC8AppStore9BadgeView_captionCappingType], v196, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v79 + 24))(v81, v74, v80, v82);
    swift_endAccess(v196);
    objc_msgSend(v7, "setNeedsLayout");
    v83 = *(uint64_t (**)(char *, uint64_t))(v79 + 8);
    v84 = v83(v74, v80);
    v7[OBJC_IVAR____TtC8AppStore9BadgeView_isTruncatable] = dispatch thunk of Badge.isTruncatable.getter(v84) & 1;
    objc_msgSend(v7, "setNeedsLayout");
    Badge.type.getter(v85);
    v86 = *(unsigned int (**)(char *, uint64_t))(v194 + 88);
    v87 = v86(v73, v72);
    if (v87 == enum case for BadgeType.contentRating(_:))
    {
      v88 = v188;
      v89 = v168;
      v90 = v170;
      (*((void (**)(char *, _QWORD, uint64_t))v188 + 13))(v168, enum case for BadgeValueViewAlignment.center(_:), v170);
      v91 = enum case for BadgeType.chartPosition(_:);
      v92 = v171;
    }
    else
    {
      v93 = v87;
      v91 = enum case for BadgeType.chartPosition(_:);
      v92 = v171;
      v90 = v170;
      v89 = v168;
      if (v87 == enum case for BadgeType.chartPosition(_:))
      {
        v94 = v188;
        (*((void (**)(char *, _QWORD, uint64_t))v188 + 13))(v168, enum case for BadgeValueViewAlignment.topOfValueLabel(_:), v170);
        v91 = v93;
        v88 = v94;
      }
      else
      {
        v95 = (void (*)(char *, _QWORD, uint64_t))*((_QWORD *)v188 + 13);
        if (v87 == enum case for BadgeType.paragraph(_:))
        {
          v95(v168, enum case for BadgeValueViewAlignment.topOfView(_:), v170);
        }
        else
        {
          v95(v168, enum case for BadgeValueViewAlignment.baseline(_:), v170);
          (*(void (**)(char *, uint64_t))(v194 + 8))(v73, v193);
        }
        v88 = v188;
      }
    }
    v188 = v83;
    v96 = v169;
    (*((void (**)(char *, char *, uint64_t))v88 + 4))(v169, v89, v90);
    v97 = (void (**)(char *, _QWORD, uint64_t))v88;
    v98 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_valueViewAlignment];
    v99 = swift_beginAccess(&v7[OBJC_IVAR____TtC8AppStore9BadgeView_valueViewAlignment], v196, 33, 0);
    ((void (*)(char *, char *, uint64_t, __n128))v97[3])(v98, v96, v90, v99);
    swift_endAccess(v196);
    objc_msgSend(v7, "setNeedsLayout");
    v100.n128_f64[0] = ((double (*)(char *, uint64_t))v97[1])(v96, v90);
    Badge.type.getter(v100);
    v101 = v193;
    v102 = v86;
    if (v86(v92, v193) == v91)
    {
      v103 = v172;
      *v172 = 0;
      v104 = v174;
      v105 = v175;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v174 + 104))(v103, enum case for BadgeViewSpacing.spacing(_:), v175);
      v106 = v101;
      v107 = v194;
    }
    else
    {
      v108 = v92;
      v104 = v174;
      v103 = v172;
      v105 = v175;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v174 + 104))(v172, enum case for BadgeViewSpacing.standard(_:), v175);
      v107 = v194;
      (*(void (**)(char *, uint64_t))(v194 + 8))(v108, v101);
      v106 = v101;
    }
    v109 = v173;
    (*(void (**)(char *, _QWORD *, uint64_t))(v104 + 32))(v173, v103, v105);
    v110 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_spacing];
    v111 = swift_beginAccess(&v7[OBJC_IVAR____TtC8AppStore9BadgeView_spacing], v196, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v104 + 24))(v110, v109, v105, v111);
    swift_endAccess(v196);
    objc_msgSend(v7, "setNeedsLayout");
    v112.n128_f64[0] = (*(double (**)(char *, uint64_t))(v104 + 8))(v109, v105);
    Badge.type.getter(v112);
    (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v190, enum case for BadgeType.paragraph(_:), v106);
    v113 = sub_100005C94(&qword_10082CC70, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, (uint64_t)&protocol conformance descriptor for BadgeType);
    dispatch thunk of RawRepresentable.rawValue.getter(v196, v106, v113);
    dispatch thunk of RawRepresentable.rawValue.getter(v195, v106, v113);
    v114 = *((_QWORD *)&v196[0] + 1);
    v115 = *((_QWORD *)&v195[0] + 1);
    if (v196[0] == v195[0])
    {
      v116 = 1;
      v115 = *((_QWORD *)&v196[0] + 1);
    }
    else
    {
      v116 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v196[0], *((_QWORD *)&v196[0] + 1), *(_QWORD *)&v195[0], *((_QWORD *)&v195[0] + 1), 0);
    }
    swift_bridgeObjectRelease(v114);
    v117 = swift_bridgeObjectRelease(v115);
    v118 = *(void (**)(char *, uint64_t, __n128))(v107 + 8);
    v118(v190, v106, v117);
    ((void (*)(char *, uint64_t))v118)(v189, v106);
    v7[OBJC_IVAR____TtC8AppStore9BadgeView_requiresRemainingWidth] = v116 & 1;
    v119 = v177;
    if (v177)
    {
      *(_QWORD *)&v196[0] = v177;
      v120 = type metadata accessor for Action(0);
      v121 = type metadata accessor for ObjectGraph(0);
      v122 = sub_100005C94(&qword_10082A198, (uint64_t (*)(uint64_t))&type metadata accessor for Action, (uint64_t)&protocol conformance descriptor for Action);
      swift_retain(v119);
      v123 = v120;
      v124 = (uint64_t)v178;
      v125 = v122;
      v106 = v193;
      ComponentModel.pairedWith<A>(objectGraph:)(v162, v123, v121, v125);
      swift_release(v119);
      v126 = sub_10007B804((uint64_t *)&unk_100833700);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v124, 0, 1, v126);
    }
    else
    {
      v127 = sub_10007B804((uint64_t *)&unk_100833700);
      v124 = (uint64_t)v178;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v178, 1, 1, v127);
    }
    v128 = v188;
    sub_100432A20(v124);
    v129 = v176;
    Badge.type.getter(v130);
    v131 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_badgeType];
    v132 = swift_beginAccess(&v7[OBJC_IVAR____TtC8AppStore9BadgeView_badgeType], v196, 33, 0);
    (*(void (**)(char *, char *, uint64_t, __n128))(v194 + 40))(v131, v129, v106, v132);
    swift_endAccess(v196);
    v133 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_badgePositionInRibbon];
    *(_QWORD *)v133 = v181;
    v133[8] = v182 & 1;
    v134 = v183;
    *(_QWORD *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_overallBadgeCount] = v183;
    v135 = v179;
    Badge.type.getter(v136);
    if (v102(v135, v106) == enum case for BadgeType.rating(_:))
    {
      v137 = sub_1000D73B8();
      v138 = OBJC_IVAR____TtC8AppStore9BadgeView_captionView;
      v139 = *(void **)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_captionView];
      v140 = v137;
      if (v139)
      {
        objc_msgSend(v139, "removeFromSuperview");
        v139 = *(void **)&v7[v138];
      }
      v145 = v186;
      v144 = v187;
      v146 = v185;
      *(_QWORD *)&v7[v138] = v137;
      v147 = v137;

      v148 = *(void **)&v7[v138];
      v149 = v147;
      if (v148)
      {
        v149 = v148;
        objc_msgSend(v7, "addSubview:", v149);
        objc_msgSend(v7, "setNeedsLayout");

      }
      sub_100432804(0, 0);

      v150 = (void *)v180;
    }
    else
    {
      ((void (*)(char *, uint64_t))v118)(v135, v106);
      v141 = OBJC_IVAR____TtC8AppStore9BadgeView_captionView;
      v142 = *(void **)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_captionView];
      if (v142)
      {
        objc_msgSend(v142, "removeFromSuperview");
        v143 = *(void **)&v7[v141];
      }
      else
      {
        v143 = 0;
      }
      v145 = v186;
      v144 = v187;
      v146 = v185;
      *(_QWORD *)&v7[v141] = 0;

      v152 = *(void **)&v7[v141];
      if (v152)
      {
        v153 = v152;
        objc_msgSend(v7, "addSubview:", v153);
        objc_msgSend(v7, "setNeedsLayout");

      }
      if (v134 < 4 || (v151 = Badge.longCaption.getter(), !v154))
        v151 = Badge.caption.getter(v151);
      v150 = (void *)v180;
      sub_100432804(v151, v154);
    }
    sub_1004340DC();
    v155 = objc_msgSend(v7, "setNeedsLayout");
    *(_QWORD *)&v196[0] = 0x2E6567646162;
    *((_QWORD *)&v196[0] + 1) = 0xE600000000000000;
    v156._countAndFlagsBits = dispatch thunk of Badge.accessibilityIdentifier.getter(v155);
    object = v156._object;
    String.append(_:)(v156);
    swift_bridgeObjectRelease(object);
    v159 = *((_QWORD *)&v196[0] + 1);
    v158 = *(_QWORD *)&v196[0];
    memset(v196, 0, sizeof(v196));
    memset(v195, 0, sizeof(v195));
    static AutomationSemantics.productPage(elementName:id:parentId:)(v158, v159, v196, v195);
    swift_bridgeObjectRelease(v159);
    sub_1000057AC((uint64_t)v195, (uint64_t *)&unk_10082B490);
    sub_1000057AC((uint64_t)v196, (uint64_t *)&unk_10082B490);
    UIView.setAutomationSemantics(_:)(v146);
    swift_release(v184);

    (*(void (**)(char *, uint64_t))(v145 + 8))(v146, v144);
    return v128(v191, v192);
  }
  else
  {
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v47, v47);
    __break(1u);
  }
  return result;
}

double sub_1000D49DC(uint64_t (*a1)(char *, uint64_t), uint64_t a2, int a3, uint64_t a4, char *a5, __n128 a6, double a7, uint64_t a8, uint64_t a9)
{
  double v11;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  double v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t);
  uint64_t v58;
  int v59;
  id v60;
  double v61;
  double v62;
  double v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  Class isa;
  id v79;
  id v80;
  uint64_t v81;
  _QWORD *v82;
  id v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  __n128 v88;
  Swift::String v89;
  Swift::String v90;
  Swift::String v91;
  char *v92;
  uint64_t v93;
  BOOL v94;
  char v95;
  double v96;
  uint64_t v97;
  id v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  id v104;
  double v105;
  double v106;
  uint64_t v107;
  _QWORD *v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  double v119;
  id v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  uint64_t v128;
  char v129;
  id v130;
  double v131;
  double v132;
  uint64_t v133;
  char *v134;
  char *v135;
  double Width;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  _QWORD *v149;
  __n128 v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  _QWORD *v167;
  double v168;
  __n128 v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  __n128 v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  void (*v179)(char *, _QWORD *, uint64_t);
  char *v180;
  char *v181;
  uint64_t v182;
  id v183;
  double v184;
  int v186;
  int v187;
  char v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t countAndFlagsBits;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  uint64_t v205;
  uint64_t (*v206)(char *, uint64_t);
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  id v217;
  uint64_t v218;
  __int128 v219;
  __int128 v220;
  uint64_t v221;
  CGRect v222;

  countAndFlagsBits = a9;
  v11 = a6.n128_f64[0];
  v197 = a4;
  v204 = a3;
  v195 = a2;
  v192 = type metadata accessor for LabelPlaceholderCompatibility(0, a6);
  v191 = *(_QWORD *)(v192 - 8);
  v13 = __chkstk_darwin(v192);
  v190 = (char *)&v189 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = type metadata accessor for BadgeViewSpacing(0, v13);
  v201 = *(_QWORD *)(v202 - 8);
  __chkstk_darwin(v202);
  v200 = (uint64_t *)((char *)&v189 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __chkstk_darwin(v16);
  v199 = (char *)&v189 - v18;
  v205 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v17);
  v203 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin(v205);
  v20 = (char *)&v189 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10007B804(&qword_10083EF10);
  v22 = __chkstk_darwin(v21);
  v196 = (char *)&v189 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for BadgeCaptionCappingType(0, v22);
  v215 = *(_QWORD *)(v24 - 8);
  v216 = v24;
  __chkstk_darwin(v24);
  v26 = (char *)&v189 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v214 = (char *)&v189 - v28;
  v29 = type metadata accessor for BadgeType(0);
  v212 = *(_QWORD *)(v29 - 8);
  v213 = v29;
  __chkstk_darwin(v29);
  v198 = (char *)&v189 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v189 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v189 - v35;
  v209 = type metadata accessor for FontUseCase(0);
  v210 = *(_QWORD *)(v209 - 8);
  __chkstk_darwin(v209);
  v38 = (char *)&v189 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v208 = (char *)&v189 - v40;
  v41 = sub_1000D5D6C();
  v207 = v43;
  if (v43)
  {
    v44 = v41;
    v194 = v38;
    v45 = v33;
    v206 = a1;
    v46 = v20;
    v47 = v26;
    v48 = a5;
    if (qword_100827E48 != -1)
      swift_once(&qword_100827E48, sub_1003A560C);
    v49 = v209;
    v50 = sub_10007AF70(v209, (uint64_t)qword_10088D508);
    v51 = v210;
    v52 = v208;
    (*(void (**)(char *, uint64_t, uint64_t))(v210 + 16))(v208, v50, v49);
    v53 = type metadata accessor for Feature(0);
    *((_QWORD *)&v220 + 1) = v53;
    v221 = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v54 = sub_100024638(&v219);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v54, enum case for Feature.measurement_with_labelplaceholder(_:), v53);
    LOBYTE(v53) = isFeatureEnabled(_:)(&v219);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v219);
    v188 = v53 & 1;
    a5 = v48;
    v55 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v44, v207, v52, 4, 0, 0, 0, 0, v11, a7, v48, v188);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v49);
    if (v55 > v11)
      v55 = v11;
    v26 = v47;
    v20 = v46;
    v33 = v45;
    v38 = v194;
  }
  else
  {
    v55 = 0.0;
  }
  v211 = v20;
  Badge.type.getter(v42);
  v56 = v213;
  v57 = *(uint64_t (**)(char *, uint64_t))(v212 + 88);
  v58 = v57(v36, v213);
  v59 = enum case for BadgeType.rating(_:);
  v206 = v57;
  if ((_DWORD)v58 == enum case for BadgeType.rating(_:))
  {
    v60 = objc_msgSend(a5, "traitCollection");
    v61 = sub_100327E88(1, 0, 1, 5.0);
    v63 = v62;

LABEL_39:
    v70 = v197;
    goto LABEL_57;
  }
  if ((_DWORD)v58 == enum case for BadgeType.contentRating(_:))
  {
    v65 = Badge.content.getter(v58);
    v66 = BadgeContentKeyContentRatingResource.getter();
    v68 = v67;
    if (*(_QWORD *)(v65 + 16))
    {
      v69 = sub_100061BFC(v66, v67);
      v70 = v197;
      if ((v71 & 1) != 0)
      {
        sub_100061B84(*(_QWORD *)(v65 + 56) + 32 * v69, (uint64_t)&v219);
      }
      else
      {
        v219 = 0u;
        v220 = 0u;
      }
    }
    else
    {
      v219 = 0u;
      v220 = 0u;
      v70 = v197;
    }
    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v65);
    if (*((_QWORD *)&v220 + 1))
    {
      if ((swift_dynamicCast(&v217, &v219, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v97 = v218;
        v98 = sub_10007AF88((uint64_t)v217, v218, 0, v64);
        objc_msgSend(v98, "size", swift_bridgeObjectRelease(v97).n128_f64[0]);
        v61 = v99;
        v63 = v100;

LABEL_56:
        v57 = v206;
        goto LABEL_57;
      }
LABEL_55:
      v63 = 0.0;
      v61 = 0.0;
      goto LABEL_56;
    }
LABEL_54:
    sub_1000057AC((uint64_t)&v219, (uint64_t *)&unk_10082B490);
    goto LABEL_55;
  }
  if ((_DWORD)v58 == enum case for BadgeType.chartPosition(_:))
  {
    v72._countAndFlagsBits = 0xD000000000000020;
    v72._object = (void *)0x80000001006AAE80;
    v73._countAndFlagsBits = 0;
    v73._object = (void *)0xE000000000000000;
    v74 = localizedString(_:comment:)(v72, v73);
    countAndFlagsBits = v74._countAndFlagsBits;
    if (qword_100827E50 != -1)
      swift_once(&qword_100827E50, sub_1003A5628);
    v75 = v209;
    v76 = sub_10007AF70(v209, (uint64_t)qword_10088D520);
    (*(void (**)(char *, uint64_t, uint64_t))(v210 + 16))(v38, v76, v75);
    v194 = a5;
    v77 = objc_msgSend(a5, "traitCollection");
    isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v77).super.isa;
    v79 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);

    if (v79)
    {
      v80 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v79, 0.0);

      if (v80)
      {
        v81 = type metadata accessor for Feature(0);
        *((_QWORD *)&v220 + 1) = v81;
        v221 = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
        v82 = sub_100024638(&v219);
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v81 - 8) + 104))(v82, enum case for Feature.measurement_with_labelplaceholder(_:), v81);
        v83 = v80;
        LOBYTE(v81) = isFeatureEnabled(_:)(&v219);
        _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v219);
        LOBYTE(v186) = v81 & 1;
        v84 = v190;
        LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(countAndFlagsBits, v74._object, v83, 4, 0, 0, 0, 0, v186);
        v85 = sub_100005C94((unint64_t *)&unk_10083D8C0, (uint64_t (*)(uint64_t))&type metadata accessor for LabelPlaceholderCompatibility, (uint64_t)&protocol conformance descriptor for LabelPlaceholderCompatibility);
        a5 = v194;
        v86 = v192;
        v61 = dispatch thunk of Measurable.measurements(fitting:in:)(v194, v192, v85, v11, a7);
        v63 = v87;

        (*(void (**)(char *, uint64_t))(v191 + 8))(v84, v86);
LABEL_36:
        if (v61 > v11)
          v61 = v11;
        (*(void (**)(char *, uint64_t, __n128))(v210 + 8))(v38, v209, v88);
        goto LABEL_39;
      }
    }
    else
    {

    }
    v107 = type metadata accessor for Feature(0);
    *((_QWORD *)&v220 + 1) = v107;
    v221 = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v108 = sub_100024638(&v219);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v107 - 8) + 104))(v108, enum case for Feature.measurement_with_labelplaceholder(_:), v107);
    LOBYTE(v107) = isFeatureEnabled(_:)(&v219);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v219);
    LOBYTE(v187) = v107 & 1;
    a5 = v194;
    v61 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(countAndFlagsBits, v74._object, v38, 4, 0, 0, 0, 0, v11, a7, v194, v187);
    v63 = v109;
    v88 = swift_bridgeObjectRelease(v74._object);
    goto LABEL_36;
  }
  if ((_DWORD)v58 == enum case for BadgeType.editorsChoice(_:))
  {
    type metadata accessor for EditorsChoiceView();
    v89._countAndFlagsBits = 0xD000000000000050;
    v90._object = (void *)0x80000001006AAEB0;
    v89._object = (void *)0x80000001006AAED0;
    v90._countAndFlagsBits = 0xD000000000000017;
    v91 = localizedString(_:comment:)(v90, v89);
    v92 = v33;
    v93 = String.count.getter(v91._countAndFlagsBits, v91._object);
    v57 = v206;
    swift_bridgeObjectRelease(v91._object);
    v94 = v93 < 19;
    v33 = v92;
    v95 = v94;
    sub_100271864(v95, 1, 0, a5, v11, 0, 2u);
    v61 = v64.n128_f64[0];
    v63 = v96;
    goto LABEL_39;
  }
  if ((_DWORD)v58 == enum case for BadgeType.artwork(_:))
  {
    v70 = v197;
    if (qword_1008287F0 != -1)
      swift_once(&qword_1008287F0, sub_100432B44);
    sub_10007AF70(v205, (uint64_t)qword_10088F0A8);
    v101 = BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    v103 = v102;
    v104 = objc_msgSend(a5, "traitCollection");
    v105 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v104);

    v64.n128_f64[0] = CGSize.scaled(_:)(v105, v101, v103);
    v61 = v64.n128_f64[0];
    v63 = v106;
  }
  else if ((_DWORD)v58 == enum case for BadgeType.paragraph(_:))
  {
    LODWORD(countAndFlagsBits) = enum case for BadgeType.rating(_:);
    v194 = v33;
    v110 = sub_1000D5ED4();
    v112 = v111;
    if (qword_100827E40 != -1)
      swift_once(&qword_100827E40, sub_1003A55F0);
    v113 = v209;
    v114 = sub_10007AF70(v209, (uint64_t)qword_10088D4F0);
    v115 = v210;
    v116 = v208;
    (*(void (**)(char *, uint64_t, uint64_t))(v210 + 16))(v208, v114, v113);
    v117 = type metadata accessor for Feature(0);
    *((_QWORD *)&v220 + 1) = v117;
    v221 = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v118 = sub_100024638(&v219);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v117 - 8) + 104))(v118, enum case for Feature.measurement_with_labelplaceholder(_:), v117);
    LOBYTE(v117) = isFeatureEnabled(_:)(&v219);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v219);
    LOBYTE(v187) = v117 & 1;
    v119 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v110, v112, v116, 4, 0, 0, 0, 0, v11, a7, a5, v187);
    v120 = objc_msgSend(a5, "traitCollection");
    v61 = sub_1004516DC(v120, v119, v11);
    v63 = v121;

    (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v113);
    v64 = swift_bridgeObjectRelease(v112);
    v70 = v197;
    v57 = v206;
    v33 = v194;
    v59 = countAndFlagsBits;
  }
  else
  {
    if ((_DWORD)v58 != enum case for BadgeType.friendsPlaying(_:))
    {
      (*(void (**)(char *, uint64_t))(v212 + 8))(v36, v56);
      v63 = 0.0;
      v61 = 0.0;
      goto LABEL_39;
    }
    v122 = Badge.content.getter(v58);
    v123 = BadgeContentKeyNativeContentView.getter();
    v125 = v124;
    if (*(_QWORD *)(v122 + 16))
    {
      v126 = sub_100061BFC(v123, v124);
      v70 = v197;
      if ((v127 & 1) != 0)
      {
        sub_100061B84(*(_QWORD *)(v122 + 56) + 32 * v126, (uint64_t)&v219);
      }
      else
      {
        v219 = 0u;
        v220 = 0u;
      }
    }
    else
    {
      v219 = 0u;
      v220 = 0u;
      v70 = v197;
    }
    swift_bridgeObjectRelease(v125);
    swift_bridgeObjectRelease(v122);
    if (!*((_QWORD *)&v220 + 1))
      goto LABEL_54;
    v128 = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
    v129 = swift_dynamicCast(&v217, &v219, (char *)&type metadata for Any + 8, v128, 6);
    v57 = v206;
    if ((v129 & 1) != 0)
    {
      v130 = v217;
      objc_msgSend(v217, "sizeThatFits:", v11, a7);
      v61 = v131;
      v63 = v132;

    }
    else
    {
      v63 = 0.0;
      v61 = 0.0;
    }
  }
LABEL_57:
  Badge.type.getter(v64);
  v133 = v213;
  v134 = a5;
  if (v57(v33, v213) == v59)
  {
    v135 = sub_1000D73B8();
    objc_msgSend(v135, "frame");
    Width = CGRectGetWidth(v222);

    v137 = swift_bridgeObjectRelease(v207);
  }
  else
  {
    v138 = (*(uint64_t (**)(char *, uint64_t))(v212 + 8))(v33, v133);
    if (v70 >= 4 && (v138 = Badge.longCaption.getter(v138), v139) || (v138 = Badge.caption.getter(v138), v139))
    {
      v140 = v138;
      v141 = v139;
      v142 = v26;
      v143 = v70;
      if (qword_100827E60 != -1)
        swift_once(&qword_100827E60, sub_1003A5758);
      v144 = v209;
      v145 = sub_10007AF70(v209, (uint64_t)qword_10088D550);
      v146 = v210;
      v147 = v208;
      (*(void (**)(char *, uint64_t, uint64_t))(v210 + 16))(v208, v145, v144);
      v148 = type metadata accessor for Feature(0);
      *((_QWORD *)&v220 + 1) = v148;
      v221 = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
      v149 = sub_100024638(&v219);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v148 - 8) + 104))(v149, enum case for Feature.measurement_with_labelplaceholder(_:), v148);
      LOBYTE(v148) = isFeatureEnabled(_:)(&v219);
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v219);
      LOBYTE(v187) = v148 & 1;
      Width = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v140, v141, v147, 4, 0, 0, 0, 0, v11, a7, v134, v187);
      v150 = swift_bridgeObjectRelease(v141);
      (*(void (**)(char *, uint64_t, __n128))(v146 + 8))(v147, v144, v150);
      v137 = swift_bridgeObjectRelease(v207);
      if (Width > v11)
        Width = v11;
      v70 = v143;
      v26 = v142;
    }
    else
    {
      v137 = swift_bridgeObjectRelease(v207);
      Width = 0.0;
    }
  }
  v151.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t, __n128))(v215 + 104))(v214, enum case for BadgeCaptionCappingType.none(_:), v216, v137);
  v152 = Badge.heading.getter(v151);
  if (v153)
  {
    v154 = v26;
    v155 = v70;
    *(_QWORD *)&v219 = v152;
    *((_QWORD *)&v219 + 1) = v153;
    v156 = (uint64_t)v196;
    static Locale.storefront.getter(v152);
    v157 = type metadata accessor for Locale(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 56))(v156, 0, 1, v157);
    v158 = sub_100069034();
    v159 = StringProtocol.uppercased(with:)(v156, &type metadata for String, v158);
    v161 = v160;
    sub_1000057AC(v156, &qword_10083EF10);
    swift_bridgeObjectRelease(*((_QWORD *)&v219 + 1));
    if (qword_100827E68 != -1)
      swift_once(&qword_100827E68, sub_1003A5770);
    v162 = v209;
    v163 = sub_10007AF70(v209, (uint64_t)qword_10088D568);
    v164 = v210;
    v165 = v208;
    (*(void (**)(char *, uint64_t, uint64_t))(v210 + 16))(v208, v163, v162);
    v166 = type metadata accessor for Feature(0);
    *((_QWORD *)&v220 + 1) = v166;
    v221 = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
    v167 = sub_100024638(&v219);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v166 - 8) + 104))(v167, enum case for Feature.measurement_with_labelplaceholder(_:), v166);
    LOBYTE(v166) = isFeatureEnabled(_:)(&v219);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v219);
    LOBYTE(v187) = v166 & 1;
    v168 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v159, v161, v165, 4, 0, 0, 0, 0, v11, a7, v134, v187);
    v169 = swift_bridgeObjectRelease(v161);
    (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v165, v162, v169);
    if (v168 > v11)
      v168 = v11;
    v70 = v155;
    v26 = v154;
  }
  else
  {
    v168 = 0.0;
  }
  v170 = v205;
  v171 = v203;
  v172 = v202;
  v173 = v198;
  if (qword_1008287F0 != -1)
    swift_once(&qword_1008287F0, sub_100432B44);
  v174 = sub_10007AF70(v170, (uint64_t)qword_10088F0A8);
  (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v211, v174, v170);
  (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v26, v214, v216);
  BadgeViewRibbonLayout.Metrics.captionCappingType.setter(v26);
  Badge.type.getter(v175);
  v176 = v213;
  if (v206(v173, v213) == enum case for BadgeType.chartPosition(_:))
  {
    v177 = v200;
    *v200 = 0;
    v178 = v201;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v201 + 104))(v177, enum case for BadgeViewSpacing.spacing(_:), v172);
  }
  else
  {
    v178 = v201;
    v177 = v200;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v201 + 104))(v200, enum case for BadgeViewSpacing.standard(_:), v172);
    (*(void (**)(char *, uint64_t))(v212 + 8))(v173, v176);
  }
  v179 = *(void (**)(char *, _QWORD *, uint64_t))(v178 + 32);
  v180 = v199;
  v179(v199, v177, v172);
  v181 = v180;
  v182 = (uint64_t)v211;
  BadgeViewRibbonLayout.Metrics.spacingType.setter(v181);
  if ((v204 & 1) == 0)
  {
    v183 = objc_msgSend(v134, "traitCollection");
    sub_100435B24(v182, v195, v70);

  }
  v184 = static BadgeViewRibbonLayout.measurements(valueLabelWidth:viewSize:captionWidth:headingLabelWidth:fitting:using:in:)(v182, v134, v55, v61, v63, Width, v168, v11, a7);
  (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v182, v170);
  (*(void (**)(char *, uint64_t))(v215 + 8))(v214, v216);
  return v184;
}

uint64_t sub_1000D5D6C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v0 = type metadata accessor for BadgeType(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Badge.type.getter(v2);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v4, v0);
  if (v5 == enum case for BadgeType.contentRating(_:))
  {
    v6 = Badge.content.getter();
    v7 = BadgeContentKeyContentRating.getter();
  }
  else
  {
    if (v5 != enum case for BadgeType.chartPosition(_:))
    {
      v15 = 0;
      v16 = 0;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      return v15;
    }
    v6 = Badge.content.getter();
    v7 = BadgeContentKeyChartPosition.getter();
  }
  v9 = v8;
  if (*(_QWORD *)(v6 + 16) && (v10 = sub_100061BFC(v7, v8), (v11 & 1) != 0))
  {
    sub_100061B84(*(_QWORD *)(v6 + 56) + 32 * v10, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v6);
  if (*((_QWORD *)&v14 + 1))
  {
    if ((swift_dynamicCast(&v15, &v13, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return v15;
  }
  else
  {
    sub_1000057AC((uint64_t)&v13, (uint64_t *)&unk_10082B490);
  }
  v15 = 0;
  v16 = 0;
  return v15;
}

uint64_t sub_1000D5ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __n128 v11;
  void (*v12)(char *, uint64_t, __n128);
  uint64_t v13;
  char v14;
  __n128 v15;
  void (*v16)(char *, uint64_t, __n128);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v0 = type metadata accessor for BadgeType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - v6;
  Badge.type.getter(v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for BadgeType.paragraph(_:), v0);
  v8 = sub_100005C94(&qword_10082CC70, (uint64_t (*)(uint64_t))&type metadata accessor for BadgeType, (uint64_t)&protocol conformance descriptor for BadgeType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v24, v0, v8);
  dispatch thunk of RawRepresentable.rawValue.getter(&v26, v0, v8);
  v9 = *((_QWORD *)&v24 + 1);
  v10 = v26;
  if (v24 == v26)
  {
    v11 = swift_bridgeObjectRelease_n(*((_QWORD *)&v24 + 1), 2);
    v12 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
    v12(v3, v0, v11);
    v13 = ((uint64_t (*)(char *, uint64_t))v12)(v7, v0);
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, *((_QWORD *)&v24 + 1), v26, *((_QWORD *)&v26 + 1), 0);
    swift_bridgeObjectRelease(v9);
    v15 = swift_bridgeObjectRelease(*((_QWORD *)&v10 + 1));
    v16 = *(void (**)(char *, uint64_t, __n128))(v1 + 8);
    v16(v3, v0, v15);
    v13 = ((uint64_t (*)(char *, uint64_t))v16)(v7, v0);
    if ((v14 & 1) == 0)
      return 0;
  }
  v17 = Badge.content.getter(v13);
  v18 = BadgeContentKeyParagraphText.getter();
  v20 = v19;
  if (*(_QWORD *)(v17 + 16) && (v21 = sub_100061BFC(v18, v19), (v22 & 1) != 0))
  {
    sub_100061B84(*(_QWORD *)(v17 + 56) + 32 * v21, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v17);
  if (*((_QWORD *)&v25 + 1))
  {
    if ((swift_dynamicCast(&v26, &v24, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return v26;
  }
  else
  {
    sub_1000057AC((uint64_t)&v24, (uint64_t *)&unk_10082B490);
  }
  return 0;
}

void sub_1000D6104(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;
  NSString v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t, id);
  void (*v50)(char *, _QWORD, uint64_t);
  char *v51;
  id v52;
  void *v53;
  id v54;
  Class isa;
  id v56;
  id v57;
  Swift::String v58;
  Swift::String v59;
  void *object;
  NSString v61;
  void *v62;
  id v63;
  id v64;
  __n128 v65;
  uint64_t v66;
  id v67;
  Swift::String v68;
  Swift::String v69;
  Swift::String v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  double v76;
  double v77;
  double v78;
  id v79;
  double v80;
  double v81;
  double v82;
  double v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  __n128 v87;
  uint64_t (*v88)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  double v92;
  id v93;
  id v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  id v102;
  double v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  id v110;
  id v111;
  double v112;
  double v113;
  double v114;
  id v115;
  double v116;
  double v117;
  double v118;
  id v119;
  __n128 v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  double v129;
  id v130;
  id v131;
  __n128 v132;
  char v133;
  double v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(__int128 *, _QWORD);
  uint64_t v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  __n128 v143;
  uint64_t v144;
  void *v145;
  NSString v146;
  uint64_t v147;
  char *v148;
  void *v149;
  char *v150;
  NSString v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  uint64_t v158;
  double v159;
  uint64_t v160;
  void (*v161)(__int128 *, _QWORD);
  uint64_t v162;
  uint64_t v163;
  void *v164;
  id v165;
  uint64_t v166;
  id v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t i;
  uint64_t v184;
  uint64_t v185;
  __n128 v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  unint64_t v193;
  _QWORD v194[2];
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  id v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  __int128 v211;
  __int128 v212;
  uint64_t v213;

  v196 = a2;
  v3 = type metadata accessor for AvatarShowcaseLayoutConfiguration(0, a2);
  __chkstk_darwin(v3);
  v195 = (char *)v194 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = type metadata accessor for DirectionalTextAlignment(0);
  v5 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin(v203);
  v204 = (char *)v194 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v7);
  v9 = (char *)v194 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)type metadata accessor for FontUseCase(0);
  v206 = *(v10 - 1);
  v207 = v10;
  __chkstk_darwin(v10);
  v205 = (char *)v194 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Artwork.Style(0);
  v13 = __chkstk_darwin(v12);
  v200 = (char *)v194 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = type metadata accessor for Artwork.Crop(0, v13);
  v198 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin(v199);
  v197 = (char *)v194 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = type metadata accessor for AspectRatio(0);
  v16 = *(_QWORD *)(v202 - 8);
  v17 = __chkstk_darwin(v202);
  v201 = (char *)v194 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for BadgeViewRibbonLayout.Metrics(0, v17);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)v194 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for BadgeType(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)v194 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  Badge.type.getter(v25);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v27, v23);
  if ((_DWORD)v28 == enum case for BadgeType.rating(_:))
  {
    v29 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BadgeParagraphView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v30 = Badge.content.getter(v29);
    v31 = BadgeContentKeyRatingFormatted.getter();
    v33 = v32;
    if (*(_QWORD *)(v30 + 16) && (v34 = sub_100061BFC(v31, v32), (v35 & 1) != 0))
    {
      sub_100061B84(*(_QWORD *)(v30 + 56) + 32 * v34, (uint64_t)&v211);
    }
    else
    {
      v211 = 0u;
      v212 = 0u;
    }
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v30);
    if (*((_QWORD *)&v212 + 1))
    {
      if ((swift_dynamicCast(&v209, &v211, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v42 = v210;
        v43 = *(void **)&v29[OBJC_IVAR____TtC8AppStore18BadgeParagraphView_paragraphLabel];
        v44 = String._bridgeToObjectiveC()();
LABEL_23:
        objc_msgSend(v43, "setText:", v44);

LABEL_24:
        objc_msgSend(v29, "setNeedsLayout");
        swift_bridgeObjectRelease(v42);
        return;
      }
    }
    else
    {
      sub_1000057AC((uint64_t)&v211, (uint64_t *)&unk_10082B490);
    }
    v44 = 0;
    v42 = 0;
    v43 = *(void **)&v29[OBJC_IVAR____TtC8AppStore18BadgeParagraphView_paragraphLabel];
    goto LABEL_23;
  }
  v194[1] = a1;
  if ((_DWORD)v28 == enum case for BadgeType.contentRating(_:))
  {
    v36 = Badge.content.getter(v28);
    v37 = BadgeContentKeyContentRatingResource.getter();
    v39 = v38;
    if (*(_QWORD *)(v36 + 16) && (v40 = sub_100061BFC(v37, v38), (v41 & 1) != 0))
    {
      sub_100061B84(*(_QWORD *)(v36 + 56) + 32 * v40, (uint64_t)&v211);
    }
    else
    {
      v211 = 0u;
      v212 = 0u;
    }
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v36);
    if (*((_QWORD *)&v212 + 1))
    {
      if ((swift_dynamicCast(&v209, &v211, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v66 = v210;
        v67 = sub_10007AF88(v209, v210, 0, v65);
        swift_bridgeObjectRelease(v66);
        objc_msgSend(objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v67), "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 1);

      }
      return;
    }
LABEL_84:
    sub_1000057AC((uint64_t)&v211, (uint64_t *)&unk_10082B490);
    return;
  }
  if ((_DWORD)v28 == enum case for BadgeType.chartPosition(_:))
  {
    if (qword_100827E50 != -1)
      swift_once(&qword_100827E50, sub_1003A5628);
    v45 = v207;
    v46 = sub_10007AF70((uint64_t)v207, (uint64_t)qword_10088D520);
    v48 = v205;
    v47 = v206;
    v49 = *(void (**)(char *, uint64_t, id))(v206 + 16);
    v49(v205, v46, v45);
    v49(v9, (uint64_t)v48, v45);
    (*(void (**)(char *, _QWORD, uint64_t, id))(v47 + 56))(v9, 0, 1, v45);
    v50 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
    v51 = v204;
    v50(v204, enum case for DirectionalTextAlignment.none(_:), v203);
    v52 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
    v53 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v9, 1, 2, 0, 0, v51, 0, 0);
    v54 = objc_msgSend(v208, "traitCollection");
    isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v54).super.isa;
    v56 = -[objc_class fontDescriptorWithDesign:](isa, "fontDescriptorWithDesign:", UIFontDescriptorSystemDesignRounded);

    if (v56)
    {
      v57 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v56, 0.0);

      if (!v57)
      {
LABEL_20:
        objc_msgSend(v53, "setTextAlignment:", 1);
        v58._countAndFlagsBits = 0xD000000000000020;
        v58._object = (void *)0x80000001006AAE80;
        v59._countAndFlagsBits = 0;
        v59._object = (void *)0xE000000000000000;
        object = localizedString(_:comment:)(v58, v59)._object;
        v61 = String._bridgeToObjectiveC()();
        objc_msgSend(v53, "setText:", v61, swift_bridgeObjectRelease(object).n128_f64[0]);

        v62 = (void *)objc_opt_self(UIColor);
        v63 = v53;
        v64 = objc_msgSend(v62, "systemGrayColor");
        objc_msgSend(v63, "setTextColor:", v64);

        (*(void (**)(char *, id))(v47 + 8))(v48, v45);
        return;
      }
      objc_msgSend(v53, "setFont:", v57);
      v54 = v57;
    }

    goto LABEL_20;
  }
  if ((_DWORD)v28 == enum case for BadgeType.editorsChoice(_:))
  {
    v68._countAndFlagsBits = 0xD000000000000050;
    v69._object = (void *)0x80000001006AAEB0;
    v68._object = (void *)0x80000001006AAED0;
    v69._countAndFlagsBits = 0xD000000000000017;
    v70 = localizedString(_:comment:)(v69, v68);
    v71 = String.count.getter(v70._countAndFlagsBits, v70._object);
    swift_bridgeObjectRelease(v70._object);
    v72 = objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
    sub_10026FDF4(v71 < 19, 1, 0, 0, 2u);
    return;
  }
  if ((_DWORD)v28 == enum case for BadgeType.artwork(_:))
  {
    v73 = Badge.artwork.getter();
    if (!v73)
      return;
    v74 = v73;
    v75 = v208;
    sub_100434268((uint64_t)v22);
    v76 = BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    v78 = v77;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v79 = objc_msgSend(v75, "traitCollection");
    v80 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v79);

    v81 = CGSize.scaled(_:)(v80, v76, v78);
    v83 = v82;
    Artwork.size.getter(v84);
    v85 = v201;
    v87 = AspectRatio.init(_:_:)(v86);
    LOBYTE(v79) = AspectRatio.isLandscape.getter(v87);
    v88 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
    v89 = v202;
    v90 = v88(v85, v202);
    if ((v79 & 1) != 0)
    {
      Artwork.size.getter(v90);
      AspectRatio.init(_:_:)(v91);
      v81 = AspectRatio.maxSize(filling:)(v81, v83);
      v83 = v92;
      v88(v85, v89);
    }
    v93 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkView(0)), "initWithFrame:", 0.0, 0.0, v81, v83);
    v94 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:", UIFontTextStyleTitle1);
    v207 = v94;
    v95 = ArtworkView.preferredSymbolConfiguration.setter(v94);
    v96 = v197;
    v97 = Artwork.crop.getter(v95);
    v98 = Artwork.Crop.preferredContentMode.getter(v97);
    (*(void (**)(char *, uint64_t))(v198 + 8))(v96, v199);
    v99 = Artwork.config(_:mode:prefersLayeredImage:)(v98, 0, v81, v83);
    v100 = v200;
    Artwork.style.getter(v99);
    v101 = ArtworkView.style.setter(v100);
    v102 = objc_msgSend(v93, "setContentMode:", Artwork.contentMode.getter(v101));
    v103 = ArtworkLoaderConfig.size.getter(v102);
    v105 = ArtworkView.imageSize.setter(v103, v104);
    v106 = Artwork.backgroundColor.getter(v105);
    if (!v106)
    {
      v107 = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v106 = static UIColor.placeholderBackground.getter(v107);
    }
    ArtworkView.backgroundColor.setter(v106);
    v108 = (void *)objc_opt_self(UIColor);
    v109 = ArtworkView.backgroundColor.setter(objc_msgSend(v108, "clearColor"));
    if ((Badge.isMonochrome.getter(v109) & 1) != 0)
      v110 = objc_msgSend(v108, "secondaryLabelColor");
    else
      v110 = 0;
    v129 = ArtworkView.artworkTintColor.setter(v110);
    if ((dispatch thunk of Artwork.isBundleImage.getter(v129) & 1) == 0)
    {
      v139 = v207;
      if (v196)
      {
        v213 = 0;
        v211 = 0u;
        v212 = 0u;
        v140 = swift_allocObject(&unk_1007591D8, 24, 7);
        swift_unknownObjectWeakInit(v140 + 16, v93);
        v141 = swift_allocObject(&unk_100759200, 32, 7);
        *(_QWORD *)(v141 + 16) = v139;
        *(_QWORD *)(v141 + 24) = v140;
        v142 = v139;
        v143 = swift_retain(v140);
        ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v99, 2, 1, &v211, sub_1000D7598, v141, v143);
        swift_release(v141);
        sub_1000057AC((uint64_t)&v211, &qword_100829F10);
        swift_release(v140);
      }
      goto LABEL_66;
    }
    v130 = sub_1002D362C(v74, 0);
    v131 = v130;
    ArtworkView.image.setter(v130);
    if (v130)
    {
      v132 = AspectRatio.init(_:_:)(objc_msgSend(v131, "size"));
      v133 = AspectRatio.isPortrait.getter(v132);
      v88(v85, v89);
      AspectRatio.init(_:_:)(objc_msgSend(v131, "size"));
      if ((v133 & 1) != 0)
      {
        v134 = AspectRatio.maxSize(fitting:)(v81, v83);
        v136 = v135;
        v88(v85, v89);
        v137 = (void (*)(__int128 *, _QWORD))ArtworkView.frame.modify(&v211);
        *(double *)(v138 + 16) = v134;
        *(_QWORD *)(v138 + 24) = v136;
        v137(&v211, 0);

        v139 = v207;
LABEL_66:
        v163 = OBJC_IVAR____TtC8AppStore9BadgeView_artworkView;
        v164 = *(void **)&v75[OBJC_IVAR____TtC8AppStore9BadgeView_artworkView];
        *(_QWORD *)&v75[OBJC_IVAR____TtC8AppStore9BadgeView_artworkView] = v93;
        swift_release(v74);
        swift_release(v99);

        v165 = *(id *)&v75[v163];
        return;
      }
      v159 = AspectRatio.maxSize(filling:)(v81, v83);
      v158 = v160;
      v88(v85, v89);
    }
    else
    {
      v158 = 0;
      v159 = 0.0;
    }
    v139 = v207;
    v161 = (void (*)(__int128 *, _QWORD))ArtworkView.frame.modify(&v211);
    *(double *)(v162 + 16) = v159;
    *(_QWORD *)(v162 + 24) = v158;
    v161(&v211, 0);

    goto LABEL_66;
  }
  if ((_DWORD)v28 == enum case for BadgeType.controller(_:))
  {
    v111 = v208;
    sub_100434268((uint64_t)v22);
    v112 = BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    v114 = v113;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v115 = objc_msgSend(v111, "traitCollection");
    v116 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v115);

    v117 = CGSize.scaled(_:)(v116, v112, v114);
    v119 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, v117, v118);
    v121 = sub_10007AF88(0x6C6C6F72746E6F43, 0xEF65676461427265, 0, v120);
    objc_msgSend(v119, "setImage:", v121);

    objc_msgSend(v119, "setContentMode:", 1);
    v122 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
    objc_msgSend(v119, "setTintColor:", v122);

    return;
  }
  if ((_DWORD)v28 == enum case for BadgeType.storefrontContentRating(_:))
  {
    v123 = Badge.content.getter(v28);
    v124 = BadgeContentKeyContentRating.getter();
    v126 = v125;
    if (*(_QWORD *)(v123 + 16) && (v127 = sub_100061BFC(v124, v125), (v128 & 1) != 0))
    {
      sub_100061B84(*(_QWORD *)(v123 + 56) + 32 * v127, (uint64_t)&v211);
    }
    else
    {
      v211 = 0u;
      v212 = 0u;
    }
    swift_bridgeObjectRelease(v126);
    swift_bridgeObjectRelease(v123);
    if (!*((_QWORD *)&v212 + 1))
      goto LABEL_84;
    if ((swift_dynamicCast(&v209, &v211, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v147 = v210;
      v148 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StorefrontAgeRatingView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      v149 = *(void **)&v148[OBJC_IVAR____TtC8AppStore23StorefrontAgeRatingView_label];
      v150 = v148;
      v151 = String._bridgeToObjectiveC()();
      objc_msgSend(v149, "setText:", v151, swift_bridgeObjectRelease(v147).n128_f64[0]);

    }
  }
  else if ((_DWORD)v28 == enum case for BadgeType.paragraph(_:))
  {
    v29 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BadgeParagraphView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    sub_1000D5ED4();
    if (v144)
    {
      v42 = v144;
      v145 = *(void **)&v29[OBJC_IVAR____TtC8AppStore18BadgeParagraphView_paragraphLabel];
      v146 = String._bridgeToObjectiveC()();
      objc_msgSend(v145, "setText:", v146);

      goto LABEL_24;
    }
  }
  else
  {
    if ((_DWORD)v28 != enum case for BadgeType.friendsPlaying(_:))
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
      return;
    }
    v152 = Badge.content.getter(v28);
    v153 = BadgeContentKeyNumberOfAvatarsToDisplay.getter();
    v155 = v154;
    if (*(_QWORD *)(v152 + 16) && (v156 = sub_100061BFC(v153, v154), (v157 & 1) != 0))
    {
      sub_100061B84(*(_QWORD *)(v152 + 56) + 32 * v156, (uint64_t)&v211);
    }
    else
    {
      v211 = 0u;
      v212 = 0u;
    }
    swift_bridgeObjectRelease(v155);
    swift_bridgeObjectRelease(v152);
    if (!*((_QWORD *)&v212 + 1))
      goto LABEL_84;
    v166 = sub_100008FE4(0, (unint64_t *)&qword_100838980, NSNumber_ptr);
    if ((swift_dynamicCast(&v209, &v211, (char *)&type metadata for Any + 8, v166, 6) & 1) == 0)
      return;
    v167 = (id)v209;
    v168 = objc_msgSend((id)v209, "integerValue");

    v170 = Badge.content.getter(v169);
    v171 = GameCenterFriends.getter();
    v173 = v172;
    if (*(_QWORD *)(v170 + 16) && (v174 = sub_100061BFC(v171, v172), (v175 & 1) != 0))
    {
      sub_100061B84(*(_QWORD *)(v170 + 56) + 32 * v174, (uint64_t)&v211);
    }
    else
    {
      v211 = 0u;
      v212 = 0u;
    }
    swift_bridgeObjectRelease(v173);
    swift_bridgeObjectRelease(v170);
    if (!*((_QWORD *)&v212 + 1))
      goto LABEL_84;
    v176 = sub_10007B804(&qword_10082CC78);
    if (swift_dynamicCast(&v209, &v211, (char *)&type metadata for Any + 8, v176, 6))
    {
      v177 = v209;
      if (!v196)
      {
        swift_bridgeObjectRelease(v209);
        return;
      }
      if ((unint64_t)v209 >> 62)
      {
        if (v209 < 0)
          v193 = v209;
        else
          v193 = v209 & 0xFFFFFFFFFFFFFF8;
        swift_retain(v196);
        swift_bridgeObjectRetain(v177);
        v178 = _CocoaArrayWrapper.endIndex.getter(v193);
        swift_bridgeObjectRelease(v177);
      }
      else
      {
        v178 = *(_QWORD *)((v209 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_retain(v196);
      }
      if (v178 >= (uint64_t)v168)
        v178 = (uint64_t)v168;
      v179 = (uint64_t)v195;
      AvatarShowcaseLayoutConfiguration.init(width:visibleWidth:)(24.0, 15.0);
      v180 = objc_allocWithZone((Class)type metadata accessor for AvatarShowcaseView(0));
      sub_100428F7C(v178, v179);
      *(_QWORD *)&v211 = _swiftEmptyArrayStorage;
      if ((unint64_t)v177 >> 62)
      {
        if (v177 < 0)
          v182 = v177;
        else
          v182 = v177 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v177);
        v181 = _CocoaArrayWrapper.endIndex.getter(v182);
      }
      else
      {
        v181 = *(_QWORD *)((v177 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v177);
      }
      if (v181)
      {
        if (v181 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v181; ++i)
        {
          if ((v177 & 0xC000000000000001) != 0)
          {
            v185 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v177);
          }
          else
          {
            v185 = *(_QWORD *)(v177 + 8 * i + 32);
            v186 = swift_retain(v185);
          }
          v187 = dispatch thunk of GameCenterPlayer.artwork.getter(v186);
          swift_release(v185);
          if (v187)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v188);
            v190 = *(_QWORD *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v189 = *(_QWORD *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v190 >= v189 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v189 > 1, v190 + 1, 1);
            v184 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v190, v187);
            specialized Array._endMutation()(v184);
          }
        }
        swift_bridgeObjectRelease(v177);
        v191 = (_QWORD *)v211;
      }
      else
      {
        swift_bridgeObjectRelease(v177);
        v191 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease(v177);
      v192 = v196;
      sub_10042912C((uint64_t)v191, v196);
      swift_bridgeObjectRelease(v191);
      swift_release(v192);
    }
  }
}

char *sub_1000D73B8()
{
  id v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  float v10;
  id v11;
  void *v12;
  id v14;
  __int128 v15;
  __int128 v16;

  v0 = objc_allocWithZone((Class)type metadata accessor for RatingView());
  v1 = sub_100326324(5, 1, 0, 1, 0, 0, 1);
  v2 = Badge.content.getter(v1);
  v3 = BadgeContentKeyRating.getter();
  v5 = v4;
  if (!*(_QWORD *)(v2 + 16) || (v6 = sub_100061BFC(v3, v4), (v7 & 1) == 0))
  {
    v15 = 0u;
    v16 = 0u;
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v2);
    goto LABEL_7;
  }
  sub_100061B84(*(_QWORD *)(v2 + 56) + 32 * v6, (uint64_t)&v15);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  if (!*((_QWORD *)&v16 + 1))
  {
LABEL_7:
    sub_1000057AC((uint64_t)&v15, (uint64_t *)&unk_10082B490);
    goto LABEL_8;
  }
  v8 = sub_100008FE4(0, (unint64_t *)&qword_100838980, NSNumber_ptr);
  if ((swift_dynamicCast(&v14, &v15, (char *)&type metadata for Any + 8, v8, 6) & 1) == 0)
  {
LABEL_8:
    sub_100325EB0(0.0);
    v11 = objc_msgSend((id)objc_opt_self(UIColor), "systemMidGrayColor");
    v12 = *(void **)&v1[OBJC_IVAR____TtC8AppStore10RatingView_starColor];
    *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore10RatingView_starColor] = v11;
    v9 = v11;
    sub_100325FDC((uint64_t)v12);

    goto LABEL_9;
  }
  v9 = v14;
  objc_msgSend(v14, "floatValue");
  sub_100325EB0(v10);
LABEL_9:

  return v1;
}

uint64_t sub_1000D7548()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D756C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000D7598(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1000D397C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1000D75A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804(&qword_10082CC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D75E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void sub_1000D7624(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD v29[5];

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
    v7 = sub_1000D8740();
    v8 = Set.Iterator.init(_cocoa:)(v29, v5, v6, v7);
    v3 = v29[0];
    v26 = v29[1];
    v9 = v29[2];
    v10 = v29[3];
    v11 = v29[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v10 = 0;
  }
  v15 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v16 = (v11 - 1) & v11;
      v17 = __clz(__rbit64(v11)) | (v10 << 6);
      v18 = v10;
      goto LABEL_32;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v23 >= v15)
      goto LABEL_35;
    v24 = *(_QWORD *)(v26 + 8 * v23);
    v18 = v10 + 1;
    if (!v24)
    {
      v18 = v10 + 2;
      if (v10 + 2 >= v15)
        goto LABEL_35;
      v24 = *(_QWORD *)(v26 + 8 * v18);
      if (!v24)
      {
        v18 = v10 + 3;
        if (v10 + 3 >= v15)
          goto LABEL_35;
        v24 = *(_QWORD *)(v26 + 8 * v18);
        if (!v24)
        {
          v18 = v10 + 4;
          if (v10 + 4 >= v15)
            goto LABEL_35;
          v24 = *(_QWORD *)(v26 + 8 * v18);
          if (!v24)
          {
            v18 = v10 + 5;
            if (v10 + 5 >= v15)
              goto LABEL_35;
            v24 = *(_QWORD *)(v26 + 8 * v18);
            if (!v24)
            {
              v25 = v10 + 6;
              while (v15 != v25)
              {
                v24 = *(_QWORD *)(v26 + 8 * v25++);
                if (v24)
                {
                  v18 = v25 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_1000D8798(v3);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v16 = (v24 - 1) & v24;
    v17 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_32:
    v22 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v17);
    if (!v22)
      goto LABEL_35;
    while (1)
    {
      objc_msgSend(v22, "setAlpha:", a2);

      v10 = v18;
      v11 = v16;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v19 = __CocoaSet.Iterator.next()(v8);
      if (v19)
      {
        v20 = v19;
        v27 = v19;
        v21 = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
        swift_unknownObjectRetain(v20);
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v22 = v28;
        swift_unknownObjectRelease(v20);
        v18 = v10;
        v16 = v11;
        if (v22)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

BOOL sub_1000D78E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_1000D78F8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t *v6;
  id v7;
  uint64_t v8;
  int v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  void *v37;
  void (*v38)();
  uint64_t v39;
  char v40[40];
  id v41;

  v2 = v1;
  ObjectType = swift_getObjectType();
  if (a1)
  {
    v5 = ObjectType;
    v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews, &v34, 33, 0);
    v7 = a1;
    sub_1001F5950((Swift::Int *)&v41, v7);
    swift_endAccess(&v34);

    v8 = OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase;
    v9 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase);
    if ((v9 - 1) >= 2)
    {
      if (!*(_BYTE *)(v2 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase))
      {
        objc_msgSend(v7, "setAlpha:", 1.0);
        goto LABEL_29;
      }
    }
    else
    {
      v10 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator);
      if (v10)
      {
        v11 = sub_10007B804((uint64_t *)&unk_10082B4A0);
        inited = swift_initStackObject(v11, v40);
        *(_OWORD *)(inited + 16) = xmmword_100661700;
        *(_QWORD *)(inited + 32) = v7;
        v34 = inited;
        specialized Array._endMutation()(inited);
        v13 = v34;
        if ((unint64_t)v34 >> 62)
        {
          if (v34 < 0)
            v23 = v34;
          else
            v23 = v34 & 0xFFFFFFFFFFFFFF8;
          v24 = v7;
          v25 = v10;
          swift_bridgeObjectRetain(v13);
          v26 = _CocoaArrayWrapper.endIndex.getter(v23);
          swift_bridgeObjectRelease(v13);
          if (v26)
            goto LABEL_6;
        }
        else
        {
          v14 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
          v15 = v7;
          v16 = v10;
          if (v14)
          {
LABEL_6:
            sub_1000D8ECC(v13, &qword_10082CCE0, (unint64_t *)&qword_10082B220, UIView_ptr);
            v18 = v17;
LABEL_25:
            swift_bridgeObjectRelease(v13);
            if (v9 == 1)
            {
              v27 = swift_allocObject(&unk_100759308, 32, 7);
              *(_QWORD *)(v27 + 16) = v18;
              *(_QWORD *)(v27 + 24) = v5;
              v28 = objc_allocWithZone((Class)UIViewPropertyAnimator);
              v38 = sub_1000D8A5C;
              v39 = v27;
              v34 = (uint64_t)_NSConcreteStackBlock;
              v35 = 1107296256;
              v29 = &unk_100759320;
            }
            else
            {
              v30 = swift_allocObject(&unk_1007592B8, 32, 7);
              *(_QWORD *)(v30 + 16) = v18;
              *(_QWORD *)(v30 + 24) = v5;
              v28 = objc_allocWithZone((Class)UIViewPropertyAnimator);
              v38 = sub_1000D8A2C;
              v39 = v30;
              v34 = (uint64_t)_NSConcreteStackBlock;
              v35 = 1107296256;
              v29 = &unk_1007592D0;
            }
            v36 = sub_10000AB18;
            v37 = v29;
            v31 = _Block_copy(&v34);
            v32 = v39;
            swift_bridgeObjectRetain(v18);
            swift_release(v32);
            v33 = objc_msgSend(v28, "initWithDuration:controlPoint1:controlPoint2:animations:", v31, 0.6, 0.33, 0.0, 0.67, 1.0, v34, v35);
            _Block_release(v31);
            objc_msgSend(v10, "fractionComplete", swift_bridgeObjectRelease(v18).n128_f64[0]);
            objc_msgSend(v33, "setFractionComplete:");
            objc_msgSend(v33, "startAnimation");

            goto LABEL_29;
          }
        }
        v18 = &_swiftEmptySetSingleton;
        goto LABEL_25;
      }
      *(_BYTE *)(v2 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase) = 3;
    }
    v19 = *v6;
    if ((v19 & 0xC000000000000001) != 0)
    {
      if (v19 < 0)
        v20 = v19;
      else
        v20 = v19 & 0xFFFFFFFFFFFFFF8;
      v21 = swift_bridgeObjectRetain(v19);
      v22 = __CocoaSet.count.getter(v20, v21);
      swift_bridgeObjectRelease(v19);
      if (!v22)
        goto LABEL_29;
LABEL_17:
      if (*(_BYTE *)(v2 + v8) == 3 && !UIAccessibilityIsReduceMotionEnabled())
        sub_1000D7D28();
      goto LABEL_29;
    }
    if (*(_QWORD *)(v19 + 16))
      goto LABEL_17;
LABEL_29:

  }
}

double sub_1000D7C74()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  _BYTE v7[24];

  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase) = 3;
  v1 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_sleepTimer);
  if (v1)
    objc_msgSend(v1, "invalidate");
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator);
  if (v2)
    objc_msgSend(v2, "stopAnimation:", 1);
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews, v7, 0, 0);
  v4 = *v3;
  v5 = swift_bridgeObjectRetain(v4);
  sub_1000D7624(v5, 1.0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double sub_1000D7D28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  double result;
  _QWORD aBlock[5];
  uint64_t v15;
  _BYTE v16[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews, v16, 0, 0);
  v2 = *v1;
  if ((v2 & 0xC000000000000001) != 0)
  {
    if (v2 < 0)
      v3 = v2;
    else
      v3 = v2 & 0xFFFFFFFFFFFFFF8;
    v4 = swift_bridgeObjectRetain(v2);
    v5 = __CocoaSet.count.getter(v3, v4);
    swift_bridgeObjectRelease(v2);
    if (v5)
      goto LABEL_6;
  }
  else if (*(_QWORD *)(v2 + 16))
  {
LABEL_6:
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase) = 0;
    v6 = swift_allocObject(&unk_100759358, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16, v0);
    aBlock[4] = sub_1000D8AB4;
    v15 = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000D820C;
    aBlock[3] = &unk_100759370;
    v7 = _Block_copy(aBlock);
    v8 = (void *)objc_opt_self(NSTimer);
    swift_retain(v6);
    v9 = objc_msgSend(v8, "timerWithTimeInterval:repeats:block:", 0, v7, 0.8);
    _Block_release(v7);
    swift_release(v15);
    v10 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_sleepTimer);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_sleepTimer) = v9;
    v11 = v9;
    objc_msgSend(v10, "invalidate");

    v12 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    objc_msgSend(v12, "addTimer:forMode:", v11, NSRunLoopCommonModes);
    swift_release(v6);

    return result;
  }
  return sub_1000D7C74();
}

void sub_1000D7F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_sleepTimer);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_sleepTimer) = 0;
    objc_msgSend(v5, "invalidate");

  }
  swift_beginAccess(v2, &v8, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v2);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1000D7FAC();

  }
}

void sub_1000D7FAC()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void **aBlock;
  uint64_t v18;
  void *v19;
  void *v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  char v23[24];

  ObjectType = swift_getObjectType();
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews, v23, 0, 0);
  v3 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v2;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    v5 = swift_bridgeObjectRetain(*v2);
    v6 = __CocoaSet.count.getter(v4, v5);
    swift_bridgeObjectRelease(v3);
    if (v6)
      goto LABEL_6;
LABEL_10:
    sub_1000D7C74();
    return;
  }
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_10;
LABEL_6:
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase) = 1;
  v7 = *v2;
  v8 = swift_allocObject(&unk_1007593A8, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = ObjectType;
  v9 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v21 = (void (*)(uint64_t))sub_1000D9CF0;
  v22 = v8;
  aBlock = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_10000AB18;
  v20 = &unk_1007593C0;
  v10 = _Block_copy(&aBlock);
  v11 = v22;
  swift_bridgeObjectRetain_n(v7, 2);
  swift_release(v11);
  v12 = objc_msgSend(v9, "initWithDuration:controlPoint1:controlPoint2:animations:", v10, 0.6, 0.33, 0.0, 0.67, 1.0);
  _Block_release(v10);
  swift_bridgeObjectRelease(v7);
  v13 = swift_allocObject(&unk_100759358, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v0);
  v21 = sub_1000D8ABC;
  v22 = v13;
  aBlock = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_1000D75E8;
  v20 = &unk_1007593E8;
  v14 = _Block_copy(&aBlock);
  objc_msgSend(v12, "addCompletion:", v14, swift_release(v22).n128_f64[0]);
  _Block_release(v14);
  v15 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator) = v12;
  v16 = v12;
  if (v15)
  {
    objc_msgSend(v15, "stopAnimation:", 1);

  }
  objc_msgSend(v16, "startAnimation");

}

void sub_1000D820C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

void sub_1000D825C()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void **aBlock;
  uint64_t v18;
  void *v19;
  void *v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  char v23[24];

  ObjectType = swift_getObjectType();
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews, v23, 0, 0);
  v3 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v2;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    v5 = swift_bridgeObjectRetain(*v2);
    v6 = __CocoaSet.count.getter(v4, v5);
    swift_bridgeObjectRelease(v3);
    if (v6)
      goto LABEL_6;
LABEL_10:
    sub_1000D7C74();
    return;
  }
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_10;
LABEL_6:
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase) = 2;
  v7 = *v2;
  v8 = swift_allocObject(&unk_100759420, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = ObjectType;
  v9 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v21 = (void (*)(uint64_t))sub_1000D9CF4;
  v22 = v8;
  aBlock = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_10000AB18;
  v20 = &unk_100759438;
  v10 = _Block_copy(&aBlock);
  v11 = v22;
  swift_bridgeObjectRetain_n(v7, 2);
  swift_release(v11);
  v12 = objc_msgSend(v9, "initWithDuration:controlPoint1:controlPoint2:animations:", v10, 0.6, 0.33, 0.0, 0.67, 1.0);
  _Block_release(v10);
  swift_bridgeObjectRelease(v7);
  v13 = swift_allocObject(&unk_100759358, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v0);
  v21 = sub_1000D8ADC;
  v22 = v13;
  aBlock = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_1000D75E8;
  v20 = &unk_100759460;
  v14 = _Block_copy(&aBlock);
  objc_msgSend(v12, "addCompletion:", v14, swift_release(v22).n128_f64[0]);
  _Block_release(v14);
  v15 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator) = v12;
  v16 = v12;
  if (v15)
  {
    objc_msgSend(v15, "stopAnimation:", 1);

  }
  objc_msgSend(v16, "startAnimation");

}

void sub_1000D84BC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];
  uint64_t v10;
  uint64_t v11;

  if (!a1)
  {
    v10 = v3;
    v11 = v4;
    v6 = a2 + 16;
    swift_beginAccess(a2 + 16, v9, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    if (Strong)
    {
      v8 = (void *)Strong;
      a3();

    }
  }
}

uint64_t getEnumTagSinglePayload for GradientView.Kind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AppEventLiveIndicatorAnimationCoordinator.AnimationPhase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000D8670 + 4 * byte_1006633F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000D86A4 + 4 * byte_1006633F0[v4]))();
}

uint64_t sub_1000D86A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D86AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000D86B4);
  return result;
}

uint64_t sub_1000D86C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000D86C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000D86CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000D86D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1000D86E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppEventLiveIndicatorAnimationCoordinator.AnimationPhase()
{
  return &type metadata for AppEventLiveIndicatorAnimationCoordinator.AnimationPhase;
}

unint64_t sub_1000D86FC()
{
  unint64_t result;

  result = qword_10082CCD0;
  if (!qword_10082CCD0)
  {
    result = swift_getWitnessTable(&unk_10066348C, &type metadata for AppEventLiveIndicatorAnimationCoordinator.AnimationPhase);
    atomic_store(result, (unint64_t *)&qword_10082CCD0);
  }
  return result;
}

unint64_t sub_1000D8740()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082CCD8;
  if (!qword_10082CCD8)
  {
    v1 = sub_100008FE4(255, (unint64_t *)&qword_10082B220, UIView_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10082CCD8);
  }
  return result;
}

uint64_t sub_1000D8798(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

void *sub_1000D87A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_10007B804(&qword_10082CD48);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_100005C94(&qword_10082CD50, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_100005C94(&qword_10082CD58, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_1000D8A08()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000D8A2C()
{
  uint64_t v0;

  sub_1000D7624(*(_QWORD *)(v0 + 16), 1.0);
}

void sub_1000D8A5C()
{
  uint64_t v0;

  sub_1000D7624(*(_QWORD *)(v0 + 16), 0.2);
}

uint64_t sub_1000D8A90()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000D8AB4(uint64_t a1)
{
  uint64_t v1;

  sub_1000D7F08(a1, v1);
}

void sub_1000D8ABC(uint64_t a1)
{
  uint64_t v1;

  sub_1000D84BC(a1, v1, sub_1000D825C);
}

void sub_1000D8ADC(uint64_t a1)
{
  uint64_t v1;

  sub_1000D84BC(a1, v1, (void (*)(void))sub_1000D7D28);
}

Swift::Int sub_1000D8AFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10007B804(&qword_10082CCE8);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_QWORD *)(v6 + 8 * v4);
      Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_QWORD *)(v14 + 8 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_QWORD *)(v14 + 8 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_QWORD *)(v14 + 8 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_1000D8C3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Shelf.ContentType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_10007B804(&qword_10082CD60);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_100005C94(&qword_10082CD68, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_100005C94((unint64_t *)&qword_10084CBE0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void sub_1000D8EA4(uint64_t a1)
{
  sub_1000D94A4(a1, &qword_10082CD08);
}

void sub_1000D8EB0(uint64_t a1)
{
  sub_1000D8ECC(a1, &qword_10082CD10, &qword_10082CD18, IAMMessageGroup_ptr);
}

void sub_1000D8ECC(uint64_t a1, uint64_t *a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  id v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  uint64_t v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v50;

  v5 = a1;
  v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
    if (v7)
    {
LABEL_3:
      sub_10007B804(a2);
      v8 = (_QWORD *)static _SetStorage.allocate(capacity:)(v7);
      if (!v6)
        goto LABEL_4;
LABEL_11:
      if (v5 < 0)
        v11 = v5;
      else
        v11 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v9 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v5);
      if (!v9)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
  }
  v8 = &_swiftEmptySetSingleton;
  if (v6)
    goto LABEL_11;
LABEL_4:
  v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    return;
LABEL_15:
  v12 = (char *)(v8 + 7);
  v50 = v9;
  if ((v5 & 0xC000000000000001) != 0)
  {
    v13 = 0;
    v46 = v5;
    while (1)
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v5);
      v15 = __OFADD__(v13++, 1);
      if (v15)
      {
        __break(1u);
        goto LABEL_43;
      }
      v16 = v14;
      v17 = NSObject._rawHashValue(seed:)(v8[5]);
      v18 = -1 << *((_BYTE *)v8 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      v21 = *(_QWORD *)&v12[8 * (v19 >> 6)];
      v22 = 1 << v19;
      if (((1 << v19) & v21) != 0)
      {
        sub_100008FE4(0, a3, a4);
        v23 = *(id *)(v8[6] + 8 * v19);
        v24 = static NSObject.== infix(_:_:)(v23, v16);

        if ((v24 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v16);
          v5 = v46;
          goto LABEL_18;
        }
        v25 = ~v18;
        while (1)
        {
          v19 = (v19 + 1) & v25;
          v20 = v19 >> 6;
          v21 = *(_QWORD *)&v12[8 * (v19 >> 6)];
          v22 = 1 << v19;
          if ((v21 & (1 << v19)) == 0)
            break;
          v26 = *(id *)(v8[6] + 8 * v19);
          v27 = static NSObject.== infix(_:_:)(v26, v16);

          if ((v27 & 1) != 0)
            goto LABEL_17;
        }
        v5 = v46;
      }
      *(_QWORD *)&v12[8 * v20] = v22 | v21;
      *(_QWORD *)(v8[6] + 8 * v19) = v16;
      v28 = v8[2];
      v15 = __OFADD__(v28, 1);
      v29 = v28 + 1;
      if (v15)
        goto LABEL_44;
      v8[2] = v29;
LABEL_18:
      if (v13 == v50)
        return;
    }
  }
  v30 = 0;
  v47 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v30 != v47)
  {
    v31 = v8[5];
    v32 = *(id *)(v5 + 32 + 8 * v30);
    v33 = NSObject._rawHashValue(seed:)(v31);
    v34 = -1 << *((_BYTE *)v8 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
    v38 = 1 << v35;
    if (((1 << v35) & v37) != 0)
    {
      sub_100008FE4(0, a3, a4);
      v39 = *(id *)(v8[6] + 8 * v35);
      v40 = static NSObject.== infix(_:_:)(v39, v32);

      if ((v40 & 1) != 0)
        goto LABEL_30;
      v41 = ~v34;
      v35 = (v35 + 1) & v41;
      v36 = v35 >> 6;
      v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
      v38 = 1 << v35;
      if ((v37 & (1 << v35)) != 0)
      {
        while (1)
        {
          v42 = *(id *)(v8[6] + 8 * v35);
          v43 = static NSObject.== infix(_:_:)(v42, v32);

          if ((v43 & 1) != 0)
            break;
          v35 = (v35 + 1) & v41;
          v36 = v35 >> 6;
          v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
          v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0)
            goto LABEL_38;
        }
LABEL_30:

        v9 = v50;
        goto LABEL_31;
      }
LABEL_38:
      v9 = v50;
    }
    *(_QWORD *)&v12[8 * v36] = v38 | v37;
    *(_QWORD *)(v8[6] + 8 * v35) = v32;
    v44 = v8[2];
    v15 = __OFADD__(v44, 1);
    v45 = v44 + 1;
    if (v15)
      goto LABEL_45;
    v8[2] = v45;
LABEL_31:
    if (++v30 == v9)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

void *sub_1000D9230(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_10007B804(&qword_10082CD70);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_100005C94((unint64_t *)&unk_100847850, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_100005C94((unint64_t *)&qword_10083B2F0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void sub_1000D9498(uint64_t a1)
{
  sub_1000D94A4(a1, &qword_10082CD40);
}

void sub_1000D94A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[9];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10007B804(a2);
    v4 = static _SetStorage.allocate(capacity:)(v2);
    v5 = 0;
    v6 = v4 + 56;
    v38 = v2;
    v39 = a1 + 32;
    do
    {
      v7 = *(void **)(v39 + 8 * v5);
      v8 = *(_QWORD *)(v4 + 40);
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v11 = v10;
      Hasher.init(_seed:)(v40, v8);
      v12 = v7;
      String.hash(into:)(v40, v9, v11);
      v13 = Hasher._finalize()();
      swift_bridgeObjectRelease(v11);
      v14 = -1 << *(_BYTE *)(v4 + 32);
      v15 = v13 & ~v14;
      v16 = v15 >> 6;
      v17 = *(_QWORD *)(v6 + 8 * (v15 >> 6));
      v18 = 1 << v15;
      if (((1 << v15) & v17) != 0)
      {
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15));
        v21 = v20;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        if (v19 == v22 && v21 == v23)
        {
LABEL_3:
          swift_bridgeObjectRelease_n(v21, 2);
LABEL_4:

          goto LABEL_5;
        }
        v25 = v23;
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
        swift_bridgeObjectRelease(v21);
        swift_bridgeObjectRelease(v25);
        if ((v26 & 1) != 0)
          goto LABEL_4;
        v27 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v27;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)(v6 + 8 * (v15 >> 6));
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15));
          v21 = v29;
          v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
          if (v28 == v30 && v21 == v31)
            goto LABEL_3;
          v33 = v31;
          v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v21, v30, v31, 0);
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v33);
          if ((v34 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v6 + 8 * v16) = v18 | v17;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v12;
      v35 = *(_QWORD *)(v4 + 16);
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
      {
        __break(1u);
        return;
      }
      *(_QWORD *)(v4 + 16) = v37;
LABEL_5:
      ++v5;
    }
    while (v5 != v38);
  }
}

void *sub_1000D96CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for MetricsFieldInclusionRequest(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_10007B804(&qword_10082CCF0);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_100005C94(&qword_10082CCF8, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest, (uint64_t)&protocol conformance descriptor for MetricsFieldInclusionRequest);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v5, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_100005C94(&qword_10082CD00, (uint64_t (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest, (uint64_t)&protocol conformance descriptor for MetricsFieldInclusionRequest);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v5, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void sub_1000D9934(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_10007B804(&qword_10082CD28);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v26 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v26 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v25 = v5;
  while ((v26 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v26);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v27 = v10;
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_100005C94(&qword_10082CD30, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      v22 = sub_100005C94(&qword_10082CD38, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v22) & 1) != 0)
        {
          swift_release(v27);
          v5 = v25;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v25;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v27;
    v23 = v4[2];
    v11 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v24;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
  swift_retain(*(_QWORD *)(v26 + 32 + 8 * v8));
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_1000D9BC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10007B804(&qword_10082CD20);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    v7 = ~(-1 << *(_BYTE *)(v3 + 32));
    while (1)
    {
      v8 = *(_QWORD *)(v6 + 8 * v4);
      result = static Hasher._hash(seed:_:)(*(_QWORD *)(v3 + 40), v8);
      v10 = result & v7;
      v11 = (result & (unint64_t)v7) >> 6;
      v12 = *(_QWORD *)(v5 + 8 * v11);
      v13 = 1 << (result & v7);
      v14 = *(_QWORD *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(_QWORD *)(v14 + 8 * v10) != v8)
        {
          v10 = (v10 + 1) & v7;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            goto LABEL_7;
        }
      }
      else
      {
LABEL_7:
        *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
        *(_QWORD *)(v14 + 8 * v10) = v8;
        v15 = *(_QWORD *)(v3 + 16);
        v16 = __OFADD__(v15, 1);
        v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v17;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return (uint64_t)&_swiftEmptySetSingleton;
}

char *sub_1000D9D08(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  char *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_super v48;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = type metadata accessor for DirectionalTextAlignment(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill;
  v19 = objc_allocWithZone((Class)UIView);
  v20 = v5;
  *(_QWORD *)&v5[v18] = objc_msgSend(v19, "init");
  v21 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label;
  if (qword_100826BF8 != -1)
    swift_once(&qword_100826BF8, sub_1000DA9E4);
  v22 = type metadata accessor for FontUseCase(0);
  v23 = sub_10007AF70(v22, (uint64_t)qword_10088A348);
  v24 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v17, v23, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v17, 0, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DirectionalTextAlignment.none(_:), v11);
  v25 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v20[v21] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v17, 1, 0, 1, 0, v14, 0, 0);
  v26 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage;
  *(_QWORD *)&v20[v26] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v20[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn] = 0;

  v48.receiver = v20;
  v48.super_class = ObjectType;
  v27 = (char *)objc_msgSendSuper2(&v48, "initWithFrame:", a1, a2, a3, a4);
  v28 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill;
  v29 = *(void **)&v27[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill];
  v30 = v27;
  objc_msgSend(v29, "setClipsToBounds:", 1);
  v31 = objc_msgSend(v30, "contentView");
  objc_msgSend(v31, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v32 = objc_msgSend(v30, "contentView");
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v27[v28]);

  v33 = objc_msgSend(v30, "contentView");
  objc_msgSend(v33, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label]);

  v34 = objc_msgSend(v30, "contentView");
  v35 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage;
  objc_msgSend(v34, "addSubview:", *(_QWORD *)&v30[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage]);

  sub_1000DA17C();
  v36 = sub_10007B804(&qword_10082E950);
  v37 = swift_allocObject(v36, 48, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100661A30;
  *(_QWORD *)(v37 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v37 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v38 = v30;
  v39 = UIView.registerForTraitChanges<A>(_:handler:)(v37, sub_1000DAC40, 0, ObjectType);
  swift_unknownObjectRelease(v39);

  swift_bridgeObjectRelease(v37);
  v40 = *(id *)&v30[v35];
  v41 = objc_msgSend(v38, "traitCollection");
  v42 = sub_1000DAF88();

  objc_msgSend(v40, "setImage:", v42);
  sub_100008FE4(0, (unint64_t *)&qword_10082CE48, UITraitCollection_ptr);
  v43 = v38;
  v44 = static UITraitCollection.systemTraitsAffectingImageLookup.getter();
  v45 = swift_allocObject(&unk_1007594D0, 24, 7);
  *(_QWORD *)(v45 + 16) = ObjectType;
  v46 = UIView.registerForTraitChanges<A>(_:handler:)(v44, sub_1000DB32C, v45, ObjectType);
  swift_unknownObjectRelease(v46);
  swift_bridgeObjectRelease(v44);
  swift_release(v45);

  return v43;
}

void sub_1000DA17C()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  double v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  double v15;
  id v16;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  v3 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn;
  v16 = (id)sub_1000DAE6C((uint64_t)v2, v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn]);
  v5 = v4;
  v7 = v6;
  v8 = *(void **)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill];
  v9 = objc_msgSend(v8, "layer");
  v10 = 0.0;
  if ((v0[v3] & 1) == 0)
  {
    v11 = objc_msgSend(v0, "traitCollection");
    v10 = static Separator.thickness(compatibleWith:)();

  }
  objc_msgSend(v9, "setBorderWidth:", v10);

  v12 = objc_msgSend(v8, "layer");
  v13 = objc_msgSend(v7, "CGColor");
  objc_msgSend(v12, "setBorderColor:", v13);

  objc_msgSend(v8, "setBackgroundColor:", v5);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label], "setTextColor:", v16);
  v14 = *(void **)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage];
  v15 = 1.0;
  if (!v0[v3])
    v15 = 0.0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage], "setAlpha:", v15);
  objc_msgSend(v14, "setTintColor:", v16);
  objc_msgSend(v0, "setNeedsDisplay");
  objc_msgSend(v0, "setNeedsLayout");

}

id sub_1000DA36C(char *a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)&a1[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage];
  v3 = objc_msgSend(a1, "traitCollection");
  v4 = sub_1000DAF88();

  objc_msgSend(v2, "setImage:", v4);
  return objc_msgSend(a1, "setNeedsLayout");
}

id sub_1000DA428()
{
  char *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  double v23;
  double v24;
  CGFloat v25;
  id v26;
  void *v27;
  id v28;
  CGFloat MinX;
  CGFloat v31;
  objc_super v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v32.receiver = v0;
  v32.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v32, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label];
  v2 = objc_msgSend(v1, "attributedText");
  v3 = v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn];
  v4 = objc_msgSend(v0, "contentView");
  objc_msgSend(v4, "bounds");
  v6 = v5;
  v8 = v7;

  v9 = sub_10047F294(v2, v3, v0, v6, v8);
  v11 = v10;

  v12 = *(void **)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill];
  v13 = objc_msgSend(v0, "contentView");
  objc_msgSend(v13, "frame");

  CGRect.withLayoutDirection(in:relativeTo:)(v0);
  objc_msgSend(v12, "setFrame:");
  v14 = objc_msgSend(v12, "layer");
  v33.origin.x = 0.0;
  v33.origin.y = 0.0;
  v33.size.width = v9;
  v33.size.height = v11;
  objc_msgSend(v14, "setCornerRadius:", round(CGRectGetHeight(v33) * 0.5));

  if (qword_100826BE8 != -1)
    swift_once(&qword_100826BE8, sub_1000DA9BC);
  v15 = sub_10004C7C4(0.0, 0.0, v9, v11, *(double *)&xmmword_10082CD78, *((double *)&xmmword_10082CD78 + 1));
  v17 = v16;
  v19 = v18;
  v21 = v20;
  objc_msgSend(v1, "sizeThatFits:", v18, v20);
  v31 = v22;
  v24 = v23;
  v34.origin.x = v15;
  v34.origin.y = v17;
  v34.size.width = v19;
  v34.size.height = v21;
  MinX = CGRectGetMinX(v34);
  v35.origin.x = 0.0;
  v35.origin.y = 0.0;
  v35.size.width = v9;
  v35.size.height = v11;
  v25 = floor((CGRectGetHeight(v35) - v24) * 0.5);
  v26 = objc_msgSend(v0, "contentView");
  objc_msgSend(v26, "frame");

  CGRect.withLayoutDirection(in:relativeTo:)(v0);
  objc_msgSend(v1, "setFrame:");
  v27 = *(void **)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage];
  objc_msgSend(v27, "sizeThatFits:", v9, v11);
  v36.origin.x = MinX;
  v36.origin.y = v25;
  v36.size.width = v31;
  v36.size.height = v24;
  CGRectGetMaxX(v36);
  v37.origin.x = 0.0;
  v37.origin.y = 0.0;
  v37.size.width = v9;
  v37.size.height = v11;
  CGRectGetHeight(v37);
  v28 = objc_msgSend(v0, "contentView");
  objc_msgSend(v28, "frame");

  CGRect.withLayoutDirection(in:relativeTo:)(v0);
  return objc_msgSend(v27, "setFrame:");
}

void sub_1000DA820(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  NSString v8;
  id v9;

  v3 = type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout.LayoutAttributes();
  v4 = swift_dynamicCastClass(a1, v3);
  if (v4)
  {
    v5 = *(void **)(v4
                  + OBJC_IVAR____TtCC8AppStore44GuidedSearchTokenPaletteCollectionViewLayout16LayoutAttributes_animation);
    if (v5)
    {
      v9 = a1;
      v6 = v5;
      v7 = objc_msgSend(v1, "layer");
      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(v7, "addAnimation:forKey:", v6, v8);

    }
  }
}

uint64_t type metadata accessor for GuidedSearchTokenCell()
{
  return objc_opt_self(_TtC8AppStore21GuidedSearchTokenCell);
}

double sub_1000DA9BC()
{
  double result;

  result = 5.0;
  xmmword_10082CD78 = xmmword_1006634C0;
  *(_OWORD *)&qword_10082CD88 = xmmword_1006634C0;
  return result;
}

void sub_1000DA9D4()
{
  qword_10082CD98 = 0x403E000000000000;
}

uint64_t sub_1000DA9E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for FontUseCase(0);
  sub_100033BAC(v0, qword_10088A348);
  v1 = sub_10007AF70(v0, (uint64_t)qword_10088A348);
  if (qword_100828170 != -1)
    swift_once(&qword_100828170, sub_1003A6BDC);
  v2 = sub_10007AF70(v0, (uint64_t)qword_10088DE80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1000DAA74(uint64_t a1)
{
  sub_1000DAAC0(a1, (SEL *)&selRef_blackColor, &qword_10082CDA0, &qword_10082CDA8, &qword_10082CDB0);
}

id sub_1000DAA90(uint64_t a1)
{
  return sub_1000DABA4(a1, &qword_10082CDB8, &qword_10082CDC0, algn_10082CDC8);
}

void sub_1000DAAA4(uint64_t a1)
{
  sub_1000DAAC0(a1, (SEL *)&selRef_whiteColor, &qword_10082CDD0, &qword_10082CDD8, &qword_10082CDE0);
}

void sub_1000DAAC0(uint64_t a1, SEL *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v9 = (void *)objc_opt_self(UIColor);
  v10 = objc_msgSend(v9, "systemBlueColor");
  v11 = objc_msgSend(v9, "clearColor");
  v12 = objc_msgSend(v9, *a2);
  v13 = objc_msgSend(v12, "colorWithAlphaComponent:", 0.15);

  *a3 = v10;
  *a4 = v11;
  *a5 = v13;
}

id sub_1000DAB90(uint64_t a1)
{
  return sub_1000DABA4(a1, &qword_10082CDE8, &qword_10082CDF0, algn_10082CDF8);
}

id sub_1000DABA4(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  void *v7;
  id v8;
  id v9;
  id result;

  v7 = (void *)objc_opt_self(UIColor);
  v8 = objc_msgSend(v7, "systemWhiteColor");
  v9 = objc_msgSend(v7, "systemBlueColor");
  result = objc_msgSend(v7, "clearColor");
  *a2 = v8;
  *a3 = v9;
  *a4 = result;
  return result;
}

void sub_1000DAC40()
{
  sub_1000DA17C();
}

id sub_1000DAC60(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  NSString v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  id v17;
  id v18;

  if (a1)
  {
    v5 = objc_allocWithZone((Class)NSMutableAttributedString);
    v6 = a1;
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v5, "initWithString:", v7);

    v9 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v6);
    v10 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v9);

    objc_msgSend(v8, "appendAttributedString:", v10);
    v11 = objc_allocWithZone((Class)NSAttributedString);
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "initWithString:", v12);

    objc_msgSend(v8, "appendAttributedString:", v13);
    v14 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain(a3);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
    v16 = objc_msgSend(v14, "initWithString:", v15);

    objc_msgSend(v8, "appendAttributedString:", v16);
    v17 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "initWithAttributedString:", v8);

  }
  else
  {
    v18 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain(a3);
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
    v17 = objc_msgSend(v18, "initWithString:", v8);
  }

  return v17;
}

uint64_t sub_1000DAE6C(uint64_t a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;

  if ((a2 & 1) != 0)
  {
    if (a1 == 2)
    {
      if (qword_100826C18 != -1)
        swift_once(&qword_100826C18, sub_1000DAB90);
      v2 = &qword_10082CDE8;
    }
    else
    {
      if (qword_100826C08 != -1)
        swift_once(&qword_100826C08, sub_1000DAA90);
      v2 = &qword_10082CDB8;
    }
  }
  else if (a1 == 2)
  {
    if (qword_100826C10 != -1)
      swift_once(&qword_100826C10, sub_1000DAAA4);
    v2 = &qword_10082CDD0;
  }
  else
  {
    if (qword_100826C00 != -1)
      swift_once(&qword_100826C00, sub_1000DAA74);
    v2 = &qword_10082CDA0;
  }
  v4 = (void *)v2[1];
  v3 = (void *)v2[2];
  v5 = *v2;
  v6 = (id)*v2;
  v7 = v4;
  v8 = v3;
  return v5;
}

id sub_1000DAF88()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v13;

  v0 = type metadata accessor for SystemImage(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v1 + 104))(v4, enum case for SystemImage.xmark(_:), v0, v2);
  sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
  if (qword_100828178 != -1)
    swift_once(&qword_100828178, sub_1003A6DDC);
  v5 = type metadata accessor for FontUseCase(0);
  v6 = sub_10007AF70(v5, (uint64_t)qword_10088DE98);
  v7 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v8 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v6, v7);

  v9 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v8, -1);
  v10 = (void *)static SystemImage.load(_:with:)(v4, v9);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v11 = objc_msgSend(v10, "imageWithRenderingMode:", 2);

  return v11;
}

void sub_1000DB118()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill;
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label;
  if (qword_100826BF8 != -1)
    swift_once(&qword_100826BF8, sub_1000DA9E4);
  v11 = type metadata accessor for FontUseCase(0);
  v12 = sub_10007AF70(v11, (uint64_t)qword_10088A348);
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, v12, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v14 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v10] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 1, 0, 1, 0, v5, 0, 0);
  v15 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage;
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v1[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/GuidedSearchTokenCell.swift", 36, 2, 44, 0);
  __break(1u);
}

uint64_t sub_1000DB31C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000DB32C(char *a1)
{
  return sub_1000DA36C(a1);
}

void sub_1000DB334()
{
  qword_10088A360 = 0;
  *(_QWORD *)algn_10088A368 = 0;
}

double sub_1000DB344()
{
  double result;

  result = 1.0;
  xmmword_10088A370 = xmmword_100663500;
  return result;
}

double sub_1000DB358()
{
  double result;

  result = 0.0;
  xmmword_10088A380 = xmmword_100663510;
  return result;
}

__n128 sub_1000DB36C()
{
  __n128 result;

  __asm { FMOV            V0.2D, #1.0 }
  xmmword_10088A390 = (__int128)result;
  return result;
}

id sub_1000DB37C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  objc_class *v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  double v19;
  double v20;
  objc_super v22;

  *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors] = _swiftEmptyArrayStorage;
  v9 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_baseGradientView;
  v10 = (objc_class *)type metadata accessor for GradientView();
  v11 = objc_allocWithZone(v10);
  v12 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(v10), "init");
  v14 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone(v10), "init");
  v15 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_bottomRightOverlayView;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone(v10), "init");

  v22.receiver = v12;
  v22.super_class = (Class)type metadata accessor for MultiCornerGradientView();
  v16 = objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  v17 = objc_msgSend(v16, "layer");
  v18 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v18, "scale");
  v20 = v19;

  objc_msgSend(v17, "setRasterizationScale:", v20);
  return v16;
}

double sub_1000DB554(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  __n128 v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;

  v3 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors;
  v4 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors) = a1;
  swift_bridgeObjectRetain(a1);
  v6 = sub_1005B86F8(v5, v4);
  v7 = swift_bridgeObjectRelease(a1);
  if ((v6 & 1) == 0)
  {
    v8 = *(_QWORD *)((char *)v1 + v3);
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v10 = *(_QWORD *)((char *)v1 + v3);
      else
        v10 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)((char *)v1 + v3));
      v11 = _CocoaArrayWrapper.endIndex.getter(v10);
      v7 = swift_bridgeObjectRelease(v8);
      if (v11)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      (*(void (**)(__n128))((swift_isaMask & *v1) + 0xF0))(v7);
    }
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_1000DB614()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MultiCornerGradientView();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = *(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_baseGradientView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");

  v2 = *(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setFrame:");

  v3 = *(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v3, "setFrame:");

  v4 = *(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_bottomRightOverlayView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v4, "setFrame:");

}

id sub_1000DB750()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __int128 v28;
  id v29;
  uint64_t v30;
  objc_class *v31;
  id v32;
  void *v33;
  char *v34;
  _OWORD *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  __int128 v49;
  id v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  double v62;
  double v63;
  char *v64;
  void *v65;
  id v66;
  void *v67;
  char *v68;
  uint64_t v69;
  _OWORD *v70;
  uint64_t v71;
  void *v72;
  char *v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  __int128 v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v92;
  double v93;
  double v94;
  char *v95;
  void *v96;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  __int128 v104;
  char *v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_baseGradientView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_baseGradientView], "removeFromSuperview");
  v3 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView], "removeFromSuperview");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView], "removeFromSuperview");
  v4 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_bottomRightOverlayView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_bottomRightOverlayView], "removeFromSuperview");
  v5 = (char *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v6);

  v7 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors;
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors];
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v98 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors];
    else
      v98 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors]);
    v9 = _CocoaArrayWrapper.endIndex.getter(v98);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  switch(v9)
  {
    case 1:
      v10 = *(_QWORD *)&v1[v7];
      if ((v10 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain(*(_QWORD *)&v1[v7]);
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
        swift_bridgeObjectRelease(v10);
      }
      else
      {
        if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_60;
        }
        v11 = *(id *)(v10 + 32);
      }
      objc_msgSend(v1, "setBackgroundColor:", v11);

      goto LABEL_53;
    case 2:
      v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
      v13 = *(void **)&v1[v2];
      *(_QWORD *)&v1[v2] = v12;

      v5 = *(char **)&v1[v2];
      v14 = sub_10007B804((uint64_t *)&unk_10082B4A0);
      v10 = swift_allocObject(v14, 48, 7);
      *(_OWORD *)(v10 + 16) = xmmword_100661BE0;
      v9 = *(_QWORD *)&v1[v7];
      if ((v9 & 0xC000000000000001) != 0)
      {
LABEL_60:
        v99 = v5;
        swift_bridgeObjectRetain(v9);
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v9);
        swift_bridgeObjectRelease(v9);
        v9 = *(_QWORD *)&v1[v7];
      }
      else
      {
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_62;
        }
        v15 = *(void **)(v9 + 40);
        v16 = v5;
        v17 = v15;
      }
      *(_QWORD *)(v10 + 32) = v17;
      if ((v9 & 0xC000000000000001) != 0)
      {
LABEL_62:
        swift_bridgeObjectRetain(v9);
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
        swift_bridgeObjectRelease(v9);
        goto LABEL_14;
      }
      if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_64;
      }
      v18 = *(id *)(v9 + 32);
      v19 = (uint64_t)v18;
LABEL_14:
      *(_QWORD *)(v10 + 40) = v19;
      specialized Array._endMutation()(v18);
      v20 = *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore12GradientView_colors];
      *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore12GradientView_colors] = v10;
      swift_bridgeObjectRelease(v20);
      sub_10005FAC8();

      v21 = qword_100826C20;
      v10 = (uint64_t)*(id *)&v1[v2];
      if (v21 == -1)
        goto LABEL_15;
LABEL_64:
      swift_once(&qword_100826C20, sub_1000DB334);
LABEL_15:
      v22 = *(double *)&qword_10088A360;
      v23 = *(double *)algn_10088A368;
      v24 = objc_msgSend((id)v10, "layer");
      v25 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v24, v25, 0, 0, 0), "setStartPoint:", v22, v23);

      v26 = qword_100826C38;
      v27 = *(id *)&v1[v2];
      if (v26 != -1)
        swift_once(&qword_100826C38, sub_1000DB36C);
      v28 = xmmword_10088A390;
      v29 = objc_msgSend(v27, "layer");
      v30 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v29, v30, 0, 0, 0), "setEndPoint:", v28);

      objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v2]);
LABEL_53:
      objc_msgSend(v1, "setNeedsLayout");
      return objc_msgSend(v1, "setNeedsDisplay");
    case 3:
      v109 = v3;
      v31 = (objc_class *)type metadata accessor for GradientView();
      v32 = objc_msgSend(objc_allocWithZone(v31), "init");
      v33 = *(void **)&v1[v2];
      *(_QWORD *)&v1[v2] = v32;

      v34 = *(char **)&v1[v2];
      v108 = sub_10007B804((uint64_t *)&unk_10082B4A0);
      v35 = (_OWORD *)swift_allocObject(v108, 48, 7);
      v35[1] = xmmword_100661BE0;
      v36 = *(_QWORD *)&v1[v7];
      if ((v36 & 0xC000000000000001) != 0)
      {
        v100 = v34;
        swift_bridgeObjectRetain(v36);
        v101 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v36);
        swift_bridgeObjectRelease(v36);
        v39 = (id)v101;
        v36 = *(_QWORD *)&v1[v7];
      }
      else
      {
        if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_67;
        }
        v37 = *(void **)(v36 + 40);
        v38 = v34;
        v39 = v37;
      }
      *((_QWORD *)v35 + 4) = v39;
      if ((v36 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
        {
          __break(1u);
          goto LABEL_69;
        }
        v40 = *(id *)(v36 + 48);
LABEL_24:
        *((_QWORD *)v35 + 5) = v40;
        specialized Array._endMutation()(v40);
        v41 = *(_QWORD *)&v34[OBJC_IVAR____TtC8AppStore12GradientView_colors];
        *(_QWORD *)&v34[OBJC_IVAR____TtC8AppStore12GradientView_colors] = v35;
        swift_bridgeObjectRelease(v41);
        sub_10005FAC8();

        v42 = qword_100826C20;
        v35 = *(id *)&v1[v2];
        if (v42 == -1)
          goto LABEL_25;
LABEL_69:
        swift_once(&qword_100826C20, sub_1000DB334);
LABEL_25:
        v43 = *(double *)&qword_10088A360;
        v44 = *(double *)algn_10088A368;
        v45 = objc_msgSend(v35, "layer", 2, 5);
        v46 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v45, v46, 0, 0, 0), "setStartPoint:", v43, v44);

        v47 = qword_100826C28;
        v48 = *(id *)&v1[v2];
        if (v47 != -1)
          swift_once(&qword_100826C28, sub_1000DB344);
        v49 = xmmword_10088A370;
        v50 = objc_msgSend(v48, "layer");
        v51 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v50, v51, 0, 0, 0), "setEndPoint:", v49);

        v52 = objc_msgSend(objc_allocWithZone(v31), "init");
        v53 = *(void **)&v1[v109];
        *(_QWORD *)&v1[v109] = v52;

        v54 = *(_QWORD *)&v1[v109];
        v55 = *(_QWORD *)&v1[v7];
        if ((v55 & 0xC000000000000001) != 0)
        {
          v103 = (id)v54;
          swift_bridgeObjectRetain(v55);
          v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v55);
          swift_bridgeObjectRelease(v55);
        }
        else
        {
          if (!*(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_72;
          }
          v56 = *(void **)(v55 + 32);
          v57 = (id)v54;
          v58 = v56;
        }
        objc_msgSend((id)v54, "setBackgroundColor:", v58);

        v54 = swift_allocObject(v108, 48, 7);
        *(_OWORD *)(v54 + 16) = v107;
        *(_QWORD *)(v54 + 32) = objc_msgSend(v5, "clearColor");
        v59 = objc_msgSend(v5, "blackColor");
        v60 = objc_msgSend(v59, "colorWithAlphaComponent:", 0.2);

        *(_QWORD *)(v54 + 40) = v60;
        specialized Array._endMutation()(v61);
        if (qword_100826C30 == -1)
        {
LABEL_31:
          v63 = *((double *)&xmmword_10088A380 + 1);
          v62 = *(double *)&xmmword_10088A380;
          if (qword_100826C38 != -1)
          {
            v104 = xmmword_10088A380;
            swift_once(&qword_100826C38, sub_1000DB36C);
            v63 = *((double *)&v104 + 1);
            v62 = *(double *)&v104;
          }
          v64 = sub_1000DC6EC(v54, (uint64_t)&off_100755688, 0, v62, v63, *(double *)&xmmword_10088A390, *((double *)&xmmword_10088A390 + 1));
          swift_bridgeObjectRelease(v54);
          v65 = *(void **)&v1[v4];
          *(_QWORD *)&v1[v4] = v64;

          objc_msgSend(*(id *)&v1[v109], "addSubview:", *(_QWORD *)&v1[v4]);
          sub_1000DC41C();
          objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v2]);
          objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v109]);
          goto LABEL_53;
        }
LABEL_72:
        swift_once(&qword_100826C30, sub_1000DB358);
        goto LABEL_31;
      }
LABEL_67:
      swift_bridgeObjectRetain(v36);
      v102 = specialized _ArrayBuffer._getElementSlowPath(_:)(2, v36);
      swift_bridgeObjectRelease(v36);
      v40 = (id)v102;
      goto LABEL_24;
    case 4:
      v66 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
      v67 = *(void **)&v1[v2];
      *(_QWORD *)&v1[v2] = v66;

      v68 = *(char **)&v1[v2];
      v69 = sub_10007B804((uint64_t *)&unk_10082B4A0);
      v70 = (_OWORD *)swift_allocObject(v69, 48, 7);
      v70[1] = xmmword_100661BE0;
      v71 = *(_QWORD *)&v1[v7];
      if ((v71 & 0xC000000000000001) != 0)
      {
        v105 = v68;
        swift_bridgeObjectRetain(v71);
        v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v71);
        swift_bridgeObjectRelease(v71);
        v71 = *(_QWORD *)&v1[v7];
      }
      else
      {
        if (!*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_75;
        }
        v72 = *(void **)(v71 + 32);
        v73 = v68;
        v74 = v72;
      }
      *((_QWORD *)v70 + 4) = v74;
      if ((v71 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_77;
        }
        v75 = *(id *)(v71 + 40);
        v76 = (uint64_t)v75;
LABEL_40:
        *((_QWORD *)v70 + 5) = v76;
        specialized Array._endMutation()(v75);
        v77 = *(_QWORD *)&v68[OBJC_IVAR____TtC8AppStore12GradientView_colors];
        *(_QWORD *)&v68[OBJC_IVAR____TtC8AppStore12GradientView_colors] = v70;
        swift_bridgeObjectRelease(v77);
        sub_10005FAC8();

        v78 = qword_100826C20;
        v70 = *(id *)&v1[v2];
        if (v78 == -1)
          goto LABEL_41;
LABEL_77:
        swift_once(&qword_100826C20, sub_1000DB334);
LABEL_41:
        v79 = *(double *)&qword_10088A360;
        v80 = *(double *)algn_10088A368;
        v81 = objc_msgSend(v70, "layer");
        v82 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v81, v82, 0, 0, 0), "setStartPoint:", v79, v80);

        v83 = qword_100826C28;
        v84 = *(id *)&v1[v2];
        if (v83 != -1)
          swift_once(&qword_100826C28, sub_1000DB344);
        v85 = xmmword_10088A370;
        v86 = objc_msgSend(v84, "layer");
        v87 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v86, v87, 0, 0, 0), "setEndPoint:", v85);

        v88 = swift_allocObject(v69, 48, 7);
        *(_OWORD *)(v88 + 16) = xmmword_100661BE0;
        v89 = *(_QWORD *)&v1[v7];
        if ((v89 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain(*(_QWORD *)&v1[v7]);
          v90 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v89);
          swift_bridgeObjectRelease(v89);
          v89 = *(_QWORD *)&v1[v7];
        }
        else
        {
          if (*(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
          {
            __break(1u);
            goto LABEL_80;
          }
          v90 = *(id *)(v89 + 48);
        }
        *(_QWORD *)(v88 + 32) = v90;
        if ((v89 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10) < 4uLL)
          {
            __break(1u);
            goto LABEL_82;
          }
          v91 = *(id *)(v89 + 56);
          v92 = (uint64_t)v91;
LABEL_49:
          *(_QWORD *)(v88 + 40) = v92;
          specialized Array._endMutation()(v91);
          if (qword_100826C30 == -1)
          {
LABEL_50:
            v94 = *((double *)&xmmword_10088A380 + 1);
            v93 = *(double *)&xmmword_10088A380;
            if (qword_100826C38 != -1)
            {
              v106 = xmmword_10088A380;
              swift_once(&qword_100826C38, sub_1000DB36C);
              v94 = *((double *)&v106 + 1);
              v93 = *(double *)&v106;
            }
            v95 = sub_1000DC6EC(v88, (uint64_t)&off_1007556B8, 0, v93, v94, *(double *)&xmmword_10088A390, *((double *)&xmmword_10088A390 + 1));
            swift_bridgeObjectRelease(v88);
            v96 = *(void **)&v1[v3];
            *(_QWORD *)&v1[v3] = v95;

            sub_1000DC41C();
            objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v2]);
            objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v3]);
            goto LABEL_53;
          }
LABEL_82:
          swift_once(&qword_100826C30, sub_1000DB358);
          goto LABEL_50;
        }
LABEL_80:
        swift_bridgeObjectRetain(v89);
        v92 = specialized _ArrayBuffer._getElementSlowPath(_:)(3, v89);
        swift_bridgeObjectRelease(v89);
        goto LABEL_49;
      }
LABEL_75:
      swift_bridgeObjectRetain(v71);
      v76 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v71);
      swift_bridgeObjectRelease(v71);
      goto LABEL_40;
    default:
      goto LABEL_53;
  }
}

void sub_1000DC41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v3 = v2;
    else
      v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v3);
    swift_bridgeObjectRelease(v2);
    if (v4 < 3)
      return;
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10) < 3)
  {
    return;
  }
  v5 = sub_10007B804((uint64_t *)&unk_10082B4A0);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100661BE0;
  v7 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v6 + 32) = objc_msgSend(v7, "clearColor");
  v8 = objc_msgSend(v7, "whiteColor");
  *(_QWORD *)(v6 + 40) = v8;
  specialized Array._endMutation()(v8);
  if (qword_100826C20 != -1)
    swift_once(&qword_100826C20, sub_1000DB334);
  v9 = *(double *)&qword_10088A360;
  v10 = *(double *)algn_10088A368;
  if (qword_100826C30 != -1)
    swift_once(&qword_100826C30, sub_1000DB358);
  v11 = sub_1000DC6EC(v6, (uint64_t)&off_100755658, 0, v9, v10, *(double *)&xmmword_10088A380, *((double *)&xmmword_10088A380 + 1));
  swift_bridgeObjectRelease(v6);
  v12 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView;
  v13 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView) = v11;

  v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView), "layer"));
  v15 = objc_msgSend(*(id *)(v1 + v12), "layer");
  objc_msgSend(v14, "setMask:", v15);

}

id sub_1000DC634()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MultiCornerGradientView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MultiCornerGradientView()
{
  return objc_opt_self(_TtC8AppStore23MultiCornerGradientView);
}

char *sub_1000DC6EC(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;

  v14 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), "init");
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8AppStore12GradientView_colors];
  *(_QWORD *)&v14[OBJC_IVAR____TtC8AppStore12GradientView_colors] = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v15);
  sub_10005FAC8();
  swift_bridgeObjectRetain(a2);
  sub_100040FEC(v16);
  v17 = objc_msgSend(v14, "layer");
  v18 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v17, v18, 0, 0, 0), "setStartPoint:", a4, a5);

  v19 = objc_msgSend(v14, "layer");
  v20 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v19, v20, 0, 0, 0), "setEndPoint:", a6, a7);

  v21 = objc_msgSend(v14, "layer");
  objc_msgSend(v21, "setMask:", a3);

  return v14;
}

void sub_1000DC868()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors] = _swiftEmptyArrayStorage;
  v1 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_baseGradientView;
  v2 = (objc_class *)type metadata accessor for GradientView();
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), "init");
  v3 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(v2), "init");
  v4 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(v2), "init");
  v5 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_bottomRightOverlayView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(v2), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/MultiCornerGradientView.swift", 38, 2, 52, 0);
  __break(1u);
}

uint64_t sub_1000DC95C(uint64_t a1, uint64_t a2, __n128 a3, double a4)
{
  double v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a1;
  v5 = a3.n128_f64[0];
  v37 = a2;
  v6 = type metadata accessor for Artwork.Crop(0, a3);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artwork.Style(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Artwork.URLTemplate(0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for URLComponents(0, v17);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = URLComponents.init()(v22);
  v26 = static Artwork.URLTemplate.resourceScheme.getter(v25);
  URLComponents.scheme.setter(v26);
  v27 = URLComponents.host.setter(v36, v37);
  v28 = URLComponents.string.getter(v27);
  if (v29)
  {
    Artwork.URLTemplate.init(rawValue:)(v28);
    v30 = type metadata accessor for ImpressionMetrics(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 1, 1, v30);
    v31 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for Artwork.Style.unspecified(_:), v9);
    static Artwork.Crop.boundingBox.getter(v31);
    v34 = 1;
    v32 = dispatch thunk of Artwork.__allocating_init(id:template:size:backgroundColor:backgroundGradientColor:style:crop:contentMode:variants:impressionMetrics:)(0, 0, v19, 0, 0, v12, v8, 0, v5, a4, v34, _swiftEmptyArrayStorage, v15);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    return 0;
  }
  return v32;
}

uint64_t sub_1000DCBB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[15];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v11[0] = *(_QWORD *)(v2 - 8) + 64;
    v11[1] = &unk_1006635B8;
    v11[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v11[3] = &unk_1006635D0;
    v11[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v11[5] = &unk_1006635B8;
    v11[6] = &unk_1006635E8;
    v11[7] = &unk_1006635D0;
    v11[8] = &unk_1006635D0;
    v11[9] = &unk_100663600;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(a1 + 88));
    v6 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v6);
    v8 = type metadata accessor for ReusePool(319, v6, WitnessTable);
    v3 = v8;
    if (v9 <= 0x3F)
    {
      v11[10] = *(_QWORD *)(v8 - 8) + 64;
      v11[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v11[12] = &unk_100663618;
      v11[13] = &unk_100663618;
      v11[14] = &unk_1006635E8;
      return swift_initClassMetadata2(a1, 0, 15, v11, a1 + 96);
    }
  }
  return v3;
}

void sub_1000DCCFC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1000E15FC();
}

id ArcadeSubscribeViewController.__deallocating_deinit(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v4, "removeObserver:", v2);

  v6.receiver = v2;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "dealloc");
}

id sub_1000DCDA0(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  return ArcadeSubscribeViewController.__deallocating_deinit((uint64_t)v1, v2);
}

void sub_1000DCDC4(char *a1)
{
  _QWORD *v2;
  uint64_t *v3;
  char *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;

  v2 = (_QWORD *)(swift_isaMask & *(_QWORD *)a1);
  (*(void (**)(char *, _QWORD))(*(_QWORD *)(v2[10] - 8) + 8))(&a1[v2[12]], v2[10]);
  v3 = (uint64_t *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x68)];
  sub_10003A350(*v3, v3[1]);

  swift_unknownObjectRelease(*(_QWORD *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x88)]);
  swift_release(*(_QWORD *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x90)]);
  v4 = &a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0xB0)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2[11]);
  v6 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v6);
  v8 = type metadata accessor for ReusePool(0, v6, WitnessTable);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
  swift_bridgeObjectRelease(*(_QWORD *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0xB8)]);

}

uint64_t sub_1000DCF28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t WitnessTable;
  _BYTE v7[24];

  v1 = *v0;
  v2 = swift_isaMask;
  result = (uint64_t)objc_msgSend(v0, "isTracking");
  if ((result & 1) == 0)
  {
    result = (uint64_t)objc_msgSend(v0, "isDragging");
    if ((result & 1) == 0)
    {
      swift_beginAccess((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xB0), v7, 33, 0);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)((v2 & v1) + 0x58));
      v5 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v5);
      type metadata accessor for ReusePool(0, v5, WitnessTable);
      ReusePool.drain()();
      return swift_endAccess(v7);
    }
  }
  return result;
}

uint64_t sub_1000DD00C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;

  v5 = type metadata accessor for Notification(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = a1;
  sub_1000DCF28();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1000DD0A8(char a1)
{
  _QWORD *v1;

  objc_msgSend(v1, "setContentSize:", 0.0, 0.0);
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = a1;
  objc_msgSend(v1, "invalidateIntrinsicContentSize");
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_1000DD114(void *a1, uint64_t a2)
{
  _QWORD *v2;
  id v4;
  id v5;
  id result;
  _BOOL8 v7;
  id v8;
  objc_super v9;

  v9.receiver = v2;
  v9.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend(v2, "traitCollection");
  v5 = objc_msgSend(v4, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v5 != result))
  {
    v7 = objc_msgSend(v2, "effectiveUserInterfaceLayoutDirection") == (id)1;
    v8 = objc_msgSend(v2, "layer");
    objc_msgSend(v8, "setFlipsHorizontalAxis:", v7);

    objc_msgSend(v2, "setContentSize:", 0.0, 0.0);
    *((_BYTE *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xA0)) = 1;
    objc_msgSend(v2, "invalidateIntrinsicContentSize");
    return objc_msgSend(v2, "setNeedsLayout");
  }
  return result;
}

void sub_1000DD250(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_1000DD114(a3, (uint64_t)v6);

}

id sub_1000DD2A8(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;

  v1 = a1;
  v3 = sub_1000DD2D8((uint64_t)v1, v2);

  return v3;
}

id sub_1000DD2D8(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "semanticContentAttribute");
}

void sub_1000DD30C(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a1;
  sub_1000DD34C(a3, (uint64_t)v4);

}

id sub_1000DD34C(id a1, uint64_t a2)
{
  _QWORD *v2;
  objc_class *ObjectType;
  id v5;
  id result;
  _BOOL8 v7;
  id v8;
  objc_super v9;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v10.receiver = v2;
  v10.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v10, "semanticContentAttribute");
  v9.receiver = v2;
  v9.super_class = ObjectType;
  result = objc_msgSendSuper2(&v9, "setSemanticContentAttribute:", a1);
  if (v5 != a1)
  {
    v7 = objc_msgSend(v2, "effectiveUserInterfaceLayoutDirection") == (id)1;
    v8 = objc_msgSend(v2, "layer");
    objc_msgSend(v8, "setFlipsHorizontalAxis:", v7);

    objc_msgSend(v2, "setContentSize:", 0.0, 0.0);
    *((_BYTE *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xA0)) = 1;
    objc_msgSend(v2, "invalidateIntrinsicContentSize");
    return objc_msgSend(v2, "setNeedsLayout");
  }
  return result;
}

uint64_t sub_1000DD45C()
{
  return 0;
}

double sub_1000DD464(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  double result;

  v2 = sub_10007B804(&qword_10082A460);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100661A30;
  *(_QWORD *)(v3 + 56) = &type metadata for String;
  *(_QWORD *)(v3 + 32) = 0xD000000000000040;
  *(_QWORD *)(v3 + 40) = 0x80000001006AB340;
  v4 = a1;
  debugPrint(_:separator:terminator:)(v3, 32, 0xE100000000000000, 10, 0xE100000000000000);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

double sub_1000DD4F8(void *a1)
{
  id v1;
  double v2;

  v1 = a1;
  v2 = sub_1000DD538((uint64_t)v1);

  return v2;
}

CGFloat sub_1000DD538(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[2];

  v2 = (_QWORD *)(swift_isaMask & *(_QWORD *)v1);
  v3 = v2[10];
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)v8 - v5;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v8 - v5, &v1[v2[12]], v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(v2[11] + 24))(v8, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return UIViewNoIntrinsicMetric;
}

CGFloat sub_1000DD63C(uint64_t a1, CGFloat Width)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  _QWORD v20[2];
  CGRect v21;

  v4 = swift_isaMask & *(_QWORD *)v2;
  v5 = *(_QWORD *)(v4 + 0x50);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)v20 - v7;
  v9 = v4;
  if (Width < COERCE_DOUBLE(1))
  {
    v10 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v10, "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v21.origin.x = v12;
    v21.origin.y = v14;
    v21.size.width = v16;
    v21.size.height = v18;
    Width = CGRectGetWidth(v21);
    v9 = swift_isaMask & *(_QWORD *)v2;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v2[*(_QWORD *)(v9 + 96)], v5);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v4 + 88) + 24))(v20, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return Width;
}

double sub_1000DD7D8(void *a1, CGFloat a2)
{
  id v3;
  double v4;

  v3 = a1;
  v4 = sub_1000DD63C((uint64_t)v3, a2);

  return v4;
}

uint64_t sub_1000DD828(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t result;
  double v13;
  _QWORD v14[10];

  v2 = (_QWORD *)(swift_isaMask & *v1);
  v3 = v2[10];
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)v14 - v5;
  v7 = (char *)v1 + v2[12];
  v8 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v8((char *)v14 - v5, v7, v3);
  v9 = v2[11];
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v3, v9);
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v8(v6, v7, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v9 + 24))(v14, v3, v9);
  result = ((uint64_t (*)(char *, uint64_t))v11)(v6, v3);
  v13 = ceil((double)v10 / (double)v14[9]);
  if ((~*(_QWORD *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v13 < 9.22337204e18)
    return (uint64_t)v13;
LABEL_7:
  __break(1u);
  return result;
}

void sub_1000DD97C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  void (*v16)(double *__return_ptr, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  __n128 v31;
  _QWORD v33[10];
  _QWORD v34[10];
  _QWORD v35[10];
  _QWORD v36[10];
  _QWORD v37[10];
  double v38[10];
  _QWORD v39[10];
  _QWORD v40[10];
  _QWORD v41[11];

  v2 = v1;
  v3 = swift_isaMask & *v1;
  v4 = *(_QWORD *)(v3 + 0x50);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(a1).n128_u64[0];
  v8 = (char *)&v33[-1] - v7;
  v9 = objc_msgSend(v1, "contentSize", v6);
  if (v11 == 0.0 && v10 == 0.0)
  {
    v12 = (double)sub_1000DD828((uint64_t)v9);
    v13 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x60);
    v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v8, v13, v4);
    v15 = *(_QWORD *)(v3 + 88);
    v16 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v15 + 24);
    v16((double *)v33, v4, v15);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v18 = (double)v33[9];
    v14(v8, v13, v4);
    v16((double *)v34, v4, v15);
    v17(v8, v4);
    v19 = *(double *)&v34[1];
    v14(v8, v13, v4);
    v16((double *)v35, v4, v15);
    v17(v8, v4);
    v20 = v19 + *(double *)&v35[3] + 0.0;
    v14(v8, v13, v4);
    v16((double *)v36, v4, v15);
    v17(v8, v4);
    v21 = v20 + *(double *)&v36[4] * v12;
    v14(v8, v13, v4);
    v16((double *)v37, v4, v15);
    v17(v8, v4);
    v22 = v21 + (v12 + -1.0) * *(double *)&v37[6];
    v14(v8, v13, v4);
    v16(v38, v4, v15);
    v17(v8, v4);
    v23 = v38[0];
    v14(v8, v13, v4);
    v16((double *)v39, v4, v15);
    v17(v8, v4);
    v24 = v23 + *(double *)&v39[2] + 0.0;
    v14(v8, v13, v4);
    v16((double *)v40, v4, v15);
    v17(v8, v4);
    v25 = v24 + *(double *)&v40[5] * v18;
    v14(v8, v13, v4);
    v16((double *)v41, v4, v15);
    v17(v8, v4);
    sub_1000DDD10((uint64_t)objc_msgSend(v1, "setContentSize:", v22, v25 + (v18 + -1.0) * *(double *)&v41[7]));
    v26 = (double *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA8));
    if (((_BYTE)v26[2] & 1) == 0)
    {
      objc_msgSend(v2, "setContentOffset:", *v26, v26[1]);
      *v26 = 0.0;
      v26[1] = 0.0;
      *((_BYTE *)v26 + 16) = 1;
      v27 = (_QWORD *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x88));
      v28 = *v27;
      if (*v27)
      {
        v29 = v27[1];
        ObjectType = swift_getObjectType();
        v31 = swift_unknownObjectRetain(v28);
        dispatch thunk of ScrollObserver.didScroll(in:)(v2, ObjectType, v29, v31);
        swift_unknownObjectRelease(v28);
      }
    }
  }
}

id sub_1000DDD10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  void (*v9)(_BYTE *, char *, uint64_t);
  uint64_t v10;
  void (*v11)(_QWORD *__return_ptr, uint64_t, uint64_t);
  void (*v12)(_BYTE *, uint64_t);
  double v13;
  double Width;
  id result;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t WitnessTable;
  uint64_t v31;
  _BYTE v32[24];
  _QWORD v33[10];
  _QWORD v34[9];
  uint64_t v35;
  CGRect v36;

  v2 = v1;
  v3 = (_QWORD *)(swift_isaMask & *v1);
  v4 = v3[10];
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(a1);
  v7 = &v32[-v6];
  v8 = (char *)v2 + v3[12];
  v9 = *(void (**)(_BYTE *, char *, uint64_t))(v5 + 16);
  v9(&v32[-v6], v8, v4);
  v10 = v3[11];
  v11 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 24);
  v11(v33, v4, v10);
  v12 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v12(v7, v4);
  v13 = *(double *)&v33[4] + *(double *)&v33[6];
  objc_msgSend(v2, "frame");
  Width = CGRectGetWidth(v36);
  result = objc_msgSend(v2, "contentInset");
  v17 = ceil((Width - v16) / v13);
  if ((~*(_QWORD *)&v17 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18 = (uint64_t)v17;
  v19 = *(uint64_t *)((char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x70));
  if (*((_BYTE *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x78)) == 1)
  {
    v20 = __OFADD__(v18, v19);
    v21 = v18 + v19;
    if (!v20)
    {
      if (v21 + 0x4000000000000000 >= 0)
      {
        v22 = 2 * v21;
        v9(v7, v8, v4);
        v11(v34, v4, v10);
        result = (id)((uint64_t (*)(_BYTE *, uint64_t))v12)(v7, v4);
        v23 = v22 * v35;
        if ((unsigned __int128)(v22 * (__int128)v35) >> 64 == (v22 * v35) >> 63)
        {
          v24 = *v2;
          v25 = swift_isaMask;
LABEL_13:
          swift_beginAccess((char *)v2 + *(_QWORD *)((v25 & v24) + 0xB0), v32, 33, 0);
          AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v10);
          v29 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
          WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v29);
          v31 = type metadata accessor for ReusePool(0, v29, WitnessTable);
          ReusePool.limit.setter(v23, v31);
          return (id)swift_endAccess(v32);
        }
        goto LABEL_19;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v19 + 0x4000000000000000 < 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v26 = 2 * v19;
  v9(v7, v8, v4);
  v11(v34, v4, v10);
  result = (id)((uint64_t (*)(_BYTE *, uint64_t))v12)(v7, v4);
  v27 = v26 * v35;
  if ((unsigned __int128)(v26 * (__int128)v35) >> 64 != (v26 * v35) >> 63)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v23 = v18 + v27;
  if (!__OFADD__(v18, v27))
  {
    v24 = *v2;
    v25 = swift_isaMask;
    goto LABEL_13;
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_1000DDFF0(uint64_t a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(double *__return_ptr, uint64_t, uint64_t);
  double v28;
  double v29;
  double v30;
  double v31;
  double Width;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  double v44[10];
  _QWORD v45[10];
  _QWORD v46[10];
  CGRect v47;
  CGRect v48;

  v3 = v2;
  v43 = a1;
  v5 = swift_isaMask & *v2;
  v6 = *(_QWORD *)(v5 + 0x50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(a1);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v41 - v11;
  objc_msgSend(v3, "frame");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x60);
  v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v22(v12, v21, v6);
  v23 = *(_QWORD *)(v5 + 88);
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 32);
  v25 = v24(v6, v23);
  v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  v26(v12, v6);
  if (v25 >= 1)
  {
    v47.origin.x = v14;
    v47.origin.y = v16;
    v47.size.width = v18;
    v47.size.height = v20;
    if (!CGRectIsEmpty(v47))
    {
      v22(v12, v21, v6);
      v27 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v23 + 24);
      v27(v44, v6, v23);
      v26(v12, v6);
      v28 = v44[4] + v44[6];
      v22(v12, v21, v6);
      v27((double *)v45, v6, v23);
      v26(v12, v6);
      v42 = v45[9];
      v22(v12, v21, v6);
      v27((double *)v46, v6, v23);
      v26(v12, v6);
      v29 = *(double *)&v46[3];
      v30 = 0.0;
      if (a2 >= 0.0)
        v30 = a2;
      v31 = v30 + *(double *)&v46[1];
      v48.origin.x = v14;
      v48.origin.y = v16;
      v48.size.width = v18;
      v48.size.height = v20;
      Width = CGRectGetWidth(v48);
      v33 = floor(v31 / v28);
      if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) != 0)
      {
        if (v33 > -9.22337204e18)
        {
          if (v33 < 9.22337204e18)
          {
            v34 = floor((v31 + Width - v29) / v28);
            if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) != 0)
            {
              if (v34 > -9.22337204e18)
              {
                if (v34 < 9.22337204e18)
                {
                  v35 = (uint64_t)v33;
                  v36 = (uint64_t)v34;
                  if ((v43 & 1) != 0)
                  {
                    v37 = *(_QWORD *)((char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x70));
                    v38 = __OFSUB__(v35, v37);
                    v35 -= v37;
                    if (v38)
                    {
LABEL_26:
                      __break(1u);
                      goto LABEL_27;
                    }
                    v38 = __OFADD__(v36, v37);
                    v36 += v37;
                    if (v38)
                    {
LABEL_27:
                      __break(1u);
                      return;
                    }
                  }
                  if ((unsigned __int128)(v35 * (__int128)v42) >> 64 == (v35 * v42) >> 63)
                  {
                    v39 = v21;
                    v40 = v42;
                    v22(v10, v39, v6);
                    v24(v6, v23);
                    v26(v10, v6);
                    if ((unsigned __int128)(v36 * (__int128)v40) >> 64 == (v36 * v40) >> 63)
                      return;
                    goto LABEL_25;
                  }
LABEL_24:
                  __break(1u);
LABEL_25:
                  __break(1u);
                  goto LABEL_26;
                }
LABEL_23:
                __break(1u);
                goto LABEL_24;
              }
LABEL_22:
              __break(1u);
              goto LABEL_23;
            }
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_20;
    }
  }
}

uint64_t sub_1000DE388(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  char *v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t);
  void (*v14)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[10];
  _QWORD v20[10];
  _QWORD v21[9];
  uint64_t v22;
  _QWORD v23[9];
  uint64_t v24;
  _QWORD v25[10];
  _QWORD v26[10];
  _QWORD v27[8];
  char v28;
  _QWORD v29[9];
  uint64_t v30;
  _QWORD v31[7];

  v3 = (_QWORD *)(swift_isaMask & *v1);
  v4 = v3[10];
  v5 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(a1);
  v8 = (char *)&v16 - v7;
  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v9 = (char *)v1 + v3[12];
  v10 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v10(v8, v9, v4);
  v11 = v3[11];
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v4, v11);
  v13 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  result = v13(v8, v4);
  if (v12 <= a1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v18 = a1;
  v10(v8, v9, v4);
  v14 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 24);
  v14(v19, v4, v11);
  v13(v8, v4);
  v10(v8, v9, v4);
  v14(v20, v4, v11);
  v13(v8, v4);
  v10(v8, v9, v4);
  v14(v21, v4, v11);
  result = v13(v8, v4);
  v15 = v22;
  if (!v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10(v8, v9, v4);
  v14(v23, v4, v11);
  result = v13(v8, v4);
  if (!v24)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v16 = v18 / v15;
  v17 = v18 % v24;
  if (v18 / v15 >= 1)
  {
    v10(v8, v9, v4);
    v14(v25, v4, v11);
    v13(v8, v4);
  }
  if (v17)
  {
    v10(v8, v9, v4);
    v14(v26, v4, v11);
    v13(v8, v4);
  }
  v10(v8, v9, v4);
  v14(v27, v4, v11);
  result = v13(v8, v4);
  if ((v28 & 1) != 0)
  {
    v10(v8, v9, v4);
    v14(v29, v4, v11);
    result = v13(v8, v4);
    if (v30)
    {
      if ((v18 + 1) % v30)
      {
        v10(v8, v9, v4);
        v14(v31, v4, v11);
        return v13(v8, v4);
      }
      return result;
    }
LABEL_18:
    __break(1u);
  }
  return result;
}

void sub_1000DE6E8()
{
  _QWORD *v0;
  _QWORD *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  id v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  void (*v51)(uint64_t, id, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t AssociatedTypeWitness;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  _BYTE v69[24];
  char v70[24];
  objc_super v71;
  _QWORD v72[6];

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = *(_QWORD *)((swift_isaMask & *v1) + 0x50);
  v57 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(ObjectType);
  v63 = (char *)&v53 - v4;
  v6 = *(_QWORD *)(v5 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v6);
  v55 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)&v7 = __chkstk_darwin(AssociatedTypeWitness).n128_u64[0];
  v65 = (char *)&v53 - v8;
  v71.receiver = v1;
  v71.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v71, "layoutSubviews", v7);
  sub_1000DD97C((uint64_t)v9);
  objc_msgSend(v1, "contentOffset");
  sub_1000DDFF0(1, v10);
  v12 = v11;
  v14 = v13;
  v15 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xB8));
  swift_beginAccess(v15, v70, 0, 0);
  v16 = *v15;
  v62 = v6;
  v64 = v3;
  v17 = swift_getAssociatedTypeWitness(0, v6);
  v18 = swift_bridgeObjectRetain(v16);
  v59 = v17;
  _NativeDictionary.makeIterator()(v72, v18);
  v19 = v72[0];
  v20 = v72[1];
  v21 = v72[3];
  v22 = v72[4];
  v66 = *(_QWORD *)((swift_isaMask & *v1) + 0xA0);
  v23 = (unint64_t)(v72[2] + 64) >> 6;
  while (1)
  {
    if (v22)
    {
      v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_20;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v26 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v26);
    v28 = v21 + 1;
    if (v27)
      goto LABEL_19;
    v28 = v21 + 2;
    if (v21 + 2 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (v27)
      goto LABEL_19;
    v28 = v21 + 3;
    if (v21 + 3 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (v27)
      goto LABEL_19;
    v28 = v21 + 4;
    if (v21 + 4 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (v27)
      goto LABEL_19;
    v28 = v21 + 5;
    if (v21 + 5 >= v23)
      break;
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (!v27)
    {
      v29 = v21 + 6;
      do
      {
        if (v23 == v29)
          goto LABEL_28;
        v27 = *(_QWORD *)(v20 + 8 * v29++);
      }
      while (!v27);
      v28 = v29 - 1;
    }
LABEL_19:
    v22 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v28 << 6);
    v21 = v28;
LABEL_20:
    v30 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v25);
    if (*((_BYTE *)v1 + v66) == 1 || v30 < v12 || v30 >= v14)
      sub_1000DEC44(v30);
  }
LABEL_28:
  swift_release(v19);
  v33 = v59;
  if (v12 == v14)
  {
LABEL_29:
    *((_BYTE *)v1 + v66) = 0;
    return;
  }
  if (v14 < v12)
    goto LABEL_45;
  if (v12 < v14)
  {
    v34 = (_QWORD *)(swift_isaMask & *v1);
    v60 = (char *)v1 + v34[12];
    v36 = v34[24];
    v35 = v34[25];
    v61 = (char *)v1 + v36;
    v58 = (char *)v1 + v35;
    v54 = v15;
    v53 = v14;
    while (2)
    {
      swift_beginAccess(v15, v69, 32, 0);
      v38 = *v15;
      v67 = v12;
      Dictionary.subscript.getter(&v68, &v67, v38, &type metadata for Int, v33, &protocol witness table for Int);
      v39 = v68;
      swift_endAccess(v69);

      if (v39)
        goto LABEL_35;
      v40 = sub_1000DEF94(v12);
      v41 = v57;
      v42 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
      v43 = v63;
      v44 = v64;
      v45 = v60;
      v42(v63, v60, v64);
      v46 = v62;
      v47 = v65;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 40))(v12, v44, v62);
      v48 = *(void (**)(char *, uint64_t))(v41 + 8);
      v48(v43, v44);
      v42(v43, v45, v44);
      (*(void (**)(char *, uint64_t, id, uint64_t, uint64_t))(v46 + 56))(v47, v12, v40, v44, v46);
      v48(v43, v44);
      if ((v61[8] & 1) == 0 && v12 == *(_QWORD *)v61)
      {
        v49 = v63;
        v50 = v64;
        v42(v63, v60, v64);
        v51 = *(void (**)(uint64_t, id, char *, uint64_t))(v62 + 72);
        v52 = 1;
        goto LABEL_43;
      }
      if ((v58[8] & 1) != 0 || v12 != *(_QWORD *)v58)
      {

        v37 = v65;
      }
      else
      {
        v49 = v63;
        v50 = v64;
        v42(v63, v60, v64);
        v51 = *(void (**)(uint64_t, id, char *, uint64_t))(v62 + 72);
        v52 = 2;
LABEL_43:
        v37 = v65;
        v51(v52, v40, v65, v50);

        v48(v49, v50);
      }
      v15 = v54;
      v14 = v53;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v37, AssociatedTypeWitness);
      v33 = v59;
LABEL_35:
      if (v14 == ++v12)
        goto LABEL_29;
      continue;
    }
  }
LABEL_46:
  __break(1u);
}

void sub_1000DEC44(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t WitnessTable;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  uint64_t v40;
  void *v41;

  v2 = v1;
  v4 = (_QWORD *)(swift_isaMask & *v1);
  v5 = v4[10];
  v6 = v4[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v6);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v35 = AssociatedTypeWitness;
  v36 = v8;
  v9 = __chkstk_darwin(AssociatedTypeWitness);
  v11 = (char *)&v34 - v10;
  v37 = *(_QWORD *)(v5 - 8);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v34 - v15;
  v38 = a1;
  v40 = a1;
  swift_beginAccess((char *)v1 + v4[23], v39, 33, 0);
  v17 = swift_getAssociatedTypeWitness(255, v6);
  v18 = type metadata accessor for Dictionary(0, &type metadata for Int, v17, &protocol witness table for Int);
  Dictionary.removeValue(forKey:)(&v41, &v40, v18);
  swift_endAccess(v39);
  v19 = v41;
  if (v41)
  {
    v20 = swift_isaMask & *v1;
    v21 = (char *)v1 + *(_QWORD *)(v20 + 0xC0);
    if ((v21[8] & 1) == 0 && *(_QWORD *)v21 == v38
      || (v22 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xC8), (v22[8] & 1) == 0) && *(_QWORD *)v22 == v38)
    {
      v23 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x60);
      v34 = v17;
      v24 = v16;
      v25 = v37;
      v26 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      v26(v24, v23, v5);
      v26(v14, v23, v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v38, v5, v6);
      v27 = *(void (**)(char *, uint64_t))(v25 + 8);
      v16 = v24;
      v17 = v34;
      v27(v14, v5);
      (*(void (**)(_QWORD, void *, char *, uint64_t, uint64_t))(v6 + 72))(0, v19, v11, v5, v6);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v35);
      v27(v16, v5);
      v20 = swift_isaMask & *v2;
    }
    v41 = v19;
    swift_beginAccess((char *)v2 + *(_QWORD *)(v20 + 176), v39, 33, 0);
    v28 = type metadata accessor for ViewRecycler(255, v17);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v28);
    v30 = type metadata accessor for ReusePool(0, v28, WitnessTable);
    v31 = ReusePool.recycle(_:)(&v41, v30);
    swift_endAccess(v39);
    if ((v31 & 1) != 0)
    {
      v32 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x60);
      v33 = v37;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v16, v32, v5);
      (*(void (**)(void *, uint64_t, uint64_t))(v6 + 64))(v19, v5, v6);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v5);
    }
    else
    {

    }
  }
}

id sub_1000DEF94(uint64_t a1)
{
  char *v1;
  char *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  objc_class *ObjectType;
  id v18;
  _BOOL8 v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  objc_super v26;
  id v27;

  v2 = v1;
  v4 = (_QWORD *)(swift_isaMask & *(_QWORD *)v1);
  v5 = v4[10];
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v24 - v7;
  swift_beginAccess(&v1[v4[22]], &v26, 33, 0);
  v9 = v4[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v9);
  v11 = type metadata accessor for ViewRecycler(255, AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v11);
  v13 = type metadata accessor for ReusePool(0, v11, WitnessTable);
  ReusePool.dequeue()(&v27, v13);
  swift_endAccess(&v26);
  v14 = v27;
  if (!v27)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v2[*(_QWORD *)((swift_isaMask & *(_QWORD *)v2) + 0x60)], v5);
    v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v5, v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    objc_msgSend(v2, "addSubview:", v14);
  }
  v15 = v14;
  sub_1000DE388(a1);
  objc_msgSend(v15, "setFrame:");

  objc_msgSend(v15, "setAutoresizingMask:", 0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
  v16 = v15;
  ObjectType = (objc_class *)swift_getObjectType();
  v26.receiver = v2;
  v26.super_class = ObjectType;
  objc_msgSend(v16, "setSemanticContentAttribute:", objc_msgSendSuper2(&v26, "semanticContentAttribute"));

  v18 = v16;
  v19 = objc_msgSend(v18, "effectiveUserInterfaceLayoutDirection") == (id)1;
  v20 = objc_msgSend(v18, "layer");
  objc_msgSend(v20, "setFlipsHorizontalAxis:", v19);

  v27 = v18;
  v25 = a1;
  swift_beginAccess(&v2[*(_QWORD *)((swift_isaMask & *(_QWORD *)v2) + 0xB8)], &v26, 33, 0);
  v21 = type metadata accessor for Dictionary(0, &type metadata for Int, AssociatedTypeWitness, &protocol witness table for Int);
  v22 = v18;
  Dictionary.subscript.setter(&v27, &v25, v21);
  swift_endAccess(&v26);
  return v22;
}

void sub_1000DF25C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000DE6E8();

}

uint64_t sub_1000DF290(uint64_t a1, CGFloat a2, CGFloat a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  void (*v15)(_QWORD *__return_ptr, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  double v17;
  double v18;
  CGFloat v19;
  CGFloat v20;
  uint64_t result;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[10];
  _QWORD v29[10];
  _QWORD v30[10];
  _QWORD v31[10];
  _QWORD v32[9];
  uint64_t v33;
  CGPoint v34;
  CGRect v35;

  v6 = swift_isaMask & *v3;
  v7 = *(_QWORD *)(v6 + 0x50);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v28[-1] - v9;
  sub_1000DD97C(v11);
  v12 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x60);
  v13 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v13(v10, v12, v7);
  v14 = *(_QWORD *)(v6 + 88);
  v15 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v14 + 24);
  v15(v28, v7, v14);
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  v17 = *(double *)v28;
  v18 = *(double *)&v28[1];
  objc_msgSend(v3, "contentSize");
  v35.size.width = v19;
  v35.size.height = v20;
  v35.origin.x = v18;
  v35.origin.y = v17;
  v34.x = a2;
  v34.y = a3;
  if (!CGRectContainsPoint(v35, v34))
    return 0;
  v13(v10, v12, v7);
  v15(v29, v7, v14);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v7);
  v22 = floor((a2 - v18) / (*(double *)&v29[4] + *(double *)&v29[6]));
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((uint64_t)v22 < 0)
    return 0;
  v27 = (uint64_t)v22;
  v23 = sub_1000DD828(result);
  if (v23 <= v27)
    return 0;
  v13(v10, v12, v7);
  v15(v30, v7, v14);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v7);
  v24 = floor((a3 - v17) / (*(double *)&v30[5] + *(double *)&v30[7]));
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
    goto LABEL_19;
  if (v24 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v25 = (uint64_t)v24;
  if ((uint64_t)v24 < 0)
    return 0;
  v13(v10, v12, v7);
  v15(v31, v7, v14);
  v16(v10, v7);
  if (v31[9] <= v25)
    return 0;
  v13(v10, v12, v7);
  v15(v32, v7, v14);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v7);
  v26 = v27 * v33;
  if ((unsigned __int128)(v27 * (__int128)v33) >> 64 != (v27 * v33) >> 63)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  result = v26 + v25;
  if (__OFADD__(v26, v25))
LABEL_23:
    __break(1u);
  return result;
}

int64_t *sub_1000DF598()
{
  void *v0;
  double v1;
  int64_t *v2;
  int64_t v3;

  objc_msgSend(v0, "contentOffset");
  sub_1000DDFF0(0, v1);
  return sub_1000E0864(v2, v3);
}

uint64_t sub_1000DF5C0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BYTE v32[24];

  v1 = v0;
  v2 = (_QWORD *)(swift_isaMask & *v0);
  v3 = v2[10];
  v4 = v2[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v4);
  v6 = __chkstk_darwin(AssociatedTypeWitness);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  v10 = __chkstk_darwin(v6);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v16 = (char *)&v27 - v14;
  v17 = (char *)v1 + v2[24];
  if ((v17[8] & 1) == 0)
  {
    v18 = *(_QWORD *)v17;
    if ((*(_QWORD *)v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v28 = v15;
      v29 = result;
      v19 = (char *)v1 + v2[12];
      v27 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v27((char *)&v27 - v14, v19, v3);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
      v21 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
      result = v21(v16, v3);
      if (v18 < v20)
      {
        v22 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xB8));
        swift_beginAccess(v22, v32, 32, 0);
        v23 = *v22;
        v30 = v18;
        v24 = swift_getAssociatedTypeWitness(0, v4);
        Dictionary.subscript.getter(&v31, &v30, v23, &type metadata for Int, v24, &protocol witness table for Int);
        v25 = v31;
        if (!v31)
          return swift_endAccess(v32);
        swift_endAccess(v32);
        v26 = v27;
        v27(v16, v19, v3);
        v26(v12, v19, v3);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v18, v3, v4);
        v21(v12, v3);
        (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v4 + 72))(1, v25, v8, v3, v4);

        (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v29);
        return v21(v16, v3);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000DF844()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BYTE v32[24];

  v1 = v0;
  v2 = (_QWORD *)(swift_isaMask & *v0);
  v3 = v2[10];
  v4 = v2[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v4);
  v6 = __chkstk_darwin(AssociatedTypeWitness);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  v10 = __chkstk_darwin(v6);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v16 = (char *)&v27 - v14;
  v17 = (char *)v1 + v2[25];
  if ((v17[8] & 1) == 0)
  {
    v18 = *(_QWORD *)v17;
    if ((*(_QWORD *)v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v28 = v15;
      v29 = result;
      v19 = (char *)v1 + v2[12];
      v27 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v27((char *)&v27 - v14, v19, v3);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
      v21 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
      result = v21(v16, v3);
      if (v18 < v20)
      {
        v22 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xB8));
        swift_beginAccess(v22, v32, 32, 0);
        v23 = *v22;
        v30 = v18;
        v24 = swift_getAssociatedTypeWitness(0, v4);
        Dictionary.subscript.getter(&v31, &v30, v23, &type metadata for Int, v24, &protocol witness table for Int);
        v25 = v31;
        if (!v31)
          return swift_endAccess(v32);
        swift_endAccess(v32);
        v26 = v27;
        v27(v16, v19, v3);
        v26(v12, v19, v3);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v18, v3, v4);
        v21(v12, v3);
        (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v4 + 72))(2, v25, v8, v3, v4);

        (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v29);
        return v21(v16, v3);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000DFAC8(uint64_t a1, char a2)
{
  _QWORD *v2;
  char *v5;

  sub_1000E1AD8();
  v5 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xC8);
  *(_QWORD *)v5 = a1;
  v5[8] = a2 & 1;
  return sub_1000DF844();
}

void sub_1000DFB1C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  id v17;
  _QWORD *v18;
  id v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char *v25;
  void *v26;

  v3 = v2;
  v6 = (uint64_t *)(swift_isaMask & *v2);
  v7 = v6[26];
  v8 = *(void **)((char *)v2 + v7);
  if (!v8
    || objc_msgSend(v8, "phase") == (id)3
    || (v9 = *(void **)((char *)v2 + v7)) != 0 && objc_msgSend(v9, "phase") == (id)4)
  {
    swift_bridgeObjectRetain(a1);
    v11 = (void *)sub_10056CB50(v10);
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(a1).n128_u64[0];
    if (v11)
    {
      objc_msgSend(v11, "locationInView:", v2, v12);
      v14 = v13;
      v16 = v15;
      v17 = objc_msgSend(v2, "hitTest:withEvent:", a2);
      if (v17
        && (sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr),
            v18 = v2,
            v19 = v17,
            v20 = static NSObject.== infix(_:_:)(v19, v18),
            v19,
            v18,
            (v20 & 1) != 0)
        || (v21 = sub_1000E1DAC(v17, v6[10], v6[11]), (v21 & 1) == 0))
      {
        v22 = 0;
        v24 = 1;
      }
      else
      {
        v22 = sub_1000DF290(v21, v14, v16);
        v24 = v23 & 1;
      }
      sub_1000E189C();
      v25 = (char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0xC0);
      *(_QWORD *)v25 = v22;
      v25[8] = v24;
      sub_1000DF5C0();

      v26 = *(void **)((char *)v3 + v7);
      *(_QWORD *)((char *)v3 + v7) = v11;

    }
  }
  sub_1000DFFDC(v3, a1, a2, (SEL *)&selRef_touchesBegan_withEvent_);
}

double sub_1000DFCE0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1000E0098(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_1000DFB1C);
}

void sub_1000DFCEC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v37 = a2;
  v4 = a1;
  v5 = (_QWORD *)(swift_isaMask & *(_QWORD *)v2);
  v6 = v5[10];
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v32 - v8;
  v10 = v5[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v10);
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v14 = (char *)&v32 - v13;
  v15 = v5[26];
  v16 = *(void **)&v3[v15];
  if (v16)
  {
    v17 = v16;
    v18 = v4;
    v19 = v17;
    v36 = v18;
    if ((sub_10026A684(v17, v18) & 1) != 0)
    {
      v20 = *(void **)&v3[v15];
      *(_QWORD *)&v3[v15] = 0;

      v21 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC0)];
      if ((v21[8] & 1) != 0 || (v35 = *(_QWORD *)v21, (objc_msgSend(v3, "isDragging") & 1) != 0))
      {
        sub_1000E189C();
        v22 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC0)];
        *(_QWORD *)v22 = 0;
        v22[8] = 1;
        sub_1000DF5C0();
        sub_1000E1AD8();
        v23 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC8)];
        *(_QWORD *)v23 = 0;
        v23[8] = 1;
        sub_1000DF844();
      }
      else
      {
        sub_1000E189C();
        v24 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC0)];
        *(_QWORD *)v24 = 0;
        v24[8] = 1;
        sub_1000DF5C0();
        sub_1000E1AD8();
        v25 = &v3[*(_QWORD *)((swift_isaMask & *(_QWORD *)v3) + 0xC8)];
        *(_QWORD *)v25 = v35;
        v25[8] = 0;
        sub_1000DF844();
        v26 = swift_isaMask & *(_QWORD *)v3;
        v27 = (uint64_t *)&v3[*(_QWORD *)(v26 + 0x68)];
        v34 = (uint64_t (*)(char *, uint64_t))*v27;
        if (v34)
        {
          v33 = v27[1];
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v3[*(_QWORD *)(v26 + 96)], v6);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v35, v6, v10);
          v28 = v33;
          v29 = v34;
          sub_10003A340((uint64_t)v34, v33);
          v30 = *(void (**)(char *, uint64_t))(v7 + 8);
          v31 = v28;
          v30(v9, v6);
          LOBYTE(v28) = v29(v14, v35);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
          if ((v28 & 1) != 0)
            sub_1000E1D3C();

          sub_10003A350((uint64_t)v29, v31);
          goto LABEL_7;
        }
      }
    }

LABEL_7:
    v4 = v36;
  }
  sub_1000DFFDC(v3, v4, v37, (SEL *)&selRef_touchesEnded_withEvent_);
}

void sub_1000DFFDC(_QWORD *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v7;
  Class isa;
  uint64_t v9;
  objc_class *v10;
  objc_super v11;

  v7 = swift_isaMask & *a1;
  sub_100008FE4(0, (unint64_t *)&qword_100838EE0, UITouch_ptr);
  sub_1000E2124();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v10 = (objc_class *)type metadata accessor for HorizontalShelfView(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v9);
  v11.receiver = a1;
  v11.super_class = v10;
  objc_msgSendSuper2(&v11, *a4, isa, a3);

}

double sub_1000E008C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1000E0098(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_1000DFCEC);
}

double sub_1000E0098(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  double result;

  v9 = sub_100008FE4(0, (unint64_t *)&qword_100838EE0, UITouch_ptr);
  v10 = sub_1000E2124();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  a5(v11, a4);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

void sub_1000E0130(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  void *v6;
  char *v7;
  char *v8;

  v5 = *(_QWORD *)((swift_isaMask & *v2) + 0xD0);
  v6 = *(void **)((char *)v2 + v5);
  *(_QWORD *)((char *)v2 + v5) = 0;

  sub_1000E189C();
  v7 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xC0);
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  sub_1000DF5C0();
  sub_1000E1AD8();
  v8 = (char *)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0xC8);
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  sub_1000DF844();
  sub_1000DFFDC(v2, a1, a2, (SEL *)&selRef_touchesCancelled_withEvent_);
}

double sub_1000E01E8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1000E0098(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_1000E0130);
}

void sub_1000E01F4()
{
  sub_1000E1EB4();
}

uint64_t type metadata accessor for HorizontalShelfView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001143C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HorizontalShelfView);
}

uint64_t sub_1000E021C(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "\b";
  v2[1] = &unk_1006636A8;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t sub_1000E0264()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for SnapToColumnScrollObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001143C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapToColumnScrollObserver);
}

__n128 initializeWithTake for OnboardingTrayLayout.Item(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HorizontalShelfLayout(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 64);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HorizontalShelfLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HorizontalShelfLayout()
{
  return &type metadata for HorizontalShelfLayout;
}

void sub_1000E036C(UIScrollView in)
{
  ScrollObserver.didScroll(in:)(in);
}

void sub_1000E0374(double a1, double a2, uint64_t a3, double *a4)
{
  sub_1000E1EE0(a4, a1, a2);
}

_QWORD *sub_1000E037C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1000E06CC(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for Artwork);
}

_QWORD *sub_1000E0388(uint64_t a1)
{
  return sub_1000E0C18(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_1000C5DE0);
}

_QWORD *sub_1000E0394(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  int64_t v5;
  uint64_t v8;
  _QWORD *v9;
  size_t v10;
  void *v11;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_16;
  if (!v5)
    return _swiftEmptyArrayStorage;
  if (v5 > 0)
  {
    v8 = sub_10007B804(&qword_100829F88);
    v9 = (_QWORD *)swift_allocObject(v8, v5 + 32, 7);
    v10 = j__malloc_size(v9);
    v9[2] = v5;
    v9[3] = 2 * v10 - 64;
    if (v4 != a3)
      goto LABEL_5;
    goto LABEL_15;
  }
  v9 = _swiftEmptyArrayStorage;
  if (v4 == a3)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_5:
  if (v5 < 0)
  {
LABEL_17:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_18;
  }
  v11 = v9 + 4;
  if (a2 + a3 >= (unint64_t)v9 + v5 + 32 || (unint64_t)v11 >= a2 + a3 + v5)
  {
    memcpy(v11, (const void *)(a2 + a3), v5);
    return v9;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_18:
  __break(1u);
  return result;
}

_QWORD *sub_1000E04EC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1000E093C(a1, a2, a3, a4, &qword_10082A0E0, (uint64_t (*)(_QWORD))&type metadata accessor for ItemLayoutContext);
}

_QWORD *sub_1000E0500(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1000E0514(a1, a2, a3, a4, &qword_10082C4A8, CALayer_ptr);
}

_QWORD *sub_1000E0514(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5, _QWORD *a6)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *result;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v7)
    return _swiftEmptyArrayStorage;
  v12 = 8 * v7;
  if (v7 <= 0)
  {
    v14 = _swiftEmptyArrayStorage;
    if (v6 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v13 = sub_10007B804((uint64_t *)&unk_10082B4A0);
  v14 = (_QWORD *)swift_allocObject(v13, v12 + 32, 7);
  v15 = j__malloc_size(v14);
  v16 = v15 - 32;
  if (v15 < 32)
    v16 = v15 - 25;
  v14[2] = v7;
  v14[3] = (2 * (v16 >> 3)) | 1;
  if (v6 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v7 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v17 = a2 + 8 * a3;
  if (v17 >= (unint64_t)&v14[(unint64_t)v12 / 8 + 4] || (unint64_t)(v14 + 4) >= v17 + v12)
  {
    sub_100008FE4(0, a5, a6);
    swift_arrayInitWithCopy(v14 + 4);
    return v14;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_1000E06AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1000E0514(a1, a2, a3, a4, (unint64_t *)&qword_10082A430, UIColor_ptr);
}

_QWORD *sub_1000E06C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1000E06CC(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for Lockup);
}

_QWORD *sub_1000E06CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *result;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v6)
    return _swiftEmptyArrayStorage;
  v10 = 8 * v6;
  if (v6 <= 0)
  {
    v12 = _swiftEmptyArrayStorage;
    if (v5 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v11 = sub_10007B804((uint64_t *)&unk_10082B4A0);
  v12 = (_QWORD *)swift_allocObject(v11, v10 + 32, 7);
  v13 = j__malloc_size(v12);
  v14 = v13 - 32;
  if (v13 < 32)
    v14 = v13 - 25;
  v12[2] = v6;
  v12[3] = (2 * (v14 >> 3)) | 1;
  if (v5 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v6 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v15 = a2 + 8 * a3;
  if (v15 >= (unint64_t)&v12[(unint64_t)v10 / 8 + 4] || (unint64_t)(v12 + 4) >= v15 + v10)
  {
    a5(0);
    swift_arrayInitWithCopy(v12 + 4);
    return v12;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_1000E0858(uint64_t a1)
{
  return sub_1000E0C18(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_1000C5DBC);
}

int64_t *sub_1000E0864(int64_t *result, int64_t a2)
{
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  int64_t *v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9[3];

  v2 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    v4 = (int64_t)result;
    if (v2 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_10007B804(&qword_10083E5C0);
      v6 = (int64_t *)swift_allocObject(v5, 8 * v2 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v2;
      v6[3] = 2 * (v8 >> 3);
    }
    result = sub_1000E0F78(v9, v6 + 4, v2, v4, a2);
    if (result == (int64_t *)v2)
      return v6;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1000E0928(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1000E093C(a1, a2, a3, a4, &qword_10082D8B0, (uint64_t (*)(_QWORD))&type metadata accessor for AdamId);
}

_QWORD *sub_1000E093C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  _QWORD *result;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v7)
    return _swiftEmptyArrayStorage;
  if (v7 > 0)
  {
    v11 = sub_10007B804(a5);
    v12 = *(_QWORD *)(a6(0) - 8);
    v13 = *(_QWORD *)(v12 + 72);
    v14 = *(unsigned __int8 *)(v12 + 80);
    v15 = (v14 + 32) & ~v14;
    v16 = (_QWORD *)swift_allocObject(v11, v15 + v13 * v7, v14 | 7);
    v17 = j__malloc_size(v16);
    if (!v13)
    {
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v17 - v15 == 0x8000000000000000 && v13 == -1)
      goto LABEL_23;
    v16[2] = v7;
    v16[3] = 2 * ((uint64_t)(v17 - v15) / v13);
    if (v6 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
  v16 = _swiftEmptyArrayStorage;
  if (v6 == a3)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_10:
  if (v7 < 0)
  {
LABEL_24:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_25;
  }
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (char *)v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  v21 = *(_QWORD *)(v19 + 72);
  v22 = a2 + v21 * a3;
  v23 = v21 * v7;
  v24 = &v20[v23];
  v25 = v22 + v23;
  if (v22 >= (unint64_t)v24 || (unint64_t)v20 >= v25)
  {
    swift_arrayInitWithCopy(v20);
    return v16;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_25:
  __break(1u);
  return result;
}

_QWORD *sub_1000E0B04(uint64_t a1)
{
  return sub_1000E0C18(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_1000C6A70);
}

_QWORD *sub_1000E0B10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10007B804((uint64_t *)&unk_10082D8F0);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_1000E10B8((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_1000D8798(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1000E0BF4(uint64_t a1)
{
  return sub_1000E0C18(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_1000C72C0);
}

_QWORD *sub_1000E0C00(uint64_t a1)
{
  return sub_1000E0C18(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_1000C74D4);
}

_QWORD *sub_1000E0C0C(uint64_t a1)
{
  return sub_1000E0C18(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_1000C76E8);
}

_QWORD *sub_1000E0C18(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t, uint64_t, __n128))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_10007B804((uint64_t *)&unk_10082B4A0);
      v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }
    v9 = swift_bridgeObjectRetain(a1);
    v10 = a2(v6 + 4, v4, a1, v9);
    a2 = v11;
    swift_bridgeObjectRelease(v10);
    if (a2 == (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))v4)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a1);
    if (!v4)
      return _swiftEmptyArrayStorage;
  }
  return v6;
}

_QWORD *sub_1000E0D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_10007B804(&qword_100840F80);
  v4 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      swift_bridgeObjectRetain(a1);
      sub_1000E12B4(&v13, (char *)v8 + v7, v1, a1);
      v12 = v11;
      sub_1000D8798(v13);
      if (v12 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double *sub_1000E0E10(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  double *v14;
  double *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 2 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_10007B804(&qword_10082A050);
  v10 = (double *)swift_allocObject(v9, v8 * 8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 17;
  *((_QWORD *)v10 + 2) = v5;
  *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = (char *)(v10 + 4);
  v14 = (double *)(a2 + 16 * a3);
  if (v14 >= &v10[v8 + 4] || v13 >= (char *)&v14[v8])
  {
    memcpy(v13, v14, 16 * v5);
    return v10;
  }
  result = (double *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

int64_t *sub_1000E0F78(int64_t *result, int64_t *a2, uint64_t a3, int64_t a4, int64_t a5)
{
  int64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64x2_t v14;
  int64x2_t *v15;
  int64x2_t v16;
  int64_t *v17;
  int64_t v18;

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
LABEL_6:
    v5 = a4;
LABEL_7:
    *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0)
    goto LABEL_31;
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4)
    goto LABEL_32;
  v6 = a5 - a4;
  if (a5 > a4)
  {
    v5 = a4 + 1;
    *a2 = a4;
    if (a3 == 1)
      goto LABEL_7;
    if (v5 == a5)
    {
      a3 = 1;
      v5 = a5;
      goto LABEL_7;
    }
    v7 = v6 - 2;
    if (v6 - 2 >= (unint64_t)(a3 - 2))
      v7 = a3 - 2;
    if (v7 >= ~a4 + a5)
      v7 = ~a4 + a5;
    v8 = v7 + 1;
    if (v8 >= 5)
    {
      v11 = v8 & 3;
      if ((v8 & 3) == 0)
        v11 = 4;
      v12 = v8 - v11;
      v13 = v5 + v8 - v11;
      v10 = &a2[v8 - v11];
      v9 = v12 + 2;
      v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_100663550);
      v15 = (int64x2_t *)(a2 + 3);
      v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        *v15 = vaddq_s64(v14, v16);
        v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      v5 = v13;
    }
    else
    {
      v9 = 2;
      v10 = a2;
    }
    v17 = v10 + 1;
    while (v5 < a5)
    {
      v18 = v5 + 1;
      *v17 = v5;
      if (a3 == v9)
      {
        ++v5;
        goto LABEL_7;
      }
      ++v9;
      ++v17;
      ++v5;
      if (a5 == v18)
      {
        v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E10B8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1000E12B4(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = sub_10007B804((uint64_t *)&unk_100834600);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexPath(0);
  v41 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return;
  }
  if (!a3)
  {
    v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    v30(a2, v22, v11);
    if (v21 == v39)
    {
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v10, 1, 1, v11, v12);
          v19 = 0;
LABEL_38:
          sub_1000E20E4((uint64_t)v10);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

void sub_1000E15FC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  char *v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v1 = v0;
  v2 = swift_isaMask & *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v2 + 88));
  v4 = type metadata accessor for ViewRecycler(0, AssociatedTypeWitness);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - v5;
  v7 = (_QWORD *)((char *)v1 + *(_QWORD *)(v2 + 104));
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x70)) = 1;
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x78)) = 0;
  v8 = *(_QWORD *)((swift_isaMask & *v1) + 0x80);
  v9 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver(0));
  *(_QWORD *)((char *)v1 + v8) = CompoundScrollObserver.init(children:)(&_swiftEmptyArrayStorage);
  v10 = (_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x88));
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x90)) = 0;
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x98)) = 0;
  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = 0;
  v11 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA8);
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  ViewRecycler.init()(AssociatedTypeWitness);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for ViewRecycler<A>, v4);
  ReusePool.init(recycler:limit:)(v6, 5, v4, WitnessTable);
  v13 = *(_QWORD *)((swift_isaMask & *v1) + 0xB8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, AssociatedTypeWitness, 0, 0);
  v15 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  *(_QWORD *)((char *)v1 + v13) = Dictionary.init(dictionaryLiteral:)(v15, &type metadata for Int, AssociatedTypeWitness, &protocol witness table for Int);
  v16 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xC0);
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = (char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xC8);
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  *(_QWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xD0)) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/HorizontalShelfView.swift", 34, 2, 250, 0);
  __break(1u);
}

uint64_t sub_1000E189C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _BYTE v31[24];

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v2 = v1[10];
  v3 = v1[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v3);
  v5 = __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v26 - v6;
  v8 = *(_QWORD *)(v2 - 8);
  v9 = __chkstk_darwin(v5);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v15 = (char *)&v26 - v14;
  v16 = (char *)v0 + v1[24];
  if ((v16[8] & 1) == 0)
  {
    v27 = v13;
    v17 = *(_QWORD *)v16;
    v18 = (_QWORD *)((char *)v0 + v1[23]);
    swift_beginAccess(v18, v31, 32, 0);
    v19 = *v18;
    v28 = v17;
    v29 = v17;
    v20 = swift_getAssociatedTypeWitness(0, v3);
    Dictionary.subscript.getter(&v30, &v29, v19, &type metadata for Int, v20, &protocol witness table for Int);
    v21 = v30;
    if (v30)
    {
      swift_endAccess(v31);
      v22 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x60);
      v23 = AssociatedTypeWitness;
      v24 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v24(v15, v22, v2);
      v24(v11, v22, v2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v28, v2, v3);
      v25 = *(void (**)(char *, uint64_t))(v8 + 8);
      v25(v11, v2);
      (*(void (**)(_QWORD, void *, char *, uint64_t, uint64_t))(v3 + 72))(0, v21, v7, v2, v3);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v23);
      return ((uint64_t (*)(char *, uint64_t))v25)(v15, v2);
    }
    else
    {
      return swift_endAccess(v31);
    }
  }
  return result;
}

uint64_t sub_1000E1AD8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char v24;
  _BOOL8 v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _BYTE v34[24];

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v2 = v1[10];
  v3 = v1[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v3);
  v5 = __chkstk_darwin(AssociatedTypeWitness);
  v7 = (char *)&v29 - v6;
  v8 = *(_QWORD *)(v2 - 8);
  v9 = __chkstk_darwin(v5);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v15 = (char *)&v29 - v14;
  v16 = (char *)v0 + v1[25];
  if ((v16[8] & 1) == 0)
  {
    v30 = v13;
    v17 = *(_QWORD *)v16;
    v18 = (_QWORD *)((char *)v0 + v1[23]);
    swift_beginAccess(v18, v34, 32, 0);
    v19 = *v18;
    v31 = v17;
    v32 = v17;
    v20 = swift_getAssociatedTypeWitness(0, v3);
    Dictionary.subscript.getter(&v33, &v32, v19, &type metadata for Int, v20, &protocol witness table for Int);
    v21 = v33;
    if (v33)
    {
      swift_endAccess(v34);
      v22 = swift_isaMask & *v0;
      v23 = (char *)v0 + *(_QWORD *)(v22 + 0xC0);
      v24 = v23[8];
      v29 = AssociatedTypeWitness;
      v25 = (v24 & 1) == 0 && v31 == *(_QWORD *)v23;
      v26 = (char *)v0 + *(_QWORD *)(v22 + 96);
      v27 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v27(v15, v26, v2);
      v27(v11, v26, v2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v31, v2, v3);
      v28 = *(void (**)(char *, uint64_t))(v8 + 8);
      v28(v11, v2);
      (*(void (**)(_BOOL8, void *, char *, uint64_t, uint64_t))(v3 + 72))(v25, v21, v7, v2, v3);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v29);
      return ((uint64_t (*)(char *, uint64_t))v28)(v15, v2);
    }
    else
    {
      return swift_endAccess(v34);
    }
  }
  return result;
}

uint64_t sub_1000E1D3C()
{
  _QWORD *v0;
  char *v1;
  char *v2;

  sub_1000E189C();
  v1 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xC0);
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  sub_1000DF5C0();
  sub_1000E1AD8();
  v2 = (char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xC8);
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  return sub_1000DF844();
}

unint64_t sub_1000E1DAC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  if (!a1)
    return 0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3);
  v7 = a1;
  while (1)
  {
    v9 = swift_dynamicCastUnknownClass(v7, AssociatedTypeWitness);
    v8 = v9 != 0;
    if (v9)
      break;
    v11 = type metadata accessor for HorizontalShelfView(0, a2, a3, v10);
    if (swift_dynamicCastClass(v7, v11))
      break;
    v12 = objc_opt_self(UIControl);
    v13 = (void *)swift_dynamicCastObjCClass(v7, v12);
    if (v13)
    {
      if ((objc_msgSend(v13, "isTracking") & 1) != 0)
        break;
    }
    v8 = (unint64_t)objc_msgSend(v7, "superview");

    v7 = (id)v8;
    if (!v8)
      return v8;
  }

  return v8;
}

void sub_1000E1EB4()
{
  _swift_stdlib_reportUnimplementedInitializer("AppStore.HorizontalShelfView", 28, "init(frame:)", 12, 0);
  __break(1u);
}

void sub_1000E1EE0(double *a1, double a2, double a3)
{
  uint64_t *v3;
  double *v4;
  uint64_t *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *Strong;
  int64_t *v15;
  int64_t v16;
  long double v17;
  void *v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double Width;
  double v28;
  void *v29;
  double v30;
  double v31;
  char *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  _QWORD v37[4];
  double v38;
  double v39;
  CGRect v40;

  v4 = (double *)v3;
  v8 = v3 + 2;
  v9 = *(double *)v3;
  v10 = *(_QWORD *)(*v3 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(a1);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v3 + 2);
  v15 = sub_1000DF598();

  v16 = v15[2];
  swift_bridgeObjectRelease(v15);
  if (v16)
  {
    v17 = *a1;
    v18 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
    objc_msgSend(v18, "bounds");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;

    v40.origin.x = v20;
    v40.origin.y = v22;
    v40.size.width = v24;
    v40.size.height = v26;
    Width = CGRectGetWidth(v40);
    if (v17 > 0.0)
    {
      v28 = Width;
      v29 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
      objc_msgSend(v29, "contentSize");
      v31 = v30;

      if (v17 < v31 - v28)
      {
        v32 = (char *)swift_unknownObjectUnownedLoadStrong(v8);
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, &v32[*(_QWORD *)((swift_isaMask & *(_QWORD *)v32) + 0x60)], v10);
        (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(*(_QWORD *)&v9 + 88) + 24))(v37, v10);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

        v33 = v38 + v39;
        v34 = a2;
        if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) == 0)
          v34 = v4[3];
        v35 = fmod(v17, v38 + v39);
        if (v34 >= 0.0)
          v36 = v33 - v35 + *a1;
        else
          v36 = *a1 - v35;
        *a1 = v36;
        v4[3] = a2;
        v4[4] = a3;
      }
    }
  }
}

uint64_t sub_1000E20E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10007B804((uint64_t *)&unk_100834600);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000E2124()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083C790;
  if (!qword_10083C790)
  {
    v1 = sub_100008FE4(255, (unint64_t *)&qword_100838EE0, UITouch_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10083C790);
  }
  return result;
}

uint64_t sub_1000E217C(uint64_t a1)
{
  _QWORD v2[9];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = "\b";
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = &unk_1006637A0;
  v2[6] = &unk_1006637B8;
  v2[7] = &unk_1006637B8;
  v2[8] = &unk_1006637B8;
  return swift_initClassMetadata2(a1, 0, 9, v2, a1 + 1072);
}

void sub_1000E2200(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, "collectionView");
  sub_1004B8520(a1, v3);

  sub_1000E2E64();
}

uint64_t sub_1000E2270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  result = __chkstk_darwin(v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + qword_10082CFE0);
  if (v6)
  {
    v7 = swift_retain(v6);
    Date.init()(v7);
    PageRefreshGate.appWillForeground(on:)(v5);
    swift_release(v6);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t sub_1000E230C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StoreViewControllerLifecycleEvent(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess(v10, v21, 0, 0);
  sub_1000BFA68(v10, (uint64_t)v22);
  if (v23)
  {
    sub_100022500((uint64_t)v22, (uint64_t)v18);
    sub_1000057AC((uint64_t)v22, (uint64_t *)&unk_10082B470);
    v11 = v19;
    v12 = v20;
    sub_100060B40(v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), v6);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)(v9, v11, v12);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    result = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v18);
  }
  else
  {
    result = sub_1000057AC((uint64_t)v22, (uint64_t *)&unk_10082B470);
  }
  v14 = *(_QWORD *)(v1 + qword_10082CFE0);
  if (v14)
  {
    swift_retain(*(_QWORD *)(v1 + qword_10082CFE0));
    Date.init()(v15);
    PageRefreshGate.appWillBackground(on:)(v5);
    v16 = swift_release(v14);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  }
  return result;
}

uint64_t sub_1000E24C0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_10082CFC8);
}

uint64_t sub_1000E24D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + qword_10082CFE0);
  *(_QWORD *)(v1 + qword_10082CFE0) = a1;
  return swift_release(v2);
}

uint64_t sub_1000E24E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;

  v4 = v3;
  v32 = a3;
  v7 = *v4;
  v8 = swift_isaMask;
  v9 = type metadata accessor for Shelf.ContentType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v29 - v15;
  v17 = a1;
  Shelf.contentType.getter(v14);
  v18 = sub_1004F2D30();
  if (v18)
  {
    v30 = v19;
    v31 = v18;
    if ((dispatch thunk of ShelfPresenter.doesShelfExist(for:)(a2, *(_QWORD *)((v8 & v7) + 0x400), *(_QWORD *)((v8 & v7) + 0x428)) & 1) != 0)v20 = sub_1004B8920(a2);
    else
      v20 = 0;
    v21 = Shelf.isHorizontal.getter();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
    if (v22 != enum case for Shelf.ContentType.smallLockup(_:)
      && v22 != enum case for Shelf.ContentType.mediumLockup(_:))
    {
      if (v22 == enum case for Shelf.ContentType.largeLockup(_:))
      {
LABEL_20:
        v26 = 1;
        goto LABEL_21;
      }
      if (v22 != enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
        && v22 != enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
        && v22 != enum case for Shelf.ContentType.action(_:))
      {
        if (v22 == enum case for Shelf.ContentType.ribbonBar(_:))
          goto LABEL_20;
        if (v22 != enum case for Shelf.ContentType.editorialCard(_:)
          && v22 != enum case for Shelf.ContentType.videoCard(_:))
        {
          v26 = 1;
          if (v22 == enum case for Shelf.ContentType.brick(_:)
            || v22 == enum case for Shelf.ContentType.categoryBrick(_:))
          {
            goto LABEL_21;
          }
          if (v22 != enum case for Shelf.ContentType.reviews(_:)
            && v22 != enum case for Shelf.ContentType.appTrailerLockup(_:)
            && v22 != enum case for Shelf.ContentType.framedVideo(_:)
            && v22 != enum case for Shelf.ContentType.screenshotsLockup(_:)
            && v22 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
            && v22 != enum case for Shelf.ContentType.smallBreakout(_:))
          {
            if (v22 == enum case for Shelf.ContentType.editorialStoryCard(_:))
              goto LABEL_20;
            if (v22 != enum case for Shelf.ContentType.mixedMediaLockup(_:)
              && v22 != enum case for Shelf.ContentType.gameCenterActivityFeedCard(_:)
              && v22 != enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
              && v22 != enum case for Shelf.ContentType.posterLockup(_:)
              && v22 != enum case for Shelf.ContentType.smallContactCard(_:))
            {
              if (v22 != enum case for Shelf.ContentType.informationRibbon(_:))
              {
                v26 = v21;
                if (v22 != enum case for Shelf.ContentType.appPromotion(_:))
                {
                  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
                  v26 = 0;
                }
                goto LABEL_21;
              }
              goto LABEL_20;
            }
          }
        }
      }
    }
    v26 = v21;
LABEL_21:
    v27 = v26 & 1;
    sub_1004AC660((uint64_t)v16, v26 & 1, v20, v4, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t *, _QWORD))(v30 + 24))(v17, v27, v4, *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_artworkLoader));
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v16, v9);
}

unint64_t sub_1000E28A4()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  id *v10;
  double v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  NSString v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  NSString v42;
  id v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v49;
  unint64_t v50;

  v2 = swift_isaMask & *v0;
  v3 = type metadata accessor for ShelfBackground(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (id *)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __chkstk_darwin(v7);
  v10 = (id *)((char *)&v49 - v9);
  v50 = (unint64_t)_swiftEmptyArrayStorage;
  v11 = (*(double (**)(__n128))(v2 + 1272))(v8);
  v12 = sub_1000B0A48(v11);
  if (v12)
  {
    v13 = v12;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    v1 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v14 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v1 >= v14 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v1 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v13);
    specialized Array._endMutation()(v15);

  }
  v16 = sub_1004AD7D0(v0);
  if (v16)
  {
    v17 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v20);

  }
  v21 = *(_QWORD *)(v2 + 1024);
  v22 = *(_QWORD *)(v2 + 1064);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v21, v22) < 1)
    goto LABEL_14;
  dispatch thunk of ShelfPresenter.background(for:)(0, v21, v22);
  if ((*(unsigned int (**)(id *, uint64_t))(v4 + 88))(v10, v3) != enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(id *, uint64_t))(v4 + 8))(v10, v3);
    goto LABEL_14;
  }
  (*(void (**)(id *, uint64_t))(v4 + 96))(v10, v3);

  v23 = (char *)v10 + *(int *)(sub_10007B804(&qword_10082D0F0) + 48);
  v24 = type metadata accessor for ShelfBackgroundStyle(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v26 = objc_msgSend(v25, "fractionalWidthDimension:", 1.0);
  v27 = objc_msgSend(v25, "absoluteDimension:", 2000.0);
  v28 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v26, v27);

  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v28, v29, 1, 0.0, -2000.0);

  objc_msgSend(v30, "setExtendsBoundary:", 0);
  v10 = (id *)v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v1 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v31 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v1 >= v31 >> 1)
    goto LABEL_23;
  while (1)
  {
    v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v10);
    specialized Array._endMutation()(v32);

LABEL_14:
    if (dispatch thunk of ShelfPresenter.sectionCount.getter(v21, v22) < 1)
      break;
    v33 = dispatch thunk of ShelfPresenter.sectionCount.getter(v21, v22);
    v34 = __OFSUB__(v33, 1);
    v35 = v33 - 1;
    if (!v34)
    {
      dispatch thunk of ShelfPresenter.background(for:)(v35, v21, v22);
      if ((*(unsigned int (**)(id *, uint64_t))(v4 + 88))(v6, v3) == enum case for ShelfBackground.color(_:))
      {
        (*(void (**)(id *, uint64_t))(v4 + 96))(v6, v3);

        v36 = (char *)v6 + *(int *)(sub_10007B804(&qword_10082D0F0) + 48);
        v37 = type metadata accessor for ShelfBackgroundStyle(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
        v38 = (void *)objc_opt_self(NSCollectionLayoutDimension);
        v39 = objc_msgSend(v38, "fractionalWidthDimension:", 1.0);
        v40 = objc_msgSend(v38, "absoluteDimension:", 2000.0);
        v41 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v39, v40);

        v42 = String._bridgeToObjectiveC()();
        v43 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:", v41, v42, 5, 0.0, 2000.0);

        objc_msgSend(v43, "setExtendsBoundary:", 0);
        v44 = v43;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
        v46 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v45 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v46 >= v45 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
        v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v44);
        specialized Array._endMutation()(v47);

      }
      else
      {
        (*(void (**)(id *, uint64_t))(v4 + 8))(v6, v3);
      }
      return v50;
    }
    __break(1u);
LABEL_23:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v1 + 1, 1);
  }
  return v50;
}

void sub_1000E2E64()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  Class isa;
  id v6;

  v0 = sub_1000E5710();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "configuration");
    v3 = sub_100008FE4(0, &qword_10082AFF0, UICollectionViewCompositionalLayoutConfiguration_ptr);
    v6 = (id)NSCopying.makeCopy()(v3);

    v4 = sub_1000E28A4();
    sub_100008FE4(0, &qword_10082C530, NSCollectionLayoutBoundarySupplementaryItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

    objc_msgSend(v1, "setConfiguration:", v6);
  }
}

void sub_1000E2F60()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  char v19;

  v1 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController];
  if (v2)
  {
    v3 = type metadata accessor for JULoadingViewController(0);
    if (swift_dynamicCastClass(v2, v3))
    {
      v4 = v2;
      static ViewControllerContainment.remove(_:)(v2);

      v5 = *(void **)&v0[v1];
      *(_QWORD *)&v0[v1] = 0;

      v6 = *(void **)&v0[v1];
      v7 = v6;
      v8 = objc_msgSend(v0, "view");
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "bounds");
        v11 = v10;
        v13 = v12;
        v15 = v14;
        v17 = v16;

        v18[0] = v11;
        v18[1] = v13;
        v18[2] = v15;
        v18[3] = v17;
        v19 = 0;
        static ViewControllerContainment.add(_:to:frame:)(v6, v0, v18);

        sub_10019862C();
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1000E3070()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t (**v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unsigned int v23;
  void *v24;
  id v25;
  __n128 v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = (_QWORD *)(swift_isaMask & *v0);
  v3 = sub_10007B804((uint64_t *)&unk_10082D0D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v2[128];
  v7 = v2[133];
  dispatch thunk of ShelfPresenter.sectionCount.getter(v6, v7);
  sub_1004B89B8();
  v8 = objc_msgSend(v0, "collectionView");
  objc_msgSend(v8, "reloadData");

  v9 = v2[131];
  v10 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v6, v9);
  if (v10)
  {
    v11 = v10;
    PendingPageRender.isLayoutPending.setter(1);
    swift_release(v11);
  }
  v12 = (char *)sub_1000E5710();
  if (v12)
  {
    v13 = v12;
    v14 = swift_allocObject(&unk_100759880, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16, v1);
    v15 = (uint64_t (*)(uint64_t))swift_allocObject(&unk_1007599E8, 72, 7);
    *((_QWORD *)v15 + 2) = v6;
    *((_QWORD *)v15 + 3) = v2[129];
    *((_QWORD *)v15 + 4) = v2[130];
    *((_QWORD *)v15 + 5) = v9;
    *((_QWORD *)v15 + 6) = v2[132];
    *((_QWORD *)v15 + 7) = v7;
    *((_QWORD *)v15 + 8) = v14;
    v16 = (uint64_t (**)(uint64_t))&v13[OBJC_IVAR____TtC8AppStore33BaseCollectionCompositionalLayout_pendingPrepareObserver];
    v18 = *(_QWORD *)&v13[OBJC_IVAR____TtC8AppStore33BaseCollectionCompositionalLayout_pendingPrepareObserver];
    v17 = *(_QWORD *)&v13[OBJC_IVAR____TtC8AppStore33BaseCollectionCompositionalLayout_pendingPrepareObserver + 8];
    *v16 = sub_1000E751C;
    v16[1] = v15;
    sub_10003A350(v18, v17);

  }
  v19 = sub_1000E5710();
  v20 = type metadata accessor for IndexSet(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
  sub_1004B8A00((uint64_t)v5);

  sub_1000057AC((uint64_t)v5, (uint64_t *)&unk_10082D0D0);
  v21 = dispatch thunk of MetricsPagePresenter.pageRenderMetrics.getter(v6, v9);
  v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v23 = objc_msgSend(v22, "launchedToTest");

  if (v23)
  {
    if (v21)
    {
      v24 = (void *)objc_opt_self(NSNotificationCenter);
      v25 = objc_msgSend(v24, "defaultCenter", swift_retain(v21).n128_f64[0]);
      type metadata accessor for PageRenderMetricsPresenter(0, v26);
      v27 = (void *)static PageRenderMetricsPresenter.pageEndNotification.getter();
      objc_msgSend(v25, "addObserver:selector:name:object:", v1, "ppt_pageRenderMetricsPresenterPageLoaded:", v27, v21);
      swift_release_n(v21, 2);

    }
    else
    {
      v28 = sub_1000E74D8();
      v29 = swift_allocError(&type metadata for PerformanceTestError, v28, 0, 0);
      sub_10020CAFC(v29);
      swift_errorRelease(v29);
    }
  }
  else
  {
    swift_release(v21);
  }
}

uint64_t sub_1000E3384(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class isa;
  id v19;
  uint64_t v20;
  uint64_t v22;

  v3 = sub_10007B804((uint64_t *)&unk_10082D0D0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, "collectionView", v4);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "collectionViewLayout");

    objc_msgSend(v9, "invalidateLayout");
  }
  v10 = objc_msgSend(v1, "collectionView");
  if (v10)
  {
    v11 = v10;
    v12 = sub_10007B804(&qword_100840F80);
    v13 = type metadata accessor for IndexPath(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned __int8 *)(v14 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = swift_allocObject(v12, v16 + *(_QWORD *)(v14 + 72), v15 | 7);
    *(_OWORD *)(v17 + 16) = xmmword_100661A30;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17 + v16, a1, v13);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "reloadItemsAtIndexPaths:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  }
  v19 = sub_1000E5710();
  v20 = type metadata accessor for IndexSet(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
  sub_1004B8A00((uint64_t)v6);

  return sub_1000057AC((uint64_t)v6, (uint64_t *)&unk_10082D0D0);
}

void sub_1000E3550(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  char isEscapingClosureAtFileLocation;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v2 = v1;
  v29 = a1;
  v3 = swift_isaMask & *v1;
  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v28 = v6;
  v30 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10007B804((uint64_t *)&unk_10082D0D0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v1, "collectionView", v8);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "collectionViewLayout");

    objc_msgSend(v13, "invalidateLayout");
  }
  v14 = sub_1000E5710();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v16 = v29;
  v15(v10, v29, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  sub_1004B8A00((uint64_t)v10);

  sub_1000057AC((uint64_t)v10, (uint64_t *)&unk_10082D0D0);
  v17 = (void *)objc_opt_self(UIView);
  v18 = v30;
  v15(v30, v16, v4);
  v19 = *(unsigned __int8 *)(v5 + 80);
  v20 = (v19 + 72) & ~v19;
  v21 = swift_allocObject(&unk_100759970, v20 + v28, v19 | 7);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)(v3 + 1024);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v3 + 1040);
  *(_OWORD *)(v21 + 40) = *(_OWORD *)(v3 + 1048);
  *(_QWORD *)(v21 + 56) = *(_QWORD *)(v3 + 1064);
  *(_QWORD *)(v21 + 64) = v2;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v21 + v20, v18, v4);
  v22 = swift_allocObject(&unk_100759998, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_1000E7498;
  *(_QWORD *)(v22 + 24) = v21;
  aBlock[4] = sub_1000925AC;
  v32 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000479AC;
  aBlock[3] = &unk_1007599B0;
  v23 = _Block_copy(aBlock);
  v24 = v32;
  v25 = v2;
  swift_retain(v22);
  objc_msgSend(v17, "performWithoutAnimation:", v23, swift_release(v24).n128_f64[0]);
  _Block_release(v23);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v22, "", 106, 464, 40, 1);
  swift_release(v21);
  swift_release(v22);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1000E3838(uint64_t a1, __n128 a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[8];
  char *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v3 = v2;
  v5 = swift_isaMask & *(_QWORD *)v2;
  v6 = type metadata accessor for OSLogger(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&v2[qword_10082CFA8];
  v11 = *(char **)(v5 + 1024);
  v12 = *(_QWORD *)(v5 + 1064);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter(v11, v12))
  {
    v48 = a1;
    if (qword_100826EB0 != -1)
      swift_once(&qword_100826EB0, sub_10007E844);
    v13 = sub_10007AF70(v6, (uint64_t)qword_10088AA78);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
    v14 = sub_10007B804((uint64_t *)&unk_10082D0C0);
    v15 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
    v16 = *(_QWORD *)(v15 + 72);
    v17 = *(unsigned __int8 *)(v15 + 80);
    v46 = v9;
    v47 = v7;
    v18 = swift_allocObject(v14, ((v17 + 32) & ~v17) + 3 * v16, v17 | 7);
    *(_OWORD *)(v18 + 16) = xmmword_100662370;
    v52 = v11;
    v53 = *(_OWORD *)(v5 + 1032);
    v54 = *(_OWORD *)(v5 + 1048);
    v55 = v12;
    *(_QWORD *)&v54 = type metadata accessor for BaseShelfViewController(0, (uint64_t)&v52);
    v52 = v3;
    v19 = v3;
    static LogMessage.safe(_:)(&v52);
    sub_1000057AC((uint64_t)&v52, (uint64_t *)&unk_10082B490);
    LogMessage.init(stringLiteral:)(0xD00000000000002ELL, 0x80000001006AB570);
    a1 = v48;
    swift_getErrorValue(v48, v51, &v49);
    v20 = v49;
    v21 = v50;
    *(_QWORD *)&v54 = v50;
    v22 = sub_100024638(&v52);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v22, v20, v21);
    static LogMessage.sensitive(_:)(&v52);
    sub_1000057AC((uint64_t)&v52, (uint64_t *)&unk_10082B490);
    v23 = v46;
    Logger.error(_:)(v18, v6, &protocol witness table for OSLogger);
    v24 = swift_bridgeObjectRelease(v18);
    (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v23, v6, v24);
    goto LABEL_7;
  }
  type metadata accessor for JUContentUnavailableViewController(0);
  v25 = *(_QWORD *)(v5 + 1048);
  swift_errorRetain(a1);
  swift_unknownObjectRetain(v10);
  v26 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)(a1, v10, v25, 1, 0, 0);
  v27 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  v28 = *(void **)&v3[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController];
  v29 = v28;
  v30 = v26;
  static ViewControllerContainment.remove(_:)(v28);

  v31 = *(void **)&v3[v27];
  *(_QWORD *)&v3[v27] = v26;
  v32 = v30;

  v33 = *(void **)&v3[v27];
  v34 = v33;
  v35 = objc_msgSend(v3, "view");
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, "bounds");
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v44 = v43;

    v52 = v38;
    *(_QWORD *)&v53 = v40;
    *((_QWORD *)&v53 + 1) = v42;
    *(_QWORD *)&v54 = v44;
    BYTE8(v54) = 0;
    static ViewControllerContainment.add(_:to:frame:)(v33, v3, &v52);

    sub_10019862C();
LABEL_7:
    sub_10020CAFC(a1);
    return;
  }
  __break(1u);
}

void sub_1000E3BBC()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "collectionView");
  sub_1004B8D34();

  sub_1000E2E64();
}

void sub_1000E3C10()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "collectionView");
  sub_1004ACF08(v1);

  sub_1000E2E64();
}

uint64_t sub_1000E3C64(uint64_t a1, __n128 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[8];
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v4 = *v2;
  v5 = swift_isaMask;
  v6 = type metadata accessor for OSLogger(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100826EB0 != -1)
    swift_once(&qword_100826EB0, sub_10007E844);
  v10 = (_OWORD *)(v5 & v4);
  v11 = sub_10007AF70(v6, (uint64_t)qword_10088AA78);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  v12 = sub_10007B804((uint64_t *)&unk_10082D0C0);
  v13 = type metadata accessor for LogMessage(0);
  v14 = swift_allocObject(v12, ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100662370;
  v15 = v10[65];
  v25 = v10[64];
  v26 = v15;
  v27 = v10[66];
  *((_QWORD *)&v26 + 1) = type metadata accessor for BaseShelfViewController(0, (uint64_t)&v25);
  *(_QWORD *)&v25 = v2;
  v16 = v2;
  static LogMessage.safe(_:)(&v25);
  sub_1000057AC((uint64_t)&v25, (uint64_t *)&unk_10082B490);
  LogMessage.init(stringLiteral:)(0xD00000000000002CLL, 0x80000001006A7580);
  swift_getErrorValue(a1, v24, &v22);
  v17 = v22;
  v18 = v23;
  *((_QWORD *)&v26 + 1) = v23;
  v19 = sub_100024638(&v25);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v17, v18);
  static LogMessage.sensitive(_:)(&v25);
  sub_1000057AC((uint64_t)&v25, (uint64_t *)&unk_10082B490);
  Logger.error(_:)(v14, v6, &protocol witness table for OSLogger);
  v20 = swift_bridgeObjectRelease(v14);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v20);
}

uint64_t sub_1000E3E84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    v10 = result;
    v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v5);
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, a2, v8, v11);
    v12 = swift_release(v10);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v12);
  }
  return result;
}

double sub_1000E3F60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t refreshed;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;

  v2 = v1;
  if (a1)
  {
    v4 = *v2;
    v5 = swift_isaMask;
    refreshed = type metadata accessor for PageRefreshGate(0);
    swift_allocObject(refreshed, *(unsigned int *)(refreshed + 48), *(unsigned __int16 *)(refreshed + 52));
    v7 = swift_retain(a1);
    v8 = PageRefreshGate.init(policy:)(v7);
    v9 = *(uint64_t *)((char *)v2 + qword_10082CFE0);
    *(uint64_t *)((char *)v2 + qword_10082CFE0) = v8;
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
    v11 = *(uint64_t *)((char *)v2 + qword_10082CFE0);
    if (!v11)
      return result;
    v12 = v5 & v4;
    v13 = swift_allocObject(&unk_100759880, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16, v2);
    v14 = swift_allocObject(&unk_100759948, 72, 7);
    *(_OWORD *)(v14 + 16) = *(_OWORD *)(v12 + 1024);
    *(_QWORD *)(v14 + 32) = *(_QWORD *)(v12 + 1040);
    *(_OWORD *)(v14 + 40) = *(_OWORD *)(v12 + 1048);
    *(_QWORD *)(v14 + 56) = *(_QWORD *)(v12 + 1064);
    *(_QWORD *)(v14 + 64) = v13;
    swift_retain(v11);
    v15 = swift_retain(v13);
    PageRefreshGate.performRefresh.setter(sub_1000E7418, v14, v15);
    swift_release(v11);
  }
  else
  {
    v13 = *(uint64_t *)((char *)v1 + qword_10082CFE0);
    *(uint64_t *)((char *)v1 + qword_10082CFE0) = 0;
  }
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_1000E40A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  char refreshed;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __n128 v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  __n128 v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[5];
  uint64_t v49;

  v1 = v0;
  v2 = swift_isaMask & *v0;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  v4 = __chkstk_darwin(v3);
  v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0, v4);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  v7 = __chkstk_darwin(v6);
  v41 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for DispatchTime(0, v7);
  v9 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - v13;
  v15 = *(_QWORD *)((char *)v0 + qword_10082CFA8);
  aBlock[0] = v15;
  v16 = swift_unknownObjectRetain(v15);
  refreshed = PageRefreshPolicy.shouldSendEventsForPageExit.getter(v16);
  v18 = *(_QWORD *)(v2 + 1024);
  v19 = *(_QWORD *)(v2 + 1032);
  dispatch thunk of ClearablePresenter.clearContent(shouldSendEventsForPageExit:)(refreshed & 1, v18, v19);
  swift_unknownObjectRelease(v15);
  v20 = *(_QWORD *)((char *)v0 + qword_10082CFB0);
  v21 = *(_QWORD *)(v20 + 112);
  if (v21)
  {
    swift_retain(*(_QWORD *)(v20 + 112));
    ImpressionsCalculator.removeAllElements()();
    swift_release(v21);
  }
  sub_1000E6E44();
  v22 = sub_100008FE4(0, (unint64_t *)&qword_10082D0A0, OS_dispatch_queue_ptr);
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  v25 = static DispatchTime.now()(v24);
  v26 = PageRefreshPolicy.updateDelayInterval.getter(v25);
  + infix(_:_:)(v11, v26);
  v40 = *(void (**)(char *, uint64_t))(v9 + 8);
  v27 = v42;
  v40(v11, v42);
  v28 = swift_allocObject(&unk_100759880, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16, v1);
  v29 = swift_allocObject(&unk_1007598F8, 72, 7);
  *(_QWORD *)(v29 + 16) = v18;
  *(_QWORD *)(v29 + 24) = v19;
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v2 + 1040);
  *(_OWORD *)(v29 + 40) = *(_OWORD *)(v2 + 1048);
  *(_QWORD *)(v29 + 56) = *(_QWORD *)(v2 + 1064);
  *(_QWORD *)(v29 + 64) = v28;
  aBlock[4] = sub_1000E7404;
  v49 = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000AB18;
  aBlock[3] = &unk_100759910;
  v30 = _Block_copy(aBlock);
  v31 = swift_release(v49);
  v32 = v41;
  static DispatchQoS.unspecified.getter(v31);
  aBlock[0] = _swiftEmptyArrayStorage;
  v33 = sub_100005C94((unint64_t *)&qword_1008317D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v34 = sub_10007B804((uint64_t *)&unk_10082D0B0);
  v35 = sub_100076FC8((unint64_t *)&qword_1008317E0, (uint64_t *)&unk_10082D0B0);
  v36 = v45;
  v37 = v34;
  v38 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v37, v35, v47, v33);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v32, v36, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v38);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v44);
  return ((uint64_t (*)(char *, uint64_t))v40)(v14, v27);
}

void sub_1000E441C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  id v6;
  unsigned int v7;
  double v8;
  uint64_t v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *ObjCClassFromMetadata;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  objc_super v34;

  v1 = v0;
  v2 = swift_isaMask & *(_QWORD *)v0;
  v3 = *(_QWORD *)(v2 + 0x410);
  v4 = *(_QWORD *)(v2 + 0x428);
  v29 = *(_OWORD *)(v2 + 0x400);
  v30 = v29;
  v31 = v3;
  v27 = *(_OWORD *)(v2 + 1048);
  v32 = v27;
  v33 = v4;
  v5 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)&v30);
  v34.receiver = v0;
  v34.super_class = v5;
  objc_msgSendSuper2(&v34, "viewDidLoad");
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v7 = objc_msgSend(v6, "launchedToTest");

  if (v7)
  {
    v9 = *(_QWORD *)&v1[qword_10082CFC0];
    v10 = swift_retain(v9);
    dispatch thunk of InfiniteScrollObserver.pptAllowedPaginationCount.setter(3, 0, v10);
    *(_QWORD *)&v8 = swift_release(v9).n128_u64[0];
  }
  v11 = *(void **)&v1[qword_10082CFD8];
  if (v11)
  {
    v12 = sub_100008FE4(0, (unint64_t *)&unk_10082D090, UIContextMenuInteraction_ptr);
    type metadata accessor for FlowPreviewing(0, v29, v3, v13);
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
    v15 = v11;
    v16 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "initWithDelegate:", v15);
    v17 = objc_msgSend(v1, "collectionView");
    if (!v17)
    {
LABEL_13:
      __break(1u);
      return;
    }
    v18 = v17;
    objc_msgSend(v17, "addInteraction:", v16);

  }
  v19 = objc_msgSend(v1, "collectionView", v8, v27);
  if (!v19)
  {
    __break(1u);
    goto LABEL_13;
  }
  v20 = v19;
  v21 = sub_1000E46AC();
  objc_msgSend(v20, "setCollectionViewLayout:", v21);

  dispatch thunk of UpdatablePresenter.didLoad()(v29, *(_QWORD *)(v28 + 24));
  v22 = objc_msgSend(v1, "collectionView");
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, "setAlwaysBounceVertical:", 1);

  }
  v24 = objc_msgSend(v1, "collectionView");
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, "setPrefetchDataSource:", v1);

  }
  v26 = objc_msgSend(v1, "collectionView");
  sub_1003A1AE8(v26);

}

id sub_1000E46AC()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  Class isa;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD v13[5];
  uint64_t v14;

  v1 = swift_isaMask & *v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration), "init");
  v3 = sub_1000E28A4();
  sub_100008FE4(0, &qword_10082C530, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  v5 = (objc_class *)type metadata accessor for BaseCollectionCompositionalLayout();
  v6 = swift_allocObject(&unk_100759880, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v0);
  v7 = swift_allocObject(&unk_1007598A8, 72, 7);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v1 + 1024);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v1 + 1040);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(v1 + 1048);
  *(_QWORD *)(v7 + 56) = *(_QWORD *)(v1 + 1064);
  *(_QWORD *)(v7 + 64) = v6;
  v8 = objc_allocWithZone(v5);
  v13[4] = sub_1000E73B0;
  v14 = v7;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10004AF98;
  v13[3] = &unk_1007598C0;
  v9 = _Block_copy(v13);
  v10 = objc_msgSend(v8, "initWithSectionProvider:configuration:", v9, v2, swift_retain(v6).n128_f64[0]);

  _Block_release(v9);
  v11 = v14;
  swift_release(v6);
  swift_release(v11);
  return v10;
}

void sub_1000E4860(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000E441C();

}

double sub_1000E4894()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  double result;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  objc_super v21;

  v1 = swift_isaMask & *v0;
  v2 = *(_QWORD *)(v1 + 0x410);
  v3 = *(_QWORD *)(v1 + 0x428);
  v16 = *(_OWORD *)(v1 + 0x400);
  v17 = v16;
  v18 = v2;
  v15 = *(_OWORD *)(v1 + 1048);
  v19 = v15;
  v20 = v3;
  v4 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)&v17);
  v21.receiver = v0;
  v21.super_class = v4;
  objc_msgSendSuper2(&v21, "as_viewDidBecomeFullyVisible");
  v5 = *(_QWORD *)((char *)v0 + qword_10082CFB0);
  v6 = *(_QWORD *)(v5 + 112);
  if (v6)
  {
    swift_retain(*(_QWORD *)(v5 + 112));
    ImpressionsCalculator.isVisible.setter(1);
    swift_release(v6);
  }
  type metadata accessor for MetricsActivity(0);
  v8 = static MetricsActivity.current.getter(v7);
  v9 = dispatch thunk of MetricsPagePresenter.referrer.getter(v16, v15);
  v11 = v10;
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(v9);
  swift_release(v8);
  v12 = swift_bridgeObjectRelease(v11);
  v13 = static MetricsActivity.current.getter(v12);
  dispatch thunk of MetricsActivity.changePreloaded(_:)(2);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_1000E49B8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000E4894();

}

id sub_1000E49EC()
{
  _QWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  objc_class *v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _OWORD v12[3];
  objc_super v13;

  v1 = (_OWORD *)(swift_isaMask & *v0);
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[65];
  v12[0] = v1[64];
  v12[1] = v6;
  v12[2] = v1[66];
  v7 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v12);
  v13.receiver = v0;
  v13.super_class = v7;
  result = objc_msgSendSuper2(&v13, "as_viewWillBecomeFullyVisible");
  v9 = *(_QWORD *)((char *)v0 + qword_10082CFE0);
  if (v9)
  {
    swift_retain(v9);
    Date.init()(v10);
    PageRefreshGate.viewWillAppear(on:)(v5);
    v11 = swift_release(v9);
    return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v11);
  }
  return result;
}

void sub_1000E4ADC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000E49EC();

}

id sub_1000E4B10(char a1)
{
  _QWORD *v1;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  objc_class *v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _OWORD v14[3];
  objc_super v15;

  v3 = (_OWORD *)(swift_isaMask & *v1);
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v3[65];
  v14[0] = v3[64];
  v14[1] = v8;
  v14[2] = v3[66];
  v9 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v14);
  v15.receiver = v1;
  v15.super_class = v9;
  result = objc_msgSendSuper2(&v15, "viewWillAppear:", a1 & 1);
  v11 = *(_QWORD *)((char *)v1 + qword_10082CFE0);
  if (v11)
  {
    swift_retain(v11);
    Date.init()(v12);
    PageRefreshGate.viewWillAppear(on:)(v7);
    v13 = swift_release(v11);
    return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
  }
  return result;
}

void sub_1000E4C08(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1000E4B10(a3);

}

void sub_1000E4C48(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  objc_super v31;

  v2 = v1;
  v4 = swift_isaMask & *v2;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 + 1040);
  v10 = *(_QWORD *)(v4 + 1064);
  v26 = *(_OWORD *)(v4 + 1024);
  v27 = v26;
  v28 = v9;
  v25 = *(_OWORD *)(v4 + 1048);
  v29 = v25;
  v30 = v10;
  v11 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)&v27);
  v31.receiver = v2;
  v31.super_class = v11;
  objc_msgSendSuper2(&v31, "viewDidAppear:", a1 & 1);
  v12 = v26;
  v13 = v25;
  v14 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v26, v25);
  if (v14)
  {
    v15 = v14;
    v16 = Date.init()(v14);
    v17 = Date.timeIntervalSince1970.getter(v16);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    PendingPageRender.appearTime.setter(*(_QWORD *)&v17, 0);
    swift_release(v15);
  }
  v18 = *(_QWORD *)((char *)v2 + qword_10082CFB0);
  v19 = *(_QWORD *)(v18 + 112);
  if (v19)
  {
    swift_retain(*(_QWORD *)(v18 + 112));
    ImpressionsCalculator.isVisible.setter(1);
    swift_release(v19);
  }
  type metadata accessor for MetricsActivity(0);
  v21 = static MetricsActivity.current.getter(v20);
  v22 = dispatch thunk of MetricsPagePresenter.referrer.getter(v12, v13);
  v24 = v23;
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(v22);
  swift_release(v21);
  swift_bridgeObjectRelease(v24);
}

void sub_1000E4E0C(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1000E4C48(a3);

}

void sub_1000E4E4C()
{
  char *v0;
  char *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  _OWORD v18[3];
  objc_super v19;

  v1 = v0;
  v2 = (_OWORD *)(swift_isaMask & *(_QWORD *)v0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2[65];
  v18[0] = v2[64];
  v18[1] = v7;
  v18[2] = v2[66];
  v8 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v18);
  v19.receiver = v1;
  v19.super_class = v8;
  objc_msgSendSuper2(&v19, "as_viewWillBecomePartiallyVisible");
  v9 = *(_QWORD *)&v1[qword_10082CFB0];
  v10 = *(_QWORD *)(v9 + 112);
  if (v10)
  {
    swift_retain(*(_QWORD *)(v9 + 112));
    ImpressionsCalculator.isVisible.setter(0);
    swift_release(v10);
  }
  type metadata accessor for MetricsActivity(0);
  v12 = static MetricsActivity.current.getter(v11);
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(0);
  v13 = swift_release(v12);
  v14 = static MetricsActivity.current.getter(v13);
  dispatch thunk of MetricsActivity.changePreloaded(_:)(2);
  swift_release(v14);
  v15 = *(_QWORD *)&v1[qword_10082CFE0];
  if (v15)
  {
    swift_retain(*(_QWORD *)&v1[qword_10082CFE0]);
    Date.init()(v16);
    PageRefreshGate.viewWillDisappear(on:)(v6);
    v17 = swift_release(v15);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v17);
  }
}

void sub_1000E4FB4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000E4E4C();

}

void sub_1000E4FE8(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  objc_super v43;

  v2 = v1;
  v4 = swift_isaMask & *v2;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ViewWillDisappearReason(0, v7);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804(&qword_10082D088);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v4 + 1040);
  v17 = *(_QWORD *)(v4 + 1064);
  v38 = *(_OWORD *)(v4 + 1024);
  v39 = v38;
  v40 = v16;
  v37 = *(_OWORD *)(v4 + 1048);
  v41 = v37;
  v42 = v17;
  v18 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)&v39);
  v43.receiver = v2;
  v43.super_class = v18;
  objc_msgSendSuper2(&v43, "viewWillDisappear:", a1 & 1);
  v19 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(v38, v37);
  if (v19)
  {
    v20 = v19;
    v21 = static ViewWillDisappearReason.inferred(for:)(v2);
    v22 = Date.init()(v21);
    v23 = Date.timeIntervalSince1970.getter(v22);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    PendingPageRender.DisappearTimeAndReason.init(reason:timeInterval:)(v12, v23);
    v24 = type metadata accessor for PendingPageRender.DisappearTimeAndReason(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 0, 1, v24);
    PendingPageRender.disappearTime.setter(v15);
    swift_release(v20);
  }
  if (*((_BYTE *)v2 + qword_10082CFC8) == 1)
  {
    v25 = type metadata accessor for VideoPlaybackCoordinator(0);
    v26 = *(void **)(*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph)
                   + qword_10088FDC8);
    if (!v26)
    {
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v25, v25);
      __break(1u);
      return;
    }
    v27 = v26;
    dispatch thunk of VideoPlaybackCoordinator.pauseAutoPlayVideo()();

  }
  v28 = *(_QWORD *)((char *)v2 + qword_10082CFB0);
  v29 = *(_QWORD *)(v28 + 112);
  if (v29)
  {
    swift_retain(*(_QWORD *)(v28 + 112));
    ImpressionsCalculator.isVisible.setter(0);
    swift_release(v29);
  }
  type metadata accessor for MetricsActivity(0);
  v31 = static MetricsActivity.current.getter(v30);
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)(0);
  v32 = swift_release(v31);
  v33 = static MetricsActivity.current.getter(v32);
  dispatch thunk of MetricsActivity.changePreloaded(_:)(2);
  swift_release(v33);
  v34 = *(_QWORD *)((char *)v2 + qword_10082CFE0);
  if (v34)
  {
    swift_retain(*(_QWORD *)((char *)v2 + qword_10082CFE0));
    Date.init()(v35);
    PageRefreshGate.viewWillDisappear(on:)(v9);
    v36 = swift_release(v34);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v9, v5, v36);
  }
}

void sub_1000E52E4(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_1000E4FE8(a3);

}

void sub_1000E5324()
{
  _QWORD *v0;
  _OWORD *v1;
  __int128 v2;
  objc_class *v3;
  uint64_t v4;
  void *v5;
  id v6;
  _OWORD v7[3];
  objc_super v8;

  v1 = (_OWORD *)(swift_isaMask & *v0);
  v2 = v1[65];
  v7[0] = v1[64];
  v7[1] = v2;
  v7[2] = v1[66];
  v3 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v7);
  v8.receiver = v0;
  v8.super_class = v3;
  objc_msgSendSuper2(&v8, "as_viewDidBecomePartiallyVisible");
  if (*((_BYTE *)v0 + qword_10082CFC8) == 1)
  {
    v4 = type metadata accessor for VideoPlaybackCoordinator(0);
    v5 = *(void **)(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph)
                  + qword_10088FDC8);
    if (v5)
    {
      v6 = v5;
      dispatch thunk of VideoPlaybackCoordinator.pauseAutoPlayVideo()();

    }
    else
    {
      dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v4, v4);
      __break(1u);
    }
  }
}

void sub_1000E53E8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000E5324();

}

void sub_1000E541C(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v3;
  __int128 v4;
  objc_class *v5;
  id v6;
  _OWORD v7[3];
  objc_super v8;

  v3 = (_OWORD *)(swift_isaMask & *v1);
  v4 = v3[65];
  v7[0] = v3[64];
  v7[1] = v4;
  v7[2] = v3[66];
  v5 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v7);
  v8.receiver = v1;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  if (objc_msgSend(v1, "isViewLoaded"))
  {
    sub_1000E2E64();
    v6 = objc_msgSend(v1, "collectionView");
    sub_1004B8E48(v6);

  }
}

void sub_1000E54E4(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_1000E541C((uint64_t)a3);

}

void sub_1000E553C(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  void *v4;
  _OWORD *v8;
  __int128 v9;
  objc_class *v10;
  id v11;
  objc_class *v12;
  char *v13;
  double *v14;
  id v15;
  uint64_t v16;
  id v17;
  objc_super v18;
  _OWORD v19[3];
  objc_super v20;

  v4 = v3;
  v8 = (_OWORD *)(swift_isaMask & *v3);
  v9 = v8[65];
  v19[0] = v8[64];
  v19[1] = v9;
  v19[2] = v8[66];
  v10 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v19);
  v20.receiver = v3;
  v20.super_class = v10;
  objc_msgSendSuper2(&v20, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  if (objc_msgSend(v3, "isViewLoaded"))
  {
    v11 = objc_msgSend(v3, "traitCollection");
    v12 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
    v13 = (char *)objc_allocWithZone(v12);
    v14 = (double *)&v13[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
    *v14 = a2;
    v14[1] = a3;
    *(_QWORD *)&v13[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v11;
    v18.receiver = v13;
    v18.super_class = v12;
    v15 = objc_msgSendSuper2(&v18, "init");
    v16 = *(_QWORD *)((char *)v3 + qword_10082CFB0);
    v17 = objc_msgSend(v4, "collectionView");
    (*(void (**)(uint64_t, id, id, double, double))(*(_QWORD *)v16 + 304))(a1, v15, v17, a2, a3);

  }
}

void sub_1000E56A4(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_1000E553C(a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

id sub_1000E5710()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;

  result = objc_msgSend(v0, "collectionView");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "collectionViewLayout");

    result = 0;
    if (v3)
    {
      v4 = type metadata accessor for BaseCollectionCompositionalLayout();
      result = (id)swift_dynamicCastClass(v3, v4);
      if (!result)
      {

        return 0;
      }
    }
  }
  return result;
}

void sub_1000E5788(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;

  v2 = v1;
  v4 = *v1;
  v5 = swift_isaMask;
  v6 = objc_msgSend(v2, "collectionView");
  if (!v6)
    return;
  v7 = v6;
  v8 = v5 & v4;
  v20 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 56);
  v21 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v12 = 0;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_6;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v21)
      goto LABEL_22;
    v18 = *(_QWORD *)(v20 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v21)
        goto LABEL_22;
      v18 = *(_QWORD *)(v20 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v21)
          goto LABEL_22;
        v18 = *(_QWORD *)(v20 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_21:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_6:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v16 = dispatch thunk of ShelfPresenter.shelf(for:)(v15, *(_QWORD *)(v8 + 1024), *(_QWORD *)(v8 + 1064));
    sub_1000E24E8(v16, v15, v7);
    swift_release(v16);
  }
  v19 = v17 + 3;
  if (v19 >= v21)
  {
LABEL_22:

    swift_release(a1);
    return;
  }
  v18 = *(_QWORD *)(v20 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v21)
      goto LABEL_22;
    v18 = *(_QWORD *)(v20 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

double sub_1000E5990(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  double result;

  v7 = type metadata accessor for IndexPath(0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v7);
  v9 = a3;
  v10 = a1;
  sub_1000E6CA4(v8);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
  return result;
}

id sub_1000E59F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *Strong;
  char *v6;
  uint64_t v7;
  id result;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v13, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return 0;
  v6 = Strong;
  v7 = *(_QWORD *)&Strong[qword_10082CFB0];
  result = objc_msgSend(Strong, "collectionView", swift_retain(v7).n128_f64[0]);
  if (result)
  {
    v9 = result;
    v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph];
    v11 = v6;
    swift_retain(v10);
    v12 = sub_1004AD204(a1, v9, v11, v10);
    swift_release(v7);

    swift_release(v10);
    return (id)v12;
  }
  __break(1u);
  return result;
}

double sub_1000E5AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    sub_10032391C();
    v12 = v11;
    sub_1000E5788(v11);

    swift_bridgeObjectRelease(v12);
  }
  swift_beginAccess(v8, &v18, 0, 0);
  v13 = swift_unknownObjectWeakLoadStrong(v8);
  if (v13)
  {
    v15 = (void *)v13;
    v16 = *(_QWORD *)(v13 + qword_10082CFA8);
    swift_unknownObjectRetain(v16);

    v17 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter(a3, a6);
    *(_QWORD *)&result = swift_unknownObjectRelease(v16).n128_u64[0];
    if (v17)
    {
      PendingPageRender.isLayoutPending.setter(0);
      *(_QWORD *)&result = swift_release(v17).n128_u64[0];
    }
  }
  return result;
}

void sub_1000E5BD8(void *a1)
{
  id v1;
  NSIndexSet *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = objc_msgSend(a1, "collectionView");
  if (v1)
  {
    v3 = v1;
    IndexSet._bridgeToObjectiveC()(v2);
    v5 = v4;
    objc_msgSend(v3, "reloadSections:", v4);

  }
}

void sub_1000E5C4C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSIndexSet *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, "collectionView", v6);
  if (v9)
  {
    v10 = v9;
    v11 = sub_10007B804(&qword_10083E5C0);
    v12 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100661A30;
    *(_QWORD *)(v12 + 32) = a2;
    v20 = v12;
    v13 = sub_100005C94(&qword_10082D070, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
    v14 = sub_10007B804(&qword_10082D078);
    v15 = sub_100076FC8(&qword_10082D080, &qword_10082D078);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v14, v15, v4, v13);
    IndexSet._bridgeToObjectiveC()(v16);
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    objc_msgSend(v10, "reloadSections:", v18);

  }
}

void sub_1000E5DAC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000E3BBC();

}

void sub_1000E5DE0(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000E3C10();

}

void sub_1000E5E14(void *a1, uint64_t a2, void *a3)
{
  id v4;
  __n128 v5;
  id v6;

  v6 = a3;
  v4 = a1;
  sub_1000E3C64((uint64_t)v6, v5);

}

uint64_t sub_1000E5E58(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;

  v4 = a3;
  v5 = a1;
  v6 = sub_1000E72AC();

  return v6;
}

uint64_t sub_1000E5EA0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  uint64_t v8;

  v6 = a3;
  v7 = a1;
  v8 = sub_1000E72D4(a4);

  return v8;
}

void sub_1000E5EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1000E40A8();

  }
}

uint64_t sub_1000E5F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  _BYTE v11[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = *(_QWORD *)(result + qword_10082CFA8);
    swift_unknownObjectRetain(v10);

    dispatch thunk of UpdatablePresenter.update(ignoringCache:)(1, a2, *(_QWORD *)(a5 + 24));
    return swift_unknownObjectRelease(v10);
  }
  return result;
}

uint64_t sub_1000E5FD4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8;
  id v9;
  id v10;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  LOBYTE(a5) = sub_1000E7254(a5);

  return a5 & 1;
}

double sub_1000E603C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8;
  id v9;
  id v10;
  double v11;

  v8 = a3;
  v9 = a4;
  v10 = a1;
  v11 = sub_1000E7280(a5);

  return v11;
}

uint64_t sub_1000E60CC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1004AF8C0(a2, a3, a4, a1);
}

id sub_1000E6108(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  __n128 v19;
  uint64_t v21;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v16 = a3;
  v17 = a1;
  v18 = (void *)sub_1000E60CC(v16, v13, v15, (uint64_t)v12);

  v19 = swift_bridgeObjectRelease(v15);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v19);
  return v18;
}

uint64_t sub_1000E61F0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  __n128 v21;
  uint64_t v23;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v17 = v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  v18 = a3;
  v19 = a4;
  v20 = a1;
  sub_1000E72FC((uint64_t)v19, v15, v17);

  v21 = swift_bridgeObjectRelease(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v21);
}

id sub_1000E62E4(void *a1, uint64_t a2)
{
  return sub_1004B2168(a2, a1);
}

id sub_1000E6318(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  v13 = sub_1000E62E4(v11, (uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

uint64_t sub_1000E63D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t))(**(_QWORD **)(v3 + qword_10082CFB0)
                                                                                       + 664))(a2, a3, *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_artworkLoader), v3, *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph), a1);
}

uint64_t sub_1000E6434(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_1000E64B0(a1, a2, a3, a4, a5, (void (*)(id, id, char *))sub_1000E63D0);
}

uint64_t sub_1000E6440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(**(_QWORD **)(v3 + qword_10082CFB0)
                                                                              + 672))(a2, a3, *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_artworkLoader), *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph), a1);
}

uint64_t sub_1000E64A4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_1000E64B0(a1, a2, a3, a4, a5, (void (*)(id, id, char *))sub_1000E6440);
}

uint64_t sub_1000E64B0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, char *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v15 = a3;
  v16 = a4;
  v17 = a1;
  a6(v15, v16, v14);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

BOOL sub_1000E6580(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t ObjectType;
  id v17;
  _BOOL8 v18;
  uint64_t v20;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v11, "cellForItemAtIndexPath:", isa);

  if (v14)
  {
    ObjectType = swift_getObjectType(v14, v15);
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for ComponentContainerView))
      v17 = v14;
    else
      v17 = 0;
    v18 = v17 == 0;

    v11 = v12;
    v12 = v14;
  }
  else
  {
    v18 = 0;
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v18;
}

void sub_1000E6698(void *a1, objc_class *a2)
{
  uint64_t v2;

  sub_1004B5314(a2, (uint64_t)a2, *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph), a1);
}

uint64_t sub_1000E66DC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  id v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (objc_class *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  sub_1000E6698(v11, v10);

  return (*(uint64_t (**)(objc_class *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_1000E678C(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + qword_10082CFB8), "scrollViewWillBeginDecelerating:", a1);
}

void sub_1000E67A8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1000E678C((uint64_t)v4);

}

id sub_1000E67FC(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + qword_10082CFB8), "scrollViewDidEndDecelerating:", a1);
}

void sub_1000E6818(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1000E67FC((uint64_t)v4);

}

id sub_1000E686C(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v3;
  __int128 v4;
  objc_class *v5;
  _OWORD v7[3];
  objc_super v8;

  v3 = (_OWORD *)(swift_isaMask & *v1);
  v4 = v3[65];
  v7[0] = v3[64];
  v7[1] = v4;
  v7[2] = v3[66];
  v5 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v7);
  v8.receiver = v1;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, "scrollViewDidScroll:", a1);
  return objc_msgSend(*(id *)((char *)v1 + qword_10082CFB8), "scrollViewDidScroll:", a1);
}

void sub_1000E68FC(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1000E686C((uint64_t)v4);

}

id sub_1000E6950(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + qword_10082CFB8), "scrollViewWillBeginDragging:", a1);
}

void sub_1000E696C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1000E6950((uint64_t)v4);

}

id sub_1000E69C0(uint64_t a1, char a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 + qword_10082CFB8), "scrollViewDidEndDragging:willDecelerate:", a1, a2 & 1);
}

void sub_1000E69E4(void *a1, uint64_t a2, void *a3, char a4)
{
  id v6;
  id v7;

  v6 = a3;
  v7 = a1;
  sub_1000E69C0((uint64_t)v6, a4);

}

void sub_1000E6A40(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000E2270();

}

void sub_1000E6A74(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000E230C();

}

uint64_t sub_1000E6AA8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_10082CFA8));
  swift_release(*(_QWORD *)(v0 + qword_10082CFB0));

  swift_release(*(_QWORD *)(v0 + qword_10082CFC0));
  swift_release(*(_QWORD *)(v0 + qword_10082CFD0));

  return swift_release(*(_QWORD *)(v0 + qword_10082CFE0));
}

id sub_1000E6B24()
{
  _QWORD *v0;
  _OWORD *v1;
  __int128 v2;
  objc_class *v3;
  _OWORD v5[3];
  objc_super v6;

  v1 = (_OWORD *)(swift_isaMask & *v0);
  v2 = v1[65];
  v5[0] = v1[64];
  v5[1] = v2;
  v5[2] = v1[66];
  v3 = (objc_class *)type metadata accessor for BaseShelfViewController(0, (uint64_t)v5);
  v6.receiver = v0;
  v6.super_class = v3;
  return objc_msgSendSuper2(&v6, "dealloc");
}

uint64_t sub_1000E6B84(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_10082CFA8));
  swift_release(*(_QWORD *)(a1 + qword_10082CFB0));

  swift_release(*(_QWORD *)(a1 + qword_10082CFC0));
  swift_release(*(_QWORD *)(a1 + qword_10082CFD0));

  return swift_release(*(_QWORD *)(a1 + qword_10082CFE0));
}

uint64_t type metadata accessor for BaseShelfViewController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for BaseShelfViewController);
}

uint64_t sub_1000E6C18()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x528))();
}

void sub_1000E6C34(uint64_t a1, void *a2)
{
  sub_1000E70D0(a2);
}

uint64_t sub_1000E6C58()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x530))();
}

uint64_t sub_1000E6C74(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100663820, a1);
}

uint64_t sub_1000E6C84(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1006637F8, a1);
}

uint64_t sub_1000E6C94(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100663848, a1);
}

double sub_1000E6CA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  double (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    v18 = v1;
    v21 = _swiftEmptyArrayStorage;
    sub_1000FE840(0, v7, 0);
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    v19 = *(double (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v20 = v10;
    v11 = v4;
    do
    {
      v12.n128_f64[0] = v19(v6, v9, v3);
      v13 = IndexPath.section.getter(v12);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v8 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      {
        sub_1000FE840(0, v8[2] + 1, 1);
        v8 = v21;
      }
      v15 = v8[2];
      v14 = v8[3];
      if (v15 >= v14 >> 1)
      {
        sub_1000FE840(v14 > 1, v15 + 1, 1);
        v8 = v21;
      }
      v8[2] = v15 + 1;
      v8[v15 + 4] = v13;
      v9 += v20;
      --v7;
      v4 = v11;
    }
    while (v7);
  }
  v16 = sub_1001F99BC((uint64_t)v8);
  swift_bridgeObjectRelease(v8);
  sub_1000E5788(v16);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  return result;
}

void sub_1000E6E44()
{
  char *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v1 = v0;
  v2 = (_QWORD *)(swift_isaMask & *(_QWORD *)v0);
  v3 = type metadata accessor for JULoadingViewController.PresentationContext(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v2[128];
  v7 = dispatch thunk of ShelfPresenter.sectionCount.getter(v6, v2[133]);
  v8 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  v9 = *(void **)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController];
  if (v7)
  {
    v10 = v9;
    static ViewControllerContainment.remove(_:)(v9);

    v11 = *(void **)&v1[v8];
    *(_QWORD *)&v1[v8] = 0;

    v12 = *(void **)&v1[v8];
    v13 = v12;
    v14 = objc_msgSend(v1, "view");
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, "bounds");
      v17 = v16;
      v19 = v18;
      v21 = v20;
      v23 = v22;

      v46 = v17;
      v47 = v19;
      v48 = v21;
      v49 = v23;
      v50 = 0;
      static ViewControllerContainment.add(_:to:frame:)(v12, v1, &v46);

      sub_10019862C();
      return;
    }
    __break(1u);
    goto LABEL_10;
  }
  if (!v9 || (v24 = type metadata accessor for JULoadingViewController(0), !swift_dynamicCastClass(v9, v24)))
  {
    v25 = dispatch thunk of MetricsPagePresenter.pageRenderMetrics.getter(v6, v2[131]);
    static JULoadingViewController.PresentationContext.placeholder.getter(v25);
    v26 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController(0));
    v27 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)(0, 0, v5, v25);
    v28 = *(void **)&v1[v8];
    v29 = v28;
    v30 = v27;
    static ViewControllerContainment.remove(_:)(v28);

    v31 = *(void **)&v1[v8];
    *(_QWORD *)&v1[v8] = v27;
    v32 = v30;

    v33 = *(void **)&v1[v8];
    v34 = v33;
    v35 = objc_msgSend(v1, "view");
    if (!v35)
    {
LABEL_10:
      __break(1u);
      return;
    }
    v36 = v35;
    objc_msgSend(v35, "bounds");
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v44 = v43;

    v46 = v38;
    v47 = v40;
    v48 = v42;
    v49 = v44;
    v50 = 0;
    static ViewControllerContainment.add(_:to:frame:)(v33, v1, &v46);

    sub_10019862C();
  }
}

void sub_1000E70D0(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  _QWORD v10[5];
  uint64_t v11;

  if (a1)
  {
    v2 = objc_msgSend(a1, "integerValue");
    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_100759808, 32, 7);
    *(_QWORD *)(v4 + 16) = v1;
    *(_QWORD *)(v4 + 24) = v2;
    v5 = swift_allocObject(&unk_100759830, 32, 7);
    *(_QWORD *)(v5 + 16) = sub_1000E723C;
    *(_QWORD *)(v5 + 24) = v4;
    v10[4] = sub_1000479CC;
    v11 = v5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_1000479AC;
    v10[3] = &unk_100759848;
    v6 = _Block_copy(v10);
    v7 = v11;
    v8 = v1;
    swift_retain(v5);
    objc_msgSend(v3, "performWithoutAnimation:", v6, swift_release(v7).n128_f64[0]);
    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 106, 501, 40, 1);
    swift_release(v4);
    swift_release(v5);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_1000E7218()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000E723C()
{
  uint64_t v0;

  sub_1000E5C4C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1000E7244()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E7254(uint64_t a1)
{
  return sub_1004AF310(a1) & 1;
}

CGFloat sub_1000E7280(uint64_t a1)
{
  uint64_t v1;

  return sub_1004AF454(a1, v1);
}

uint64_t sub_1000E72AC()
{
  return sub_1004AE808();
}

uint64_t sub_1000E72D4(uint64_t a1)
{
  return sub_1004B8920(a1);
}

uint64_t sub_1000E72FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  if (IndexPath.count.getter() < 2)
    v7 = 0;
  else
    v7 = IndexPath.section.getter();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(**(_QWORD **)(v3 + qword_10082CFB0)
                                                                                        + 608))(a1, a2, a3, v7, v3, *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph));
}

uint64_t sub_1000E738C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id sub_1000E73B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000E59F8(a1, a2, *(_QWORD *)(v2 + 64));
}

uint64_t sub_1000E73E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000E7404()
{
  uint64_t *v0;

  return sub_1000E5F48(v0[8], v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1000E7418(uint64_t a1)
{
  return sub_1000E7528(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000E5EF0);
}

uint64_t sub_1000E7424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 72) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000E7498()
{
  uint64_t v0;

  type metadata accessor for IndexSet(0);
  sub_1000E5BD8(*(void **)(v0 + 64));
}

uint64_t sub_1000E74C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1000E74D8()
{
  unint64_t result;

  result = qword_10082D0E0;
  if (!qword_10082D0E0)
  {
    result = swift_getWitnessTable(&unk_10066F5E8, &type metadata for PerformanceTestError);
    atomic_store(result, (unint64_t *)&qword_10082D0E0);
  }
  return result;
}

uint64_t sub_1000E751C(uint64_t a1)
{
  return sub_1000E7528(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000E5AEC);
}

uint64_t sub_1000E7528(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[8], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

ValueMetadata *type metadata accessor for SearchLandingPageShelfLayoutSpacingProvider()
{
  return &type metadata for SearchLandingPageShelfLayoutSpacingProvider;
}

uint64_t sub_1000E756C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  __n128 v21;
  uint64_t v23;

  v2 = sub_10007B804(&qword_10082D108);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - v9;
  v11 = sub_10007B804((uint64_t *)&unk_10082F840);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v23 - v15;
  ShelfLayoutContext.surroundingShelves.getter(v7, v4);
  sub_1000057AC((uint64_t)v4, &qword_10082D108);
  sub_100057CF0((uint64_t)v7, (uint64_t)v10);
  v17 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17) == 1)
  {
    sub_1000057AC((uint64_t)v10, &qword_10082D108);
    v19 = type metadata accessor for Shelf.ContentType(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_100663990);
    ReadOnlyLens.subscript.getter(KeyPath, v17);
    v21 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v18 + 8))(v10, v17, v21);
    v19 = type metadata accessor for Shelf.ContentType(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 0, 1, v19);
  }
  sub_1000E8018((uint64_t)v16, (uint64_t)v13);
  type metadata accessor for Shelf.ContentType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v13, 1, v19) == 1)
  {
    a1[3] = (uint64_t)&type metadata for Double;
    a1[4] = (uint64_t)&protocol witness table for Double;
    *a1 = 0;
  }
  else
  {
    sub_100617BD4(a1);
    sub_1000057AC((uint64_t)v16, (uint64_t *)&unk_10082F840);
    v16 = v13;
  }
  return sub_1000057AC((uint64_t)v16, (uint64_t *)&unk_10082F840);
}

uint64_t sub_1000E77E0@<X0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t KeyPath;
  __n128 v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;

  v4 = type metadata accessor for Shelf.ContentType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter(v12);
  KeyPath = swift_getKeyPath(&unk_100663990);
  ReadOnlyLens.subscript.getter(KeyPath, v8);
  v14 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v14);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v15 == enum case for Shelf.ContentType.mediumAdLockupWithScreenshotsBackground(_:)
    || v15 == enum case for Shelf.ContentType.condensedAdLockupWithIconBackground(_:))
  {
    if (qword_1008287A0 != -1)
      swift_once(&qword_1008287A0, sub_1004324E8);
    v17 = type metadata accessor for StaticDimension(0);
    v18 = v17;
    v19 = qword_10088EFC8;
    goto LABEL_13;
  }
  if (v15 == enum case for Shelf.ContentType.action(_:))
  {
    if (qword_1008287C8 != -1)
      swift_once(&qword_1008287C8, sub_100432518);
    v17 = type metadata accessor for StaticDimension(0);
    v18 = v17;
    v19 = qword_10088F040;
LABEL_13:
    v20 = sub_10007AF70(v17, (uint64_t)v19);
    *((_QWORD *)a2 + 3) = v18;
    *((_QWORD *)a2 + 4) = &protocol witness table for StaticDimension;
    v21 = sub_100024638(a2);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v21, v20, v18);
  }
  sub_100617E64(a1, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000E79F0@<X0>(double *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t KeyPath;
  __n128 v25;
  uint64_t (*v26)(char *, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t);
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  double *v43;
  char *v45;
  __n128 v46;
  void (*v47)(char *, uint64_t, __n128);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  double *v54;
  _QWORD *v55;
  char *v56;
  char v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  double *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;

  v65 = a1;
  v1 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v59 - v6;
  v64 = type metadata accessor for Shelf.ContentType(0);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v60 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v61 = (char *)&v59 - v10;
  __chkstk_darwin(v11);
  v62 = (char *)&v59 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - v14;
  v16 = type metadata accessor for PageGrid(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = ShelfLayoutContext.contentPageGrid.getter(v20);
  v22 = PageGrid.interRowSpace.getter(v21);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  ShelfLayoutContext.shelf.getter(v23);
  KeyPath = swift_getKeyPath(&unk_100663990);
  ReadOnlyLens.subscript.getter(KeyPath, v1);
  v25 = swift_release(KeyPath);
  v26 = *(uint64_t (**)(char *, uint64_t, __n128))(v2 + 8);
  v27 = v26(v7, v1, v25);
  ShelfLayoutContext.shelf.getter(v27);
  v28 = swift_getKeyPath(&unk_1006639C0);
  ReadOnlyLens.subscript.getter(v28, v1);
  v29 = swift_release(v28);
  v26(v4, v1, v29);
  v30 = v66;
  if (*(_QWORD *)(v66 + 16))
  {
    sub_100022500(v66 + 32, (uint64_t)&v67);
  }
  else
  {
    v69 = 0;
    v67 = 0u;
    v68 = 0u;
  }
  v31 = v22 * 0.5;
  swift_bridgeObjectRelease(v30);
  v32 = v64;
  v33 = v63;
  if (!*((_QWORD *)&v68 + 1))
  {
    sub_1000057AC((uint64_t)&v67, &qword_100831E50);
    v70 = 0u;
    v71 = 0u;
    v72 = 0;
    goto LABEL_12;
  }
  v34 = sub_10007B804((uint64_t *)&unk_10082C420);
  v35 = sub_10007B804(&qword_10082D100);
  if ((swift_dynamicCast(&v70, &v67, v34, v35, 6) & 1) == 0)
  {
    v72 = 0;
    v70 = 0u;
    v71 = 0u;
    goto LABEL_12;
  }
  if (!*((_QWORD *)&v71 + 1))
  {
LABEL_12:
    sub_1000057AC((uint64_t)&v70, &qword_10082D0F8);
LABEL_13:
    v43 = v65;
    *((_QWORD *)v65 + 3) = &type metadata for CGFloat;
    *((_QWORD *)v43 + 4) = &protocol witness table for CGFloat;
    *v43 = v31;
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v15, v32);
  }
  sub_10000F5F4(&v70, (uint64_t)v73);
  v36 = v74;
  v37 = v75;
  sub_100060B40(v73, v74);
  if ((SearchAdProviding.isSearchAd.getter(v36, v37) & 1) == 0)
  {
LABEL_26:
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v73);
    goto LABEL_13;
  }
  v38 = *(void (**)(char *, _QWORD, uint64_t))(v33 + 104);
  v38(v62, enum case for Shelf.ContentType.condensedAdLockupWithIconBackground(_:), v32);
  v39 = sub_1000E7FD0();
  dispatch thunk of RawRepresentable.rawValue.getter(&v70, v32, v39);
  dispatch thunk of RawRepresentable.rawValue.getter(&v67, v32, v39);
  v40 = *((_QWORD *)&v70 + 1);
  v41 = *((_QWORD *)&v67 + 1);
  if (v70 == v67)
  {
    v42 = 1;
    v41 = *((_QWORD *)&v70 + 1);
  }
  else
  {
    v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, *((_QWORD *)&v70 + 1), v67, *((_QWORD *)&v67 + 1), 0);
  }
  v45 = v61;
  swift_bridgeObjectRelease(v40);
  v46 = swift_bridgeObjectRelease(v41);
  v47 = *(void (**)(char *, uint64_t, __n128))(v33 + 8);
  v47(v62, v32, v46);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v45, v15, v32);
  if ((v42 & 1) != 0)
    goto LABEL_18;
  v48 = v60;
  v38(v60, enum case for Shelf.ContentType.mediumAdLockupWithScreenshotsBackground(_:), v32);
  dispatch thunk of RawRepresentable.rawValue.getter(&v70, v32, v39);
  dispatch thunk of RawRepresentable.rawValue.getter(&v67, v32, v39);
  v49 = *((_QWORD *)&v70 + 1);
  v50 = *((_QWORD *)&v67 + 1);
  if (v70 != v67)
  {
    v56 = v45;
    v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, *((_QWORD *)&v70 + 1), v67, *((_QWORD *)&v67 + 1), 0);
    swift_bridgeObjectRelease(v49);
    v58 = swift_bridgeObjectRelease(v50);
    v47(v48, v32, v58);
    ((void (*)(char *, uint64_t))v47)(v56, v32);
    if ((v57 & 1) != 0)
      goto LABEL_19;
    if (qword_100827420 != -1)
      swift_once(&qword_100827420, sub_100257C9C);
    v31 = v31 + fabs(*(double *)&xmmword_10088B560);
    goto LABEL_26;
  }
  v51 = swift_bridgeObjectRelease_n(*((_QWORD *)&v70 + 1), 2);
  v47(v48, v32, v51);
LABEL_18:
  ((void (*)(char *, uint64_t))v47)(v45, v32);
LABEL_19:
  if (qword_1008287A0 != -1)
    swift_once(&qword_1008287A0, sub_1004324E8);
  v52 = type metadata accessor for StaticDimension(0);
  v53 = sub_10007AF70(v52, (uint64_t)qword_10088EFC8);
  v54 = v65;
  *((_QWORD *)v65 + 3) = v52;
  *((_QWORD *)v54 + 4) = &protocol witness table for StaticDimension;
  v55 = sub_100024638(v54);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v55, v53, v52);
  ((void (*)(char *, uint64_t))v47)(v15, v32);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v73);
}

unint64_t sub_1000E7FD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082C328;
  if (!qword_10082C328)
  {
    v1 = type metadata accessor for Shelf.ContentType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Shelf.ContentType, v1);
    atomic_store(result, (unint64_t *)&qword_10082C328);
  }
  return result;
}

uint64_t sub_1000E8018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_10082F840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E8060()
{
  return Shelf.contentsMetadata.getter();
}

uint64_t sub_1000E8080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore28ScreenshotCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000C8118(v3, a1);
}

uint64_t sub_1000E80D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore28ScreenshotCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000C80D0(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_1000E8130(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore28ScreenshotCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1000E817C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100663A20, a4);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

_QWORD *sub_1000E81E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = type metadata accessor for Shelf.ContentsMetadata(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for ProductMediaMetadata(0, v7);
  v29 = *(_QWORD *)(v10 - 8);
  v30 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ProductMediaItem(0);
  v14 = sub_1000E8424();
  result = ItemLayoutContext.typedModel<A>(as:)(&v31, v13, v13, v14);
  v16 = v31;
  if (v31)
  {
    v28 = v0;
    KeyPath = swift_getKeyPath(&unk_100663A68);
    ItemLayoutContext.subscript.getter(v9);
    swift_release(KeyPath);
    v18 = swift_getKeyPath(&unk_100663A98);
    ReadOnlyLens.subscript.getter(v18, v5);
    v19 = swift_release(v18);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v6 + 8))(v9, v5, v19);
    if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == enum case for Shelf.ContentsMetadata.productMedia(_:))
    {
      (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
      v21 = v29;
      v20 = v30;
      v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v29 + 32))(v12, v4, v30);
      v23 = ProductMediaMetadata.platform.getter(v22);
      v24 = *(_QWORD *)(v28 + OBJC_IVAR____TtC8AppStore28ScreenshotCollectionViewCell_borderedScreenshotView);
      v25 = *(_QWORD *)(v24 + OBJC_IVAR____TtC8AppStore22BorderedScreenshotView_platform);
      *(_QWORD *)(v24 + OBJC_IVAR____TtC8AppStore22BorderedScreenshotView_platform) = v23;
      swift_retain(v23);
      swift_release(v25);
      sub_100527990();
      swift_release(v23);
      v26 = swift_release(v16);
      return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v21 + 8))(v12, v20, v26);
    }
    else
    {
      v27 = swift_release(v16);
      return (_QWORD *)(*(uint64_t (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v1, v27);
    }
  }
  return result;
}

unint64_t sub_1000E8424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082D110;
  if (!qword_10082D110)
  {
    v1 = type metadata accessor for ProductMediaItem(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ProductMediaItem, v1);
    atomic_store(result, (unint64_t *)&qword_10082D110);
  }
  return result;
}

uint64_t sub_1000E8470()
{
  return Shelf.contentsMetadata.getter();
}

uint64_t sub_1000E8490(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[3];
  _QWORD v25[7];
  _QWORD *v26;

  v2 = v1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = _swiftEmptyArrayStorage;
    if (!v4)
      return (uint64_t)v5;
    v26 = _swiftEmptyArrayStorage;
    result = sub_1000FE654(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v20[1] = v2;
    v7 = 0;
    v5 = v26;
    v25[0] = 0x3FF0000000000000;
    v25[1] = 0;
    v25[2] = 0;
    v25[3] = 0x3FF0000000000000;
    v25[4] = 0;
    v25[5] = 0;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      objc_msgSend(v8, "transform");
      v24[0] = v21;
      v24[1] = v22;
      v24[2] = v23;
      if ((static CGAffineTransform.== infix(_:_:)(v24, v25) & 1) != 0)
      {
        *((_QWORD *)&v22 + 1) = sub_10003D7F8();
        *(_QWORD *)&v23 = &protocol witness table for UIView;
        *(_QWORD *)&v21 = v9;
      }
      else
      {
        UIView.withUntransformedFrame.getter(&v21);

      }
      v26 = v5;
      v11 = v5[2];
      v10 = v5[3];
      if (v11 >= v10 >> 1)
        sub_1000FE654(v10 > 1, v11 + 1, 1);
      ++v7;
      v12 = *((_QWORD *)&v22 + 1);
      v13 = v23;
      v14 = sub_100063B70((uint64_t)&v21, *((uint64_t *)&v22 + 1));
      v2 = v20;
      v15 = __chkstk_darwin(v14);
      v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v18 + 16))(v17, v15);
      sub_100100C08(v11, (uint64_t)v17, (uint64_t *)&v26, v12, v13);
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v21);
      v5 = v26;
      if (v4 == v7)
        return (uint64_t)v5;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

void sub_1000E86AC()
{
  qword_10082D118 = 0xBFE0C152382D7365;
}

int64x2_t sub_1000E86C8()
{
  uint64_t v0;
  int64x2_t result;

  if (qword_100826C40 != -1)
    swift_once(&qword_100826C40, sub_1000E86AC);
  v0 = qword_10082D118;
  qword_10088A3C8 = 0;
  swift_weakInit(&unk_10088A3D0, 0);
  qword_10088A3D8 = 0;
  unk_10088A3E0 = 0;
  result = vdupq_n_s64(0x404A000000000000uLL);
  byte_10088A3E8 = 1;
  xmmword_10088A3A0 = (__int128)result;
  *(_OWORD *)algn_10088A3B0 = xmmword_100663AD0;
  qword_10088A3C0 = v0;
  return result;
}

uint64_t sub_1000E8754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v5[3];
  char v6;

  swift_weakInit(v5, 0);
  v5[1] = 0;
  v5[2] = 0;
  v6 = 1;
  swift_bridgeObjectRelease(0);
  swift_weakDestroy(v5);
  return sub_1000E9C04(a1, a2);
}

char *sub_1000E87C4(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  id v16;
  double left;
  double bottom;
  double right;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[6];
  __int128 v28;
  _BYTE v29[24];
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  void *v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  char v42;
  char v43[24];
  objc_super v44;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews] = _swiftEmptyArrayStorage;
  v10 = OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics;
  v11 = qword_100826C48;
  v12 = v4;
  if (v11 != -1)
    swift_once(&qword_100826C48, sub_1000E86C8);
  v13 = &v12[v10];
  sub_1000EB198((uint64_t)&xmmword_10088A3A0, (uint64_t)&v30);
  v14 = v31;
  *((_QWORD *)v13 + 5) = &type metadata for CGFloat;
  *((_QWORD *)v13 + 6) = &protocol witness table for CGFloat;
  *((_QWORD *)v13 + 2) = v14;
  v15 = v36;
  *(_OWORD *)v13 = v30;
  *(_OWORD *)(v13 + 56) = v32;
  *(_OWORD *)(v13 + 72) = v35;
  v13[88] = v15;
  sub_1000EB1CC((uint64_t)&v30);
  sub_1000EB198((uint64_t)&xmmword_10088A3A0, (uint64_t)&v12[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config]);

  v44.receiver = v12;
  v44.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v44, "initWithFrame:", a1, a2, a3, a4);
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v20 = (char *)v16;
  objc_msgSend(v20, "setLayoutMargins:", UIEdgeInsetsZero.top, left, bottom, right);
  objc_msgSend(v20, "setClipsToBounds:", 1);
  v21 = (uint64_t)&v20[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config];
  swift_beginAccess(&v20[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config], v43, 0, 0);
  v22 = sub_1000EB198(v21, (uint64_t)&v38);
  __chkstk_darwin(v22);
  *(double *)&v27[2] = a1;
  *(double *)&v27[3] = a2;
  *(double *)&v27[4] = a3;
  *(double *)&v27[5] = a4;
  v23 = sub_1000EB20C();
  Copyable.copyWithOverrides(in:)(sub_1000EB1FC, v27, &type metadata for IconArtworkGridView.Config, v23);
  sub_1000EB1CC((uint64_t)&v38);
  swift_beginAccess(v21, &v38, 33, 0);
  sub_1000EB250((uint64_t)&v30, v21);
  swift_endAccess(&v38);
  sub_1000EB198(v21, (uint64_t)&v38);
  v24 = v39;
  v33 = &type metadata for CGFloat;
  v34 = &protocol witness table for CGFloat;
  v28 = v38;

  v31 = v24;
  v30 = v28;
  v35 = v40;
  v36 = v41;
  v37 = v42;
  sub_1000EB1CC((uint64_t)&v38);
  v25 = (uint64_t)&v20[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics];
  swift_beginAccess(&v20[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics], v29, 33, 0);
  sub_1000EB284((uint64_t)&v30, v25);
  swift_endAccess(v29);
  return v20;
}

id sub_1000E8B24(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t j;
  id v15;
  void *v16;
  uint64_t v17;

  v3 = OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews];
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews];
    else
      v10 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews]);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v10);
    v5 = (uint64_t)result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews]);
    if (!v5)
      goto LABEL_13;
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v8 = *(id *)(v4 + 8 * i + 32);
    v9 = v8;
    objc_msgSend(v8, "removeFromSuperview");

  }
LABEL_13:
  swift_bridgeObjectRelease(v4);
  v11 = *(_QWORD *)&v1[v3];
  *(_QWORD *)&v1[v3] = a1;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)&v1[v3];
  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain(*(_QWORD *)&v1[v3]);
    if (v13)
      goto LABEL_15;
LABEL_25:
    swift_bridgeObjectRelease(v12);
    return objc_msgSend(v1, "setNeedsLayout");
  }
  if (v12 < 0)
    v17 = *(_QWORD *)&v1[v3];
  else
    v17 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v1[v3]);
  result = (id)_CocoaArrayWrapper.endIndex.getter(v17);
  v13 = (uint64_t)result;
  if (!result)
    goto LABEL_25;
LABEL_15:
  if (v13 >= 1)
  {
    for (j = 0; j != v13; ++j)
    {
      if ((v12 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v12);
      else
        v15 = *(id *)(v12 + 8 * j + 32);
      v16 = v15;
      objc_msgSend(v1, "addSubview:", v15);

    }
    goto LABEL_25;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000E8CD0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];
  __int128 v5;
  uint64_t v6;
  void *v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  char v16;
  _BYTE v17[24];

  v1 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config], v17, 0, 0);
  sub_1000EB198(v1, (uint64_t)&v12);
  v7 = &type metadata for CGFloat;
  v8 = &protocol witness table for CGFloat;
  v6 = v13;
  v5 = v12;
  v9 = v14;
  v10 = v15;
  v11 = v16;
  sub_1000EB1CC((uint64_t)&v12);
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics], v4, 33, 0);
  sub_1000EB2C0((uint64_t)&v5, v2);
  objc_msgSend(v0, "setNeedsLayout", swift_endAccess(v4).n128_f64[0]);
  return sub_1000EB164((uint64_t)&v5);
}

void sub_1000E8EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  _BYTE v18[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews);
  v4 = type metadata accessor for ArtworkView(0);
  swift_bridgeObjectRetain(v3);
  v6 = Array.isNotEmpty.getter(v5, v4);
  swift_bridgeObjectRelease(v3);
  if ((v6 & 1) != 0)
  {
    v7 = v1 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config, v18, 0, 0);
    Strong = swift_weakLoadStrong(v7 + 48);
    if (!Strong)
    {
LABEL_16:
      sub_1000E8B24((uint64_t)_swiftEmptyArrayStorage);
      return;
    }
    v9 = Strong;
    v10 = *(_QWORD *)(v1 + v2);
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v17 = *(_QWORD *)(v1 + v2);
      else
        v17 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v11 = _CocoaArrayWrapper.endIndex.getter(v17);
      if (v11)
        goto LABEL_5;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v10);
      if (v11)
      {
LABEL_5:
        if (v11 < 1)
        {
          __break(1u);
          return;
        }
        v12 = 0;
        do
        {
          if ((v10 & 0xC000000000000001) != 0)
            v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
          else
            v13 = *(id *)(v10 + 8 * v12 + 32);
          v14 = v13;
          ++v12;
          v15 = sub_10008360C();
          ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v14, 1, v4, v15, v16);

        }
        while (v11 != v12);
      }
    }
    swift_release(v9);
    swift_bridgeObjectRelease(v10);
    goto LABEL_16;
  }
}

void sub_1000E9048(CGFloat a1, CGFloat a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[12];
  _BYTE v41[24];
  _BYTE v42[32];

  if (a1 <= 0.0)
    return;
  if (a2 <= 0.0)
    return;
  v5 = v2 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config, v42, 0, 0);
  Strong = swift_weakLoadStrong(v5 + 48);
  if (!Strong)
    return;
  v7 = Strong;
  v8 = *(_QWORD *)(v5 + 40);
  if (!v8)
  {
LABEL_28:
    swift_release(v7);
    return;
  }
  v9 = type metadata accessor for Artwork(0);
  swift_bridgeObjectRetain(v8);
  if ((Array.isNotEmpty.getter(v10, v9) & 1) == 0)
  {
    swift_release(v7);
    swift_bridgeObjectRelease(v8);
    return;
  }
  v11 = v2 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics, v41, 0, 0);
  sub_1000EB0F4(v11, (uint64_t)v40);
  v12 = sub_1000E9C5C((uint64_t)v40, v2, 0.0, 0.0, a1, a2);
  v13 = v12[2];
  swift_bridgeObjectRelease(v12);
  sub_1000EB164((uint64_t)v40);
  v39 = v13;
  v40[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (!v13)
  {
LABEL_27:
    swift_bridgeObjectRelease(v8);
    sub_1000E8B24(v40[0]);
    goto LABEL_28;
  }
  v14 = v8 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v8 >> 62)
    goto LABEL_34;
  v15 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v16 = type metadata accessor for ArtworkView(0);
    if (!v15)
      break;
    v17 = v16;
    if ((v8 & 0xC000000000000001) != 0)
    {
      v18 = 0;
      while (1)
      {
        v23 = (id)static ArtworkView.iconArtworkView.getter(v16);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
        v25 = *(_QWORD *)((v40[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v24 = *(_QWORD *)((v40[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v25 >= v24 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
        v14 = v18 + 0x8000000000000000;
        v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
        specialized Array._endMutation()(v26);
        if (v18 == 0x8000000000000000 && v15 == -1)
          break;
        v19 = v18 + 1;
        v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18 % v15, v8);
        v21 = Artwork.config(using:)(*(double *)v5, *(double *)(v5 + 8));
        v22 = sub_10008360C();
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v21, 2, 1, v23, v17, v22);

        swift_unknownObjectRelease(v20);
        swift_release(v21);
        v18 = v19;
        if (v39 == v19)
          goto LABEL_27;
      }
LABEL_32:
      __break(1u);
    }
    else
    {
      v38 = v14;
      v14 = 0;
      while (1)
      {
        v27 = (id)static ArtworkView.iconArtworkView.getter(v16);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
        v29 = *(_QWORD *)((v40[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v28 = *(_QWORD *)((v40[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v29 >= v28 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
        v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
        specialized Array._endMutation()(v30);
        if (v14 == 0x8000000000000000 && v15 == -1)
          break;
        v31 = v14 % v15;
        if (v14 % v15 < 0)
        {
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        if (v31 >= *(_QWORD *)(v38 + 16))
          goto LABEL_31;
        ++v14;
        v32 = *(_QWORD *)(v8 + 32 + 8 * v31);
        v33 = *(double *)v5;
        v34 = *(double *)(v5 + 8);
        swift_retain(v32);
        v35 = Artwork.config(using:)(v33, v34);
        v36 = sub_10008360C();
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v35, 2, 1, v27, v17, v36);

        swift_release(v32);
        swift_release(v35);
        if (v39 == v14)
          goto LABEL_27;
      }
    }
    __break(1u);
LABEL_34:
    if (v8 >= 0)
      v37 = v14;
    else
      v37 = v8;
    swift_bridgeObjectRetain(v8);
    v15 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v8);
  }
  __break(1u);
}

void sub_1000E9404()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  unint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  CGFloat d;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat tx;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  double *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  CGFloat *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CGFloat v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  CGAffineTransform v38;
  char v39[24];
  char v40[24];
  _BYTE v41[96];
  CGFloat v42;
  objc_super v43;
  CGRect v44;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v5 = __chkstk_darwin(v3).n128_u64[0];
  *(_QWORD *)&d = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43.receiver = v1;
  v43.super_class = ObjectType;
  objc_msgSendSuper2(&v43, "layoutSubviews", v5);
  objc_msgSend(v1, "bounds");
  x = v44.origin.x;
  y = v44.origin.y;
  width = v44.size.width;
  height = v44.size.height;
  if (!CGRectIsEmpty(v44))
  {
    tx = *(double *)&OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews;
    v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews];
    if ((unint64_t)v13 >> 62)
      goto LABEL_21;
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        *(CGFloat *)&v35 = d;
        *(_QWORD *)&v36 = v4;
        *(_QWORD *)&v37 = v3;
        v34 = tx;
        v14 = *(_QWORD *)&v1[*(_QWORD *)&tx];
        swift_bridgeObjectRetain(v14);
        d = COERCE_DOUBLE(sub_1000E8490(v15));
        swift_bridgeObjectRelease(v14);
        v13 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics];
        swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics], v40, 0, 0);
        sub_1000EB0F4(v13, (uint64_t)v41);
        v42 = d;
        v16 = sub_1000E9C5C((uint64_t)v41, (uint64_t)v1, x, y, width, height);
        v17 = v16;
        v18 = *(_QWORD *)(*(_QWORD *)&d + 16);
        if (!v18)
        {
LABEL_12:
          swift_bridgeObjectRelease(v17);
          v22 = v35;
          LayoutRect.init(representing:)(v23);
          (*(void (**)(uint64_t, _QWORD))(v36 + 8))(v22, v37);
          v24 = (CGFloat *)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config];
          swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config], v39, 0, 0);
          CGAffineTransformMakeRotation(&v38, v24[4]);
          v37 = *(_OWORD *)&v38.a;
          v36 = *(_OWORD *)&v38.c;
          v35 = *(_OWORD *)&v38.tx;
          v25 = *(_QWORD *)&v1[*(_QWORD *)&v34];
          if ((unint64_t)v25 >> 62)
          {
            if (v25 < 0)
              v32 = v25;
            else
              v32 = v25 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v25);
            v26 = _CocoaArrayWrapper.endIndex.getter(v32);
            if (v26)
            {
LABEL_14:
              if (v26 < 1)
              {
                __break(1u);
                return;
              }
              v27 = 0;
              do
              {
                if ((v25 & 0xC000000000000001) != 0)
                  v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v25);
                else
                  v28 = *(id *)(v25 + 8 * v27 + 32);
                v29 = v28;
                ++v27;
                *(_OWORD *)&v38.a = v37;
                *(_OWORD *)&v38.c = v36;
                *(_OWORD *)&v38.tx = v35;
                objc_msgSend(v28, "setTransform:", &v38);

              }
              while (v26 != v27);
            }
          }
          else
          {
            v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v25);
            if (v26)
              goto LABEL_14;
          }
          swift_bridgeObjectRelease(v25);
          sub_1000EB130((uint64_t)v41);
          return;
        }
        v19 = 0;
        v3 = v16[2];
        v20 = (double *)(v16 + 7);
        v4 = 32;
        while (1)
        {
          if (v19 >= v3)
            goto LABEL_7;
          if (v19 >= *(_QWORD *)(*(_QWORD *)&v42 + 16))
            break;
          sub_100022500(*(_QWORD *)&v42 + v4, (uint64_t)&v38);
          d = v38.d;
          tx = v38.tx;
          v21 = sub_100060B40(&v38, *(uint64_t *)&v38.d);
          if (v19 >= v17[2])
          {
            __break(1u);
            goto LABEL_12;
          }
          v13 = (uint64_t)v21;
          dispatch thunk of LayoutView.frame.setter(*(_QWORD *)&d, *(_QWORD *)&tx, *(v20 - 3), *(v20 - 2), *(v20 - 1), *v20);
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v38);
LABEL_7:
          ++v19;
          v20 += 4;
          v4 += 40;
          if (v18 == v19)
            goto LABEL_12;
        }
        __break(1u);
LABEL_21:
        if (v13 < 0)
          v30 = v13;
        else
          v30 = v13 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v13);
        v31 = _CocoaArrayWrapper.endIndex.getter(v30);
        swift_bridgeObjectRelease(v13);
      }
      while (v31);
    }
  }
}

uint64_t sub_1000E989C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t result;

  v10 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 40) = a2;
  result = swift_weakAssign(a1 + 48, a3);
  *(double *)(a1 + 56) = a4;
  *(double *)(a1 + 64) = a5;
  *(_BYTE *)(a1 + 72) = 0;
  return result;
}

uint64_t type metadata accessor for IconArtworkGridView()
{
  return objc_opt_self(_TtC8AppStore19IconArtworkGridView);
}

uint64_t destroy for IconArtworkGridView.Config(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  return swift_weakDestroy(a1 + 48);
}

uint64_t initializeWithCopy for IconArtworkGridView.Config(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = a2 + 48;
  swift_bridgeObjectRetain(v5);
  swift_weakCopyInit(a1 + 48, v6);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t assignWithCopy for IconArtworkGridView.Config(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v4);
  swift_weakCopyAssign(a1 + 48, a2 + 48);
  v6 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v6;
  return a1;
}

uint64_t initializeWithTake for IconArtworkGridView.Config(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_weakTakeInit(a1 + 48, a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for IconArtworkGridView.Config(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v5);
  swift_weakTakeAssign(a1 + 48, a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconArtworkGridView.Config(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IconArtworkGridView.Config(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IconArtworkGridView.Config()
{
  return &type metadata for IconArtworkGridView.Config;
}

uint64_t sub_1000E9C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 40) = v4;
  swift_weakTakeInit(a2 + 48, a1 + 48);
  v5 = *(_OWORD *)(a1 + 56);
  *(_BYTE *)(a2 + 72) = *(_BYTE *)(a1 + 72);
  *(_OWORD *)(a2 + 56) = v5;
  return a2;
}

_QWORD *sub_1000E9C5C(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MinY;
  double v21;
  double v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  double v27;
  double v28;
  CGFloat v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  double MidY;
  double v38;
  __double2 v39;
  __double2 v40;
  __double2 v41;
  double v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  double v47;
  _BOOL4 v48;
  _QWORD *v49;
  double v50;
  double v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  double v61;
  double v62;
  double v63;
  _BOOL4 v64;
  double v65;
  double v66;
  double v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  double v73;
  BOOL v74;
  double v75;
  CGFloat v76;
  CGFloat v77;
  double v78;
  double v79;
  double v80;
  double v81;
  unint64_t v82;
  unint64_t v83;
  double *v84;
  CGFloat v85;
  double v86;
  double v87;
  CGFloat v88;
  CGFloat v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  CGFloat v96;
  CGFloat v97;
  CGFloat v98;
  double v99;
  double v100;
  BOOL v101;
  CGFloat v102;
  CGFloat v103;
  double v104;
  double v105;
  double v106;
  unint64_t v107;
  unint64_t v108;
  double v109;
  double *v110;
  CGFloat v111;
  __double2 v112;
  double v113;
  double v114;
  CGFloat v115;
  double v116;
  double v117;
  double v119;
  CGFloat v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  _BOOL4 v126;
  double v127;
  double v128;
  CGFloat v129;
  CGFloat v130;
  CGFloat v131;
  CGFloat v132;
  CGFloat v133;
  double v134;
  CGFloat v135;
  CGFloat v136;
  double v137;
  double v138;
  double v139;
  double v140;
  unint64_t v141;
  unint64_t v142;
  double v143;
  double v144;
  double v145;
  double *v146;
  CGFloat v147;
  _QWORD *v148;
  double v149;
  double v150;
  CGFloat v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  CGFloat v158;
  CGFloat v159;
  CGFloat v160;
  CGFloat v161;
  double v162;
  CGFloat v163;
  CGFloat v164;
  double v165;
  double v166;
  double v167;
  double v168;
  unint64_t v169;
  unint64_t v170;
  double v171;
  double v172;
  double v173;
  double *v174;
  CGFloat v175;
  _QWORD *v176;
  uint64_t v177;
  double v178;
  double v179;
  CGFloat v180;
  CGFloat v181;
  CGFloat v182;
  CGFloat MidX;
  CGFloat v184;
  CGFloat v185;
  double cosval;
  double v187;
  double v188;
  CGFloat sinval;
  double v190;
  double v191;
  CGFloat v192;
  CGFloat v193;
  CGFloat v194;
  CGFloat v195;
  CGFloat v196;
  CGFloat v197;
  CGFloat v198;
  CGFloat v199;
  double v200;
  CGFloat v201;
  CGFloat v202;
  double v203;
  double MinX;
  CGFloat v205;
  CGFloat v206;
  CGAffineTransform v207;
  CGRect v208;
  CGRect v209;
  CGRect v210;
  CGRect v211;
  CGRect v212;
  CGRect v213;
  CGRect v214;
  CGRect v215;
  CGRect v216;
  CGRect v217;
  CGRect v218;
  CGRect v219;
  CGRect v220;
  CGRect v221;
  CGRect v222;
  CGRect v223;
  CGRect v224;
  CGRect v225;
  CGRect v226;
  CGRect v227;
  CGRect v228;
  CGRect v229;
  CGRect v230;
  CGRect v231;
  CGRect v232;
  CGRect v233;
  CGRect v234;
  CGRect v235;
  CGRect v236;
  CGRect v237;
  CGRect v238;
  CGRect v239;
  CGRect v240;
  CGRect v241;
  CGRect v242;
  CGRect v243;
  CGRect v244;
  CGRect v245;
  CGRect v246;
  CGRect v247;
  CGRect v248;
  CGRect v249;
  CGRect v250;
  CGRect v251;
  CGRect v252;
  CGRect v253;
  CGRect v254;
  CGRect v255;
  CGRect v256;
  CGRect v257;
  CGRect v258;
  CGRect v259;
  CGRect v260;
  CGRect v261;
  CGRect v262;
  CGRect v263;
  CGRect v264;
  CGRect v265;
  CGRect v266;
  CGRect v267;
  CGRect v268;
  CGRect v269;
  CGRect v270;
  CGRect v271;
  CGRect v272;
  CGRect v273;
  CGRect v274;
  CGRect v275;
  CGRect v276;
  CGRect v277;
  CGRect v278;
  CGRect v279;
  CGRect v280;
  CGRect v281;
  CGRect v282;
  CGRect v283;
  CGRect v284;
  CGRect v285;
  CGRect v286;
  CGRect v287;
  CGRect v288;
  CGRect v289;
  CGRect v290;
  CGRect v291;
  CGRect v292;
  CGRect v293;
  CGRect v294;
  CGRect v295;
  CGRect v296;
  CGRect v297;
  CGRect v298;
  CGRect v299;
  CGRect v300;
  CGRect v301;
  CGRect v302;
  CGRect v303;
  CGRect v304;
  CGRect v305;
  CGRect v306;
  CGRect v307;
  CGRect v308;
  CGRect v309;
  CGRect v310;
  CGRect v311;
  CGRect v312;
  CGRect v313;
  CGRect v314;
  CGRect v315;

  v12 = type metadata accessor for FloatingPointRoundingRule(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v177 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = *(double *)(a1 + 64);
  CGAffineTransformMakeRotation(&v207, v206);
  v208.origin.x = a5 * -0.5;
  v208.origin.y = a6 * -0.5;
  v208.size.width = a5;
  v208.size.height = a6;
  v209 = CGRectApplyAffineTransform(v208, &v207);
  x = v209.origin.x;
  y = v209.origin.y;
  width = v209.size.width;
  v205 = v209.size.width;
  height = v209.size.height;
  v201 = v209.size.height;
  MinX = CGRectGetMinX(v209);
  v196 = a3;
  v210.origin.x = a3;
  v197 = a4;
  v210.origin.y = a4;
  v210.size.width = a5;
  v210.size.height = a6;
  v198 = a6;
  v203 = MinX + CGRectGetMidX(v210);
  v211.origin.x = x;
  v211.origin.y = y;
  v211.size.width = width;
  v211.size.height = height;
  MinY = CGRectGetMinY(v211);
  v212.origin.x = a3;
  v212.origin.y = a4;
  v212.size.width = a5;
  v212.size.height = a6;
  MinX = MinY + CGRectGetMidY(v212);
  v21 = *(double *)a1;
  v22 = *(double *)(a1 + 8);
  CGAffineTransformMakeRotation(&v207, v206);
  v213.origin.x = v21 * -0.5;
  v213.origin.y = v22 * -0.5;
  v213.size.width = v21;
  v213.size.height = v22;
  v214 = CGRectApplyAffineTransform(v213, &v207);
  v23 = v214.origin.x;
  v24 = v214.origin.y;
  v25 = v214.size.width;
  v26 = v214.size.height;
  v27 = CGRectGetMinX(v214);
  v215.origin.x = 0.0;
  v215.origin.y = 0.0;
  v215.size.width = v21;
  v215.size.height = v22;
  v200 = v27 + CGRectGetMidX(v215);
  v216.origin.x = v23;
  v216.origin.y = v24;
  v216.size.width = v25;
  v216.size.height = v26;
  v28 = CGRectGetMinY(v216);
  v217.origin.x = 0.0;
  v217.origin.y = 0.0;
  v194 = v21;
  v217.size.width = v21;
  v193 = v22;
  v217.size.height = v22;
  v29 = v28 + CGRectGetMidY(v217);
  v30 = *(_QWORD *)(a1 + 40);
  v31 = *(_QWORD *)(a1 + 48);
  sub_100060B40((_QWORD *)(a1 + 16), v30);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v30);
  v32 = AnyDimension.value(in:rounded:)(a2, v15, v30, v31);
  v192 = v32;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v33 = v32 + *(double *)a1;
  sinval = floor(*(double *)(a1 + 56) * v33);
  v34 = v196;
  v218.origin.x = v196;
  v35 = v197;
  v218.origin.y = v197;
  v218.size.width = a5;
  v36 = v198;
  v218.size.height = v198;
  MidX = CGRectGetMidX(v218);
  v219.origin.x = v34;
  v219.origin.y = v35;
  v195 = a5;
  v219.size.width = a5;
  v219.size.height = v36;
  MidY = CGRectGetMidY(v219);
  v38 = *(double *)(a1 + 64);
  v39 = __sincos_stret(v38);
  v188 = v33 * v39.__cosval;
  v187 = v33 * v39.__sinval;
  v40 = __sincos_stret(v38 + 3.14159265);
  v191 = v33 * v40.__cosval;
  v190 = v33 * v40.__sinval;
  v181 = sinval * v39.__cosval;
  v180 = sinval * v39.__sinval;
  v179 = v38;
  v41 = __sincos_stret(v38 + 1.57079633);
  sinval = v41.__sinval;
  cosval = v41.__cosval;
  v42 = v192 + *(double *)(a1 + 8);
  v43 = v200;
  v220.origin.x = v200;
  v220.origin.y = v29;
  v220.size.width = v25;
  v220.size.height = v26;
  v44 = MidX + CGRectGetMidX(v220);
  v221.origin.x = v43;
  v221.origin.y = v29;
  v221.size.width = v25;
  v221.size.height = v26;
  v45 = v44 + CGRectGetWidth(v221) * -0.5;
  v222.origin.x = v43;
  v222.origin.y = v29;
  v222.size.width = v25;
  v222.size.height = v26;
  v46 = CGRectGetMidY(v222);
  v182 = MidY;
  v47 = MidY + v46;
  v223.origin.x = v43;
  v202 = v29;
  v223.origin.y = v29;
  v223.size.width = v25;
  v223.size.height = v26;
  v224.origin.y = v47 + CGRectGetHeight(v223) * -0.5;
  v300.origin.y = MinX;
  v300.size.width = v205;
  v224.origin.x = v45;
  v224.size.width = v25;
  v224.size.height = v26;
  v300.origin.x = v203;
  v300.size.height = v201;
  v48 = CGRectIntersectsRect(v224, v300);
  v178 = v42;
  v206 = v25;
  v199 = v26;
  if (v48)
  {
    v185 = v181 + cosval * v42;
    v184 = v180 + sinval * v42;
    v49 = _swiftEmptyArrayStorage;
    v50 = 0.5;
    v51 = MidX;
    v192 = v182;
    v52 = v200;
    v53 = v201;
    v54 = v202;
    do
    {
      v230.origin.x = v52;
      v230.origin.y = v54;
      v230.size.width = v25;
      v230.size.height = v26;
      v61 = v51 + CGRectGetMidX(v230);
      v231.origin.x = v52;
      v231.origin.y = v54;
      v231.size.width = v25;
      v231.size.height = v26;
      v62 = v61 - CGRectGetWidth(v231) * v50;
      v232.origin.x = v52;
      v232.origin.y = v54;
      v232.size.width = v25;
      v232.size.height = v26;
      sinval = v192 + CGRectGetMidY(v232);
      v233.origin.x = v52;
      v233.origin.y = v54;
      v233.size.width = v25;
      v233.size.height = v26;
      v63 = sinval - CGRectGetHeight(v233) * v50;
      v234.origin.x = v62;
      v234.origin.y = v63;
      v234.size.width = v25;
      v234.size.height = v26;
      v302.origin.x = v203;
      v302.origin.y = MinX;
      v302.size.width = v205;
      v302.size.height = v53;
      v64 = CGRectIntersectsRect(v234, v302);
      cosval = v51;
      if (v64)
      {
        sinval = v51;
        v65 = v192;
        do
        {
          v240.origin.x = v62;
          v240.origin.y = v63;
          v240.size.width = v25;
          v240.size.height = v26;
          v304.origin.x = v196;
          v304.origin.y = v197;
          v304.size.width = v195;
          v304.size.height = v198;
          if (CGRectIntersectsRect(v240, v304))
          {
            v241.origin.x = 0.0;
            v241.origin.y = 0.0;
            v76 = v194;
            v241.size.width = v194;
            v77 = v193;
            v241.size.height = v193;
            v78 = CGRectGetMidX(v241);
            v242.origin.x = 0.0;
            v242.origin.y = 0.0;
            v242.size.width = v76;
            v242.size.height = v77;
            v79 = CGRectGetWidth(v242);
            v243.origin.x = 0.0;
            v243.origin.y = 0.0;
            v243.size.width = v76;
            v243.size.height = v77;
            v80 = CGRectGetMidY(v243);
            v244.origin.x = 0.0;
            v244.origin.y = 0.0;
            v244.size.width = v76;
            v244.size.height = v77;
            v81 = CGRectGetHeight(v244);
            if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
              v49 = sub_100095048(0, v49[2] + 1, 1, v49);
            v83 = v49[2];
            v82 = v49[3];
            v67 = sinval;
            if (v83 >= v82 >> 1)
              v49 = sub_100095048((_QWORD *)(v82 > 1), v83 + 1, 1, v49);
            v66 = 0.5;
            v49[2] = v83 + 1;
            v84 = (double *)&v49[4 * v83];
            v84[4] = v67 + v78 - v79 * 0.5;
            v84[5] = v65 + v80 - v81 * 0.5;
            v85 = v193;
            v84[6] = v194;
            v84[7] = v85;
          }
          else
          {
            v66 = 0.5;
            v67 = sinval;
          }
          v68 = v188 + v67;
          v65 = v187 + v65;
          v26 = v199;
          v69 = v200;
          v235.origin.x = v200;
          v70 = v202;
          v235.origin.y = v202;
          v25 = v206;
          v235.size.width = v206;
          v235.size.height = v199;
          v71 = CGRectGetMidX(v235);
          sinval = v68;
          v72 = v68 + v71;
          v236.origin.x = v69;
          v236.origin.y = v70;
          v236.size.width = v25;
          v236.size.height = v26;
          v62 = v72 - CGRectGetWidth(v236) * v66;
          v237.origin.x = v69;
          v237.origin.y = v70;
          v237.size.width = v25;
          v237.size.height = v26;
          v73 = v65 + CGRectGetMidY(v237);
          v238.origin.x = v69;
          v238.origin.y = v70;
          v238.size.width = v25;
          v238.size.height = v26;
          v63 = v73 - CGRectGetHeight(v238) * v66;
          v239.origin.x = v62;
          v239.origin.y = v63;
          v239.size.width = v25;
          v239.size.height = v26;
          v303.origin.x = v203;
          v303.origin.y = MinX;
          v303.size.width = v205;
          v303.size.height = v201;
          v74 = CGRectIntersectsRect(v239, v303);
          v51 = cosval;
          v75 = v192;
        }
        while (v74);
      }
      else
      {
        v75 = v192;
      }
      v86 = v191 + v51;
      v87 = v190 + v75;
      v245.size.height = v199;
      v88 = v200;
      v245.origin.x = v200;
      v89 = v202;
      v245.origin.y = v202;
      v245.size.width = v25;
      v90 = v86 + CGRectGetMidX(v245);
      v246.origin.x = v88;
      v246.origin.y = v89;
      v246.size.width = v25;
      v246.size.height = v199;
      v91 = v90 - CGRectGetWidth(v246) * 0.5;
      v247.origin.x = v88;
      v247.origin.y = v89;
      v247.size.width = v25;
      v247.size.height = v199;
      v92 = v87 + CGRectGetMidY(v247);
      v248.origin.x = v88;
      v248.origin.y = v89;
      v26 = v199;
      v248.size.width = v25;
      v248.size.height = v199;
      v93 = v92 - CGRectGetHeight(v248) * 0.5;
      v249.origin.x = v91;
      v249.origin.y = v93;
      v249.size.width = v25;
      v249.size.height = v26;
      v305.origin.x = v203;
      v305.origin.y = MinX;
      v305.size.width = v205;
      v305.size.height = v201;
      if (CGRectIntersectsRect(v249, v305))
      {
        do
        {
          v255.origin.x = v91;
          v255.origin.y = v93;
          v255.size.width = v25;
          v255.size.height = v26;
          v307.origin.x = v196;
          v307.origin.y = v197;
          v307.size.width = v195;
          v307.size.height = v198;
          if (CGRectIntersectsRect(v255, v307))
          {
            v256.origin.x = 0.0;
            v256.origin.y = 0.0;
            v102 = v194;
            v256.size.width = v194;
            v103 = v193;
            v256.size.height = v193;
            v104 = CGRectGetMidX(v256);
            v257.origin.x = 0.0;
            v257.origin.y = 0.0;
            v257.size.width = v102;
            v257.size.height = v103;
            v105 = CGRectGetWidth(v257);
            v258.origin.x = 0.0;
            v258.origin.y = 0.0;
            v258.size.width = v102;
            v258.size.height = v103;
            sinval = CGRectGetMidY(v258);
            v259.origin.x = 0.0;
            v259.origin.y = 0.0;
            v259.size.width = v102;
            v259.size.height = v103;
            v106 = CGRectGetHeight(v259);
            if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
              v49 = sub_100095048(0, v49[2] + 1, 1, v49);
            v108 = v49[2];
            v107 = v49[3];
            if (v108 >= v107 >> 1)
              v49 = sub_100095048((_QWORD *)(v107 > 1), v108 + 1, 1, v49);
            v95 = 0.5;
            v109 = v87 + sinval - v106 * 0.5;
            v49[2] = v108 + 1;
            v110 = (double *)&v49[4 * v108];
            v110[4] = v86 + v104 - v105 * 0.5;
            v110[5] = v109;
            v111 = v193;
            v110[6] = v194;
            v110[7] = v111;
          }
          else
          {
            v95 = 0.5;
          }
          v86 = v191 + v86;
          v87 = v190 + v87;
          v96 = v200;
          v250.origin.x = v200;
          v97 = v202;
          v250.origin.y = v202;
          v250.size.width = v25;
          v98 = v199;
          v250.size.height = v199;
          v99 = v86 + CGRectGetMidX(v250);
          v251.origin.x = v96;
          v251.origin.y = v97;
          v251.size.width = v206;
          v251.size.height = v98;
          v91 = v99 - CGRectGetWidth(v251) * v95;
          v252.origin.x = v96;
          v252.origin.y = v97;
          v252.size.width = v206;
          v252.size.height = v98;
          v100 = v87 + CGRectGetMidY(v252);
          v253.origin.x = v96;
          v253.origin.y = v97;
          v26 = v98;
          v25 = v206;
          v253.size.width = v206;
          v253.size.height = v26;
          v93 = v100 - CGRectGetHeight(v253) * v95;
          v254.origin.x = v91;
          v254.origin.y = v93;
          v254.size.width = v25;
          v254.size.height = v26;
          v306.origin.x = v203;
          v306.origin.y = MinX;
          v306.size.width = v205;
          v306.size.height = v201;
          v101 = CGRectIntersectsRect(v254, v306);
          v94 = v192;
        }
        while (v101);
      }
      else
      {
        v94 = v192;
      }
      v51 = v185 + cosval;
      v55 = v184 + v94;
      v56 = v200;
      v225.origin.x = v200;
      v54 = v202;
      v225.origin.y = v202;
      v225.size.width = v25;
      v225.size.height = v26;
      v57 = v51 + CGRectGetMidX(v225);
      v226.origin.x = v56;
      v226.origin.y = v54;
      v226.size.width = v25;
      v226.size.height = v26;
      v50 = 0.5;
      sinval = v57 - CGRectGetWidth(v226) * 0.5;
      v227.origin.x = v56;
      v227.origin.y = v54;
      v227.size.width = v25;
      v227.size.height = v26;
      v58 = CGRectGetMidY(v227);
      v192 = v55;
      v59 = v55 + v58;
      v52 = v56;
      v228.origin.x = v56;
      v228.origin.y = v54;
      v228.size.width = v25;
      v228.size.height = v26;
      v229.origin.y = v59 - CGRectGetHeight(v228) * 0.5;
      v229.origin.x = sinval;
      v229.size.width = v25;
      v229.size.height = v26;
      v60 = v203;
      v301.origin.y = MinX;
      v301.origin.x = v203;
      v301.size.width = v205;
      v53 = v201;
      v301.size.height = v201;
    }
    while (CGRectIntersectsRect(v229, v301));
  }
  else
  {
    v49 = _swiftEmptyArrayStorage;
    v54 = v202;
    v60 = v203;
    v52 = v200;
  }
  v112 = __sincos_stret(v179 + -1.57079633);
  v185 = v112.__cosval * v178 - v181;
  v113 = MidX + v185;
  v184 = v112.__sinval * v178 - v180;
  v114 = v182 + v184;
  v115 = v52;
  v260.origin.x = v52;
  v260.origin.y = v54;
  v260.size.width = v25;
  v260.size.height = v26;
  v116 = v113 + CGRectGetMidX(v260);
  v261.origin.x = v115;
  v261.origin.y = v54;
  v261.size.width = v25;
  v261.size.height = v26;
  v192 = v116 - CGRectGetWidth(v261) * 0.5;
  v262.origin.x = v115;
  v262.origin.y = v54;
  v262.size.width = v25;
  v262.size.height = v26;
  v117 = v114 + CGRectGetMidY(v262);
  v263.origin.x = v115;
  v263.origin.y = v54;
  v263.size.width = v25;
  v263.size.height = v26;
  v264.origin.y = v117 - CGRectGetHeight(v263) * 0.5;
  v264.origin.x = v192;
  v264.size.width = v25;
  v264.size.height = v26;
  v308.origin.x = v60;
  v308.origin.y = MinX;
  v308.size.width = v205;
  v308.size.height = v201;
  if (CGRectIntersectsRect(v264, v308))
  {
    do
    {
      v270.origin.x = v115;
      v270.origin.y = v54;
      v270.size.width = v25;
      v270.size.height = v26;
      v122 = v113 + CGRectGetMidX(v270);
      v271.origin.x = v115;
      v271.origin.y = v54;
      v271.size.width = v25;
      v271.size.height = v26;
      v123 = v122 - CGRectGetWidth(v271) * 0.5;
      v272.origin.x = v115;
      v272.origin.y = v54;
      v272.size.width = v25;
      v272.size.height = v26;
      v124 = v114 + CGRectGetMidY(v272);
      v273.origin.x = v115;
      v273.origin.y = v54;
      v273.size.width = v25;
      v273.size.height = v26;
      v125 = v124 - CGRectGetHeight(v273) * 0.5;
      v274.origin.x = v123;
      v274.origin.y = v125;
      v274.size.width = v25;
      v274.size.height = v26;
      v310.origin.x = v203;
      v310.origin.y = MinX;
      v310.size.width = v205;
      v310.size.height = v201;
      v126 = CGRectIntersectsRect(v274, v310);
      sinval = v113;
      cosval = v114;
      if (v126)
      {
        v192 = v113;
        do
        {
          v280.origin.x = v123;
          v280.origin.y = v125;
          v280.size.width = v25;
          v280.size.height = v26;
          v312.origin.x = v196;
          v312.origin.y = v197;
          v312.size.width = v195;
          v312.size.height = v198;
          if (CGRectIntersectsRect(v280, v312))
          {
            v281.origin.x = 0.0;
            v281.origin.y = 0.0;
            v135 = v194;
            v281.size.width = v194;
            v136 = v193;
            v281.size.height = v193;
            v137 = CGRectGetMidX(v281);
            v282.origin.x = 0.0;
            v282.origin.y = 0.0;
            v282.size.width = v135;
            v282.size.height = v136;
            v138 = CGRectGetWidth(v282);
            v283.origin.x = 0.0;
            v283.origin.y = 0.0;
            v283.size.width = v135;
            v283.size.height = v136;
            v139 = CGRectGetMidY(v283);
            v284.origin.x = 0.0;
            v284.origin.y = 0.0;
            v284.size.width = v135;
            v284.size.height = v136;
            v140 = CGRectGetHeight(v284);
            if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
              v49 = sub_100095048(0, v49[2] + 1, 1, v49);
            v142 = v49[2];
            v141 = v49[3];
            v143 = 0.5;
            v128 = v192;
            if (v142 >= v141 >> 1)
            {
              v148 = sub_100095048((_QWORD *)(v141 > 1), v142 + 1, 1, v49);
              v143 = 0.5;
              v49 = v148;
            }
            v144 = v128 + v137 - v138 * v143;
            v145 = v114 + v139;
            v127 = 0.5;
            v49[2] = v142 + 1;
            v146 = (double *)&v49[4 * v142];
            v146[4] = v144;
            v146[5] = v145 - v140 * 0.5;
            v147 = v193;
            v146[6] = v194;
            v146[7] = v147;
          }
          else
          {
            v127 = 0.5;
            v128 = v192;
          }
          v129 = v188 + v128;
          v114 = v187 + v114;
          v26 = v199;
          v130 = v200;
          v275.origin.x = v200;
          v131 = v202;
          v275.origin.y = v202;
          v25 = v206;
          v275.size.width = v206;
          v275.size.height = v199;
          v132 = CGRectGetMidX(v275);
          v192 = v129;
          v133 = v129 + v132;
          v276.origin.x = v130;
          v276.origin.y = v131;
          v276.size.width = v25;
          v276.size.height = v26;
          v123 = v133 - CGRectGetWidth(v276) * v127;
          v277.origin.x = v130;
          v277.origin.y = v131;
          v277.size.width = v25;
          v277.size.height = v26;
          v134 = v114 + CGRectGetMidY(v277);
          v278.origin.x = v130;
          v278.origin.y = v131;
          v278.size.width = v25;
          v278.size.height = v26;
          v125 = v134 - CGRectGetHeight(v278) * v127;
          v279.origin.x = v123;
          v279.origin.y = v125;
          v279.size.width = v25;
          v279.size.height = v26;
          v311.origin.x = v203;
          v311.origin.y = MinX;
          v311.size.width = v205;
          v311.size.height = v201;
        }
        while (CGRectIntersectsRect(v279, v311));
      }
      v149 = v191 + sinval;
      v150 = v190 + cosval;
      v151 = v200;
      v285.origin.x = v200;
      v285.origin.y = v202;
      v285.size.width = v25;
      v285.size.height = v26;
      v152 = v149 + CGRectGetMidX(v285);
      v286.origin.x = v151;
      v286.origin.y = v202;
      v286.size.width = v25;
      v286.size.height = v26;
      v153 = v152 - CGRectGetWidth(v286) * 0.5;
      v287.origin.x = v151;
      v287.origin.y = v202;
      v287.size.width = v25;
      v287.size.height = v26;
      v154 = v150 + CGRectGetMidY(v287);
      v288.origin.x = v151;
      v54 = v202;
      v288.origin.y = v202;
      v288.size.width = v25;
      v288.size.height = v26;
      v155 = v154 - CGRectGetHeight(v288) * 0.5;
      v289.origin.x = v153;
      v289.origin.y = v155;
      v289.size.width = v25;
      v289.size.height = v26;
      v313.origin.x = v203;
      v313.origin.y = MinX;
      v313.size.width = v205;
      v313.size.height = v201;
      if (CGRectIntersectsRect(v289, v313))
      {
        v192 = v149;
        do
        {
          v295.origin.x = v153;
          v295.origin.y = v155;
          v295.size.width = v25;
          v295.size.height = v26;
          v315.origin.x = v196;
          v315.origin.y = v197;
          v315.size.width = v195;
          v315.size.height = v198;
          if (CGRectIntersectsRect(v295, v315))
          {
            v296.origin.x = 0.0;
            v296.origin.y = 0.0;
            v163 = v194;
            v296.size.width = v194;
            v164 = v193;
            v296.size.height = v193;
            v165 = CGRectGetMidX(v296);
            v297.origin.x = 0.0;
            v297.origin.y = 0.0;
            v297.size.width = v163;
            v297.size.height = v164;
            v166 = CGRectGetWidth(v297);
            v298.origin.x = 0.0;
            v298.origin.y = 0.0;
            v298.size.width = v163;
            v298.size.height = v164;
            v167 = CGRectGetMidY(v298);
            v299.origin.x = 0.0;
            v299.origin.y = 0.0;
            v299.size.width = v163;
            v299.size.height = v164;
            v168 = CGRectGetHeight(v299);
            if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
              v49 = sub_100095048(0, v49[2] + 1, 1, v49);
            v170 = v49[2];
            v169 = v49[3];
            v171 = 0.5;
            v157 = v192;
            if (v170 >= v169 >> 1)
            {
              v176 = sub_100095048((_QWORD *)(v169 > 1), v170 + 1, 1, v49);
              v171 = 0.5;
              v49 = v176;
            }
            v172 = v157 + v165 - v166 * v171;
            v173 = v150 + v167;
            v156 = 0.5;
            v49[2] = v170 + 1;
            v174 = (double *)&v49[4 * v170];
            v174[4] = v172;
            v174[5] = v173 - v168 * 0.5;
            v175 = v193;
            v174[6] = v194;
            v174[7] = v175;
          }
          else
          {
            v156 = 0.5;
            v157 = v192;
          }
          v158 = v191 + v157;
          v150 = v190 + v150;
          v26 = v199;
          v159 = v200;
          v290.origin.x = v200;
          v54 = v202;
          v290.origin.y = v202;
          v25 = v206;
          v290.size.width = v206;
          v290.size.height = v199;
          v160 = CGRectGetMidX(v290);
          v192 = v158;
          v161 = v158 + v160;
          v291.origin.x = v159;
          v291.origin.y = v54;
          v291.size.width = v25;
          v291.size.height = v26;
          v153 = v161 - CGRectGetWidth(v291) * v156;
          v292.origin.x = v159;
          v292.origin.y = v54;
          v292.size.width = v25;
          v292.size.height = v26;
          v162 = v150 + CGRectGetMidY(v292);
          v293.origin.x = v159;
          v293.origin.y = v54;
          v293.size.width = v25;
          v293.size.height = v26;
          v155 = v162 - CGRectGetHeight(v293) * v156;
          v294.origin.x = v153;
          v294.origin.y = v155;
          v294.size.width = v25;
          v294.size.height = v26;
          v314.origin.x = v203;
          v314.origin.y = MinX;
          v314.size.width = v205;
          v314.size.height = v201;
        }
        while (CGRectIntersectsRect(v294, v314));
      }
      v113 = v185 + sinval;
      v114 = v184 + cosval;
      v115 = v200;
      v265.origin.x = v200;
      v265.origin.y = v54;
      v265.size.width = v25;
      v265.size.height = v26;
      v119 = v113 + CGRectGetMidX(v265);
      v266.origin.x = v115;
      v266.origin.y = v54;
      v266.size.width = v25;
      v266.size.height = v26;
      v120 = v119 - CGRectGetWidth(v266) * 0.5;
      v267.origin.x = v115;
      v267.origin.y = v54;
      v267.size.width = v25;
      v267.size.height = v26;
      v121 = v114 + CGRectGetMidY(v267);
      v268.origin.x = v115;
      v268.origin.y = v54;
      v268.size.width = v25;
      v268.size.height = v26;
      v269.origin.y = v121 - CGRectGetHeight(v268) * 0.5;
      v269.origin.x = v120;
      v269.size.width = v25;
      v269.size.height = v26;
      v309.origin.x = v203;
      v309.origin.y = MinX;
      v309.size.width = v205;
      v309.size.height = v201;
    }
    while (CGRectIntersectsRect(v269, v309));
  }
  return v49;
}

void sub_1000EAF30()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews] = _swiftEmptyArrayStorage;
  v1 = OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics;
  if (qword_100826C48 != -1)
    swift_once(&qword_100826C48, sub_1000E86C8);
  v2 = &v0[v1];
  sub_1000EB198((uint64_t)&xmmword_10088A3A0, (uint64_t)&v5);
  v3 = v6;
  *((_QWORD *)v2 + 5) = &type metadata for CGFloat;
  *((_QWORD *)v2 + 6) = &protocol witness table for CGFloat;
  *((_QWORD *)v2 + 2) = v3;
  v4 = v9;
  *(_OWORD *)v2 = v5;
  *(_OWORD *)(v2 + 56) = v7;
  *(_OWORD *)(v2 + 72) = v8;
  v2[88] = v4;
  sub_1000EB1CC((uint64_t)&v5);
  sub_1000EB198((uint64_t)&xmmword_10088A3A0, (uint64_t)&v0[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config]);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/IconArtworkGridView.swift", 34, 2, 104, 0);
  __break(1u);
}

double sub_1000EB044(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _BYTE v9[72];
  double v10;
  char v11;
  uint64_t v12;

  v3 = v1 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics, &v8, 0, 0);
  sub_1000EB0F4(v3, (uint64_t)v9);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews);
  swift_bridgeObjectRetain(v4);
  v6 = sub_100275BAC(v5);
  swift_bridgeObjectRelease(v4);
  v12 = v6;
  if (!v11)
    a1 = v10;
  sub_1000EB130((uint64_t)v9);
  return a1;
}

uint64_t sub_1000EB0F4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for IconArtworkGridLayout.Metrics(a2, a1);
  return a2;
}

uint64_t sub_1000EB130(uint64_t a1)
{
  destroy for IconArtworkGridLayout(a1);
  return a1;
}

uint64_t sub_1000EB164(uint64_t a1)
{
  destroy for IconArtworkGridLayout.Metrics(a1);
  return a1;
}

uint64_t sub_1000EB198(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for IconArtworkGridView.Config(a2, a1);
  return a2;
}

uint64_t sub_1000EB1CC(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_weakDestroy(a1 + 48);
  return a1;
}

__n128 sub_1000EB1FC(uint64_t a1)
{
  __n128 *v1;
  __n128 result;

  result = v1[2];
  *(__n128 *)(a1 + 56) = result;
  *(_BYTE *)(a1 + 72) = 0;
  return result;
}

unint64_t sub_1000EB20C()
{
  unint64_t result;

  result = qword_10082D160;
  if (!qword_10082D160)
  {
    result = swift_getWitnessTable(&unk_100663B2C, &type metadata for IconArtworkGridView.Config);
    atomic_store(result, (unint64_t *)&qword_10082D160);
  }
  return result;
}

uint64_t sub_1000EB250(uint64_t a1, uint64_t a2)
{
  assignWithTake for IconArtworkGridView.Config(a2, a1);
  return a2;
}

uint64_t sub_1000EB284(uint64_t a1, uint64_t a2)
{
  assignWithTake for IconArtworkGridLayout.Metrics(a2, a1);
  return a2;
}

uint64_t sub_1000EB2C0(uint64_t a1, uint64_t a2)
{
  assignWithCopy for IconArtworkGridLayout.Metrics(a2, a1);
  return a2;
}

uint64_t sub_1000EB2FC()
{
  return sub_100005C94(&qword_10082D168, type metadata accessor for MixedMediaLockupCollectionViewCell, (uint64_t)&unk_100663B54);
}

double sub_1000EB328()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v7;

  v0 = type metadata accessor for ShelfLayoutContext(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter(v2);
  v5 = sub_1000EB3CC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

double sub_1000EB3CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  void *v31;
  double v32;
  __n128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v0 = type metadata accessor for PageGrid(0);
  v38 = *(_QWORD *)(v0 - 8);
  v39 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10007B804(&qword_10082D170);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MixedMediaLockupLayout.Metrics(0);
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Shelf.PresentationHints(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v35 - v16;
  v18 = ShelfLayoutContext.shelfPresentationHints.getter(v15);
  static Shelf.PresentationHints.showSupplementaryText.getter(v18);
  v19 = sub_100005C94((unint64_t *)&unk_10082B190, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
  v20 = dispatch thunk of SetAlgebra.isSuperset(of:)(v13, v10, v19);
  v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v13, v10);
  v22 = ((uint64_t (*)(char *, uint64_t))v21)(v17, v10);
  v23 = (void *)ShelfLayoutContext.traitEnvironment.getter(v22);
  v24 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 1, 1, v24);
  sub_10011499C(v23, v20 & 1, (uint64_t)v5, (uint64_t)v9);
  swift_unknownObjectRelease(v23);
  v25 = sub_1000EB650((uint64_t)v5);
  v26 = ShelfLayoutContext.contentPageGrid.getter(v25);
  v27 = PageGrid.componentMeasuringSize(spanning:)(v26);
  v29 = v28;
  v30 = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v2, v39);
  v31 = (void *)ShelfLayoutContext.traitEnvironment.getter(v30);
  v32 = sub_10022EA6C((uint64_t)v9, v31, v27, v29);
  v33 = swift_unknownObjectRelease(v31);
  (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v9, v37, v33);
  return v32;
}

uint64_t sub_1000EB650(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10007B804(&qword_10082D170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000EB690(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for PageFacets.Facet.Option(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageFacets.Facet(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PageFacetsViewController.Item(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F1420(v2, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v15 = &v14[*(int *)(sub_10007B804(&qword_10082D1F8) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v15, v4);
    Hasher._combine(_:)(1uLL);
    v16 = sub_100005C94(&qword_10082D2B0, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet, (uint64_t)&protocol conformance descriptor for PageFacets.Facet);
    dispatch thunk of Hashable.hash(into:)(a1, v8, v16);
    v17 = sub_100005C94(&qword_10082D2B8, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v17);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    Hasher._combine(_:)(0);
    v18 = sub_100005C94(&qword_10082D2B0, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet, (uint64_t)&protocol conformance descriptor for PageFacets.Facet);
    dispatch thunk of Hashable.hash(into:)(a1, v8, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

Swift::Int sub_1000EB8B8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1000EB690((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1000EB8F8(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1000EB690((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1000EB934(uint64_t a1, int a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  id v44;
  uint64_t v45;
  Class isa;
  id v47;
  Swift::String v48;
  Swift::String v49;
  void *object;
  NSString v51;
  uint64_t result;
  _BYTE v53[12];
  int v54;
  objc_class *ObjectType;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  _QWORD v59[3];
  objc_super v60;
  _BYTE v61[24];
  UIAction_optional v62;
  UIMenu_optional v63;

  v54 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = sub_10007B804(&qword_10083D9A0);
  __chkstk_darwin(v6);
  v8 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for MetricsPipeline(0);
  v56 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v57 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_10007B804((uint64_t *)&unk_100837EA0);
  __chkstk_darwin(v11);
  v13 = &v53[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = &v3[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14, 0);
  v15 = (uint64_t)&v3[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets];
  v16 = type metadata accessor for PageFacets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = &v3[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions];
  v18 = v3;
  *(_QWORD *)v17 = sub_10054F65C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v18[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_actionRunner] = 0;
  v19 = &v18[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  v20 = OBJC_IVAR____TtC8AppStore24PageFacetsViewController_facetsPresenter;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_facetsPresenter] = a1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_objectGraph] = a3;
  swift_retain(a1);
  v58 = a3;
  v21 = swift_retain(a3);
  PageFacetsPresenter.pageFacets.getter(v21);
  swift_beginAccess(v15, v61, 33, 0);
  sub_1000F1C40((uint64_t)v13, v15);
  swift_endAccess(v61);
  v22 = *(_QWORD *)&v18[v20];
  v23 = swift_retain(v22);
  v24 = PageFacetsPresenter.selectedFacetOptions.getter(v23);
  swift_release(v22);
  swift_beginAccess(v17, v61, 1, 0);
  v25 = *(_QWORD *)v17;
  *(_QWORD *)v17 = v24;
  v26 = v54;
  swift_bridgeObjectRelease(v25);
  v18[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_showDoneButton] = v26;

  v27 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
  v60.receiver = v18;
  v60.super_class = ObjectType;
  v28 = (char *)objc_msgSendSuper2(&v60, "initWithCollectionViewLayout:", v27);

  v29 = *(_QWORD *)&v28[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_objectGraph];
  v30 = type metadata accessor for PageFacetMetricsActionRunner(0);
  v31 = swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  swift_unknownObjectUnownedInit(v31 + qword_100848598, v28, v32);
  v33 = type metadata accessor for SearchGhostHintMetricsTracker(0);
  v34 = v28;
  swift_retain(v29);
  swift_retain(v31);
  BaseObjectGraph.optional<A>(_:)(v59, v33, v33);
  *(_QWORD *)(v31 + qword_1008485A8) = v59[0];
  v35 = v29 + qword_10088FDB8;
  swift_beginAccess(v29 + qword_10088FDB8, v59, 0, 0);
  v36 = v35;
  v37 = v56;
  sub_100005B48(v36, (uint64_t)v8, &qword_10083D9A0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v8, 1, v9) == 1)
  {
    sub_1000057AC((uint64_t)v8, &qword_10083D9A0);
    result = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v9, v9);
    __break(1u);
  }
  else
  {
    v38 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 32);
    v39 = v57;
    v38(v57, v8, v9);
    v38((_BYTE *)(v31 + qword_1008485A0), v39, v9);
    swift_release(v31);
    v41 = ActionRunner.init()(v40);
    swift_release(v29);
    v42 = *(_QWORD *)&v34[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_actionRunner];
    *(_QWORD *)&v34[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_actionRunner] = v41;
    *(_QWORD *)&v43 = swift_release(v42).n128_u64[0];
    if ((v26 & 1) != 0)
    {
      v44 = objc_msgSend(v34, "navigationItem", v43);
      sub_100008FE4(0, (unint64_t *)&qword_10083E600, UIBarButtonItem_ptr);
      sub_100008FE4(0, (unint64_t *)&qword_100844710, UIAction_ptr);
      v45 = swift_allocObject(&unk_100759CA8, 24, 7);
      swift_unknownObjectWeakInit(v45 + 16, v34);
      v62.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1000F1CAC, v45);
      v62.is_nil = 0;
      isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v62, v63).super.super.isa;
      objc_msgSend(v44, "setRightBarButtonItem:", isa);

    }
    v47 = objc_msgSend(v34, "navigationItem", v43);
    v48._object = (void *)0x80000001006AB760;
    v48._countAndFlagsBits = 0xD000000000000019;
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    object = localizedString(_:comment:)(v48, v49)._object;
    v51 = String._bridgeToObjectiveC()();
    objc_msgSend(v47, "setTitle:", v51, swift_bridgeObjectRelease(object).n128_f64[0]);

    swift_release(a1);
    swift_release(v58);
    return (uint64_t)v34;
  }
  return result;
}

void sub_1000EBE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_delegate;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_delegate);
    if (v6)
    {
      v8 = v6;
      v9 = *(_QWORD *)(v5 + 8);
      ObjectType = swift_getObjectType(v6, v7);
      (*(void (**)(void *, uint64_t, uint64_t))(v9 + 8))(v4, ObjectType, v9);

      swift_unknownObjectRelease(v8);
    }
    else
    {

    }
  }
}

void sub_1000EBF54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  _BYTE v21[24];

  v2 = v1;
  v4 = type metadata accessor for PageFacets(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_10007B804((uint64_t *)&unk_100837EA0);
  __chkstk_darwin(v8);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_10007B804(&qword_10082D340);
  __chkstk_darwin(v11);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = v2 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets, v21, 0, 0);
  v15 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_100005B48(v14, (uint64_t)v13, (uint64_t *)&unk_100837EA0);
  sub_100005B48(a1, v15, (uint64_t *)&unk_100837EA0);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v13, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
    {
      sub_1000057AC((uint64_t)v13, (uint64_t *)&unk_100837EA0);
      return;
    }
  }
  else
  {
    sub_100005B48((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_100837EA0);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_100005C94(&qword_10082D348, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets, (uint64_t)&protocol conformance descriptor for PageFacets);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v17);
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_1000057AC((uint64_t)v13, (uint64_t *)&unk_100837EA0);
      if ((v18 & 1) != 0)
        return;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_1000057AC((uint64_t)v13, &qword_10082D340);
LABEL_8:
  sub_1000EC1AC();
}

void sub_1000EC1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  Swift::OpaquePointer v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  __n128 v53;
  uint64_t (*v54)(char *, unint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  char *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char v105[8];

  v0 = sub_10007B804(&qword_10082D2F8);
  __chkstk_darwin(v0);
  v86 = (char *)&v75 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for PageFacetsViewController.Item(0);
  v103 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v101 = (uint64_t)&v75 - v6;
  v7 = type metadata accessor for PageFacets.Facet(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v102 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PageFacets.FacetGroup(0, v9);
  v91 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v89 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804((uint64_t *)&unk_100837EA0);
  __chkstk_darwin(v13);
  v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PageFacets(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v79 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_10007B804(&qword_10082D300);
  v78 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100005C94(&qword_10082D308, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.FacetGroup, (uint64_t)&protocol conformance descriptor for PageFacets.FacetGroup);
  v22 = sub_100005C94(&qword_10082D310, type metadata accessor for PageFacetsViewController.Item, (uint64_t)&unk_100663D10);
  v92 = v20;
  v90 = v11;
  v23 = v11;
  v104 = v2;
  v24 = v87;
  NSDiffableDataSourceSnapshot.init()(v23, v2, v21, v22);
  v25 = v24 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets;
  swift_beginAccess(v24 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets, v105, 0, 0);
  sub_100005B48(v25, (uint64_t)v15, (uint64_t *)&unk_100837EA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000057AC((uint64_t)v15, (uint64_t *)&unk_100837EA0);
    v26 = *(void **)(v24 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource);
    if (v26)
    {
      v27 = v26;
      v28 = v92;
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v92, 1, 0, 0);

LABEL_33:
      (*(void (**)(char *, uint64_t))(v78 + 8))(v28, v93);
      return;
    }
    goto LABEL_36;
  }
  v77 = v17;
  v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v79, v15, v16);
  v30 = PageFacets.facetGroups.getter(v29);
  v85 = *(_QWORD *)(v30 + 16);
  if (v85)
  {
    v76 = v16;
    v31 = 0;
    v32 = *(unsigned __int8 *)(v91 + 80);
    v84 = (v32 + 32) & ~v32;
    v83 = v30 + v84;
    v82 = v32 | 7;
    v81 = xmmword_100661A30;
    v33 = v102;
    v94 = v8;
    v95 = v4;
    v80 = v30;
    while (v31 < *(_QWORD *)(v30 + 16))
    {
      v39 = v90;
      v40 = *(_QWORD *)(v91 + 72);
      v88 = v31;
      v41 = v83 + v40 * v31;
      v42 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 16);
      v43 = v89;
      v42(v89, v41, v90);
      v44 = sub_10007B804(&qword_10082D318);
      v45 = v84;
      v46._rawValue = (void *)swift_allocObject(v44, v40 + v84, v82);
      *((_OWORD *)v46._rawValue + 1) = v81;
      v42((char *)v46._rawValue + v45, (uint64_t)v43, v39);
      NSDiffableDataSourceSnapshot.appendSections(_:)(v46);
      v47 = swift_bridgeObjectRelease(v46._rawValue);
      v48 = PageFacets.FacetGroup.facets.getter(v47);
      v49 = v48;
      v50 = *(_QWORD *)(v48 + 16);
      if (v50)
      {
        v51 = 0;
        v100 = v48 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v52 = _swiftEmptyArrayStorage;
        v96 = v50;
        v97 = v48;
        while (v51 < *(_QWORD *)(v49 + 16))
        {
          v54 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v8 + 16);
          v55 = v54(v33, v100 + *(_QWORD *)(v8 + 72) * v51, v7);
          if ((PageFacets.Facet.displayOptionsInline.getter(v55) & 1) != 0)
          {
            v56 = PageFacets.Facet.options.getter();
            v57 = *(_QWORD *)(v56 + 16);
            if (v57)
            {
              v99 = v51;
              v58 = v7;
              v59 = v56;
              v60 = type metadata accessor for PageFacets.Facet.Option(0);
              v61 = *(_QWORD *)(v60 - 8);
              v62 = *(unsigned __int8 *)(v61 + 80);
              v98 = v59;
              v63 = v59 + ((v62 + 32) & ~v62);
              v64 = *(_QWORD *)(v61 + 72);
              v65 = v101;
              do
              {
                v66 = v65 + *(int *)(sub_10007B804(&qword_10082D1F8) + 48);
                v54((char *)v65, (unint64_t)v102, v58);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v66, v63, v60);
                swift_storeEnumTagMultiPayload(v65, v104, 1);
                if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
                  v52 = (_QWORD *)sub_100096044(0, v52[2] + 1, 1, (unint64_t)v52);
                v68 = v52[2];
                v67 = v52[3];
                if (v68 >= v67 >> 1)
                  v52 = (_QWORD *)sub_100096044(v67 > 1, v68 + 1, 1, (unint64_t)v52);
                v52[2] = v68 + 1;
                v69 = (uint64_t)v52
                    + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))
                    + *(_QWORD *)(v103 + 72) * v68;
                v65 = v101;
                sub_1000F23A4(v101, v69);
                v63 += v64;
                --v57;
              }
              while (v57);
              v53 = swift_bridgeObjectRelease(v98);
              v7 = v58;
              v8 = v94;
              v4 = v95;
              v33 = v102;
              v50 = v96;
              v49 = v97;
              v51 = v99;
            }
            else
            {
              v53 = swift_bridgeObjectRelease(v56);
            }
          }
          else
          {
            v54(v4, (unint64_t)v33, v7);
            swift_storeEnumTagMultiPayload(v4, v104, 0);
            if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
              v52 = (_QWORD *)sub_100096044(0, v52[2] + 1, 1, (unint64_t)v52);
            v71 = v52[2];
            v70 = v52[3];
            if (v71 >= v70 >> 1)
              v52 = (_QWORD *)sub_100096044(v70 > 1, v71 + 1, 1, (unint64_t)v52);
            v52[2] = v71 + 1;
            sub_1000F23A4((uint64_t)v4, (uint64_t)v52+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(_QWORD *)(v103 + 72) * v71);
          }
          ++v51;
          (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v33, v7, v53);
          if (v51 == v50)
          {
            v34 = swift_bridgeObjectRelease(v49);
            goto LABEL_7;
          }
        }
        __break(1u);
        break;
      }
      v34 = swift_bridgeObjectRelease(v48);
      v52 = _swiftEmptyArrayStorage;
LABEL_7:
      v35 = v88 + 1;
      v36 = v90;
      v37 = v91;
      v38 = (uint64_t)v86;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v91 + 56))(v86, 1, 1, v90, v34);
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v52, v38, v93);
      v31 = v35;
      swift_bridgeObjectRelease(v52);
      sub_1000057AC(v38, &qword_10082D2F8);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v89, v36);
      v24 = v87;
      v30 = v80;
      if (v35 == v85)
      {
        swift_bridgeObjectRelease(v80);
        v16 = v76;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  swift_bridgeObjectRelease(v30);
LABEL_31:
  v72 = *(void **)(v24 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource);
  v73 = v79;
  if (v72)
  {
    v74 = v72;
    v28 = v92;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v92, 1, 0, 0);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v73, v16);
    goto LABEL_33;
  }
LABEL_37:
  __break(1u);
}

void sub_1000EC9A4(__n128 a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  Swift::OpaquePointer v23;
  void *rawValue;
  __n128 v25;
  void *v26;
  id v27;
  double *v28;
  double v29;
  double v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;

  v2 = v1;
  v3 = type metadata accessor for PageFacets.FacetGroup(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10007B804(&qword_10082D300);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource;
  v12 = *(void **)&v1[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource];
  if (!v12)
    goto LABEL_12;
  v13 = v12;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  v14 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v7);
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease(v14);
    v26 = *(void **)&v2[v11];
    if (v26)
      goto LABEL_6;
    goto LABEL_11;
  }
  v34 = v11;
  v35 = v2;
  v36 = v8;
  v16 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v33 = v14;
  v17 = v14 + v16;
  v18 = *(_QWORD *)(v4 + 72);
  v19 = v10;
  v20 = v7;
  v21 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
  do
  {
    v21(v6, v17, v3);
    v22 = v4;
    v23._rawValue = (void *)NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(v6, v20);
    NSDiffableDataSourceSnapshot.reloadItems(_:)(v23);
    rawValue = v23._rawValue;
    v4 = v22;
    v25 = swift_bridgeObjectRelease(rawValue);
    (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v6, v3, v25);
    v17 += v18;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease(v33);
  v2 = v35;
  v8 = v36;
  v7 = v20;
  v10 = v19;
  v26 = *(void **)&v35[v34];
  if (!v26)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_6:
  v27 = v26;
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v10, 1, 0, 0);

  v28 = (double *)&v2[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset];
  if ((v2[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset + 16] & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return;
  }
  v30 = *v28;
  v29 = v28[1];
  v31 = objc_msgSend(v2, "collectionView");
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, "setContentOffset:", v30, v29);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *v28 = 0.0;
    v28[1] = 0.0;
    *((_BYTE *)v28 + 16) = 1;
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1000ECBF4()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;
  objc_super v19;

  v19.receiver = v0;
  v19.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v19, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "systemBackgroundColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v0, "collectionView");
  if (!v5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = v5;
  v7 = objc_msgSend(v3, "systemBackgroundColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = sub_1000ECE0C();
  v9 = *(void **)&v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource] = v8;

  v10 = objc_msgSend(v0, "collectionView");
  if (v10)
  {
    v11 = v10;
    v12 = swift_allocObject(&unk_100759CA8, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v0);
    v13 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
    v17[4] = sub_1000F24C0;
    v18 = v12;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_10004AF98;
    v17[3] = &unk_100759D10;
    v14 = _Block_copy(v17);
    v15 = objc_msgSend(v13, "initWithSectionProvider:", v14, swift_retain(v12).n128_f64[0]);
    _Block_release(v14);
    v16 = v18;
    swift_release(v12);
    objc_msgSend(v11, "setCollectionViewLayout:", v15, swift_release(v16).n128_f64[0]);

    sub_1000ED10C();
    sub_1000EC1AC();
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1000ECE0C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id result;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v1 = v0;
  v41 = sub_10007B804(&qword_10082D350);
  v2 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v37 = v3;
  v38 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - v5;
  v39 = sub_10007B804(&qword_10082D358);
  v7 = *(_QWORD *)(v39 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v39);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - v11;
  v13 = swift_allocObject(&unk_100759CA8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  v14 = sub_100008FE4(0, &qword_10082D360, UICollectionViewListCell_ptr);
  v15 = type metadata accessor for PageFacetsViewController.Item(0);
  UICollectionView.CellRegistration.init(handler:)(sub_1000F25C0, v13, v14, v15);
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v18 = v17;
  v19 = swift_allocObject(&unk_100759CA8, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v1);
  v20 = sub_100008FE4(0, (unint64_t *)&qword_1008338F0, UICollectionViewCell_ptr);
  v40 = v6;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v16, v18, sub_1000F25C8, v19, v20);
  result = objc_msgSend(v1, "collectionView");
  if (result)
  {
    v22 = result;
    v23 = v39;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v39);
    v24 = *(unsigned __int8 *)(v7 + 80);
    v25 = (v24 + 16) & ~v24;
    v26 = swift_allocObject(&unk_100759DE8, v25 + v8, v24 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v26 + v25, v9, v23);
    v27 = objc_allocWithZone((Class)sub_10007B804(&qword_10082D368));
    v28 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v22, sub_1000F25DC, v26);
    v29 = v38;
    v30 = v40;
    v31 = v41;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v38, v40, v41);
    v32 = *(unsigned __int8 *)(v2 + 80);
    v33 = (v32 + 16) & ~v32;
    v34 = swift_allocObject(&unk_100759E10, v33 + v37, v32 | 7);
    v35.n128_f64[0] = (*(double (**)(uint64_t, char *, uint64_t))(v2 + 32))(v34 + v33, v29, v31);
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_1000F269C, v34, v35);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v23);
    return (id)v28;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000ED10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void (*v17)(char *, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __n128 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  void *v39;

  ObjectType = swift_getObjectType();
  v1 = sub_10007B804(&qword_10082D320);
  v35 = *(_QWORD *)(v1 - 8);
  v36 = v1;
  __chkstk_darwin(v1);
  v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10007B804((uint64_t *)&unk_10083F480);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = v3;
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_facetsPresenter);
  v9 = PageFacetsPresenter.onFacetStateDidChange.getter(v6);
  v10 = sub_100008FE4(0, (unint64_t *)&qword_10082D0A0, OS_dispatch_queue_ptr);
  v11 = static OS_dispatch_queue.main.getter(v10);
  v38 = v10;
  v39 = &protocol witness table for OS_dispatch_queue;
  v37[0] = v11;
  v12 = sub_10007B804((uint64_t *)&unk_100837E90);
  v31 = v12;
  v13 = sub_10002A538((unint64_t *)&unk_10083F490, (uint64_t *)&unk_100837E90, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
  v14 = v12;
  v15 = ObjectType;
  EventEmitter.addObserver<A>(on:target:method:)(v37, v0, sub_1000EF510, 0, v14, ObjectType, v13);
  v16 = swift_release(v9);
  v17 = *(void (**)(char *, uint64_t, __n128))(v4 + 8);
  v17(v8, v5, v16);
  v18 = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v37);
  v19 = PageFacetsPresenter.onSelectedFacetOptionsChanged.getter(v18);
  v20 = static OS_dispatch_queue.main.getter(v19);
  v38 = v10;
  v39 = &protocol witness table for OS_dispatch_queue;
  v37[0] = v20;
  EventEmitter.addObserver<A>(on:target:method:)(v37, v0, sub_1000EF564, 0, v31, v15, v13);
  v21 = swift_release(v19);
  v17(v8, v5, v21);
  v22 = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v37);
  v23 = PageFacetsPresenter.onPerformPageFacetsChangeAction.getter(v22);
  v24 = static OS_dispatch_queue.main.getter(v23);
  v38 = v10;
  v39 = &protocol witness table for OS_dispatch_queue;
  v37[0] = v24;
  v25 = sub_10007B804(&qword_10082D328);
  v26 = sub_10002A538((unint64_t *)&unk_10083F4A0, &qword_10082D328, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  v27 = v34;
  EventEmitter.addObserver<A>(on:target:method:)(v37, v0, sub_1000EF74C, 0, v25, v15, v26);
  v28 = swift_release(v23);
  (*(void (**)(char *, uint64_t, __n128))(v35 + 8))(v27, v36, v28);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v37);
}

void sub_1000ED3F0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t Strong;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  NSString v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  Class isa;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71[24];

  v69 = a2;
  v66 = a1;
  v4 = sub_10007B804(&qword_10082D300);
  v64 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageFacets.FacetGroup(0, v5);
  v62 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  __chkstk_darwin(v8);
  v60 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v61 = (char *)&v60 - v12;
  v13 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode(0, v11);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for UICollectionLayoutListConfiguration(0, v20);
  v67 = *(_QWORD *)(v23 - 8);
  v68 = v23;
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v19 + 104))(v22, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v18, v24);
  UICollectionLayoutListConfiguration.init(appearance:)(v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v17, enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:), v13);
  UICollectionLayoutListConfiguration.headerMode.setter(v17);
  sub_100008FE4(0, (unint64_t *)&qword_10083F710, NSCollectionLayoutSection_ptr);
  v27 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v26, v69);
  swift_beginAccess(a3 + 16, v71, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3 + 16);
  if (!Strong)
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v67 + 8))(v26, v68);
    return;
  }
  v29 = (void *)Strong;
  v30 = *(void **)(Strong + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource);
  v31 = v30;

  if (v30)
  {
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    v32 = v65;
    v33 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v65);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v32);
    if ((v66 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(v33 + 16) > v66)
    {
      v35 = v62;
      v34 = v63;
      v36 = v60;
      (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v60, v33+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v62 + 72) * v66, v63);
      v37 = swift_bridgeObjectRelease(v33);
      v38 = v61;
      v39 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v35 + 32))(v61, v36, v34, v37);
      v40 = PageFacets.FacetGroup.title.getter(v39);
      if (v41)
      {
        v42 = v40;
        v43 = v41;
        swift_bridgeObjectRelease(v41);
        v44 = HIBYTE(v43) & 0xF;
        if ((v43 & 0x2000000000000000) == 0)
          v44 = v42 & 0xFFFFFFFFFFFFLL;
        if (v44)
        {
          v45 = (void *)objc_opt_self(NSCollectionLayoutDimension);
          v46 = objc_msgSend(v45, "fractionalWidthDimension:", 1.0);
          v47 = objc_msgSend(v45, "estimatedDimension:", 44.0);
          v48 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v46, v47);

          static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
          v50 = v49;
          v51 = v26;
          v52 = v48;
          v53 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v50);
          v54 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v52, v53, 1);

          v55 = sub_10007B804((uint64_t *)&unk_10082B4A0);
          v56 = swift_allocObject(v55, 40, 7);
          *(_OWORD *)(v56 + 16) = xmmword_100661700;
          *(_QWORD *)(v56 + 32) = v54;
          v70 = v56;
          specialized Array._endMutation()(v56);
          v57 = v70;
          sub_100008FE4(0, &qword_10082C530, NSCollectionLayoutBoundarySupplementaryItem_ptr);
          v58 = v54;
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v27, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v57).n128_f64[0]);

          v26 = v51;
        }
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v34);
      goto LABEL_11;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1000ED8C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  __n128 v9;
  void *v10;
  _BYTE v11[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v10 = (void *)Strong;
    sub_1000ED938(a1, v9, a2, a3);

  }
}

uint64_t sub_1000ED938(void *a1, __n128 a2, uint64_t a3, uint64_t a4)
{
  __n128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  char *v56;
  int EnumCaseMultiPayload;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t (*v63)(char *, char *, uint64_t);
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  char v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  NSString v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  __n128 v108;
  void (*v109)(char *, uint64_t, __n128);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  __n128 v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  _BOOL8 v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  void (*v140)(char *, _QWORD, uint64_t);
  char *v141;
  unint64_t v142;
  unint64_t v143;
  __n128 v144;
  char *v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  void *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t (**v155)();
  uint64_t v156;
  id v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  Swift::String v161;
  void *object;
  unint64_t v163;
  NSString v164;
  uint64_t v165;
  void (*v166)(uint64_t, uint64_t);
  __n128 v167;
  uint64_t v168;
  uint64_t v169;
  __n128 v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __n128 v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  NSString v196;
  _QWORD *v197;
  char *v199;
  char *v200;
  char *v201;
  unint64_t v202;
  unint64_t v203;
  __n128 v204;
  uint64_t v205;
  char v206;
  __n128 v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t (*v237)(char *, char *, uint64_t);
  uint64_t v238;
  uint64_t v239;
  void *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  unint64_t v252;
  uint64_t v253;
  void *v254;

  v245 = (char *)a4;
  v240 = a1;
  v219 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0, a2);
  v218 = *(_QWORD *)(v219 - 8);
  v4 = __chkstk_darwin(v219);
  v217 = (char *)&v210 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = type metadata accessor for UICellAccessory.Placement(0, v4);
  v224 = *(_QWORD *)(v225 - 8);
  v6 = __chkstk_darwin(v225);
  v220 = (char *)&v210 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0, v6);
  v227 = *(_QWORD *)(v228 - 8);
  v8 = __chkstk_darwin(v228);
  v226 = (char *)&v210 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = type metadata accessor for PageFacets.Facet.DisplayType(0, v8);
  v233 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v212 = (char *)&v210 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v213 = (char *)&v210 - v12;
  __chkstk_darwin(v13);
  v222 = (char *)&v210 - v14;
  __chkstk_darwin(v15);
  v223 = (char *)&v210 - v16;
  __chkstk_darwin(v17);
  v243 = (char *)&v210 - v18;
  __chkstk_darwin(v19);
  v232 = (char *)&v210 - v20;
  v21 = sub_10007B804(&qword_10082D2D8);
  v22 = __chkstk_darwin(v21);
  v234 = (char *)&v210 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = type metadata accessor for UICellAccessory.CheckmarkOptions(0, v22);
  v215 = *(_QWORD *)(v216 - 8);
  v24 = __chkstk_darwin(v216);
  v214 = (char *)&v210 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v236 = type metadata accessor for UICellAccessory.DisplayedState(0, v24);
  v235 = *(_QWORD *)(v236 - 8);
  __chkstk_darwin(v236);
  v229 = (char *)&v210 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v237 = (uint64_t (*)(char *, char *, uint64_t))type metadata accessor for PageFacets.Facet.Option(0);
  v231 = (char *)*((_QWORD *)v237 - 1);
  __chkstk_darwin(v237);
  v230 = (char *)&v210 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for PageFacets.Facet(0);
  v247 = *(_QWORD *)(v28 - 8);
  v248 = v28;
  v29 = *(_QWORD *)(v247 + 64);
  __chkstk_darwin(v28);
  v221 = (char *)&v210 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v210 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v210 - v34;
  __chkstk_darwin(v36);
  v38 = (char *)&v210 - v37;
  __chkstk_darwin(v39);
  v244 = (char *)&v210 - v40;
  v41 = type metadata accessor for PageFacetsViewController.Item(0);
  __chkstk_darwin(v41);
  v43 = (char *)&v210 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v210 - v45;
  v48 = __chkstk_darwin(v47);
  v50 = (char *)&v210 - v49;
  v239 = type metadata accessor for UIListContentConfiguration(0, v48);
  v241 = *(_QWORD *)(v239 - 8);
  __chkstk_darwin(v239);
  v52 = (char *)&v210 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __chkstk_darwin(v53);
  v56 = (char *)&v210 - v55;
  static UIListContentConfiguration.cell()(v54);
  sub_1000F1420((uint64_t)v245, (uint64_t)v50);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v50, v41);
  v242 = v50;
  if (EnumCaseMultiPayload != 1)
  {
    v244 = v35;
    v216 = (uint64_t)v52;
    v231 = v32;
    v245 = v56;
    sub_1000F1420((uint64_t)v50, (uint64_t)v43);
    v237 = *(uint64_t (**)(char *, char *, uint64_t))(v247 + 16);
    v85 = v237(v38, v43, v248);
    v86 = v232;
    PageFacets.Facet.displayType.getter(v85);
    v87 = v233;
    v88 = v246;
    v215 = *(_QWORD *)(v233 + 104);
    ((void (*)(char *, _QWORD, uint64_t))v215)(v243, enum case for PageFacets.Facet.DisplayType.toggle(_:), v246);
    v89 = sub_100005C94(&qword_10082D2E8, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v251, v88, v89);
    v230 = (char *)v89;
    dispatch thunk of RawRepresentable.rawValue.getter(&v249, v88, v89);
    v90 = v252;
    v91 = v250;
    v92 = v86;
    v211 = v43;
    if (v251 == v249 && v252 == v250)
    {
      v93 = v38;
      v94 = 1;
      v91 = v252;
    }
    else
    {
      v93 = v38;
      v94 = _stringCompareWithSmolCheck(_:_:expecting:)(v251, v252, v249, v250, 0);
    }
    v105 = v246;
    v107 = v243;
    v106 = v244;
    swift_bridgeObjectRelease(v90);
    v108 = swift_bridgeObjectRelease(v91);
    v109 = *(void (**)(char *, uint64_t, __n128))(v87 + 8);
    v109(v107, v105, v108);
    v110 = ((uint64_t (*)(char *, uint64_t))v109)(v92, v105);
    if ((v94 & 1) != 0)
    {
      v111 = (uint64_t)v93;
      v112 = PageFacets.Facet.title.getter(v110);
      UIListContentConfiguration.text.setter(v112, v113, v114);
      sub_100008FE4(0, (unint64_t *)&qword_100844710, UIAction_ptr);
      v115 = swift_allocObject(&unk_100759CA8, 24, 7);
      v116 = v238;
      v117 = swift_unknownObjectWeakInit(v115 + 16, v238);
      v118 = v106;
      v119 = v248;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v237)(v106, v111, v248, v117);
      v120 = v247;
      v121 = *(unsigned __int8 *)(v247 + 80);
      v122 = (v121 + 24) & ~v121;
      v123 = swift_allocObject(&unk_100759E38, v122 + v29, v121 | 7);
      *(_QWORD *)(v123 + 16) = v115;
      (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v123 + v122, v118, v119);
      v124 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1000F2784, v123);
      v125 = objc_msgSend(objc_allocWithZone((Class)UISwitch), "initWithFrame:primaryAction:", v124, 0.0, 0.0, 0.0, 0.0);

      v126 = (uint64_t *)(v116 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions);
      swift_beginAccess(v116 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions, &v251, 32, 0);
      v127 = *v126;
      v128 = *(_QWORD *)(v127 + 16);
      v210 = v111;
      if (v128 && (v129 = sub_1003478A4(v111), (v130 & 1) != 0))
      {
        v131 = *(_QWORD *)(*(_QWORD *)(v127 + 56) + 8 * v129);
        swift_endAccess(&v251);
        v132 = *(_QWORD *)(v131 + 16) != 0;
      }
      else
      {
        swift_endAccess(&v251);
        v132 = 0;
      }
      v96 = v239;
      v149 = v240;
      v97 = v241;
      v104 = (uint64_t)v242;
      v150 = v234;
      v151 = v220;
      objc_msgSend(v125, "setOn:", v132, v210);
      v152 = sub_10007B804(&qword_10082D2F0);
      v153 = type metadata accessor for UICellAccessory(0);
      v154 = swift_allocObject(v152, ((*(unsigned __int8 *)(*(_QWORD *)(v153 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v153 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v153 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v153 - 8) + 80) | 7);
      *(_OWORD *)(v154 + 16) = xmmword_100661A30;
      v155 = (uint64_t (**)())&v151[*(int *)(sub_10007B804(&qword_10082D370) + 48)];
      (*(void (**)(char *, _QWORD, uint64_t))(v235 + 104))(v151, enum case for UICellAccessory.DisplayedState.always(_:), v236);
      *v155 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v155[1] = 0;
      (*(void (**)(char *, _QWORD, uint64_t))(v224 + 104))(v151, enum case for UICellAccessory.Placement.trailing(_:), v225);
      v156 = type metadata accessor for UICellAccessory.LayoutDimension(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 56))(v150, 1, 1, v156);
      v157 = v125;
      v158 = v226;
      UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
      static UICellAccessory.customView(configuration:)(v158);
      (*(void (**)(char *, uint64_t))(v227 + 8))(v158, v228);
      v159 = UICollectionViewListCell.accessories.setter(v154);
      v251 = 0x2D7465636166;
      v252 = 0xE600000000000000;
      v160 = v210;
      v161._countAndFlagsBits = PageFacets.Facet.id.getter(v159);
      object = v161._object;
      String.append(_:)(v161);
      swift_bridgeObjectRelease(object);
      v163 = v252;
      v164 = String._bridgeToObjectiveC()();
      objc_msgSend(v149, "setAccessibilityIdentifier:", v164, swift_bridgeObjectRelease(v163).n128_f64[0]);

      v165 = v248;
      v166 = *(void (**)(uint64_t, uint64_t))(v247 + 8);
      v166(v160, v248);
      v166((uint64_t)v211, v165);
      goto LABEL_30;
    }
    v133 = v247;
    v134 = v248;
    v135 = *(char **)(v247 + 8);
    ((void (*)(char *, uint64_t))v135)(v93, v248);
    v136 = (uint64_t)v231;
    v137 = (*(uint64_t (**)(char *, char *, uint64_t))(v133 + 32))(v231, v211, v134);
    v138 = v223;
    PageFacets.Facet.displayType.getter(v137);
    v139 = v222;
    v140 = (void (*)(char *, _QWORD, uint64_t))v215;
    ((void (*)(char *, _QWORD, uint64_t))v215)(v222, enum case for PageFacets.Facet.DisplayType.singleSelection(_:), v105);
    v141 = v230;
    dispatch thunk of RawRepresentable.rawValue.getter(&v251, v105, v230);
    dispatch thunk of RawRepresentable.rawValue.getter(&v249, v105, v141);
    v142 = v252;
    v143 = v250;
    v244 = v135;
    if (v251 == v249 && v252 == v250)
    {
      v144 = swift_bridgeObjectRelease_n(v252, 2);
      v109(v139, v105, v144);
      ((void (*)(char *, uint64_t))v109)(v138, v105);
      v145 = v221;
      v237(v221, (char *)v136, v134);
      v146 = v134;
      v96 = v239;
      v147 = v240;
    }
    else
    {
      LODWORD(v247) = _stringCompareWithSmolCheck(_:_:expecting:)(v251, v252, v249, v250, 0);
      swift_bridgeObjectRelease(v142);
      v167 = swift_bridgeObjectRelease(v143);
      v109(v139, v105, v167);
      ((void (*)(char *, uint64_t))v109)(v138, v105);
      v145 = v221;
      v168 = v237(v221, (char *)v136, v134);
      v146 = v134;
      v169 = v105;
      v96 = v239;
      v147 = v240;
      v148 = v216;
      if ((v247 & 1) != 0)
        goto LABEL_26;
      v199 = v213;
      PageFacets.Facet.displayType.getter(v168);
      v200 = v212;
      v140(v212, enum case for PageFacets.Facet.DisplayType.multipleSelection(_:), v169);
      v201 = v230;
      dispatch thunk of RawRepresentable.rawValue.getter(&v251, v169, v230);
      dispatch thunk of RawRepresentable.rawValue.getter(&v249, v169, v201);
      v202 = v252;
      v203 = v250;
      if (v251 != v249 || v252 != v250)
      {
        v206 = _stringCompareWithSmolCheck(_:_:expecting:)(v251, v252, v249, v250, 0);
        swift_bridgeObjectRelease(v202);
        v207 = swift_bridgeObjectRelease(v203);
        v208 = v246;
        v109(v200, v246, v207);
        ((void (*)(char *, uint64_t))v109)(v199, v208);
        v209 = v244;
        ((void (*)(char *, uint64_t))v244)(v145, v248);
        v148 = v216;
        if ((v206 & 1) == 0)
        {
          ((void (*)(uint64_t, uint64_t))v209)(v136, v248);
          UICollectionViewListCell.accessories.setter(_swiftEmptyArrayStorage);
          v97 = v241;
          v104 = (uint64_t)v242;
LABEL_30:
          v56 = v245;
          goto LABEL_31;
        }
LABEL_27:
        static UIListContentConfiguration.valueCell()(v170);
        v97 = v241;
        v171 = (uint64_t)v245;
        (*(void (**)(char *, uint64_t))(v241 + 8))(v245, v96);
        v172 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 32))(v171, v148, v96);
        v173 = PageFacets.Facet.title.getter(v172);
        UIListContentConfiguration.text.setter(v173, v174, v175);
        v176 = (uint64_t *)(v238 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions);
        swift_beginAccess(v238 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions, &v249, 0, 0);
        v177 = *v176;
        swift_bridgeObjectRetain(v177);
        v178 = sub_1000EF018(v136, v177);
        v180 = v179;
        swift_bridgeObjectRelease(v177);
        UIListContentConfiguration.secondaryText.setter(v178, v180);
        v181 = sub_10007B804(&qword_10082D2F0);
        v182 = type metadata accessor for UICellAccessory(0);
        v183 = swift_allocObject(v181, ((*(unsigned __int8 *)(*(_QWORD *)(v182 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v182 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v182 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v182 - 8) + 80) | 7);
        *(_OWORD *)(v183 + 16) = xmmword_100661A30;
        v184 = v235;
        v185 = v229;
        v186 = v236;
        (*(void (**)(char *, _QWORD, uint64_t))(v235 + 104))(v229, enum case for UICellAccessory.DisplayedState.always(_:), v236);
        v187 = type metadata accessor for UICellAccessory.LayoutDimension(0);
        v188 = v234;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v187 - 8) + 56))(v234, 1, 1, v187);
        v189 = v217;
        UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v188, 0);
        static UICellAccessory.disclosureIndicator(displayed:options:)(v185, v189);
        (*(void (**)(char *, uint64_t))(v218 + 8))(v189, v219);
        v190 = v231;
        (*(void (**)(char *, uint64_t))(v184 + 8))(v185, v186);
        v191 = UICollectionViewListCell.accessories.setter(v183);
        v192 = PageFacets.Facet.metricsParameterName.getter(v191);
        v104 = (uint64_t)v242;
        if (v193)
        {
          v194 = v193;
          v251 = 0x2D7465636166;
          v252 = 0xE600000000000000;
          String.append(_:)(*(Swift::String *)&v192);
          swift_bridgeObjectRelease(v194);
          v195 = v252;
          v196 = String._bridgeToObjectiveC()();
          objc_msgSend(v147, "setAccessibilityIdentifier:", v196, swift_bridgeObjectRelease(v195).n128_f64[0]);

        }
        ((void (*)(char *, uint64_t))v244)(v190, v248);
        goto LABEL_30;
      }
      v204 = swift_bridgeObjectRelease_n(v252, 2);
      v205 = v246;
      v109(v200, v246, v204);
      ((void (*)(char *, uint64_t))v109)(v199, v205);
      v135 = v244;
      v146 = v248;
    }
    v148 = v216;
LABEL_26:
    v170.n128_f64[0] = ((double (*)(char *, uint64_t))v135)(v145, v146);
    goto LABEL_27;
  }
  sub_1000F1420((uint64_t)v50, (uint64_t)v46);
  v58 = &v46[*(int *)(sub_10007B804(&qword_10082D1F8) + 48)];
  v59 = v247;
  v60 = (uint64_t)v244;
  (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v244, v46, v248);
  v61 = v231;
  v62 = (uint64_t)v230;
  v63 = v237;
  v64.n128_f64[0] = (*((double (**)(char *, char *, uint64_t (*)(char *, char *, uint64_t)))v231 + 4))(v230, v58, v237);
  v65 = PageFacets.Facet.Option.title.getter(v64);
  UIListContentConfiguration.text.setter(v65, v66, v67);
  v68 = (uint64_t *)(v238 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions);
  swift_beginAccess(v238 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions, &v251, 32, 0);
  v69 = *v68;
  if (!*(_QWORD *)(*v68 + 16) || (v70 = sub_1003478A4(v60), (v71 & 1) == 0))
  {
    v74 = v62;
    swift_endAccess(&v251);
    goto LABEL_10;
  }
  v72 = *(_QWORD *)(*(_QWORD *)(v69 + 56) + 8 * v70);
  swift_endAccess(&v251);
  swift_bridgeObjectRetain(v72);
  v73 = sub_10026A7E0(v62, v72);
  swift_bridgeObjectRelease(v72);
  v74 = v62;
  if ((v73 & 1) == 0)
  {
LABEL_10:
    v77 = _swiftEmptyArrayStorage;
    goto LABEL_11;
  }
  v75 = sub_10007B804(&qword_10082D2F0);
  v76 = type metadata accessor for UICellAccessory(0);
  v77 = (_QWORD *)swift_allocObject(v75, ((*(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v76 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v76 - 8) + 80) | 7);
  *((_OWORD *)v77 + 1) = xmmword_100661A30;
  v78 = v235;
  v79 = v229;
  v80 = v236;
  (*(void (**)(char *, _QWORD, uint64_t))(v235 + 104))(v229, enum case for UICellAccessory.DisplayedState.always(_:), v236);
  v81 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  v82 = v234;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v234, 1, 1, v81);
  v83 = v214;
  UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v82, 0);
  static UICellAccessory.checkmark(displayed:options:)(v79, v83);
  (*(void (**)(char *, uint64_t))(v215 + 8))(v83, v216);
  v84 = v80;
  v63 = v237;
  v59 = v247;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v84);
LABEL_11:
  v96 = v239;
  v95 = v240;
  v97 = v241;
  v98 = UICollectionViewListCell.accessories.setter(v77);
  v99 = PageFacets.Facet.Option.metricsValue.getter(v98);
  if (v100)
  {
    v101 = v100;
    v251 = 0x2D7465636166;
    v252 = 0xE600000000000000;
    String.append(_:)(*(Swift::String *)&v99);
    swift_bridgeObjectRelease(v101);
    v102 = v252;
    v103 = String._bridgeToObjectiveC()();
    objc_msgSend(v95, "setAccessibilityIdentifier:", v103, swift_bridgeObjectRelease(v102).n128_f64[0]);

  }
  (*((void (**)(uint64_t, uint64_t (*)(char *, char *, uint64_t)))v61 + 1))(v74, v63);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v244, v248);
  v104 = (uint64_t)v242;
LABEL_31:
  sub_1000F1150(v104);
  v253 = v96;
  v254 = &protocol witness table for UIListContentConfiguration;
  v197 = sub_100024638(&v251);
  (*(void (**)(_QWORD *, char *, uint64_t))(v97 + 16))(v197, v56, v96);
  UICollectionViewCell.contentConfiguration.setter(&v251);
  return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v56, v96);
}

unint64_t sub_1000EEAEC(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t result;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  _BYTE v37[24];

  v34 = a1;
  v35 = a5;
  v7 = type metadata accessor for UIListContentConfiguration(0, a2);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10007B804(&qword_10082D300);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for PageFacets.FacetGroup(0, v13);
  v16 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a6 += 16;
  swift_beginAccess(a6, v37, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a6);
  if (result)
  {
    v20 = (void *)result;
    v32 = v8;
    v21 = *(void **)(result + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource);
    if (v21)
    {
      v22 = v21;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      v23 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v11);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      result = IndexPath.subscript.getter(0);
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(_QWORD *)(v23 + 16))
      {
        v24 = v33;
        (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, v23+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * result, v33);
        v25 = swift_bridgeObjectRelease(v23);
        v26 = static UIListContentConfiguration.groupedHeader()(v25);
        v27 = PageFacets.FacetGroup.title.getter(v26);
        UIListContentConfiguration.text.setter(v27, v28, v29);
        v36[3] = v7;
        v36[4] = &protocol witness table for UIListContentConfiguration;
        v30 = sub_100024638(v36);
        v31 = v32;
        (*(void (**)(_QWORD *, char *, uint64_t))(v32 + 16))(v30, v10, v7);
        UICollectionViewCell.contentConfiguration.setter(v36);

        (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v7);
        return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v24);
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EED1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = sub_10007B804(&qword_10082D2C8);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F1420(a3, (uint64_t)v9);
  v10 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v11 = sub_100008FE4(0, &qword_10082D360, UICollectionViewListCell_ptr);
  v12 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, v9, v11, v10);
  sub_1000057AC((uint64_t)v9, &qword_10082D2C8);
  return v12;
}

void sub_1000EEE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char v30[24];
  char v31[24];
  char v32[24];

  v5 = sub_10007B804(&qword_10082D2E0);
  __chkstk_darwin(v5);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = a2 + 16;
  swift_beginAccess(v8, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (char *)Strong;
    swift_beginAccess(v8, v31, 0, 0);
    v11 = (void *)swift_unknownObjectWeakLoadStrong(v8);
    v12 = v11;
    if (v11)
    {
      v13 = objc_msgSend(v11, "collectionView");

      if (!v13)
      {
        __break(1u);
        return;
      }
      objc_msgSend(v13, "contentOffset");
      v15 = v14;
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    v18 = &v10[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset];
    *(_QWORD *)v18 = v15;
    *((_QWORD *)v18 + 1) = v17;
    v18[16] = v12 == 0;

  }
  swift_beginAccess(v8, v30, 0, 0);
  v19 = swift_unknownObjectWeakLoadStrong(v8);
  if (v19)
  {
    v20 = (void *)v19;
    v21 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_facetsPresenter);
    swift_retain(v21);

    v23 = PageFacets.Facet.options.getter(v22);
    v24 = *(_QWORD *)(v23 + 16);
    v25 = type metadata accessor for PageFacets.Facet.Option(0);
    v26 = *(_QWORD *)(v25 - 8);
    if (v24)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v7, v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)), v25);
      v27 = 0;
    }
    else
    {
      v27 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v7, v27, 1, v25);
    v28 = swift_bridgeObjectRelease(v23);
    PageFacetsPresenter.didSelect(option:in:)(v7, a3, v28);
    swift_release(v21);
    sub_1000057AC((uint64_t)v7, &qword_10082D2E0);
  }
}

uint64_t sub_1000EF018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  _QWORD *v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  void *object;
  uint64_t v28;
  char *v29;
  int64_t v30;
  char *v31;
  double (*v32)(char *, char *, uint64_t);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  char *v47;
  double (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;

  v4 = type metadata accessor for PageFacets.Facet.Option(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  if ((PageFacets.Facet.showsSelectedOptions.getter(v6) & 1) != 0)
  {
    if (*(_QWORD *)(a2 + 16) && (v10 = sub_1003478A4(a1), (v11 & 1) != 0))
    {
      v12 = *(_QWORD **)(*(_QWORD *)(a2 + 56) + 8 * v10);
      v13 = v12[2];
      v14 = swift_bridgeObjectRetain(v12);
      v15 = PageFacets.Facet.options.getter(v14);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = swift_bridgeObjectRelease(v15);
      if (v13 == v16)
      {
        swift_bridgeObjectRelease(v12);
        v18._countAndFlagsBits = 0xD000000000000025;
        v18._object = (void *)0x80000001006AB7D0;
        v19._countAndFlagsBits = 0;
        v19._object = (void *)0xE000000000000000;
        return localizedString(_:comment:)(v18, v19)._countAndFlagsBits;
      }
      v28 = PageFacets.Facet.options.getter(v17);
      v29 = sub_1000F1CB4(v28, v12);
      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v12);
      v30 = *((_QWORD *)v29 + 2);
      if (v30)
      {
        v51 = _swiftEmptyArrayStorage;
        sub_1000FE7C0(0, v30, 0);
        v31 = &v29[(*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)];
        v49 = *(_QWORD *)(v5 + 72);
        v50 = v5;
        v32 = *(double (**)(char *, char *, uint64_t))(v5 + 16);
        v47 = v29;
        v48 = v32;
        do
        {
          v33.n128_f64[0] = v48(v8, v31, v4);
          v34 = PageFacets.Facet.Option.title.getter(v33);
          v36 = v35;
          (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
          v37 = v51;
          if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
          {
            sub_1000FE7C0(0, v37[2] + 1, 1);
            v37 = v51;
          }
          v39 = v37[2];
          v38 = v37[3];
          if (v39 >= v38 >> 1)
          {
            sub_1000FE7C0(v38 > 1, v39 + 1, 1);
            v37 = v51;
          }
          v37[2] = v39 + 1;
          v40 = &v37[2 * v39];
          v40[4] = v34;
          v40[5] = v36;
          v5 = v50;
          v31 += v49;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease(v47);
      }
      else
      {
        swift_bridgeObjectRelease(v29);
        v37 = _swiftEmptyArrayStorage;
      }
      v51 = v37;
      v41._object = (void *)0x80000001006AB7B0;
      v41._countAndFlagsBits = 0xD00000000000001DLL;
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      v43 = localizedString(_:comment:)(v41, v42);
      v44 = sub_10007B804((uint64_t *)&unk_10082D990);
      v45 = sub_10002A538((unint64_t *)&qword_100835480, (uint64_t *)&unk_10082D990, (uint64_t)&protocol conformance descriptor for [A]);
      v9 = BidirectionalCollection<>.joined(separator:)(v43._countAndFlagsBits, v43._object, v44, v45);
      swift_bridgeObjectRelease(v37);
      object = v43._object;
    }
    else
    {
      v20 = ((uint64_t (*)(void))PageFacets.Facet.options.getter)();
      __chkstk_darwin(v20);
      *(&v47 - 2) = (char *)a1;
      v21 = sub_1003F3CA8((void (*)(uint64_t *__return_ptr, uint64_t, __n128))sub_1000F27C4, (uint64_t)(&v47 - 4), v20);
      swift_bridgeObjectRelease(v20);
      if (!v21[2])
      {
        swift_bridgeObjectRelease(v21);
        return 0;
      }
      v51 = v21;
      v22._object = (void *)0x80000001006AB7B0;
      v22._countAndFlagsBits = 0xD00000000000001DLL;
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      v24 = localizedString(_:comment:)(v22, v23);
      v25 = sub_10007B804((uint64_t *)&unk_10082D990);
      v26 = sub_10002A538((unint64_t *)&qword_100835480, (uint64_t *)&unk_10082D990, (uint64_t)&protocol conformance descriptor for [A]);
      v9 = BidirectionalCollection<>.joined(separator:)(v24._countAndFlagsBits, v24._object, v25, v26);
      swift_bridgeObjectRelease(v21);
      object = v24._object;
    }
    swift_bridgeObjectRelease(object);
  }
  return v9;
}

uint64_t sub_1000EF3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = sub_10007B804((uint64_t *)&unk_100837EA0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __chkstk_darwin(v6);
  v9 = &v12[-v8];
  PageFacetsPresenter.FacetsState.facets.getter(v7);
  v10 = a2 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets, v13, 0, 0);
  sub_100005B48(v10, (uint64_t)v5, (uint64_t *)&unk_100837EA0);
  swift_beginAccess(v10, v12, 33, 0);
  sub_1000F2578((uint64_t)v9, v10);
  swift_endAccess(v12);
  sub_1000EBF54((uint64_t)v5);
  sub_1000057AC((uint64_t)v9, (uint64_t *)&unk_100837EA0);
  return sub_1000057AC((uint64_t)v5, (uint64_t *)&unk_100837EA0);
}

uint64_t (*sub_1000EF510(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100759DC0, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1000F2570;
}

double (*sub_1000EF564(void *a1))(uint64_t a1)
{
  id v2;

  *(_QWORD *)(swift_allocObject(&unk_100759D98, 24, 7) + 16) = a1;
  v2 = a1;
  return sub_1000F2520;
}

double sub_1000EF5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __n128 v8;
  double result;
  _BYTE v10[24];

  v3 = PageFacetsPresenter.FacetsState.selectedFacetOptions.getter();
  v4 = (uint64_t *)(a2 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions, v10, 1, 0);
  v5 = *v4;
  *v4 = v3;
  swift_bridgeObjectRetain(v3);
  sub_1000F14DC(v6, v5);
  LOBYTE(v4) = v7;
  v8 = swift_bridgeObjectRelease(v3);
  if ((v4 & 1) == 0)
    sub_1000EC9A4(v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

uint64_t sub_1000EF648(uint64_t a1, char *a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  _QWORD v14[4];

  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for ActionRunner.Origin(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = UIResponder.nearestActionRunner.getter();
  if (result)
  {
    v10 = result;
    v14[3] = ObjectType;
    v14[0] = a2;
    v11 = *(_QWORD *)&a2[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_objectGraph];
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ActionRunner.Origin.userInitiated(_:), v5);
    v12 = a2;
    dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(a1, v14, v8, v11);
    v13 = swift_release(v10);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v13);
    return sub_1000057AC((uint64_t)v14, (uint64_t *)&unk_10082B490);
  }
  return result;
}

uint64_t (*sub_1000EF74C(void *a1))(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = swift_allocObject(&unk_100759D48, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = swift_allocObject(&unk_100759D70, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1000F24C8;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = a1;
  return sub_1000F24F4;
}

void sub_1000EF7C4(void *a1, uint64_t a2)
{
  char *v2;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, _QWORD, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  __n128 v88;
  void (*v89)(char *, uint64_t, __n128);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, char *, uint64_t);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  __n128 v105;
  void (*v106)(uint64_t, uint64_t, __n128);
  uint64_t v107;
  int v108;
  char *v109;
  void (*v110)(char *, uint64_t, __n128);
  char *v111;
  void (*v112)(char *, char *, uint64_t);
  __n128 v113;
  void (*v114)(char *, uint64_t, __n128);
  uint64_t (*v115)(char *, char *, uint64_t);
  char *v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  char v121;
  __n128 v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  char v126;
  id v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  uint64_t v137;
  void (*v138)(char *, _QWORD, uint64_t);
  uint64_t v139;
  uint64_t v140;
  __n128 v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char v145;
  __n128 v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __n128 v153;
  uint64_t v154;
  Class isa;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  char v161;
  __n128 v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  void *v175;
  char *v176;
  __n128 v177;
  char *v178;
  void (*v179)(char *, uint64_t);
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  void *v189;
  uint64_t v190;
  id v191;
  __n128 v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  void (*v227)(uint64_t);
  void (*v228)(char *, uint64_t, __n128);
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  char *v236;
  id v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  void **aBlock;
  uint64_t v248;
  uint64_t (*v249)(uint64_t);
  void *v250;
  void (*v251)();
  uint64_t v252;
  void **v253;
  uint64_t v254;

  v237 = a1;
  v226 = type metadata accessor for DispatchWorkItemFlags(0);
  v225 = *(_QWORD *)(v226 - 8);
  v4 = __chkstk_darwin(v226);
  v224 = (char *)&v200 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = type metadata accessor for DispatchQoS(0, v4);
  v222 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v221 = (char *)&v200 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = type metadata accessor for IndexPath(0);
  v217 = *(_QWORD *)(v218 - 8);
  v7 = __chkstk_darwin(v218);
  v215 = v8;
  v216 = (char *)&v200 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = type metadata accessor for DispatchTime(0, v7);
  v214 = *(_QWORD *)(v220 - 8);
  __chkstk_darwin(v220);
  v213 = (char *)&v200 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v219 = (char *)&v200 - v11;
  v12 = sub_10007B804(&qword_10082D2D8);
  v13 = __chkstk_darwin(v12);
  v205 = (char *)&v200 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = type metadata accessor for UICellAccessory.CheckmarkOptions(0, v13);
  v206 = *(_QWORD *)(v207 - 8);
  v15 = __chkstk_darwin(v207);
  v204 = (char *)&v200 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = type metadata accessor for UICellAccessory.DisplayedState(0, v15);
  v202 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin(v203);
  v201 = (char *)&v200 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10007B804(&qword_10082D2E0);
  v19 = __chkstk_darwin(v18);
  v211 = (char *)&v200 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v245 = type metadata accessor for PageFacets.Facet.DisplayType(0, v19);
  v243 = *(_QWORD *)(v245 - 8);
  __chkstk_darwin(v245);
  v228 = (void (*)(char *, uint64_t, __n128))((char *)&v200 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  v227 = (void (*)(uint64_t))((char *)&v200 - v23);
  __chkstk_darwin(v24);
  v26 = (char *)&v200 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v200 - v28;
  __chkstk_darwin(v30);
  v209 = (char *)&v200 - v31;
  __chkstk_darwin(v32);
  v208 = (char *)&v200 - v33;
  __chkstk_darwin(v34);
  v234 = (char *)&v200 - v35;
  __chkstk_darwin(v36);
  v229 = (char *)&v200 - v37;
  __chkstk_darwin(v38);
  v40 = (char *)&v200 - v39;
  __chkstk_darwin(v41);
  v43 = (char *)&v200 - v42;
  v235 = type metadata accessor for PageFacets.Facet.Option(0);
  v238 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin(v235);
  v231 = (uint64_t)&v200 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v242 = (char *)&v200 - v46;
  v246 = type metadata accessor for PageFacets.Facet(0);
  v240 = *(_QWORD *)(v246 - 8);
  __chkstk_darwin(v246);
  v210 = (char *)&v200 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v233 = (char *)&v200 - v49;
  __chkstk_darwin(v50);
  v241 = (char *)&v200 - v51;
  __chkstk_darwin(v52);
  v230 = (char *)&v200 - v53;
  __chkstk_darwin(v54);
  v232 = (uint64_t)&v200 - v55;
  __chkstk_darwin(v56);
  v239 = (char *)&v200 - v57;
  v58 = sub_10007B804(&qword_10082D2C8);
  __chkstk_darwin(v58);
  v60 = (char *)&v200 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for PageFacetsViewController.Item(0);
  v62 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v64 = (char *)&v200 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v65);
  v244 = (uint64_t)&v200 - v66;
  v236 = v2;
  v67 = *(void **)&v2[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource];
  if (!v67)
  {
    __break(1u);
    return;
  }
  v68 = v67;
  v212 = a2;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a2);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61) == 1)
  {
    sub_1000057AC((uint64_t)v60, &qword_10082D2C8);
    return;
  }
  v69 = v244;
  sub_1000F23A4((uint64_t)v60, v244);
  sub_1000F1420(v69, (uint64_t)v64);
  if (swift_getEnumCaseMultiPayload(v64, v61) == 1)
  {
    v70 = &v64[*(int *)(sub_10007B804(&qword_10082D1F8) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v240 + 32))(v239, v64, v246);
    v71 = v235;
    v72 = (*(uint64_t (**)(char *, char *, uint64_t))(v238 + 32))(v242, v70, v235);
    PageFacets.Facet.displayType.getter(v72);
    v73 = *(char **)(v243 + 104);
    LODWORD(v210) = enum case for PageFacets.Facet.DisplayType.multipleSelection(_:);
    v74 = v245;
    ((void (*)(char *))v73)(v40);
    v75 = sub_100005C94(&qword_10082D2E8, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v74, v75);
    dispatch thunk of RawRepresentable.rawValue.getter(&v253, v74, v75);
    v76 = v248;
    v77 = v254;
    v233 = v73;
    if (aBlock == v253 && v248 == v254)
    {
      v78 = 1;
      v77 = v248;
    }
    else
    {
      v78 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v248, v253, v254, 0);
    }
    swift_bridgeObjectRelease(v76);
    v88 = swift_bridgeObjectRelease(v77);
    v89 = *(void (**)(char *, uint64_t, __n128))(v243 + 8);
    v90 = v245;
    v89(v40, v245, v88);
    v228 = v89;
    ((void (*)(char *, uint64_t))v89)(v43, v90);
    v91 = v240;
    v92 = v232;
    v93 = v239;
    v94 = v246;
    v227 = *(void (**)(uint64_t))(v240 + 16);
    v227(v232);
    v95 = v238;
    v96 = *(void (**)(uint64_t, char *, uint64_t))(v238 + 16);
    v97 = v231;
    v96(v231, v242, v71);
    if ((v78 & 1) == 0)
    {
      v98 = &v236[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions];
      swift_beginAccess(&v236[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions], &aBlock, 32, 0);
      v99 = *(_QWORD *)v98;
      if (*(_QWORD *)(v99 + 16))
      {
        v92 = v232;
        v100 = sub_1003478A4(v232);
        if ((v101 & 1) != 0)
        {
          v102 = *(_QWORD *)(*(_QWORD *)(v99 + 56) + 8 * v100);
          swift_endAccess(&aBlock);
          swift_bridgeObjectRetain(v102);
          v103 = v231;
          v104 = sub_10026A7E0(v231, v102);
          v105 = swift_bridgeObjectRelease(v102);
          v95 = v238;
          v106 = *(void (**)(uint64_t, uint64_t, __n128))(v238 + 8);
          v106(v103, v71, v105);
          v243 = *(_QWORD *)(v240 + 8);
          v107 = ((uint64_t (*)(uint64_t, uint64_t))v243)(v92, v246);
          v241 = (char *)v106;
          if ((v104 & 1) != 0)
          {
            v108 = 0;
            v109 = v93;
            v110 = v228;
            v111 = v229;
            v112 = (void (*)(char *, char *, uint64_t))v227;
LABEL_33:
            PageFacets.Facet.displayType.getter(v107);
            v137 = v245;
            v138 = (void (*)(char *, _QWORD, uint64_t))v233;
            ((void (*)(char *, _QWORD, uint64_t))v233)(v234, enum case for PageFacets.Facet.DisplayType.singleSelection(_:), v245);
            dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v137, v75);
            dispatch thunk of RawRepresentable.rawValue.getter(&v253, v137, v75);
            v139 = v248;
            v140 = v254;
            if (aBlock == v253 && v248 == v254)
            {
              v141 = swift_bridgeObjectRelease_n(v248, 2);
              v142 = v245;
              v110(v234, v245, v141);
              ((void (*)(char *, uint64_t))v110)(v111, v142);
              v143 = v230;
              v144 = v246;
              v112(v230, v109, v246);
            }
            else
            {
              v145 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v248, v253, v254, 0);
              swift_bridgeObjectRelease(v139);
              v146 = swift_bridgeObjectRelease(v140);
              v147 = v245;
              v110(v234, v245, v146);
              ((void (*)(char *, uint64_t))v110)(v111, v147);
              v143 = v230;
              v144 = v246;
              v148 = ((uint64_t (*)(char *, char *, uint64_t))v112)(v230, v109, v246);
              if ((v145 & 1) == 0)
              {
                v149 = v208;
                PageFacets.Facet.displayType.getter(v148);
                v138(v209, v210, v147);
                dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v147, v75);
                dispatch thunk of RawRepresentable.rawValue.getter(&v253, v147, v75);
                v150 = v248;
                v151 = v254;
                v152 = v147;
                if (aBlock != v253 || v248 != v254)
                {
                  v161 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v248, v253, v254, 0);
                  swift_bridgeObjectRelease(v150);
                  v162 = swift_bridgeObjectRelease(v151);
                  v110(v209, v152, v162);
                  ((void (*)(char *, uint64_t))v110)(v149, v152);
                  v163 = v246;
                  ((void (*)(char *, uint64_t))v243)(v230, v246);
                  if ((v161 & 1) == 0)
                  {
                    ((void (*)(char *, uint64_t))v241)(v242, v235);
                    v164 = v109;
                    v165 = v163;
LABEL_52:
                    ((void (*)(char *, uint64_t))v243)(v164, v165);
                    goto LABEL_53;
                  }
LABEL_41:
                  v154 = v212;
                  if (v108)
                  {
                    isa = IndexPath._bridgeToObjectiveC()().super.isa;
                    v156 = objc_msgSend(v237, "cellForItemAtIndexPath:", isa);

                    if (v156)
                    {
                      v157 = objc_opt_self(UICollectionViewListCell);
                      if (swift_dynamicCastObjCClass(v156, v157))
                      {
                        v158 = UICollectionViewListCell.accessories.getter();
                        v159 = *(_QWORD *)(v158 + 16);
                        swift_bridgeObjectRelease(v158);
                        if (v159)
                        {
                          v160 = _swiftEmptyArrayStorage;
                        }
                        else
                        {
                          v166 = sub_10007B804(&qword_10082D2F0);
                          v167 = type metadata accessor for UICellAccessory(0);
                          v160 = (_QWORD *)swift_allocObject(v166, ((*(unsigned __int8 *)(*(_QWORD *)(v167 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v167 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v167 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v167 - 8) + 80) | 7);
                          *((_OWORD *)v160 + 1) = xmmword_100661A30;
                          v168 = v202;
                          v169 = v201;
                          v170 = v203;
                          (*(void (**)(char *, _QWORD, uint64_t))(v202 + 104))(v201, enum case for UICellAccessory.DisplayedState.always(_:), v203);
                          v171 = type metadata accessor for UICellAccessory.LayoutDimension(0);
                          v172 = v205;
                          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v205, 1, 1, v171);
                          v173 = v204;
                          UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v172, 0);
                          static UICellAccessory.checkmark(displayed:options:)(v169, v173);
                          (*(void (**)(char *, uint64_t))(v206 + 8))(v173, v207);
                          (*(void (**)(char *, uint64_t))(v168 + 8))(v169, v170);
                        }
                        UICollectionViewListCell.accessories.setter(v160);
                      }

                    }
                  }
                  v174 = sub_100008FE4(0, (unint64_t *)&qword_10082D0A0, OS_dispatch_queue_ptr);
                  v175 = (void *)static OS_dispatch_queue.main.getter(v174);
                  v176 = v213;
                  static DispatchTime.now()(v177);
                  v178 = v219;
                  + infix(_:_:)(v176, 0.05);
                  v179 = *(void (**)(char *, uint64_t))(v214 + 8);
                  v180 = v220;
                  v179(v176, v220);
                  v181 = v217;
                  v182 = v216;
                  v183 = v154;
                  v184 = v218;
                  (*(void (**)(char *, uint64_t, uint64_t))(v217 + 16))(v216, v183, v218);
                  v185 = *(unsigned __int8 *)(v181 + 80);
                  v186 = (v185 + 24) & ~v185;
                  v187 = swift_allocObject(&unk_100759CD0, v186 + v215, v185 | 7);
                  v188 = v237;
                  *(_QWORD *)(v187 + 16) = v237;
                  (*(void (**)(uint64_t, char *, uint64_t))(v181 + 32))(v187 + v186, v182, v184);
                  v251 = sub_1000F245C;
                  v252 = v187;
                  aBlock = _NSConcreteStackBlock;
                  v248 = 1107296256;
                  v249 = sub_10000AB18;
                  v250 = &unk_100759CE8;
                  v189 = _Block_copy(&aBlock);
                  v190 = v252;
                  v191 = v188;
                  v192 = swift_release(v190);
                  v193 = v221;
                  static DispatchQoS.unspecified.getter(v192);
                  aBlock = (void **)_swiftEmptyArrayStorage;
                  v194 = sub_100005C94((unint64_t *)&qword_1008317D0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
                  v195 = sub_10007B804((uint64_t *)&unk_10082D0B0);
                  v196 = sub_10002A538((unint64_t *)&qword_1008317E0, (uint64_t *)&unk_10082D0B0, (uint64_t)&protocol conformance descriptor for [A]);
                  v197 = v224;
                  v198 = v195;
                  v199 = v226;
                  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v198, v196, v226, v194);
                  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v178, v193, v197, v189);
                  _Block_release(v189);

                  (*(void (**)(char *, uint64_t))(v225 + 8))(v197, v199);
                  (*(void (**)(char *, uint64_t))(v222 + 8))(v193, v223);
                  v179(v178, v180);
                  ((void (*)(char *, uint64_t))v241)(v242, v235);
                  v164 = v239;
                  v165 = v246;
                  goto LABEL_52;
                }
                v153 = swift_bridgeObjectRelease_n(v248, 2);
                v110(v209, v147, v153);
                ((void (*)(char *, uint64_t))v110)(v149, v147);
                v144 = v246;
                v143 = v230;
              }
            }
            ((void (*)(char *, uint64_t))v243)(v143, v144);
            goto LABEL_41;
          }
LABEL_32:
          v109 = v93;
          v111 = v229;
          v112 = (void (*)(char *, char *, uint64_t))v227;
          objc_msgSend(v237, "contentOffset");
          v132 = &v236[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset];
          *(_QWORD *)v132 = v133;
          *((_QWORD *)v132 + 1) = v134;
          v132[16] = 0;
          v135 = (uint64_t)v211;
          v96((uint64_t)v211, v242, v71);
          v108 = 1;
          v136.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v135, 0, 1, v71);
          PageFacetsPresenter.didSelect(option:in:)(v135, v93, v136);
          v107 = sub_1000057AC(v135, &qword_10082D2E0);
          v110 = v228;
          goto LABEL_33;
        }
        swift_endAccess(&aBlock);
        v94 = v246;
        v91 = v240;
        v95 = v238;
        v97 = v231;
      }
      else
      {
        swift_endAccess(&aBlock);
        v94 = v246;
        v91 = v240;
        v95 = v238;
        v97 = v231;
        v92 = v232;
      }
    }
    v241 = *(char **)(v95 + 8);
    ((void (*)(uint64_t, uint64_t))v241)(v97, v71);
    v243 = *(_QWORD *)(v91 + 8);
    ((void (*)(uint64_t, uint64_t))v243)(v92, v94);
    goto LABEL_32;
  }
  v79 = v240;
  v80 = v246;
  v81 = (*(uint64_t (**)(char *, char *, uint64_t))(v240 + 32))(v241, v64, v246);
  PageFacets.Facet.displayType.getter(v81);
  v82 = *(void (**)(char *, _QWORD, uint64_t))(v243 + 104);
  v83 = v245;
  v82(v26, enum case for PageFacets.Facet.DisplayType.singleSelection(_:), v245);
  v84 = sub_100005C94(&qword_10082D2E8, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v83, v84);
  dispatch thunk of RawRepresentable.rawValue.getter(&v253, v83, v84);
  v85 = v248;
  v86 = v254;
  if (aBlock == v253 && v248 == v254)
  {
    v87 = 1;
    v86 = v248;
  }
  else
  {
    v87 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v248, v253, v254, 0);
  }
  swift_bridgeObjectRelease(v85);
  v113 = swift_bridgeObjectRelease(v86);
  v114 = *(void (**)(char *, uint64_t, __n128))(v243 + 8);
  v114(v26, v83, v113);
  ((void (*)(char *, uint64_t))v114)(v29, v83);
  v115 = *(uint64_t (**)(char *, char *, uint64_t))(v79 + 16);
  v116 = v233;
  v117 = v115(v233, v241, v80);
  if ((v87 & 1) != 0)
  {
    v118 = *(void (**)(char *, uint64_t))(v79 + 8);
    v118(v116, v80);
LABEL_25:
    v123 = (uint64_t)v210;
    v115(v210, v241, v80);
    v124 = v236;
    v125 = *(_QWORD *)&v236[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_facetsPresenter];
    v126 = v236[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_showDoneButton];
    v127 = objc_allocWithZone((Class)type metadata accessor for PageFacetOptionsViewController(0));
    swift_retain(v125);
    v128 = (char *)sub_100630B5C(v123, v125, v126);
    swift_release(v125);
    v129 = &v128[OBJC_IVAR____TtC8AppStore30PageFacetOptionsViewController_delegate];
    *((_QWORD *)v129 + 1) = &off_100759C88;
    swift_unknownObjectWeakAssign(v129, v124);
    v130 = (char *)objc_msgSend(v124, "navigationController");
    if (v130)
    {
      v131 = v130;
      objc_msgSend(v130, "pushViewController:animated:", v128, 1);

      v128 = v131;
    }

    goto LABEL_28;
  }
  PageFacets.Facet.displayType.getter(v117);
  v82((char *)v228, enum case for PageFacets.Facet.DisplayType.multipleSelection(_:), v83);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v83, v84);
  dispatch thunk of RawRepresentable.rawValue.getter(&v253, v83, v84);
  v119 = v248;
  v120 = v254;
  if (aBlock == v253 && v248 == v254)
  {
    v121 = 1;
    v120 = v248;
  }
  else
  {
    v121 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v248, v253, v254, 0);
  }
  swift_bridgeObjectRelease(v119);
  v122 = swift_bridgeObjectRelease(v120);
  v114((char *)v228, v83, v122);
  ((void (*)(void (*)(uint64_t), uint64_t))v114)(v227, v83);
  v118 = *(void (**)(char *, uint64_t))(v79 + 8);
  v118(v233, v80);
  if ((v121 & 1) != 0)
    goto LABEL_25;
LABEL_28:
  v118(v241, v80);
LABEL_53:
  sub_1000F1150(v244);
}

uint64_t sub_1000F0D40()
{
  return type metadata accessor for PageFacetsViewController(0);
}

uint64_t type metadata accessor for PageFacetsViewController(uint64_t a1)
{
  return sub_10005C8A8(a1, (uint64_t *)&unk_10082D1E0, (uint64_t)&nominal type descriptor for PageFacetsViewController);
}

void sub_1000F0D5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_100663C80;
  sub_1000F0E10(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = &unk_100663C98;
    v4[6] = &unk_100663CB0;
    v4[7] = &unk_100663C98;
    v4[8] = &unk_100663CC8;
    swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
  }
}

void sub_1000F0E10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10082D1F0)
  {
    v2 = type metadata accessor for PageFacets(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10082D1F0);
  }
}

uint64_t *sub_1000F0E64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = type metadata accessor for PageFacets.Facet(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = *(int *)(sub_10007B804(&qword_10082D1F8) + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for PageFacets.Facet.Option(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      v13 = a1;
      v14 = a3;
      v15 = 1;
    }
    else
    {
      v13 = a1;
      v14 = a3;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1000F0F50(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  v4 = type metadata accessor for PageFacets.Facet(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = a1 + *(int *)(sub_10007B804(&qword_10082D1F8) + 48);
    v7 = type metadata accessor for PageFacets.Facet.Option(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return result;
}

uint64_t sub_1000F0FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for PageFacets.Facet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = *(int *)(sub_10007B804(&qword_10082D1F8) + 48);
    v9 = a1 + v8;
    v10 = a2 + v8;
    v11 = type metadata accessor for PageFacets.Facet.Option(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v12);
  return a1;
}

uint64_t sub_1000F1088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1000F1150(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for PageFacets.Facet(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(int *)(sub_10007B804(&qword_10082D1F8) + 48);
      v9 = a1 + v8;
      v10 = a2 + v8;
      v11 = type metadata accessor for PageFacets.Facet.Option(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = 1;
    }
    else
    {
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v12);
  }
  return a1;
}

uint64_t sub_1000F1150(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PageFacetsViewController.Item(uint64_t a1)
{
  return sub_10005C8A8(a1, qword_10082D270, (uint64_t)&nominal type descriptor for PageFacetsViewController.Item);
}

uint64_t sub_1000F11A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for PageFacets.Facet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = *(int *)(sub_10007B804(&qword_10082D1F8) + 48);
    v9 = a1 + v8;
    v10 = a2 + v8;
    v11 = type metadata accessor for PageFacets.Facet.Option(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v12);
  return a1;
}

uint64_t sub_1000F1258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1000F1150(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for PageFacets.Facet(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *(int *)(sub_10007B804(&qword_10082D1F8) + 48);
      v9 = a1 + v8;
      v10 = a2 + v8;
      v11 = type metadata accessor for PageFacets.Facet.Option(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      v12 = 1;
    }
    else
    {
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v12);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowDestination(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for FlowDestination(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1000F1338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_1000F1348(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _QWORD v7[2];

  result = type metadata accessor for PageFacets.Facet(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v7[0] = v4;
    result = type metadata accessor for PageFacets.Facet.Option(319);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v6, v4, *(_QWORD *)(result - 8) + 64);
      v7[1] = v6;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v7);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000F13E0()
{
  return sub_100005C94(&qword_10082D2A8, type metadata accessor for PageFacetsViewController.Item, (uint64_t)&unk_100663CE8);
}

uint64_t sub_1000F140C()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_actionRunner));
}

uint64_t sub_1000F1420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F1464@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  char v5;
  __n128 v6;
  uint64_t result;
  uint64_t v8;

  v4 = PageFacets.Facet.defaultOptions.getter();
  v5 = sub_10026A7E0(a1, v4);
  v6 = swift_bridgeObjectRelease(v4);
  if ((v5 & 1) != 0)
  {
    result = PageFacets.Facet.Option.title.getter(v6);
  }
  else
  {
    result = 0;
    v8 = 0;
  }
  *a2 = result;
  a2[1] = v8;
  return result;
}

void sub_1000F14DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  int64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int64_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;

  v4 = type metadata accessor for PageFacets.Facet(0);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  __chkstk_darwin(v4);
  v49 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10007B804(&qword_10082D330);
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  if (a1 == a2)
  {
    v51 = 1;
    return;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
LABEL_36:
    v51 = 0;
    return;
  }
  v47 = a1;
  v48 = (char *)&v44 - v10;
  v50 = 0;
  v12 = *(_QWORD *)(a1 + 64);
  v45 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v46 = (unint64_t)(v13 + 63) >> 6;
  v44 = v46 - 1;
  v16 = (uint64_t *)&unk_10082D338;
  v17 = v52;
  v18 = (uint64_t)v49;
  while (1)
  {
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v20 = (v15 - 1) & v15;
      v21 = v19 | (v50 << 6);
      v22 = (uint64_t)v48;
LABEL_8:
      v23 = v47;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v52 + 16))(v8, *(_QWORD *)(v47 + 48) + *(_QWORD *)(v52 + 72) * v21, v53, v11);
      v24 = *(_QWORD *)(v23 + 56);
      v25 = sub_10007B804(v16);
      v26 = *(_QWORD *)(v24 + 8 * v21);
      *(_QWORD *)&v8[*(int *)(v25 + 48)] = v26;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 0, 1, v25);
      swift_bridgeObjectRetain(v26);
      goto LABEL_30;
    }
    v27 = v50 + 1;
    v22 = (uint64_t)v48;
    if (__OFADD__(v50, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 < v46)
    {
      v28 = *(_QWORD *)(v45 + 8 * v27);
      if (v28)
        goto LABEL_12;
      v29 = v50 + 2;
      ++v50;
      if (v27 + 1 < v46)
      {
        v28 = *(_QWORD *)(v45 + 8 * v29);
        if (v28)
          goto LABEL_15;
        v50 = v27 + 1;
        if (v27 + 2 < v46)
        {
          v28 = *(_QWORD *)(v45 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          v50 = v27 + 2;
          if (v27 + 3 < v46)
          {
            v28 = *(_QWORD *)(v45 + 8 * (v27 + 3));
            if (v28)
            {
              v27 += 3;
              goto LABEL_12;
            }
            v29 = v27 + 4;
            v50 = v27 + 3;
            if (v27 + 4 < v46)
              break;
          }
        }
      }
    }
LABEL_29:
    v30 = sub_10007B804(v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v8, 1, 1, v30);
    v20 = 0;
LABEL_30:
    sub_1000F2528((uint64_t)v8, v22);
    v31 = sub_10007B804(v16);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v22, 1, v31);
    v51 = v32 == 1;
    if (v32 == 1)
      return;
    v33 = v20;
    v34 = v16;
    v35 = *(int *)(v31 + 48);
    v36 = v53;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v18, v22, v53);
    v37 = *(_QWORD *)(v22 + v35);
    v38 = sub_1003478A4(v18);
    LOBYTE(v35) = v39;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v36);
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRelease(v37);
      goto LABEL_36;
    }
    v40 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v38);
    swift_bridgeObjectRetain(v40);
    sub_1006307EC(v41, v37);
    v43 = v42;
    swift_bridgeObjectRelease(v37);
    v11 = swift_bridgeObjectRelease(v40);
    v16 = v34;
    v15 = v33;
    if ((v43 & 1) == 0)
      return;
  }
  v28 = *(_QWORD *)(v45 + 8 * v29);
  if (v28)
  {
LABEL_15:
    v27 = v29;
LABEL_12:
    v20 = (v28 - 1) & v28;
    v21 = __clz(__rbit64(v28)) + (v27 << 6);
    v50 = v27;
    goto LABEL_8;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v46)
    {
      v50 = v44;
      goto LABEL_29;
    }
    v28 = *(_QWORD *)(v45 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_1000F18C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char v37;
  void (*v38)(uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;

  v49 = (char *)a1;
  v50 = (char *)a2;
  v46 = type metadata accessor for PageFacets.Facet.Option(0);
  v2 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - v6;
  v8 = type metadata accessor for PageFacets.Facet(0);
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  v14 = type metadata accessor for PageFacetsViewController.Item(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - v18;
  v20 = sub_10007B804(&qword_10082D2C0);
  __chkstk_darwin(v20);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (uint64_t)&v22[*(int *)(v23 + 48)];
  sub_1000F1420((uint64_t)v49, (uint64_t)v22);
  sub_1000F1420((uint64_t)v50, v24);
  if (swift_getEnumCaseMultiPayload(v22, v14) != 1)
  {
    sub_1000F1420((uint64_t)v22, (uint64_t)v19);
    if (swift_getEnumCaseMultiPayload(v24, v14) != 1)
    {
      v42 = v47;
      v41 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v13, v24, v48);
      v37 = static PageFacets.Facet.== infix(_:_:)(v19, v13);
      v36 = *(void (**)(char *, uint64_t))(v42 + 8);
      v36(v13, v41);
      v39 = v19;
      v40 = v41;
      goto LABEL_10;
    }
    v16 = v19;
    goto LABEL_8;
  }
  v49 = v10;
  v50 = v4;
  v25 = v7;
  v26 = v2;
  v27 = v46;
  sub_1000F1420((uint64_t)v22, (uint64_t)v16);
  v28 = *(int *)(sub_10007B804(&qword_10082D1F8) + 48);
  v29 = &v16[v28];
  if (swift_getEnumCaseMultiPayload(v24, v14) != 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(&v16[v28], v27);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v48);
    sub_1000057AC((uint64_t)v22, &qword_10082D2C0);
LABEL_12:
    v37 = 0;
    return v37 & 1;
  }
  v45 = (char *)(v24 + v28);
  v30 = v47;
  v31 = v48;
  v32 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v49, v24, v48);
  v33 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v33(v25, v29, v27);
  v34 = (uint64_t)v50;
  v33(v50, v45, v27);
  v35 = v32;
  LOBYTE(v32) = static PageFacets.Facet.== infix(_:_:)(v16, v32);
  v36 = *(void (**)(char *, uint64_t))(v30 + 8);
  v36(v16, v31);
  if ((v32 & 1) == 0)
  {
    v43 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v43(v34, v27);
    v43((uint64_t)v25, v27);
    v36((char *)v35, v31);
    sub_1000F1150((uint64_t)v22);
    goto LABEL_12;
  }
  v37 = static PageFacets.Facet.Option.== infix(_:_:)(v25, v34);
  v38 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v38(v34, v27);
  v38((uint64_t)v25, v27);
  v39 = (char *)v35;
  v40 = v31;
LABEL_10:
  v36(v39, v40);
  sub_1000F1150((uint64_t)v22);
  return v37 & 1;
}

uint64_t sub_1000F1C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_100837EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F1C88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000F1CAC(uint64_t a1)
{
  uint64_t v1;

  sub_1000EBE94(a1, v1);
}

char *sub_1000F1CB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(char *, uint64_t, uint64_t, __n128);
  uint64_t v44;
  char *v45;

  v5 = type metadata accessor for PageFacets.Facet.Option(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v39 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v35 - v13;
  result = (char *)_swiftEmptyArrayStorage;
  v45 = (char *)_swiftEmptyArrayStorage;
  v41 = *(_QWORD *)(a1 + 16);
  if (v41)
  {
    v16 = 0;
    v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v18 = *(_QWORD *)(v6 + 72);
    v37 = v2;
    v38 = v17;
    v40 = a1 + v17;
    v43 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
    v44 = v18;
    v42 = a2 + 7;
    v19 = a2;
    do
    {
      v20 = v6;
      v43(v14, v40 + v44 * v16, v5, v12);
      if (v19[2]
        && (v21 = v19,
            v22 = v19[5],
            v23 = sub_100005C94(&qword_10082D2B8, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option), v24 = dispatch thunk of Hashable._rawHashValue(seed:)(v22, v5, v23), v19 = v21, v25 = -1 << *((_BYTE *)v21 + 32), v26 = v24 & ~v25, ((*(_QWORD *)((char *)v42 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0))
      {
        v27 = ~v25;
        while (1)
        {
          ((void (*)(char *, unint64_t, uint64_t))v43)(v10, v19[6] + v26 * v44, v5);
          v28 = sub_100005C94(&qword_10082D378, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.Option);
          v29 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v14, v5, v28);
          (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v5);
          if ((v29 & 1) != 0)
            break;
          v26 = (v26 + 1) & v27;
          v19 = v21;
          if (((*(_QWORD *)((char *)v42 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
            goto LABEL_3;
        }
        v6 = v20;
        v30 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v30(v39, v14, v5);
        v31 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) == 0)
        {
          sub_1000FE8EC(0, *((_QWORD *)v31 + 2) + 1, 1);
          v31 = v45;
        }
        v33 = *((_QWORD *)v31 + 2);
        v32 = *((_QWORD *)v31 + 3);
        v34 = v33 + 1;
        if (v33 >= v32 >> 1)
        {
          v36 = v33 + 1;
          sub_1000FE8EC(v32 > 1, v33 + 1, 1);
          v34 = v36;
          v31 = v45;
        }
        *((_QWORD *)v31 + 2) = v34;
        v30(&v31[v38 + v33 * v44], v39, v5);
        v45 = v31;
        v19 = v21;
      }
      else
      {
LABEL_3:
        v6 = v20;
        (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v5);
      }
      ++v16;
    }
    while (v16 != v41);
    return v45;
  }
  return result;
}

void sub_1000F1FB8()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = &v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  v2 = &v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets];
  v3 = type metadata accessor for PageFacets(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions;
  *(_QWORD *)&v0[v4] = sub_10054F65C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_actionRunner] = 0;
  v5 = &v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/PageFacetsViewController.swift", 39, 2, 71, 0);
  __break(1u);
}

void sub_1000F20AC(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = type metadata accessor for PageFacets.Facet.DisplayType(0, a2);
  v34 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v33 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - v7;
  v9 = type metadata accessor for PageFacets.Facet(0);
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10007B804(&qword_10082D2C8);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PageFacetsViewController.Item(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v33 - v20;
  v22 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource);
  if (v22)
  {
    v23 = v22;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_1000057AC((uint64_t)v14, &qword_10082D2C8);
    }
    else
    {
      sub_1000F23A4((uint64_t)v14, (uint64_t)v21);
      sub_1000F1420((uint64_t)v21, (uint64_t)v18);
      if (swift_getEnumCaseMultiPayload(v18, v15) == 1)
      {
        sub_1000F1150((uint64_t)v21);
        v24 = &v18[*(int *)(sub_10007B804(&qword_10082D1F8) + 48)];
        v25 = type metadata accessor for PageFacets.Facet.Option(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
      }
      else
      {
        v27 = v35;
        v26 = v36;
        v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v35 + 32))(v11, v18, v36);
        PageFacets.Facet.displayType.getter(v28);
        v30 = v33;
        v29 = v34;
        (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, enum case for PageFacets.Facet.DisplayType.toggle(_:), v4);
        v31 = sub_100005C94(&qword_10082D2D0, (uint64_t (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType, (uint64_t)&protocol conformance descriptor for PageFacets.Facet.DisplayType);
        dispatch thunk of static Equatable.== infix(_:_:)(v8, v30, v4, v31);
        v32 = *(void (**)(char *, uint64_t))(v29 + 8);
        v32(v30, v4);
        v32(v8, v4);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v26);
        sub_1000F1150((uint64_t)v21);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000F23A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F23E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000F245C()
{
  uint64_t v0;
  void *v1;
  Class isa;

  type metadata accessor for IndexPath(0);
  v1 = *(void **)(v0 + 16);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "deselectItemAtIndexPath:animated:", isa, 1);

}

void sub_1000F24C0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1000ED3F0(a1, a2, v2);
}

uint64_t sub_1000F24C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1000EF648(a1, *(char **)(v1 + 16));
}

uint64_t sub_1000F24D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F24F4(_QWORD *a1)
{
  uint64_t v1;

  return sub_10035DE40(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_1000F24FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1000F2520(uint64_t a1)
{
  uint64_t v1;

  return sub_1000EF5B8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000F2528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804(&qword_10082D330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F2570(uint64_t a1)
{
  uint64_t v1;

  return sub_1000EF3FC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000F2578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_100837EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1000F25C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1000ED8C4(a1, a2, a3, v3);
}

unint64_t sub_1000F25C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  uint64_t v5;

  return sub_1000EEAEC(a1, a5, a2, a3, a4, v5);
}

uint64_t sub_1000F25D0()
{
  return sub_1000F2640(&qword_10082D358);
}

uint64_t sub_1000F25DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10007B804(&qword_10082D358) - 8) + 80);
  return sub_1000EED1C(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_1000F2634()
{
  return sub_1000F2640(&qword_10082D350);
}

uint64_t sub_1000F2640(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_10007B804(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1000F269C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_10007B804(&qword_10082D350) - 8) + 80);
  v7 = v4 + ((v6 + 16) & ~v6);
  v8 = sub_100008FE4(0, (unint64_t *)&qword_1008338F0, UICollectionViewCell_ptr);
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v7, a4, v8);
}

uint64_t sub_1000F2710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PageFacets.Facet(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000F2784(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PageFacets.Facet(0) - 8) + 80);
  sub_1000EEE10(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1000F27C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000F1464(a1, a2);
}

void sub_1000F27EC()
{
  qword_10088A3F8 = 0x4081D00000000000;
}

void sub_1000F2800()
{
  qword_10088A400 = 0x4074500000000000;
}

void sub_1000F2814()
{
  qword_10088A408 = 0x4059000000000000;
}

void sub_1000F2824(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v5;
  double v6;
  double v7;
  id v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void *v21;
  id v22;
  id v23;
  char v24;
  uint64_t v25;
  objc_super v26;
  objc_super v27;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = *(char **)&v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView];
  v27.receiver = v3;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "_continuousCornerRadius");
  v7 = v6;
  objc_msgSend(v5, "_setContinuousCornerRadius:");
  v8 = objc_msgSend(v5, "layer");
  objc_msgSend(v8, "setMaskedCorners:", 12);

  objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_effectsView], "_setCornerRadius:continuous:maskedCorners:", 1, 12, v7);
  v10 = &v3[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay];
  v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay];
  if (v11)
  {
    v12 = *((_QWORD *)v10 + 1);
    v13 = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay], v9);
    v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
    swift_unknownObjectRetain(v11);
    v15 = (void *)v14(v13, v12);
    swift_unknownObjectRelease(v11);
    v26.receiver = v3;
    v26.super_class = ObjectType;
    objc_msgSendSuper2(&v26, "_continuousCornerRadius");
    objc_msgSend(v15, "_setContinuousCornerRadius:");

    v17 = *(_QWORD *)v10;
    if (*(_QWORD *)v10)
    {
      v18 = *((_QWORD *)v10 + 1);
      v19 = swift_getObjectType(*(_QWORD *)v10, v16);
      v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 16);
      swift_unknownObjectRetain(v17);
      v21 = (void *)v20(v19, v18);
      swift_unknownObjectRelease(v17);
      v22 = objc_msgSend(v21, "layer");

      if (v3[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory] == 6)
      {
        v23 = objc_msgSend(v3, "traitCollection");
        v24 = UITraitCollection.prefersAccessibilityLayouts.getter();

        if ((v24 & 1) != 0)
          v25 = 12;
        else
          v25 = 15;
      }
      else
      {
        v25 = 12;
      }
      objc_msgSend(v22, "setMaskedCorners:", v25);

    }
  }
}

uint64_t sub_1000F2A58(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_originalSizeCategory) = result;
  if (result != 7)
  {
    *(_BYTE *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayContainer)
             + OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_originalSizeCategory) = result;
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView);
    *(_BYTE *)(v2 + qword_100847310) = result;
    *(_BYTE *)(*(_QWORD *)(v2 + qword_100847318)
             + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_originalSizeCategory) = result;
    *(_BYTE *)(*(_QWORD *)(v2 + qword_100847320)
             + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_originalSizeCategory) = result;
    *(_BYTE *)(*(_QWORD *)(v2 + qword_100847330)
             + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_originalSizeCategory) = result;
  }
  return result;
}

void sub_1000F2AF0()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  int v3;
  _BYTE *v4;
  unsigned int v5;
  uint64_t v6;

  v1 = *(_BYTE **)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayContainer);
  v2 = OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_isTransitioning;
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_isTransitioning);
  v4 = &v1[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_isTransitioning];
  v1[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_isTransitioning] = v3;
  v5 = v3 ^ 1;
  if (v1[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_sizeCategory] == 4)
    v6 = v5;
  else
    v6 = 0;
  objc_msgSend(v1, "setHidden:", v6);
  v1[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_isLayoutRequired] = (*v4 & 1) == 0;
  objc_msgSend(v1, "setNeedsLayout");
  *(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView) + qword_100847350) = *(_BYTE *)(v0 + v2);
  sub_100476B5C();
}

id sub_1000F2C58(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _BYTE *v5;
  int v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  void *v30;
  id v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t, __n128);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double (**v46)();
  uint64_t v47;
  uint64_t v48;
  void (*v49)(__n128);
  uint64_t v50;
  __n128 v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v5 = v4;
  v10 = a2;
  ObjectType = swift_getObjectType();
  v12 = type metadata accessor for TodayCard.Style(0);
  v56 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v55 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v53 - v16;
  v18 = OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory;
  v5[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory] = a2;
  v19 = *(_BYTE **)&v5[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayContainer];
  v19[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_sizeCategory] = a2;
  v54 = ObjectType;
  if (v10 == 4)
    v20 = v19[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_isTransitioning] ^ 1;
  else
    v20 = 0;
  objc_msgSend(v19, "setHidden:", v20 & 1, v15);
  *(_BYTE *)(*(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView] + qword_100847308) = a2;
  v21 = sub_100476ABC();
  v22 = TodayCard.titleArtwork.getter(v21);
  if (v22)
  {
    v23 = v22;
    sub_1000F30DC(v22, a1, a2, a3, a4);
    swift_release(v23);
  }
  else
  {
    sub_1000F44DC(a1, a2);
  }
  sub_1004FA7F8(a1, a3, a2, a4);
  v25 = *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay];
  if (v25)
  {
    v53 = a4;
    v26 = *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay + 8];
    v27 = swift_getObjectType();
    v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 16);
    v29 = swift_unknownObjectRetain(v25);
    v30 = (void *)v28(v27, v26, v29);
    v31 = objc_msgSend(v30, "layer", swift_unknownObjectRelease(v25).n128_f64[0]);

    if (v5[v18] == 6)
    {
      v32 = objc_msgSend(v5, "traitCollection");
      v33 = UITraitCollection.prefersAccessibilityLayouts.getter(v32);

      if ((v33 & 1) != 0)
        v34 = 12;
      else
        v34 = 15;
    }
    else
    {
      v34 = 12;
    }
    objc_msgSend(v31, "setMaskedCorners:", v34);

    a4 = v53;
  }
  TodayCard.style.getter(v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, enum case for TodayCard.Style.white(_:), v12);
  v35 = sub_100005C94((unint64_t *)&qword_1008302B0, (uint64_t (*)(uint64_t))&type metadata accessor for TodayCard.Style, (uint64_t)&protocol conformance descriptor for TodayCard.Style);
  dispatch thunk of RawRepresentable.rawValue.getter(&v59, v12, v35);
  dispatch thunk of RawRepresentable.rawValue.getter(&v57, v12, v35);
  v36 = v60;
  v37 = v58;
  if (v59 == v57 && v60 == v58)
  {
    v38 = a4;
    v39 = swift_bridgeObjectRelease_n(v60, 2);
    v40 = 1;
  }
  else
  {
    v38 = a4;
    v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, v60, v57, v58, 0);
    swift_bridgeObjectRelease(v36);
    v39 = swift_bridgeObjectRelease(v37);
    if ((v41 & 1) != 0)
      v40 = 1;
    else
      v40 = 2;
  }
  v42 = *(void (**)(char *, uint64_t, __n128))(v56 + 8);
  v42(v55, v12, v39);
  ((void (*)(char *, uint64_t))v42)(v17, v12);
  objc_msgSend(v5, "setOverrideUserInterfaceStyle:", v40);
  v43 = swift_allocObject(&unk_100759FA8, 24, 7);
  swift_unknownObjectWeakInit(v43 + 16);
  v44 = swift_allocObject(&unk_100759FD0, 24, 7);
  swift_weakInit(v44 + 16, v38);
  v45 = swift_allocObject(&unk_100759FF8, 56, 7);
  *(_QWORD *)(v45 + 16) = v43;
  *(_QWORD *)(v45 + 24) = v44;
  *(_QWORD *)(v45 + 32) = a1;
  *(_BYTE *)(v45 + 40) = a2;
  *(_QWORD *)(v45 + 48) = v54;
  v46 = (double (**)())&v5[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionUpdateBlock];
  v47 = *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionUpdateBlock];
  v48 = *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionUpdateBlock + 8];
  *v46 = sub_1000F5034;
  v46[1] = (double (*)())v45;
  swift_retain(v43);
  swift_retain(v44);
  swift_retain(a1);
  swift_retain(v45);
  sub_10003A350(v47, v48);
  v49 = (void (*)(__n128))*v46;
  if (*v46)
  {
    v50 = (uint64_t)v46[1];
    v51 = swift_retain(v50);
    v49(v51);
    sub_10003A350((uint64_t)v49, v50);
  }
  swift_release(v44);
  swift_release(v45);
  return objc_msgSend(v5, "setNeedsLayout", swift_release(v43).n128_f64[0]);
}

void sub_1000F30DC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  unsigned int v18;
  id v19;
  __n128 v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  id v27;
  __n128 v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  _BYTE *v35;
  double *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  id v43;
  __n128 v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  _QWORD *v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _QWORD v67[5];

  v6 = v5;
  v65 = a5;
  v10 = a3;
  v11 = type metadata accessor for EditorialDisplayOptions(0);
  v63 = *(_QWORD *)(v11 - 8);
  v64 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TodayCard.Style(0);
  v61 = *(_QWORD *)(v14 - 8);
  v62 = v14;
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v10 == 4)
    v18 = 5;
  else
    v18 = a3;
  v19 = objc_msgSend(v6, "traitCollection", v15);
  v20.n128_f64[0] = sub_10041BA98(v18, a4, v19);
  v21 = v20.n128_f64[0];
  v22 = static CGFloat.allColumns.getter(v20);
  v24 = PageGrid.componentMeasuringSize(spanning:)(v22);
  switch(v18)
  {
    case 6u:
      v25 = floor(v24);
      break;
    case 5u:
      v25 = PageGrid.columnWidth.getter(v23);
      break;
    case 4u:
      v25 = floor((v24 - PageGrid.interColumnSpace.getter(v23)) * 0.5);
      break;
    default:
      sub_100584F90(v18);
      break;
  }
  v26 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v25 * 0.75, v21 * 0.25);

  v27 = objc_msgSend(v6, "traitCollection");
  v28.n128_f64[0] = sub_10041BA98(a3, a4, v27);
  v29 = v28.n128_f64[0];
  v30 = static CGFloat.allColumns.getter(v28);
  v32 = PageGrid.componentMeasuringSize(spanning:)(v30);
  switch(a3)
  {
    case 6u:
      v33 = floor(v32);
      break;
    case 5u:
      v33 = PageGrid.columnWidth.getter(v31);
      break;
    case 4u:
      v33 = floor((v32 - PageGrid.interColumnSpace.getter(v31)) * 0.5);
      break;
    default:
      sub_100584F90(a3);
      break;
  }
  v34 = Artwork.config(_:mode:prefersLayeredImage:)(1, 0, v33 * 0.75, v29 * 0.25);

  v35 = *(_BYTE **)&v6[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView];
  v36 = (double *)&v35[qword_100847300];
  v37 = *(_QWORD *)&v35[qword_100847300];
  v38 = *(_QWORD *)&v35[qword_100847300 + 32];
  v39 = v35[qword_100847300 + 40];
  v60 = v34;
  v41 = ArtworkLoaderConfig.size.getter(v40);
  *(_QWORD *)v36 = v37;
  v36[1] = v41;
  *((_QWORD *)v36 + 2) = v42;
  v36[3] = 14.0;
  *((_QWORD *)v36 + 4) = v38;
  *((_BYTE *)v36 + 40) = v39;
  objc_msgSend(v35, "setNeedsLayout");
  v43 = objc_msgSend(*(id *)&v35[qword_100847328], "image");
  v45 = TodayCard.inlineDescription.getter(v44);
  v47 = v46;
  v49 = TodayCard.style.getter(v48);
  TodayCard.editorialDisplayOptions.getter(v49);
  sub_100475E70((uint64_t)v43, v45, v47, (uint64_t)v17, (uint64_t)v13, 1);

  v50 = swift_bridgeObjectRelease(v47);
  (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v13, v64, v50);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v17, v62);
  v51 = type metadata accessor for ArtworkLoader(0);
  v52 = *(_QWORD *)(v65 + qword_10088FD90);
  if (v52)
  {
    v53 = *(_QWORD *)&v6[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey];
    *(_QWORD *)&v6[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey] = v26;
    swift_retain(v52);
    swift_retain(v26);
    swift_release(v53);
    v66 = v35;
    v54 = type metadata accessor for TodayCardLabelsView(0);
    v55 = sub_100005C94(&qword_10082D420, type metadata accessor for TodayCardLabelsView, (uint64_t)&protocol conformance descriptor for NSObject);
    v56 = v35;
    AnyHashable.init<A>(_:)(v67, &v66, v54, v55);
    v57 = swift_allocObject(&unk_100759FA8, 24, 7);
    swift_unknownObjectWeakInit(v57 + 16);
    v58 = (_QWORD *)swift_allocObject(&unk_10075A020, 40, 7);
    v58[2] = v57;
    v58[3] = v26;
    v58[4] = a2;
    swift_retain(v26);
    swift_retain(v57);
    v59 = swift_retain(a2);
    ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)(v26, 2, 1, v67, sub_1000F5050, v58, v59);
    swift_release(v58);
    sub_1000057AC((uint64_t)v67, &qword_100829F10);
    objc_msgSend(v6, "setNeedsLayout", swift_release(v57).n128_f64[0]);
    swift_release(v26);
    swift_release(v60);
    swift_release(v52);
  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v51, v51);
    __break(1u);
  }
}

double sub_1000F3584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  char *v20;
  void *v21;
  id v22;
  char *v23;
  int v24;
  id v25;
  char v26;
  id *v27;
  id v28;
  uint64_t v29;
  char v30[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = a2 + 16;
    swift_beginAccess(v9, &v29, 0, 0);
    v10 = swift_weakLoadStrong(v9);
    if (v10)
    {
      v11 = v10;
      v12 = (void *)sub_1000F4E24();
      sub_100081918(v12);
      v13 = objc_msgSend(v8, "traitCollection");
      v14 = sub_100011BD8(a3, (uint64_t)v13);
      v16 = v15;

      v17 = OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView;
      v18 = *(id *)&v8[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView];
      sub_100010A78(a3, (uint64_t)v14, v16);

      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v14);
      v19 = *(void **)&v8[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_preferredGradientType];
      if (v19)
      {
        v20 = *(char **)&v8[v17];
        v21 = *(void **)&v20[OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_gradientType];
        *(_QWORD *)&v20[OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_gradientType] = v19;
        v22 = v19;
        v23 = v20;
      }
      else
      {
        v24 = v8[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory];
        v23 = (char *)*(id *)&v8[v17];
        if (v24 == 6
          && (v25 = objc_msgSend(v8, "traitCollection"),
              v26 = UITraitCollection.prefersAccessibilityLayouts.getter(v25),
              v25,
              (v26 & 1) == 0))
        {
          v27 = (id *)&kCAGradientLayerRadial;
        }
        else
        {
          v27 = (id *)&kCAGradientLayerAxial;
        }
        v28 = *v27;
        v21 = *(void **)&v23[OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_gradientType];
        *(_QWORD *)&v23[OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_gradientType] = v28;
        v22 = v28;
      }

      sub_100053270();
      objc_msgSend(v8, "setNeedsLayout");

      *(_QWORD *)&result = swift_release(v11).n128_u64[0];
    }
    else
    {

    }
  }
  return result;
}

void sub_1000F3788(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  __n128 v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _QWORD v39[3];
  _QWORD v40[3];
  _BYTE v41[24];

  v36 = a7;
  v37 = a4;
  v38 = a1;
  v9 = type metadata accessor for EditorialDisplayOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TodayCard.Style(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a5 + 16;
  swift_beginAccess(a5 + 16, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5 + 16);
  if (Strong)
  {
    v19 = (void *)Strong;
    v20 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey);
    swift_retain(v20);

    if (v20)
    {
      v40[0] = v20;
      v39[0] = a6;
      v21 = type metadata accessor for ArtworkLoaderConfig(0);
      v22 = sub_100005C94(&qword_10082D428, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkLoaderConfig, (uint64_t)&protocol conformance descriptor for ArtworkLoaderConfig);
      swift_retain(v20);
      LOBYTE(v22) = dispatch thunk of static Equatable.== infix(_:_:)(v40, v39, v21, v22);
      v23 = v40[0];
      swift_release(v20);
      swift_release(v23);
      if ((v22 & 1) != 0)
      {
        if (v37)
          v38 = 0;
        else
          v24 = v38;
        swift_beginAccess(v17, v40, 0, 0);
        v25 = swift_unknownObjectWeakLoadStrong(v17);
        if (v25)
        {
          v26 = (void *)v25;
          v27 = *(id *)(v25 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView);

          v37 = TodayCard.inlineDescription.getter(v28);
          v30 = v29;
          v32 = TodayCard.style.getter(v31);
          TodayCard.editorialDisplayOptions.getter(v32);
          sub_100475E70((uint64_t)v38, v37, v30, (uint64_t)v16, (uint64_t)v12, 1);

          v33 = swift_bridgeObjectRelease(v30);
          (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v33);
          (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
        }
        swift_beginAccess(v17, v39, 0, 0);
        v34 = (void *)swift_unknownObjectWeakLoadStrong(v17);
        if (v34)
        {
          v35 = v34;
          objc_msgSend(v34, "setNeedsLayout", v36);

        }
      }
    }
  }
}

id sub_1000F39F0(unsigned __int8 *a1, char a2)
{
  char *v2;
  char *v3;
  int v6;
  _BYTE *v7;
  char v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory];
  v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory] = v6;
  if (v6 != 7)
  {
    v7 = *(_BYTE **)&v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayContainer];
    v7[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_sizeCategory] = v6;
    if (v6 == 4)
      v8 = v7[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_isTransitioning] ^ 1;
    else
      v8 = 0;
    objc_msgSend(v7, "setHidden:", v8 & 1);
    *(_BYTE *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView] + qword_100847308) = v6;
    sub_100476ABC();
  }
  sub_1004787E8(*(char **)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView]);
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay];
  if (v9)
  {
    v10 = &v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay];
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay];
    if (*(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay])
    {
      v12 = *((_QWORD *)v10 + 1);
      v13 = *(_QWORD *)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay + 8];
      ObjectType = swift_getObjectType();
      v15 = *(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v12 + 120);
      swift_unknownObjectRetain(v9);
      v16 = swift_unknownObjectRetain(v11);
      v15(v9, v13, a2 & 1, ObjectType, v12, v16);
      swift_unknownObjectRelease(v9);
      swift_unknownObjectRelease(v11);
    }
  }
  sub_100081918((id)a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionMode]);
  objc_msgSend(v3, "setOverrideUserInterfaceStyle:", objc_msgSend(a1, "overrideUserInterfaceStyle"));
  v17 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView];
  v18 = *(_QWORD *)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView];
  v19 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_style);
  v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_style + 8);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v20);
  sub_100028B6C(v19, v20);
  *(_QWORD *)(v17 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_blurUserInterfaceStyle) = *(_QWORD *)(v18 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_blurUserInterfaceStyle);
  sub_100013DD0();
  return objc_msgSend(v3, "setNeedsLayout");
}

id sub_1000F3BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(__n128);
  uint64_t v6;
  __n128 v7;

  sub_10033F324();
  objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView) + qword_100847328), "setImage:", 0);
  sub_1000CA2C8();
  sub_1000CA2C8();
  sub_1000CA2C8();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey) = 0;
  swift_release(v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory) = 7;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_originalSizeCategory) = 7;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionUpdateBlock);
  v3 = *v2;
  v4 = v2[1];
  *v2 = 0;
  v2[1] = 0;
  sub_10003A350(v3, v4);
  v5 = (void (*)(__n128))*v2;
  if (*v2)
  {
    v6 = v2[1];
    v7 = swift_retain(v6);
    v5(v7);
    sub_10003A350((uint64_t)v5, v6);
  }
  return sub_100579158();
}

id sub_1000F3CEC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;

  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay];
  if (!v5)
    return 0;
  v6 = v4;
  v10 = *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay + 8];
  ObjectType = swift_getObjectType(*(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay], a2);
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 16);
  swift_unknownObjectRetain(v5);
  v13 = (void *)v12(ObjectType, v10);
  swift_unknownObjectRelease(v5);
  objc_msgSend(v6, "convertPoint:toCoordinateSpace:", v13, a3, a4);
  v15 = v14;
  v17 = v16;
  if (!objc_msgSend(v13, "pointInside:withEvent:", a1))
  {

    return 0;
  }
  v18 = objc_msgSend(v13, "hitTest:withEvent:", a1, v15, v17);

  return v18;
}

uint64_t sub_1000F3E60(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v17;
  _QWORD v18[5];

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay;
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay);
  if (v7)
  {
    v8 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 128);
    v11 = swift_unknownObjectRetain(v7);
    v10(a1, ObjectType, v8, v11);
    swift_unknownObjectRelease(v7);
  }
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey) = 0;
  swift_release(v12);
  v17 = *(id *)(v3 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView);
  v13 = type metadata accessor for TodayCardLabelsView(0);
  v14 = sub_100005C94(&qword_10082D420, type metadata accessor for TodayCardLabelsView, (uint64_t)&protocol conformance descriptor for NSObject);
  v15 = v17;
  AnyHashable.init<A>(_:)(v18, &v17, v13, v14);
  ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v18, a2 & 1);
  return sub_10007E32C((uint64_t)v18);
}

uint64_t getEnumTagSinglePayload for NavigationAccessory.Location(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TodayCardInfoLayerView.ProtectionMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1000F41E0 + 4 * byte_100663DC5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1000F4214 + 4 * byte_100663DC0[v4]))();
}

uint64_t sub_1000F4214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000F421C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000F4224);
  return result;
}

uint64_t sub_1000F4230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000F4238);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1000F423C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000F4244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TodayCardInfoLayerView.ProtectionMode()
{
  return &type metadata for TodayCardInfoLayerView.ProtectionMode;
}

unint64_t sub_1000F4264()
{
  unint64_t result;

  result = qword_10082D418;
  if (!qword_10082D418)
  {
    result = swift_getWitnessTable(&unk_100663E08, &type metadata for TodayCardInfoLayerView.ProtectionMode);
    atomic_store(result, (unint64_t *)&qword_10082D418);
  }
  return result;
}

uint64_t sub_1000F42A8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayKind);
}

uint64_t sub_1000F42C0(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayKind;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t sub_1000F42DC()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay));
}

double sub_1000F430C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  double result;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay);
  *v3 = a1;
  v3[1] = a2;
  *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_1000F4328()
{
  uint64_t v0;

  return swift_weakLoadStrong(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayReusePool);
}

uint64_t sub_1000F4338(uint64_t a1)
{
  uint64_t v1;

  swift_weakAssign(v1 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayReusePool, a1);
  return swift_release(a1);
}

uint64_t sub_1000F4370()
{
  return sub_100476888();
}

void sub_1000F439C(char *a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  char v7;
  uint64_t v8;
  double v9;
  double v10;

  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v4, "layoutDirection");

  if (v5 != objc_msgSend(a2, "layoutDirection"))
  {
    v6 = objc_msgSend(a1, "traitCollection");
    v7 = UITraitCollection.prefersRightToLeftLayouts.getter();

    v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView];
    v9 = 0.13962634;
    if ((v7 & 1) != 0)
      v9 = -0.13962634;
    v10 = *(double *)(v8 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_rotationAngle);
    *(double *)(v8 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_rotationAngle) = v9;
    if (v9 != v10)
      sub_100054394();
  }
}

id sub_1000F4474(char *a1, uint64_t a2)
{
  void (*v3)(__n128);
  uint64_t v4;
  __n128 v5;

  sub_1000F2824((uint64_t)a1, a2);
  v3 = *(void (**)(__n128))&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionUpdateBlock];
  if (v3)
  {
    v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionUpdateBlock + 8];
    v5 = swift_retain(v4);
    v3(v5);
    sub_10003A350((uint64_t)v3, v4);
  }
  return objc_msgSend(a1, "setNeedsLayout");
}

id sub_1000F44DC(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __n128 v16;
  void *v17;
  uint64_t (*v18)();
  uint64_t (*v19)();
  void *v20;
  char *v21;
  void *v22;
  void *v23;
  void *v24;
  char *v25;
  char *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  __n128 v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  char *v54;
  __n128 v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _QWORD v72[13];

  v3 = type metadata accessor for EditorialDisplayOptions(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v66 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TodayCard.Style(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10007B804(&qword_10082D448);
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = TodayCard.media.getter(v13);
  v15 = TodayCardMedia.otdTextStyle.getter();
  v16 = swift_release(v14);
  v64 = v15;
  v65 = a2;
  v69 = v4;
  v70 = v3;
  v67 = v7;
  v68 = v6;
  if ((v15 & 1) != 0)
  {
    v17 = sub_100081EF8;
    if (a2 == 4)
      v18 = sub_100081F50;
    else
      v18 = sub_10007FFEC;
    if (a2 == 4)
      v17 = sub_100081F78;
    v19 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
    if (a2 != 4)
      v19 = sub_10007FFEC;
    v20 = sub_1002607A8;
    if (a2 == 4)
      v20 = sub_1002607A8;
    v21 = v9;
  }
  else if (a2 == 5)
  {
    v20 = sub_100081EFC;
    v19 = sub_10007FFEC;
    v17 = sub_100081EF8;
    v18 = sub_10007FFEC;
    v21 = v9;
  }
  else
  {
    v21 = v9;
    if (a2 == 4)
    {
      v20 = sub_1002607A8;
      v19 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v17 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
      v18 = sub_100081F50;
    }
    else
    {
      v20 = sub_100081EFC;
      v19 = sub_10007FFEC;
      v17 = sub_100081EF8;
      v18 = sub_10007FFEC;
    }
  }
  v22 = v66;
  v72[0] = v18;
  v72[1] = 0;
  v72[2] = v17;
  v72[3] = 0;
  v72[4] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v72[5] = 0;
  v72[6] = v19;
  v72[7] = 0;
  v72[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v72[9] = 0;
  v72[10] = v20;
  v72[11] = 0;
  v63 = *(_QWORD *)&v71[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView];
  v62 = TodayCard.heading.getter(v16);
  v24 = v23;
  v61 = TodayCard.title.getter(v62);
  v26 = v25;
  v60 = TodayCard.shortTitle.getter();
  v28 = v27;
  TodayCard.titleCharacteristics.getter();
  v29 = type metadata accessor for StringCharacteristics(0);
  v30.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 0, 1, v29);
  v59 = TodayCard.inlineDescription.getter(v30);
  v32 = v31;
  v34 = TodayCard.style.getter(v33);
  TodayCard.editorialDisplayOptions.getter(v34);
  v36 = TodayCard.overlay.getter(v35);
  v66 = v26;
  if (!v36)
  {
    v39 = (uint64_t)v21;
    v42 = v24;
    goto LABEL_25;
  }
  v38 = v36;
  v39 = (uint64_t)v21;
  v40 = type metadata accessor for TodayCardLockupOverlay(0, v37);
  if (!swift_dynamicCastClass(v38, v40))
  {
    v42 = v24;
    v46 = type metadata accessor for TodayCardMarketingLockupOverlay(0, v41);
    if (swift_dynamicCastClass(v38, v46))
    {
      swift_retain(v38);
      v44 = TodayCardMarketingLockupOverlay.lockup.getter(v47);
      goto LABEL_23;
    }
    swift_release(v38);
LABEL_25:
    v50 = 0;
    v52 = 0;
    goto LABEL_26;
  }
  v42 = v24;
  swift_retain(v38);
  v44 = TodayCardLockupOverlay.lockup.getter(v43);
LABEL_23:
  v48 = v44;
  Lockup.title.getter(v45);
  v50 = v49;
  v52 = v51;
  swift_release_n(v38, 2);
  swift_release(v48);
LABEL_26:
  v53 = v39;
  v57 = v39;
  v54 = v66;
  sub_10047603C(v62, v42, v61, v66, v60, v28, (uint64_t)v12, v59, v32, v57, v65, (uint64_t)v22, v64 & 1, v50, v52, (uint64_t)v72, 1);
  swift_bridgeObjectRelease(v52);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v54);
  v55 = swift_bridgeObjectRelease(v42);
  (*(void (**)(void *, uint64_t, __n128))(v69 + 8))(v22, v70, v55);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v53, v68);
  sub_1000057AC((uint64_t)v12, &qword_10082D448);
  return objc_msgSend(v71, "setNeedsLayout");
}

double sub_1000F4920@<D0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  double v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double result;

  if ((UITraitCollection.prefersAccessibilityLayouts.getter(a1) & 1) != 0)
  {
    if (qword_100829368 != -1)
      swift_once(&qword_100829368, sub_100050594);
    v6 = sub_1000418FC(a1, (uint64_t)&xmmword_100890B80, 1);
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v7) & 1) != 0)
    {
      v8 = 20.0;
      v9 = 20.0;
    }
    else
    {
      v8 = 13.0;
      v9 = 13.0;
    }
    v14 = static UIEdgeInsets.vertical(top:bottom:)(v8, v9);
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v15) & 1) != 0)
    {
      v16 = 20.0;
      v17 = 20.0;
    }
    else
    {
      v16 = 13.0;
      v17 = 13.0;
    }
    static UIEdgeInsets.vertical(top:bottom:)(v16, v17);
    v19 = v6 + v14 + v18;
    __asm { FMOV            V0.2D, #16.0 }
LABEL_36:
    *(double *)&_Q0 = v19;
    v46 = 16.0;
    goto LABEL_41;
  }
  if (a2 == 6)
  {
    if (qword_100829368 != -1)
      swift_once(&qword_100829368, sub_100050594);
    v25 = sub_1000418FC(a1, (uint64_t)&xmmword_100890B80, 1);
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v26) & 1) != 0)
    {
      v27 = 20.0;
      v28 = 20.0;
    }
    else
    {
      v27 = 13.0;
      v28 = 13.0;
    }
    v37 = static UIEdgeInsets.vertical(top:bottom:)(v27, v28);
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v38) & 1) != 0)
    {
      v39 = 20.0;
      v40 = 20.0;
    }
    else
    {
      v39 = 13.0;
      v40 = 13.0;
    }
    static UIEdgeInsets.vertical(top:bottom:)(v39, v40);
    __asm { FMOV            V0.2D, #30.0 }
    *(double *)&_Q0 = v25 + v37 + v47;
    v46 = 30.0;
  }
  else
  {
    if (a2 == 4)
    {
      if (qword_100829368 != -1)
        swift_once(&qword_100829368, sub_100050594);
      v10 = sub_1000418FC(a1, (uint64_t)&xmmword_100890B80, 1);
      if ((UITraitCollection.prefersAccessibilityLayouts.getter(v11) & 1) != 0)
      {
        v12 = 20.0;
        v13 = 20.0;
      }
      else
      {
        v12 = 13.0;
        v13 = 13.0;
      }
      v33 = static UIEdgeInsets.vertical(top:bottom:)(v12, v13);
      if ((UITraitCollection.prefersAccessibilityLayouts.getter(v34) & 1) != 0)
      {
        v35 = 20.0;
        v36 = 20.0;
      }
      else
      {
        v35 = 13.0;
        v36 = 13.0;
      }
      static UIEdgeInsets.vertical(top:bottom:)(v35, v36);
      v19 = v10 + v33 + v45;
      __asm { FMOV            V0.2D, #12.0 }
      goto LABEL_36;
    }
    if (qword_100829368 != -1)
      swift_once(&qword_100829368, sub_100050594);
    v29 = sub_1000418FC(a1, (uint64_t)&xmmword_100890B80, 1);
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v30) & 1) != 0)
    {
      v31 = 20.0;
      v32 = 20.0;
    }
    else
    {
      v31 = 13.0;
      v32 = 13.0;
    }
    v41 = static UIEdgeInsets.vertical(top:bottom:)(v31, v32);
    if ((UITraitCollection.prefersAccessibilityLayouts.getter(v42) & 1) != 0)
    {
      v43 = 20.0;
      v44 = 20.0;
    }
    else
    {
      v43 = 13.0;
      v44 = 13.0;
    }
    static UIEdgeInsets.vertical(top:bottom:)(v43, v44);
    __asm { FMOV            V0.2D, #20.0 }
    *(double *)&_Q0 = v29 + v41 + v48;
    v46 = 20.0;
  }
LABEL_41:
  *(_OWORD *)a3 = _Q0;
  *(double *)(a3 + 16) = v46;
  *(_OWORD *)(a3 + 24) = xmmword_100663D70;
  result = 353.0;
  *(_OWORD *)(a3 + 40) = xmmword_100663D80;
  return result;
}

void sub_1000F4BF4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  _QWORD *v11;
  _QWORD v12[12];
  __int128 v13;
  _OWORD v14[2];

  v1 = v0;
  v2 = OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView;
  v12[0] = sub_10007FFEC;
  v12[1] = 0;
  v12[2] = sub_100081EF8;
  v12[3] = 0;
  v12[4] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v12[5] = 0;
  v12[6] = sub_10007FFEC;
  v12[7] = 0;
  v12[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v12[9] = 0;
  v12[10] = sub_100081EFC;
  v12[11] = 0;
  if (qword_100828A48 != -1)
    swift_once(&qword_100828A48, sub_100081EB8);
  v13 = xmmword_10088F628;
  v14[0] = *(_OWORD *)&qword_10088F638;
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)&qword_10088F640 + 1);
  v3 = objc_allocWithZone((Class)type metadata accessor for TodayCardLabelsView(0));
  *(_QWORD *)&v0[v2] = sub_100054E30((uint64_t)v12, &v13);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey] = 0;
  v4 = OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView;
  if (qword_1008271A8 != -1)
    swift_once(&qword_1008271A8, sub_100080CD8);
  v5 = off_100833C50;
  objc_allocWithZone((Class)type metadata accessor for TodayCardProtectionLayerView());
  swift_bridgeObjectRetain(v5);
  *(_QWORD *)&v1[v4] = sub_100053534(v6);
  v7 = OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayContainer;
  v8 = type metadata accessor for InfoLayerOverlayContainerView();
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
  v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionMode] = 0;
  v9 = &v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionUpdateBlock];
  *v9 = 0;
  v9[1] = 0;
  v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory] = 7;
  v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_originalSizeCategory] = 7;
  v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_isTransitioning] = 0;
  v10 = &v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayKind];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = &v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay];
  *v11 = 0;
  v11[1] = 0;
  swift_weakInit(&v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayReusePool], 0);
  v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_isExpanded] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_preferredGradientType] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/TodayCardInfoLayerView.swift", 37, 2, 140, 0);
  __break(1u);
}

uint64_t sub_1000F4E24()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  int v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v18;
  unsigned int v19;
  id v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for EditorialDisplayOptions(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = TodayCard.editorialDisplayOptions.getter(v4);
  v8 = EditorialDisplayOptions.suppressLockup.getter(v7);
  v9 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v10 = v9(v6, v2);
  if ((v8 & 1) != 0 || (v11 = TodayCard.overlay.getter(v10)) == 0)
  {
    v12 = 0;
  }
  else
  {
    swift_release(v11);
    v12 = 1;
  }
  v13 = objc_msgSend(v1, "traitCollection");
  v14 = UITraitCollection.prefersAccessibilityLayouts.getter();

  if ((v14 & 1) != 0)
  {
    v16 = TodayCard.editorialDisplayOptions.getter(v15);
    v17 = EditorialDisplayOptions.useMaterialBlur.getter(v16);
    v9(v6, v2);
    v18 = (v17 & 1) == 0;
    v19 = 2;
  }
  else
  {
    if (v12)
    {
      if (*((_BYTE *)v1 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory) != 6
        || (v20 = objc_msgSend(v1, "traitCollection"),
            v21 = UITraitCollection.prefersAccessibilityLayouts.getter(),
            v20,
            (v21 & 1) != 0))
      {
        v22 = TodayCard.editorialDisplayOptions.getter(v15);
        v23 = EditorialDisplayOptions.useMaterialBlur.getter(v22);
        v9(v6, v2);
        return (v23 & 1) == 0;
      }
    }
    v25 = TodayCard.editorialDisplayOptions.getter(v15);
    v26 = EditorialDisplayOptions.useMaterialBlur.getter(v25);
    v9(v6, v2);
    v18 = (v26 & 1) == 0;
    v19 = 3;
  }
  if (v18)
    return v19;
  else
    return 0;
}

uint64_t sub_1000F4FE4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F5008()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F502C()
{
  return sub_100039654(56);
}

double sub_1000F5034()
{
  uint64_t *v0;

  return sub_1000F3584(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000F5048()
{
  return sub_100039654(40);
}

void sub_1000F5050(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1000F3788(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

unint64_t sub_1000F505C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082D440;
  if (!qword_10082D440)
  {
    v1 = objc_opt_self(UIColorEffect);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10082D440);
  }
  return result;
}

double sub_1000F5098(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  __n128 v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  void *v21;
  id v22;
  NSString v23;
  id v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v2 = type metadata accessor for JSIncident(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  if (qword_100827460 != -1)
    swift_once(&qword_100827460, sub_10007FB94);
  Strong = swift_unknownObjectWeakLoadStrong(&unk_100837EB8);
  if (Strong
    && (v7 = Strong,
        v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(Strong
                                                                   + OBJC_IVAR____TtC8AppStore11AppDelegate_window), "rootViewController")),
        v6 = swift_unknownObjectRelease(v7),
        v8))
  {
    JSIncident.contextSummary.getter(v6);
    v10 = v9;
    JSIncident.problemSummary.getter();
    v12 = v11;
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v15 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v13, v14, 1);

    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    v16 = *(unsigned __int8 *)(v3 + 80);
    v17 = (v16 + 16) & ~v16;
    v18 = swift_allocObject(&unk_10075A158, v17 + v4, v16 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v18 + v17, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    v19 = String._bridgeToObjectiveC()();
    aBlock[4] = sub_1000F6998;
    v31 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100629964;
    aBlock[3] = &unk_10075A170;
    v20 = _Block_copy(aBlock);
    swift_release(v31);
    v21 = (void *)objc_opt_self(UIAlertAction);
    v22 = objc_msgSend(v21, "actionWithTitle:style:handler:", v19, 0, v20);
    _Block_release(v20);

    objc_msgSend(v15, "addAction:", v22);
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v21, "actionWithTitle:style:handler:", v23, 0, 0);

    objc_msgSend(v15, "addAction:", v24);
    objc_msgSend(v8, "presentViewController:animated:completion:", v15, 1, 0);

  }
  else
  {
    if (qword_100826EA8 != -1)
      swift_once(&qword_100826EA8, sub_100160F60);
    v26 = type metadata accessor for OSLogger(0, v6);
    sub_10007AF70(v26, (uint64_t)qword_10088AA60);
    v27 = sub_10007B804((uint64_t *)&unk_10082D0C0);
    v28 = type metadata accessor for LogMessage(0);
    v29 = swift_allocObject(v27, ((*(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80) | 7);
    *(_OWORD *)(v29 + 16) = xmmword_100661A30;
    LogMessage.init(stringLiteral:)(0xD000000000000034, 0x80000001006ABA60);
    Logger.debug(_:)(v29, v26, &protocol witness table for OSLogger);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  return result;
}

void sub_1000F5464()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(UIPasteboard), "generalPasteboard");
  JSIncident.description.getter();
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  objc_msgSend(v0, "setString:", v3);

}

uint64_t sub_1000F54E0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for OSLogger.Subsystem(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSLogger(0, v2);
  sub_100033BAC(v5, qword_10088A410);
  sub_10007AF70(v5, (uint64_t)qword_10088A410);
  if (qword_100826EA0 != -1)
    swift_once(&qword_100826EA0, sub_1000076D0);
  v6 = sub_10007AF70(v0, (uint64_t)qword_10088AA48);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v6, v0);
  return OSLogger.init(subsystem:category:)(v4, 0x50207265646E6552, 0xEF656E696C657069);
}

uint64_t sub_1000F55E8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v2 = v0 + OBJC_IVAR____TtC8AppStore19DiagnosticsReporter_configuration;
  v3 = type metadata accessor for MetricsLogger.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000F5670()
{
  return type metadata accessor for DiagnosticsReporter(0);
}

uint64_t sub_1000F5678(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  Class isa;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  double (*v27)();
  uint64_t v28;
  _QWORD *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  __n128 v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  void **aBlock;
  uint64_t v77;
  uint64_t (*v78)(uint64_t);
  void *v79;
  double (*v80)();
  uint64_t v81;
  _QWORD v82[3];
  char v83[16];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v70 = *(_QWORD *)(v2 - 8);
  v71 = v2;
  v3 = __chkstk_darwin(v2);
  v69 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for DispatchQoS(0, v3);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v66 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for MetricsLogger.Configuration(0);
  v62 = *(_QWORD *)(v63 - 8);
  v6 = __chkstk_darwin(v63);
  v64 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSLogger(0, v6);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (id)ASKBuildTypeGetCurrent(v10);
  v14 = sub_10007B804(&qword_10082D508);
  v15 = swift_allocObject(v14, 56, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100662370;
  v16 = (void *)ASKBuildTypeDebug;
  v17 = (void *)ASKBuildTypeConvergence;
  *(_QWORD *)(v15 + 32) = ASKBuildTypeDebug;
  *(_QWORD *)(v15 + 40) = v17;
  v18 = (void *)ASKBuildTypeInternal;
  *(_QWORD *)(v15 + 48) = ASKBuildTypeInternal;
  type metadata accessor for BuildType(0);
  v19 = v16;
  v20 = v17;
  v21 = v18;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v23 = swift_bridgeObjectRelease(v15);
  LODWORD(v15) = ASKBuildTypeIsAnyOf(v13, isa, v23);

  if ((_DWORD)v15)
  {
    *(_QWORD *)&v72 = a1;
    swift_errorRetain(a1);
    v24 = sub_10007B804(&qword_10082D510);
    v25 = sub_10007B804(&qword_10082D518);
    if ((swift_dynamicCast(&v73, &v72, v24, v25, 6) & 1) != 0)
    {
      sub_10000F5F4(&v73, (uint64_t)&aBlock);
      v26 = v79;
      v27 = v80;
      sub_100060B40(&aBlock, (uint64_t)v79);
      *(_QWORD *)&v72 = dispatch thunk of MetricsReportableError.metricsErrorDescription.getter(v26, v27);
      *((_QWORD *)&v72 + 1) = v28;
      v29 = sub_100060B40(&aBlock, (uint64_t)v79);
      v30 = __chkstk_darwin(v29);
      *(&v62 - 2) = (uint64_t)&v72;
      dispatch thunk of MetricsReportableError.describeForMetricsEvent(using:)(sub_1000F6930, v30);
      if (qword_100826C68 != -1)
        swift_once(&qword_100826C68, sub_1000F54E0);
      v31 = sub_10007AF70(v8, (uint64_t)qword_10088A410);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v31, v8);
      v32 = sub_10007B804((uint64_t *)&unk_10082D0C0);
      v33 = type metadata accessor for LogMessage(0);
      v34 = swift_allocObject(v32, ((*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v33 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v33 - 8) + 80) | 7);
      *(_OWORD *)(v34 + 16) = xmmword_100661A30;
      *((_QWORD *)&v74 + 1) = &type metadata for String;
      v73 = v72;
      swift_bridgeObjectRetain(*((_QWORD *)&v72 + 1));
      static LogMessage.safe(_:)(&v73);
      sub_1000057AC((uint64_t)&v73, (uint64_t *)&unk_10082B490);
      Logger.error(_:)(v34, v8, &protocol witness table for OSLogger);
      v35 = swift_bridgeObjectRelease(v34);
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v35);
      swift_bridgeObjectRelease(*((_QWORD *)&v72 + 1));
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&aBlock);
      goto LABEL_10;
    }
    v75 = 0;
    v73 = 0u;
    v74 = 0u;
    sub_1000057AC((uint64_t)&v73, (uint64_t *)&unk_10082D520);
  }
  if (qword_100826C68 != -1)
    swift_once(&qword_100826C68, sub_1000F54E0);
  v36 = sub_10007AF70(v8, (uint64_t)qword_10088A410);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v36, v8);
  v37 = sub_10007B804((uint64_t *)&unk_10082D0C0);
  v38 = type metadata accessor for LogMessage(0);
  v39 = swift_allocObject(v37, ((*(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v38 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80) | 7);
  *(_OWORD *)(v39 + 16) = xmmword_100661A30;
  swift_getErrorValue(a1, v83, v82);
  v40 = Error.localizedDescription.getter(v82[1], v82[2]);
  v79 = &type metadata for String;
  aBlock = (void **)v40;
  v77 = v41;
  static LogMessage.safe(_:)(&aBlock);
  sub_1000057AC((uint64_t)&aBlock, (uint64_t *)&unk_10082B490);
  Logger.error(_:)(v39, v8, &protocol witness table for OSLogger);
  v42 = swift_bridgeObjectRelease(v39);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v42);
LABEL_10:
  v43 = sub_1000F6780(a1);
  v45 = v44;
  v46 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v64, v65 + OBJC_IVAR____TtC8AppStore19DiagnosticsReporter_configuration, v63);
  v47 = type metadata accessor for MetricsLogger(0);
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  v48 = MetricsLogger.init(loggerName:configuration:)(v43, v45, v46);
  MetricsLogger.log(contentsOf:)(a1);
  v49 = sub_100049454();
  v50 = (void *)static OS_dispatch_queue.main.getter(v49);
  v51 = swift_allocObject(&unk_10075A090, 24, 7);
  *(_QWORD *)(v51 + 16) = a1;
  v80 = sub_1000F6928;
  v81 = v51;
  aBlock = _NSConcreteStackBlock;
  v77 = 1107296256;
  v78 = sub_10000AB18;
  v79 = &unk_10075A0A8;
  v52 = _Block_copy(&aBlock);
  v53 = v81;
  swift_errorRetain(a1);
  v54 = swift_release(v53);
  v55 = v66;
  static DispatchQoS.unspecified.getter(v54);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v56 = sub_10003A59C();
  v57 = sub_10007B804((uint64_t *)&unk_10082D0B0);
  v58 = sub_10003A550();
  v59 = v69;
  v60 = v71;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v57, v58, v71, v56);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v55, v59, v52);
  _Block_release(v52);
  swift_release(v48);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v60);
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v55, v68);
}

void sub_1000F5DFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  __n128 v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void **aBlock;
  uint64_t v90;
  uint64_t (*v91)(uint64_t);
  void *v92;
  uint64_t (*v93)();
  uint64_t v94;
  uint64_t v95;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for JSIncident(0);
  v84 = *(_QWORD *)(v87 - 8);
  v12 = *(_QWORD *)(v84 + 64);
  v13 = __chkstk_darwin(v87);
  v79 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for OSLogger(0, v13);
  v86 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v77 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MetricsLogger.Configuration(0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v19 + 16))(v18, v1 + OBJC_IVAR____TtC8AppStore19DiagnosticsReporter_configuration, v16);
  v20 = type metadata accessor for MetricsLogger(0);
  v21 = *(unsigned int *)(v20 + 48);
  v22 = *(unsigned __int16 *)(v20 + 52);
  v76 = v20;
  swift_allocObject(v20, v21, v22);
  v23 = MetricsLogger.init(loggerName:configuration:)(0x69746164696C6176, 0xEA00000000006E6FLL, v18);
  if (*(_QWORD *)(a1 + 16))
  {
    v88 = *(_QWORD *)(a1 + 16);
    v80 = v23;
    v71 = v11;
    v72 = v9;
    v69 = sub_100049454();
    v24 = *(unsigned __int8 *)(v84 + 80);
    v25 = a1 + ((v24 + 32) & ~v24);
    v26 = qword_100826C68;
    v63 = a1;
    swift_bridgeObjectRetain(a1);
    if (v26 != -1)
      swift_once(&qword_100826C68, sub_1000F54E0);
    v27 = v84;
    v67 = *(_QWORD *)(v84 + 72);
    v68 = (v24 + 16) & ~v24;
    v66 = v68 + v12;
    v65 = v24 | 7;
    v85 = xmmword_100661E10;
    v64 = 0x80000001006ABA40;
    v28 = v88;
    v75 = v4;
    v74 = v7;
    v73 = v8;
    v70 = v3;
    do
    {
      v88 = v28;
      v29 = v78;
      v30 = sub_10007AF70(v78, (uint64_t)qword_10088A410);
      v31 = v77;
      (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v77, v30, v29);
      v32 = sub_10007B804((uint64_t *)&unk_10082D0C0);
      v82 = v32;
      v33 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
      v34 = *(_QWORD *)(v33 + 72);
      v35 = *(unsigned __int8 *)(v33 + 80);
      v81 = ((v35 + 32) & ~v35) + 2 * v34;
      v84 = v34;
      v36 = v35 | 7;
      v37 = v27;
      v38 = swift_allocObject(v32, v81, v35 | 7);
      *(_OWORD *)(v38 + 16) = v85;
      LogMessage.init(stringLiteral:)(0xD000000000000016, v64);
      v39 = v87;
      v92 = (void *)v87;
      v40 = (char *)sub_100024638(&aBlock);
      v83 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
      v83(v40, v25, v39);
      static LogMessage.safe(_:)(&aBlock);
      sub_1000057AC((uint64_t)&aBlock, (uint64_t *)&unk_10082B490);
      Logger.warning(_:)(v38, v29, &protocol witness table for OSLogger);
      v41 = v38;
      v27 = v37;
      v42 = swift_bridgeObjectRelease(v41);
      (*(void (**)(char *, uint64_t, __n128))(v86 + 8))(v31, v29, v42);
      v95 = v80;
      v43 = swift_allocObject(v82, v81, v36);
      *(_OWORD *)(v43 + 16) = v85;
      v44 = v70;
      v45 = JSIncident.problemSummary.getter();
      v92 = &type metadata for String;
      aBlock = (void **)v45;
      v90 = v46;
      static LogMessage.safe(_:)(&aBlock);
      sub_1000057AC((uint64_t)&aBlock, (uint64_t *)&unk_10082B490);
      v48 = JSIncident.contextSummary.getter(v47);
      v92 = &type metadata for String;
      aBlock = (void **)v48;
      v90 = v49;
      static LogMessage.safe(_:)(&aBlock);
      sub_1000057AC((uint64_t)&aBlock, (uint64_t *)&unk_10082B490);
      Logger.error(_:)(v43, v76, &protocol witness table for MetricsLogger);
      swift_bridgeObjectRelease(v43);
      v51 = (void *)static OS_dispatch_queue.main.getter(v50);
      v52 = v79;
      v53 = v87;
      v83(v79, v25, v87);
      v54 = v74;
      v55 = swift_allocObject(&unk_10075A0E0, v66, v65);
      (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v55 + v68, v52, v53);
      v93 = sub_1000F693C;
      v94 = v55;
      aBlock = _NSConcreteStackBlock;
      v90 = 1107296256;
      v91 = sub_10000AB18;
      v92 = &unk_10075A0F8;
      v56 = _Block_copy(&aBlock);
      v57 = swift_release(v94);
      v58 = v71;
      static DispatchQoS.unspecified.getter(v57);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v59 = sub_10003A59C();
      v60 = sub_10007B804((uint64_t *)&unk_10082D0B0);
      v61 = sub_10003A550();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v60, v61, v44, v59);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v58, v54, v56);
      _Block_release(v56);

      v62 = v73;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v54, v44);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v58, v62);
      v25 += v67;
      v28 = v88 - 1;
    }
    while (v88 != 1);
    swift_release(v80);
    swift_bridgeObjectRelease(v63);
  }
  else
  {
    swift_release(v23);
  }
}

uint64_t sub_1000F6524(uint64_t a1, void *a2, uint64_t a3)
{
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  Swift::String v11;

  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v6._countAndFlagsBits = 10;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 8250;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  _print_unlocked<A, B>(_:_:)(a3, &v11, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  object = v11._object;
  String.append(_:)(v11);
  return swift_bridgeObjectRelease(object);
}

double sub_1000F65DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  _BYTE v8[8];

  v2 = type metadata accessor for DebugNotificationCenter();
  swift_initStaticObject(v2, &unk_1008293F0);
  swift_getErrorValue(a1, v8, v7);
  v3 = Error.localizedDescription.getter(v7[1], v7[2]);
  v5 = v4;
  sub_1002FD2A4(2, v3, v4, 0, 0, 3.0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

double sub_1000F666C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v2 = type metadata accessor for JSIncident(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DebugNotificationCenter();
  swift_initStaticObject(v6, &unk_1008293F0);
  v7 = JSIncident.problemSummary.getter();
  v9 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v10 = *(unsigned __int8 *)(v3 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_10075A130, v11 + v4, v10 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, v5, v2);
  sub_1002FD2A4(1, v7, v9, (uint64_t)sub_1000F694C, v12, 3.0);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_1000F6780(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = type metadata accessor for JSError(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONError(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1;
  swift_errorRetain(a1);
  v11 = sub_10007B804(&qword_10082D510);
  if (swift_dynamicCast(v10, &v14, v11, v7, 0))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_errorRelease(v14);
    return 1852797802;
  }
  else
  {
    swift_errorRelease(v14);
    v14 = a1;
    swift_errorRetain(a1);
    if (swift_dynamicCast(v6, &v14, v11, v2, 0))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      swift_errorRelease(v14);
      return 29546;
    }
    else
    {
      swift_errorRelease(v14);
      return 0x74736F6E67616964;
    }
  }
}

uint64_t sub_1000F6904()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_1000F6928()
{
  uint64_t v0;

  return sub_1000F65DC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1000F6930(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1000F6524(a1, a2, a3);
}

uint64_t sub_1000F693C()
{
  return sub_1000F6958((uint64_t (*)(uint64_t))sub_1000F666C);
}

uint64_t sub_1000F694C()
{
  return sub_1000F6958((uint64_t (*)(uint64_t))sub_1000F5098);
}

uint64_t sub_1000F6958(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for JSIncident(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

void sub_1000F6998()
{
  type metadata accessor for JSIncident(0);
  sub_1000F5464();
}

uint64_t sub_1000F69D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  int v20;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unint64_t v29;
  _QWORD v30[5];

  v4 = type metadata accessor for MetadataRibbonItemViewType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Feature(0);
  v30[3] = v8;
  v30[4] = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v9 = sub_100024638(v30);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v9, enum case for Feature.search_tags(_:), v8);
  LOBYTE(v8) = isFeatureEnabled(_:)(v30);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v30);
  if ((v8 & 1) == 0)
    a1 = a2;
  if (a1)
  {
    v10 = type metadata accessor for MetadataRibbonItem(0);
    if ((Array.isNotEmpty.getter(a1, v10) & 1) != 0)
    {
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
      if ((unint64_t)a1 >> 62)
        goto LABEL_25;
      v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      while (v12)
      {
        v29 = a1 & 0xC000000000000001;
        v13 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
        v28 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
        v14 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
        v27 = enum case for MetadataRibbonItemViewType.starRating(_:);
        v25 = enum case for MetadataRibbonItemViewType.divider(_:);
        v26 = enum case for MetadataRibbonItemViewType.textLabel(_:);
        v15 = 4;
        v24 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
        while (1)
        {
          v16 = v15 - 4;
          if (!v29)
            break;
          v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, a1);
          v18 = __OFADD__(v16, 1);
          v19 = v15 - 3;
          if (v18)
            goto LABEL_24;
LABEL_13:
          MetadataRibbonItem.viewContainerType.getter();
          v20 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
          if (v20 == v13 || v20 == v28 || v20 == v14 || v20 == v27 || v20 == v26 || v20 == v25 || v20 == v24)
          {
            swift_bridgeObjectRelease(a1);
            swift_release(v17);
            return 1;
          }
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          swift_release(v17);
          ++v15;
          if (v19 == v12)
            goto LABEL_21;
        }
        v17 = *(_QWORD *)(a1 + 8 * v15);
        swift_retain(v17);
        v18 = __OFADD__(v16, 1);
        v19 = v15 - 3;
        if (!v18)
          goto LABEL_13;
LABEL_24:
        __break(1u);
LABEL_25:
        if (a1 >= 0)
          v22 = v11;
        else
          v22 = a1;
        swift_bridgeObjectRetain(a1);
        v12 = _CocoaArrayWrapper.endIndex.getter(v22);
      }
LABEL_21:
      swift_bridgeObjectRelease(a1);
    }
  }
  return 0;
}

double sub_1000F6C80(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, uint64_t a11, void *a12)
{
  return sub_1000F9E80(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1000F6C8C()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  NSString *v14;
  void (*v15)(_QWORD *, uint64_t);
  _QWORD *v16;
  void (*v17)(_QWORD *, _QWORD *, uint64_t);
  NSString *v18;
  void (*v19)(_QWORD *, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  NSString *v22;
  _QWORD *v23;
  NSString *v24;
  _QWORD *v25;
  void (*v26)(_QWORD *, _QWORD *, uint64_t);
  NSString *v27;
  _QWORD *v28;
  NSString *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v33;
  NSString *v34;
  _QWORD *v35;
  NSString *v36;
  _QWORD *v37;
  NSString *v38;
  _QWORD *v39;
  NSString *v40;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD *, uint64_t);
  unsigned int v45;
  uint64_t v46;
  void (*v47)(_QWORD *, uint64_t, uint64_t);
  void (*v48)(_QWORD *, _QWORD *, uint64_t);
  _QWORD v49[5];
  _QWORD v50[3];
  void *v51;
  void *v52;
  _QWORD v53[5];
  _QWORD v54[5];
  _QWORD v55[5];
  _QWORD v56[5];
  _QWORD v57[3];
  void *v58;
  void *v59;
  _QWORD v60[3];
  uint64_t v61;
  void *v62;
  _QWORD v63[3];
  uint64_t v64;
  void *v65;
  _QWORD v66[3];
  uint64_t v67;
  void *v68;
  _QWORD v69[3];
  uint64_t v70;
  void *v71;
  _QWORD v72[3];
  uint64_t v73;
  void *v74;
  _QWORD v75[3];
  uint64_t v76;
  void *v77;
  _QWORD v78[3];
  uint64_t v79;
  void *v80;
  _QWORD v81[3];
  uint64_t v82;
  void *v83;
  _QWORD v84[3];
  uint64_t v85;
  void *v86;
  _QWORD v87[5];
  _QWORD v88[6];

  v0 = type metadata accessor for FontSource(0);
  v1 = *(_QWORD **)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (uint64_t *)((char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for SmallSearchLockupLayout.Metrics(0, v2);
  sub_100033BAC(v5, qword_10088A428);
  v46 = sub_10007AF70(v5, (uint64_t)qword_10088A428);
  v88[3] = &type metadata for Double;
  v88[4] = &protocol witness table for Double;
  v88[0] = 0x4024000000000000;
  if (qword_100827CE8 != -1)
    swift_once(&qword_100827CE8, sub_100083430);
  v6 = type metadata accessor for FontUseCase(0);
  v7 = sub_10007AF70(v6, (uint64_t)qword_10088D100);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v7, v6);
  v8 = (void (*)(_QWORD *, _QWORD, uint64_t))v1[13];
  v8(v4, enum case for FontSource.useCase(_:), v0);
  v9 = type metadata accessor for StaticDimension(0);
  v87[3] = v9;
  v87[4] = &protocol witness table for StaticDimension;
  sub_100024638(v87);
  v85 = v0;
  v86 = &protocol witness table for FontSource;
  v10 = sub_100024638(v84);
  v11 = (void (*)(_QWORD *, _QWORD *, uint64_t))v1[2];
  v11(v10, v4, v0);
  StaticDimension.init(_:scaledLike:)(v84, 14.0);
  v44 = (void (*)(_QWORD *, uint64_t))v1[1];
  v44(v4, v0);
  *v4 = UIFontTextStyleBody;
  v12 = enum case for FontSource.textStyle(_:);
  v8(v4, enum case for FontSource.textStyle(_:), v0);
  v47 = v8;
  v85 = v9;
  v43 = v9;
  v86 = &protocol witness table for StaticDimension;
  sub_100024638(v84);
  v82 = v0;
  v83 = &protocol witness table for FontSource;
  v13 = sub_100024638(v81);
  v11(v13, v4, v0);
  v14 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)(v81, 26.0);
  v15 = v44;
  v44(v4, v0);
  *v4 = v14;
  v8(v4, v12, v0);
  v82 = v9;
  v83 = &protocol witness table for StaticDimension;
  sub_100024638(v81);
  v79 = v0;
  v80 = &protocol witness table for FontSource;
  v16 = sub_100024638(v78);
  v11(v16, v4, v0);
  v17 = v11;
  v18 = v14;
  StaticDimension.init(_:scaledLike:)(v78, 18.0);
  v15(v4, v0);
  *v4 = v18;
  v19 = v47;
  v47(v4, v12, v0);
  v20 = v43;
  v79 = v43;
  v80 = &protocol witness table for StaticDimension;
  sub_100024638(v78);
  v76 = v0;
  v77 = &protocol witness table for FontSource;
  v21 = sub_100024638(v75);
  v17(v21, v4, v0);
  v48 = v17;
  v22 = v18;
  StaticDimension.init(_:scaledLike:)(v75, 16.0);
  v15(v4, v0);
  *v4 = v22;
  v19(v4, v12, v0);
  v76 = v20;
  v77 = &protocol witness table for StaticDimension;
  sub_100024638(v75);
  v73 = v0;
  v74 = &protocol witness table for FontSource;
  v23 = sub_100024638(v72);
  v17(v23, v4, v0);
  v24 = v22;
  StaticDimension.init(_:scaledLike:)(v72, 22.0);
  v15(v4, v0);
  *v4 = UIFontTextStyleFootnote;
  v19(v4, v12, v0);
  v73 = v20;
  v74 = &protocol witness table for StaticDimension;
  sub_100024638(v72);
  v70 = v0;
  v71 = &protocol witness table for FontSource;
  v25 = sub_100024638(v69);
  v26 = v48;
  v48(v25, v4, v0);
  v27 = UIFontTextStyleFootnote;
  StaticDimension.init(_:scaledLike:)(v69, 21.0);
  v15(v4, v0);
  *v4 = v27;
  v19(v4, v12, v0);
  v70 = v20;
  v71 = &protocol witness table for StaticDimension;
  sub_100024638(v69);
  v67 = v0;
  v68 = &protocol witness table for FontSource;
  v28 = sub_100024638(v66);
  v26(v28, v4, v0);
  v29 = v27;
  StaticDimension.init(_:scaledLike:)(v66, 20.0);
  v15(v4, v0);
  *v4 = v29;
  v30 = v12;
  v31 = v12;
  v32 = v47;
  v47(v4, v30, v0);
  v67 = v20;
  v68 = &protocol witness table for StaticDimension;
  sub_100024638(v66);
  v64 = v0;
  v65 = &protocol witness table for FontSource;
  v33 = sub_100024638(v63);
  v26(v33, v4, v0);
  v34 = v29;
  StaticDimension.init(_:scaledLike:)(v63, 20.0);
  v15(v4, v0);
  *v4 = v34;
  v45 = v31;
  v32(v4, v31, v0);
  v64 = v20;
  v65 = &protocol witness table for StaticDimension;
  sub_100024638(v63);
  v61 = v0;
  v62 = &protocol witness table for FontSource;
  v35 = sub_100024638(v60);
  v26(v35, v4, v0);
  v36 = v34;
  StaticDimension.init(_:scaledLike:)(v60, 21.0);
  v15(v4, v0);
  *v4 = v36;
  v32(v4, v31, v0);
  v61 = v20;
  v62 = &protocol witness table for StaticDimension;
  sub_100024638(v60);
  v58 = (void *)v0;
  v59 = &protocol witness table for FontSource;
  v37 = sub_100024638(v57);
  v26(v37, v4, v0);
  v38 = v36;
  StaticDimension.init(_:scaledLike:)(v57, 16.0);
  v15(v4, v0);
  v59 = &protocol witness table for Double;
  v58 = &type metadata for Double;
  v56[4] = &protocol witness table for Double;
  v57[0] = 0x4024000000000000;
  v56[3] = &type metadata for Double;
  v55[4] = &protocol witness table for Double;
  v56[0] = 0x4010000000000000;
  v55[3] = &type metadata for Double;
  v54[4] = &protocol witness table for Double;
  v55[0] = 0x4020000000000000;
  v54[3] = &type metadata for Double;
  v54[0] = 0x401C000000000000;
  *v4 = v38;
  v32(v4, v45, v0);
  v53[3] = v20;
  v53[4] = &protocol witness table for StaticDimension;
  sub_100024638(v53);
  v51 = (void *)v0;
  v52 = &protocol witness table for FontSource;
  v39 = sub_100024638(v50);
  v48(v39, v4, v0);
  v40 = v38;
  StaticDimension.init(_:scaledLike:)(v50, 20.0);
  v15(v4, v0);
  v51 = &type metadata for Double;
  v52 = &protocol witness table for Double;
  v49[4] = &protocol witness table for Double;
  v50[0] = 0x4040000000000000;
  v49[3] = &type metadata for Double;
  v49[0] = 0x4024000000000000;
  return SmallSearchLockupLayout.Metrics.init(artworkSize:artworkMargin:headingSpace:titleRegularSpace:titleMediumSpace:titleShortSpace:titleWithHeadingSpace:subtitleSpace:tertiaryTitleSpace:offerTextSpace:metadataTextSpace:bottomSpace:offerButtonSize:offerButtonMargin:userRatingRightMargin:editorsChoiceMargin:adButtonRightMargin:descriptionSpace:regularWidthColumnSpacing:descriptionTopMargin:)(v88, v87, v84, v81, v78, v75, v72, v69, 60.0, 60.0, 0.0, 0.0, v66, v63, v60, v57, v56, v55, v54,
           v53,
           v50,
           v49);
}

uint64_t sub_1000F740C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_10007B804((uint64_t *)&unk_10082D600);
  sub_100033BAC(v0, qword_10082D530);
  sub_10007AF70(v0, (uint64_t)qword_10082D530);
  v4 = 2;
  v5 = 0;
  v1 = sub_10007B804(&qword_10082E6C0);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v5, &v4, v1, v2);
}

void sub_1000F7494(char a1)
{
  char *v1;
  char *v2;
  int v3;
  id v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;

  if (v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeEditorsChoice] != (a1 & 1))
  {
    v2 = v1;
    if (!v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeEditorsChoice])
    {
      v11 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView;
      v12 = *(void **)&v2[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView];
      if (v12)
      {
        objc_msgSend(v12, "removeFromSuperview");
        v13 = *(void **)&v2[v11];
      }
      else
      {
        v13 = 0;
      }
      *(_QWORD *)&v2[v11] = 0;

      goto LABEL_11;
    }
    v3 = v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_useAdsLocale];
    v4 = objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
    v5 = sub_10026FDF4(2, 0, 0, v3, 0);
    v6 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView;
    v7 = *(void **)&v2[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView];
    *(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView] = v5;

    v8 = *(void **)&v2[v6];
    if (v8)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v9 = v8;
      v10 = (void *)static UIColor.secondaryText.getter(v9);
      objc_msgSend(v9, "setTintColor:", v10);

      if (*(_QWORD *)&v2[v6])
      {
        objc_msgSend(v2, "addSubview:");
LABEL_11:
        objc_msgSend(v2, "setNeedsLayout");
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1000F75DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  char *v5;
  uint64_t v6;
  int v7;
  char *v8;
  uint64_t result;
  char *v10;
  _BYTE v11[24];
  char v12[24];

  v1 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(char **)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView);
  v6 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_isDisplayingSearchAd;
  v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_isDisplayingSearchAd);
  v8 = &v5[OBJC_IVAR____TtC8AppStore18MetadataRibbonView_isInsideSearchAd];
  result = swift_beginAccess(&v5[OBJC_IVAR____TtC8AppStore18MetadataRibbonView_isInsideSearchAd], v12, 1, 0);
  *v8 = v7;
  if (v7 == 1)
  {
    static MetadataRibbonViewLayout.Metrics.standard.getter(result);
    v10 = &v5[OBJC_IVAR____TtC8AppStore18MetadataRibbonView_metrics];
    swift_beginAccess(&v5[OBJC_IVAR____TtC8AppStore18MetadataRibbonView_metrics], v11, 33, 0);
    (*(void (**)(char *, _BYTE *, uint64_t))(v2 + 24))(v10, v4, v1);
    swift_endAccess(v11);
    objc_msgSend(v5, "setNeedsLayout");
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  }
  *(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView)
           + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_isInsideSearchAd) = *(_BYTE *)(v0 + v6);
  return result;
}

char *sub_1000F771C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, _QWORD, uint64_t, uint64_t);
  void (*v31)(_QWORD);
  uint64_t v32;
  char *v33;
  objc_class *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  void (*v53)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  void *v62;
  id v63;
  void *v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t v68;
  void *v69;
  id v70;
  void *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char v75;
  _QWORD *v76;
  char v77;
  uint64_t *v78;
  void (*v80)(char *, _QWORD, uint64_t, uint64_t);
  void (*v81)(char *, uint64_t, uint64_t);
  void (*v82)(char *, _QWORD, uint64_t);
  unsigned int v83;
  uint64_t v84;
  char *v85;
  objc_class *ObjectType;
  char *v87;
  objc_super v88;
  _QWORD v89[3];
  uint64_t v90;
  void *v91;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v84 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v85 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v12);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FontSource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRegularMargin] = 0x4024000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataSmallMargin] = 0x401C000000000000;
  v19 = qword_100828278;
  v20 = v5;
  if (v19 != -1)
    swift_once(&qword_100828278, sub_1003A770C);
  v21 = type metadata accessor for FontUseCase(0);
  v22 = sub_10007AF70(v21, (uint64_t)qword_10088E198);
  v23 = *(_QWORD *)(v21 - 8);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v24(v18, v22, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for FontSource.useCase(_:), v15);
  v90 = v15;
  v91 = &protocol witness table for FontSource;
  v25 = sub_100024638(v89);
  (*(void (**)(_QWORD *, char *, uint64_t))(v16 + 16))(v25, v18, v15);
  StaticDimension.init(_:scaledLike:)(v89, 22.0);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  *(_QWORD *)&v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_regularWidthColumnSpacing] = 0x4040000000000000;
  v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeRatings] = 0;
  v26 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_userRatingView;
  v27 = objc_allocWithZone((Class)type metadata accessor for RatingView());
  *(_QWORD *)&v20[v26] = sub_100326324(5, 3, 0, 1, 0, 0, 0);
  v28 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel;
  if (qword_100828118 != -1)
    swift_once(&qword_100828118, sub_1003A6AEC);
  v29 = sub_10007AF70(v21, (uint64_t)qword_10088DD78);
  v24(v14, v29, v21);
  v30 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v30(v14, 0, 1, v21);
  v31 = *(void (**)(_QWORD))(v10 + 104);
  v32 = v84;
  v33 = v85;
  v83 = enum case for DirectionalTextAlignment.none(_:);
  v82 = (void (*)(char *, _QWORD, uint64_t))v31;
  v31(v85);
  v34 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v35 = objc_allocWithZone(v34);
  *(_QWORD *)&v20[v28] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v14, 2, 0, 1, 0, v33, 0, 0);
  v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_useAdsLocale] = 0;
  v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeEditorsChoice] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView] = 0;
  v36 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView;
  *(_QWORD *)&v20[v36] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MetadataRibbonView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v37 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView;
  *(_QWORD *)&v20[v37] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SearchTagsRibbonView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton] = 0;
  v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_isDisplayingSearchAd] = 0;
  v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includesMetadataInformationInLockup] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator] = 0;
  v38 = &v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  if (qword_100828110 != -1)
    swift_once(&qword_100828110, sub_1003A6AD4);
  v39 = sub_10007AF70(v21, (uint64_t)qword_10088DD60);
  v81 = v24;
  v24(v14, v39, v21);
  v80 = v30;
  v30(v14, 0, 1, v21);
  v82(v33, v83, v32);
  v40 = objc_allocWithZone(v34);
  v41 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v14, 2, 0, 0, 0, v33, 0, 0);
  v42 = &qword_10088A000;
  *(_QWORD *)&v20[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_descriptionLabel] = v41;

  v88.receiver = v20;
  v88.super_class = ObjectType;
  v43 = objc_msgSendSuper2(&v88, "initWithFrame:", a1, a2, a3, a4);
  v44 = type metadata accessor for Feature(0);
  v90 = v44;
  v45 = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v91 = (void *)v45;
  v46 = sub_100024638(v89);
  v47 = *(char **)(*(_QWORD *)(v44 - 8) + 104);
  LODWORD(ObjectType) = enum case for Feature.search_tags(_:);
  ((void (*)(_QWORD *))v47)(v46);
  v48 = (char *)v43;
  LOBYTE(v43) = isFeatureEnabled(_:)(v89);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v89);
  if ((v43 & 1) != 0)
  {
    v85 = v47;
    v49 = qword_100827D08;
    v50 = *(id *)&v48[OBJC_IVAR____TtC8AppStore14BaseLockupView_titleLabel];
    if (v49 != -1)
      swift_once(&qword_100827D08, sub_1003A475C);
    v51 = sub_10007AF70(v21, (uint64_t)qword_10088D160);
    v52 = v81;
    v81(v14, v51, v21);
    v53 = v80;
    v80(v14, 0, 1, v21);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v14);

    v54 = qword_100827D18;
    v55 = *(id *)&v48[OBJC_IVAR____TtC8AppStore14BaseLockupView_subtitleLabel];
    if (v54 != -1)
      swift_once(&qword_100827D18, sub_1003A4774);
    v56 = sub_10007AF70(v21, (uint64_t)qword_10088D190);
    v52(v14, v56, v21);
    v53(v14, 0, 1, v21);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v14);

    v57 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel;
    v58 = *(id *)&v48[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel];
    static CustomTextStyle<>.metadataRibbon.getter(v58);
    if (qword_100829180 != -1)
      swift_once(&qword_100829180, sub_1005BC2A0);
    v59 = type metadata accessor for MetadataRibbonTextStyle(0);
    v60 = sub_10007AF70(v59, (uint64_t)qword_100890638);
    v90 = v59;
    v91 = (void *)sub_100005C94((unint64_t *)&qword_100829F20, (uint64_t (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle, (uint64_t)&protocol conformance descriptor for MetadataRibbonTextStyle);
    v61 = sub_100024638(v89);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v61, v60, v59);
    dispatch thunk of DynamicTypeLabel.customTextStyle.setter(v89);

    v62 = *(void **)&v48[v57];
    sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
    v63 = v62;
    v64 = (void *)static UIColor.secondaryText.getter(v63);
    objc_msgSend(v63, "setTextColor:", v64);

    objc_msgSend(*(id *)&v48[v57], "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraLarge);
    v47 = v85;
    v42 = &qword_10088A000;
  }
  else
  {
    v65 = *(void **)&v48[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel];
    sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
    v66 = v65;
    v67 = (void *)static UIColor.tertiaryText.getter(v66);
    objc_msgSend(v66, "setTextColor:", v67);

  }
  v68 = v42[143];
  v69 = *(void **)&v48[v68];
  sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
  v70 = v69;
  v71 = (void *)static UIColor.secondaryText.getter(v70);
  objc_msgSend(v70, "setTextColor:", v71);

  objc_msgSend(*(id *)&v48[v68], "setUserInteractionEnabled:", 0);
  if (qword_100826C78 != -1)
    swift_once(&qword_100826C78, sub_1000F740C);
  v72 = sub_10007B804((uint64_t *)&unk_10082D600);
  sub_10007AF70(v72, (uint64_t)qword_10082D530);
  v87 = v48;
  Conditional.evaluate(with:)(&v87, v72);
  UILabel.alignment.setter(v89[0]);
  objc_msgSend(v48, "addSubview:", *(_QWORD *)&v48[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_userRatingView]);
  v90 = v44;
  v91 = (void *)v45;
  v73 = sub_100024638(v89);
  v74 = ObjectType;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v47)(v73, ObjectType, v44);
  v75 = isFeatureEnabled(_:)(v89);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v89);
  if ((v75 & 1) != 0)
    objc_msgSend(v48, "addSubview:", *(_QWORD *)&v48[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel]);
  v90 = v44;
  v91 = (void *)v45;
  v76 = sub_100024638(v89);
  ((void (*)(_QWORD *, uint64_t, uint64_t))v47)(v76, v74, v44);
  v77 = isFeatureEnabled(_:)(v89);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v89);
  v78 = &OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView;
  if ((v77 & 1) == 0)
    v78 = &OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView;
  objc_msgSend(v48, "addSubview:", *(_QWORD *)&v48[*v78]);

  return v48;
}

double sub_1000F8098(__n128 a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  __n128 v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  double v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  char v52;
  _BYTE *v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  int v60;
  _BYTE v61[12];
  int v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[5];
  _QWORD v75[5];
  _QWORD v76[5];
  __int128 v77;
  __int128 v78;
  void *v79;
  __int128 v80;
  __int128 v81;
  void *v82;
  _QWORD v83[5];
  _QWORD v84[5];
  _QWORD v85[5];
  _QWORD v86[5];
  __int128 v87;
  __int128 v88;
  void *v89;
  _QWORD v90[5];
  _QWORD v91[5];
  __int128 v92;
  __int128 v93;
  void *v94;
  char v95[24];
  _QWORD v96[3];
  uint64_t v97;
  void *v98;

  v3 = v2;
  v5 = a1.n128_f64[0];
  v6 = type metadata accessor for SmallSearchLockupLayout.Metrics(0, a1);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v61[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for SmallSearchLockupLayout(0);
  v72 = *(_QWORD *)(v10 - 8);
  v73 = v10;
  __chkstk_darwin(v10);
  v71 = &v61[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100826C70 != -1)
    swift_once(&qword_100826C70, sub_1000F6C8C);
  v12 = sub_10007AF70(v6, (uint64_t)qword_10088A428);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  v13 = *(_BYTE **)(v3 + OBJC_IVAR____TtC8AppStore14BaseLockupView_offerButton);
  v14 = type metadata accessor for BaseLockupView();
  LayoutMarginsAware<>.layoutFrame.getter(v14);
  v16 = &v13[OBJC_IVAR____TtC8AppStore11OfferButton_cachedIntrinsicContentSize];
  if ((v13[OBJC_IVAR____TtC8AppStore11OfferButton_cachedIntrinsicContentSize + 16] & 1) != 0)
  {
    v17 = (uint64_t)&v13[OBJC_IVAR____TtC8AppStore11OfferButton__configuration];
    swift_beginAccess(&v13[OBJC_IVAR____TtC8AppStore11OfferButton__configuration], v95, 0, 0);
    sub_100022500(v17, (uint64_t)v96);
    v18 = v97;
    v19 = v98;
    sub_100060B40(v96, v97);
    v20 = dispatch thunk of OfferButtonConfiguration.size(in:)(v13, v18, v19);
    v22 = v21;
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v96);
    *(double *)v16 = v20;
    *((_QWORD *)v16 + 1) = v22;
    v16[16] = 0;
  }
  else
  {
    v20 = *(double *)v16;
    v22 = *((_QWORD *)v16 + 1);
  }
  v15.n128_u64[0] = v22;
  SmallSearchLockupLayout.Metrics.offerButtonSize.setter(v20, v15);
  v23 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView);
  v24 = type metadata accessor for ArtworkView(0);
  v98 = &protocol witness table for UIView;
  v97 = v24;
  v68 = v23;
  v96[0] = v23;
  v25 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel);
  v67 = v25;
  if (v25)
  {
    *((_QWORD *)&v93 + 1) = type metadata accessor for DynamicTypeLabel(0);
    v94 = &protocol witness table for UILabel;
    *(_QWORD *)&v92 = v25;
  }
  else
  {
    v94 = 0;
    v92 = 0u;
    v93 = 0u;
  }
  v26 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore14BaseLockupView_titleLabel);
  v27 = type metadata accessor for DynamicTypeLabel(0);
  v28 = v27;
  v91[4] = &protocol witness table for UILabel;
  v91[3] = v27;
  v91[0] = v26;
  v29 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore14BaseLockupView_subtitleLabel);
  v90[4] = &protocol witness table for UILabel;
  v90[3] = v27;
  v65 = v29;
  v66 = v26;
  v90[0] = v29;
  v30 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel);
  v70 = v9;
  if (v30)
  {
    *((_QWORD *)&v88 + 1) = v27;
    v89 = &protocol witness table for UILabel;
    *(_QWORD *)&v87 = v30;
  }
  else
  {
    v89 = 0;
    v87 = 0u;
    v88 = 0u;
  }
  v31 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore14BaseLockupView_offerLabel);
  v86[3] = v27;
  v86[4] = &protocol witness table for UILabel;
  v64 = v31;
  v86[0] = v31;
  v85[3] = type metadata accessor for OfferButton();
  v85[4] = &protocol witness table for UIView;
  v69 = v13;
  v85[0] = v13;
  v32 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_userRatingView);
  v84[3] = type metadata accessor for RatingView();
  v84[4] = &protocol witness table for UIView;
  v63 = v32;
  v83[4] = &protocol witness table for UILabel;
  v84[0] = v32;
  v33 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel);
  v83[3] = v28;
  v83[0] = v33;
  v34 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView);
  if (v34)
  {
    *((_QWORD *)&v81 + 1) = type metadata accessor for EditorsChoiceView();
    v82 = &protocol witness table for UIView;
    *(_QWORD *)&v80 = v34;
  }
  else
  {
    v82 = 0;
    v80 = 0u;
    v81 = 0u;
  }
  v35 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton);
  if (v35)
  {
    *((_QWORD *)&v78 + 1) = type metadata accessor for SearchAdTransparencyButton(0);
    v79 = &protocol witness table for UIView;
    *(_QWORD *)&v77 = v35;
  }
  else
  {
    v79 = 0;
    v78 = 0u;
    v77 = 0u;
  }
  v36 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_descriptionLabel);
  v76[3] = v28;
  v76[4] = &protocol witness table for UILabel;
  v76[0] = v36;
  v62 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeRatings);
  v37 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView);
  v75[3] = type metadata accessor for MetadataRibbonView(0);
  v75[4] = &protocol witness table for UIView;
  v75[0] = v37;
  v38 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView);
  v74[3] = type metadata accessor for SearchTagsRibbonView(0);
  v74[4] = &protocol witness table for UIView;
  v74[0] = v38;
  v39 = v34;
  v40 = v35;
  v41 = v36;
  v42 = v37;
  v38;
  v43 = v68;
  v44 = v67;
  v45 = v66;
  v46 = v65;
  v47 = v30;
  v48 = v64;
  v49 = v69;
  v50 = v63;
  v51 = v33;
  LOBYTE(v38) = MetadataRibbonView.hasContent.getter();
  v52 = sub_1000A2D38();
  BYTE2(v60) = *(_BYTE *)(v3 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includesMetadataInformationInLockup);
  BYTE1(v60) = v52 & 1;
  LOBYTE(v60) = v38 & 1;
  v53 = v71;
  SmallSearchLockupLayout.init(metrics:artworkView:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:userRatingView:ratingCountLabel:editorsChoiceView:adButton:description:includesRatings:metadataRibbonView:searchTagsRibbonView:includesMetadataRibbon:includesSearchTagsRibbon:includesMetadataInformationInLockup:)(v70, v96, &v92, v91, v90, &v87, v86, v85, v54, v84, v83, &v80, &v77, v76, (_BYTE)v62, v75, v74, v60);
  v55 = sub_100005C94((unint64_t *)&unk_10082D5B0, (uint64_t (*)(uint64_t))&type metadata accessor for SmallSearchLockupLayout, (uint64_t)&protocol conformance descriptor for SmallSearchLockupLayout);
  v56 = v3;
  v57 = v73;
  v58 = dispatch thunk of Measurable.measurements(fitting:in:)(v56, v73, v55, v5, a2);
  (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v53, v57);
  return v58;
}

double sub_1000F8620(void *a1, double a2, double a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  _BYTE v20[24];
  char v21[24];

  v4 = v3;
  v8 = sub_10007B804((uint64_t *)&unk_10084E110);
  __chkstk_darwin(v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView];
  v12 = (uint64_t *)(v11 + OBJC_IVAR____TtC8AppStore18MetadataRibbonView_metadataRibbonItemModels);
  swift_beginAccess(v11 + OBJC_IVAR____TtC8AppStore18MetadataRibbonView_metadataRibbonItemModels, v21, 0, 0);
  v13 = *v12;
  v14 = v11 + OBJC_IVAR____TtC8AppStore18MetadataRibbonView_metrics;
  swift_beginAccess(v14, v20, 0, 0);
  v15 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v10, v14, v15);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
  v17 = *(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView]
                  + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels);
  swift_bridgeObjectRetain(v17);
  objc_msgSend(v4, "layoutMargins", swift_bridgeObjectRetain(v13).n128_f64[0]);
  v18 = sub_1000F9E80(0, 0, 0, 0, 0, 0, v13, (uint64_t)v10, a2, a3, v17, a1);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v17);
  sub_1000057AC((uint64_t)v10, (uint64_t *)&unk_10084E110);
  return v18;
}

uint64_t sub_1000F87E8()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  double v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  char v54;
  char v55;
  _BYTE *v56;
  __n128 v57;
  __n128 v58;
  _BYTE *v59;
  int v61;
  _BYTE v62[12];
  int v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  objc_class *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[5];
  _QWORD v80[5];
  _QWORD v81[5];
  __int128 v82;
  __int128 v83;
  void *v84;
  __int128 v85;
  __int128 v86;
  void *v87;
  _QWORD v88[5];
  _QWORD v89[5];
  _QWORD v90[5];
  _QWORD v91[5];
  __int128 v92;
  __int128 v93;
  void *v94;
  _QWORD v95[5];
  _QWORD v96[5];
  __int128 v97;
  __int128 v98;
  void *v99;
  char v100[24];
  _QWORD v101[3];
  uint64_t v102;
  void *v103;
  objc_super v104;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = type metadata accessor for LayoutRect(0);
  v77 = *(_QWORD *)(v3 - 8);
  v78 = v3;
  v4 = __chkstk_darwin(v3);
  v76 = &v62[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for SmallSearchLockupLayout.Metrics(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v62[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for SmallSearchLockupLayout(0);
  v73 = *(_QWORD *)(v10 - 8);
  v74 = v10;
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v72 = &v62[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v104.receiver = v1;
  v104.super_class = ObjectType;
  v75 = ObjectType;
  objc_msgSendSuper2(&v104, "layoutSubviews", v11);
  if (qword_100826C70 != -1)
    swift_once(&qword_100826C70, sub_1000F6C8C);
  v13 = sub_10007AF70(v6, (uint64_t)qword_10088A428);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
  v14 = *(_BYTE **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_offerButton];
  v15 = type metadata accessor for BaseLockupView();
  LayoutMarginsAware<>.layoutFrame.getter(v15);
  v17 = &v14[OBJC_IVAR____TtC8AppStore11OfferButton_cachedIntrinsicContentSize];
  if ((v14[OBJC_IVAR____TtC8AppStore11OfferButton_cachedIntrinsicContentSize + 16] & 1) != 0)
  {
    v18 = (uint64_t)&v14[OBJC_IVAR____TtC8AppStore11OfferButton__configuration];
    swift_beginAccess(&v14[OBJC_IVAR____TtC8AppStore11OfferButton__configuration], v100, 0, 0);
    sub_100022500(v18, (uint64_t)v101);
    v19 = v102;
    v20 = v103;
    sub_100060B40(v101, v102);
    v21 = dispatch thunk of OfferButtonConfiguration.size(in:)(v14, v19, v20);
    v23 = v22;
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v101);
    *(double *)v17 = v21;
    *((_QWORD *)v17 + 1) = v23;
    v17[16] = 0;
  }
  else
  {
    v21 = *(double *)v17;
    v23 = *((_QWORD *)v17 + 1);
  }
  v16.n128_u64[0] = v23;
  SmallSearchLockupLayout.Metrics.offerButtonSize.setter(v21, v16);
  v24 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView];
  v25 = type metadata accessor for ArtworkView(0);
  v103 = &protocol witness table for UIView;
  v102 = v25;
  v69 = v24;
  v101[0] = v24;
  v26 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel];
  v68 = v26;
  if (v26)
  {
    *((_QWORD *)&v98 + 1) = type metadata accessor for DynamicTypeLabel(0);
    v99 = &protocol witness table for UILabel;
    *(_QWORD *)&v97 = v26;
  }
  else
  {
    v99 = 0;
    v97 = 0u;
    v98 = 0u;
  }
  v27 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_titleLabel];
  v28 = type metadata accessor for DynamicTypeLabel(0);
  v29 = v28;
  v96[4] = &protocol witness table for UILabel;
  v96[3] = v28;
  v96[0] = v27;
  v30 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_subtitleLabel];
  v95[4] = &protocol witness table for UILabel;
  v95[3] = v28;
  v66 = v30;
  v67 = v27;
  v95[0] = v30;
  v31 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel];
  v71 = v9;
  if (v31)
  {
    v94 = &protocol witness table for UILabel;
    *((_QWORD *)&v93 + 1) = v28;
    *(_QWORD *)&v92 = v31;
  }
  else
  {
    v94 = 0;
    v92 = 0u;
    v93 = 0u;
  }
  v32 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_offerLabel];
  v91[3] = v28;
  v91[4] = &protocol witness table for UILabel;
  v65 = v32;
  v91[0] = v32;
  v90[3] = type metadata accessor for OfferButton();
  v90[4] = &protocol witness table for UIView;
  v70 = v14;
  v90[0] = v14;
  v33 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_userRatingView];
  v89[3] = type metadata accessor for RatingView();
  v89[4] = &protocol witness table for UIView;
  v64 = v33;
  v88[4] = &protocol witness table for UILabel;
  v89[0] = v33;
  v34 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel];
  v88[3] = v29;
  v88[0] = v34;
  v35 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView];
  if (v35)
  {
    *((_QWORD *)&v86 + 1) = type metadata accessor for EditorsChoiceView();
    v87 = &protocol witness table for UIView;
    *(_QWORD *)&v85 = v35;
  }
  else
  {
    v87 = 0;
    v85 = 0u;
    v86 = 0u;
  }
  v36 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton];
  if (v36)
  {
    *((_QWORD *)&v83 + 1) = type metadata accessor for SearchAdTransparencyButton(0);
    v84 = &protocol witness table for UIView;
    *(_QWORD *)&v82 = v36;
  }
  else
  {
    v84 = 0;
    v83 = 0u;
    v82 = 0u;
  }
  v37 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_descriptionLabel];
  v81[3] = v29;
  v81[4] = &protocol witness table for UILabel;
  v81[0] = v37;
  v63 = v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeRatings];
  v38 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView];
  v80[3] = type metadata accessor for MetadataRibbonView(0);
  v80[4] = &protocol witness table for UIView;
  v80[0] = v38;
  v39 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView];
  v79[3] = type metadata accessor for SearchTagsRibbonView(0);
  v79[4] = &protocol witness table for UIView;
  v79[0] = v39;
  v40 = v35;
  v41 = v36;
  v42 = v37;
  v43 = v38;
  v44 = v39;
  v45 = v69;
  v46 = v68;
  v47 = v67;
  v48 = v66;
  v49 = v31;
  v50 = v65;
  v51 = v70;
  v52 = v64;
  v53 = v34;
  v54 = MetadataRibbonView.hasContent.getter();
  v55 = sub_1000A2D38();
  BYTE2(v61) = v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includesMetadataInformationInLockup];
  BYTE1(v61) = v55 & 1;
  LOBYTE(v61) = v54 & 1;
  v56 = v72;
  SmallSearchLockupLayout.init(metrics:artworkView:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:userRatingView:ratingCountLabel:editorsChoiceView:adButton:description:includesRatings:metadataRibbonView:searchTagsRibbonView:includesMetadataRibbon:includesSearchTagsRibbon:includesMetadataInformationInLockup:)(v71, v101, &v97, v96, v95, &v92, v91, v90, v57, v89, v88, &v85, &v82, v81, (_BYTE)v63, v80, v79, v61);
  v58 = LayoutMarginsAware<>.layoutFrame.getter(v75);
  v59 = v76;
  SmallSearchLockupLayout.placeChildren(relativeTo:in:)(v1, v58);
  (*(void (**)(_BYTE *, uint64_t))(v77 + 8))(v59, v78);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v73 + 8))(v56, v74);
}

id sub_1000F8D8C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  void *v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v4, a2);
  v9 = *(void **)&v4[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton];
  if (!v9)
    goto LABEL_4;
  v10 = v9;
  objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v10, a3, a4);
  if ((objc_msgSend(v10, "pointInside:withEvent:", a1) & 1) == 0)
  {

LABEL_4:
    v12.receiver = v4;
    v12.super_class = ObjectType;
    return objc_msgSendSuper2(&v12, "hitTest:withEvent:", a1, a3, a4);
  }
  return v9;
}

id sub_1000F8EC8(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id result;
  uint64_t v6;
  _QWORD v7[2];
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "layoutDirection");

  if (!a1 || (result = objc_msgSend(a1, "layoutDirection"), v4 != result))
  {
    if (qword_100826C78 != -1)
      swift_once(&qword_100826C78, sub_1000F740C);
    v6 = sub_10007B804((uint64_t *)&unk_10082D600);
    sub_10007AF70(v6, (uint64_t)qword_10082D530);
    v7[0] = v1;
    Conditional.evaluate(with:)(v7, v6);
    return (id)UILabel.alignment.setter(v7[1]);
  }
  return result;
}

id sub_1000F90A4(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  char *v3;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  UIImage_optional v14;

  v4 = v3;
  v14.value.super.isa = 0;
  v14.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v14, a3);
  v5 = *(void **)&v3[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_descriptionLabel];
  v6 = objc_msgSend(v5, "superview");
  if (!v6)
    goto LABEL_3;
  v7 = v6;
  sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
  v8 = v4;
  v9 = v7;
  LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v8);

  if ((v7 & 1) == 0)
LABEL_3:
    objc_msgSend(v4, "addSubview:", v5);
  objc_msgSend(v5, "setHidden:", 1);
  objc_msgSend(v5, "setText:", 0);
  objc_msgSend(v4, "setNeedsLayout");
  v10 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton;
  v11 = *(void **)&v4[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton];
  if (v11)
  {
    objc_msgSend(v11, "removeFromSuperview");
    v12 = *(void **)&v4[v10];
  }
  else
  {
    v12 = 0;
  }
  *(_QWORD *)&v4[v10] = 0;

  if (*(_QWORD *)&v4[v10])
    objc_msgSend(v4, "addSubview:");
  v4[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includesMetadataInformationInLockup] = 0;
  sub_1002CF4BC();
  return sub_1000A2DA0();
}

uint64_t sub_1000F9228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator, v14, 1, 0);
  v5 = *v4;
  if (*v4)
  {
    swift_retain(*v4);
    ImpressionsCalculator.removeAllElements()();
    swift_release(v5);
    v6 = *v4;
  }
  else
  {
    v6 = 0;
  }
  *v4 = 0;
  swift_release(v6);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock, &v13, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = 0;
  v7[1] = 0;
  sub_10003A350(v8, v9);
  v10 = type metadata accessor for SearchTagsRibbonView(0);
  v11 = sub_100005C94((unint64_t *)&unk_10083B260, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006622E0);
  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)(a1, v10, v11);
}

uint64_t sub_1000F9318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataTextSpace;
  v2 = type metadata accessor for StaticDimension(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator));
  return sub_10003A350(*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock), *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock + 8));
}

uint64_t sub_1000F94BC()
{
  return type metadata accessor for SmallSearchLockupView(0);
}

uint64_t type metadata accessor for SmallSearchLockupView(uint64_t a1)
{
  uint64_t result;

  result = qword_10082D588;
  if (!qword_10082D588)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SmallSearchLockupView);
  return result;
}

uint64_t sub_1000F9500(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[18];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for StaticDimension(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[4] = &unk_100663EE8;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = &unk_100663EE8;
    v4[8] = &unk_100663EE8;
    v4[9] = &unk_100663F00;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = &unk_100663F00;
    v4[14] = &unk_100663EE8;
    v4[15] = &unk_100663EE8;
    v4[16] = &unk_100663F00;
    v4[17] = &unk_100663F18;
    return swift_updateClassMetadata2(a1, 256, 18, v4, a1 + 384);
  }
  return result;
}

double sub_1000F95B8(void *a1, double a2, double a3)
{
  return sub_1000F8620(a1, a2, a3);
}

uint64_t sub_1000F95DC()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_1000F9624(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*sub_1000F9674(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1000F96B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock, v4, 0, 0);
  v2 = *v1;
  sub_10003A340(*v1, v1[1]);
  return v2;
}

uint64_t sub_1000F9710(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10003A350(v6, v7);
}

uint64_t (*sub_1000F976C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1000F97B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SearchTagsRibbonView(0);
  v5 = sub_100005C94((unint64_t *)&unk_10083B260, type metadata accessor for SearchTagsRibbonView, (uint64_t)&unk_1006622E0);
  return NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)(a1, a2, v4, v5);
}

void sub_1000F9824(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __n128 v23;
  char *v24;
  int v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __n128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  int v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[3];
  __int16 v74;
  _OWORD v75[2];
  uint64_t v76;
  __int128 v77[3];
  _QWORD v78[5];
  _QWORD v79[5];
  char v80;
  char v81;

  v10 = type metadata accessor for MetadataRibbonItemViewType(0);
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  __chkstk_darwin(v10);
  v68 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v56 = *(_QWORD *)(v58 - 8);
  v12 = __chkstk_darwin(v58);
  v57 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MetadataRibbonViewLayout(0, v12);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MetadataRibbonItem(0);
  if ((Array.isNotEmpty.getter(a1, v18) & 1) == 0)
    return;
  v55 = v17;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v44 = a1;
    else
      v44 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v19 = _CocoaArrayWrapper.endIndex.getter(v44);
    if (v19)
      goto LABEL_4;
LABEL_36:
    v43 = swift_bridgeObjectRelease(a1);
    v21 = _swiftEmptyArrayStorage;
LABEL_37:
    v45 = v57;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v56 + 16))(v57, a2, v58, v43);
    v46 = v55;
    MetadataRibbonViewLayout.init(metadataRibbonItemLayoutContexts:metrics:)(v21, v45);
    MetadataRibbonViewLayout.measurements(fitting:in:)(a3, a4, a5);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v46, v14);
    return;
  }
  v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v19)
    goto LABEL_36;
LABEL_4:
  if (v19 >= 1)
  {
    v50 = v15;
    v51 = v14;
    v52 = a2;
    v53 = a3;
    v20 = 0;
    v67 = a1 & 0xC000000000000001;
    v66 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    v61 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    v60 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    v59 = enum case for MetadataRibbonItemViewType.starRating(_:);
    v54 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    v49 = enum case for MetadataRibbonItemViewType.divider(_:);
    v64 = (uint64_t)v73 + 8;
    v65 = v79;
    v21 = _swiftEmptyArrayStorage;
    v48 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    v62 = v19;
    v63 = a1;
    while (1)
    {
      if (v67)
      {
        v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, a1);
      }
      else
      {
        v22 = *(_QWORD *)(a1 + 8 * v20 + 32);
        v23 = swift_retain(v22);
      }
      v24 = v68;
      MetadataRibbonItem.viewContainerType.getter(v23);
      v25 = (*(uint64_t (**)(char *, uint64_t))(v69 + 88))(v24, v70);
      if (v25 == v66)
        break;
      if (v25 == v61)
      {
        v26 = type metadata accessor for MetadataRibbonEditorsChoiceView(0);
        v27 = (unint64_t *)&unk_10082D5E0;
        v28 = type metadata accessor for MetadataRibbonEditorsChoiceView;
        v29 = &unk_10066F690;
        goto LABEL_23;
      }
      if (v25 == v60)
      {
        v26 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        v27 = (unint64_t *)&unk_10082A978;
        v28 = type metadata accessor for MetadataRibbonIconWithLabelView;
        v29 = &unk_100666D70;
        goto LABEL_23;
      }
      if (v25 == v59)
      {
        v26 = type metadata accessor for MetadataRibbonStarRatingView(0);
        v27 = (unint64_t *)&unk_10082D5F0;
        v28 = type metadata accessor for MetadataRibbonStarRatingView;
        v29 = &unk_1006850A0;
        goto LABEL_23;
      }
      if (v25 == v54)
      {
        v26 = type metadata accessor for MetadataRibbonTagView(0);
        v27 = (unint64_t *)&unk_10082A970;
        v28 = type metadata accessor for MetadataRibbonTagView;
        v29 = &unk_10066E568;
        goto LABEL_23;
      }
      if (v25 == v49)
      {
        v26 = type metadata accessor for MetadataRibbonBarView(0);
        v27 = (unint64_t *)&unk_10082D5D0;
        v28 = type metadata accessor for MetadataRibbonBarView;
        v29 = &unk_100678768;
        goto LABEL_23;
      }
      if (v25 == v48)
      {
        v26 = type metadata accessor for MetadataRibbonHighlightedTextView(0);
        v27 = (unint64_t *)&unk_10082A968;
        v28 = type metadata accessor for MetadataRibbonHighlightedTextView;
        v29 = &unk_10066E2E8;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
      swift_release(v22);
LABEL_28:
      if (v19 == ++v20)
      {
        v43 = swift_bridgeObjectRelease(a1);
        a2 = v52;
        a3 = v53;
        v15 = v50;
        v14 = v51;
        goto LABEL_37;
      }
    }
    v26 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView(0);
    v27 = (unint64_t *)&unk_10082A980;
    v28 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
    v29 = &unk_100661980;
LABEL_23:
    v30 = sub_100005C94(v27, v28, (uint64_t)v29);
    v31 = (_QWORD *)swift_allocObject(&unk_10075A1B0, 40, 7);
    v31[2] = v26;
    v31[3] = v30;
    v31[4] = v22;
    v32 = type metadata accessor for LayoutViewPlaceholder(0);
    swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
    v33 = swift_retain(v22);
    v34 = LayoutViewPlaceholder.init(measureWith:)(sub_1000FA960, v31, v33);
    MetadataRibbonItem.id.getter(v78);
    v79[3] = v32;
    v79[4] = &protocol witness table for LayoutViewPlaceholder;
    v79[0] = v34;
    v35 = swift_retain(v34);
    LOBYTE(v32) = dispatch thunk of static MetadataRibbonItemView.isBaselineAligned.getter(v26, v30, v35) & 1;
    v80 = v32;
    LOBYTE(v31) = dispatch thunk of static MetadataRibbonItemView.shouldForceIntrinsicSizeDuringLayout.getter(v26, v30) & 1;
    v81 = (char)v31;
    sub_100061BC0((uint64_t)v78, (uint64_t)v75);
    sub_100022500((uint64_t)v65, (uint64_t)v77);
    v71 = v75[0];
    v72 = v75[1];
    *(_QWORD *)&v73[0] = v76;
    sub_10000F5F4(v77, v64);
    LOBYTE(v74) = v32;
    HIBYTE(v74) = (_BYTE)v31;
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      v21 = sub_100094EFC(0, v21[2] + 1, 1, v21);
    v19 = v62;
    a1 = v63;
    v37 = v21[2];
    v36 = v21[3];
    if (v37 >= v36 >> 1)
      v21 = sub_100094EFC((_QWORD *)(v36 > 1), v37 + 1, 1, v21);
    v21[2] = v37 + 1;
    v38 = &v21[11 * v37];
    v39 = v72;
    *((_OWORD *)v38 + 2) = v71;
    *((_OWORD *)v38 + 3) = v39;
    v40 = v73[0];
    v41 = v73[1];
    v42 = v73[2];
    *((_WORD *)v38 + 56) = v74;
    *((_OWORD *)v38 + 5) = v41;
    *((_OWORD *)v38 + 6) = v42;
    *((_OWORD *)v38 + 4) = v40;
    swift_release(v34);
    swift_release(v22);
    sub_1000057AC((uint64_t)v78, (uint64_t *)&unk_10082D5C0);
    goto LABEL_28;
  }
  __break(1u);
}

double sub_1000F9E80(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, uint64_t a11, void *a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  id v41;
  char v42;
  uint64_t v43;
  double v44;
  double v45;
  __n128 v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(_QWORD, _QWORD);
  double v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  _QWORD *v69;
  uint64_t v70;
  void (*v71)(_QWORD *, _QWORD, uint64_t);
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  double v75;
  id v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  uint64_t v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  __n128 v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  double v122;
  int v124;
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int v132;
  id v133;
  void (*v134)(_QWORD *, _QWORD, uint64_t);
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  void (*v139)(_QWORD, _QWORD);
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  _QWORD v160[5];
  _QWORD v161[5];
  _BYTE v162[40];
  _BYTE v163[32];
  uint64_t v164;
  _BYTE v165[32];
  uint64_t v166;
  _BYTE v167[32];
  uint64_t v168;
  _BYTE v169[32];
  uint64_t v170;
  _QWORD v171[5];
  _BYTE v172[32];
  uint64_t v173;
  _BYTE v174[32];
  uint64_t v175;
  _BYTE v176[40];
  _BYTE v177[40];
  _BYTE v178[32];
  uint64_t v179;
  _QWORD v180[5];
  _QWORD v181[5];
  _QWORD v182[5];
  _QWORD v183[4];
  uint64_t v184;

  v128 = a8;
  v147 = a7;
  v144 = a5;
  v145 = a6;
  v140 = a3;
  v141 = a4;
  v138 = a1;
  v139 = a2;
  v14 = type metadata accessor for SmallSearchLockupLayout(0);
  v156 = *(_QWORD *)(v14 - 8);
  v157 = v14;
  __chkstk_darwin(v14);
  v155 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10007B804((uint64_t *)&unk_10084E110);
  __chkstk_darwin(v16);
  v127 = (uint64_t)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MetadataRibbonViewLayout.Metrics(0);
  v130 = *(_QWORD *)(v18 - 8);
  v131 = v18;
  v19 = __chkstk_darwin(v18);
  v129 = (char *)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for LabelPlaceholderCompatibility(0, v19);
  v136 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v142 = (char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for OfferButtonMetrics(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v127 - v28;
  v30 = type metadata accessor for SmallSearchLockupLayout.Metrics(0, v27);
  v31 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v150 = (char *)&v127 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v35 = (char *)&v127 - v34;
  if (qword_100826C70 != -1)
    swift_once(&qword_100826C70, sub_1000F6C8C);
  v146 = a11;
  v36 = sub_10007AF70(v30, (uint64_t)qword_10088A428);
  v151 = v31;
  v148 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v37 = v148(v35, v36, v30);
  v38 = UITraitCollection.prefersAccessibilityLayouts.getter(v37);
  v159 = v30;
  if ((v38 & 1) != 0)
  {
    if (qword_100828FA8 != -1)
      swift_once(&qword_100828FA8, sub_100574ED4);
    v39 = qword_10084DF08;
  }
  else
  {
    if (qword_100828FB0 != -1)
      swift_once(&qword_100828FB0, sub_100575380);
    v39 = qword_10084DF20;
  }
  v40 = sub_10007AF70(v22, (uint64_t)v39);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v40, v22);
  v153 = v23;
  v154 = v22;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v29, v25, v22);
  v41 = objc_msgSend(a12, "preferredContentSizeCategory");
  v42 = UIContentSizeCategory.isAccessibilityCategory.getter(v41);

  v44 = OfferButtonMetrics.minimumSize.getter(v43);
  v152 = v29;
  v45 = OfferButtonMetrics.estimatedHeight.getter();
  v46.n128_f64[0] = v45 + v45;
  if ((v42 & 1) == 0)
    v46.n128_f64[0] = v45;
  v47 = SmallSearchLockupLayout.Metrics.offerButtonSize.setter(v44, v46);
  v158 = v35;
  v48 = SmallSearchLockupLayout.Metrics.artworkSize.getter(v47);
  v50 = v49;
  v51 = type metadata accessor for LayoutViewPlaceholder(0);
  v52 = *(unsigned int *)(v51 + 48);
  v53 = *(unsigned __int16 *)(v51 + 52);
  v135 = v51;
  swift_allocObject(v51, v52, v53);
  v149 = LayoutViewPlaceholder.init(representing:)(v48, v50);
  v54 = objc_opt_self(UIFont);
  v55 = v139;
  *(_QWORD *)&v56 = swift_bridgeObjectRetain(v139).n128_u64[0];
  v133 = (id)v54;
  v57 = objc_msgSend((id)v54, "preferredFontForTextStyle:", UIFontTextStyleBody, v56);
  v58 = type metadata accessor for Feature(0);
  v183[3] = v58;
  v184 = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v59 = v184;
  v60 = sub_100024638(v183);
  v61 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v134 = *(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v58 - 8) + 104);
  v132 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v134(v60, enum case for Feature.measurement_with_labelplaceholder(_:), v58);
  v62 = isFeatureEnabled(_:)(v183);
  v137 = a12;
  v63 = v62;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v183);
  v64 = v142;
  v65 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v138, v55, v57, 4, 0, 0, 0, 0, v63 & 1);
  LabelPlaceholderCompatibility.layoutTextView.getter(v183, v65);
  v139 = *(void (**)(_QWORD, _QWORD))(v136 + 8);
  v66 = v143;
  v139(v64, v143);
  v67 = v141;
  v68 = objc_msgSend((id)v54, "preferredFontForTextStyle:", UIFontTextStyleFootnote, swift_bridgeObjectRetain(v141).n128_f64[0]);
  v182[3] = v58;
  v182[4] = v59;
  v69 = sub_100024638(v182);
  v70 = v61;
  v71 = v134;
  v134(v69, v70, v58);
  LOBYTE(v54) = isFeatureEnabled(_:)(v182);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v182);
  LOBYTE(v124) = v54 & 1;
  v72 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v140, v67, v68, 4, 0, 0, 0, 0, v124);
  LabelPlaceholderCompatibility.layoutTextView.getter(v182, v72);
  v73 = (void (*)(char *, uint64_t))v139;
  v139(v64, v66);
  v74 = v145;
  *(_QWORD *)&v75 = swift_bridgeObjectRetain(v145).n128_u64[0];
  v76 = objc_msgSend(v133, "preferredFontForTextStyle:", UIFontTextStyleFootnote, v75);
  v181[3] = v58;
  v181[4] = v59;
  v77 = sub_100024638(v181);
  v71(v77, v132, v58);
  LOBYTE(v54) = isFeatureEnabled(_:)(v181);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v181);
  LOBYTE(v125) = v54 & 1;
  v78 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v144, v74, v76, 4, 0, 0, 2, 0, v125);
  LabelPlaceholderCompatibility.layoutTextView.getter(v181, v78);
  v73(v64, v66);
  v79 = v147;
  LODWORD(v145) = sub_1000F69D8(0, v147) & (v79 != 0);
  if ((_DWORD)v145 == 1)
  {
    v80 = v135;
    v81 = objc_allocWithZone((Class)type metadata accessor for TraitEnvironmentPlaceholder(0));
    v82 = v137;
    v83 = (void *)TraitEnvironmentPlaceholder.init(traitCollection:)(v137);
    v84 = v127;
    sub_1000FA8F4(v128, v127);
    v86 = v130;
    v85 = v131;
    v87 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v84, 1, v131);
    v88 = (uint64_t)v129;
    if ((_DWORD)v87 == 1)
    {
      static MetadataRibbonViewLayout.Metrics.standard.getter(v87);
      sub_1000057AC(v84, (uint64_t *)&unk_10084E110);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v129, v84, v85);
    }
    v89 = v83;
    sub_1000F9824(v79, v88, (uint64_t)v89, a9, a10);
    v91 = v90;
    v93 = v92;
    v95 = v94;
    v97 = v96;

    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v88, v85);
    swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
    v147 = LayoutViewPlaceholder.init(measurements:)(v91, v93, v95, v97);
  }
  else
  {
    v80 = v135;
    swift_allocObject(v135, *(unsigned int *)(v135 + 48), *(unsigned __int16 *)(v135 + 52));
    v147 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
    v82 = v137;
  }
  v98 = v146;
  LODWORD(v144) = sub_1000F69D8(v146, 0) & (v98 != 0);
  if ((_DWORD)v144 == 1)
  {
    sub_1000A3778(v98, a9, a10);
    v100 = v99;
    v102 = v101;
    v104 = v103;
    v106 = v105;
    swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
    v107 = LayoutViewPlaceholder.init(measurements:)(v100, v102, v104, v106);
  }
  else
  {
    swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
    v107 = LayoutViewPlaceholder.init(representing:)(0.0, 0.0);
  }
  v108 = v107;
  v109 = v150;
  v148(v150, (uint64_t)v158, v159);
  v180[4] = &protocol witness table for LayoutViewPlaceholder;
  v180[3] = v80;
  v110 = v149;
  v180[0] = v149;
  v179 = 0;
  memset(v178, 0, sizeof(v178));
  sub_100022500((uint64_t)v183, (uint64_t)v177);
  sub_100022500((uint64_t)v182, (uint64_t)v176);
  v175 = 0;
  memset(v174, 0, sizeof(v174));
  v173 = 0;
  memset(v172, 0, sizeof(v172));
  v111 = swift_retain(v110);
  v112 = static LayoutViewPlaceholder.withIdentityMeasurement.getter(v111);
  v171[4] = &protocol witness table for LayoutViewPlaceholder;
  v171[3] = v80;
  v171[0] = v112;
  v170 = 0;
  memset(v169, 0, sizeof(v169));
  v168 = 0;
  memset(v167, 0, sizeof(v167));
  v166 = 0;
  memset(v165, 0, sizeof(v165));
  v164 = 0;
  memset(v163, 0, sizeof(v163));
  sub_100022500((uint64_t)v181, (uint64_t)v162);
  v161[3] = v80;
  v161[4] = &protocol witness table for LayoutViewPlaceholder;
  v113 = v147;
  v160[4] = &protocol witness table for LayoutViewPlaceholder;
  v161[0] = v147;
  v160[3] = v80;
  v160[0] = v108;
  swift_retain(v147);
  v114 = swift_retain(v108);
  *(_WORD *)((char *)&v126 + 1) = v144;
  LOBYTE(v126) = v145;
  v115 = v155;
  SmallSearchLockupLayout.init(metrics:artworkView:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:userRatingView:ratingCountLabel:editorsChoiceView:adButton:description:includesRatings:metadataRibbonView:searchTagsRibbonView:includesMetadataRibbon:includesSearchTagsRibbon:includesMetadataInformationInLockup:)(v109, v180, v178, v177, v176, v174, v172, v171, v114, v169, v167, v165, v163, v162, 0, v161, v160, v126);
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v116 = sub_10007B804((uint64_t *)&unk_10082B4A0);
  v117 = swift_allocObject(v116, 40, 7);
  *(_OWORD *)(v117 + 16) = xmmword_100661700;
  *(_QWORD *)(v117 + 32) = v82;
  v118 = v82;
  v119 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v117);
  v120 = sub_100005C94((unint64_t *)&unk_10082D5B0, (uint64_t (*)(uint64_t))&type metadata accessor for SmallSearchLockupLayout, (uint64_t)&protocol conformance descriptor for SmallSearchLockupLayout);
  v121 = v157;
  v122 = dispatch thunk of Measurable.measurements(fitting:in:)(v119, v157, v120, a9, a10);
  swift_release(v108);
  swift_release(v113);
  swift_release(v110);

  (*(void (**)(char *, uint64_t))(v156 + 8))(v115, v121);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v181);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v182);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v183);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v152, v154);
  (*(void (**)(char *, uint64_t))(v151 + 8))(v158, v159);
  return v122;
}

uint64_t sub_1000FA8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804((uint64_t *)&unk_10084E110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FA93C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000FA960(uint64_t a1)
{
  uint64_t *v1;

  return sub_1002D039C(a1, v1[2], v1[3], v1[4]);
}

uint64_t ButtonPlaceholder.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder____lazy_storage___button) = 0;
  v4 = v3 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration;
  v5 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a1, v5);
  return v3;
}

uint64_t ButtonPlaceholder.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder____lazy_storage___button) = 0;
  v3 = v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration;
  v4 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t ButtonPlaceholder.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration;
  v4 = type metadata accessor for UIButton.Configuration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id sub_1000FAA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC8AppStore17ButtonPlaceholder____lazy_storage___button;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder____lazy_storage___button);
  if (v7)
  {
    v8 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder____lazy_storage___button);
  }
  else
  {
    sub_1000FADAC();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration, v2);
    v9 = (void *)UIButton.init(configuration:primaryAction:)(v5, 0);
    v10 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v9;
    v8 = v9;

    v7 = 0;
  }
  v11 = v7;
  return v8;
}

double ButtonPlaceholder.measure(toFit:with:)(uint64_t a1, double a2, double a3)
{
  id v6;
  double v7;

  v6 = sub_1000FAA84();
  v7 = UIButton.measure(toFit:with:)(a1, a2, a3);

  return v7;
}

uint64_t ButtonPlaceholder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration;
  v2 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t ButtonPlaceholder.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration;
  v2 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

double sub_1000FAC80(uint64_t a1, double a2, double a3)
{
  id v6;
  double v7;

  v6 = sub_1000FAA84();
  v7 = UIButton.measure(toFit:with:)(a1, a2, a3);

  return v7;
}

uint64_t sub_1000FACF4()
{
  return type metadata accessor for ButtonPlaceholder(0);
}

uint64_t type metadata accessor for ButtonPlaceholder(uint64_t a1)
{
  uint64_t result;

  result = qword_10082D648;
  if (!qword_10082D648)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ButtonPlaceholder);
  return result;
}

uint64_t sub_1000FAD38(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UIButton.Configuration(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1000FADAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10083C2E0;
  if (!qword_10083C2E0)
  {
    v1 = objc_opt_self(UIButton);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10083C2E0);
  }
  return result;
}

BOOL sub_1000FADE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  void *v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  double Width;
  double Height;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  double v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  id v64;
  uint64_t v65;
  _QWORD *v66;
  double v67;
  __n128 v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t ObjectType;
  _QWORD v87[3];
  uint64_t v88;
  uint64_t v89;
  char v90[32];
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;

  ObjectType = swift_getObjectType();
  v1 = type metadata accessor for FontUseCase(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FloatingPointRoundingRule(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ProductAnnotationLayout.Metrics(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10007B804((uint64_t *)&unk_100833700);
  __chkstk_darwin(v14);
  v18 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary + 8))
    return 1;
  v79 = v9;
  v80 = v6;
  v19 = ObjectType;
  v84 = v1;
  v85 = v13;
  v81 = v11;
  v82 = v10;
  v83 = v2;
  v20 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems;
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems);
  v22 = v0;
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v71 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems);
    else
      v71 = v21 & 0xFFFFFFFFFFFFFF8;
    v72 = v15;
    v73 = v17;
    v74 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRetain(v21);
    v75 = _CocoaArrayWrapper.endIndex.getter(v71);
    swift_bridgeObjectRelease(v21);
    v18 = v74;
    v17 = v73;
    v15 = v72;
    if (v75 != 1)
      return 1;
  }
  else if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    return 1;
  }
  v23 = v18;
  v24 = v17;
  v25 = v15;
  v26 = *(_QWORD *)(v22 + v20);
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v76 = *(_QWORD *)(v22 + v20);
    else
      v76 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v22 + v20));
    v28 = v4;
    if (!_CocoaArrayWrapper.endIndex.getter(v76))
      goto LABEL_23;
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v22 + v20));
    v28 = v4;
    if (!v27)
    {
LABEL_23:
      swift_bridgeObjectRelease(v26);
      return 1;
    }
  }
  v29 = v5;
  if ((v26 & 0xC000000000000001) != 0)
  {
    v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v26);
  }
  else
  {
    if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_41;
    }
    v5 = *(_QWORD *)(v26 + 32);
    swift_retain(v5);
  }
  v30 = swift_bridgeObjectRelease(v26);
  v26 = AnnotationItem_V2.textPairs.getter(v30);
  if (!((unint64_t)v26 >> 62))
  {
    v31 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
LABEL_41:
  if (v26 < 0)
    v77 = v26;
  else
    v77 = v26 & 0xFFFFFFFFFFFFFF8;
  v31 = _CocoaArrayWrapper.endIndex.getter(v77);
LABEL_11:
  swift_bridgeObjectRelease(v26);
  if (v31)
  {
    swift_release(v5);
    return 1;
  }
  v32 = v22 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction;
  v33 = swift_beginAccess(v22 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction, v90, 0, 0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v24 + 48))(v32, 1, v25, v33))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v23, v32, v25);
    ObjectGraphPair.value.getter(v87, v25);
    v59 = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v23, v25);
    v60 = v87[0];
    Action.title.getter(v59);
    v26 = v61;
    swift_release(v60);
    if (v26)
    {
      swift_release(v5);
      goto LABEL_23;
    }
  }
  v34 = *(void **)(v22 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel);
  v35 = v19;
  LayoutMarginsAware<>.layoutFrame.getter(v19);
  objc_msgSend(v34, "sizeThatFits:", v36, v37);
  v39 = v38;
  v41 = v40;
  if (qword_100826C98 != -1)
    swift_once(&qword_100826C98, sub_1000FBEC0);
  v42 = sub_10007B804(&qword_10082D800);
  sub_10007AF70(v42, (uint64_t)qword_10088A4F0);
  v87[0] = v22;
  v43 = v22;
  Conditional.evaluate(with:)(v87, v42);
  v44 = static ProductAnnotationLayout.isSummaryPlacedBelow(in:)(v22);
  v45 = v81;
  v46 = v5;
  if ((v44 & 1) != 0)
  {
    *(_QWORD *)&v91.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v35).n128_u64[0];
    Width = CGRectGetWidth(v91);
    *(_QWORD *)&v92.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v35).n128_u64[0];
    Height = CGRectGetHeight(v92) - v41;
  }
  else
  {
    ProductAnnotationLayout.Metrics.horizontalSpacing.getter(v87);
    v49 = v88;
    v50 = v89;
    sub_100060B40(v87, v88);
    v51 = v79;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v49);
    v52 = AnyDimension.value(in:rounded:)(v43, v51, v49, v50);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v51, v29);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v87);
    *(_QWORD *)&v93.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v35).n128_u64[0];
    Width = CGRectGetWidth(v93) - (v39 + v52);
    *(_QWORD *)&v94.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v35).n128_u64[0];
    Height = CGRectGetHeight(v94);
  }
  v53 = *(void **)(v43 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel);
  v54 = objc_msgSend(v53, "text");
  if (v54)
  {
    v55 = v54;
    v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v58 = v57;

  }
  else
  {
    v56 = 0;
    v58 = 0;
  }
  if (qword_100826C90 != -1)
    swift_once(&qword_100826C90, sub_1000FBD58);
  v63 = sub_10007B804((uint64_t *)&unk_10082E270);
  sub_10007AF70(v63, (uint64_t)qword_10082D700);
  v87[0] = v43;
  Conditional.evaluate(with:)(v87, v63);
  v64 = objc_msgSend(v53, "numberOfLines");
  v65 = type metadata accessor for Feature(0);
  v88 = v65;
  v89 = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v66 = sub_100024638(v87);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v65 - 8) + 104))(v66, enum case for Feature.measurement_with_labelplaceholder(_:), v65);
  LOBYTE(v65) = isFeatureEnabled(_:)(v87);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v87);
  v67 = static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)(v56, v58, v28, 4, 0, 0, v64, 0, Width, 1.79769313e308, v43, v65 & 1);
  v68 = swift_bridgeObjectRelease(v58);
  (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v28, v84, v68);
  objc_msgSend(v53, "sizeThatFits:", Width, Height);
  v70 = v69;
  swift_release(v46);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v85, v82);
  return floor(v70 - v67) > 0.0;
}

uint64_t sub_1000FB484()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  _QWORD *v28;
  void (*v29)(_QWORD *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void (*v33)(char *, uint64_t);
  _QWORD *v34;
  void (*v36)(_QWORD *, char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  unsigned int v43;
  _QWORD v44[3];
  void *v45;
  void *v46;
  _QWORD v47[3];
  uint64_t v48;
  void *v49;
  _QWORD v50[5];
  _QWORD v51[3];
  void *v52;
  void *v53;
  _QWORD v54[3];
  uint64_t v55;
  void *v56;
  _QWORD v57[3];
  uint64_t v58;
  void *v59;
  _QWORD v60[6];

  v0 = type metadata accessor for FontSource(0);
  v1 = *(_QWORD **)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ProductAnnotationLayout.Metrics(0, v2);
  sub_100033BAC(v5, qword_10088A4C0);
  v42 = sub_10007AF70(v5, (uint64_t)qword_10088A4C0);
  if (qword_100826CB8 != -1)
    swift_once(&qword_100826CB8, sub_1000FC1B4);
  v6 = (void *)qword_10082D760;
  objc_msgSend((id)qword_10082D760, "size");
  v8 = v7;
  v10 = v9;
  objc_msgSend(v6, "contentInsets");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v60[3] = &type metadata for Double;
  v60[4] = &protocol witness table for Double;
  v60[0] = 0x401C000000000000;
  if (qword_100827ED8 != -1)
    swift_once(&qword_100827ED8, sub_1003A58D4);
  v19 = type metadata accessor for FontUseCase(0);
  v20 = sub_10007AF70(v19, (uint64_t)qword_10088D6B8);
  v41 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v39 = v19;
  v41(v4, v20, v19);
  v43 = enum case for FontSource.useCase(_:);
  v40 = (void (*)(char *))v1[13];
  v40(v4);
  v58 = type metadata accessor for StaticDimension(0);
  v59 = &protocol witness table for StaticDimension;
  v21 = v58;
  v38 = v58;
  sub_100024638(v57);
  v55 = v0;
  v56 = &protocol witness table for FontSource;
  v22 = sub_100024638(v54);
  v36 = (void (*)(_QWORD *, char *, uint64_t))v1[2];
  v36(v22, v4, v0);
  StaticDimension.init(_:scaledLike:)(v54, 15.0);
  v23 = (void (*)(char *, uint64_t))v1[1];
  v23(v4, v0);
  v37 = v23;
  v24 = v19;
  v25 = v41;
  v41(v4, v20, v24);
  v26 = v43;
  v27 = (void (*)(char *, uint64_t, uint64_t))v40;
  ((void (*)(char *, _QWORD, uint64_t))v40)(v4, v43, v0);
  v55 = v21;
  v56 = &protocol witness table for StaticDimension;
  sub_100024638(v54);
  v52 = (void *)v0;
  v53 = &protocol witness table for FontSource;
  v28 = sub_100024638(v51);
  v29 = v36;
  v36(v28, v4, v0);
  StaticDimension.init(_:scaledLike:)(v51, 20.0);
  v23(v4, v0);
  v53 = &protocol witness table for Double;
  v52 = &type metadata for Double;
  v51[0] = 0x4030000000000000;
  v30 = v39;
  v25(v4, v20, v39);
  v27(v4, v26, v0);
  v31 = v38;
  v50[3] = v38;
  v50[4] = &protocol witness table for StaticDimension;
  sub_100024638(v50);
  v48 = v0;
  v49 = &protocol witness table for FontSource;
  v32 = sub_100024638(v47);
  v29(v32, v4, v0);
  StaticDimension.init(_:scaledLike:)(v47, 20.0);
  v33 = v37;
  v37(v4, v0);
  v25(v4, v20, v30);
  v27(v4, v43, v0);
  v48 = v31;
  v49 = &protocol witness table for StaticDimension;
  sub_100024638(v47);
  v45 = (void *)v0;
  v46 = &protocol witness table for FontSource;
  v34 = sub_100024638(v44);
  v29(v34, v4, v0);
  StaticDimension.init(_:scaledLike:)(v44, 8.0);
  v33(v4, v0);
  v46 = &protocol witness table for Double;
  v45 = &type metadata for Double;
  v44[0] = 0x4034000000000000;
  return ProductAnnotationLayout.Metrics.init(disclosureSize:disclosureContentInsets:disclosureMargin:titleSpace:detailSpace:detailMargin:linkSpace:bottomSpace:horizontalSpacing:shouldDisclosureAlignWithContent:)(v60, v57, v54, v51, v50, v47, v44, 0, v8, v10, v12, v14, v16, v18);
}

uint64_t sub_1000FB8D4()
{
  uint64_t v0;
  _QWORD *v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *);
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(_QWORD *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void (*v33)(char *, uint64_t);
  _QWORD *v34;
  uint64_t v36;
  void (*v37)(_QWORD *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  _QWORD v42[3];
  void *v43;
  void *v44;
  _QWORD v45[3];
  uint64_t v46;
  void *v47;
  _QWORD v48[5];
  _QWORD v49[3];
  void *v50;
  void *v51;
  _QWORD v52[3];
  uint64_t v53;
  void *v54;
  _QWORD v55[5];
  _QWORD v56[6];

  v0 = type metadata accessor for FontSource(0);
  v1 = *(_QWORD **)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ProductAnnotationLayout.Metrics(0, v2);
  sub_100033BAC(v5, qword_10088A4D8);
  v39 = sub_10007AF70(v5, (uint64_t)qword_10088A4D8);
  if (qword_100826CB8 != -1)
    swift_once(&qword_100826CB8, sub_1000FC1B4);
  v6 = (void *)qword_10082D760;
  objc_msgSend((id)qword_10082D760, "size");
  v8 = v7;
  v10 = v9;
  objc_msgSend(v6, "contentInsets");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v56[3] = &type metadata for Double;
  v56[4] = &protocol witness table for Double;
  v56[0] = 0x401C000000000000;
  if (qword_100827ED0 != -1)
    swift_once(&qword_100827ED0, sub_1003A58BC);
  v19 = type metadata accessor for FontUseCase(0);
  v20 = sub_10007AF70(v19, (uint64_t)qword_10088D6A0);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v38 = v20;
  v22 = v21;
  ((void (*)(char *))v21)(v4);
  v23 = enum case for FontSource.useCase(_:);
  v24 = (void (*)(char *))v1[13];
  v24(v4);
  v41 = type metadata accessor for StaticDimension(0);
  v55[3] = v41;
  v55[4] = &protocol witness table for StaticDimension;
  sub_100024638(v55);
  v53 = v0;
  v54 = &protocol witness table for FontSource;
  v25 = sub_100024638(v52);
  v37 = (void (*)(_QWORD *, char *, uint64_t))v1[2];
  v37(v25, v4, v0);
  StaticDimension.init(_:scaledLike:)(v52, 20.0);
  v40 = (void (*)(char *, uint64_t))v1[1];
  v40(v4, v0);
  if (qword_100827ED8 != -1)
    swift_once(&qword_100827ED8, sub_1003A58D4);
  v26 = sub_10007AF70(v19, (uint64_t)qword_10088D6B8);
  v22(v4, v26, v19);
  v27 = v23;
  HIDWORD(v36) = v23;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v4, v23, v0);
  v53 = v41;
  v54 = &protocol witness table for StaticDimension;
  sub_100024638(v52);
  v50 = (void *)v0;
  v51 = &protocol witness table for FontSource;
  v28 = sub_100024638(v49);
  v29 = v37;
  v37(v28, v4, v0);
  StaticDimension.init(_:scaledLike:)(v49, 20.0);
  v40(v4, v0);
  v51 = &protocol witness table for Double;
  v50 = &type metadata for Double;
  v49[0] = 0x4030000000000000;
  v30 = v38;
  v22(v4, v38, v19);
  ((void (*)(char *, uint64_t, uint64_t))v24)(v4, v27, v0);
  v31 = v41;
  v48[3] = v41;
  v48[4] = &protocol witness table for StaticDimension;
  sub_100024638(v48);
  v46 = v0;
  v47 = &protocol witness table for FontSource;
  v32 = sub_100024638(v45);
  v29(v32, v4, v0);
  StaticDimension.init(_:scaledLike:)(v45, 20.0);
  v33 = v40;
  v40(v4, v0);
  v22(v4, v30, v19);
  ((void (*)(char *, _QWORD, uint64_t))v24)(v4, HIDWORD(v36), v0);
  v46 = v31;
  v47 = &protocol witness table for StaticDimension;
  sub_100024638(v45);
  v43 = (void *)v0;
  v44 = &protocol witness table for FontSource;
  v34 = sub_100024638(v42);
  v29(v34, v4, v0);
  StaticDimension.init(_:scaledLike:)(v42, 8.0);
  v33(v4, v0);
  v44 = &protocol witness table for Double;
  v43 = &type metadata for Double;
  v42[0] = 0x4034000000000000;
  return ProductAnnotationLayout.Metrics.init(disclosureSize:disclosureContentInsets:disclosureMargin:titleSpace:detailSpace:detailMargin:linkSpace:bottomSpace:horizontalSpacing:shouldDisclosureAlignWithContent:)(v56, v55, v52, v49, v48, v45, v42, 0, v8, v10, v12, v14, v16, v18);
}

uint64_t sub_1000FBD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for FontUseCase(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_10007B804((uint64_t *)&unk_10082E270);
  sub_100033BAC(v7, qword_10082D700);
  sub_10007AF70(v7, (uint64_t)qword_10082D700);
  if (qword_100827ED8 != -1)
    swift_once(&qword_100827ED8, sub_1003A58D4);
  v8 = sub_10007AF70(v0, (uint64_t)qword_10088D6B8);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  if (qword_100827ED0 != -1)
    swift_once(&qword_100827ED0, sub_1003A58BC);
  v10 = sub_10007AF70(v0, (uint64_t)qword_10088D6A0);
  v9(v3, v10, v0);
  v11 = sub_10007B804(&qword_10082E6C0);
  return Conditional<>.init(regularValue:compactValue:)(v6, v3, v11, v0);
}

uint64_t sub_1000FBEC0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for ProductAnnotationLayout.Metrics(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - v6;
  v8 = sub_10007B804(&qword_10082D800);
  sub_100033BAC(v8, qword_10088A4F0);
  sub_10007AF70(v8, (uint64_t)qword_10088A4F0);
  if (qword_100826C80 != -1)
    swift_once(&qword_100826C80, sub_1000FB484);
  v9 = sub_10007AF70(v1, (uint64_t)qword_10088A4C0);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v10(v7, v9, v1);
  if (qword_100826C88 != -1)
    swift_once(&qword_100826C88, sub_1000FB8D4);
  v11 = sub_10007AF70(v1, (uint64_t)qword_10088A4D8);
  v10(v4, v11, v1);
  v12 = sub_10007B804(&qword_10082E6C0);
  return Conditional<>.init(regularValue:compactValue:)(v7, v4, v12, v1);
}

uint64_t sub_1000FC028(uint64_t a1)
{
  return sub_1000FC130(a1, qword_10082D718);
}

uint64_t sub_1000FC034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_10007B804((uint64_t *)&unk_10082D600);
  sub_100033BAC(v0, qword_10082D730);
  sub_10007AF70(v0, (uint64_t)qword_10082D730);
  v1 = sub_10007B804(&qword_10082E6C0);
  type metadata accessor for NSTextAlignment(0);
  return Conditional.init(_:)(sub_1000FC0B0, 0, v1, v2);
}

uint64_t sub_1000FC0B0@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = objc_msgSend(*a1, "traitCollection");
  v5 = UITraitCollection.prefersRightToLeftLayouts.getter();

  result = static ProductAnnotationLayout.isSummaryPlacedBelow(in:)(v3);
  v7 = 2;
  if ((v5 & 1) != 0)
    v8 = 0;
  else
    v8 = 2;
  if ((v5 & 1) == 0)
    v7 = 0;
  if ((result & 1) == 0)
    v7 = v8;
  *a2 = v7;
  return result;
}

uint64_t sub_1000FC124(uint64_t a1)
{
  return sub_1000FC130(a1, qword_10082D748);
}

uint64_t sub_1000FC130(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_10007B804((uint64_t *)&unk_10082D600);
  sub_100033BAC(v3, a2);
  sub_10007AF70(v3, (uint64_t)a2);
  v7 = 2;
  v8 = 0;
  v4 = sub_10007B804(&qword_10082E6C0);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)(&v8, &v7, v4, v5);
}

uint64_t sub_1000FC1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for SystemImage(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for SystemImage.chevronDown(_:), v0);
  v4 = static SystemImage.load(_:with:)(v3, 0);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_10082D760 = v4;
  return result;
}

char *sub_1000FC254(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  objc_class *ObjCClassFromMetadata;
  id v26;
  id v27;
  char *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  objc_super v53;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = sub_10007B804(&qword_10082D7E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v4[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_itemLayoutContext];
  v15 = type metadata accessor for ItemLayoutContext(0, v14);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 1, 1, v15);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel] = 0;
  v16 = _s14descr10075D9C1O8ItemViewCMa();
  v17 = v4;
  ViewRecycler.init()(v16);
  v18 = sub_10002A538(&qword_10082D7E8, &qword_10082D7E0, (uint64_t)&protocol conformance descriptor for ViewRecycler<A>);
  ReusePool.init(recycler:limit:)(v12, 5, v10, v18);
  *(_QWORD *)&v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_separatorLineView] = 0;
  v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isSeparatorDisplayed] = 0;
  v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] = 0;
  v19 = &v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v20 = &v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems] = _swiftEmptyArrayStorage;
  v21 = &v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
  v22 = sub_10007B804((uint64_t *)&unk_100833700);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  if (qword_100826CB8 != -1)
    swift_once(&qword_100826CB8, sub_1000FC1B4);
  v23 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", qword_10082D760);
  *(_QWORD *)&v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView] = v23;
  v24 = type metadata accessor for DynamicTypeLabel(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v24);
  v26 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel] = v26;
  v27 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  *(_QWORD *)&v17[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel] = v27;

  v53.receiver = v17;
  v53.super_class = ObjectType;
  v28 = (char *)objc_msgSendSuper2(&v53, "initWithFrame:", a1, a2, a3, a4);
  v29 = objc_msgSend(v28, "contentView");
  sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
  v30 = (void *)static UIColor.defaultBackground.getter();
  objc_msgSend(v29, "setBackgroundColor:", v30);

  v31 = objc_msgSend(v28, "contentView");
  objc_msgSend(v31, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v32 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView;
  v33 = *(id *)&v28[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView];
  v34 = (void *)static UIColor.secondaryText.getter(v33);
  objc_msgSend(v33, "setTintColor:", v34);

  v35 = objc_msgSend(v28, "contentView");
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v28[v32]);

  v36 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel;
  v37 = *(id *)&v28[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

  v38 = *(void **)&v28[v36];
  objc_msgSend(v38, "setNumberOfLines:", 1);
  v39 = v38;
  v40 = (void *)static UIColor.secondaryText.getter(v39);
  objc_msgSend(v39, "setTextColor:", v40);

  v41 = *(id *)&v28[v36];
  v42 = (void *)static UIColor.defaultBackground.getter();
  objc_msgSend(v41, "setBackgroundColor:", v42);

  v43 = objc_msgSend(v28, "contentView");
  objc_msgSend(v43, "addSubview:", *(_QWORD *)&v28[v36]);

  v44 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel;
  v45 = *(id *)&v28[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

  v46 = *(void **)&v28[v44];
  objc_msgSend(v46, "setNumberOfLines:", 1);
  v47 = v46;
  v48 = (void *)static UIColor.primaryText.getter();
  objc_msgSend(v47, "setTextColor:", v48);

  v49 = *(id *)&v28[v44];
  v50 = (void *)static UIColor.defaultBackground.getter();
  objc_msgSend(v49, "setBackgroundColor:", v50);

  v51 = objc_msgSend(v28, "contentView");
  objc_msgSend(v51, "addSubview:", *(_QWORD *)&v28[v44]);

  sub_1000FC77C();
  return v28;
}

void sub_1000FC77C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel);
  if (qword_100826CA0 != -1)
    swift_once(&qword_100826CA0, sub_1000FC028);
  v3 = sub_10007B804((uint64_t *)&unk_10082D600);
  sub_10007AF70(v3, (uint64_t)qword_10082D718);
  v8 = v0;
  Conditional.evaluate(with:)(&v8, v3);
  objc_msgSend(v2, "setTextAlignment:", v9);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel);
  if (qword_100826CA8 != -1)
    swift_once(&qword_100826CA8, sub_1000FC034);
  sub_10007AF70(v3, (uint64_t)qword_10082D730);
  v8 = v0;
  Conditional.evaluate(with:)(&v8, v3);
  objc_msgSend(v4, "setTextAlignment:", v9);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel);
  if (v5)
  {
    v6 = qword_100826CB0;
    v7 = v5;
    if (v6 != -1)
      swift_once(&qword_100826CB0, sub_1000FC124);
    sub_10007AF70(v3, (uint64_t)qword_10082D748);
    v8 = v1;
    Conditional.evaluate(with:)(&v8, v3);
    objc_msgSend(v7, "setTextAlignment:", v9);

  }
}

void sub_1000FC958()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  double v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  NSString v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  char v26[24];
  objc_super v27;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_10007B804((uint64_t *)&unk_100835F20);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27.receiver = v0;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "prepareForReuse", v3);
  v6 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText + 8];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v8 = swift_bridgeObjectRelease(v7).n128_u64[0];
  v9 = *(void **)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel];
  v10 = *((_QWORD *)v6 + 1);
  if (v10)
  {
    swift_bridgeObjectRetain(v10);
    v11 = String._bridgeToObjectiveC()();
    v8 = swift_bridgeObjectRelease(v10).n128_u64[0];
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v9, "setText:", v11, *(double *)&v8);

  objc_msgSend(v0, "setNeedsLayout");
  v12 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary];
  v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary + 8];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  swift_bridgeObjectRelease(v13);
  sub_1000FD8B8();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView], "setHidden:", 0);
  v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v14);
  v15 = (uint64_t *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews], v26, 1, 0);
  v16 = *v15;
  if (!((unint64_t)*v15 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v15);
    if (v17)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease(v16);
    v22 = *v15;
    *v15 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v22);
    v23 = sub_10007B804((uint64_t *)&unk_100833700);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 1, 1, v23);
    v24 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction], v25, 33, 0);
    sub_100098FE8((uint64_t)v5, v24);
    swift_endAccess(v25);
    sub_1000FDA38();
    sub_1000057AC((uint64_t)v5, (uint64_t *)&unk_100835F20);
    return;
  }
  if (v16 < 0)
    v21 = *v15;
  else
    v21 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v15);
  v17 = _CocoaArrayWrapper.endIndex.getter(v21);
  if (!v17)
    goto LABEL_16;
LABEL_6:
  if (v17 >= 1)
  {
    for (i = 0; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0)
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v16);
      else
        v19 = *(id *)(v16 + 8 * i + 32);
      v20 = v19;
      objc_msgSend(v19, "removeFromSuperview");

    }
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_1000FCC38@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t result;

  v4 = Annotation.items.getter();
  v5 = v4;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 >= 0)
      v4 &= 0xFFFFFFFFFFFFFF8uLL;
    _CocoaArrayWrapper.endIndex.getter(v4);
  }
  swift_bridgeObjectRelease(v5);
  v6 = _s14descr10075D9C1O8ItemViewCMa();
  v7 = swift_allocObject(&unk_10075A260, 32, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = a1;
  v8 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = swift_retain(a1);
  result = LayoutViewPlaceholder.init(measureWith:)(sub_1001010FC, v7, v9);
  a2[3] = v8;
  a2[4] = (uint64_t)&protocol witness table for LayoutViewPlaceholder;
  *a2 = result;
  return result;
}

uint64_t sub_1000FCD04()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  _BOOL4 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  id v46;
  double v47;
  double v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  void **v66;
  __n128 v67;
  void *v68;
  uint64_t v69;
  id v70;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  _QWORD v91[5];
  __int128 v92;
  __int128 v93;
  void *v94;
  char v95[24];
  _QWORD v96[5];
  char *v97;
  uint64_t v98;
  void *v99;
  objc_super v100;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v78 = type metadata accessor for Separator.Position(0, v3);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v80 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for Separator(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for LayoutRect(0);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v74 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for ProductAnnotationLayout(0);
  v82 = *(_QWORD *)(v84 - 8);
  v7 = __chkstk_darwin(v84);
  v81 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ProductAnnotationLayout.Metrics(0, v7);
  v90 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v88 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v89 = (char *)&v72 - v12;
  v13 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v13);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FontUseCase(0);
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)&v18 = __chkstk_darwin(v16).n128_u64[0];
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100.receiver = v1;
  v100.super_class = ObjectType;
  objc_msgSendSuper2(&v100, "layoutSubviews", v18);
  v21 = objc_msgSend(v1, "contentView");
  v22 = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
  *(_QWORD *)&v23 = LayoutMarginsAware<>.layoutFrame.getter(v22).n128_u64[0];
  v25 = v24;
  v27 = v26;
  v29 = v28;

  if (qword_100826C90 != -1)
    swift_once(&qword_100826C90, sub_1000FBD58);
  v30 = sub_10007B804((uint64_t *)&unk_10082E270);
  sub_10007AF70(v30, (uint64_t)qword_10082D700);
  v97 = v1;
  Conditional.evaluate(with:)(&v97, v30);
  v31 = *(char **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel];
  v32 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v32(v15, v20, v16);
  v79 = v17;
  v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
  v33(v15, 0, 1, v16);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v15);
  v34 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel];
  v32(v15, v20, v16);
  v33(v15, 0, 1, v16);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v15);
  v73 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel;
  v35 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel];
  if (v35)
  {
    v32(v15, v20, v16);
    v33(v15, 0, 1, v16);
    v36 = v35;
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v15);

  }
  v37 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded;
  objc_msgSend(v34, "setHidden:", v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded]);
  v38 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView];
  if ((v1[v37] & 1) != 0)
    LOBYTE(v39) = 1;
  else
    v39 = !sub_1000FADE8();
  objc_msgSend(v38, "setHidden:", v39);
  if (qword_100826C98 != -1)
    swift_once(&qword_100826C98, sub_1000FBEC0);
  v40 = sub_10007B804(&qword_10082D800);
  sub_10007AF70(v40, (uint64_t)qword_10088A4F0);
  v97 = v1;
  v41 = v89;
  v42 = Conditional.evaluate(with:)(&v97, v40);
  v43 = ProductAnnotationLayout.Metrics.disclosureSize.getter(v42);
  v45 = v44;
  v46 = objc_msgSend(v1, "traitCollection");
  v47 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v46);

  v48 = CGSize.scaled(_:)(v47, v43, v45);
  ProductAnnotationLayout.Metrics.disclosureSize.setter(v48);
  v49 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v83 = v9;
  v49(v88, v41, v9);
  v50 = type metadata accessor for DynamicTypeLabel(0);
  v98 = v50;
  v99 = &protocol witness table for UILabel;
  v96[4] = &protocol witness table for UILabel;
  v97 = v31;
  v96[3] = v50;
  v96[0] = v34;
  v51 = &v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews], v95, 0, 0);
  v52 = *(_QWORD *)v51;
  v53 = v31;
  v54 = v34;
  swift_bridgeObjectRetain(v52);
  v56 = sub_100275DA4(v55);
  swift_bridgeObjectRelease(v52);
  v57 = *(void **)&v1[v73];
  if (v57)
  {
    v94 = &protocol witness table for UIView;
    *((_QWORD *)&v93 + 1) = v50;
    *(_QWORD *)&v92 = v57;
  }
  else
  {
    v94 = 0;
    v93 = 0u;
    v92 = 0u;
  }
  v58 = sub_100008FE4(0, (unint64_t *)&qword_100833550, UIImageView_ptr);
  v91[4] = &protocol witness table for UIView;
  v91[3] = v58;
  v91[0] = v38;
  v59 = v1[v37];
  v60 = v38;
  v61 = v57;
  v62 = v81;
  ProductAnnotationLayout.init(metrics:titleText:summaryText:detailViews:linkText:disclosureView:isExpanded:)(v88, &v97, v96, v56, &v92, v91, v59);
  v63 = v74;
  ProductAnnotationLayout.placeChildren(relativeTo:in:)(v1, v23, v25, v27, v29);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v63, v76);
  v64 = v80;
  (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v80, enum case for Separator.Position.bottom(_:), v78);
  v98 = type metadata accessor for ZeroDimension(0);
  v99 = &protocol witness table for ZeroDimension;
  sub_100024638(&v97);
  static ZeroDimension.zero.getter();
  v65 = v85;
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)(v64, &v97, 0.0, 0.0);
  v66 = (void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_separatorLineView];
  v67 = swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_separatorLineView], &v97, 32, 0);
  v68 = *v66;
  v69 = v83;
  if (*v66)
  {
    swift_endAccess(&v97);
    v70 = v68;
    objc_msgSend(v70, "setFrame:", Separator.frame(forBoundingRect:in:)(v1, v23, v25, v27, v29));

    (*(void (**)(char *, uint64_t))(v86 + 8))(v65, v87);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v62, v84);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v69);
    return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v20, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t, __n128))(v86 + 8))(v65, v87, v67);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v62, v84);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v69);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v20, v16);
    return swift_endAccess(&v97);
  }
}

void sub_1000FD5AC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  void *v24;

  v1 = v0;
  if (v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] != 1)
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView], "setHidden:", 0, v21);
LABEL_28:
    objc_msgSend(v1, "setNeedsLayout");
    return;
  }
  v22 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems];
  if ((unint64_t)v2 >> 62)
    goto LABEL_23;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems]);
  if (!v3)
  {
LABEL_27:
    swift_bridgeObjectRelease(v2);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView], "setHidden:", 1, v21);
    goto LABEL_28;
  }
  while (v3 >= 1)
  {
    v4 = 0;
    v5 = &v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViewPool];
    v6 = &v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews];
    v21 = v2 & 0xC000000000000001;
    while (1)
    {
      if (v21)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      }
      else
      {
        v7 = *(_QWORD *)(v2 + 8 * v4 + 32);
        swift_retain(v7);
      }
      swift_beginAccess(v5, v23, 33, 0);
      v8 = sub_10007B804(&qword_10082D808);
      ReusePool.dequeue(or:)(&v24, sub_1000FD870, 0, v8);
      swift_endAccess(v23);
      v9 = v24;
      v10 = *(_QWORD *)&v1[v22];
      if ((unint64_t)v10 >> 62)
        break;
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      v12 = v11 - 1;
      if (__OFSUB__(v11, 1))
        goto LABEL_22;
LABEL_11:
      sub_100175134(v7, v4 == v12);
      v13 = objc_msgSend(v1, "contentView");
      objc_msgSend(v13, "addSubview:", v9);

      swift_beginAccess(v6, v23, 33, 0);
      v14 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v16 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v15 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v16 >= v15 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
      ++v4;
      v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
      specialized Array._endMutation()(v17);
      swift_endAccess(v23);

      swift_release(v7);
      if (v3 == v4)
        goto LABEL_27;
    }
    if (v10 < 0)
      v18 = *(_QWORD *)&v1[v22];
    else
      v18 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v1[v22]);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v10);
    v12 = v19 - 1;
    if (!__OFSUB__(v19, 1))
      goto LABEL_11;
LABEL_22:
    __break(1u);
LABEL_23:
    if (v2 < 0)
      v20 = v2;
    else
      v20 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (!v3)
      goto LABEL_27;
  }
  __break(1u);
}

id sub_1000FD870@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)_s14descr10075D9C1O8ItemViewCMa()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *a1 = result;
  return result;
}

id sub_1000FD8B8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  NSString v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary + 8];
  if (v2)
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel];
    swift_bridgeObjectRetain(v2);
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
    objc_msgSend(v3, "setText:", v4);
LABEL_17:

    return objc_msgSend(v1, "setNeedsLayout");
  }
  v5 = *(void **)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel];
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems];
  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems]);
    if (v7)
      goto LABEL_5;
LABEL_14:
    swift_bridgeObjectRelease(v6);
    goto LABEL_15;
  }
  if (v6 < 0)
    v13 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems];
  else
    v13 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems]);
  result = (id)_CocoaArrayWrapper.endIndex.getter(v13);
  if (!result)
    goto LABEL_14;
LABEL_5:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
LABEL_8:
    v10 = swift_bridgeObjectRelease(v6);
    AnnotationItem_V2.text.getter(v10);
    v12 = v11;
    swift_release(v9);
    if (v12)
    {
      v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
LABEL_16:
      objc_msgSend(v5, "setText:", v4);
      goto LABEL_17;
    }
LABEL_15:
    v4 = 0;
    goto LABEL_16;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v9 = *(_QWORD *)(v6 + 32);
    swift_retain(v9);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_1000FDA38()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  __n128 v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  char v26[24];

  v1 = v0;
  v2 = sub_10007B804((uint64_t *)&unk_100833700);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] != 1)
    goto LABEL_3;
  v6 = &v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
  v7 = swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction], v26, 0, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v3 + 48))(v6, 1, v2, v7))
    goto LABEL_3;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v6, v2);
  ObjectGraphPair.value.getter(&v25, v2);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = v25;
  Action.title.getter(v11);
  v14 = v13;
  swift_release(v12);
  if (v14)
  {
    v15 = type metadata accessor for DynamicTypeLabel(0);
    v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)), "init");
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setText:", v17, swift_bridgeObjectRelease(v14).n128_f64[0]);

    sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
    v18 = v16;
    v19 = (void *)static UIColor.appTint.getter();
    objc_msgSend(v18, "setTextColor:", v19);

    v20 = v18;
    v21 = (void *)static UIColor.defaultBackground.getter();
    objc_msgSend(v20, "setBackgroundColor:", v21);

    objc_msgSend(v20, "setUserInteractionEnabled:", 1);
    v22 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "linkLabelTapped:");
    objc_msgSend(v20, "addGestureRecognizer:", v22);

    v23 = objc_msgSend(v1, "contentView");
    objc_msgSend(v23, "addSubview:", v20);

    v24 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel];
    *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel] = v20;
    v10 = v20;

    objc_msgSend(v1, "setNeedsLayout");
  }
  else
  {
LABEL_3:
    v8 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel;
    v9 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel];
    if (v9)
    {
      objc_msgSend(v9, "removeFromSuperview");
      v10 = *(id *)&v1[v8];
    }
    else
    {
      v10 = 0;
    }
    *(_QWORD *)&v1[v8] = 0;
  }

}

void sub_1000FDD3C(uint64_t a1)
{
  void *v1;
  id v3;
  char v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if (!a1 || (UITraitCollection.prefersRightToLeftLayouts.getter() & 1) != (v4 & 1))
    sub_1000FC77C();
}

_QWORD *sub_1000FDE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  _BYTE v60[80];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems);
  if ((unint64_t)v1 >> 62)
    goto LABEL_46;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v1);
  while (v2)
  {
    v3 = 0;
    v56 = v1 & 0xC000000000000001;
    v53 = v1 & 0xFFFFFFFFFFFFFF8;
    v4 = _swiftEmptyArrayStorage;
    v52 = v1 + 32;
    v54 = v2;
    v55 = v1;
    while (v56)
    {
      v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      v5 = __OFADD__(v3, 1);
      v6 = v3 + 1;
      if (v5)
        goto LABEL_43;
LABEL_10:
      v7 = sub_10007B804((uint64_t *)&unk_10083F290);
      inited = (_QWORD *)swift_initStackObject(v7, v60);
      *((_OWORD *)inited + 1) = xmmword_100662370;
      v9 = AnnotationItem_V2.heading.getter(inited);
      inited[4] = v9;
      inited[5] = v10;
      inited[6] = AnnotationItem_V2.text.getter(v9);
      inited[7] = v11;
      inited[8] = AnnotationItem_V2.listText.getter(v12);
      inited[9] = v13;
      v15 = AnnotationItem_V2.textPairs.getter(v14);
      v16 = v15;
      v58 = v4;
      if ((unint64_t)v15 >> 62)
      {
        if (v15 >= 0)
          v15 &= 0xFFFFFFFFFFFFFF8uLL;
        v17 = _CocoaArrayWrapper.endIndex.getter(v15);
      }
      else
      {
        v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v59 = v6;
      v57 = v1;
      if (v17)
      {
        if (v17 < 1)
          goto LABEL_44;
        v18 = 0;
        do
        {
          if ((v16 & 0xC000000000000001) != 0)
          {
            v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
          }
          else
          {
            v19 = *(_QWORD *)(v16 + 8 * v18 + 32);
            v20 = swift_retain(v19);
          }
          v21 = AnnotationItem_V2.TextPair.leadingText.getter(v20);
          v24 = v23;
          v26 = inited[2];
          v25 = inited[3];
          if (v26 >= v25 >> 1)
            inited = sub_100096058((_QWORD *)(v25 > 1), v26 + 1, 1, inited);
          inited[2] = v26 + 1;
          v27 = &inited[2 * v26];
          v27[4] = v21;
          v27[5] = v24;
          v28 = AnnotationItem_V2.TextPair.trailingText.getter(v22);
          v30 = v29;
          v32 = inited[2];
          v31 = inited[3];
          if (v32 >= v31 >> 1)
            inited = sub_100096058((_QWORD *)(v31 > 1), v32 + 1, 1, inited);
          ++v18;
          inited[2] = v32 + 1;
          v33 = &inited[2 * v32];
          v33[4] = v28;
          v33[5] = v30;
          swift_release(v19);
        }
        while (v17 != v18);
      }
      swift_bridgeObjectRelease(v16);
      v34 = inited[2];
      if (v34)
      {
        swift_bridgeObjectRetain_n(inited, 2);
        v35 = inited + 5;
        v36 = _swiftEmptyArrayStorage;
        v4 = v58;
        do
        {
          v38 = *v35;
          if (*v35)
          {
            v39 = *(v35 - 1);
            swift_bridgeObjectRetain(*v35);
            if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
              v36 = sub_10004B764(0, v36[2] + 1, 1, v36);
            v41 = v36[2];
            v40 = v36[3];
            if (v41 >= v40 >> 1)
              v36 = sub_10004B764((_QWORD *)(v40 > 1), v41 + 1, 1, v36);
            v36[2] = v41 + 1;
            v37 = &v36[2 * v41];
            v37[4] = v39;
            v37[5] = v38;
          }
          v35 += 2;
          --v34;
        }
        while (v34);
        swift_bridgeObjectRelease_n(inited, 2);
      }
      else
      {
        v36 = _swiftEmptyArrayStorage;
        v4 = v58;
      }
      swift_bridgeObjectRelease(inited);
      v42 = sub_10007B804((uint64_t *)&unk_10082D990);
      v43 = sub_10002A538((unint64_t *)&qword_100835480, (uint64_t *)&unk_10082D990, (uint64_t)&protocol conformance descriptor for [A]);
      v44 = BidirectionalCollection<>.joined(separator:)(44, 0xE100000000000000, v42, v43);
      v46 = v45;
      swift_bridgeObjectRelease(v36);
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = sub_10004B764(0, v4[2] + 1, 1, v4);
      v48 = v4[2];
      v47 = v4[3];
      if (v48 >= v47 >> 1)
        v4 = sub_10004B764((_QWORD *)(v47 > 1), v48 + 1, 1, v4);
      v4[2] = v48 + 1;
      v49 = &v4[2 * v48];
      v49[4] = v44;
      v49[5] = v46;
      swift_release(v57);
      v1 = v55;
      v3 = v59;
      if (v59 == v54)
      {
        swift_bridgeObjectRelease(v55);
        return v4;
      }
    }
    if (v3 >= *(_QWORD *)(v53 + 16))
      goto LABEL_45;
    v1 = *(_QWORD *)(v52 + 8 * v3);
    swift_retain(v1);
    v5 = __OFADD__(v3, 1);
    v6 = v3 + 1;
    if (!v5)
      goto LABEL_10;
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    if (v1 < 0)
      v50 = v1;
    else
      v50 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v50);
  }
  swift_bridgeObjectRelease(v1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000FE4A8()
{
  return type metadata accessor for AnnotationCollectionViewCell(0);
}

uint64_t type metadata accessor for AnnotationCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10082D7C0;
  if (!qword_10082D7C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnotationCollectionViewCell);
  return result;
}

void sub_1000FE4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[14];

  sub_10008CEE8(319, a2);
  if (v4 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(v3 - 8) + 64;
    v9[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v9[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v9[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v9[4] = "\b";
    sub_1000FE5D0(319);
    if (v6 <= 0x3F)
    {
      v9[5] = *(_QWORD *)(v5 - 8) + 64;
      v9[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v9[7] = "\b";
      v9[8] = &unk_100664098;
      v9[9] = &unk_100664098;
      v9[10] = &unk_1006640B0;
      v9[11] = &unk_1006640B0;
      v9[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
      sub_1000D1564(319);
      if (v8 <= 0x3F)
      {
        v9[13] = *(_QWORD *)(v7 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 14, v9, a1 + 80);
      }
    }
  }
}

void sub_1000FE5D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_10082D7D8)
  {
    v2 = sub_100072594(&qword_10082D7E0);
    v3 = sub_10002A538(&qword_10082D7E8, &qword_10082D7E0, (uint64_t)&protocol conformance descriptor for ViewRecycler<A>);
    v4 = type metadata accessor for ReusePool(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_10082D7D8);
  }
}

uint64_t sub_1000FE654(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10003D22C(a1, a2, a3, (_QWORD *)*v3, &qword_100829FC8, (uint64_t *)&unk_10082D830);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE680(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FEB20(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE69C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10003D22C(a1, a2, a3, (_QWORD *)*v3, &qword_100829F98, &qword_10082D8E0);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE6C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000FECA8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000FE6E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFB4C(a1, a2, a3, (_QWORD *)*v3, &qword_10082D880, &qword_10082D888);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE710(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFB4C(a1, a2, a3, (_QWORD *)*v3, &qword_10082D890, &qword_10082D898);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE73C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10000BC70(a1, a2, a3, (_QWORD *)*v3, &qword_10082D8A0, &qword_10082D8A8);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE768(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFD2C(a1, a2, a3, (_QWORD *)*v3, &qword_10082D8B0, (uint64_t (*)(_QWORD))&type metadata accessor for AdamId);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE794(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FF0F0(a1, a2, a3, (_QWORD *)*v3, &qword_100829F90, &qword_10082D860);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE7C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000FEE2C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000FE7DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000FEF94(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000FE7F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FF0F0(a1, a2, a3, (_QWORD *)*v3, &qword_100829FB8, (uint64_t *)&unk_10082C460);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE824(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FF27C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE840(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000FF404(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000FE85C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000FF560(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000FE878(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10003D22C(a1, a2, a3, (_QWORD *)*v3, &qword_10082D858, (uint64_t *)&unk_10082C420);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE8A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFD2C(a1, a2, a3, (_QWORD *)*v3, &qword_10082D970, type metadata accessor for GuidedSearchTokenPaletteView.Token);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE8D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FF6BC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE8EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFD2C(a1, a2, a3, (_QWORD *)*v3, &qword_10082D9A8, (uint64_t (*)(_QWORD))&type metadata accessor for PageFacets.Facet.Option);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE918(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000FF83C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000FE934(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10003D22C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_10082D930, (uint64_t *)&unk_100835390);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE960(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10003D22C(a1, a2, a3, (_QWORD *)*v3, &qword_100829FD8, (uint64_t *)&unk_10082D840);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE98C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FF9C4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE9A8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFD2C(a1, a2, a3, (_QWORD *)*v3, &qword_10082D8E8, (uint64_t (*)(_QWORD))&type metadata accessor for SponsoredSearchAdvert);
  *v3 = result;
  return result;
}

uint64_t sub_1000FE9D4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFB4C(a1, a2, a3, (_QWORD *)*v3, &qword_10082D9D0, &qword_10082D9D8);
  *v3 = result;
  return result;
}

uint64_t sub_1000FEA00(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFD2C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_10082D9E0, (uint64_t (*)(_QWORD))&type metadata accessor for DebugMetricsEvent);
  *v3 = result;
  return result;
}

uint64_t sub_1000FEA2C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFB4C(a1, a2, a3, (_QWORD *)*v3, &qword_10082D910, &qword_10082D918);
  *v3 = result;
  return result;
}

uint64_t sub_1000FEA58(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFB4C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_10082D960, &qword_1008477E0);
  *v3 = result;
  return result;
}

uint64_t sub_1000FEA84(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFD2C(a1, a2, a3, (_QWORD *)*v3, &qword_100840F80, (uint64_t (*)(_QWORD))&type metadata accessor for IndexPath);
  *v3 = result;
  return result;
}

uint64_t sub_1000FEAB0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000FFF0C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000FEACC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10010008C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000FEAE8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1001001E4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000FEB04(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10010034C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000FEB20(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804(&qword_10082D870);
    v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 5);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 32 * v8)
      memmove(v11 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 32 * v8 || v14 >= v15 + 32 * v8)
  {
    sub_10007B804(&qword_10082D878);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FECA8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804(&qword_10082D868);
    v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[48 * v8])
      memmove(v13, v14, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[48 * v8] || v13 >= &v14[48 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FEE2C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804((uint64_t *)&unk_10082D8F0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FEF94(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804((uint64_t *)&unk_10082D8D0);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FF0F0(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10007B804(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 3);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 8 * v11)
      memmove(v14 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 8 * v11 || v17 >= v18 + 8 * v11)
  {
    sub_10007B804(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FF27C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804(&qword_10082D8B8);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10007B804((uint64_t *)&unk_10082D8C0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FF404(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804(&qword_10083E5C0);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FF560(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804(&qword_10082D850);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FF6BC(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804((uint64_t *)&unk_10082D900);
    v11 = (double *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (char *)(v11 + 4);
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[40 * v8] || v13 >= &v14[40 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FF83C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804(&qword_10082D928);
    v11 = (char *)swift_allocObject(v10, 72 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 72);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[72 * v8])
      memmove(v13, v14, 72 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[72 * v8] || v13 >= &v14[72 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FF9C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804((uint64_t *)&unk_10083F290);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10007B804((uint64_t *)&unk_10082C590);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FFB4C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10007B804(a5);
  v14 = *(_QWORD *)(sub_10007B804(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = sub_10007B804(a6);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FFD2C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10007B804(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000FFF0C(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804(&qword_10082D9B8);
    v11 = (double *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (char *)(v11 + 4);
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[40 * v8] || v13 >= &v14[40 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10010008C(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804((uint64_t *)&unk_10082D950);
    v11 = (double *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (char *)(v11 + 4);
  v15 = (char *)(a4 + 32);
  v16 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001001E4(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804(&qword_10082D9B0);
    v11 = (double *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (char *)(v11 + 4);
  v15 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10010034C(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10007B804(&qword_10082D920);
    v11 = (double *)swift_allocObject(v10, 80 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 80);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (char *)(v11 + 4);
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    if (v11 != (double *)a4 || v13 >= &v14[80 * v8])
      memmove(v13, v14, 80 * v8);
    *(_QWORD *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[80 * v8] || v13 >= &v14[80 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

double sub_1001004CC(uint64_t a1, int a2, void *a3, double a4, double a5)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(_QWORD *, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  char *v68;
  uint64_t v69;
  double v70;
  double v71;
  double v72;
  id v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void (*v89)(_QWORD *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t (*v91)(char *, uint64_t);
  char *v92;
  int v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  void *v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  _BYTE v110[40];
  _QWORD v111[5];
  _BYTE v112[32];
  uint64_t v113;
  _QWORD v114[5];
  _QWORD v115[6];

  v93 = a2;
  v102 = a1;
  v8 = type metadata accessor for ProductAnnotationLayout(0);
  v98 = *(_QWORD *)(v8 - 8);
  v99 = v8;
  v9 = __chkstk_darwin(v8);
  v96 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for ProductAnnotationLayout.Metrics(0, v9);
  v95 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v92 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v94 = (char *)&v88 - v14;
  v15 = type metadata accessor for LabelPlaceholderCompatibility(0, v13);
  v16 = *(_QWORD **)(v15 - 8);
  v100 = v15;
  v101 = v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FontUseCase(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
  if (qword_100826C90 != -1)
    swift_once(&qword_100826C90, sub_1000FBD58);
  v23 = sub_10007B804((uint64_t *)&unk_10082E270);
  sub_10007AF70(v23, (uint64_t)qword_10082D700);
  v115[0] = a3;
  Conditional.evaluate(with:)(v115, v23);
  v24 = objc_msgSend(a3, "traitCollection");
  v25 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v22, v24);
  v103 = a3;
  v26 = (void *)v25;

  v27 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v28 = Annotation.title.getter(v27);
  v30 = v29;
  v31 = type metadata accessor for Feature(0);
  v115[3] = v31;
  v32 = sub_100005C94((unint64_t *)&qword_10082D5A0, (uint64_t (*)(uint64_t))&type metadata accessor for Feature, (uint64_t)&protocol conformance descriptor for Feature);
  v115[4] = v32;
  v33 = sub_100024638(v115);
  v34 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v35 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104);
  v35(v33, enum case for Feature.measurement_with_labelplaceholder(_:), v31);
  v36 = v26;
  LOBYTE(v26) = isFeatureEnabled(_:)(v115);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v115);
  LOBYTE(v86) = v26 & 1;
  v37 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v28, v30, v36, 4, 0, 0, 1, 0, v86);
  LabelPlaceholderCompatibility.layoutTextView.getter(v115, v37);
  v38 = v100;
  v91 = (uint64_t (*)(char *, uint64_t))v101[1];
  v39 = v91(v18, v100);
  v40 = v102;
  v41 = Annotation.summary.getter(v39);
  v101 = v42;
  v114[3] = v31;
  v114[4] = v32;
  v90 = v32;
  v43 = v34;
  v44 = sub_100024638(v114);
  v89 = v35;
  v35(v44, v34, v31);
  v45 = v36;
  LOBYTE(v36) = isFeatureEnabled(_:)(v114);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v114);
  LOBYTE(v86) = v36 & 1;
  v46 = v101;
  v101 = v45;
  v47 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v41, v46, v45, 4, 0, 0, 1, 0, v86);
  LabelPlaceholderCompatibility.layoutTextView.getter(v114, v47);
  v48 = v38;
  v49 = (void (*)(char *, uint64_t))v91;
  v50 = v91(v18, v48);
  v51 = Annotation.items_V2.getter(v50);
  __chkstk_darwin(v51);
  v86 = v40;
  v87 = v103;
  v53 = sub_100100C80(v52, (void (*)(_QWORD *__return_ptr, unint64_t, uint64_t))sub_1001010D0, (uint64_t)(&v88 - 4));
  swift_bridgeObjectRelease(v51);
  v113 = 0;
  memset(v112, 0, sizeof(v112));
  v54 = Annotation.linkAction.getter();
  if (v54)
  {
    v55 = v54;
    Action.title.getter(v54);
    v57 = v56;
    v59 = v58;
    swift_release(v55);
    if (v59)
    {
      v111[3] = v31;
      v111[4] = v90;
      v60 = sub_100024638(v111);
      v89(v60, v43, v31);
      v61 = v101;
      v62 = isFeatureEnabled(_:)(v111);
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v111);
      LOBYTE(v86) = v62 & 1;
      v63 = LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)(v57, v59, v61, 4, 0, 0, 0, 0, v86);
      LabelPlaceholderCompatibility.layoutTextView.getter(v111, v63);
      v49(v18, v100);
      sub_1000057AC((uint64_t)v112, (uint64_t *)&unk_100839BB0);
      sub_10005A6E8((uint64_t)v111, (uint64_t)v112);
    }
  }
  v64 = v95;
  v65 = v92;
  if (qword_100826C98 != -1)
    swift_once(&qword_100826C98, sub_1000FBEC0);
  v66 = sub_10007B804(&qword_10082D800);
  sub_10007AF70(v66, (uint64_t)qword_10088A4F0);
  v67 = v103;
  v111[0] = v103;
  v68 = v94;
  v69 = Conditional.evaluate(with:)(v111, v66);
  v70 = ProductAnnotationLayout.Metrics.disclosureSize.getter(v69);
  v72 = v71;
  v73 = objc_msgSend(v67, "traitCollection");
  v74 = _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(v73);

  v75 = CGSize.scaled(_:)(v74, v70, v72);
  ProductAnnotationLayout.Metrics.disclosureSize.setter(v75);
  v76 = v97;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v65, v68, v97);
  sub_100022500((uint64_t)v115, (uint64_t)v111);
  sub_100022500((uint64_t)v114, (uint64_t)v110);
  sub_100005B48((uint64_t)v112, (uint64_t)&v104, (uint64_t *)&unk_100839BB0);
  v77 = *((_QWORD *)&v105 + 1);
  if (*((_QWORD *)&v105 + 1))
  {
    v78 = v106;
    v79 = sub_100060B40(&v104, *((uint64_t *)&v105 + 1));
    *((_QWORD *)&v108 + 1) = v77;
    v109 = *(_QWORD *)(v78 + 8);
    v80 = sub_100024638(&v107);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v80, v79, v77);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v104);
  }
  else
  {
    sub_1000057AC((uint64_t)&v104, (uint64_t *)&unk_100839BB0);
    v107 = 0u;
    v108 = 0u;
    v109 = 0;
  }
  v106 = 0;
  v104 = 0u;
  v105 = 0u;
  v81 = v96;
  ProductAnnotationLayout.init(metrics:titleText:summaryText:detailViews:linkText:disclosureView:isExpanded:)(v65, v111, v110, v53, &v107, &v104, v93 & 1);
  v82 = sub_100005C94((unint64_t *)&unk_10082D820, (uint64_t (*)(uint64_t))&type metadata accessor for ProductAnnotationLayout, (uint64_t)&protocol conformance descriptor for ProductAnnotationLayout);
  v83 = v99;
  v84 = dispatch thunk of Measurable.measurements(fitting:in:)(v67, v99, v82, a4, a5);

  (*(void (**)(char *, uint64_t))(v98 + 8))(v81, v83);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v68, v76);
  sub_1000057AC((uint64_t)v112, (uint64_t *)&unk_100839BB0);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v114);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v115);
  return v84;
}

uint64_t sub_100100C08(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_100024638(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_10000F5F4(&v12, v10 + 40 * a1 + 32);
}

_QWORD *sub_100100C80(uint64_t a1, void (*a2)(_QWORD *__return_ptr, unint64_t, uint64_t), uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(_QWORD *__return_ptr, unint64_t, uint64_t);
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v23 = a2;
  v24 = a3;
  v28 = _swiftEmptyArrayStorage;
  sub_1000FE654(0, 0, 0);
  v4 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      v21 = a1 & 0xFFFFFFFFFFFFFF8;
      v22 = a1 & 0xC000000000000001;
      while (v22)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
        v8 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_15;
LABEL_7:
        v23(v25, v6, v7);
        swift_release(v7);
        v28 = v4;
        v10 = v4[2];
        v9 = v4[3];
        if (v10 >= v9 >> 1)
          sub_1000FE654(v9 > 1, v10 + 1, 1);
        v11 = v26;
        v12 = v27;
        v13 = sub_100063B70((uint64_t)v25, v26);
        v14 = __chkstk_darwin(v13);
        v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v17 + 16))(v16, v14);
        sub_100100C08(v10, (uint64_t)v16, (uint64_t *)&v28, v11, v12);
        _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v25);
        v4 = v28;
        ++v6;
        if (v8 == v5)
          goto LABEL_20;
      }
      if (v6 < *(_QWORD *)(v21 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v18 = a1;
      else
        v18 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (!v5)
        goto LABEL_20;
    }
    v7 = *(_QWORD *)(a1 + 8 * v6 + 32);
    swift_retain(v7);
    v8 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_15;
    goto LABEL_7;
  }
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return v4;
}

void sub_100100E78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  id v12;
  _BYTE v13[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews, v13, 1, 0);
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v1);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v2);
    v10 = *v1;
    *v1 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v10);
    return;
  }
  if (v2 < 0)
    v9 = *v1;
  else
    v9 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v3 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViewPool;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v6 = *(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      ++v4;
      v12 = v6;
      swift_beginAccess(v5, v11, 33, 0);
      v8 = sub_10007B804(&qword_10082D808);
      ReusePool.recycle(_:)(&v12, v8);
      swift_endAccess(v11);

    }
    while (v3 != v4);
    goto LABEL_13;
  }
  __break(1u);
}

id sub_100100FC4(void *a1)
{
  char *v1;
  void *v2;
  id *v4;
  double v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  char v13[24];

  v2 = v1;
  v4 = (id *)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_separatorLineView];
  *(_QWORD *)&v5 = swift_beginAccess(v4, v13, 1, 0).n128_u64[0];
  if (*v4)
  {
    objc_msgSend(*v4, "removeFromSuperview", v5);
    v6 = *v4;
  }
  else
  {
    v6 = 0;
  }
  *v4 = a1;
  v7 = a1;

  v8 = *v4;
  if (*v4)
  {
    sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
    v9 = v8;
    v10 = (void *)static UIColor.defaultLine.getter();
    objc_msgSend(v9, "setBackgroundColor:", v10);

    v11 = objc_msgSend(v2, "contentView");
    objc_msgSend(v11, "addSubview:", v9);

  }
  return objc_msgSend(v2, "setNeedsLayout");
}

uint64_t sub_1001010D0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1000FCC38(a1, a2);
}

uint64_t sub_1001010D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1001010FC(void *a1, __n128 a2, double a3)
{
  uint64_t v3;

  return sub_100176438(a1, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

void sub_100101104()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_10007B804(&qword_10082D7E0);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_itemLayoutContext];
  v6 = type metadata accessor for ItemLayoutContext(0, v5);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel] = 0;
  v7 = _s14descr10075D9C1O8ItemViewCMa();
  ViewRecycler.init()(v7);
  v8 = sub_10002A538(&qword_10082D7E8, &qword_10082D7E0, (uint64_t)&protocol conformance descriptor for ViewRecycler<A>);
  ReusePool.init(recycler:limit:)(v3, 5, v1, v8);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_separatorLineView] = 0;
  v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isSeparatorDisplayed] = 0;
  v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] = 0;
  v9 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary];
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems] = _swiftEmptyArrayStorage;
  v11 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
  v12 = sub_10007B804((uint64_t *)&unk_100833700);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/AnnotationCollectionViewCell.swift", 43, 2, 118, 0);
  __break(1u);
}

uint64_t sub_1001012D0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t ObjectType;
  _QWORD v23[4];
  uint64_t v24;
  char v25[24];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = type metadata accessor for ActionRunner.Origin(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10007B804((uint64_t *)&unk_100835F20);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10007B804((uint64_t *)&unk_100833700);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction], v25, 0, 0);
  sub_100005B48(v13, (uint64_t)v8, (uint64_t *)&unk_100835F20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1000057AC((uint64_t)v8, (uint64_t *)&unk_100835F20);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v15 = UIResponder.nearestActionRunner.getter();
  if (!v15)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v16 = v15;
  ObjectGraphPair.value.getter(&v24, v9);
  v17 = v24;
  v23[3] = ObjectType;
  v23[0] = v1;
  v18 = v1;
  v19 = ObjectGraphPair.objectGraph.getter(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ActionRunner.Origin.userInitiated(_:), v2);
  dispatch thunk of ActionRunner.perform(action:from:origin:asPartOf:)(v17, v23, v5, v19);
  swift_release(v16);
  swift_release(v17);
  v20 = swift_release(v19);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v20);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return sub_1000057AC((uint64_t)v23, (uint64_t *)&unk_10082B490);
}

double sub_100101514(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Badge(0, v6);
  v10 = sub_100005C94(&qword_10082D9F0, (uint64_t (*)(uint64_t))&type metadata accessor for Badge, (uint64_t)&protocol conformance descriptor for Badge);
  ItemLayoutContext.typedModel<A>(as:)(&v22, v9, v9, v10);
  v12 = v22;
  if (v22)
  {
    v13 = ItemLayoutContext.index.getter(v11);
    KeyPath = swift_getKeyPath(&unk_100664168);
    ItemLayoutContext.subscript.getter(v8);
    swift_release(KeyPath);
    v15 = swift_getKeyPath(&unk_100664198);
    ReadOnlyLens.subscript.getter(v15, v4);
    v16 = swift_release(v15);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v5 + 8))(v8, v4, v16);
    v17 = *(_QWORD *)(v22 + 16);
    swift_bridgeObjectRelease(v22);
    v18 = type metadata accessor for ObjectGraph(0);
    v19 = swift_dynamicCastClassUnconditional(a2, v18, 0, 0, 0);
    sub_1000D3B28(v12, v13, 0, v17, 0, v19);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_topSeparatorView], "setHidden:", 1);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_bottomSeparatorView], "setHidden:", 1);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_verticalSeparatorView], "setHidden:", 1);
    objc_msgSend(v2, "setNeedsLayout");
    v11.n128_u64[0] = swift_release(v12).n128_u64[0];
  }
  return v11.n128_f64[0];
}

uint64_t sub_1001016F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000C8118(v3, a1);
}

uint64_t sub_10010174C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000C80D0(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_1001017A8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1001017F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, "prepareForReuse");
  return sub_100433A64();
}

uint64_t sub_100101840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_100005C94(&qword_10082D9F8, type metadata accessor for BadgeCollectionViewCell, (uint64_t)&unk_100664120);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void PageTraitEnvironment.pageColumnWidth.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  double v5;
  double v6;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)1
    && (v3 = objc_msgSend(v0, "traitCollection"),
        v4 = objc_msgSend(v3, "horizontalSizeClass"),
        v3,
        v4 == (id)2))
  {
    objc_msgSend(v0, "pageContainerSize");
    sub_1003D68FC(v5, v6);
    PageTraitEnvironment.pageColumnMargin.getter();
  }
  else
  {
    objc_msgSend(v0, "pageMarginInsets");
    objc_msgSend(v0, "pageContainerSize");
  }
}

_QWORD *sub_1001019A4(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = &_swiftEmptyArrayStorage;
    if (!v7)
      break;
    v18 = &_swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v7);
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    v9 = 0;
    while (v7 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a3);
      }
      else
      {
        v10 = *(_QWORD *)(a3 + 8 * v9 + 32);
        swift_retain(v10);
      }
      v16 = v10;
      a1(&v17, &v16);
      v11 = swift_release(v10);
      if (v4)
        return (_QWORD *)swift_release(v18);
      ++v9;
      v12 = v17;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v13 = v18[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      specialized ContiguousArray._endMutation()(v14);
      if (v7 == v9)
        return v18;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v15 = a3;
    else
      v15 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a3);
  }
  return result;
}

_QWORD *sub_100101B14(void (*a1)(_OWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t i;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[4];
  uint64_t v18;
  _QWORD *v19;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_1000FE918(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    for (i = a3 + 32; ; i += 40)
    {
      a1(v17, i);
      if (v4)
        break;
      v4 = 0;
      v19 = v6;
      v11 = v6[2];
      v10 = v6[3];
      if (v11 >= v10 >> 1)
      {
        sub_1000FE918(v10 > 1, v11 + 1, 1);
        v6 = v19;
      }
      v6[2] = v11 + 1;
      v12 = &v6[9 * v11];
      *((_OWORD *)v12 + 2) = v17[0];
      v13 = v17[1];
      v14 = v17[2];
      v15 = v17[3];
      v12[12] = v18;
      *((_OWORD *)v12 + 4) = v14;
      *((_OWORD *)v12 + 5) = v15;
      *((_OWORD *)v12 + 3) = v13;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
  }
  return v6;
}

uint64_t sub_100101C38(uint64_t result, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double *v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD v22[2];
  unint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  double *v27;

  v5 = v4;
  v7 = a3;
  v22[0] = result;
  v22[1] = a2;
  v8 = a4 - a3;
  if (a4 >= a3)
  {
    if ((uint64_t)(a4 - a3) < 0)
      goto LABEL_27;
LABEL_5:
    v9 = v8 + 1;
    if (!__OFADD__(v8, 1))
    {
      v10 = _swiftEmptyArrayStorage;
      if (v8 == -1)
        return (uint64_t)v10;
      v27 = _swiftEmptyArrayStorage;
      result = sub_1000FE878(0, v9 & ~(v9 >> 63), 0);
      if (v9 < 0)
        goto LABEL_25;
      v11 = 0;
      v10 = v27;
      while (v9)
      {
        if (v11)
          goto LABEL_28;
        v23 = v7;
        ((void (*)(_QWORD *__return_ptr, unint64_t *))v22[0])(v24, &v23);
        if (v5)
        {
          swift_release();
          return (uint64_t)v10;
        }
        v5 = 0;
        v27 = v10;
        v13 = *((_QWORD *)v10 + 2);
        v12 = *((_QWORD *)v10 + 3);
        if (v13 >= v12 >> 1)
          sub_1000FE878(v12 > 1, v13 + 1, 1);
        v14 = v25;
        v15 = v26;
        v16 = sub_100063B70((uint64_t)v24, v25);
        v17 = __chkstk_darwin(v16);
        v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v20 + 16))(v19, v17);
        sub_100100C08(v13, (uint64_t)v19, (uint64_t *)&v27, v14, v15);
        result = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v24);
        v10 = v27;
        v11 = v7 == a4;
        if (v7 == a4)
        {
          v7 = 0;
        }
        else if (__CFADD__(v7++, 1))
        {
          goto LABEL_23;
        }
        if (!--v9)
          return (uint64_t)v10;
      }
      __break(1u);
LABEL_23:
      __break(1u);
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((uint64_t)(a3 - a4) >= 0)
  {
    v8 = a4 - a3;
    goto LABEL_5;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void PageTraitEnvironment.pageColumnMargin.getter()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;
  id v6;
  id v7;
  id v8;

  objc_msgSend(v0, "pageContainerSize");
  v2 = v1;
  v4 = v3;
  v5 = objc_msgSend(v0, "traitCollection");
  v6 = objc_msgSend(v5, "userInterfaceIdiom");

  if (v6 == (id)1
    && (v7 = objc_msgSend(v0, "traitCollection"),
        v8 = objc_msgSend(v7, "horizontalSizeClass"),
        v7,
        v8 == (id)2))
  {
    if (v4 >= v2)
    {
      if (v2 > JUScreenClassGetPortraitWidth(7))
        JUScreenClassGetPortraitWidth(8);
    }
    else if (v2 != 1133.0 && v2 > JUScreenClassGetLandscapeWidth(7))
    {
      JUScreenClassGetLandscapeWidth(8);
    }
  }
  else if (v4 >= v2)
  {
    JUScreenClassGetPortraitWidth(1);
  }
  else
  {
    JUScreenClassGetLandscapeWidth(1);
  }
}

void (*sub_100102118(_QWORD *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView);
  v3 = OBJC_IVAR____TtC8AppStore16AppPromotionView_appPromotionCardView;
  a1[1] = v2;
  a1[2] = v3;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v2 + v3) + OBJC_IVAR____TtC8AppStore20AppPromotionCardView_videoView);
  return sub_100102178;
}

void sub_100102178(id *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_10056660C((uint64_t)v4);

    v3 = v2;
  }
  else
  {
    sub_10056660C((uint64_t)v4);
    v3 = v4;
  }

}

uint64_t sub_1001021D8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView)
                 + OBJC_IVAR____TtC8AppStore16AppPromotionView_appPromotionCardView);
  v3 = objc_msgSend(a1, "superview");
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore20AppPromotionCardView_mediaContentView);
  sub_10003D7F8();
  v6 = v5;
  v7 = v4;
  v8 = static NSObject.== infix(_:_:)(v7, v6);

  return v8 & 1;
}

id sub_100102284()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "prepareForReuse");
  v1 = *(char **)&v0[OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView];
  sub_10028D000();
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore16AppPromotionView_appPromotionCardView];
  sub_100564360();
  v3 = &v1[OBJC_IVAR____TtC8AppStore16AppPromotionView_initialLongPressLocation];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8AppStore16AppPromotionView_longPressGestureRecognizer], "setEnabled:", 1);
  return objc_msgSend(v1, "addSubview:", v2);
}

uint64_t sub_1001023B8()
{
  return type metadata accessor for AppPromotionOfferCollectionViewCell(0);
}

uint64_t type metadata accessor for AppPromotionOfferCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10082DA28;
  if (!qword_10082DA28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppPromotionOfferCollectionViewCell);
  return result;
}

void sub_1001023FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  sub_10008CEE8(319, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(v3 - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 2, v5, a1 + 80);
  }
}

uint64_t sub_100102474()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView)+ OBJC_IVAR____TtC8AppStore16AppPromotionView_appPromotionCardView)+ OBJC_IVAR____TtC8AppStore20AppPromotionCardView_videoView);
}

void sub_1001024A4(void *a1)
{
  sub_10056660C((uint64_t)a1);

}

void (*sub_1001024EC(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100102118(v2);
  return sub_10007D3AC;
}

void sub_100102530()
{
  sub_10028CE64();
}

id sub_100102568()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*(_QWORD *)(*v0
                                       + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView)
                           + OBJC_IVAR____TtC8AppStore16AppPromotionView_appPromotionCardView));
}

id sub_10010258C()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView);
}

double sub_1001025A0()
{
  _QWORD *v0;
  uint64_t v1;
  CGRect v3;
  CGRect v4;
  CGRect v5;

  objc_msgSend(*(id *)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView)+ OBJC_IVAR____TtC8AppStore16AppPromotionView_availabilityLabelView), "frame");
  CGRectGetMaxY(v3);
  v1 = type metadata accessor for AppPromotionView(0);
  *(_QWORD *)&v4.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  CGRectGetHeight(v4);
  *(_QWORD *)&v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v1).n128_u64[0];
  CGRectGetWidth(v5);
  return 0.0;
}

CGFloat sub_100102628()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v1 = *(char **)(*v0 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8AppStore16AppPromotionView_availabilityLabelView], "frame");
  CGRectGetMaxY(v4);
  v2 = type metadata accessor for AppPromotionView(0);
  *(_QWORD *)&v5.origin.x = LayoutMarginsAware<>.layoutFrame.getter(v2).n128_u64[0];
  CGRectGetHeight(v5);
  objc_msgSend(v1, "bounds");
  return CGRectGetWidth(v6) * 0.5;
}

uint64_t sub_1001026B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000C8118(v3, a1);
}

uint64_t sub_100102704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000C80D0(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_10010275C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1001027A4(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CB194);
}

uint64_t sub_1001027C0(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102B14(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_1005CC0A8);
}

uint64_t sub_1001027CC(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CB180);
}

uint64_t sub_1001027D8(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102D4C(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1005C4398);
}

uint64_t sub_1001027E4(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_1001028E0(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1005CB504);
}

uint64_t sub_1001027F0(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CB918);
}

uint64_t sub_1001027FC(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102B14(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_1005CBBAC);
}

uint64_t sub_100102808(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_1001028E0(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1005CB760);
}

uint64_t sub_100102814(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CC56C);
}

uint64_t sub_100102820(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102D4C(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1005C4538);
}

uint64_t sub_10010282C(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_1001028E0(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1005CBBC0);
}

uint64_t sub_100102838(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102D4C(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1005C41E0);
}

uint64_t sub_100102844(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102D4C(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1005C41CC);
}

uint64_t sub_100102850(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102D4C(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1005C43AC);
}

uint64_t sub_10010285C(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102B14(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_1005CB8DC);
}

uint64_t sub_100102868(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CB4F0);
}

uint64_t sub_100102874(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CB904);
}

uint64_t sub_100102880(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_1001028E0(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1005CC3E0);
}

uint64_t sub_10010288C(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_1001028E0(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1005CBD28);
}

uint64_t sub_100102898(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_1001028E0(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1005CBF24);
}

uint64_t sub_1001028A4(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CB92C);
}

uint64_t sub_1001028B0(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CBB98);
}

uint64_t sub_1001028BC(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_1001028E0(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1005CB8F0);
}

uint64_t sub_1001028C8(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CB4DC);
}

uint64_t sub_1001028D4(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_1001028E0(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *))sub_1005CBEFC);
}

uint64_t sub_1001028E0(__n128 a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *, char *, char *, _QWORD *))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  id v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, char *, char *, _QWORD *);
  _QWORD v31[5];

  v30 = a4;
  v25 = a3;
  v29 = type metadata accessor for Shelf.PresentationHints(0, a1);
  v28 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for ComponentLayoutOptions(0);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10007B804((uint64_t *)&unk_10084DA50);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804((uint64_t *)&unk_10083A0A0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v15);
  ReadOnlyLens.value.getter(v31, v13);
  v18.n128_f64[0] = (*(double (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  ItemLayoutContext.mutableState.getter(v18);
  v19 = type metadata accessor for ObjectGraph(0);
  v20 = swift_dynamicCastClassUnconditional(v25, v19, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v20);
  KeyPath = swift_getKeyPath(&unk_1006643C8);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(KeyPath);
  v22 = sub_1000D2308();
  v30(v31, v12, v8, v5);
  v23 = swift_unknownObjectRelease(v22);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v28 + 8))(v5, v29, v23);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v31);
}

uint64_t sub_100102B08(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102B14(a3, a1, a2, (void (*)(_QWORD *, char *, char *, _QWORD *, id))sub_1005CB74C);
}

uint64_t sub_100102B14(__n128 a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *, char *, char *, _QWORD *, id))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  id v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, char *, char *, _QWORD *, id);
  _QWORD v31[5];

  v30 = a4;
  v25 = a3;
  v29 = type metadata accessor for Shelf.PresentationHints(0, a1);
  v28 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for ComponentLayoutOptions(0);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10007B804((uint64_t *)&unk_10084DA50);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804((uint64_t *)&unk_10083A0A0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v15);
  ReadOnlyLens.value.getter(v31, v13);
  v18.n128_f64[0] = (*(double (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  ItemLayoutContext.mutableState.getter(v18);
  v19 = type metadata accessor for ObjectGraph(0);
  v20 = swift_dynamicCastClassUnconditional(v25, v19, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v20);
  KeyPath = swift_getKeyPath(&unk_1006643C8);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(KeyPath);
  v22 = sub_1000D2308();
  v30(v31, v12, v8, v5, v22);
  v23 = swift_unknownObjectRelease(v22);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v28 + 8))(v5, v29, v23);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v31);
}

uint64_t sub_100102D40(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102D4C(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))sub_1005C4384);
}

uint64_t sub_100102D4C(__n128 a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *, char *, uint64_t, char *, _QWORD *, id))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  id v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, char *, uint64_t, char *, _QWORD *, id);
  _QWORD v31[5];

  v30 = a4;
  v25 = a3;
  v29 = type metadata accessor for Shelf.PresentationHints(0, a1);
  v28 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for ComponentLayoutOptions(0);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10007B804((uint64_t *)&unk_10084DA50);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804((uint64_t *)&unk_10083A0A0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v15);
  ReadOnlyLens.value.getter(v31, v13);
  v18.n128_f64[0] = (*(double (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  ItemLayoutContext.mutableState.getter(v18);
  v19 = type metadata accessor for ObjectGraph(0);
  v20 = swift_dynamicCastClassUnconditional(v25, v19, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v20);
  KeyPath = swift_getKeyPath(&unk_1006643C8);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(KeyPath);
  v22 = sub_1000D2308();
  v30(v31, v12, v20, v8, v5, v22);
  v23 = swift_unknownObjectRelease(v22);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v28 + 8))(v5, v29, v23);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v31);
}

uint64_t sub_100102F80(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CBF10);
}

uint64_t sub_100102F8C(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CACC4);
}

uint64_t sub_100102F98(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CC22C);
}

uint64_t sub_100102FA4(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100102FB0(a3, a1, a2, (void (*)(_QWORD *, char *, uint64_t, char *, _QWORD *))sub_1005CB004);
}

uint64_t sub_100102FB0(__n128 a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *, char *, uint64_t, char *, _QWORD *))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  id v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, char *, uint64_t, char *, _QWORD *);
  _QWORD v31[5];

  v30 = a4;
  v25 = a3;
  v29 = type metadata accessor for Shelf.PresentationHints(0, a1);
  v28 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for ComponentLayoutOptions(0);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10007B804((uint64_t *)&unk_10084DA50);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804((uint64_t *)&unk_10083A0A0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter(v15);
  ReadOnlyLens.value.getter(v31, v13);
  v18.n128_f64[0] = (*(double (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  ItemLayoutContext.mutableState.getter(v18);
  v19 = type metadata accessor for ObjectGraph(0);
  v20 = swift_dynamicCastClassUnconditional(v25, v19, 0, 0, 0);
  ItemLayoutContext.componentLayoutOptions.getter(v20);
  KeyPath = swift_getKeyPath(&unk_1006643C8);
  ItemLayoutContext.subscript.getter(v5);
  swift_release(KeyPath);
  v22 = sub_1000D2308();
  v30(v31, v12, v20, v8, v5);
  v23 = swift_unknownObjectRelease(v22);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v28 + 8))(v5, v29, v23);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v31);
}

uint64_t sub_1001031E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;

  v10 = sub_100005C94(&qword_10082DA60, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_1006642F0);
  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void sub_10010324C(uint64_t a1@<X8>)
{
  sub_100103B08(a1);
}

void sub_100103264(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t KeyPath;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  __n128 v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  double *v24;
  id v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;
  unsigned __int8 v36;

  v2 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = ShelfLayoutContext.contentPageGrid.getter(v10);
  v12 = PageGrid.componentMeasuringSize(spanning:)(v11);
  v13 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  v14 = v13(v9, v6);
  ShelfLayoutContext.shelf.getter(v14);
  KeyPath = swift_getKeyPath(&unk_100664458);
  ReadOnlyLens.subscript.getter(KeyPath, v2);
  v16 = swift_release(KeyPath);
  v17 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  LODWORD(v2) = v36;
  v18 = ShelfLayoutContext.contentPageGrid.getter(v17);
  v19 = PageGrid.containerWidth.getter(v18);
  v20.n128_f64[0] = ((double (*)(char *, uint64_t))v13)(v9, v6);
  v21 = ShelfLayoutContext.traitCollection.getter(v20);
  v22 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v23 = (char *)objc_allocWithZone(v22);
  v24 = (double *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *v24 = v19;
  v24[1] = 1.79769313e308;
  *(_QWORD *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v21;
  v35.receiver = v23;
  v35.super_class = v22;
  v25 = objc_msgSendSuper2(&v35, "init");
  if ((_DWORD)v2 == 1)
  {
    PageTraitEnvironment.pageColumnWidth.getter();
    v27 = v26;
    PageTraitEnvironment.pageColumnMargin.getter();
    v29 = qword_100826D50;
    v12 = (v27 - v28) / 1.5;
  }
  else
  {
    v29 = qword_100826D50;
  }
  if (v29 != -1)
    swift_once(&qword_100826D50, sub_100127648);
  v30 = type metadata accessor for AspectRatio(0);
  v31 = sub_10007AF70(v30, (uint64_t)qword_10088A788);
  v32 = AspectRatio.height(fromWidth:)(v31, v12);
  ComponentPrefetchSizing.init(size:contentMode:)(1, v12, v32);
  v33 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a1, 0, 1, v33);

}

void sub_1001034D4(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t (*v13)(char *, uint64_t, double);
  uint64_t v14;
  uint64_t KeyPath;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  __n128 v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  double *v24;
  id v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  objc_super v31;

  v2 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = ShelfLayoutContext.contentPageGrid.getter(v10);
  v12 = PageGrid.componentMeasuringSize(spanning:)(v11);
  v13 = *(uint64_t (**)(char *, uint64_t, double))(v7 + 8);
  v14 = v13(v9, v6, v12);
  ShelfLayoutContext.shelf.getter(v14);
  KeyPath = swift_getKeyPath(&unk_100664458);
  ReadOnlyLens.subscript.getter(KeyPath, v2);
  v16 = swift_release(KeyPath);
  v17 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  v18 = ShelfLayoutContext.contentPageGrid.getter(v17);
  v19 = PageGrid.containerWidth.getter(v18);
  v20.n128_f64[0] = ((double (*)(char *, uint64_t))v13)(v9, v6);
  v21 = ShelfLayoutContext.traitCollection.getter(v20);
  v22 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v23 = (char *)objc_allocWithZone(v22);
  v24 = (double *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *v24 = v19;
  v24[1] = 1.79769313e308;
  *(_QWORD *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v21;
  v31.receiver = v23;
  v31.super_class = v22;
  v25 = objc_msgSendSuper2(&v31, "init");
  PageTraitEnvironment.pageColumnWidth.getter();
  v27 = v26;
  PageTraitEnvironment.pageColumnMargin.getter();
  ComponentPrefetchSizing.init(size:contentMode:)(1, (v27 - v28) * 0.5, (v27 - v28) * 0.5);
  v29 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 0, 1, v29);

}

void sub_1001036D8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t (*v13)(char *, uint64_t, double);
  uint64_t v14;
  uint64_t KeyPath;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  __n128 v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  double *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;

  v2 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = ShelfLayoutContext.contentPageGrid.getter(v10);
  v12 = PageGrid.componentMeasuringSize(spanning:)(v11);
  v13 = *(uint64_t (**)(char *, uint64_t, double))(v7 + 8);
  v14 = v13(v9, v6, v12);
  ShelfLayoutContext.shelf.getter(v14);
  KeyPath = swift_getKeyPath(&unk_100664458);
  ReadOnlyLens.subscript.getter(KeyPath, v2);
  v16 = swift_release(KeyPath);
  v17 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  v18 = ShelfLayoutContext.contentPageGrid.getter(v17);
  v19 = PageGrid.containerWidth.getter(v18);
  v20.n128_f64[0] = ((double (*)(char *, uint64_t))v13)(v9, v6);
  v21 = ShelfLayoutContext.traitCollection.getter(v20);
  v22 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v23 = (char *)objc_allocWithZone(v22);
  v24 = (double *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *v24 = v19;
  v24[1] = 1.79769313e308;
  *(_QWORD *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v21;
  v32.receiver = v23;
  v32.super_class = v22;
  v25 = objc_msgSendSuper2(&v32, "init");
  if (qword_1008291A8 != -1)
    swift_once(&qword_1008291A8, sub_1005CD000);
  v26 = type metadata accessor for SmallLockupLayout.Metrics(0);
  v27 = sub_10007AF70(v26, (uint64_t)qword_1008906D0);
  v28 = SmallLockupLayout.Metrics.artworkSize.getter(v27);
  ComponentPrefetchSizing.init(size:contentMode:)(1, v28, v29);
  v30 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a1, 0, 1, v30);

}

void sub_100103904(uint64_t a1, uint64_t a2)
{
  sub_10010391C(a1, a2, (void (*)(uint64_t, id, double, double))sub_1003F8CA8);
}

void sub_100103910(uint64_t a1, uint64_t a2)
{
  sub_10010391C(a1, a2, (void (*)(uint64_t, id, double, double))sub_10041229C);
}

void sub_10010391C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, id, double, double))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  uint64_t (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t KeyPath;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  __n128 v24;
  uint64_t v25;
  objc_class *v26;
  char *v27;
  double *v28;
  id v29;
  uint64_t v30;
  void (*v31)(uint64_t, id, double, double);
  objc_super v32;
  unsigned __int8 v33;

  v31 = a3;
  v3 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PageGrid(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = ShelfLayoutContext.contentPageGrid.getter(v11);
  v13 = PageGrid.componentMeasuringSize(spanning:)(v12);
  v15 = v14;
  v16 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  v17 = v16(v10, v7);
  ShelfLayoutContext.shelf.getter(v17);
  KeyPath = swift_getKeyPath(&unk_100664458);
  ReadOnlyLens.subscript.getter(KeyPath, v3);
  v19 = swift_release(KeyPath);
  v20 = (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v19);
  v21 = v33;
  v22 = ShelfLayoutContext.contentPageGrid.getter(v20);
  v23 = PageGrid.containerWidth.getter(v22);
  v24.n128_f64[0] = ((double (*)(char *, uint64_t))v16)(v10, v7);
  v25 = ShelfLayoutContext.traitCollection.getter(v24);
  v26 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v27 = (char *)objc_allocWithZone(v26);
  v28 = (double *)&v27[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *v28 = v23;
  v28[1] = 1.79769313e308;
  *(_QWORD *)&v27[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v25;
  v32.receiver = v27;
  v32.super_class = v26;
  v29 = objc_msgSendSuper2(&v32, "init");
  v31(v21, v29, v13, v15);

}

void sub_100103B08(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t (*v13)(char *, uint64_t, double);
  uint64_t v14;
  uint64_t KeyPath;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  __n128 v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  double *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;

  v2 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageGrid(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = ShelfLayoutContext.contentPageGrid.getter(v10);
  v12 = PageGrid.componentMeasuringSize(spanning:)(v11);
  v13 = *(uint64_t (**)(char *, uint64_t, double))(v7 + 8);
  v14 = v13(v9, v6, v12);
  ShelfLayoutContext.shelf.getter(v14);
  KeyPath = swift_getKeyPath(&unk_100664458);
  ReadOnlyLens.subscript.getter(KeyPath, v2);
  v16 = swift_release(KeyPath);
  v17 = (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
  v18 = ShelfLayoutContext.contentPageGrid.getter(v17);
  v19 = PageGrid.containerWidth.getter(v18);
  v20.n128_f64[0] = ((double (*)(char *, uint64_t))v13)(v9, v6);
  v21 = ShelfLayoutContext.traitCollection.getter(v20);
  v22 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  v23 = (char *)objc_allocWithZone(v22);
  v24 = (double *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *v24 = v19;
  v24[1] = 1.79769313e308;
  *(_QWORD *)&v23[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v21;
  v28.receiver = v23;
  v28.super_class = v22;
  v25 = objc_msgSendSuper2(&v28, "init");
  v26 = type metadata accessor for ComponentPrefetchSizing(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 1, 1, v26);

}

uint64_t sub_100103CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001041D0(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100104B14);
}

uint64_t sub_100103D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001041D0(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100104B64);
}

uint64_t sub_100103D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100103D34(a1, a2, a3, (void (*)(char *, uint64_t))sub_100103264, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100104B64);
}

uint64_t sub_100103D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100103D34(a1, a2, a3, (void (*)(char *, uint64_t))sub_1001034D4, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100104B64);
}

uint64_t sub_100103D34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t), void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  void (*v26)(uint64_t *__return_ptr, uint64_t *);
  void (*v27)(char *, uint64_t);

  v26 = a5;
  v27 = a4;
  v25[0] = a2;
  v7 = type metadata accessor for ShelfLayoutContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10007B804(&qword_10082DA68);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ComponentPrefetchSizing(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v16);
  v27(v10, a3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_1000057AC((uint64_t)v13, &qword_10082DA68);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  v20 = sub_100104664();
  __chkstk_darwin(v20);
  v25[-2] = v18;
  v21 = (uint64_t)sub_1001019A4(v26, (uint64_t)&v25[-4], (uint64_t)v20);
  swift_bridgeObjectRelease(v20);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v23 = v21;
    else
      v23 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v21);
    if (!v24)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v21);
LABEL_6:
  v22 = swift_bridgeObjectRelease(v21);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v18, v14, v22);
}

uint64_t sub_100103F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100103D34(a1, a2, a3, (void (*)(char *, uint64_t))sub_1001036D8, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100104B64);
}

uint64_t sub_100103F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100103F8C(a1, a2, a3, (void (*)(uint64_t, id, double, double))sub_1003F8CA8, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100104B64);
}

uint64_t sub_100103F8C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, id, double, double), void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  void (*v26)(uint64_t *__return_ptr, uint64_t *);
  void (*v27)(uint64_t, id, double, double);

  v26 = a5;
  v27 = a4;
  v25[0] = a2;
  v7 = type metadata accessor for ShelfLayoutContext(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10007B804(&qword_10082DA68);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ComponentPrefetchSizing(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v16);
  sub_10010391C((uint64_t)v10, a3, v27);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_1000057AC((uint64_t)v13, &qword_10082DA68);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  v20 = sub_100104664();
  __chkstk_darwin(v20);
  v25[-2] = v18;
  v21 = (uint64_t)sub_1001019A4(v26, (uint64_t)&v25[-4], (uint64_t)v20);
  swift_bridgeObjectRelease(v20);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v23 = v21;
    else
      v23 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v21);
    if (!v24)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v21);
LABEL_6:
  v22 = swift_bridgeObjectRelease(v21);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v15 + 8))(v18, v14, v22);
}

uint64_t sub_1001041BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100103F8C(a1, a2, a3, (void (*)(uint64_t, id, double, double))sub_10041229C, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100104B64);
}

uint64_t sub_1001041D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  _QWORD *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  void (*v24)(uint64_t *__return_ptr, uint64_t *);

  v24 = a4;
  v23[1] = a2;
  v5 = type metadata accessor for ShelfLayoutContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10007B804(&qword_10082DA68);
  __chkstk_darwin(v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ComponentPrefetchSizing(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[2] = a1;
  ItemLayoutContext.parentShelfLayoutContext.getter(v14);
  sub_100103B08((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_1000057AC((uint64_t)v11, &qword_10082DA68);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
  v18 = sub_100104664();
  __chkstk_darwin(v18);
  v23[-2] = v16;
  v19 = (uint64_t)sub_1001019A4(v24, (uint64_t)&v23[-4], (uint64_t)v18);
  swift_bridgeObjectRelease(v18);
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v21 = v19;
    else
      v21 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v19);
    if (!v22)
      goto LABEL_6;
    goto LABEL_5;
  }
  if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_5:
    ArtworkLoader.prefetchArtwork(using:)((Swift::OpaquePointer)v19);
LABEL_6:
  v20 = swift_bridgeObjectRelease(v19);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v20);
}

uint64_t sub_1001043FC()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_100005C94(&qword_10082DA78, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100664358);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_100104444(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_100005C94(&qword_10082DA78, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100664358);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

void (*sub_1001044A4(_QWORD *a1))(_QWORD *)
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_100005C94(&qword_10082DA78, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100664358);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10007D3AC;
}

uint64_t sub_100104520()
{
  return sub_100005C94(&qword_10082DA38, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100664204);
}

uint64_t sub_10010454C()
{
  return sub_100005C94(&qword_10082DA40, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100664234);
}

uint64_t sub_100104578()
{
  return sub_100005C94(&qword_10082E4F0, type metadata accessor for VideoView, (uint64_t)&unk_10067E990);
}

uint64_t sub_1001045A4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_100005C94(&qword_10082DA48, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100664290);
  a1[2] = sub_100005C94(&qword_10082DA50, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_1006642C0);
  a1[3] = sub_100005C94(&qword_10082DA58, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_100664274);
  result = sub_100005C94(&qword_10082DA60, type metadata accessor for AppPromotionOfferCollectionViewCell, (uint64_t)&unk_1006642F0);
  a1[4] = result;
  return result;
}

uint64_t sub_100104638@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Shelf.isHorizontal.getter();
  *a1 = result & 1;
  return result;
}

_QWORD *sub_100104664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v0 = type metadata accessor for Shelf.ContentType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - v5;
  v7 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (_QWORD *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_1006643F8);
  ItemLayoutContext.subscript.getter(v10);
  swift_release(KeyPath);
  v12 = swift_getKeyPath(&unk_100664428);
  ReadOnlyLens.subscript.getter(v12, v7);
  v13 = swift_release(v12);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v8 + 8))(v10, v7, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Shelf.ContentType.todayCard(_:), v0);
  v14 = sub_100005C94((unint64_t *)&qword_10084CBE0, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.ContentType, (uint64_t)&protocol conformance descriptor for Shelf.ContentType);
  v15 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v3, v0, v14);
  v16 = *(void (**)(char *, uint64_t))(v1 + 8);
  v16(v3, v0);
  v16(v6, v0);
  if ((v15 & 1) != 0)
    return _swiftEmptyArrayStorage;
  v17 = sub_10007B804((uint64_t *)&unk_10084DA60);
  ItemLayoutContext.typedModel<A>(as:)(&v26, v17, v17);
  if (!v27)
  {
    sub_1000057AC((uint64_t)&v26, &qword_10082DA70);
    return _swiftEmptyArrayStorage;
  }
  sub_10000F5F4(&v26, (uint64_t)v28);
  v18 = v29;
  v19 = v30;
  sub_100060B40(v28, v29);
  v20 = dispatch thunk of ArtworkModelProtocol.artwork.getter(v18, v19);
  if (!v20)
  {
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v28);
    return _swiftEmptyArrayStorage;
  }
  v21 = v20;
  v22 = sub_10007B804((uint64_t *)&unk_10082B4A0);
  v23 = swift_allocObject(v22, 40, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100661700;
  *(_QWORD *)(v23 + 32) = v21;
  *(_QWORD *)&v26 = v23;
  specialized Array._endMutation()(v23);
  v24 = v26;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v28);
  return (_QWORD *)v24;
}

char *sub_1001048CC()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  _OWORD v20[2];
  objc_super v21[2];
  objc_super v22;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for AutomationSemantics(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = &v0[OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_itemLayoutContext];
  v8 = type metadata accessor for ItemLayoutContext(0, v7);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  v9 = objc_allocWithZone((Class)type metadata accessor for AppPromotionView(0));
  v10 = v0;
  v11 = objc_msgSend(v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView] = v11;

  v22.receiver = v10;
  v22.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView;
  memset(v21, 0, sizeof(v21));
  memset(v20, 0, sizeof(v20));
  v14 = v12;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)(0xD000000000000010, 0x80000001006AC0F0, v21, v20);
  sub_1000057AC((uint64_t)v20, (uint64_t *)&unk_10082B490);
  sub_1000057AC((uint64_t)v21, (uint64_t *)&unk_10082B490);
  UIView.setAutomationSemantics(_:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v15 = objc_msgSend(v14, "contentView");
  objc_msgSend(v15, "setClipsToBounds:", 0);

  v16 = objc_msgSend(v14, "contentView");
  objc_msgSend(v16, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);

  v17 = objc_msgSend(v14, "contentView");
  v18 = *(id *)&v12[v13];
  objc_msgSend(v17, "addSubview:", v18);

  return v14;
}

uint64_t sub_100104B14@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003D70B0(a1);
}

uint64_t sub_100104B38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Shelf.isHorizontal.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100104B64@<X0>(uint64_t *a1@<X8>)
{
  return sub_100104B14(a1);
}

char *sub_100104B7C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  id v28;
  id v29;
  void *v30;
  char *v31;
  id v32;
  id v33;
  objc_super v35;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[qword_10088A558] = 0;
  *(_QWORD *)&v5[qword_10088A560] = 0;
  v14 = qword_10088A568;
  v15 = objc_allocWithZone((Class)type metadata accessor for ArtworkGrid());
  v16 = v5;
  *(_QWORD *)&v5[v14] = objc_msgSend(v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = type metadata accessor for PaletteBackgroundView();
  *(_QWORD *)&v16[qword_10088A570] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17)), "init");

  v35.receiver = v16;
  v35.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v35, "initWithFrame:", a1, a2, a3, a4);
  v19 = *(void **)&v18[qword_10088B698];
  v20 = v18;
  objc_msgSend(v19, "setNumberOfLines:", 2);
  v21 = qword_100828190;
  v22 = v19;
  if (v21 != -1)
    swift_once(&qword_100828190, sub_1003A7128);
  v23 = type metadata accessor for FontUseCase(0);
  v24 = sub_10007AF70(v23, (uint64_t)qword_10088DEE0);
  v25 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v13, v24, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v13, 0, 1, v23);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter(v13);

  v26 = *(void **)&v20[qword_10088A568];
  objc_msgSend(v26, "setClipsToBounds:", 1);
  objc_msgSend(v26, "_setContinuousCornerRadius:", 14.0);
  v27 = v20;
  v28 = v26;
  v29 = objc_msgSend(v27, "backgroundView");
  objc_msgSend(v29, "addSubview:", v28);

  v30 = *(void **)&v27[qword_10088A570];
  objc_msgSend(v30, "_setCornerRadius:continuous:maskedCorners:", 1, 3, 14.0);
  v31 = v27;
  v32 = v30;
  v33 = objc_msgSend(v31, "backgroundView");
  objc_msgSend(v33, "addSubview:", v32);

  return v31;
}

char *sub_100104E58(double a1, double a2, double a3, double a4)
{
  return sub_100104B7C(a1, a2, a3, a4);
}

id sub_100104E78()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id receiver;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  objc_super v23;
  CGRect v24;
  CGRect v25;

  v1 = v0;
  v2 = (void *)objc_opt_self(UIView);
  v3 = objc_msgSend(v2, "areAnimationsEnabled");
  objc_msgSend(v2, "setAnimationsEnabled:", 0);
  v4 = objc_msgSend(v0, "backgroundView");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "bounds");
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;

    v23.receiver = *(id *)&v1[qword_10088A568];
    receiver = v23.receiver;
    v23.super_class = (Class)type metadata accessor for ArtworkGrid();
    objc_msgSendSuper2(&v23, "setFrame:", v7, v9, v11, v13);
    sub_10059A4B8();
    objc_msgSend(receiver, "setNeedsLayout");
    objc_msgSend(receiver, "layoutIfNeeded");
  }
  v15 = *(void **)&v1[qword_10088A570];
  objc_msgSend(v1, "bounds");
  CGRectGetWidth(v24);
  objc_msgSend(*(id *)&v1[qword_10088B698], "frame");
  CGRectGetMaxY(v25);
  if (qword_1008287A8 != -1)
    swift_once(&qword_1008287A8, sub_10007EAFC);
  v16 = type metadata accessor for StaticDimension(0);
  sub_10007AF70(v16, (uint64_t)qword_10088EFE0);
  v17 = objc_msgSend(v1, "traitCollection");
  type metadata accessor for TraitEnvironmentPlaceholder(0);
  v18 = sub_10007B804((uint64_t *)&unk_10082B4A0);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100661700;
  *(_QWORD *)(v19 + 32) = v17;
  v20 = v17;
  v21 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)(v19);
  dispatch thunk of AnyDimension.rawValue(in:)(v21, v16, &protocol witness table for StaticDimension);

  objc_msgSend(v15, "frame");
  objc_msgSend(v15, "setFrame:");
  objc_msgSend(v15, "layoutIfNeeded");
  return objc_msgSend(v2, "setAnimationsEnabled:", v3);
}

void sub_1001050FC(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  id v17;
  _BYTE v18[24];

  ObjectType = swift_getObjectType();
  v8 = a3 & 1;
  sub_1004FAB28(a1, a2, v8);
  v9 = swift_dynamicCastClass(a1, ObjectType);
  if (v9 && !(_DWORD)v8)
  {
    v10 = *(_QWORD *)(v9 + qword_10088A568);
    v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC8AppStore11ArtworkGrid_expectedNumberOfArtworkImages);
    v12 = *(_BYTE **)(v3 + qword_10088A568);
    v12[OBJC_IVAR____TtC8AppStore11ArtworkGrid_gridType] = *(_BYTE *)(v10
                                                                    + OBJC_IVAR____TtC8AppStore11ArtworkGrid_gridType);
    v17 = a1;
    sub_10059A4B8();
    objc_msgSend(v12, "setNeedsLayout");
    *(_QWORD *)&v12[OBJC_IVAR____TtC8AppStore11ArtworkGrid_expectedNumberOfArtworkImages] = v11;
    sub_10059A700();
    if ((v11 & 0x8000000000000000) == 0)
    {
      if (!v11)
      {

        return;
      }
      v13 = v10 + OBJC_IVAR____TtC8AppStore11ArtworkGrid_artworkImages;
      swift_beginAccess(v10 + OBJC_IVAR____TtC8AppStore11ArtworkGrid_artworkImages, v18, 0, 0);
      v14 = 0;
      while (v14 < *(_QWORD *)(*(_QWORD *)v13 + 16))
      {
        v15 = *(void **)(*(_QWORD *)v13 + 8 * v14 + 32);
        if (v15)
        {
          v16 = v15;
          sub_100599BA4(v16, v14);

        }
        if (v11 == ++v14)
        {

          return;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100105268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;

  v5 = v4;
  v7 = sub_1004FAE60();
  v8 = TodayCard.media.getter(v7);
  v9 = type metadata accessor for TodayCardMediaGrid(0);
  v10 = swift_dynamicCastClass(v8, v9);
  if (!v10)
  {
    v15 = v8;
    goto LABEL_5;
  }
  v11 = v10;
  v12 = type metadata accessor for ArtworkLoader(0);
  v13 = *(_QWORD *)(a4 + qword_10088FD90);
  if (v13)
  {
    v14 = *(_BYTE **)(v5 + qword_10088A568);
    swift_retain(*(_QWORD *)(a4 + qword_10088FD90));
    sub_10050B150(v11, v13, v14);
    swift_release(v8);
    v15 = v13;
LABEL_5:
    swift_release(v15);
    return;
  }
  dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v12, v12);
  __break(1u);
}

void sub_10010532C(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "prepareForReuse");
  sub_100599D0C();

}

void sub_100105388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  int v4;
  int v5;

  sub_1004FD85C();
  v1 = OBJC_IVAR____TtC8AppStore31BaseTodayCardCollectionViewCell_isExpanded;
  v2 = *(_QWORD *)(v0 + qword_10088A568);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8AppStore31BaseTodayCardCollectionViewCell_isExpanded))
    v3 = 0.0;
  else
    v3 = 14.0;
  objc_msgSend(*(id *)(v0 + qword_10088A568), "_setContinuousCornerRadius:", v3);
  objc_msgSend(*(id *)(v0 + qword_10088A570), "_setCornerRadius:continuous:maskedCorners:", 1, 3, v3);
  v4 = *(unsigned __int8 *)(v0 + v1);
  v5 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8AppStore11ArtworkGrid_isLazyLayoutEnabled);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8AppStore11ArtworkGrid_isLazyLayoutEnabled) = v4 ^ 1;
  if (v4 == v5)
    sub_10059B1D8();
}

void sub_100105444()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_10088A558));
  swift_release(*(_QWORD *)(v0 + qword_10088A560));

}

void sub_100105490(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_10088A558));
  swift_release(*(_QWORD *)(a1 + qword_10088A560));

}

uint64_t type metadata accessor for GridTodayCardCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10082DAA8;
  if (!qword_10082DAA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GridTodayCardCollectionViewCell);
  return result;
}

uint64_t sub_100105524(uint64_t a1)
{
  _QWORD v2[4];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 256, 4, v2, a1 + 808);
}

uint64_t sub_100105574()
{
  return type metadata accessor for GridTodayCardCollectionViewCell(0);
}

void sub_10010557C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  __n128 v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;

  v6 = type metadata accessor for Accessory(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v60 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - v10;
  v12 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
    goto LABEL_53;
  v13 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v14 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_57;
LABEL_3:
  if (v13 == *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    do
    {
      if (v12)
      {
        if (a3 < 0)
          v16 = a3;
        else
          v16 = a3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a3);
        swift_bridgeObjectRetain(a1);
        v15 = _CocoaArrayWrapper.endIndex.getter(v16);
        if (!v15)
        {
LABEL_44:
          swift_bridgeObjectRelease(a1);
          swift_bridgeObjectRelease(a3);
          return;
        }
      }
      else
      {
        v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(a3);
        swift_bridgeObjectRetain(a1);
        if (!v15)
          goto LABEL_44;
      }
      v59 = a3 & 0xC000000000000001;
      if ((a3 & 0xC000000000000001) != 0)
      {
        v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a3);
        if (!v14)
          goto LABEL_14;
      }
      else
      {
        if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_70:
          v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
          goto LABEL_18;
        }
        v12 = *(_QWORD *)(a3 + 32);
        swift_retain(v12);
        if (!v14)
        {
LABEL_14:
          v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v17)
            goto LABEL_67;
          goto LABEL_15;
        }
      }
      if (a1 < 0)
        v44 = a1;
      else
        v44 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v17 = _CocoaArrayWrapper.endIndex.getter(v44);
      swift_bridgeObjectRelease(a1);
      if (!v17)
      {
LABEL_67:
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(a3);
        v40 = v12;
        goto LABEL_68;
      }
LABEL_15:
      v55 = a1 & 0xC000000000000001;
      v56 = v17;
      if ((a1 & 0xC000000000000001) != 0)
        goto LABEL_70;
      if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        return;
      }
      v18 = *(_QWORD *)(a1 + 32);
      v19 = swift_retain(v18);
LABEL_18:
      v20 = (*(unsigned __int8 (**)(uint64_t, __n128))(v12 + 16))(a2, v19);
      if (v20 != (*(unsigned __int8 (**)(uint64_t))(v18 + 16))(a2))
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(a3);
        v39 = v12;
LABEL_47:
        swift_release(v39);
        v40 = v18;
LABEL_68:
        swift_release(v40);
        return;
      }
      v53 = v15;
      v21 = *(_QWORD *)(v12 + 32);
      v22 = *(_QWORD *)(v18 + 32);
      v23 = v12;
      v12 = *(_QWORD *)(v21 + 16);
      if (v12 != *(_QWORD *)(v22 + 16))
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(a3);
        v39 = v23;
        goto LABEL_47;
      }
      v57 = v18;
      v58 = v23;
      v50 = a3 + 32;
      v51 = a3 & 0xFFFFFFFFFFFFFF8;
      v48 = a1 + 32;
      v49 = a1 & 0xFFFFFFFFFFFFFF8;
      v54 = 1;
      v46 = v7;
      v47 = a2;
      v52 = a1;
      while (!v12 || v21 == v22)
      {
        swift_release(v58);
        swift_release(v57);
LABEL_29:
        v30 = v54;
        v31 = v56;
        if (v54 == v53)
          goto LABEL_44;
        if (v59)
        {
          v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(v54, a3);
          v33 = v30 + 1;
          if (__OFADD__(v30, 1))
            goto LABEL_72;
        }
        else
        {
          if (v54 >= *(_QWORD *)(v51 + 16))
            goto LABEL_73;
          v32 = *(_QWORD *)(v50 + 8 * v54);
          swift_retain(v32);
          v33 = v30 + 1;
          if (__OFADD__(v30, 1))
            goto LABEL_72;
        }
        if (v30 == v31)
        {
          swift_bridgeObjectRelease(a1);
          swift_bridgeObjectRelease(a3);
          v40 = v32;
          goto LABEL_68;
        }
        if (v55)
        {
          v34 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30, a1);
        }
        else
        {
          if (v30 >= *(_QWORD *)(v49 + 16))
            goto LABEL_74;
          v34 = *(_QWORD *)(v48 + 8 * v30);
          v35 = swift_retain(v34);
        }
        v36 = (*(unsigned __int8 (**)(uint64_t, __n128))(v32 + 16))(a2, v35);
        if (v36 != (*(unsigned __int8 (**)(uint64_t))(v34 + 16))(a2))
        {
          swift_bridgeObjectRelease(a1);
          swift_bridgeObjectRelease(a3);
          swift_release(v32);
          v40 = v34;
          goto LABEL_68;
        }
        v57 = v34;
        v58 = v32;
        v21 = *(_QWORD *)(v32 + 32);
        v22 = *(_QWORD *)(v34 + 32);
        v12 = *(_QWORD *)(v21 + 16);
        v37 = *(_QWORD *)(v22 + 16);
        v54 = v33;
        if (v12 != v37)
        {
          v38 = a1;
LABEL_49:
          swift_bridgeObjectRelease(v38);
          swift_bridgeObjectRelease(a3);
          swift_release(v58);
          v40 = v57;
          goto LABEL_68;
        }
      }
      v24 = v7;
      v7 = 0;
      v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      a2 = *(_QWORD *)(v24 + 72);
      while (1)
      {
        sub_100057828(v21 + v25, (uint64_t)v11);
        if (v7 >= *(_QWORD *)(v22 + 16))
          break;
        a1 = (uint64_t)v11;
        v26 = v60;
        sub_100057828(v22 + v25, v60);
        sub_100106DCC(a1, v26);
        v28 = v27;
        v29 = v26;
        v11 = (char *)a1;
        sub_100057B7C(v29);
        sub_100057B7C(a1);
        if ((v28 & 1) == 0)
        {
          v38 = v52;
          goto LABEL_49;
        }
        ++v7;
        v25 += a2;
        if (v12 == v7)
        {
          swift_release(v58);
          swift_release(v57);
          v7 = v46;
          a2 = v47;
          a1 = v52;
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_53:
      if (a3 < 0)
        v41 = a3;
      else
        v41 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a3);
      v13 = _CocoaArrayWrapper.endIndex.getter(v41);
      swift_bridgeObjectRelease(a3);
      v14 = (unint64_t)a1 >> 62;
      if (!((unint64_t)a1 >> 62))
        goto LABEL_3;
LABEL_57:
      if (a1 < 0)
        v42 = a1;
      else
        v42 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v43 = _CocoaArrayWrapper.endIndex.getter(v42);
      swift_bridgeObjectRelease(a1);
    }
    while (v13 == v43);
  }
}

void sub_100105A98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _QWORD v13[6];

  v13[4] = a1;
  v2 = type metadata accessor for StoreTab(0);
  v13[2] = *(_QWORD *)(v2 - 8);
  v13[3] = v2;
  __chkstk_darwin(v2);
  v13[1] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10007B804((uint64_t *)&unk_10083F430);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for FontUseCase(0);
  __chkstk_darwin(v6);
  v7 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v9 = type metadata accessor for Accessory(0);
  __chkstk_darwin(v9);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100057828(v1, (uint64_t)v11);
  v12 = (char *)sub_100105C44 + 4 * byte_1006644F0[swift_getEnumCaseMultiPayload(v11, v9)];
  __asm { BR              X10 }
}

void sub_100105C44()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *v0;
  v2 = v0[1];
  v5 = (void *)v0[2];
  v4 = v0[3];
  v6 = v0[4];
  v7 = *(_QWORD *)(v1 - 96);
  Hasher._combine(_:)(0);
  if (v2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v2);
    String.hash(into:)(v7, v3, v2);
    swift_bridgeObjectRelease_n(v2, 2);
    if (v5)
      goto LABEL_3;
LABEL_6:
    Hasher._combine(_:)(0);
    if (v6)
      goto LABEL_4;
    goto LABEL_7;
  }
  Hasher._combine(_:)(0);
  if (!v5)
    goto LABEL_6;
LABEL_3:
  Hasher._combine(_:)(1u);
  v8 = v5;
  NSObject.hash(into:)(v7);

  if (v6)
  {
LABEL_4:
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v6);
    String.hash(into:)(v7, v4, v6);
    swift_bridgeObjectRelease_n(v6, 2);

    return;
  }
LABEL_7:
  Hasher._combine(_:)(0);

}

Swift::Int sub_100106188()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100105A98((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1001061C8(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100105A98((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_10010622C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  if ((UITraitCollection.isSizeClassCompact.getter(a1) & 1) != 0)
    return a2;
  else
    return a3;
}

uint64_t sub_100106264()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for NavigationAccessory()
{
  return objc_opt_self(_TtC8AppStore19NavigationAccessory);
}

_QWORD *sub_1001062B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v13);
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        v10 = (void *)a2[2];
        v9 = a2[3];
        a1[2] = v10;
        a1[3] = v9;
        v11 = a2[4];
        a1[4] = v11;
        swift_bridgeObjectRetain(v8);
        v12 = v10;
        swift_bridgeObjectRetain(v11);
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        break;
      case 1u:
        v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        swift_bridgeObjectRetain(v15);
        v16 = *(int *)(sub_10007B804(&qword_10082DEE8) + 48);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = type metadata accessor for FontUseCase(0);
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          v21 = sub_10007B804(&qword_10082D610);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        v24 = (void *)a2[2];
        v23 = a2[3];
        a1[2] = v24;
        a1[3] = v23;
        swift_bridgeObjectRetain(v22);
        v25 = v24;
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v26 = *(int *)(sub_10007B804((uint64_t *)&unk_10082B4B0) + 48);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v29 = type metadata accessor for StoreTab(0);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = sub_10007B804((uint64_t *)&unk_10083F430);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        v32 = a2[1];
        *a1 = *a2;
        a1[1] = v32;
        swift_bridgeObjectRetain(v32);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 5u:
        v33 = a2[1];
        *a1 = *a2;
        a1[1] = v33;
        swift_bridgeObjectRetain(v33);
        swift_storeEnumTagMultiPayload(a1, a3, 5);
        break;
      case 6u:
        v34 = *a2;
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        swift_retain(v34);
        swift_storeEnumTagMultiPayload(a1, a3, 6);
        break;
      case 7u:
        v35 = a2[1];
        *a1 = *a2;
        a1[1] = v35;
        v37 = (void *)a2[2];
        v36 = a2[3];
        a1[2] = v37;
        a1[3] = v36;
        v39 = (void *)a2[4];
        v38 = a2[5];
        a1[4] = v39;
        a1[5] = v38;
        v40 = a2[6];
        a1[6] = v40;
        swift_bridgeObjectRetain(v35);
        v41 = v37;
        v42 = v39;
        swift_bridgeObjectRetain(v40);
        swift_storeEnumTagMultiPayload(a1, a3, 7);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

_QWORD *sub_1001065D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;

  if (a1 != a2)
  {
    sub_100057B7C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        *a1 = *a2;
        v6 = a2[1];
        a1[1] = v6;
        v7 = (void *)a2[2];
        a1[2] = v7;
        a1[3] = a2[3];
        v8 = a2[4];
        a1[4] = v8;
        swift_bridgeObjectRetain(v6);
        v9 = v7;
        swift_bridgeObjectRetain(v8);
        v10 = a1;
        v11 = a3;
        v12 = 0;
        goto LABEL_18;
      case 1u:
        *a1 = *a2;
        v13 = a2[1];
        a1[1] = v13;
        swift_bridgeObjectRetain(v13);
        v14 = *(int *)(sub_10007B804(&qword_10082DEE8) + 48);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = type metadata accessor for FontUseCase(0);
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          v19 = sub_10007B804(&qword_10082D610);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        v10 = a1;
        v11 = a3;
        v12 = 1;
        goto LABEL_18;
      case 2u:
        *a1 = *a2;
        v20 = a2[1];
        a1[1] = v20;
        v21 = (void *)a2[2];
        a1[2] = v21;
        a1[3] = a2[3];
        swift_bridgeObjectRetain(v20);
        v22 = v21;
        v10 = a1;
        v11 = a3;
        v12 = 2;
        goto LABEL_18;
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v23 = *(int *)(sub_10007B804((uint64_t *)&unk_10082B4B0) + 48);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for StoreTab(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = sub_10007B804((uint64_t *)&unk_10083F430);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v10 = a1;
        v11 = a3;
        v12 = 3;
        goto LABEL_18;
      case 4u:
        *a1 = *a2;
        v29 = a2[1];
        a1[1] = v29;
        swift_bridgeObjectRetain(v29);
        v10 = a1;
        v11 = a3;
        v12 = 4;
        goto LABEL_18;
      case 5u:
        *a1 = *a2;
        v30 = a2[1];
        a1[1] = v30;
        swift_bridgeObjectRetain(v30);
        v10 = a1;
        v11 = a3;
        v12 = 5;
        goto LABEL_18;
      case 6u:
        v31 = *a2;
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        swift_retain(v31);
        v10 = a1;
        v11 = a3;
        v12 = 6;
        goto LABEL_18;
      case 7u:
        *a1 = *a2;
        v32 = a2[1];
        a1[1] = v32;
        v33 = (void *)a2[2];
        a1[2] = v33;
        a1[3] = a2[3];
        v34 = (void *)a2[4];
        a1[4] = v34;
        a1[5] = a2[5];
        v35 = a2[6];
        a1[6] = v35;
        swift_bridgeObjectRetain(v32);
        v36 = v33;
        v37 = v34;
        swift_bridgeObjectRetain(v35);
        v10 = a1;
        v11 = a3;
        v12 = 7;
LABEL_18:
        swift_storeEnumTagMultiPayload(v10, v11, v12);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *sub_100106904(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 3)
  {
    *a1 = *a2;
    v13 = *(int *)(sub_10007B804((uint64_t *)&unk_10082B4B0) + 48);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for StoreTab(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_10007B804((uint64_t *)&unk_10083F430);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v19 = a1;
    v20 = a3;
    v21 = 3;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = *(int *)(sub_10007B804(&qword_10082DEE8) + 48);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for FontUseCase(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_10007B804(&qword_10082D610);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v19 = a1;
    v20 = a3;
    v21 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v19, v20, v21);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *sub_100106AC0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_100057B7C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      v13 = *(int *)(sub_10007B804((uint64_t *)&unk_10082B4B0) + 48);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = type metadata accessor for StoreTab(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_10007B804((uint64_t *)&unk_10083F430);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v19 = a1;
      v20 = a3;
      v21 = 3;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = *(int *)(sub_10007B804(&qword_10082DEE8) + 48);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for FontUseCase(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_10007B804(&qword_10082D610);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v19 = a1;
      v20 = a3;
      v21 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v19, v20, v21);
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t storeEnumTagSinglePayload for NavigationAccessory.Location(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100106CD8 + 4 * byte_100664520[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100106D0C + 4 * byte_10066451B[v4]))();
}

uint64_t sub_100106D0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100106D14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100106D1CLL);
  return result;
}

uint64_t sub_100106D28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100106D30);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100106D34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100106D3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NavigationAccessory.Location()
{
  return &type metadata for NavigationAccessory.Location;
}

unint64_t sub_100106D5C()
{
  unint64_t result;

  result = qword_10082DFA8;
  if (!qword_10082DFA8)
  {
    result = swift_getWitnessTable(&unk_10066465C, &type metadata for NavigationAccessory.Location);
    atomic_store(result, (unint64_t *)&qword_10082DFA8);
  }
  return result;
}

uint64_t sub_100106DA0()
{
  return sub_100005C94(&qword_10082DFB0, type metadata accessor for Accessory, (uint64_t)&unk_1006646C4);
}

void sub_100106DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;

  v49 = a1;
  v50 = (char *)a2;
  v41 = type metadata accessor for StoreTab(0);
  v39 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v34[1] = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10007B804(&qword_10082DFB8);
  __chkstk_darwin(v38);
  v40 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10007B804((uint64_t *)&unk_10083F430);
  __chkstk_darwin(v4);
  v34[2] = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v47 = (char *)v34 - v7;
  __chkstk_darwin(v8);
  v46 = (char *)v34 - v9;
  v10 = type metadata accessor for FontUseCase(0);
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  __chkstk_darwin(v10);
  v34[0] = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_10007B804(&qword_10082DFC0);
  __chkstk_darwin(v35);
  v43 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v13);
  v42 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v44 = (char *)v34 - v16;
  __chkstk_darwin(v17);
  v45 = (char *)v34 - v18;
  v19 = type metadata accessor for Accessory(0);
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  v48 = (char *)v34 - v21;
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  __chkstk_darwin(v26);
  __chkstk_darwin(v27);
  v28 = sub_10007B804(&qword_10082DFC8);
  __chkstk_darwin(v28);
  v30 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (uint64_t)&v30[*(int *)(v31 + 48)];
  sub_100057828(v49, (uint64_t)v30);
  v49 = v32;
  sub_100057828((uint64_t)v50, v32);
  v50 = v30;
  v33 = (char *)sub_100107180 + 4 * byte_100664525[swift_getEnumCaseMultiPayload(v30, v19)];
  __asm { BR              X10 }
}

uint64_t sub_100107180()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  sub_100057828(*(_QWORD *)(v2 - 128), (uint64_t)v1);
  v4 = *v1;
  v3 = v1[1];
  v6 = (void *)v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v8 = *(_QWORD **)(v2 - 136);
  if (swift_getEnumCaseMultiPayload(v8, v0))
  {
    swift_bridgeObjectRelease(v7);

    swift_bridgeObjectRelease(v3);
    sub_1000057AC(*(_QWORD *)(v2 - 128), &qword_10082DFC8);
    return 0;
  }
  v9 = v8[1];
  v10 = (void *)v8[2];
  v12 = v8[3];
  v11 = v8[4];
  if (!v3)
  {
    if (!v9)
      goto LABEL_14;
    v3 = v8[1];
    goto LABEL_10;
  }
  if (!v9)
  {
LABEL_10:
    swift_bridgeObjectRelease(v3);
    goto LABEL_11;
  }
  if (v4 == *v8 && v3 == v9)
  {
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v9);
    goto LABEL_14;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v3, *v8, v8[1], 0);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v9);
  if ((v13 & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease(v11);

    goto LABEL_12;
  }
LABEL_14:
  if (v6)
  {
    if (v10)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v14 = v10;
      v15 = v6;
      v16 = static NSObject.== infix(_:_:)(v15, v14);

      if ((v16 & 1) == 0)
      {

        swift_bridgeObjectRelease(v11);
LABEL_20:
        swift_bridgeObjectRelease(v7);
        goto LABEL_21;
      }
      goto LABEL_22;
    }
    swift_bridgeObjectRelease(v11);
LABEL_12:
    swift_bridgeObjectRelease(v7);

LABEL_21:
    v17 = *(_QWORD *)(v2 - 128);
LABEL_34:
    sub_100057B7C(v17);
    return 0;
  }
  if (v10)
  {
    swift_bridgeObjectRelease(v11);

    goto LABEL_20;
  }
LABEL_22:
  if (!v7)
  {

    v18 = *(_QWORD *)(v2 - 128);
    if (!v11)
      goto LABEL_32;
    swift_bridgeObjectRelease(v11);
LABEL_33:
    v17 = v18;
    goto LABEL_34;
  }
  if (!v11)
  {
    swift_bridgeObjectRelease(v7);

    v18 = *(_QWORD *)(v2 - 128);
    goto LABEL_33;
  }
  if (v5 != v12 || v7 != v11)
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v12, v11, 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);

    v18 = *(_QWORD *)(v2 - 128);
    if ((v20 & 1) != 0)
      goto LABEL_32;
    goto LABEL_33;
  }
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);

  v18 = *(_QWORD *)(v2 - 128);
LABEL_32:
  sub_100057B7C(v18);
  return 1;
}

double sub_100107E7C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int EnumCaseMultiPayload;
  void *v15;
  NSString v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __n128 v25;
  _QWORD v27[4];

  v2 = v1;
  v3 = type metadata accessor for OSLogger(0, a1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SystemImage(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Accessory(0);
  __chkstk_darwin(v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100057828(v2, (uint64_t)v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v11);
  if (EnumCaseMultiPayload == 10)
    goto LABEL_5;
  if (EnumCaseMultiPayload == 9)
  {
    v15 = (void *)objc_opt_self(UIImage);
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "kitImageNamed:", v16);

    if (v17)
    {
LABEL_6:
      objc_msgSend(v17, "size");
      v19 = v18;

      return v19;
    }
    __break(1u);
LABEL_5:
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for SystemImage.chevronForward(_:), v7);
    v17 = (id)static SystemImage.load(_:with:)(v10, 0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_6;
  }
  if (qword_100826EA8 != -1)
    swift_once(&qword_100826EA8, sub_100160F60);
  v20 = sub_10007AF70(v3, (uint64_t)qword_10088AA60);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v20, v3);
  v21 = sub_10007B804((uint64_t *)&unk_10082D0C0);
  v22 = type metadata accessor for LogMessage(0);
  v23 = swift_allocObject(v21, ((*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80))+ 3 * *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) | 7);
  *(_OWORD *)(v23 + 16) = xmmword_100662370;
  LogMessage.init(stringLiteral:)(0x726F737365636341, 0xE900000000000079);
  v27[3] = v11;
  v24 = sub_100024638(v27);
  sub_100057828(v2, (uint64_t)v24);
  static LogMessage.safe(_:)(v27);
  sub_1000057AC((uint64_t)v27, (uint64_t *)&unk_10082B490);
  LogMessage.init(stringLiteral:)(0xD000000000000020, 0x80000001006AC1E0);
  Logger.debug(_:)(v23, v3, &protocol witness table for OSLogger);
  v25 = swift_bridgeObjectRelease(v23);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v25);
  sub_100057B7C((uint64_t)v13);
  return 0.0;
}

void sub_1001081B8()
{
  qword_10082DFF0 = 0x4014000000000000;
}

void sub_1001081C8()
{
  qword_10082DFF8 = 0x4034000000000000;
}

char *sub_1001081D8(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  Swift::String v24;
  Swift::String v25;
  void *object;
  NSString v27;
  objc_super v29;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_label;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v2;
  *(_QWORD *)&v2[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_backgroundView;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  v29.receiver = v6;
  v29.super_class = ObjectType;
  v8 = (char *)objc_msgSendSuper2(&v29, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_backgroundView;
  v10 = *(void **)&v8[OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_backgroundView];
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "systemBlueColor");
  objc_msgSend(v12, "setBackgroundColor:", v13);

  v14 = objc_msgSend(*(id *)&v8[v9], "layer");
  objc_msgSend(v14, "setCornerRadius:", 13.0);

  v15 = objc_msgSend(*(id *)&v8[v9], "layer");
  objc_msgSend(v15, "setCornerCurve:", kCACornerCurveCircular);

  objc_msgSend(v8, "addSubview:", *(_QWORD *)&v8[v9]);
  v16 = OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_label;
  v17 = *(id *)&v8[OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_label];
  v18 = objc_msgSend(v11, "whiteColor");
  objc_msgSend(v17, "setTextColor:", v18);

  v19 = *(void **)&v8[v16];
  v20 = (void *)objc_opt_self(UIFont);
  v21 = v19;
  v22 = objc_msgSend(v20, "systemFontOfSize:", 32.0);
  objc_msgSend(v21, "setFont:", v22);

  v23 = *(id *)&v8[v16];
  v24._object = (void *)0x80000001006AC2C0;
  v24._countAndFlagsBits = 0xD00000000000001FLL;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  object = localizedString(_:comment:)(v24, v25)._object;
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v23, "setText:", v27);

  objc_msgSend(v8, "addSubview:", *(_QWORD *)&v8[v16]);
  return v8;
}

id sub_100108578()
{
  char *v0;
  void *v1;
  void *v2;
  double v3;
  double v4;
  double Width;
  objc_super v7;
  CGRect v8;
  CGRect v9;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_backgroundView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_label];
  objc_msgSend(v2, "sizeToFit");
  if (qword_100826CC8 != -1)
    swift_once(&qword_100826CC8, sub_1001081C8);
  v3 = *(double *)&qword_10082DFF8;
  if (qword_100826CC0 != -1)
    swift_once(&qword_100826CC0, sub_1001081B8);
  v4 = *(double *)&qword_10082DFF0;
  objc_msgSend(v2, "frame");
  Width = CGRectGetWidth(v8);
  objc_msgSend(v2, "frame");
  return objc_msgSend(v2, "setFrame:", v3, v4, Width, CGRectGetHeight(v9));
}

uint64_t type metadata accessor for OnboardingAdPrivacyHeaderIconView()
{
  return objc_opt_self(_TtC8AppStore33OnboardingAdPrivacyHeaderIconView);
}

double sub_1001087B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v15;

  v1 = type metadata accessor for FloatingPointRoundingRule(0);
  v2 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)&v3 = __chkstk_darwin(v1).n128_u64[0];
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_label);
  objc_msgSend(v6, "sizeToFit", v3);
  objc_msgSend(v6, "frame");
  v8 = v7;
  v10 = v9;
  if (qword_100826CC8 != -1)
    swift_once(&qword_100826CC8, sub_1001081C8);
  v11 = *(double *)&qword_10082DFF8;
  if (qword_100826CC0 != -1)
    swift_once(&qword_100826CC0, sub_1001081B8);
  v12 = v10 + *(double *)&qword_10082DFF0 + *(double *)&qword_10082DFF0;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for FloatingPointRoundingRule.up(_:), v1);
  v13 = CGSize.rounded(_:)(v5, v8 + v11 + v11, v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v13;
}

uint64_t sub_10010890C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  _QWORD *v18;
  void (*v19)(_QWORD *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  char *v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  _QWORD v43[5];
  _QWORD v44[3];
  void *v45;
  void *v46;
  _QWORD v47[6];

  v39 = type metadata accessor for PlatformSelectorViewLayout.Metrics.AccessoryAlignment(0);
  v38 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v40 = (char *)&v35 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = type metadata accessor for FontSource(0);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticDimension(0);
  __chkstk_darwin(v5);
  v36 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v42 = (char *)&v35 - v8;
  v10 = __chkstk_darwin(v9);
  v41 = (char *)&v35 - v11;
  v12 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v10);
  sub_100033BAC(v12, qword_10082E038);
  v37 = sub_10007AF70(v12, (uint64_t)qword_10082E038);
  v47[3] = &type metadata for Double;
  v47[4] = &protocol witness table for Double;
  v47[0] = 0x4024000000000000;
  if (qword_100827E38 != -1)
    swift_once(&qword_100827E38, sub_1003A55D4);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = sub_10007AF70(v13, (uint64_t)qword_10088D4D8);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15(v4, v14, v13);
  v16 = enum case for FontSource.useCase(_:);
  v17 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v17(v4, enum case for FontSource.useCase(_:), v1);
  v45 = (void *)v1;
  v46 = &protocol witness table for FontSource;
  v18 = sub_100024638(v44);
  v19 = (void (*)(_QWORD *, char *, uint64_t))v2[2];
  v19(v18, v4, v1);
  StaticDimension.init(_:scaledLike:)(v44, 20.0);
  v20 = (void (*)(char *, uint64_t))v2[1];
  v20(v4, v1);
  v15(v4, v14, v13);
  v17(v4, v16, v1);
  v45 = (void *)v1;
  v46 = &protocol witness table for FontSource;
  v21 = sub_100024638(v44);
  v19(v21, v4, v1);
  StaticDimension.init(_:scaledLike:)(v44, 22.0);
  v20(v4, v1);
  v15(v4, v14, v13);
  v17(v4, v16, v1);
  v45 = (void *)v1;
  v46 = &protocol witness table for FontSource;
  v22 = sub_100024638(v44);
  v19(v22, v4, v1);
  v23 = v36;
  StaticDimension.init(_:scaledLike:)(v44, 10.0);
  v20(v4, v1);
  v46 = &protocol witness table for Double;
  v45 = &type metadata for Double;
  v44[0] = 0x4024000000000000;
  v24 = v23;
  if (qword_100826CD8 != -1)
    swift_once(&qword_100826CD8, sub_100108CF8);
  objc_msgSend((id)qword_10082E050, "contentInsets");
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v40, enum case for PlatformSelectorViewLayout.Metrics.AccessoryAlignment.inline(_:), v39);
  v43[3] = &type metadata for Double;
  v43[4] = &protocol witness table for Double;
  v43[0] = 0x402C000000000000;
  return PlatformSelectorViewLayout.Metrics.init(badgeHorizontalPadding:textSpaceWhenInline:textSpaceWhenExclusiveLine:badgeSpaceExclusiveLine:accessoryHorizontalPadding:accessoryContentInsets:accessoryAlignment:bottomSpacer:)(v47, v41, v42, v24, v44, v33, v43, v26, v28, v30, v32);
}

uint64_t sub_100108CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = type metadata accessor for SystemImage(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for SystemImage.chevronDown(_:), v0);
  v4 = static SystemImage.load(_:with:)(v3, 0);
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_10082E050 = v4;
  return result;
}

uint64_t sub_100108D98()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
  result = static UIColor.secondaryText.getter(v0);
  qword_10088A578 = result;
  return result;
}

char *sub_100108DD8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  objc_class *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(_BYTE *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t inited;
  _UNKNOWN **v38;
  void *v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  _UNKNOWN **v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  char *v52;
  double v53;
  double v54;
  double v55;
  double v56;
  id v57;
  char *v59;
  _UNKNOWN **v60;
  id v61;
  id v62;
  _BYTE v63[12];
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_BYTE *, uint64_t, uint64_t);
  char *v68;
  objc_class *ObjectType;
  uint64_t v70;
  char v71[56];
  objc_super v72;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v63[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v13);
  v15 = &v63[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_numberOfBadges] = 0;
  v16 = &v4[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_didSelectHandler];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = qword_100827E38;
  v68 = v4;
  if (v17 != -1)
    swift_once(&qword_100827E38, sub_1003A55D4);
  v18 = type metadata accessor for FontUseCase(0);
  v19 = sub_10007AF70(v18, (uint64_t)qword_10088D4D8);
  v20 = *(_QWORD *)(v18 - 8);
  v67 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16);
  v65 = v19;
  v67(v15, v19, v18);
  v21 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v21(v15, 0, 1, v18);
  v22 = enum case for DirectionalTextAlignment.none(_:);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 104);
  v64 = enum case for DirectionalTextAlignment.none(_:);
  v66 = v9;
  v23(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v24 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v25 = objc_allocWithZone(v24);
  v26 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 4, 0, 0, v12, 0, 0);
  v27 = v68;
  *(_QWORD *)&v68[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel] = v26;
  v28 = v19;
  v29 = v67;
  v67(v15, v28, v18);
  v21(v15, 0, 1, v18);
  v30 = v22;
  v31 = v66;
  v23(v12, v30, v66);
  v32 = objc_allocWithZone(v24);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesInlineLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 4, 0, 0, v12, 0, 0);
  v29(v15, v65, v18);
  v21(v15, 0, 1, v18);
  v23(v12, v64, v31);
  v33 = objc_allocWithZone(v24);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithTwoColumnsLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 0, 4, 0, 0, v12, 0, 0);
  v34 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v27[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_accessoryImageView] = v34;

  v72.receiver = v27;
  v72.super_class = ObjectType;
  v35 = (char *)objc_msgSendSuper2(&v72, "initWithFrame:", a1, a2, a3, a4);
  v36 = sub_10007B804((uint64_t *)&unk_10082B4A0);
  inited = swift_initStackObject(v36, v71);
  *(_OWORD *)(inited + 16) = xmmword_100662C90;
  v38 = *(_UNKNOWN ***)&v35[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel];
  *(_QWORD *)(inited + 32) = v38;
  v39 = *(void **)&v35[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesInlineLabel];
  *(_QWORD *)(inited + 40) = v39;
  v40 = *(void **)&v35[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithTwoColumnsLabel];
  *(_QWORD *)(inited + 48) = v40;
  v70 = inited;
  specialized Array._endMutation()(inited);
  v41 = v70;
  v42 = v70 & 0xC000000000000001;
  if ((v70 & 0xC000000000000001) != 0)
  {
    v59 = v35;
    v60 = v38;
    v61 = v39;
    v62 = v40;
    v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v41);
LABEL_6:
    v38 = &off_100826000;
    if (qword_100826CE0 == -1)
      goto LABEL_7;
    goto LABEL_20;
  }
  if (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    v27 = (char *)*(id *)(v70 + 32);
    v43 = v35;
    v44 = v38;
    v45 = v39;
    v46 = v40;
    goto LABEL_6;
  }
  __break(1u);
LABEL_20:
  swift_once(&qword_100826CE0, sub_100108D98);
LABEL_7:
  objc_msgSend(v27, "setTextColor:", qword_10088A578);
  objc_msgSend(v35, "addSubview:", v27);

  if (v42)
    v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v41);
  else
    v47 = *(id *)(v41 + 40);
  v48 = v47;
  if (v38[412] != (_UNKNOWN *)-1)
    swift_once(&qword_100826CE0, sub_100108D98);
  objc_msgSend(v48, "setTextColor:", qword_10088A578);
  objc_msgSend(v35, "addSubview:", v48);

  if (v42)
    v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v41);
  else
    v49 = *(id *)(v41 + 48);
  v50 = v49;
  if (v38[412] != (_UNKNOWN *)-1)
    swift_once(&qword_100826CE0, sub_100108D98);
  objc_msgSend(v50, "setTextColor:", qword_10088A578);
  objc_msgSend(v35, "addSubview:", v50);
  swift_bridgeObjectRelease(v41);

  v51 = *(void **)&v35[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_accessoryImageView];
  objc_msgSend(v51, "setTintColor:", qword_10088A578);
  objc_msgSend(v35, "addSubview:", v51);
  v52 = v35;
  objc_msgSend(v52, "layoutMargins");
  v54 = v53;
  objc_msgSend(v52, "layoutMargins");
  v56 = v55;
  objc_msgSend(v52, "layoutMargins");
  objc_msgSend(v52, "setLayoutMargins:", v54, 0.0, v56);

  v57 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v52, "didTapSelectorView");
  objc_msgSend(v52, "addGestureRecognizer:", v57);

  return v52;
}

uint64_t sub_1001094D4()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  __n128 v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  _QWORD v35[5];
  objc_super v36;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = type metadata accessor for LayoutRect(0);
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  v3 = __chkstk_darwin(v2);
  v31 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlatformSelectorViewLayout(0);
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for BadgeDisplayStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v19 = (char *)&v28 - v18;
  v36.receiver = v0;
  v36.super_class = ObjectType;
  v30 = ObjectType;
  objc_msgSendSuper2(&v36, "layoutSubviews", v17);
  static BadgeDisplayStyle.style(forBadgeCount:pageTraits:indentForBadges:)(*(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_numberOfBadges], v0, 0, 1);
  v20 = sub_100109788((uint64_t)v19);
  sub_1001098B4((uint64_t)v20);
  if (qword_100826CD0 != -1)
    swift_once(&qword_100826CD0, sub_10010890C);
  v21 = sub_10007AF70(v5, (uint64_t)qword_10082E038);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v5);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v19, v12);
  v35[3] = type metadata accessor for DynamicTypeLabel(0);
  v35[4] = &protocol witness table for UILabel;
  v35[0] = v20;
  v22 = *(void **)&v0[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_accessoryImageView];
  v34[3] = sub_100008FE4(0, (unint64_t *)&qword_100833550, UIImageView_ptr);
  v34[4] = &protocol witness table for UIView;
  v34[0] = v22;
  v23 = v20;
  v24 = v22;
  PlatformSelectorViewLayout.init(metrics:style:descriptionLabel:accessoryImageView:)(v8, v15, v35, v34);
  v25 = LayoutMarginsAware<>.layoutFrame.getter(v30);
  v26 = v31;
  PlatformSelectorViewLayout.placeChildren(relativeTo:in:)(v0, v25);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v33);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
}

id sub_100109788(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  void (*v10)(char *, uint64_t);
  id v11;
  uint64_t v12;

  v3 = type metadata accessor for BadgeDisplayStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for BadgeDisplayStyle.left(_:))
  {
    v8 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithTwoColumnsLabel;
    return *(id *)(v1 + v8);
  }
  if (v7 == enum case for BadgeDisplayStyle.above(_:))
  {
    v8 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel;
    return *(id *)(v1 + v8);
  }
  if (v7 == enum case for BadgeDisplayStyle.inline(_:))
  {
    v8 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesInlineLabel;
    return *(id *)(v1 + v8);
  }
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel);
  v10(v6, v3);
  return v11;
}

id sub_1001098B4(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  char v5;
  id v6;
  char v7;
  id v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel);
  type metadata accessor for DynamicTypeLabel(0);
  v4 = v3;
  v5 = static NSObject.== infix(_:_:)(a1, v4);

  objc_msgSend(v4, "setHidden:", (v5 & 1) == 0);
  v6 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesInlineLabel);
  v7 = static NSObject.== infix(_:_:)(a1, v6);

  objc_msgSend(v6, "setHidden:", (v7 & 1) == 0);
  v8 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithTwoColumnsLabel);
  LOBYTE(a1) = static NSObject.== infix(_:_:)(a1, v8);

  return objc_msgSend(v8, "setHidden:", (a1 & 1) == 0);
}

uint64_t sub_1001099D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v2 = type metadata accessor for AppPlatform(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MediaPlatform.appPlatform.getter(v4);
  v8 = AppPlatform.rawValue.getter(v7);
  v10 = v9;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = v8;
  a1[1] = v10;
  return result;
}

uint64_t type metadata accessor for PlatformSelectorView()
{
  return objc_opt_self(_TtC8AppStore20PlatformSelectorView);
}

uint64_t sub_100109BBC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  NSString *v22;
  id v23;
  NSString *v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[112];
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for FloatingPointRoundingRule(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
  if (qword_100827E38 != -1)
    swift_once(&qword_100827E38, sub_1003A55D4);
  v9 = type metadata accessor for FontUseCase(0);
  v10 = sub_10007AF70(v9, (uint64_t)qword_10088D4D8);
  v11 = objc_msgSend(a2, "traitCollection");
  v12 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)(v10, v11);

  v30 = sub_100008FE4(0, (unint64_t *)&unk_10083A7D0, NSAttributedString_ptr);
  v31 = a1;
  v13 = objc_msgSend(a2, "traitCollection", swift_bridgeObjectRetain(a1).n128_f64[0]);
  if (qword_100826CD0 != -1)
    swift_once(&qword_100826CD0, sub_10010890C);
  v15 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v14);
  sub_10007AF70(v15, (uint64_t)qword_10082E038);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(v33);
  v16 = v34;
  v17 = v35;
  sub_100060B40(v33, v34);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v16);
  v18 = AnyDimension.value(in:rounded:)(a2, v7, v16, v17);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v19 = sub_10007B804(&qword_100830EA0);
  inited = swift_initStackObject(v19, v32);
  *(_OWORD *)(inited + 16) = xmmword_100661E10;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 40) = v12;
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v21 = qword_100826CE0;
  v22 = NSFontAttributeName;
  v23 = v12;
  v24 = NSForegroundColorAttributeName;
  if (v21 != -1)
    swift_once(&qword_100826CE0, sub_100108D98);
  v25 = (void *)qword_10088A578;
  *(_QWORD *)(inited + 104) = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v25;
  v26 = v25;
  v27 = sub_10005FA64(inited);
  v28 = NSAttributedString.init(images:for:adjustsImageSizeForAccessibilityContentSizeCategory:interItemSpacing:defaultAttributes:imagesShouldRenderAsTemplates:)(v31, v13, 1, v27, 0, v18);

  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v33);
  return v28;
}

double sub_100109EA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, char a7, void *a8, __n128 a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  void *v46;
  __n128 v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  objc_class *v56;
  id v57;
  void *v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  id v68;
  char *v69;
  id v70;
  id v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  unint64_t v83;
  uint64_t v84;
  double v85;
  uint64_t v86;
  double v87;
  double v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  id v108;
  _QWORD v109[5];
  _QWORD v110[3];
  objc_class *v111;
  void *v112;

  v108 = a8;
  v94 = a4;
  v93 = a3;
  v14 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, a9);
  v100 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v101 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PlatformSelectorViewLayout(0);
  v105 = *(_QWORD *)(v16 - 8);
  v106 = v16;
  __chkstk_darwin(v16);
  v104 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for DirectionalTextAlignment(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v98 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v19);
  v95 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for BadgeDisplayStyle(0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v99 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v107 = (char *)&v92 - v23;
  v92 = type metadata accessor for FloatingPointRoundingRule(0);
  v24 = *(_QWORD *)(v92 - 8);
  v25 = __chkstk_darwin(v92);
  v27 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a7 & 1) != 0)
  {
    if (qword_100826CD8 != -1)
      swift_once(&qword_100826CD8, sub_100108CF8);
    objc_msgSend((id)qword_10082E050, "size");
    v28 = v25.n128_f64[0];
  }
  else
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v91 = a2;
      else
        v91 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v29 = _CocoaArrayWrapper.endIndex.getter(v91);
      v25 = swift_bridgeObjectRelease(a2);
    }
    else
    {
      v29 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v28 = 0.0;
    if (v29 > 1)
    {
      type metadata accessor for MediaPlatform(0, v25);
      v30 = sub_10007B804((uint64_t *)&unk_10082B4A0);
      v31 = swift_allocObject(v30, 40, 7);
      *(_OWORD *)(v31 + 16) = xmmword_100661700;
      *(_QWORD *)(v31 + 32) = a1;
      v110[0] = v31;
      specialized Array._endMutation()(v31);
      v32 = v110[0];
      v33 = swift_retain(a1);
      v34 = static MediaPlatform.systemImages(platforms:)(v32, v33);
      swift_bridgeObjectRelease(v32);
      goto LABEL_10;
    }
  }
  v93 = a5;
  v94 = a6;
  type metadata accessor for MediaPlatform(0, v25);
  v34 = static MediaPlatform.systemImages(platforms:)(a2, v35);
LABEL_10:
  if (qword_100826CD0 != -1)
    swift_once(&qword_100826CD0, sub_10010890C);
  v36 = v14;
  v37 = sub_10007AF70(v14, (uint64_t)qword_10082E038);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(v110);
  v38 = (uint64_t)v111;
  v39 = v112;
  sub_100060B40(v110, (uint64_t)v111);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v38);
  v40 = AnyDimension.value(in:rounded:)(v108, v27, v38, v39);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v92);
  sub_10010AEF8(v34, v40);
  v42 = v41;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v110);
  if ((unint64_t)v34 >> 62)
  {
    if (v34 < 0)
      v90 = v34;
    else
      v90 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
    v43 = _CocoaArrayWrapper.endIndex.getter(v90);
    swift_bridgeObjectRelease(v34);
  }
  else
  {
    v43 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v45 = v107;
  v44 = v108;
  static BadgeDisplayStyle.style(forBadgeCount:pageTraits:indentForBadges:)(v43, v108, v42, 0);
  v46 = (void *)sub_100109BBC(v34, v44);
  v47 = swift_bridgeObjectRelease(v34);
  v48 = v94;
  v94 = v46;
  v49 = (char *)static PlatformSelectorViewLayout.makeFullPlatformString(descriptiveText:badgeString:metrics:style:in:)(v93, v48, v46, v37, v45, v44, v47);
  v50 = v36;
  if (qword_100827E38 != -1)
    swift_once(&qword_100827E38, sub_1003A55D4);
  v51 = type metadata accessor for FontUseCase(0);
  v52 = sub_10007AF70(v51, (uint64_t)qword_10088D4D8);
  v53 = *(_QWORD *)(v51 - 8);
  v54 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v95, v52, v51);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v51);
  v55 = v98;
  (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v98, enum case for DirectionalTextAlignment.none(_:), v97);
  v56 = (objc_class *)type metadata accessor for DynamicTypeLabel(0);
  v57 = objc_allocWithZone(v56);
  v58 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v54, 0, 4, 0, 0, v55, 0, 0);
  objc_msgSend(v58, "setAttributedText:", v49);
  v98 = v49;
  if (qword_100826CD8 != -1)
    swift_once(&qword_100826CD8, sub_100108CF8);
  objc_msgSend((id)qword_10082E050, "size");
  v60 = v59;
  v61 = type metadata accessor for LayoutViewPlaceholder(0);
  swift_allocObject(v61, *(unsigned int *)(v61 + 48), *(unsigned __int16 *)(v61 + 52));
  v62 = LayoutViewPlaceholder.init(representing:)(v28, v60);
  v63 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v101, v37, v50);
  v64 = v102;
  v65 = v99;
  v66 = v107;
  v67 = v103;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v99, v107, v103);
  v111 = v56;
  v112 = &protocol witness table for UILabel;
  v110[0] = v58;
  v109[3] = v61;
  v109[4] = &protocol witness table for LayoutViewPlaceholder;
  v109[0] = v62;
  v68 = v58;
  swift_retain(v62);
  v69 = v104;
  PlatformSelectorViewLayout.init(metrics:style:descriptionLabel:accessoryImageView:)(v63, v65, v110, v109);
  v70 = v108;
  v71 = objc_msgSend(v108, "pageMarginInsets");
  v73 = v72;
  v75 = v74;
  v77 = v76;
  v79 = v78;
  v80 = CGSize.subtracting(insets:)(v71);
  v82 = v81;
  v83 = sub_10010AFF0();
  v84 = v106;
  v85 = dispatch thunk of Measurable.measurements(fitting:in:)(v70, v106, v83, v80, v82);
  v88 = CGSize.adding(outsets:)(v86, v73, v75, v77, v79, v85, v87);

  swift_release(v62);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v69, v84);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v67);
  return v88;
}

uint64_t sub_10010A640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, id a8, unsigned __int8 a9, char *a10)
{
  uint64_t v10;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(void);
  uint64_t v63;
  int v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  __n128 v71;
  void *v72;
  char *v73;
  int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id ObjectType;
  id v105;
  char *v106;
  char *v107;
  uint64_t v108;
  _OWORD v109[2];
  __int128 v110;
  __int128 v111;
  uint64_t v112;

  v103 = a5;
  v106 = a10;
  ObjectType = (id)swift_getObjectType();
  v96 = type metadata accessor for AutomationSemantics(0);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v92 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v95 = (char *)&v89 - v20;
  v21 = type metadata accessor for BadgeDisplayStyle(0);
  v108 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v107 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v89 - v24;
  v26 = type metadata accessor for FloatingPointRoundingRule(0);
  v100 = *(_QWORD *)(v26 - 8);
  v101 = v26;
  v27 = __chkstk_darwin(v26);
  v99 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v102) = a7;
  if ((a7 & 1) == 0)
  {
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v33 = a2;
      else
        v33 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);
      v27 = swift_bridgeObjectRelease(a2);
      if (v34 > 1)
        goto LABEL_4;
    }
    else if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
    {
LABEL_4:
      type metadata accessor for MediaPlatform(0, v27);
      v29 = sub_10007B804((uint64_t *)&unk_10082B4A0);
      v30 = swift_allocObject(v29, 40, 7);
      *(_OWORD *)(v30 + 16) = xmmword_100661700;
      *(_QWORD *)(v30 + 32) = a1;
      *(_QWORD *)&v110 = v30;
      specialized Array._endMutation()(v30);
      v10 = v110;
      v31 = swift_retain(a1);
      v32 = static MediaPlatform.systemImages(platforms:)(v10, v31);
      swift_bridgeObjectRelease(v10);
      v103 = a3;
      a6 = a4;
      goto LABEL_10;
    }
  }
  type metadata accessor for MediaPlatform(0, v27);
  v32 = static MediaPlatform.systemImages(platforms:)(a2, v35);
LABEL_10:
  if ((unint64_t)v32 >> 62)
  {
    if (v32 < 0)
      v87 = v32;
    else
      v87 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v36 = _CocoaArrayWrapper.endIndex.getter(v87);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v36 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v93 = a2;
  v105 = a8;
  if (v36)
  {
    *(_QWORD *)&v110 = _swiftEmptyArrayStorage;
    v37 = &v110;
    specialized ContiguousArray.reserveCapacity(_:)(v36);
    if (v36 < 0)
    {
      __break(1u);
LABEL_52:
      swift_once(&qword_100826CD8, sub_100108CF8);
      goto LABEL_23;
    }
    v38 = 0;
    do
    {
      if ((v32 & 0xC000000000000001) != 0)
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v32);
      else
        v39 = *(id *)(v32 + 8 * v38 + 32);
      v40 = v39;
      ++v38;
      v41 = objc_msgSend(v39, "imageWithRenderingMode:", 2);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v42);
      v43 = *(_QWORD *)(v110 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v43);
      v44 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
      specialized ContiguousArray._endMutation()(v44);
    }
    while (v36 != v38);
    v10 = v110;
    swift_bridgeObjectRelease(v32);
    a8 = v105;
  }
  else
  {
    swift_bridgeObjectRelease(v32);
    v10 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v37 = *(__int128 **)&v106[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_accessoryImageView];
  if ((v102 & 1) == 0)
  {
    v45 = 0;
    goto LABEL_25;
  }
  if (qword_100826CD8 != -1)
    goto LABEL_52;
LABEL_23:
  v45 = (id)qword_10082E050;
LABEL_25:
  objc_msgSend(v37, "setImage:", v45);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v88 = v10;
    else
      v88 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v46 = _CocoaArrayWrapper.endIndex.getter(v88);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v46 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v106[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_numberOfBadges] = v46;
  ObjectType = (id)sub_100109BBC(v10, a8);
  if (qword_100826CD0 != -1)
    swift_once(&qword_100826CD0, sub_10010890C);
  v91 = a9;
  v48 = type metadata accessor for PlatformSelectorViewLayout.Metrics(0, v47);
  v102 = sub_10007AF70(v48, (uint64_t)qword_10082E038);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter(&v110);
  v49 = *((_QWORD *)&v111 + 1);
  v50 = v112;
  sub_100060B40(&v110, *((uint64_t *)&v111 + 1));
  v51 = v99;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v49);
  v52 = AnyDimension.value(in:rounded:)(a8, v51, v49, v50);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v51, v101);
  sub_10010AEF8(v10, v52);
  v54 = v53;
  swift_bridgeObjectRelease(v10);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(&v110);
  v55 = sub_10007B804(&qword_10082E0B8);
  v56 = v108;
  v57 = *(_QWORD *)(v108 + 72);
  v58 = *(unsigned __int8 *)(v108 + 80);
  v59 = (v58 + 32) & ~v58;
  v60 = swift_allocObject(v55, v59 + 3 * v57, v58 | 7);
  *(_OWORD *)(v60 + 16) = xmmword_100662370;
  v90 = v60;
  v61 = v60 + v59;
  v62 = *(void (**)(void))(v56 + 104);
  LODWORD(v101) = enum case for BadgeDisplayStyle.above(_:);
  ((void (*)(uint64_t))v62)(v61);
  v98 = enum case for BadgeDisplayStyle.inline(_:);
  ((void (*)(uint64_t))v62)(v61 + v57);
  v63 = v61 + 2 * v57;
  *(_QWORD *)v63 = v54;
  *(_BYTE *)(v63 + 8) = 0;
  v64 = enum case for BadgeDisplayStyle.left(_:);
  v62();
  v65 = v56;
  v99 = (char *)OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel;
  v100 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithTwoColumnsLabel;
  v97 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesInlineLabel;
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
  v67 = 3;
  v89 = v61;
  v66(v25, v61, v21);
  while (1)
  {
    v73 = v107;
    v66(v107, (uint64_t)v25, v21);
    v74 = (*(uint64_t (**)(char *, uint64_t))(v65 + 88))(v73, v21);
    if (v74 == v64)
    {
      v68 = v106;
      v69 = v100;
LABEL_31:
      v70 = *(id *)&v68[v69];
      goto LABEL_32;
    }
    if (v74 == (_DWORD)v101)
    {
      v68 = v106;
      v69 = (uint64_t)v99;
      goto LABEL_31;
    }
    if (v74 == v98)
    {
      v68 = v106;
      v69 = v97;
      goto LABEL_31;
    }
    v70 = *(id *)&v99[(_QWORD)v106];
    (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v21);
LABEL_32:
    v71 = swift_bridgeObjectRetain(a6);
    v72 = (void *)static PlatformSelectorViewLayout.makeFullPlatformString(descriptiveText:badgeString:metrics:style:in:)(v103, a6, ObjectType, v102, v25, v105, v71);
    objc_msgSend(v70, "setAttributedText:", v72, swift_bridgeObjectRelease(a6).n128_f64[0]);

    v65 = v108;
    (*(void (**)(char *, uint64_t))(v108 + 8))(v25, v21);
    v61 += v57;
    if (!--v67)
      break;
    v66(v25, v61, v21);
  }
  v75 = v90;
  swift_setDeallocating(v90);
  swift_arrayDestroy(v89, *(_QWORD *)(v75 + 16), v21);
  swift_deallocClassInstance(v75, 32, 7);
  if ((v91 & 1) != 0)
  {
    objc_msgSend(v105, "pageMarginInsets");
    objc_msgSend(v106, "setLayoutMargins:");
  }
  objc_msgSend(v106, "setNeedsLayout", v89);
  v110 = 0u;
  v111 = 0u;
  memset(v109, 0, sizeof(v109));
  v76 = v92;
  static AutomationSemantics.productPage(elementName:id:parentId:)(0xD000000000000010, 0x80000001006AC3C0, &v110, v109);
  sub_1000608D4((uint64_t)v109);
  sub_1000608D4((uint64_t)&v110);
  v77 = v93;
  *(_QWORD *)&v110 = v93;
  *((_QWORD *)&v110 + 1) = sub_1001099D8;
  *(_QWORD *)&v111 = 0;
  swift_bridgeObjectRetain(v93);
  v78 = sub_10007B804(&qword_10082E0C0);
  v79 = sub_10010B038();
  v80 = BidirectionalCollection<>.joined(separator:)(45, 0xE100000000000000, v78, v79);
  v82 = v81;
  swift_bridgeObjectRelease(v77);
  *((_QWORD *)&v111 + 1) = &type metadata for String;
  *(_QWORD *)&v110 = v80;
  *((_QWORD *)&v110 + 1) = v82;
  v83 = v95;
  AutomationSemantics.attribute(key:value:)(0x6D726F6674616C70, 0xE900000000000073, &v110);
  v84 = *(void (**)(char *, uint64_t))(v94 + 8);
  v85 = v96;
  v84(v76, v96);
  sub_1000608D4((uint64_t)&v110);
  UIView.setAutomationSemantics(_:)(v83);

  return ((uint64_t (*)(char *, uint64_t))v84)(v83, v85);
}

uint64_t sub_10010AEF8(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  uint64_t v12;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v12);
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      else
        v8 = *(id *)(a1 + 8 * v6 + 32);
      v9 = v8;
      ++v6;
      objc_msgSend(v8, "size");
      v11 = v10;

      v7 = v7 + v11 + a2;
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

unint64_t sub_10010AFF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E0B0;
  if (!qword_10082E0B0)
  {
    v1 = type metadata accessor for PlatformSelectorViewLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PlatformSelectorViewLayout, v1);
    atomic_store(result, (unint64_t *)&qword_10082E0B0);
  }
  return result;
}

unint64_t sub_10010B038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E0C8;
  if (!qword_10082E0C8)
  {
    v1 = sub_100072594(&qword_10082E0C0);
    sub_10010B09C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> LazyMapSequence<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10082E0C8);
  }
  return result;
}

unint64_t sub_10010B09C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E0D0;
  if (!qword_10082E0D0)
  {
    v1 = sub_100072594(&qword_10082E0D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10082E0D0);
  }
  return result;
}

uint64_t sub_10010B0E8()
{
  return sub_100005C94(&qword_10082E0E0, type metadata accessor for PlaceholderCollectionViewCell, (uint64_t)&unk_100664758);
}

uint64_t sub_10010B114()
{
  return Shelf.placeholderContentType.getter();
}

double sub_10010B138(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t KeyPath;
  uint64_t v35;
  __n128 v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  int v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  unint64_t *v56;
  void *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  uint64_t v64;
  objc_class *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  __n128 v71;
  __n128 v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  double v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  double v80;
  id v81;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  double v87;
  double v88;
  double v89;
  id v90;
  uint64_t ObjectType;
  uint64_t v92;
  double v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  double v105;
  double v106;
  double v107;
  uint64_t v108;
  char *v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  double v122;
  double v123;
  double v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  double v128;
  __n128 v129;
  __n128 v130;
  char *v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  double v135;
  double v136;
  double v137;
  uint64_t v138;
  objc_class *v139;
  uint64_t v140;
  double v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  double v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t);
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  objc_class *v177[2];

  v156 = type metadata accessor for SmallStoryCardLayout.Metrics(0);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (uint64_t)&v151 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for AspectRatio(0);
  v152 = *(_QWORD *)(v153 - 8);
  v3 = __chkstk_darwin(v153);
  v151 = (char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout.Metrics(0, v3);
  v158 = *(_QWORD *)(v159 - 8);
  v5 = __chkstk_darwin(v159);
  v157 = (char *)&v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Shelf.PresentationHints(0, v5);
  v162 = *(_QWORD *)(v7 - 8);
  v163 = v7;
  __chkstk_darwin(v7);
  v161 = (char *)&v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v160 = (char *)&v151 - v11;
  v12 = type metadata accessor for BrickLayout.Metrics(0, v10);
  v165 = *(_QWORD *)(v12 - 8);
  v166 = v12;
  __chkstk_darwin(v12);
  v164 = (char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ShelfLayoutContext(0);
  v168 = *(_QWORD *)(v14 - 8);
  v169 = v14;
  v15 = __chkstk_darwin(v14);
  v167 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MediumLockupLayout.Metrics(0, v15);
  v171 = *(_QWORD *)(v17 - 8);
  v172 = v17;
  __chkstk_darwin(v17);
  v170 = (uint64_t)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = type metadata accessor for PageGrid(0);
  v173 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v174 = (char **)((char *)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_10007B804((uint64_t *)&unk_10082F840);
  __chkstk_darwin(v20);
  v22 = (char *)&v151 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10007B804((uint64_t *)&unk_1008392A0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char **)((char *)&v151 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = type metadata accessor for Shelf.ContentType(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)&v151 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v151 - v32;
  KeyPath = swift_getKeyPath(&unk_1006647A8);
  v176 = a1;
  ItemLayoutContext.subscript.getter(v26);
  swift_release(KeyPath);
  v35 = swift_getKeyPath(&unk_1006647D8);
  ReadOnlyLens.subscript.getter(v35, v23);
  v36 = swift_release(v35);
  v37 = v26;
  v38 = v27;
  v39 = v23;
  v40 = v28;
  (*(void (**)(_QWORD *, uint64_t, __n128))(v24 + 8))(v37, v39, v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v22, 1, v27) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v33, v22, v27);
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v30, v33, v27);
    v42 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v30, v27);
    v44 = v33;
    if (v42 == enum case for Shelf.ContentType.smallLockup(_:))
    {
      v45 = swift_getKeyPath(&unk_100664808);
      v46 = v174;
      ItemLayoutContext.subscript.getter(v174);
      swift_release(v45);
      v48 = PageGrid.componentMeasuringSize(spanning:)(v47);
      v50 = v49;
      (*(void (**)(_QWORD *, uint64_t))(v173 + 8))(v46, v175);
      if (qword_1008291A8 != -1)
        swift_once(&qword_1008291A8, sub_1005CD000);
      v51 = type metadata accessor for SmallLockupLayout.Metrics(0);
      v52 = sub_10007AF70(v51, (uint64_t)qword_1008906D0);
      v53 = sub_1000D2308();
      v54 = type metadata accessor for SmallLockupLayout(0);
      v55 = (uint64_t (*)(uint64_t))&type metadata accessor for SmallLockupLayout;
      v56 = (unint64_t *)&unk_10082E108;
      v57 = &protocol conformance descriptor for SmallLockupLayout;
LABEL_14:
      v79 = sub_100005C94(v56, v55, (uint64_t)v57);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v52, v53, v54, v79, v48, v50);
      v41 = v80;
      v81 = v53;
LABEL_15:
      v72 = swift_unknownObjectRelease(v81);
      goto LABEL_16;
    }
    if (v42 == enum case for Shelf.ContentType.mediumLockup(_:))
    {
      v58 = swift_getKeyPath(&unk_100664808);
      v59 = v174;
      ItemLayoutContext.subscript.getter(v174);
      swift_release(v58);
      v61 = PageGrid.componentMeasuringSize(spanning:)(v60);
      v63 = v62;
      (*(void (**)(_QWORD *, uint64_t))(v173 + 8))(v59, v175);
      type metadata accessor for MediumLockupCollectionViewCell(0);
      v64 = swift_getKeyPath(&unk_100664838);
      ItemLayoutContext.subscript.getter(v177);
      swift_release(v64);
      v65 = v177[0];
      v66 = v170;
      sub_1005416BC(v170);

      v67 = sub_1000D2308();
      v68 = type metadata accessor for MediumLockupLayout(0);
      v69 = sub_100005C94(&qword_10082E100, (uint64_t (*)(uint64_t))&type metadata accessor for MediumLockupLayout, (uint64_t)&protocol conformance descriptor for MediumLockupLayout);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v66, v67, v68, v69, v61, v63);
      v41 = v70;
      v71 = swift_unknownObjectRelease(v67);
      (*(void (**)(uint64_t, uint64_t, __n128))(v171 + 8))(v66, v172, v71);
      goto LABEL_16;
    }
    if (v42 == enum case for Shelf.ContentType.largeLockup(_:))
    {
      v73 = swift_getKeyPath(&unk_100664808);
      v74 = v174;
      ItemLayoutContext.subscript.getter(v174);
      swift_release(v73);
      v48 = PageGrid.componentMeasuringSize(spanning:)(v75);
      v50 = v76;
      (*(void (**)(_QWORD *, uint64_t))(v173 + 8))(v74, v175);
      if (qword_1008272E0 != -1)
        swift_once(&qword_1008272E0, sub_100204CF4);
      v78 = type metadata accessor for LargeLockupLayout.Metrics(0, v77);
      v52 = sub_10007AF70(v78, (uint64_t)qword_10088B270);
      v53 = sub_1000D2308();
      v54 = type metadata accessor for LargeLockupLayout(0);
      v55 = (uint64_t (*)(uint64_t))&type metadata accessor for LargeLockupLayout;
      v56 = (unint64_t *)&unk_10082E0F8;
      v57 = &protocol conformance descriptor for LargeLockupLayout;
      goto LABEL_14;
    }
    if (v42 == enum case for Shelf.ContentType.ribbonBar(_:))
    {
      v83 = v167;
      ItemLayoutContext.parentShelfLayoutContext.getter(v43);
      v41 = sub_10057FA8C();
      (*(void (**)(char *, uint64_t))(v168 + 8))(v83, v169);
      goto LABEL_16;
    }
    if (v42 == enum case for Shelf.ContentType.videoCard(_:))
    {
      v84 = swift_getKeyPath(&unk_100664808);
      v85 = v174;
      ItemLayoutContext.subscript.getter(v174);
      swift_release(v84);
      v87 = PageGrid.componentMeasuringSize(spanning:)(v86);
      v89 = v88;
      (*(void (**)(_QWORD *, uint64_t))(v173 + 8))(v85, v175);
      if (qword_100827058 != -1)
        swift_once(&qword_100827058, sub_1001C5F48);
      v90 = sub_1000D2308();
      ObjectType = swift_getObjectType();
      v92 = type metadata accessor for VideoCardView(0);
      sub_1001C62E8(v87, v89, (uint64_t)&qword_10088AE08, (uint64_t)v90, v92, ObjectType);
      v41 = v93;
      v81 = v90;
      goto LABEL_15;
    }
    if (v42 == enum case for Shelf.ContentType.brick(_:))
    {
      v94 = swift_getKeyPath(&unk_100664868);
      v95 = v160;
      ItemLayoutContext.subscript.getter(v160);
      swift_release(v94);
      v96 = v161;
      static Shelf.PresentationHints.showSupplementaryText.getter(v97);
      v98 = sub_100005C94((unint64_t *)&unk_10082B190, (uint64_t (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints, (uint64_t)&protocol conformance descriptor for Shelf.PresentationHints);
      v99 = v163;
      LOBYTE(v94) = dispatch thunk of SetAlgebra.isSuperset(of:)(v96, v163, v98);
      v100 = *(void (**)(char *, uint64_t))(v162 + 8);
      v100(v96, v99);
      v100(v95, v99);
      if ((v94 & 1) != 0)
      {
        if (qword_100826D58 != -1)
          swift_once(&qword_100826D58, sub_100127698);
        v101 = qword_10088A7A0;
      }
      else
      {
        if (qword_100826D60 != -1)
          swift_once(&qword_100826D60, sub_10012792C);
        v101 = qword_10088A7B8;
      }
      v115 = v166;
      v116 = sub_10007AF70(v166, (uint64_t)v101);
      v118 = v164;
      v117 = v165;
      (*(void (**)(char *, uint64_t, uint64_t))(v165 + 16))(v164, v116, v115);
      v119 = swift_getKeyPath(&unk_100664808);
      v120 = v174;
      ItemLayoutContext.subscript.getter(v174);
      swift_release(v119);
      v122 = PageGrid.componentMeasuringSize(spanning:)(v121);
      v124 = v123;
      (*(void (**)(_QWORD *, uint64_t))(v173 + 8))(v120, v175);
      v125 = sub_1000D2308();
      v126 = type metadata accessor for BrickLayout(0);
      v127 = sub_100005C94(&qword_10082E0F0, (uint64_t (*)(uint64_t))&type metadata accessor for BrickLayout, (uint64_t)&protocol conformance descriptor for BrickLayout);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v118, v125, v126, v127, v122, v124);
      v41 = v128;
      v129 = swift_unknownObjectRelease(v125);
      (*(void (**)(char *, uint64_t, __n128))(v117 + 8))(v118, v115, v129);
      goto LABEL_16;
    }
    if (v42 == enum case for Shelf.ContentType.categoryBrick(_:))
    {
      v102 = swift_getKeyPath(&unk_100664808);
      v103 = v174;
      ItemLayoutContext.subscript.getter(v174);
      swift_release(v102);
      v105 = PageGrid.componentMeasuringSize(spanning:)(v104);
      v107 = v106;
      v108 = (*(uint64_t (**)(_QWORD *, uint64_t))(v173 + 8))(v103, v175);
      v109 = v157;
      static ChartOrCategoryBrickStyle.tileMetrics.getter(v108);
      v110 = sub_1000D2308();
      v111 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout(0);
      v112 = sub_100005C94(&qword_10082E0E8, (uint64_t (*)(uint64_t))&type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout, (uint64_t)&protocol conformance descriptor for ChartOrCategoryBrickCollectionViewCellLayout);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)(v109, v110, v111, v112, v105, v107);
      v41 = v113;
      v114 = swift_unknownObjectRelease(v110);
      (*(void (**)(char *, uint64_t, __n128))(v158 + 8))(v109, v159, v114);
      goto LABEL_16;
    }
    if (v42 == enum case for Shelf.ContentType.appTrailerLockup(_:))
    {
      type metadata accessor for AppTrailerLockupCollectionViewCell(0);
    }
    else
    {
      if (v42 != enum case for Shelf.ContentType.screenshotsLockup(_:))
      {
        if (v42 == enum case for Shelf.ContentType.smallStoryCard(_:))
        {
          v132 = swift_getKeyPath(&unk_100664808);
          v133 = v174;
          ItemLayoutContext.subscript.getter(v174);
          swift_release(v132);
          v135 = PageGrid.componentMeasuringSize(spanning:)(v134);
          v137 = v136;
          (*(void (**)(_QWORD *, uint64_t))(v173 + 8))(v133, v175);
          v138 = swift_getKeyPath(&unk_100664838);
          ItemLayoutContext.subscript.getter(v177);
          swift_release(v138);
          v139 = v177[0];
          v140 = v154;
          sub_1001990C4(v177[0], v154);
          static SmallStoryCardLayout.estimatedMeasurements(fitting:using:with:)(v140, v139, v135, v137);
          v41 = v141;
          (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v140, v156);

        }
        else if (v42 == enum case for Shelf.ContentType.posterLockup(_:))
        {
          v142 = v167;
          v143 = ItemLayoutContext.parentShelfLayoutContext.getter(v43);
          v144 = v151;
          v145 = static PosterLockupLayout.aspectRatio.getter(v143);
          v146 = v174;
          v147 = ShelfLayoutContext.contentPageGrid.getter(v145);
          v148 = PageGrid.smallestPossibleColumnWidth.getter(v147);
          v149 = (*(uint64_t (**)(_QWORD *, uint64_t))(v173 + 8))(v146, v175);
          v41 = AspectRatio.height(fromWidth:)(v149, v148);
          (*(void (**)(char *, uint64_t))(v152 + 8))(v144, v153);
          (*(void (**)(char *, uint64_t))(v168 + 8))(v142, v169);
        }
        else
        {
          if (v42 != enum case for Shelf.ContentType.appPromotion(_:))
          {
            v150 = *(void (**)(char *, uint64_t))(v28 + 8);
            v150(v33, v38);
            v150(v30, v38);
            return 0.0;
          }
          v72.n128_f64[0] = sub_10010FA24(v176, 1);
          v41 = v72.n128_f64[0];
        }
LABEL_16:
        (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v44, v38, v72);
        return v41;
      }
      type metadata accessor for ScreenshotsLockupCollectionViewCell(0);
    }
    v131 = v167;
    ItemLayoutContext.parentShelfLayoutContext.getter(v130);
    v41 = sub_1000EB3CC();
    (*(void (**)(char *, uint64_t))(v168 + 8))(v131, v169);
    goto LABEL_16;
  }
  sub_10010BEBC((uint64_t)v22);
  return 0.0;
}

uint64_t sub_10010BE9C()
{
  return Shelf.placeholderContentType.getter();
}

uint64_t sub_10010BEBC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10007B804((uint64_t *)&unk_10082F840);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_10010BF08()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = type metadata accessor for AspectRatio(0);
  sub_100033BAC(v0, qword_10088A580);
  v1 = sub_10007AF70(v0, (uint64_t)qword_10088A580);
  *(_QWORD *)&result = AspectRatio.init(_:_:)(v1).n128_u64[0];
  return result;
}

char *sub_10010BF58()
{
  _BYTE *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  objc_super v17;
  __int128 v18[4];
  uint64_t v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_isCollapsing] = 0;
  v3 = OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView;
  v4 = objc_allocWithZone((Class)UIImageView);
  v5 = v0;
  *(_QWORD *)&v0[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView;
  if (qword_100828C10 != -1)
    swift_once(&qword_100828C10, sub_1004DCD98);
  v18[2] = xmmword_10088F980;
  v18[3] = unk_10088F990;
  v19 = qword_10088F9A0;
  v18[0] = xmmword_10088F960;
  v18[1] = *(_OWORD *)algn_10088F970;
  v7 = objc_allocWithZone((Class)type metadata accessor for AppPromotionIAPFallbackView(0));
  *(_QWORD *)&v5[v6] = sub_1004DC900(v18, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView], 0);
  v8 = &v5[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_mediaOverlayStyle];
  v9 = enum case for MediaOverlayStyle.matchSystem(_:);
  v10 = type metadata accessor for MediaOverlayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = &v5[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;

  v17.receiver = v5;
  v17.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = *(void **)&v12[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
  v14 = v12;
  objc_msgSend(v13, "setContentMode:", 2);
  objc_msgSend(v13, "setClipsToBounds:", 1);
  objc_msgSend(v13, "setAccessibilityIgnoresInvertColors:", 1);
  objc_msgSend(v14, "addSubview:", v13);
  v15 = *(void **)&v14[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView];
  objc_msgSend(v15, "setContentMode:", 2);
  objc_msgSend(v15, "setClipsToBounds:", 1);
  objc_msgSend(v14, "addSubview:", v15);

  return v14;
}

void sub_10010C2E0(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  void (*v32)(char *, uint64_t);
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  void (*v40)(double, double);
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  id v49;
  objc_super v50;
  CGRect v51;
  CGRect v52;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = type metadata accessor for FloatingPointRoundingRule(0);
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v12 = __chkstk_darwin(v10).n128_u64[0];
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50.receiver = v4;
  v50.super_class = ObjectType;
  objc_msgSendSuper2(&v50, "frame", v12);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = enum case for FloatingPointRoundingRule.up(_:);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v24(v14, enum case for FloatingPointRoundingRule.up(_:), v10);
  v25 = CGRect.rounded(_:)(v14, v16, v18, v20, v22);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v32(v14, v10);
  v24(v14, v23, v10);
  v33 = CGRect.rounded(_:)(v14, a1, a2, a3, a4);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v32(v14, v10);
  v51.origin.x = v25;
  v51.origin.y = v27;
  v51.size.width = v29;
  v51.size.height = v31;
  v52.origin.x = v33;
  v52.origin.y = v35;
  v52.size.width = v37;
  v52.size.height = v39;
  if (!CGRectEqualToRect(v51, v52)
    && (v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_isCollapsing] & 1) == 0)
  {
    v40 = *(void (**)(double, double))&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock];
    if (v40)
    {
      v41 = *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock + 8];
      objc_msgSend(v4, "bounds", swift_retain(v41).n128_f64[0]);
      v43 = v42;
      v45 = v44;
      v24(v14, v23, v10);
      v46 = CGSize.rounded(_:)(v14, v43, v45);
      v48 = v47;
      v32(v14, v10);
      v49 = objc_msgSend(v4, "traitCollection");
      v40(v46, v48);
      sub_10003A350((uint64_t)v40, v41);

    }
  }
}

id sub_10010C52C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  int v3;
  unsigned __int8 *v4;
  uint64_t Strong;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  objc_super v37;

  v37.receiver = v2;
  v37.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v37, "layoutSubviews");
  v3 = v2[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_isCollapsing];
  v4 = &v2[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView];
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView]);
  v6 = (void *)Strong;
  if (v3 == 1)
  {
    if (Strong)
    {
      objc_msgSend(v2, "bounds");
      v8 = v7;
      v10 = v9;
      v11 = swift_unknownObjectWeakLoadStrong(v4);
      if (v11
        && (v12 = (void *)v11,
            v13 = *(id *)(v11 + qword_100844118),
            v12,
            v14 = objc_msgSend(v13, "image"),
            v13,
            v14))
      {
        objc_msgSend(v14, "size");
        v16 = v15;
        v18 = v17;

      }
      else
      {
        objc_msgSend(v2, "bounds");
        v16 = v21;
        v18 = v22;
      }
      objc_msgSend(v6, "setFrame:", v8, v10, v16, v18);

    }
    v23 = *(void **)&v2[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
    objc_msgSend(v2, "bounds");
    v25 = v24;
    v27 = v26;
    v28 = objc_msgSend(v23, "image");
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v28, "size");
      v31 = v30;
      v33 = v32;

    }
    else
    {
      objc_msgSend(v2, "bounds");
      v31 = v34;
      v33 = v35;
    }
    objc_msgSend(v23, "setFrame:", v25, v27, v31, v33);
    v20 = *(void **)&v2[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView];
    objc_msgSend(v23, "frame");
  }
  else
  {
    if (Strong)
    {
      objc_msgSend(v2, "bounds");
      objc_msgSend(v6, "setFrame:");

    }
    v19 = *(void **)&v2[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
    objc_msgSend(v2, "bounds");
    objc_msgSend(v19, "setFrame:");
    v20 = *(void **)&v2[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView];
    objc_msgSend(v2, "bounds");
  }
  return objc_msgSend(v20, "setFrame:");
}

void sub_10010C7C8()
{
  uint64_t v0;
  char *Strong;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  _QWORD aBlock[5];
  uint64_t v9;

  Strong = (char *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView);
  if (Strong)
  {
    v2 = *(void **)&Strong[qword_100844140];
    if (v2)
    {
      v7 = Strong;
      v3 = swift_allocObject(&unk_10075A6C8, 24, 7);
      swift_unknownObjectWeakInit(v3 + 16, v2);
      aBlock[4] = sub_10010E47C;
      v9 = v3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100416C00;
      aBlock[3] = &unk_10075A6E0;
      v4 = _Block_copy(aBlock);
      v5 = v9;
      v6 = v2;
      objc_msgSend(v6, "enterFullScreenAnimated:completionHandler:", 1, v4, swift_release(v5).n128_f64[0]);
      _Block_release(v4);

    }
    else
    {

    }
  }
}

void sub_10010C90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_delegate);
  if (Strong)
  {
    v3 = Strong;
    sub_100367DE0(0, 0);
    swift_unknownObjectRelease(v3);
  }
  v4 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + qword_100844140);
    v7 = v6;

    if (v6)
    {
      objc_msgSend(v7, "setShowsPlaybackControls:", 1);

    }
  }
}

double sub_10010C9BC()
{
  uint64_t v0;
  void *Strong;
  double result;
  void *v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_delegate);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "traitCollection");
    v5 = UITraitCollection.isSizeClassRegular.getter(v4);

    if ((v5 & 1) != 0)
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
    }
    else
    {
      v6 = swift_allocObject(&unk_10075A5D8, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16, v3);
      v7 = swift_allocObject(&unk_10075A600, 32, 7);
      *(_QWORD *)(v7 + 16) = v6;
      *(_QWORD *)(v7 + 24) = 0x3FF0000000000000;
      v8 = (void *)objc_opt_self(UIView);
      v11[4] = sub_10010DED4;
      v12 = v7;
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 1107296256;
      v11[2] = sub_10000AB18;
      v11[3] = &unk_10075A618;
      v9 = _Block_copy(v11);
      v10 = v12;
      swift_retain(v7);
      swift_release(v10);
      objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 4, v9, 0, 0.3, 0.0);
      swift_release(v7);
      _Block_release(v9);
      *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
    }
  }
  return result;
}

void sub_10010CB38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, _QWORD, uint64_t, __n128);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t Strong;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  double v68;
  uint64_t v69;
  id *v70;
  _BOOL8 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  void *v77;
  void (*v78)(uint64_t, __n128, double);
  void (**v79)(double, double);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(double, double);
  void (*v83)(double, double);
  uint64_t v84;
  double v85;
  double v86;
  double v87;
  double v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  _QWORD v97[5];

  v4 = v3;
  v8 = sub_10007B804((uint64_t *)&unk_10082E190);
  __chkstk_darwin(v8);
  v95 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v94 = (char *)&v90 - v11;
  v12 = sub_10007B804((uint64_t *)&unk_10083AFC0);
  __chkstk_darwin(v12);
  v93 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for VideoControls(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v90 - v18;
  v20 = sub_10007B804((uint64_t *)&unk_10082E1A0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for VideoFillMode(0, v21);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for VideoConfiguration(0);
  v31 = __chkstk_darwin(v28);
  v33 = (char *)&v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v90 = v30;
    v91 = v29;
    v92 = a2;
    v34 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v25 + 104);
    v96 = v33;
    v34(v27, enum case for VideoFillMode.scaleAspectFill(_:), v24, v31);
    swift_retain(a1);
    v36 = Video.preview.getter(v35);
    Artwork.size.getter(v36);
    AspectRatio.init(_:_:)(v37);
    swift_release(v36);
    v38 = type metadata accessor for AspectRatio(0);
    v39 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v23, 0, 1, v38);
    v40 = Video.playbackControls.getter(v39);
    v41 = Video.autoPlayPlaybackControls.getter(v40);
    v42 = Video.canPlayFullScreen.getter(v41);
    v43 = v4;
    v44 = a3;
    v45 = Video.allowsAutoPlay.getter();
    v46 = Video.looping.getter();
    v47 = v45 & 1;
    a3 = v44;
    v4 = v43;
    v48 = v96;
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)(v27, v23, v19, v16, v42 & 1, v47, v46 & 1, 0, 0, 1);
    v49 = type metadata accessor for VideoViewManager(0);
    v50 = BaseObjectGraph.inject<A>(_:)(v97, v49, v49);
    v51 = v97[0];
    Video.playbackId.getter(v97, v50);
    v52 = (uint64_t)v93;
    Video.videoUrl.getter(v53);
    v54 = type metadata accessor for URL(0);
    v55 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v52, 0, 1, v54);
    v56 = (uint64_t)v94;
    v57 = Video.templateMediaEvent.getter(v55);
    v58 = (uint64_t)v95;
    Video.templateClickEvent.getter(v57);
    v59 = type metadata accessor for VideoView(0);
    v60 = sub_100005C94(&qword_10082E4F0, type metadata accessor for VideoView, (uint64_t)&unk_10067E990);
    v61 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)(v97, v52, v48, v56, v58, a3, v59, v60);
    sub_1000057AC(v58, (uint64_t *)&unk_10082E190);
    sub_1000057AC(v56, (uint64_t *)&unk_10082E190);
    sub_1000057AC(v52, (uint64_t *)&unk_10083AFC0);
    sub_1000057AC((uint64_t)v97, &qword_100829F10);
    sub_10010DC5C((uint64_t)v61);

    Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView]);
    if (Strong)
    {
      v63 = (void *)Strong;
      v64 = Video.preview.getter(Strong);
      v65 = (void *)Artwork.backgroundColor.getter(v64);
      objc_msgSend(v63, "setBackgroundColor:", v65, swift_release(v64).n128_f64[0]);

    }
    v66 = Video.preview.getter(Strong);
    v67 = (void *)Artwork.backgroundColor.getter(v66);
    *(_QWORD *)&v68 = swift_release(v66).n128_u64[0];
    if (!v67)
    {
      v69 = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v67 = (void *)static UIColor.placeholderBackground.getter(v69);
    }
    a2 = v92;
    objc_msgSend(v4, "setBackgroundColor:", v67, v68);
    swift_release(a1);
    swift_release(v51);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v96, v91);
    v70 = (id *)&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
    v71 = a2 == 0;
  }
  else if (a2)
  {
    swift_retain(a2);
    v73 = Artwork.backgroundColor.getter(v72);
    if (!v73)
    {
      v74 = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v73 = static UIColor.placeholderBackground.getter(v74);
    }
    v75 = (void *)v73;
    objc_msgSend(v4, "setBackgroundColor:", v73);

    v31.n128_u64[0] = swift_release(a2).n128_u64[0];
    v71 = 0;
    v70 = (id *)&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
  }
  else
  {
    v70 = (id *)&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
    v71 = 1;
  }
  objc_msgSend(*v70, "setHidden:", v71, v31.n128_f64[0]);
  v76 = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView]);
  if (v76)
  {
    v77 = v76;
    objc_msgSend(v76, "setHidden:", a1 == 0);

  }
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView], "setHidden:", 1);
  v78 = sub_10010D174(a2, a1, a3);
  v79 = (void (**)(double, double))&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock];
  v80 = *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock];
  v81 = *(_QWORD *)&v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock + 8];
  *v79 = (void (*)(double, double))v78;
  v79[1] = v82;
  sub_10003A350(v80, v81);
  v83 = *v79;
  if (*v79)
  {
    v84 = (uint64_t)v79[1];
    objc_msgSend(v4, "bounds", swift_retain(v84).n128_f64[0]);
    v86 = v85;
    v88 = v87;
    v89 = objc_msgSend(v4, "traitCollection");
    v83(v86, v88);
    sub_10003A350((uint64_t)v83, v84);

  }
}

void (*sub_10010D174(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, __n128 a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*result)(uint64_t, __n128, double);

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = ObjectType;
  if (a2)
  {
    a1 = Video.preview.getter(ObjectType);
LABEL_5:
    v10 = a2 != 0;
    v11 = swift_allocObject(&unk_10075A650, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16, v4);
    v12 = swift_allocObject(&unk_10075A678, 24, 7);
    swift_weakInit(v12 + 16, a3);
    v13 = swift_allocObject(&unk_10075A6A0, 56, 7);
    *(_BYTE *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = v11;
    *(_QWORD *)(v13 + 32) = v12;
    result = sub_10010DF38;
    *(_QWORD *)(v13 + 40) = a1;
    *(_QWORD *)(v13 + 48) = v9;
    return result;
  }
  if (a1)
  {
    swift_retain(a1);
    goto LABEL_5;
  }
  return 0;
}

double sub_10010D260(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  double v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;

  v3 = v2;
  v5 = *(_QWORD *)(a2 + qword_10088FD90);
  if (v5)
  {
    v6 = swift_retain(*(_QWORD *)(a2 + qword_10088FD90));
    v7 = OfferItemDetailPage.artwork.getter(v6);
    *(_QWORD *)&v8 = swift_release(v7).n128_u64[0];
    if (!v7)
    {
      v12 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView], "setHidden:", 1, v8);
      v13 = *(char **)&v3[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView];
      v14 = OfferItemDetailPage.offerItem.getter(v12);
      sub_1004DD22C();
      swift_release(v14);
      v16 = OfferItemDetailPage.offerItem.getter(v15);
      objc_msgSend(v3, "bounds");
      sub_10010DFA0(v16, v5, v13);
      v11 = v16;
      goto LABEL_6;
    }
    swift_release(v5);
  }
  v5 = OfferItemDetailPage.video.getter();
  v10 = OfferItemDetailPage.artwork.getter(v9);
  sub_10010CB38(v5, v10, a2);
  v11 = v10;
LABEL_6:
  swift_release(v11);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_10010D378(__n128 a1, double a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t *v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE v34[24];
  _BYTE v35[24];

  v10 = a1.n128_f64[0];
  v11 = type metadata accessor for Artwork.Crop(0, a1);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = a5 + 16;
  if ((a4 & 1) == 0)
  {
    swift_beginAccess(v15, v35, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v15);
    if (Strong)
    {
      v18 = (char *)Strong;
      v19 = &OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView;
LABEL_7:
      v17 = *(id *)&v18[*v19];

      if (v10 != 0.0)
        goto LABEL_14;
      goto LABEL_11;
    }
    v17 = 0;
    goto LABEL_10;
  }
  swift_beginAccess(v15, v35, 0, 0);
  v16 = swift_unknownObjectWeakLoadStrong(v15);
  v17 = (id)v16;
  if (!v16)
  {
LABEL_10:
    if (v10 != 0.0)
      goto LABEL_14;
    goto LABEL_11;
  }
  v18 = (char *)swift_unknownObjectWeakLoadStrong(v16 + OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView);

  if (v18)
  {
    v19 = &qword_100844118;
    goto LABEL_7;
  }
  v17 = 0;
  if (v10 != 0.0)
    goto LABEL_14;
LABEL_11:
  if (a2 == 0.0)
    goto LABEL_12;
LABEL_14:
  if (!v17)
    return;
  v21 = a6 + 16;
  swift_beginAccess(v21, v34, 0, 0);
  v22 = swift_weakLoadStrong(v21);
  if (!v22)
  {
LABEL_12:

    return;
  }
  v23 = v22;
  v24 = *(_QWORD *)(v22 + qword_10088FD90);
  swift_retain(v24);
  v17 = v17;
  swift_release(v23);
  if (!v24)
  {

    goto LABEL_12;
  }
  if (qword_100826CE8 != -1)
    swift_once(&qword_100826CE8, sub_10010BF08);
  v25 = type metadata accessor for AspectRatio(0);
  v26 = sub_10007AF70(v25, (uint64_t)qword_10088A580);
  v27 = AspectRatio.height(fromWidth:)(v26, v10);
  v29 = Artwork.crop.getter(v28);
  v30 = Artwork.Crop.preferredContentMode.getter(v29);
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  v31 = Artwork.config(_:mode:prefersLayeredImage:)(v30, 0, v10, v27);
  objc_msgSend(v17, "setContentMode:", v30);
  v32 = sub_100008FE4(0, (unint64_t *)&qword_100833550, UIImageView_ptr);
  v33 = sub_10010DF48();
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v31, 2, 1, v17, v32, v33);

  swift_release(v24);
  swift_release(v31);
}

uint64_t sub_10010D6DC()
{
  return type metadata accessor for AppPromotionMediaContainerView(0);
}

uint64_t type metadata accessor for AppPromotionMediaContainerView(uint64_t a1)
{
  uint64_t result;

  result = qword_10082E168;
  if (!qword_10082E168)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppPromotionMediaContainerView);
  return result;
}

uint64_t sub_10010D720(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100664900;
  v4[1] = &unk_100664918;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = &unk_100664930;
  result = type metadata accessor for MediaOverlayStyle(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = &unk_100664948;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10010D7C4()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView);
}

void sub_10010D7D4(void *a1)
{
  sub_10010DC5C((uint64_t)a1);

}

void (*sub_10010D7F8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView);
  return sub_10010D838;
}

void sub_10010D838(uint64_t *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)*a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    sub_10010DC5C((uint64_t)v4);

    v3 = v2;
  }
  else
  {
    sub_10010DC5C(*a1);
    v3 = v4;
  }

}

uint64_t sub_10010D898()
{
  uint64_t ObjectType;
  uint64_t v1;

  ObjectType = swift_getObjectType();
  v1 = sub_100005C94(&qword_10082E188, type metadata accessor for AppPromotionMediaContainerView, (uint64_t)&unk_1006649E0);
  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_10010D8E0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;

  ObjectType = swift_getObjectType();
  v5 = sub_100005C94(&qword_10082E188, type metadata accessor for AppPromotionMediaContainerView, (uint64_t)&unk_1006649E0);
  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

void (*sub_10010D940(_QWORD *a1))(_QWORD *a1)
{
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;

  ObjectType = swift_getObjectType();
  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = sub_100005C94(&qword_10082E188, type metadata accessor for AppPromotionMediaContainerView, (uint64_t)&unk_1006649E0);
  v3[4] = VideoViewProviding.someVideoView.modify(v3, ObjectType, v4);
  return sub_10000F60C;
}

uint64_t sub_10010D9B8(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  if (!a1)
    return 0;
  v2 = objc_msgSend(a1, "superview");
  if (!v2)
    return 0;
  v3 = v2;
  sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
  v4 = v1;
  v5 = v3;
  v6 = static NSObject.== infix(_:_:)(v5, v4);

  return v6 & 1;
}

id sub_10010DA4C(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "frame");
}

uint64_t sub_10010DA80()
{
  return sub_100005C94(&qword_10082E178, type metadata accessor for AppPromotionMediaContainerView, (uint64_t)&unk_100664960);
}

uint64_t sub_10010DAAC()
{
  return sub_100005C94(&qword_10082E180, type metadata accessor for AppPromotionMediaContainerView, (uint64_t)&unk_100664990);
}

void sub_10010DAD8()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10[4];
  uint64_t v11;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_isCollapsing] = 0;
  v3 = OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView;
  if (qword_100828C10 != -1)
    swift_once(&qword_100828C10, sub_1004DCD98);
  v10[2] = xmmword_10088F980;
  v10[3] = unk_10088F990;
  v11 = qword_10088F9A0;
  v10[0] = xmmword_10088F960;
  v10[1] = *(_OWORD *)algn_10088F970;
  v5 = objc_allocWithZone((Class)type metadata accessor for AppPromotionIAPFallbackView(0));
  *(_QWORD *)&v1[v4] = sub_1004DC900(v10, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView], 0);
  v6 = &v1[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_mediaOverlayStyle];
  v7 = enum case for MediaOverlayStyle.matchSystem(_:);
  v8 = type metadata accessor for MediaOverlayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = &v1[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/AppPromotionMediaContainerView.swift", 45, 2, 66, 0);
  __break(1u);
}

void sub_10010DC5C(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t Strong;
  void *v6;
  id v7;
  void *v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  char v18;
  double v19;
  _BYTE *v20;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_videoView]);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100005C94(&qword_10082E4F0, type metadata accessor for VideoView, (uint64_t)&unk_10067E990);
    v7 = objc_msgSend(v6, "superview");
    if (v7)
    {
      v8 = v7;
      sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
      v9 = v2;
      v10 = v8;
      LOBYTE(v8) = static NSObject.== infix(_:_:)(v10, v9);

      if ((v8 & 1) != 0)
      {
        v11 = (void *)swift_unknownObjectWeakLoadStrong(v4);
        if (v11)
        {
          v12 = v11;
          objc_msgSend(v11, "removeFromSuperview");

        }
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView], "setHidden:", 0);
      }
    }
    else
    {

    }
  }
  v13 = swift_unknownObjectWeakAssign(v4, a1);
  v14 = swift_unknownObjectWeakLoadStrong(v13);
  if (v14)
  {
    v15 = *(void **)&v2[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
    v20 = (_BYTE *)v14;
    objc_msgSend(v15, "setHidden:", 1);
    v20[qword_10088ED98] = 1;
    v16 = &v20[qword_100844108];
    *((_QWORD *)v16 + 1) = &off_10075A5B0;
    swift_unknownObjectWeakAssign(v16, v2);
    v17 = objc_msgSend(v2, "traitCollection");
    v18 = UITraitCollection.isSizeClassRegular.getter(v17);

    v19 = 8.0;
    if ((v18 & 1) != 0)
      v19 = 12.0;
    objc_msgSend(v20, "_setCornerRadius:", v19);
    objc_msgSend(v2, "insertSubview:aboveSubview:", v20, v15);
    objc_msgSend(v2, "setNeedsLayout");

  }
}

uint64_t sub_10010DE8C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10010DEB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10010DED4()
{
  uint64_t v0;

  sub_100367FD8(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_10010DEE0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10010DF04()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_10010DF38(uint64_t a1, __n128 a2, double a3)
{
  uint64_t v3;

  sub_10010D378(a2, a3, a1, *(_BYTE *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

unint64_t sub_10010DF48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10082E1B0;
  if (!qword_10082E1B0)
  {
    v1 = sub_100008FE4(255, (unint64_t *)&qword_100833550, UIImageView_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for UIImageView, v1);
    atomic_store(result, (unint64_t *)&qword_10082E1B0);
  }
  return result;
}

uint64_t sub_10010DFA0(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[40];
  _QWORD v80[5];

  v6 = type metadata accessor for Artwork.Style(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork.Crop(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OfferItem(0, v12);
  v80[3] = v15;
  v80[4] = &protocol witness table for AppPromotion;
  v80[0] = a1;
  sub_100022500((uint64_t)v80, (uint64_t)v79);
  swift_retain(a1);
  v16 = sub_10007B804((uint64_t *)&unk_100835F00);
  if (swift_dynamicCast(&v78, v79, v16, v15, 6))
  {
    v17 = v78;
    v18 = OfferItem.iapArtwork.getter();
    v20 = OfferItem.offerLockup.getter(v19);
    v22 = type metadata accessor for InAppPurchaseLockup(0, v21);
    v23 = swift_dynamicCastClass(v20, v22);
    v76 = v17;
    if (v23)
    {
      v24 = InAppPurchaseLockup.parent.getter(v23);
      v25 = Lockup.icon.getter(v24);
      swift_release(v20);
    }
    else
    {
      v26 = swift_release(v20);
      v24 = OfferItem.offerLockup.getter(v26);
      v25 = Lockup.icon.getter(v24);
    }
    swift_release(v24);
    v77 = a2;
    if (v25)
    {
      v27 = *(double *)&a3[qword_100849780 + 8];
      swift_retain(v25);
      v29 = Artwork.crop.getter(v28);
      v30 = Artwork.Crop.preferredContentMode.getter(v29);
      v31 = *(void (**)(char *, uint64_t))(v11 + 8);
      v31(v14, v10);
      v32 = Artwork.config(_:mode:prefersLayeredImage:)(v30, 0, v27, v27);
      v33 = a3;
      v34 = v32;
      v75 = v33;
      v35 = *(void **)&v33[qword_100849768];
      Artwork.style.getter(v32);
      v36 = ArtworkView.style.setter(v9);
      *(_QWORD *)&v37 = Artwork.contentMode.getter(v36).n128_u64[0];
      v39 = ArtworkLoaderConfig.size.getter(objc_msgSend(v35, "setContentMode:", v38, v37));
      v41 = ArtworkView.imageSize.setter(v39, v40);
      v42 = Artwork.backgroundColor.getter(v41);
      if (!v42)
      {
        v43 = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
        v42 = static UIColor.placeholderBackground.getter(v43);
      }
      v44 = ArtworkView.backgroundColor.setter(v42);
      v45 = Artwork.crop.getter(v44);
      v46 = Artwork.Crop.preferredContentMode.getter(v45);
      v31(v14, v10);
      objc_msgSend(v35, "setContentMode:", v46);
      v47 = type metadata accessor for ArtworkView(0);
      v48 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v34, 2, 1, v35, v47, v48);
      swift_release(v25);
      swift_release(v34);
      a3 = v75;
    }
    if (v18)
    {
      v49 = *(double *)&a3[qword_100849780];
      swift_retain(v18);
      v51 = Artwork.crop.getter(v50);
      v52 = Artwork.Crop.preferredContentMode.getter(v51);
      v75 = *(char **)(v11 + 8);
      ((void (*)(char *, uint64_t))v75)(v14, v10);
      v53 = Artwork.config(_:mode:prefersLayeredImage:)(v52, 0, v49, v49);
      v54 = a3;
      v55 = v53;
      v56 = *(_QWORD *)&v54[qword_100849760];
      v57 = OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView;
      v58 = *(id *)(v56 + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView);
      Artwork.style.getter(v58);
      v59 = ArtworkView.style.setter(v9);
      *(_QWORD *)&v60 = Artwork.contentMode.getter(v59).n128_u64[0];
      v62 = ArtworkLoaderConfig.size.getter(objc_msgSend(v58, "setContentMode:", v61, v60));
      v64 = ArtworkView.imageSize.setter(v62, v63);
      v65 = Artwork.backgroundColor.getter(v64);
      if (!v65)
      {
        v66 = sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
        v65 = static UIColor.placeholderBackground.getter(v66);
      }
      ArtworkView.backgroundColor.setter(v65);

      v67 = *(id *)(v56 + v57);
      v68 = Artwork.crop.getter(v67);
      v69 = Artwork.Crop.preferredContentMode.getter(v68);
      ((void (*)(char *, uint64_t))v75)(v14, v10);
      objc_msgSend(v67, "setContentMode:", v69);

      v70 = *(void **)(v56 + v57);
      v71 = type metadata accessor for ArtworkView(0);
      v72 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
      v73 = v70;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v55, 2, 1, v73, v71, v72);
      swift_release(v76);
      swift_release(v55);

      swift_release_n(v18, 2);
    }
    else
    {
      swift_release(v76);
    }
    swift_release(v25);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v80);
}

void sub_10010E47C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100417E18(a1, a2, v2);
}

BOOL sub_10010E494(void **a1, char **a2)
{
  return sub_10010F754(*a1, *a2);
}

id sub_10010E4A0()
{
  _BYTE *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode] = 1;
  v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_isCollapsing] = 0;
  v2 = &v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_mediaOverlayStyle];
  v3 = enum case for MediaOverlayStyle.matchSystem(_:);
  v4 = type metadata accessor for MediaOverlayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v2, v3, v4);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView] = 0;
  v7.receiver = v0;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10010E58C(2);
  sub_10010E58C(0);
  sub_10010E6BC();
  sub_10010E844();

  return v5;
}

void sub_10010E58C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  char *v10;
  void *v11;
  uint64_t v12;

  if (a1 != 1)
  {
    v2 = v1;
    if (a1 == 2)
    {
      v3 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView;
      if (*(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView])
        return;
      v4 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", 0);
      v5 = *(void **)&v1[v3];
      *(_QWORD *)&v1[v3] = v4;

      v6 = *(void **)&v1[v3];
      if (!v6)
        return;
      v7 = v6;
      objc_msgSend(v2, "bounds");
      objc_msgSend(v7, "setFrame:");

      v8 = *(void **)&v2[v3];
      if (!v8)
        return;
LABEL_10:
      objc_msgSend(v8, "setUserInteractionEnabled:", 0);
      v12 = *(_QWORD *)&v2[v3];
      if (v12)
        objc_msgSend(v2, "insertSubview:atIndex:", v12, 0);
      return;
    }
    v3 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView])
    {
      objc_msgSend(v1, "bounds");
      v9 = objc_allocWithZone((Class)type metadata accessor for MediaOverlayGradientBlurView());
      v10 = sub_1002333D0(0);
      v11 = *(void **)&v1[v3];
      *(_QWORD *)&v1[v3] = v10;

      v8 = *(void **)&v1[v3];
      if (v8)
        goto LABEL_10;
    }
  }
}

void sub_10010E6BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  v1 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode);
  sub_10010F838(v2);
  sub_10010E58C((uint64_t)v2);
  sub_10010F824(v2);
  v3 = *(_QWORD *)(v0 + v1);
  if (v3 == 2)
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView);
    if (v5)
      objc_msgSend(v5, "setAlpha:", 0.0);
    v6 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView;
    v7 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView);
    if (v7)
    {
      v8 = objc_msgSend(v7, "effect");
      if (!v8)
      {
        v9 = *(void **)(v0 + v6);
        if (!v9)
          return;
        v10 = (void *)objc_opt_self(UIBlurEffect);
        v11 = v9;
        v14 = objc_msgSend(v10, "effectWithStyle:", 7);
        objc_msgSend(v11, "setEffect:", v14);

        v8 = v14;
      }

    }
  }
  else
  {
    if (v3 == 1)
    {
      v4 = *(void **)(v0
                    + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView);
      if (v4)
        objc_msgSend(v4, "setAlpha:", 0.0);
    }
    else
    {
      v12 = *(void **)(v0
                     + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView);
      if (v12)
        objc_msgSend(v12, "setAlpha:", 1.0);
    }
    v13 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView);
    if (v13)
      objc_msgSend(v13, "setEffect:", 0);
  }
}

void sub_10010E844()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  char v18[24];

  v1 = v0;
  v2 = type metadata accessor for MediaOverlayStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = &v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_mediaOverlayStyle];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_mediaOverlayStyle], v18, 0, 0);
  v7 = *(uint64_t (**)(char *, char *, uint64_t))(v3 + 16);
  v8 = v7(v5, v6, v2);
  v9 = MediaOverlayStyle.userInterfaceStyle.getter(v8);
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  objc_msgSend(v1, "setOverrideUserInterfaceStyle:", v9);
  v11 = *(void **)&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView];
  if (v11)
  {
    v7(v5, v6, v2);
    v12 = v11;
    v13 = MediaOverlayStyle.userInterfaceStyle.getter(v12);
    v10(v5, v2);
    objc_msgSend(v12, "setOverrideUserInterfaceStyle:", v13);

  }
  v14 = *(void **)&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView];
  if (v14)
  {
    v7(v5, v6, v2);
    v15 = v14;
    v16 = MediaOverlayStyle.userInterfaceStyle.getter(v15);
    v10(v5, v2);
    objc_msgSend(v15, "setOverrideUserInterfaceStyle:", v16);

  }
}

void sub_10010EABC()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double Height;
  double MinY;
  uint64_t v23;
  char *v24;
  double v25;
  double v26;
  uint64_t v27;
  void *v28;
  char *v29;
  id v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  char *v42;
  id v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  id v48;
  uint64_t v49;
  void *v50;
  double v51;
  id v52;
  char *v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  double v58;
  double v59;
  double v60;
  id v61;
  uint64_t v62;
  char *v63;
  CGRect v64;
  CGRect v65;

  if ((v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_isCollapsing] & 1) == 0)
  {
    v1 = v0;
    v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode];
    if ((unint64_t)v2 >= 3)
    {
      v3 = v2;
      objc_msgSend(v3, "frame");
      v5 = v4;
      v7 = v6;
      v9 = v8;
      v11 = v10;
      v12 = objc_msgSend(v3, "superview");
      objc_msgSend(v1, "convertRect:fromView:", v12, v5, v7, v9, v11);
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v20 = v19;

      objc_msgSend(v1, "bounds");
      Height = CGRectGetHeight(v64);
      v65.origin.x = v14;
      v65.origin.y = v16;
      v65.size.width = v18;
      v65.size.height = v20;
      MinY = CGRectGetMinY(v65);
      v23 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView;
      v24 = *(char **)&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView];
      if (!v24)
        goto LABEL_9;
      v25 = Height - (Height - MinY);
      v26 = (v25 + -100.0) / Height;
      v27 = OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_colorGradientStartY;
      *(double *)&v24[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_colorGradientStartY] = v26;
      v28 = *(void **)&v24[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_colorGradientView];
      v29 = v24;
      v30 = objc_msgSend(v28, "layer");
      v31 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v30, v31, 0, 0, 0), "startPoint");
      v33 = v32;

      v34 = *(double *)&v24[v27];
      v35 = objc_msgSend(v28, "layer");
      v36 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v35, v36, 0, 0, 0), "setStartPoint:", v33, v34);

      v37 = objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_secondaryColorGradientView], "layer");
      v38 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v37, v38, 0, 0, 0), "setStartPoint:", v33, v34);

      v39 = *(char **)&v1[v23];
      if (!v39)
        goto LABEL_9;
      v40 = OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientStartY;
      *(double *)&v39[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientStartY] = v26;
      v41 = *(void **)&v39[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientMaskView];
      v42 = v39;
      v43 = objc_msgSend(v41, "layer");
      v44 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v43, v44, 0, 0, 0), "startPoint");
      v46 = v45;

      v47 = *(double *)&v39[v40];
      v48 = objc_msgSend(v41, "layer");
      v49 = objc_opt_self(CAGradientLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v48, v49, 0, 0, 0), "setStartPoint:", v46, v47);

      v50 = *(void **)&v1[v23];
      if (!v50)
        goto LABEL_9;
      v51 = (v25 + 30.0) / Height;
      v52 = v50;
      sub_1002325F8(v51);

      v53 = *(char **)&v1[v23];
      if (v53)
      {
        v54 = OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientEndY;
        *(double *)&v53[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientEndY] = v51;
        v55 = *(void **)&v53[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientMaskView];
        v63 = v53;
        v56 = objc_msgSend(v55, "layer");
        v57 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v56, v57, 0, 0, 0), "endPoint");
        v59 = v58;

        v60 = *(double *)&v53[v54];
        v61 = objc_msgSend(v55, "layer");
        v62 = objc_opt_self(CAGradientLayer);
        objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v61, v62, 0, 0, 0), "setEndPoint:", v59, v60);

        sub_10010F824(v2);
        sub_10010F824(v2);

      }
      else
      {
LABEL_9:
        sub_10010F824(v2);
        sub_10010F824(v2);
      }
    }
  }
}

void sub_10010EF80(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  void *v6;
  char v7;

  v2 = v1;
  v4 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode;
  v5 = *(char **)(v2 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode) = a1;
  sub_10010F838(v5);
  sub_10010F838(a1);
  sub_10010F824(v5);
  v6 = *(void **)(v2 + v4);
  if (v6 == (void *)2)
  {
    if (v5 == (char *)2)
      goto LABEL_15;
    goto LABEL_14;
  }
  if (v6 == (void *)1)
  {
    if (v5 == (char *)1)
      goto LABEL_15;
    goto LABEL_14;
  }
  if ((unint64_t)(v5 - 1) < 2)
  {
LABEL_14:
    sub_10010E6BC();
    goto LABEL_15;
  }
  if (!v6)
  {
    if (!v5)
      goto LABEL_15;
    sub_10010F824(0);
    goto LABEL_14;
  }
  if (!v5)
    goto LABEL_14;
  sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
  sub_10010F838(v5);
  sub_10010F838(v6);
  v7 = static NSObject.== infix(_:_:)(v6, v5);
  sub_10010F824(v5);
  sub_10010F824(v6);
  if ((v7 & 1) == 0)
    goto LABEL_14;
LABEL_15:
  sub_10010EABC();
  sub_10010F824(a1);
  sub_10010F824(v5);
}

void sub_10010F094()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v2, "setFrame:");

  }
  v3 = *(void **)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v4, "setFrame:");

  }
  sub_10010EABC();
}

id sub_10010F180(uint64_t a1, double a2, double a3)
{
  char *v3;
  id v7;
  char *v8;
  char *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double MaxY;
  objc_super v29;
  CGRect v30;

  v29.receiver = v3;
  v29.super_class = (Class)swift_getObjectType();
  v7 = objc_msgSendSuper2(&v29, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    v8 = *(char **)&v3[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode];
    if ((unint64_t)(v8 - 1) >= 2)
    {
      if (v8)
      {
        sub_10010F838(*(id *)&v3[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode]);
        v9 = v8;
        objc_msgSend(v9, "frame");
        v11 = v10;
        v13 = v12;
        v15 = v14;
        v17 = v16;
        v18 = objc_msgSend(v9, "superview");
        objc_msgSend(v3, "convertRect:fromView:", v18, v11, v13, v15, v17);
        v20 = v19;
        v22 = v21;
        v24 = v23;
        v26 = v25;

        v30.origin.x = v20;
        v30.origin.y = v22;
        v30.size.width = v24;
        v30.size.height = v26;
        MaxY = CGRectGetMaxY(v30);
        sub_10010F824(v8);
        sub_10010F824(v8);
        LOBYTE(v8) = MaxY < a3;
      }
    }
    else
    {
      LOBYTE(v8) = 1;
    }
    sub_100008FE4(0, (unint64_t *)&qword_100832BD0, NSObject_ptr);
    if ((static NSObject.== infix(_:_:)(v7, v3) & 1) != 0 && (v8 & 1) == 0)
    {

      return 0;
    }
  }
  return v7;
}

uint64_t sub_10010F41C()
{
  return type metadata accessor for AppPromotionScrollableContentContainerView(0);
}

uint64_t type metadata accessor for AppPromotionScrollableContentContainerView(uint64_t a1)
{
  uint64_t result;

  result = qword_10082E1F0;
  if (!qword_10082E1F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppPromotionScrollableContentContainerView);
  return result;
}

uint64_t sub_10010F460(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = &unk_100664A88;
  result = type metadata accessor for MediaOverlayStyle(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100664AA0;
    v4[4] = &unk_100664AA0;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AppPromotionScrollableContentContainerView.ProtectionMode(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if ((int)v4 - 1 < 0)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void destroy for AppPromotionScrollableContentContainerView.ProtectionMode(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if (v2 - 1 < 0)

}

void **assignWithCopy for AppPromotionScrollableContentContainerView.ProtectionMode(void **a1, void **a2)
{
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  int v8;
  id v9;
  id v12;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = (_DWORD)v5 - 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 - 1;
  if (v6 < 0)
  {
    if (v8 < 0)
    {
      *a1 = v7;
      v12 = v7;

      return a1;
    }

    v7 = *a2;
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;
  v9 = v7;
  return a1;
}

_QWORD *initializeWithTake for AppPromotionScrollableContentContainerView.ProtectionMode(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for AppPromotionScrollableContentContainerView.ProtectionMode(void **a1, unint64_t *a2)
{
  void *v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    v4 = *a1;
  v5 = *a2;
  if ((int)v4 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (v5 < 0xFFFFFFFF)
      v6 = *a2;
    if ((int)v6 - 1 < 0)
    {
      *a1 = (void *)v5;

      return a1;
    }

  }
  *a1 = (void *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for AppPromotionScrollableContentContainerView.ProtectionMode(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 1;
  if (v5 >= 3)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppPromotionScrollableContentContainerView.ProtectionMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_10010F6F8(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_10010F71C(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2)
LABEL_5:
    *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppPromotionScrollableContentContainerView.ProtectionMode()
{
  return &type metadata for AppPromotionScrollableContentContainerView.ProtectionMode;
}

BOOL sub_10010F754(void *a1, char *a2)
{
  char v5;

  if (a1 == (void *)2)
    return a2 == (char *)2;
  if (a1 != (void *)1)
  {
    if ((unint64_t)(a2 - 1) < 2)
      return 0;
    if (a1)
    {
      if (a2)
      {
        sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
        sub_10010F838(a2);
        sub_10010F838(a1);
        v5 = static NSObject.== infix(_:_:)(a1, a2);
        sub_10010F824(a2);
        sub_10010F824(a1);
        if ((v5 & 1) != 0)
          return 1;
      }
      return 0;
    }
    if (a2)
    {
      sub_10010F824(0);
      return 0;
    }
    return 1;
  }
  return a2 == (char *)1;
}

void sub_10010F824(id a1)
{
  if ((char *)a1 - 1 >= (char *)2)

}

id sub_10010F838(id result)
{
  if ((char *)result - 1 >= (char *)2)
    return result;
  return result;
}

uint64_t sub_10010F850()
{
  return sub_100005C94(&qword_10082E200, type metadata accessor for AppEventCollectionViewCell, (uint64_t)&unk_10066D8AC);
}

double sub_10010F880(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  id v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  double v21;
  double v22;
  uint64_t v24;
  uint64_t v25;

  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for AppEvent(0);
  v8 = sub_100005C94(&qword_10082E208, (uint64_t (*)(uint64_t))&type metadata accessor for AppEvent, (uint64_t)&protocol conformance descriptor for AppPromotion);
  ItemLayoutContext.typedModel<A>(as:)(&v25, v7, v7, v8);
  v9 = v25;
  if (!v25)
    return 0.0;
  KeyPath = swift_getKeyPath(&unk_100664B20);
  ItemLayoutContext.subscript.getter(v6);
  swift_release(KeyPath);
  v12 = PageGrid.componentMeasuringSize(spanning:)(v11);
  v14 = v13;
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  v15 = sub_1000D2308();
  v16 = type metadata accessor for AppEventView(0);
  ObjectType = swift_getObjectType();
  v18 = type metadata accessor for ObjectGraph(0);
  v19 = swift_dynamicCastClassUnconditional(a2, v18, 0, 0, 0);
  v20 = swift_unknownObjectRetain(v15);
  v20.n128_f64[0] = v12;
  sub_100180144(v9, v15, v19, v20, v14, v16, ObjectType);
  v22 = v21;
  swift_unknownObjectRelease_n(v15, 2);
  swift_release(v9);
  return v22;
}

double sub_10010FA24(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t KeyPath;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  double v24;
  double v25;
  uint64_t v27;

  v3 = type metadata accessor for PageGrid(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100664B20);
  ItemLayoutContext.subscript.getter(v6);
  swift_release(KeyPath);
  v9 = PageGrid.componentMeasuringSize(spanning:)(v8);
  v11 = v10;
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  v12 = sub_1000D2308();
  v13 = type metadata accessor for AppEventView(0);
  type metadata accessor for Placeholder(0);
  v14 = static Placeholder.appEventTitleText.getter();
  v16 = v15;
  v17 = static Placeholder.appEventKindText.getter();
  v19 = v18;
  v20 = static Placeholder.appEventSubtitleText.getter();
  v22 = v21;
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v12);
  sub_100180280(v14, v16, v17, v19, v20, v22, a2, v12, v9, v11, v13, ObjectType);
  v25 = v24;
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v22);
  swift_unknownObjectRelease_n(v12, 2);
  return v25;
}

void sub_10010FBB0(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
}

uint64_t sub_10010FBBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  if (*a1 != *a2)
    return 0;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a2 + 2);
  if (v4)
  {
    if (!v5)
      return 0;
    v6 = *((_QWORD *)a1 + 1);
    v7 = *((_QWORD *)a2 + 1);
    v8 = v6 == v7 && v4 == v5;
    if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v4, v7, v5, 0) & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  return 1;
}

double sub_10010FC28(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  double result;
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v10, "prepareForReuse");
  v4 = &v2[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_appStateMachine];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_appStateMachine];
  if (v5)
  {
    v6 = *((_QWORD *)v4 + 1);
    ObjectType = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_appStateMachine], v3);
    swift_unknownObjectRetain(v5);
    dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)(v2, ObjectType, v6);
    swift_unknownObjectRelease(v5);
    v8 = *(_QWORD *)v4;
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  return result;
}

_QWORD *sub_10010FD08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *result;
  uint64_t v56;
  uint64_t KeyPath;
  uint64_t v58;
  double v59;
  uint64_t (*v60)(char *, uint64_t);
  uint64_t v61;
  __n128 v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  uint64_t v74;
  __n128 v75;
  void *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  double v80;
  _BYTE *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  void *v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  NSString v91;
  char *v92;
  void *v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  NSString v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  NSString v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  char v114;
  char v115;
  char v116;
  __n128 v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  void (*v127)(char *, uint64_t);
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  char v134;
  __n128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __n128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __n128 v146;
  unint64_t v147;
  char v148;
  uint64_t *v149;
  uint64_t v150;
  char *v151;
  __n128 v152;
  char v153;
  void *v154;
  uint64_t v155;
  uint64_t ObjectType;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t (*v174)(char *, _QWORD, uint64_t);
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unsigned int *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  void (*v184)(char *, uint64_t, uint64_t, uint64_t);
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  void (*v193)(char *, uint64_t, uint64_t, uint64_t);
  char *v194;
  uint64_t v195;
  uint64_t v196;
  __n128 v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  char *v206;
  __n128 v207;
  id v208;
  char *v209;
  uint64_t v210;
  char *v211;
  __n128 v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  __n128 v218;
  uint64_t v219;
  double v220;
  uint64_t v221;
  uint64_t v222;
  double v223;
  id v224;
  id v225;
  void *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char v234;
  uint64_t v235;
  uint64_t v236;
  void *v237;
  uint64_t v238;
  char *v239;
  void *v240;
  id v241;
  __n128 v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t (*v247)(char *, uint64_t);
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  _BYTE *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  char *v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  char v290[8];
  __int128 v291;
  __int128 v292;

  v288 = a2;
  v245 = type metadata accessor for FloatingPointRoundingRule(0);
  v244 = *(_QWORD *)(v245 - 8);
  __chkstk_darwin(v245);
  v243 = (char *)&v243 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v277 = type metadata accessor for ProductPageTheme(0);
  v276 = *(_QWORD *)(v277 - 8);
  __chkstk_darwin(v277);
  v275 = (char *)&v243 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10007B804((uint64_t *)&unk_10082E210);
  __chkstk_darwin(v5);
  v274 = (char *)&v243 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v271 = type metadata accessor for OfferButtonSubtitlePosition(0);
  v268 = *(_QWORD *)(v271 - 8);
  __chkstk_darwin(v271);
  v269 = (char *)&v243 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v273 = sub_10007B804((uint64_t *)&unk_10082A450);
  v272 = *(_QWORD *)(v273 - 8);
  __chkstk_darwin(v273);
  v270 = (char *)&v243 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10007B804((uint64_t *)&unk_10082A420);
  __chkstk_darwin(v9);
  v266 = (char *)&v243 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10007B804((uint64_t *)&unk_10082B1A0);
  v12 = __chkstk_darwin(v11);
  v267 = (char *)&v243 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OfferButtonPresenterViewAlignment(0, v12);
  v15 = *(_QWORD *)(v14 - 8);
  v284 = v14;
  v285 = v15;
  __chkstk_darwin(v14);
  v265 = (char *)&v243 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v250 = (char *)&v243 - v18;
  __chkstk_darwin(v19);
  v283 = (char *)&v243 - v20;
  v21 = sub_10007B804((uint64_t *)&unk_10082E220);
  __chkstk_darwin(v21);
  v254 = (char *)&v243 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10007B804((uint64_t *)&unk_100833920);
  __chkstk_darwin(v23);
  v253 = (char *)&v243 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10007B804((uint64_t *)&unk_10082A410);
  __chkstk_darwin(v25);
  v252 = (char *)&v243 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10007B804((uint64_t *)&unk_10083EEB0);
  __chkstk_darwin(v27);
  v251 = (char *)&v243 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = type metadata accessor for LegacyAppState(0);
  v263 = *(_QWORD *)(v264 - 8);
  __chkstk_darwin(v264);
  v262 = (char *)&v243 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v257 = type metadata accessor for OfferTitleType(0);
  v279 = *(_QWORD *)(v257 - 8);
  __chkstk_darwin(v257);
  v259 = (char *)&v243 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v261 = type metadata accessor for AdamId(0);
  v260 = *(_QWORD *)(v261 - 8);
  v31 = __chkstk_darwin(v261);
  v286 = (char *)&v243 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v280 = type metadata accessor for OfferLabelStyle(0, v31);
  v278 = *(_QWORD *)(v280 - 8);
  __chkstk_darwin(v280);
  v249 = (char *)&v243 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v248 = (char *)&v243 - v35;
  v36 = type metadata accessor for PageGrid.Direction(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v282 = (char *)&v243 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v41 = (char *)&v243 - v40;
  v42 = type metadata accessor for PageGrid(0);
  v43 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v287 = (char *)&v243 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v47 = (char *)&v243 - v46;
  v49 = __chkstk_darwin(v48);
  v51 = (char *)&v243 - v50;
  v52 = type metadata accessor for ProductTopLockup(0, v49);
  v53 = sub_100005C94((unint64_t *)&unk_10082E230, (uint64_t (*)(uint64_t))&type metadata accessor for ProductTopLockup, (uint64_t)&protocol conformance descriptor for ProductTopLockup);
  v54 = a1;
  result = ItemLayoutContext.typedModel<A>(as:)(&v291, v52, v52, v53);
  v56 = v291;
  if (!(_QWORD)v291)
    return result;
  v281 = v36;
  KeyPath = swift_getKeyPath(&unk_100664BC0);
  v289 = v56;
  ItemLayoutContext.subscript.getter(v51);
  swift_release(KeyPath);
  v59 = PageGrid.containerWidth.getter(v58);
  v60 = *(uint64_t (**)(char *, uint64_t))(v43 + 8);
  v60(v51, v42);
  v61 = swift_getKeyPath(&unk_100664BC0);
  ItemLayoutContext.subscript.getter(v47);
  v62 = swift_release(v61);
  v63 = PageGrid.containerHeight.getter(v62);
  v60(v47, v42);
  v64 = v281;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v41, enum case for PageGrid.Direction.vertical(_:), v281);
  v65 = swift_getKeyPath(&unk_100664BC0);
  ItemLayoutContext.subscript.getter(v51);
  v66 = swift_release(v65);
  v67 = PageGrid.safeAreaInsets.getter(v66);
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v256 = v42;
  v247 = v60;
  v60(v51, v42);
  v74 = swift_getKeyPath(&unk_100664BF0);
  ItemLayoutContext.subscript.getter(&v291);
  v75 = swift_release(v74);
  v76 = (void *)v291;
  v77 = v282;
  (*(void (**)(char *, char *, uint64_t, __n128))(v37 + 16))(v282, v41, v64, v75);
  v78 = sub_10058940C(0.0);
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)(0x6F43656C676E6973, 0xEC0000006E6D756CLL, v77, 0, v78, v59, v63, v67, v69, v71, v73);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v41, v64);
  v79 = (char *)sub_1000D2308();
  v80 = sub_1003DC980();
  v81 = v258;
  v82 = &v258[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_iconSize];
  *(double *)v82 = v80;
  *((_QWORD *)v82 + 1) = v83;
  v84 = sub_10007B804(&qword_100831060);
  v85 = type metadata accessor for BaseObjectGraph(0);
  v86 = inject<A, B>(_:from:)(&v291, v84, v288, v84, v85);
  v255 = *((_QWORD *)&v291 + 1);
  v281 = v291;
  v87 = *(void **)&v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleLabel];
  ProductTopLockup.title.getter(v86);
  v246 = v54;
  if (v88)
  {
    v90 = v88;
    v91 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v89 = swift_bridgeObjectRelease(v90).n128_u64[0];
  }
  else
  {
    v91 = 0;
  }
  v92 = v286;
  objc_msgSend(v87, "setText:", v91, v89);

  v93 = *(void **)&v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_taglineLabel];
  ProductTopLockup.subtitle.getter();
  if (v94)
  {
    v96 = v94;
    v97 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v95 = swift_bridgeObjectRelease(v96).n128_u64[0];
  }
  else
  {
    v97 = 0;
  }
  objc_msgSend(v93, "setText:", v97, v95);

  v98 = *(void **)&v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_developerLabel];
  ProductTopLockup.developerName.getter(v99);
  if (v100)
  {
    v102 = v100;
    v103 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v101 = swift_bridgeObjectRelease(v102).n128_u64[0];
  }
  else
  {
    v103 = 0;
  }
  objc_msgSend(v98, "setText:", v103, v101);

  v286 = (char *)ProductTopLockup.offerDisplayProperties.getter();
  v104 = ProductTopLockup.expandedOfferTitles.getter(v286);
  if (v105 == 1)
  {
    sub_100383010(0, 0);
    v108 = 0;
    v109 = 0;
  }
  else
  {
    v110 = v104;
    v111 = v105;
    v108 = v106;
    v109 = v107;
    swift_bridgeObjectRetain(v105);
    sub_100383010(v110, v111);
    swift_bridgeObjectRelease(v111);
  }
  v112 = v257;
  v113 = sub_100383024(v108, v109);
  v114 = ProductTopLockup.hasExpandedOffer.getter(v113);
  v115 = v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasExpandedOffer];
  v257 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasExpandedOffer;
  v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasExpandedOffer] = v114 & 1;
  sub_1003859B8(v115);
  v116 = ProductTopLockup.hasExpandedOfferDetails.getter();
  v118 = v286;
  v282 = v79;
  if ((v116 & 1) != 0 && v286)
  {
    v119 = v85;
    swift_retain(v286);
    v120 = v248;
    OfferDisplayProperties.offerLabelStyle.getter(v121);
    v122 = v278;
    v123 = v249;
    v124 = v280;
    (*(void (**)(char *, _QWORD, uint64_t))(v278 + 104))(v249, enum case for OfferLabelStyle.none(_:), v280);
    v125 = sub_100005C94((unint64_t *)&unk_100842F90, (uint64_t (*)(uint64_t))&type metadata accessor for OfferLabelStyle, (uint64_t)&protocol conformance descriptor for OfferLabelStyle);
    v126 = dispatch thunk of static Equatable.== infix(_:_:)(v120, v123, v124, v125);
    v127 = *(void (**)(char *, uint64_t))(v122 + 8);
    v127(v123, v124);
    v127(v120, v124);
    v128 = (uint64_t)v118;
    if ((v126 & 1) == 0)
    {
      v129 = swift_retain(v118);
      OfferDisplayProperties.adamId.getter(v129);
      v130 = type metadata accessor for ASKBagContract(0);
      v131 = v281;
      swift_unknownObjectRetain(v281);
      inject<A, B>(_:from:)(&v291, v130, v288, v130, v119);
      v132 = v291;
      v134 = ASKBagContract.arePreordersCancellable.getter(v133);
      v135 = swift_release(v132);
      v136 = type metadata accessor for OfferLabelPresenter(0, v135);
      swift_allocObject(v136, *(unsigned int *)(v136 + 48), *(unsigned __int16 *)(v136 + 52));
      v137 = OfferLabelPresenter.init(offerDisplayProperties:adamId:appStateController:arePreordersCancellable:)(v286, v92, v131, v255, v134 & 1);
      *((_QWORD *)&v292 + 1) = v136;
      v118 = v286;
      *(_QWORD *)&v291 = v137;
      v138 = (uint64_t)&v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerLabelPresenter];
      swift_beginAccess(&v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerLabelPresenter], v290, 33, 0);
      swift_retain(v137);
      sub_100021E00((uint64_t)&v291, v138, (uint64_t *)&unk_10082B490);
      swift_endAccess(v290);
      v139 = sub_100005C94(&qword_10082E250, type metadata accessor for ProductLockupCollectionViewCell, (uint64_t)&unk_100664B50);
      swift_unknownObjectRetain(v81);
      OfferLabelPresenter.view.setter(v140, v139);
      swift_release(v118);
      v128 = v137;
    }
    v117 = swift_release(v128);
    v79 = v282;
  }
  v141 = ProductTopLockup.offerSubtitlesOverride.getter(v117);
  if (v141)
  {
    v143 = v141;
    v144 = v279;
    v145 = (uint64_t)v259;
    goto LABEL_23;
  }
  v144 = v279;
  v145 = (uint64_t)v259;
  if (v118)
  {
    v146 = swift_retain(v118);
    v143 = OfferDisplayProperties.subtitles.getter(v146);
    v142 = swift_release(v118);
LABEL_23:
    (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v144 + 104))(v145, enum case for OfferTitleType.standard(_:), v112, v142);
    if (*(_QWORD *)(v143 + 16) && (v147 = sub_1003474CC(v145), (v148 & 1) != 0))
    {
      v149 = (uint64_t *)(*(_QWORD *)(v143 + 56) + 16 * v147);
      v150 = *v149;
      v279 = v149[1];
      swift_bridgeObjectRetain(v279);
    }
    else
    {
      v150 = 0;
      v279 = 0;
    }
    v151 = v92;
    v152 = swift_bridgeObjectRelease(v143);
    (*(void (**)(uint64_t, uint64_t, __n128))(v144 + 8))(v145, v112, v152);
    goto LABEL_28;
  }
  v151 = v92;
  v150 = 0;
  v279 = 0;
LABEL_28:
  swift_getObjectType();
  v153 = v81[v257];
  swift_unknownObjectRetain(v79);
  v155 = sub_10038C8E4(v154, v153);
  swift_unknownObjectRelease(v79);
  ObjectType = swift_getObjectType();
  ProductTopLockup.adamId.getter();
  v157 = dispatch thunk of AppStateController.stateMachine(forApp:)(v151, ObjectType, v255);
  v159 = v158;
  (*(void (**)(char *, uint64_t))(v260 + 8))(v151, v261);
  v160 = swift_getObjectType();
  v161 = (uint64_t)v262;
  v249 = (char *)v157;
  v255 = v160;
  v261 = v159;
  dispatch thunk of AppStateMachine.currentState.getter(v160, v159);
  v260 = v150;
  v259 = (char *)v155;
  sub_1001113D4(v161, v150, v279, v155);
  v162 = (*(uint64_t (**)(uint64_t, uint64_t))(v263 + 8))(v161, v264);
  v163 = v286;
  if (v286)
  {
    swift_retain(v286);
    v164 = sub_10054F908((uint64_t)_swiftEmptyArrayStorage);
    v165 = type metadata accessor for OfferStyle(0);
    v166 = (uint64_t)v251;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 56))(v251, 1, 1, v165);
    v167 = type metadata accessor for OfferEnvironment(0);
    v168 = (uint64_t)v252;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 56))(v252, 1, 1, v167);
    v169 = type metadata accessor for OfferTint(0);
    v170 = (uint64_t)v253;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 56))(v253, 1, 1, v169);
    v171 = (uint64_t)v254;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v278 + 56))(v254, 1, 1, v280);
    v291 = 0u;
    v292 = 0u;
    v280 = dispatch thunk of OfferDisplayProperties.newOfferDisplayPropertiesChanging(titles:titleSymbolNames:subtitles:style:environment:tint:isDeletableSystemApp:isFree:isPreorder:offerLabelStyle:hasDiscount:contentRating:offerToken:subscriptionFamilyId:overrideLocale:useAdsLocale:priceFormatted:isStreamlinedBuy:appCapabilities:)(0, 0, v164, v166, v168, v170, 2, 2, 2, v171, 0, 0, 1, &v291, 0, 0, 0, 0, 0,
             0,
             0,
             2,
             0);
    swift_release(v163);
    swift_bridgeObjectRelease(v164);
    sub_1000057AC((uint64_t)&v291, (uint64_t *)&unk_10082B490);
    sub_1000057AC(v171, (uint64_t *)&unk_10082E220);
    sub_1000057AC(v170, (uint64_t *)&unk_100833920);
    sub_1000057AC(v168, (uint64_t *)&unk_10082A410);
    v162 = sub_1000057AC(v166, (uint64_t *)&unk_10083EEB0);
  }
  else
  {
    v280 = 0;
  }
  v172 = ProductTopLockup.wantsInlineUberPresentationStyle.getter(v162);
  v173 = v285;
  v174 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v285 + 104);
  if ((v172 & 1) != 0)
  {
    v175 = v283;
    v176 = v284;
    v177 = v174(v283, enum case for OfferButtonPresenterViewAlignment.center(_:), v284);
  }
  else
  {
    if (v81[v257])
      v178 = (unsigned int *)&enum case for OfferButtonPresenterViewAlignment.right(_:);
    else
      v178 = (unsigned int *)&enum case for OfferButtonPresenterViewAlignment.left(_:);
    v179 = v250;
    v176 = v284;
    v174(v250, *v178, v284);
    v175 = v283;
    v177 = (*(uint64_t (**)(char *, char *, uint64_t))(v173 + 32))(v283, v179, v176);
  }
  v180 = v173;
  v181 = (uint64_t)v249;
  v182 = ProductTopLockup.offerAction.getter(v177);
  v183 = v265;
  (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v265, v175, v176);
  v184 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v180 + 56);
  v185 = v266;
  v184(v266, 1, 1, v176);
  v186 = sub_100005C94((unint64_t *)&unk_10082A440, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment, (uint64_t)&protocol conformance descriptor for OfferButtonPresenterViewAlignment);
  v187 = (uint64_t)v267;
  AccessibilityConditional.init(value:axValue:)(v183, v185, v176, v186);
  v188 = sub_10007B804((uint64_t *)&unk_100833930);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v188 - 8) + 56))(v187, 0, 1, v188);
  v278 = type metadata accessor for ObjectGraph(0);
  v189 = swift_dynamicCastClassUnconditional(v288, v278, 0, 0, 0);
  v190 = v268;
  v191 = v269;
  v192 = v271;
  (*(void (**)(char *, _QWORD, uint64_t))(v268 + 104))(v269, enum case for OfferButtonSubtitlePosition.below(_:), v271);
  v193 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v190 + 56);
  v194 = v274;
  v193(v274, 1, 1, v192);
  v195 = sub_100005C94((unint64_t *)&qword_10082E240, (uint64_t (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition, (uint64_t)&protocol conformance descriptor for OfferButtonSubtitlePosition);
  v196 = (uint64_t)v270;
  AccessibilityConditional.init(value:axValue:)(v191, v194, v192, v195);
  sub_100556868(v280, v182, 0, v187, v196, v189, 0, 0);
  v197 = swift_release(v182);
  (*(void (**)(uint64_t, uint64_t, __n128))(v272 + 8))(v196, v273, v197);
  sub_1000057AC(v187, (uint64_t *)&unk_10082B1A0);
  v198 = (uint64_t *)&v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_appStateMachine];
  v199 = *(_QWORD *)&v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_appStateMachine];
  if (v199)
  {
    v200 = v198[1];
    v201 = swift_getObjectType();
    swift_unknownObjectRetain(v199);
    dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)(v81, v201, v200);
    swift_unknownObjectRelease(v199);
    v199 = *v198;
  }
  v202 = v261;
  *v198 = v181;
  v198[1] = v202;
  swift_unknownObjectRetain(v181);
  swift_unknownObjectRelease(v199);
  v203 = swift_allocObject(&unk_10075A858, 24, 7);
  swift_unknownObjectWeakInit(v203 + 16, v81);
  v204 = (_QWORD *)swift_allocObject(&unk_10075A880, 48, 7);
  v205 = v260;
  v204[2] = v203;
  v204[3] = v205;
  v206 = v259;
  v204[4] = v279;
  v204[5] = v206;
  v207 = swift_retain(v203);
  dispatch thunk of AppStateMachine.addStateTransitionObserver(_:action:)(v81, sub_100113F98, v204, v255, v202, v207);
  swift_release(v203);
  v208 = objc_msgSend(v81, "contentView", swift_release(v204).n128_f64[0]);
  objc_msgSend(v208, "setLayoutMargins:", PageGrid.horizontalMargins.getter(v208));

  v209 = v275;
  v210 = v289;
  ProductTopLockup.theme.getter();
  v211 = &v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_theme];
  v212 = swift_beginAccess(&v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_theme], &v291, 33, 0);
  v213 = v276;
  v214 = v277;
  (*(void (**)(char *, char *, uint64_t, __n128))(v276 + 24))(v211, v209, v277, v212);
  swift_endAccess(&v291);
  sub_100384964();
  (*(void (**)(char *, uint64_t))(v213 + 8))(v209, v214);
  v215 = v288;
  v216 = swift_dynamicCastClassUnconditional(v288, v278, 0, 0, 0);
  v217 = v246;
  sub_100111598(v246, v216);
  sub_1001127D8(v210, v181, v202, v217, v215);
  v218.n128_f64[0] = sub_1003DCE00();
  *(_QWORD *)&v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_secondaryBannerViewHeight] = v218.n128_u64[0];
  v219 = ProductTopLockup.secondaryBanner.getter(v218);
  v221 = v281;
  if (v219)
  {
    v222 = v219;
    v223 = 0.0;
    v224 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BannerCollectionViewCell(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
    v225 = v224;
    v226 = (void *)static UIColor.defaultBackground.getter();
    objc_msgSend(v225, "setBackgroundColor:", v226);

    v228 = ProductTopLockup.wantsInlineUberPresentationStyle.getter(v227);
    v229 = v256;
    if ((v228 & 1) == 0)
    {
      v230 = v221;
      if (qword_100827720 != -1)
        swift_once(&qword_100827720, sub_1002C3800);
      v231 = qword_10088C108;
      v232 = qword_10088C110;
      sub_100060B40(qword_10088C0F0, qword_10088C108);
      v233 = v243;
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v231);
      v223 = AnyDimension.value(in:rounded:)(v282, v233, v231, v232);
      v228 = (*(uint64_t (**)(char *, uint64_t))(v244 + 8))(v233, v245);
      v229 = v256;
      v221 = v230;
    }
    v234 = ProductTopLockup.wantsInlineUberPresentationStyle.getter(v228);
    v235 = swift_dynamicCastClassUnconditional(v215, v278, 0, 0, 0);
    sub_10060BED0(v223, 0.0, 0.0, v222, v234 & 1, v282, v235);
    *(_QWORD *)&v220 = swift_release(v222).n128_u64[0];
  }
  else
  {
    v225 = 0;
    v229 = v256;
  }
  v236 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_secondaryBannerView;
  v237 = *(void **)&v81[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_secondaryBannerView];
  v239 = v283;
  v238 = v284;
  if (v237)
  {
    objc_msgSend(v237, "removeFromSuperview", v220);
    v240 = *(void **)&v81[v236];
  }
  else
  {
    v240 = 0;
  }
  *(_QWORD *)&v81[v236] = v225;
  v241 = v225;

  if (*(_QWORD *)&v81[v236])
    objc_msgSend(v81, "addSubview:");

  objc_msgSend(v81, "setNeedsLayout");
  swift_unknownObjectRelease(v181);
  swift_unknownObjectRelease(v221);
  swift_unknownObjectRelease(v282);
  swift_release(v289);
  swift_release(v280);
  v242 = swift_release(v286);
  (*(void (**)(char *, uint64_t, __n128))(v285 + 8))(v239, v238, v242);
  return (_QWORD *)v247(v287, v229);
}

id sub_1001113D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  char v8;
  void *v9;
  NSString v10;

  v5 = v4;
  v8 = LegacyAppState.isBuyable.getter();
  v9 = *(void **)&v4[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerSubtitleLabel];
  if ((v8 & 1) != 0 && a3)
  {
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setText:", v10);

    objc_msgSend(v9, "setHidden:", 0);
    objc_msgSend(v9, "setTextAlignment:", a4);
  }
  else
  {
    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerSubtitleLabel], "setHidden:", 1);
  }
  return objc_msgSend(v5, "setNeedsLayout");
}

uint64_t sub_1001114A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  void *v16;
  uint64_t ObjectType;
  _BYTE v19[24];

  v11 = type metadata accessor for LegacyAppState(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v19, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v16 = (void *)result;
    ObjectType = swift_getObjectType();
    dispatch thunk of AppStateMachine.currentState.getter(ObjectType, a2);
    sub_1001113D4((uint64_t)v14, a4, a5, a6);

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

void sub_100111598(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  char *v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  void *v72;
  double v73;
  double v74;
  double v75;
  double v76;
  void (*v77)(__n128);
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  double v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  id v88;
  void *v89;
  id v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  uint64_t v95;
  id v96;
  id v97;
  uint64_t v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  void *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  void *v109;
  id v110;
  id v111;
  id v112;
  id v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  NSString v117;
  id v118;
  void *v119;
  id v120;
  id v121;
  id v122;
  void *v123;
  void *v124;
  id v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  id v131;
  uint64_t v132;
  void *v133;
  void *v134;
  char *v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  void **v141;
  void *v142;
  id v143;
  uint64_t v144;
  double v145;
  uint64_t v146;
  NSString v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t KeyPath;
  uint64_t v153;
  __n128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  __n128 v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  id v167;
  void *v168;
  __n128 v169;
  void *v170;
  id v171;
  void *v172;
  void *v173;
  id v174;
  id v175;
  id v176;
  void *v177;
  void *v178;
  id v179;
  _QWORD v180[2];
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t ObjectType;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _QWORD v204[3];
  uint64_t v205;
  uint64_t v206;
  _QWORD v207[3];

  v3 = v2;
  v200 = a2;
  ObjectType = swift_getObjectType();
  v5 = type metadata accessor for DirectionalTextAlignment(0);
  v193 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v8);
  v192 = (char *)v180 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = sub_10007B804(&qword_100839E30);
  v190 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin(v191);
  v189 = (char *)v180 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = sub_10007B804((uint64_t *)&unk_10082E270);
  v187 = *(_QWORD *)(v188 - 8);
  __chkstk_darwin(v188);
  v186 = (char *)v180 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FontUseCase(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v180 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Wordmark(0, v14);
  v196 = *(_QWORD *)(v17 - 8);
  v197 = v17;
  __chkstk_darwin(v17);
  v195 = (char *)v180 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10007B804(&qword_10083C560);
  __chkstk_darwin(v19);
  v194 = (char *)v180 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for PageGrid(0);
  v198 = *(_QWORD *)(v21 - 8);
  v22 = __chkstk_darwin(v21);
  v24 = (_QWORD *)((char *)v180 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = type metadata accessor for ProductTopLockup(0, v22);
  v26 = sub_100005C94((unint64_t *)&unk_10082E230, (uint64_t (*)(uint64_t))&type metadata accessor for ProductTopLockup, (uint64_t)&protocol conformance descriptor for ProductTopLockup);
  v202 = a1;
  v27 = ItemLayoutContext.typedModel<A>(as:)(v207, v25, v25, v26);
  if (!v207[0])
  {
    sub_1003830E4(0);
    v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber] = 0;
    sub_100113AFC(v3, (uint64_t)v3);
    sub_1003854A8();
    sub_1003856D8();
    return;
  }
  v181 = v5;
  v182 = v7;
  v201 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_uberView;
  v28 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_uberView];
  v203 = v207[0];
  v184 = v12;
  v183 = v13;
  v185 = v16;
  if (!v28)
  {
    v31 = ProductTopLockup.uber.getter(v27);
    v32 = v31;
    goto LABEL_8;
  }
  v29 = *(_QWORD *)(v28 + OBJC_IVAR____TtC8AppStore14UberHeaderView_uber);
  swift_retain(v29);
  v31 = ProductTopLockup.uber.getter(v30);
  v32 = v31;
  if (!v29)
  {
LABEL_8:
    if (!v32)
    {
      v35 = 1;
      goto LABEL_13;
    }
    v37 = v32;
LABEL_12:
    swift_release(v37);
    v35 = 0;
    goto LABEL_13;
  }
  v207[0] = v29;
  if (!v31)
  {
    v37 = v29;
    goto LABEL_12;
  }
  v204[0] = v31;
  v33 = type metadata accessor for Uber(0);
  v34 = sub_100005C94(&qword_10082E280, (uint64_t (*)(uint64_t))&type metadata accessor for Uber, (uint64_t)&protocol conformance descriptor for Uber);
  swift_retain(v29);
  v35 = dispatch thunk of static Equatable.== infix(_:_:)(v207, v204, v33, v34);
  swift_release(v32);
  v36 = v207[0];
  swift_release(v29);
  swift_release(v36);
LABEL_13:
  v38 = *(char **)&v3[v201];
  if (v38
    && (v39 = *(_QWORD *)&v38[OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView],
        v40 = OBJC_IVAR____TtC8AppStore9MediaView_contentContainer,
        (v41 = *(void **)(*(_QWORD *)(v39 + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer)
                        + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents)) != 0)
    && (v42 = type metadata accessor for VideoView(0), (v31 = swift_dynamicCastClass(v41, v42)) != 0))
  {
    v43 = (void *)v31;
    sub_100005C94(&qword_10082E4F0, type metadata accessor for VideoView, (uint64_t)&unk_10067E990);
    v44 = v38;
    v45 = v41;
    v46 = objc_msgSend(v43, "superview");
    if (v46)
    {
      v47 = *(void **)(v39 + v40);
      v180[1] = sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
      v48 = v47;
      v49 = v46;
      LOBYTE(v46) = static NSObject.== infix(_:_:)(v49, v48);

      v44 = (char *)v49;
      v43 = v48;
    }

    v50 = v46 ^ 1;
  }
  else
  {
    v50 = 0;
  }
  v51 = v203;
  v52 = ProductTopLockup.uber.getter(v31);
  if (!v52)
  {
LABEL_58:
    if ((v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber] & 1) != 0)
    {
LABEL_83:
      objc_msgSend(v3, "setNeedsLayout", v53);
      swift_release(v51);
      return;
    }
    v131 = objc_msgSend(v3, "contentView", v53);
    objc_msgSend(v131, "setOverrideUserInterfaceStyle:", 0);

    v132 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_disclosureArrow;
    v133 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_disclosureArrow];
    if (v133)
    {
      objc_msgSend(v133, "removeFromSuperview");
      v134 = *(void **)&v3[v132];
    }
    else
    {
      v134 = 0;
    }
    v135 = v185;
    *(_QWORD *)&v3[v132] = 0;

    if (*(_QWORD *)&v3[v132])
      v136 = objc_msgSend(v3, "addSubview:");
    v137 = ProductTopLockup.tertiaryTitle.getter(v136);
    v139 = v138;
    v140 = static String.isNilOrEmpty(_:)(v137, v138);
    swift_bridgeObjectRelease(v139);
    if ((v140 & 1) != 0)
    {
      sub_10038C948(0);
LABEL_78:
      v173 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView];
      objc_msgSend(v173, "setHidden:", 1);
      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_blurView], "removeFromSuperview");
      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_shadowView], "removeFromSuperview");
      v174 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_shareButton], "layer");
      objc_msgSend(v174, "setCompositingFilter:", 0);

      v175 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_taglineLabel], "layer");
      objc_msgSend(v175, "setCompositingFilter:", 0);

      v176 = objc_msgSend(v173, "layer");
      objc_msgSend(v176, "setCompositingFilter:", 0);

      v177 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferTitleLabel];
      if (v177)
        objc_msgSend(v177, "setHidden:", 0);
      v178 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferSubtitleLabel];
      if (v178)
      {
        v179 = objc_msgSend(v178, "layer");
        objc_msgSend(v179, "setCompositingFilter:", 0);

      }
      sub_100383194();
      v51 = v203;
      goto LABEL_83;
    }
    v141 = (void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_tertiaryTitleLabel];
    swift_beginAccess(&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_tertiaryTitleLabel], v207, 0, 0);
    v142 = *v141;
    if (!*v141)
    {
      if (qword_1008276F8 != -1)
        swift_once(&qword_1008276F8, sub_1002C3370);
      v148 = v188;
      v149 = sub_10007AF70(v188, (uint64_t)qword_10088C058);
      v150 = v187;
      v151 = v186;
      (*(void (**)(char *, uint64_t, uint64_t))(v187 + 16))(v186, v149, v148);
      KeyPath = swift_getKeyPath(&unk_100664C20);
      ItemLayoutContext.subscript.getter(v204);
      swift_release(KeyPath);
      v153 = v204[0];
      v206 = v204[0];
      Conditional.evaluate(with:)(&v206, v148);
      v154 = swift_unknownObjectRelease(v153);
      (*(void (**)(char *, uint64_t, __n128))(v150 + 8))(v151, v148, v154);
      if (qword_100827840 != -1)
        swift_once(&qword_100827840, sub_1002C4BF8);
      v155 = v191;
      v156 = sub_10007AF70(v191, (uint64_t)qword_10088C400);
      v157 = v190;
      v158 = v189;
      (*(void (**)(char *, uint64_t, uint64_t))(v190 + 16))(v189, v156, v155);
      v159 = swift_getKeyPath(&unk_100664C20);
      ItemLayoutContext.subscript.getter(&v206);
      swift_release(v159);
      v160 = v206;
      v205 = v206;
      Conditional.evaluate(with:)(&v205, v155);
      v161 = swift_unknownObjectRelease(v160);
      (*(void (**)(char *, uint64_t, __n128))(v157 + 8))(v158, v155, v161);
      v162 = v204[0];
      v163 = v183;
      v164 = v192;
      v165 = v184;
      (*(void (**)(char *, char *, uint64_t))(v183 + 16))(v192, v135, v184);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v164, 0, 1, v165);
      v166 = v182;
      (*(void (**)(char *, _QWORD, uint64_t))(v193 + 104))(v182, enum case for DirectionalTextAlignment.leading(_:), v181);
      v167 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
      v168 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v164, v162, 0, 1, 0, v166, 0, 0);
      sub_10038C948(v168);

      v169 = swift_beginAccess(v141, v204, 32, 0);
      v170 = *v141;
      if (*v141)
      {
        swift_endAccess(v204);
        sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
        v171 = v170;
        v172 = (void *)static UIColor.tertiaryText.getter(v171);
        objc_msgSend(v171, "setTextColor:", v172);

        (*(void (**)(char *, uint64_t))(v163 + 8))(v135, v165);
        v142 = *v141;
        if (!*v141)
          goto LABEL_78;
      }
      else
      {
        (*(void (**)(char *, uint64_t, __n128))(v163 + 8))(v135, v165, v169);
        swift_endAccess(v204);
        v142 = *v141;
        if (!*v141)
          goto LABEL_78;
      }
    }
    v143 = v142;
    ProductTopLockup.tertiaryTitle.getter(v143);
    if (v144)
    {
      v146 = v144;
      v147 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v145 = swift_bridgeObjectRelease(v146).n128_u64[0];
    }
    else
    {
      v147 = 0;
    }
    objc_msgSend(v143, "setText:", v147, v145);

    goto LABEL_78;
  }
  v54 = v52;
  if (!(v50 & 1 | ((v35 & 1) == 0)))
  {
LABEL_57:
    *(_QWORD *)&v53 = swift_release(v54).n128_u64[0];
    goto LABEL_58;
  }
  v55 = ProductTopLockup.wantsInlineUberPresentationStyle.getter(v52);
  v56 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber;
  v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber] = v55 & 1;
  sub_100113AFC(v3, (uint64_t)v3);
  sub_1003854A8();
  sub_1003856D8();
  v57 = objc_allocWithZone((Class)type metadata accessor for UberHeaderView());
  v58 = v200;
  swift_retain(v200);
  swift_retain(v54);
  v60 = sub_100138F04(v59, v58);
  sub_1003830E4(v60);
  v61 = *(void **)&v3[v201];
  if (v61)
  {
    v62 = swift_getKeyPath(&unk_100664BC0);
    v63 = v61;
    ItemLayoutContext.subscript.getter(v24);
    swift_release(v62);
    v65 = PageGrid.horizontalMargins.getter(v64);
    v67 = v66;
    v69 = v68;
    v71 = v70;
    (*(void (**)(_QWORD *, uint64_t))(v198 + 8))(v24, v21);
    v72 = *(void **)&v63[OBJC_IVAR____TtC8AppStore14UberHeaderView_titleView];
    objc_msgSend(v72, "layoutMargins");
    if (v65 != v76 || v67 != v73 || v69 != v74 || v71 != v75)
    {
      objc_msgSend(v72, "setLayoutMargins:", v65, v67, v69, v71);
      objc_msgSend(v63, "invalidateIntrinsicContentSize");
      v77 = *(void (**)(__n128))&v63[OBJC_IVAR____TtC8AppStore14UberHeaderView_sizeChangeObserver];
      if (v77)
      {
        v78 = *(_QWORD *)&v63[OBJC_IVAR____TtC8AppStore14UberHeaderView_sizeChangeObserver + 8];
        v79 = swift_retain(v78);
        v77(v79);
        sub_10003A350((uint64_t)v77, v78);
      }
    }

    v58 = v200;
  }
  v80 = v202;
  v81 = sub_1003D7310(v202, v58);
  if (v3[v56] == 1)
  {
    v82 = objc_msgSend(v3, "contentView");
    objc_msgSend(v82, "setOverrideUserInterfaceStyle:", 2);

    v83 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_shadowView];
    if (qword_100827A38 != -1)
      swift_once(&qword_100827A38, sub_10030E2C4);
    v84 = type metadata accessor for Shadow(0);
    v85 = sub_10007AF70(v84, (uint64_t)qword_10088C798);
    v86 = *(_QWORD *)(v84 - 8);
    v87 = v194;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v194, v85, v84);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v87, 0, 1, v84);
    dispatch thunk of ShadowView.shadow.setter(v87);
    v88 = objc_msgSend(v83, "layer");
    v89 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_iconView];
    v90 = objc_msgSend(v89, "layer");
    v91 = objc_msgSend(v90, "maskedCorners");

    objc_msgSend(v88, "setMaskedCorners:", v91);
    objc_msgSend(v89, "_continuousCornerRadius");
    objc_msgSend(v83, "_setContinuousCornerRadius:");
    objc_msgSend(v83, "setAutoresizingMask:", 18);
    v92 = *(void **)&v3[v201];
    if (v92)
    {
      v93 = v92;
      v94 = objc_msgSend(v3, "contentView");
      v95 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_blurView];
      objc_msgSend(v94, "insertSubview:aboveSubview:", v95, v93);

    }
    else
    {
      v94 = objc_msgSend(v3, "contentView");
      v95 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_blurView];
      objc_msgSend(v94, "insertSubview:atIndex:", v95, 0);
    }

    v96 = objc_msgSend(v3, "contentView");
    objc_msgSend(v96, "insertSubview:aboveSubview:", v83, v95);

    v97 = objc_msgSend(v3, "contentView");
    objc_msgSend(v97, "insertSubview:aboveSubview:", *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_keylineView], v95);

    v98 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_disclosureArrow;
    if (!*(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_disclosureArrow])
    {
      v99 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ChevronView()), "init");
      objc_msgSend(v99, "setOverrideUserInterfaceStyle:", 2);
      v100 = *(void **)&v3[v98];
      v101 = v99;
      if (v100)
      {
        objc_msgSend(v100, "removeFromSuperview");
        v100 = *(void **)&v3[v98];
      }
      *(_QWORD *)&v3[v98] = v99;
      v102 = v99;

      if (*(_QWORD *)&v3[v98])
        objc_msgSend(v3, "addSubview:");

    }
    v103 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView];
    v105 = v195;
    v104 = v196;
    v106 = v197;
    (*(void (**)(char *, _QWORD, uint64_t))(v196 + 104))(v195, enum case for Wordmark.arcade(_:), v197);
    v107 = swift_getKeyPath(&unk_100664BF0);
    ItemLayoutContext.subscript.getter(v207);
    swift_release(v107);
    v108 = (void *)v207[0];
    WordmarkView.show(wordmark:with:)(v105, v207[0]);

    (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v106);
    objc_msgSend(v103, "setHidden:", 0);
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_developerLabel], "setHidden:", 1);
    v109 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_taglineLabel];
    v110 = objc_msgSend(v109, "text");
    v111 = v110;
    if (v110)

    objc_msgSend(v109, "setHidden:", v111 == 0);
    sub_10038C948(0);
    v112 = objc_msgSend(v3, "contentView");
    v113 = objc_msgSend(v112, "overrideUserInterfaceStyle");

    v114 = &kCAFilterPlusD;
    if (v113 != (id)1)
      v114 = &kCAFilterPlusL;
    static String._unconditionallyBridgeFromObjectiveC(_:)(*v114);
    v116 = v115;
    v117 = String._bridgeToObjectiveC()();
    v118 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_shareButton], "imageView", swift_bridgeObjectRelease(v116).n128_f64[0]);
    if (v118)
    {
      v119 = v118;
      v120 = objc_msgSend(v118, "layer");

      objc_msgSend(v120, "setCompositingFilter:", v117);
    }
    v121 = objc_msgSend(v109, "layer");
    objc_msgSend(v121, "setCompositingFilter:", v117);

    v122 = objc_msgSend(v103, "layer");
    objc_msgSend(v122, "setCompositingFilter:", v117);

    v123 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferTitleLabel];
    if (v123)
      objc_msgSend(v123, "setHidden:", 1);
    v124 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferSubtitleLabel];
    if (v124)
    {
      v125 = objc_msgSend(v124, "layer");
      objc_msgSend(v125, "setCompositingFilter:", v117);

    }
    v126 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_downloadProgressLabel];
    v58 = v200;
    if (v126)
    {
      v127 = objc_msgSend(v126, "layer");
      objc_msgSend(v127, "setCompositingFilter:", v117);

    }
    v80 = v202;
  }
  v128 = type metadata accessor for ArtworkLoader(0);
  v129 = *(_QWORD *)(v58 + qword_10088FD90);
  if (v129)
  {
    v130 = swift_retain(*(_QWORD *)(v58 + qword_10088FD90));
    v130.n128_f64[0] = v81;
    sub_100113314(v80, v129, v130);
    swift_release(v54);
    v54 = v129;
    v51 = v203;
    goto LABEL_57;
  }
  dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v128, v128);
  __break(1u);
}

uint64_t sub_1001127D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t ObjectType;
  __n128 v20;
  uint64_t v21;
  char v22;
  int v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = v5;
  v32 = a3;
  v33 = a4;
  v8 = type metadata accessor for LegacyAppState(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10007B804(&qword_10082E258);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - v16;
  v18 = type metadata accessor for ObjectGraph(0);
  v31 = swift_dynamicCastClassUnconditional(a5, v18, 0, 0, 0);
  ObjectType = swift_getObjectType();
  v34 = a5;
  swift_retain(a5);
  dispatch thunk of AppStateMachine.currentState.getter(ObjectType, v32);
  ProductTopLockup.primaryBanner(for:)(v11, v20);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v22 = ProductTopLockup.wantsInlineUberPresentationStyle.getter(v21);
  sub_100112A0C((uint64_t)v17, (uint64_t)v14);
  v23 = v22 & 1;
  v24 = v33;
  *(double *)&v6[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerViewHeight] = sub_1003DD064((uint64_t)v14, v23, v33);
  v25 = sub_100112E68((uint64_t)v14, v23, v24, v31);
  v26 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView;
  v27 = *(void **)&v6[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView];
  if (v27)
  {
    objc_msgSend(v27, "removeFromSuperview");
    v28 = *(void **)&v6[v26];
  }
  else
  {
    v28 = 0;
  }
  *(_QWORD *)&v6[v26] = v25;
  v29 = v25;

  if (*(_QWORD *)&v6[v26])
    objc_msgSend(v6, "addSubview:");

  objc_msgSend(v6, "setNeedsLayout");
  swift_release(v34);
  sub_1000057AC((uint64_t)v14, &qword_10082E258);
  return sub_1000057AC((uint64_t)v17, &qword_10082E258);
}

uint64_t sub_100112A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v35;

  v4 = sub_10007B804(&qword_10082E258);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - v8;
  v10 = sub_10007B804((uint64_t *)&unk_10082E260);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005B48(a1, (uint64_t)v9, &qword_10082E258);
  v13 = type metadata accessor for ProductTopLockup.PrimaryBanner(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v9, 1, v13) == 1)
  {
    sub_1000057AC((uint64_t)v9, &qword_10082E258);
  }
  else
  {
    ProductTopLockup.PrimaryBanner.hideCriteria.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
    v16 = type metadata accessor for HideCriteria(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
    {
      sub_1000057AC((uint64_t)v12, (uint64_t *)&unk_10082E260);
    }
    else
    {
      v18 = HideCriteria.isHidden.getter();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
      if ((v18 & 1) != 0)
      {
        if (qword_100826EE0 != -1)
          swift_once(&qword_100826EE0, sub_100160FA8);
        v20 = type metadata accessor for OSLogger(0, v19);
        sub_10007AF70(v20, (uint64_t)qword_10088AB08);
        v21 = sub_10007B804((uint64_t *)&unk_10082D0C0);
        v22 = type metadata accessor for LogMessage(0);
        v23 = swift_allocObject(v21, ((*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80) | 7);
        *(_OWORD *)(v23 + 16) = xmmword_100661A30;
        v24 = "ProductTopLockup hiding primary banner in applyPrimaryBanner.";
        goto LABEL_13;
      }
    }
  }
  sub_100005B48(a1, (uint64_t)v6, &qword_10082E258);
  if (v15(v6, 1, v13) == 1)
  {
    sub_1000057AC((uint64_t)v6, &qword_10082E258);
    if (qword_100826EE0 != -1)
      swift_once(&qword_100826EE0, sub_100160FA8);
    v20 = type metadata accessor for OSLogger(0, v25);
    sub_10007AF70(v20, (uint64_t)qword_10088AB08);
    v26 = sub_10007B804((uint64_t *)&unk_10082D0C0);
    v27 = type metadata accessor for LogMessage(0);
    v23 = swift_allocObject(v26, ((*(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80) | 7);
    *(_OWORD *)(v23 + 16) = xmmword_100661A30;
    v24 = "ProductTopLockup has no primary banner in applyPrimaryBanner.";
LABEL_13:
    LogMessage.init(stringLiteral:)(0xD00000000000003DLL, (unint64_t)(v24 - 32) | 0x8000000000000000);
    Logger.info(_:)(v23, v20, &protocol witness table for OSLogger);
    v28 = 1;
    goto LABEL_17;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v6, v13);
  if (qword_100826EE0 != -1)
    swift_once(&qword_100826EE0, sub_100160FA8);
  v30 = type metadata accessor for OSLogger(0, v29);
  sub_10007AF70(v30, (uint64_t)qword_10088AB08);
  v31 = sub_10007B804((uint64_t *)&unk_10082D0C0);
  v32 = type metadata accessor for LogMessage(0);
  v23 = swift_allocObject(v31, ((*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80) | 7);
  *(_OWORD *)(v23 + 16) = xmmword_100661A30;
  LogMessage.init(stringLiteral:)(0xD00000000000003ELL, 0x80000001006AC6B0);
  Logger.info(_:)(v23, v30, &protocol witness table for OSLogger);
  v28 = 0;
LABEL_17:
  v33 = swift_bridgeObjectRelease(v23);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56))(a2, v28, 1, v13, v33);
}

char *sub_100112E68(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  id v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v49;
  uint64_t v50;

  v49 = a3;
  v50 = a4;
  v7 = type metadata accessor for FloatingPointRoundingRule(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10007B804(&qword_10082E258);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - v15;
  sub_100005B48(a1, (uint64_t)&v49 - v15, &qword_10082E258);
  v17 = type metadata accessor for ProductTopLockup.PrimaryBanner(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    sub_100005B48((uint64_t)v16, (uint64_t)v13, &qword_10082E258);
    v20 = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 88))(v13, v17);
    if (v20 == enum case for ProductTopLockup.PrimaryBanner.linkableText(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v18 + 96))(v13, v17);
      v21 = *v13;
      v22 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView);
      if (v22
        && (v23 = type metadata accessor for LinkableHeaderCollectionViewCell(),
            (v24 = swift_dynamicCastClass(v22, v23)) != 0))
      {
        v25 = (id)v24;
        v26 = v22;
      }
      else
      {
        v25 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LinkableHeaderCollectionViewCell()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      }
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v19 = (char *)v25;
      v33 = (void *)static UIColor.defaultBackground.getter();
      objc_msgSend(v19, "setBackgroundColor:", v33);

      v34 = sub_1000D2308();
      v35 = objc_retain(*(id *)(*(_QWORD *)&v19[OBJC_IVAR____TtC8AppStore32LinkableHeaderCollectionViewCell_headerView]
                              + OBJC_IVAR____TtC8AppStore18LinkableHeaderView_label));
      v36 = LinkableText.linkedSubstrings.getter();
      sub_100113CF0(v36, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100113FA4);
      v38 = v37;
      swift_bridgeObjectRelease(v36);
      v40 = LinkableText.styledText.getter(v39);
      sub_1002B1A24(v40, 0, v38);

      swift_bridgeObjectRelease(v38);
      objc_msgSend(v19, "setNeedsLayout", swift_release(v40).n128_f64[0]);
      swift_unknownObjectRelease(v34);
      v41 = v21;
LABEL_19:
      swift_release(v41);
      goto LABEL_20;
    }
    if (v20 == enum case for ProductTopLockup.PrimaryBanner.banner(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v18 + 96))(v13, v17);
      v27 = *v13;
      v28 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView);
      if (v28
        && (v29 = type metadata accessor for BannerCollectionViewCell(0), (v30 = swift_dynamicCastClass(v28, v29)) != 0))
      {
        v31 = (id)v30;
        v32 = v28;
      }
      else
      {
        v31 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BannerCollectionViewCell(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      }
      v42 = a2;
      v43 = sub_1000D2308();
      v44 = 0.0;
      if ((v42 & 1) == 0)
      {
        v49 = v27;
        if (qword_100827718 != -1)
          swift_once(&qword_100827718, sub_1002C374C);
        v45 = qword_10088C0E0;
        v46 = qword_10088C0E8;
        sub_100060B40(qword_10088C0C8, qword_10088C0E0);
        j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v45);
        v44 = AnyDimension.value(in:rounded:)(v43, v10, v45, v46);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        v27 = v49;
      }
      sub_100008FE4(0, (unint64_t *)&qword_10082A430, UIColor_ptr);
      v19 = (char *)v31;
      v47 = (void *)static UIColor.defaultBackground.getter();
      objc_msgSend(v19, "setBackgroundColor:", v47);

      sub_10060BED0(v44, 0.0, v44, v27, v42 & 1, v43, v50);
      swift_unknownObjectRelease(v43);
      v41 = v27;
      goto LABEL_19;
    }
    (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v13, v17);
    v19 = 0;
  }
LABEL_20:
  sub_1000057AC((uint64_t)v16, &qword_10082E258);
  return v19;
}

void sub_100113314(uint64_t a1, uint64_t a2, __n128 a3)
{
  char *v3;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  int v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a3.n128_f64[0];
  v7 = type metadata accessor for Uber.AssetType(0, a3);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_uberView];
  if (v11)
  {
    v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC8AppStore14UberHeaderView_uber);
    v13 = swift_retain(v12);
    Uber.assetType.getter(v13);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
    if (v14 == enum case for Uber.AssetType.artwork(_:))
    {
      v15 = objc_msgSend(v3, "traitCollection");
      v16 = UITraitCollection.isSizeClassCompact.getter(v15);

      if ((v16 & 1) != 0)
      {
        v17 = Uber.compactArtwork.getter();
        if (!v17)
          goto LABEL_13;
        goto LABEL_10;
      }
      v17 = Uber.artwork.getter();
      if (v17)
      {
LABEL_10:
        swift_retain(v17);
        sub_100113500(v20, v6, a1, a2);
        swift_release(v12);
        swift_release(v17);
        v12 = v17;
      }
    }
    else
    {
      if (v14 != enum case for Uber.AssetType.video(_:))
      {
        if (v14 != enum case for Uber.AssetType.icon(_:))
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        goto LABEL_13;
      }
      v18 = Uber.video.getter();
      if (v18)
      {
        v19 = v18;
        v17 = Video.preview.getter(v18);
        swift_release(v19);
        goto LABEL_10;
      }
    }
LABEL_13:
    swift_release(v12);
  }
}

uint64_t sub_1001134D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ShelfLayoutContext.traitEnvironment.getter();
  *a1 = result;
  return result;
}

void sub_100113500(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  id v25;
  char *v26;
  objc_class *v27;
  void *v28;
  id v29;
  uint64_t KeyPath;
  __n128 v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  void (*v45)(char *, uint64_t, __n128);
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __n128 v50;
  void (*v51)(char *, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  double v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  __n128 v60;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  objc_super v74;

  v8 = type metadata accessor for Uber.Style(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v61 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)v61 - v16;
  v18 = type metadata accessor for PageGrid(0);
  __chkstk_darwin(v18);
  v22 = (_QWORD *)((char *)v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = v4;
  v23 = *(char **)&v4[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_uberView];
  if (v23)
  {
    v65 = a1;
    v67 = v9;
    v62 = v20;
    v63 = v19;
    v61[1] = a4;
    v66 = *(_QWORD *)&v23[OBJC_IVAR____TtC8AppStore14UberHeaderView_uber];
    swift_retain(v66);
    v24 = v23;
    v25 = objc_msgSend(v24, "backgroundColor");
    v26 = *(char **)&v24[OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView];
    v27 = (objc_class *)type metadata accessor for MediaView();
    v74.receiver = v26;
    v74.super_class = v27;
    objc_msgSendSuper2(&v74, "setBackgroundColor:", v25);
    objc_msgSend(*(id *)(*(_QWORD *)&v26[OBJC_IVAR____TtC8AppStore9MediaView_contentContainer]+ OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents), "setBackgroundColor:", v25);
    v28 = *(void **)&v26[OBJC_IVAR____TtC8AppStore9MediaView_reflectionView];
    if (v28)
    {
      v29 = v28;
      objc_msgSend(v29, "setBackgroundColor:", v25);

    }
    KeyPath = swift_getKeyPath(&unk_100664BC0);
    ItemLayoutContext.subscript.getter(v22);
    v31 = swift_release(KeyPath);
    v32 = PageGrid.containerHeight.getter(v31);
    PageGrid.safeAreaInsets.getter();
    v34 = v32 - v33;
    v35 = swift_getKeyPath(&unk_100664BF0);
    ItemLayoutContext.subscript.getter(&v73);
    swift_release(v35);
    v36 = v73;
    v38 = UITraitCollection.isSizeClassCompact.getter(v37);

    v64 = v24;
    if ((v38 & 1) == 0)
    {
      v47 = v62;
      v48 = v63;
      v46 = v68;
LABEL_12:
      v52 = v66;
      v53 = Uber.style.getter(v39);
      v54 = PageGrid.componentMeasuringSize(spanning:)(v53);
      v55 = objc_msgSend(v46, "traitCollection");
      v56 = sub_1000B99A4(v34, v54, v65, (uint64_t)v11, v55);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v8);
      v57 = type metadata accessor for UberHeaderView();
      v58 = sub_100005C94(&qword_10082E288, (uint64_t (*)(uint64_t))type metadata accessor for UberHeaderView, (uint64_t)&unk_1006627BC);
      v59 = v64;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)(v56, 2, 1, v64, v57, v58);

      swift_release(v56);
      v60 = swift_release(v52);
      (*(void (**)(_QWORD *, uint64_t, __n128))(v47 + 8))(v22, v48, v60);
      return;
    }
    Uber.style.getter(v39);
    v40 = v67;
    (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v14, enum case for Uber.Style.inline(_:), v8);
    v41 = sub_100005C94(&qword_10082E290, (uint64_t (*)(uint64_t))&type metadata accessor for Uber.Style, (uint64_t)&protocol conformance descriptor for Uber.Style);
    dispatch thunk of RawRepresentable.rawValue.getter(&v71, v8, v41);
    dispatch thunk of RawRepresentable.rawValue.getter(&v69, v8, v41);
    v42 = v72;
    v43 = v70;
    if (v71 == v69 && v72 == v70)
    {
      v44 = swift_bridgeObjectRelease_n(v72, 2);
      v45 = *(void (**)(char *, uint64_t, __n128))(v40 + 8);
      v45(v14, v8, v44);
      ((void (*)(char *, uint64_t))v45)(v17, v8);
      v46 = v68;
    }
    else
    {
      v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v71, v72, v69, v70, 0);
      swift_bridgeObjectRelease(v42);
      v50 = swift_bridgeObjectRelease(v43);
      v51 = *(void (**)(char *, uint64_t, __n128))(v40 + 8);
      v51(v14, v8, v50);
      ((void (*)(char *, uint64_t))v51)(v17, v8);
      v46 = v68;
      if ((v49 & 1) == 0)
      {
LABEL_11:
        v47 = v62;
        v48 = v63;
        goto LABEL_12;
      }
    }
    v34 = v34 - a2;
    goto LABEL_11;
  }
}

uint64_t sub_100113954@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100005B48(v3, a1, &qword_10082D9A0);
}

uint64_t sub_1001139B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_itemLayoutContext;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100021E00(a1, v3, &qword_10082D9A0);
  return swift_endAccess(v5);
}

uint64_t (*sub_100113A14(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_itemLayoutContext, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100113A64(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v4 = result;
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferTitleText);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferTitleText + 8);
  if (!v6)
  {
    if (!a2)
      return result;
LABEL_10:
    swift_bridgeObjectRetain(a2);
    return (uint64_t)sub_100383010(v4, a2);
  }
  if (!a2)
    goto LABEL_10;
  result = *v5;
  if (*v5 != v4 || v6 != a2)
  {
    result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v6, v4, a2, 0);
    if ((result & 1) == 0)
      goto LABEL_10;
  }
  return result;
}

void sub_100113AFC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  id v9;
  void *v10;
  char v11;
  uint64_t v12;
  void *v13;
  char v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  char v19;
  _QWORD v20[2];

  v4 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber;
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber) == 1)
  {
    UILabel.alignment.setter(1);
    v5 = 1;
  }
  else
  {
    if (qword_100827708 != -1)
      swift_once(&qword_100827708, sub_1002C3640);
    v6 = sub_10007B804((uint64_t *)&unk_10082D600);
    sub_10007AF70(v6, (uint64_t)qword_10088C088);
    v20[0] = a1;
    Conditional.evaluate(with:)(v20, v6);
    v5 = v20[1];
  }
  UILabel.alignment.setter(v5);
  v7 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasExpandedOffer;
  v8 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasExpandedOffer);
  v9 = objc_msgSend(a1, "traitCollection");
  v10 = v9;
  if (v8 == 1 && (UITraitCollection.isSizeClassRegular.getter(v9) & 1) == 0)
  {

    v12 = 1;
  }
  else
  {
    v11 = UITraitCollection.prefersRightToLeftLayouts.getter();

    if ((v11 & 1) != 0)
      v12 = 2;
    else
      v12 = 0;
  }
  UILabel.alignment.setter(v12);
  v13 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_downloadProgressLabel);
  if (v13)
  {
    v14 = *(_BYTE *)(a2 + v7);
    v15 = v13;
    v16 = objc_msgSend(a1, "traitCollection");
    v17 = v16;
    if ((*(_BYTE *)(a2 + v4) & 1) != 0 || (v14 & 1) != 0 && (UITraitCollection.isSizeClassRegular.getter(v16) & 1) == 0)
    {

      v18 = 1;
    }
    else
    {
      v19 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if ((v19 & 1) != 0)
        v18 = 2;
      else
        v18 = 0;
    }
    objc_msgSend(v15, "setTextAlignment:", v18);

  }
}

void sub_100113CF0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, __n128))
{
  int64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_1000FE680(0, v2, 0);
    v5 = sub_10042C68C(a1);
    v6 = 0;
    v7 = a1 + 64;
    v29 = v2;
    v30 = v4;
    v31 = a1 + 64;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
    {
      v10 = (unint64_t)v5 >> 6;
      if ((*(_QWORD *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(a1 + 36) != v4)
        goto LABEL_24;
      v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
      v12 = *v11;
      v13 = v11[1];
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
      swift_bridgeObjectRetain(v13);
      v15 = swift_retain(v14);
      v16 = a2(v12, v13, v14, v15);
      v34 = v17;
      v35 = v16;
      v33 = v18;
      v20 = v19;
      swift_release(v14);
      swift_bridgeObjectRelease(v13);
      v22 = _swiftEmptyArrayStorage[2];
      v21 = _swiftEmptyArrayStorage[3];
      if (v22 >= v21 >> 1)
        sub_1000FE680(v21 > 1, v22 + 1, 1);
      _swiftEmptyArrayStorage[2] = v22 + 1;
      v23 = &_swiftEmptyArrayStorage[4 * v22];
      v23[4] = v35;
      v23[5] = v34;
      v23[6] = v33;
      v23[7] = v20;
      v8 = 1 << *(_BYTE *)(a1 + 32);
      if (v5 >= v8)
        goto LABEL_25;
      v7 = a1 + 64;
      v24 = *(_QWORD *)(v31 + 8 * v10);
      if ((v24 & (1 << v5)) == 0)
        goto LABEL_26;
      v4 = v30;
      if (*(_DWORD *)(a1 + 36) != v30)
        goto LABEL_27;
      v25 = v24 & (-2 << (v5 & 0x3F));
      if (v25)
      {
        v8 = __clz(__rbit64(v25)) | v5 & 0xFFFFFFFFFFFFFFC0;
        v9 = v29;
      }
      else
      {
        v26 = v10 + 1;
        v27 = (unint64_t)(v8 + 63) >> 6;
        v9 = v29;
        if (v10 + 1 < v27)
        {
          v28 = *(_QWORD *)(v31 + 8 * v26);
          if (v28)
          {
LABEL_20:
            v8 = __clz(__rbit64(v28)) + (v26 << 6);
          }
          else
          {
            while (v27 - 2 != v10)
            {
              v28 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v28)
              {
                v26 = v10 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      ++v6;
      v5 = v8;
      if (v6 == v9)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_100113F48()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100113F6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100113F98(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1001114A0(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_100113FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10061DC00(a1, a2, a3, v3);
}

uint64_t sub_100113FAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ShelfLayoutContext.traitEnvironment.getter();
  *a1 = result;
  return result;
}

uint64_t _s5StateVwxx(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t _s5StateVwCP_1(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t _s5StateVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

__n128 initializeWithTake for TodayCardOverlayReusePool.Scrap(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s5StateVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t _s5StateVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s5StateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

unint64_t sub_10011416C()
{
  unint64_t result;

  result = qword_10082E298;
  if (!qword_10082E298)
  {
    result = swift_getWitnessTable(&unk_100664C7C, &_s5StateVN);
    atomic_store(result, (unint64_t *)&qword_10082E298);
  }
  return result;
}

unint64_t sub_1001141B4()
{
  unint64_t result;

  result = qword_10082E2A0;
  if (!qword_10082E2A0)
  {
    result = swift_getWitnessTable(&unk_100664C54, &_s5StateVN);
    atomic_store(result, (unint64_t *)&qword_10082E2A0);
  }
  return result;
}

uint64_t sub_1001141F8(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100021C18(a1, a2, 0x6157747265766461, 0xEF646563616C5073, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.placed(_:), a3);
}

uint64_t sub_100114224(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100021C18(a1, a2, 0xD000000000000012, 0x80000001006AC840, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.onScreen(_:), a3);
}

uint64_t sub_100114248(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100021C18(a1, a2, 0xD000000000000011, 0x80000001006AC820, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.offScreen(_:), a3);
}

uint64_t sub_10011426C(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100021C18(a1, a2, 0xD000000000000010, 0x80000001006AC7A0, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.completed(_:), a3);
}

void sub_100114290(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  __n128 v25;
  char *v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unsigned int *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  Swift::String v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  void *v50;

  v42 = a3;
  v5 = type metadata accessor for AdvertDiscardReason(0);
  v43 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v41 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AppStoreMetricDiscardReason(0, v6);
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  v9 = __chkstk_darwin(v8);
  v45 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OSLogger(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100826EC8 != -1)
    swift_once(&qword_100826EC8, sub_10007E878);
  v15 = sub_10007AF70(v11, (uint64_t)qword_10088AAC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_10007B804((uint64_t *)&unk_10082D0C0);
  v40 = v14;
  v17 = v16;
  v18 = *(_QWORD *)(type metadata accessor for LogMessage(0) - 8);
  v19 = swift_allocObject(v17, ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ 6 * *(_QWORD *)(v18 + 72), *(unsigned __int8 *)(v18 + 80) | 7);
  *(_OWORD *)(v19 + 16) = xmmword_100662620;
  static LogMessage.identity(_:)((__n128)xmmword_100662620);
  LogMessage.init(stringLiteral:)(0xD000000000000012, 0x80000001006AC780);
  LogMessage.init(stringLiteral:)(0x65636E6174736E69, 0xEB000000003A6449);
  v50 = &type metadata for String;
  v48 = a1;
  v49[0] = a1;
  v49[1] = a2;
  v44 = a2;
  swift_bridgeObjectRetain(a2);
  static LogMessage.safe(_:)(v49);
  sub_1000057AC((uint64_t)v49, (uint64_t *)&unk_10082B490);
  LogMessage.init(stringLiteral:)(0x5264726163736964, 0xEE003A6E6F736165);
  v50 = (void *)v5;
  v20 = (char *)sub_100024638(v49);
  v21 = v42;
  v22 = v43;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v23(v20, v42, v5);
  static LogMessage.safe(_:)(v49);
  sub_1000057AC((uint64_t)v49, (uint64_t *)&unk_10082B490);
  v24 = v40;
  Logger.info(_:)(v19, v11, &protocol witness table for OSLogger);
  v25 = swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v24, v11, v25);
  v26 = v41;
  v23(v41, v21, v5);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v26, v5);
  if (v27 != enum case for AdvertDiscardReason.searchLandingPageLoadFailed(_:))
  {
    v33 = v22;
    v34 = v26;
    v31 = v44;
    v29 = v45;
    v28 = v46;
    v30 = v47;
    if (v27 == enum case for AdvertDiscardReason.advertDataMalformed(_:))
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v45, enum case for AppStoreMetricDiscardReason.metadataLoadFailure(_:), v47);
      v32 = v48;
      goto LABEL_13;
    }
    v32 = v48;
    if (v27 == enum case for AdvertDiscardReason.insufficientAssets(_:))
    {
      v35 = (unsigned int *)&enum case for AppStoreMetricDiscardReason.insufficientAssetsFailure(_:);
    }
    else
    {
      if (v27 != enum case for AdvertDiscardReason.cppAssetsMissing(_:))
      {
        v37 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 104);
        if (v27 != enum case for AdvertDiscardReason.localizationNotAvailable(_:))
        {
          v37(v45, enum case for AppStoreMetricDiscardReason.metadataLoadFailure(_:), v47);
          (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v5);
          goto LABEL_13;
        }
        v36 = enum case for AppStoreMetricDiscardReason.localizationNotAvailable(_:);
        goto LABEL_12;
      }
      v35 = (unsigned int *)&enum case for AppStoreMetricDiscardReason.assetsMissingFailure(_:);
    }
    v36 = *v35;
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 104);
LABEL_12:
    v37(v45, v36, v47);
    goto LABEL_13;
  }
  v29 = v45;
  v28 = v46;
  v30 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v45, enum case for AppStoreMetricDiscardReason.slpLoadFailure(_:), v47);
  v31 = v44;
  v32 = v48;
LABEL_13:
  AppStoreMetricManager.discarded(_:reasonCode:)(v32, v31, v29);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  v38._countAndFlagsBits = v32;
  v38._object = v31;
  AppStoreMetricManager.completed(_:)(v38);
}

uint64_t sub_1001146F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_10011471C(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100021C18(a1, a2, 0xD000000000000011, 0x80000001006AC820, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.offScreen(_:), a3);
}

uint64_t sub_10011475C(uint64_t a1, uint64_t a2, __n128 a3)
{
  return sub_100021C18(a1, a2, 0xD000000000000010, 0x80000001006AC7A0, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.completed(_:), a3);
}

void sub_10011479C(uint64_t a1, void *a2, uint64_t a3)
{
  sub_100114290(a1, a2, a3);
}

uint64_t sub_1001147BC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AdvertVisibilityCalculator.VisibilityThreshold(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001147FC(uint64_t a1)
{
  return sub_10011482C(16.0, a1, &qword_10088A5B8[3], &qword_10088A5B8[4], qword_10088A5B8);
}

uint64_t sub_100114814(uint64_t a1)
{
  return sub_10011482C(28.0, a1, &qword_10088A5E0[3], &qword_10088A5E0[4], qword_10088A5E0);
}

uint64_t sub_10011482C(double a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v18[5];

  v9 = type metadata accessor for FontSource(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100828270 != -1)
    swift_once(&qword_100828270, sub_1003A76F4);
  v13 = type metadata accessor for FontUseCase(0);
  v14 = sub_10007AF70(v13, (uint64_t)qword_10088E180);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v14, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FontSource.useCase(_:), v9);
  *a3 = type metadata accessor for StaticDimension(0);
  *a4 = &protocol witness table for StaticDimension;
  sub_100024638(a5);
  v18[3] = v9;
  v18[4] = &protocol witness table for FontSource;
  v15 = sub_100024638(v18);
  (*(void (**)(_QWORD *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  StaticDimension.init(_:scaledLike:)(v18, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_100114990(uint64_t a1)
{
  return AspectRatio.init(_:_:)(a1);
}

uint64_t sub_10011499C@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  _QWORD v33[5];
  _BYTE v34[40];
  _QWORD v35[5];

  v32 = a4;
  v8 = sub_10007B804(&qword_10082D170);
  __chkstk_darwin(v8);
  v10 = (char *)&v33[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v33[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v33[-1] - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v33[-1] - v19;
  sub_100115C68(a3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    (*(void (**)(void))(v4 + 208))();
    sub_1000057AC((uint64_t)v10, &qword_10082D170);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v10, v11);
  }
  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v21(v17, v20, v11);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v17, v11);
  if (v22 == enum case for MixedMediaLockupLayout.LockupPosition.top(_:))
  {
    if (qword_100826CF8 != -1)
      swift_once(&qword_100826CF8, sub_100114814);
    sub_100022500((uint64_t)qword_10088A5E0, (uint64_t)v35);
    if ((a2 & 1) != 0)
      v23 = 2;
    else
      v23 = 0;
  }
  else if (v22 == enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:))
  {
    if (qword_100826CF0 != -1)
      swift_once(&qword_100826CF0, sub_1001147FC);
    sub_100022500((uint64_t)qword_10088A5B8, (uint64_t)v35);
    v23 = a2 & 1;
  }
  else
  {
    if (qword_100826CF8 != -1)
      swift_once(&qword_100826CF8, sub_100114814);
    sub_100022500((uint64_t)qword_10088A5E0, (uint64_t)v35);
    if ((a2 & 1) != 0)
      v23 = 2;
    else
      v23 = 0;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  v21(v14, v20, v11);
  sub_100022500((uint64_t)v35, (uint64_t)v34);
  sub_100008FE4(0, (unint64_t *)&qword_10082D810, UIFont_ptr);
  if (qword_100828270 != -1)
    swift_once(&qword_100828270, sub_1003A76F4);
  v24 = type metadata accessor for FontUseCase(0);
  v25 = sub_10007AF70(v24, (uint64_t)qword_10088E180);
  v26 = objc_msgSend(a1, "traitCollection");
  v27 = static UIFont.preferredFont(forUseWith:compatibleWith:)(v25, v26);

  if (qword_1008287A0 != -1)
    swift_once(&qword_1008287A0, sub_1004324E8);
  v28 = type metadata accessor for StaticDimension(0);
  v29 = sub_10007AF70(v28, (uint64_t)qword_10088EFC8);
  v33[3] = v28;
  v33[4] = &protocol witness table for StaticDimension;
  v30 = sub_100024638(v33);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v29, v28);
  MixedMediaLockupLayout.Metrics.init(lockupPosition:taglineNumberOfLines:taglineSpace:taglineFont:alwaysIncludeTaglineSpace:verticalSpacing:layoutMargins:)(v14, v23, v34, v27, a2 & 1, v33, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v35);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
}

char *sub_100114D74(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  objc_class *v30;
  char *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  objc_super v38;

  v9 = type metadata accessor for DirectionalTextAlignment(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v4[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_itemLayoutContext];
  v18 = type metadata accessor for ItemLayoutContext(0, v17);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
  v19 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView;
  v20 = objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0));
  v21 = v4;
  *(_QWORD *)&v4[v19] = objc_msgSend(v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v22 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView;
  *(_QWORD *)&v21[v22] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  v23 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel;
  if (qword_100828270 != -1)
    swift_once(&qword_100828270, sub_1003A76F4);
  v24 = type metadata accessor for FontUseCase(0);
  v25 = sub_10007AF70(v24, (uint64_t)qword_10088E180);
  v26 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v15, v25, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v15, 0, 1, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  v27 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v21[v23] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v15, 2, 0, 1, 0, v12, 0, 0);
  *(_QWORD *)&v21[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_pageTraits] = 0;
  v28 = &v21[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  v29 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v21[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace] = 1;
  *(_QWORD *)&v21[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_searchAdTransparencyButton] = 0;

  v30 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell(0);
  v38.receiver = v21;
  v38.super_class = v30;
  v31 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  v32 = objc_msgSend(v31, "contentView");
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView]);

  v33 = objc_msgSend(v31, "contentView");
  objc_msgSend(v33, "addSubview:", *(_QWORD *)&v31[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView]);

  v34 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel;
  v35 = *(id *)&v31[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter(1);

  v36 = objc_msgSend(v31, "contentView");
  objc_msgSend(v36, "addSubview:", *(_QWORD *)&v31[v34]);

  objc_msgSend(v31, "setLayoutMargins:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  return v31;
}

uint64_t sub_100115148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:);
  v3 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_10011518C(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;

  if (a1)
  {
    v3 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView);
    v4 = objc_msgSend(a1, "superview");
    if (v4)
    {
      sub_100008FE4(0, (unint64_t *)&qword_10082B220, UIView_ptr);
      v5 = v3;
      v6 = v4;
      LOBYTE(v4) = static NSObject.== infix(_:_:)(v6, v5);

    }
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  return v4 & 1;
}

void (*sub_100115248(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v1 + v2) + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoView);
  return sub_100115298;
}

void sub_100115298(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v2 = *(void **)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  v7 = *(id *)a1;
  if ((a2 & 1) != 0)
  {
    v3 = v7;
    v4 = v2;
    sub_1001C0200((uint64_t)v7);

    v5 = v4;
  }
  else
  {
    v6 = v2;
    sub_1001C0200((uint64_t)v7);

    v5 = v7;
  }

}

uint64_t sub_100115310()
{
  char *v0;
  char *v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  char v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  __n128 v25;
  char *v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  _QWORD v37[5];
  _QWORD v38[5];
  char v39[24];
  objc_super v40;

  v1 = v0;
  v28[1] = swift_getObjectType();
  v33 = type metadata accessor for LayoutRect(0);
  v32 = *(_QWORD *)(v33 - 8);
  v2 = __chkstk_darwin(v33);
  v31 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for MixedMediaLockupLayout(0, v2);
  v29 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10007B804(&qword_10082D170);
  __chkstk_darwin(v6);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MixedMediaLockupLayout.Metrics(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v28 - v14;
  v16 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell(0);
  v40.receiver = v0;
  v40.super_class = v16;
  objc_msgSendSuper2(&v40, "layoutSubviews");
  v17 = v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace];
  v18 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  swift_beginAccess(v18, v39, 0, 0);
  sub_100115C68(v18, (uint64_t)v8);
  sub_10011499C(v1, v17, (uint64_t)v8, (uint64_t)v15);
  sub_1000057AC((uint64_t)v8, &qword_10082D170);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  v19 = *(void **)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView];
  v38[3] = type metadata accessor for SmallLockupView(0);
  v38[4] = &protocol witness table for UIView;
  v38[0] = v19;
  v20 = *(void **)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView];
  v37[3] = type metadata accessor for LockupMediaView(0);
  v37[4] = &protocol witness table for UIView;
  v37[0] = v20;
  v21 = *(void **)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel];
  v22 = v19;
  v23 = v20;
  if (objc_msgSend(v21, "hasContent"))
  {
    *(_QWORD *)&v36 = type metadata accessor for DynamicTypeLabel(0);
    *((_QWORD *)&v36 + 1) = &protocol witness table for UILabel;
    v24 = v21;
  }
  else
  {
    v21 = 0;
    v35 = 0u;
    v36 = 0u;
  }
  v34 = v21;
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)(v12, v38, v37, &v34);
  v25 = LayoutMarginsAware<>.layoutFrame.getter(v16);
  v26 = v31;
  MixedMediaLockupLayout.placeChildren(relativeTo:in:)(v1, v25);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v33);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

void sub_10011565C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>, __n128 a5@<Q0>)
{
  sub_1001BD134(a1, a2, a3, a4, a5);
}

uint64_t sub_100115664(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKDeviceTypePad);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    return (*(uint64_t (**)(void))(v1 + 144))();
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
    return (*(uint64_t (**)(void))(v1 + 144))();
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(ASKDeviceTypePhone);
  v13 = v12;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v11 == v14 && v13 == v15)
  {
    swift_bridgeObjectRelease_n(v13, 2);
  }
  else
  {
    v17 = v15;
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
    swift_bridgeObjectRelease(v13);
    v19 = swift_bridgeObjectRelease(v17);
    if ((v18 & 1) == 0)
      return static AspectRatio.square.getter(v19);
  }
  return AspectRatio.init(_:_:)(v19);
}

uint64_t sub_1001157AC()
{
  uint64_t result;
  uint64_t v1;

  result = Lockup.editorialTagline.getter();
  if (!v1)
    return Lockup.developerTagline.getter(result);
  return result;
}

id sub_1001158A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MixedMediaLockupCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10011596C()
{
  return type metadata accessor for MixedMediaLockupCollectionViewCell(0);
}

uint64_t type metadata accessor for MixedMediaLockupCollectionViewCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10082E398;
  if (!qword_10082E398)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MixedMediaLockupCollectionViewCell);
  return result;
}

void sub_1001159B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  sub_1000059F0(319, (unint64_t *)&qword_10082D7D0, (uint64_t (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[4] = "\b";
    sub_1000059F0(319, &qword_10082E3B0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockupLayout.LockupPosition);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = &unk_100664E20;
      v6[7] = "\b";
      swift_updateClassMetadata2(a1, 256, 8, v6, a1 + 80);
    }
  }
}

uint64_t sub_100115A7C()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView)+ OBJC_IVAR____TtC8AppStore15LockupMediaView_videoView);
}

void sub_100115A9C(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView);
  sub_1001C0200((uint64_t)a1);

}

void (*sub_100115AE4(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100115248(v2);
  return sub_10007D3AC;
}

uint64_t sub_100115B28(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100664EB0, a1);
  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_100115B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100664EB0, a3);
  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

void (*sub_100115BA8(_QWORD *a1, uint64_t a2))(_QWORD *)
{
  _QWORD *v4;
  uint64_t WitnessTable;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  WitnessTable = swift_getWitnessTable(&unk_100664EB0, a2);
  v4[4] = VideoViewProviding.someVideoView.modify(v4, a2, WitnessTable);
  return sub_10007D3AC;
}

uint64_t sub_100115C10()
{
  return sub_100005C94(&qword_10082E3B8, type metadata accessor for MixedMediaLockupCollectionViewCell, (uint64_t)&unk_100664E40);
}

uint64_t sub_100115C3C()
{
  return sub_100005C94((unint64_t *)&unk_10082E3C0, type metadata accessor for MixedMediaLockupCollectionViewCell, (uint64_t)&unk_100664E70);
}

uint64_t sub_100115C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10007B804(&qword_10082D170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100115CB0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for DirectionalTextAlignment(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_itemLayoutContext];
  v11 = type metadata accessor for ItemLayoutContext(0, v10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  v12 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SmallLockupView(0)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView;
  *(_QWORD *)&v1[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LockupMediaView(0)), "init");
  v14 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel;
  if (qword_100828270 != -1)
    swift_once(&qword_100828270, sub_1003A76F4);
  v15 = type metadata accessor for FontUseCase(0);
  v16 = sub_10007AF70(v15, (uint64_t)qword_10088E180);
  v17 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v8, v16, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  v18 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel(0));
  *(_QWORD *)&v1[v14] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)(v8, 2, 0, 1, 0, v5, 0, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_pageTraits] = 0;
  v19 = &v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  v20 = type metadata accessor for MixedMediaLockupLayout.LockupPosition(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_searchAdTransparencyButton] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001006A63C0, "AppStore/MixedMediaLockupCollectionViewCell.swift", 49, 2, 95, 0);
  __break(1u);
}

void sub_100115F44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  id v28;
  id v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  __n128 v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  void *v50;
  double v51;
  id v52;
  id v53;
  id v54;
  __n128 v55;
  double top;
  double v57;
  double left;
  double v59;
  double bottom;
  double v61;
  double right;
  __n128 v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  double v73;
  id v74;
  id v75;
  id v76;
  __n128 v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  double v94;
  double v95;
  double v96;
  double v97;
  id v98;
  uint64_t v99;
  char *v100;
  void *v101;
  uint64_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  void *v106;
  id v107;
  uint64_t v108;
  id v109;
  id v110;
  Class isa;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  double v127;
  id v128;
  id v129;
  id v130;
  double v131;
  double v132;
  double v133;
  double v134;
  uint64_t v135;
  void *v136;
  void *v137;
  id v138;
  id v139;
  uint64_t v140;
  void *v141;
  char *v142;
  void *Strong;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  char *v147;
  id v148;
  void *v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  void *v155;
  id v156;
  id v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  __n128 v163;
  uint64_t v164;
  id v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  double v175;
  double v176;
  id v177;
  id v178;
  double v179;
  double v180;
  double v181;
  double v182;
  double v183;
  double v184;
  double v185;
  double v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  Class v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void *v210;
  void *v211;
  void *v212;
  uint64_t v213;
  void *v214;
  uint64_t v215;
  id v216;
  id v217;
  uint64_t v218;
  void *v219;
  id v220;
  uint64_t v221;
  uint64_t v222;
  id v223;
  char *v224;
  id v225;
  id v226;
  uint64_t v227;
  id v228;
  id v229;
  id v230;
  char *v231;
  id v232;
  id v233;
  char *v234;
  void *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  BOOL v240;

  v4 = v3;
  v8 = dispatch thunk of SearchResultsPresenter.result(at:)(a3);
  if (!v8)
    return;
  v9 = v8;
  v10 = objc_msgSend(a1, "traitCollection");
  v11 = dispatch thunk of SearchResultsPresenter.shouldResultHaveCondensedAppearance(at:in:)(a3, v10);

  v12 = type metadata accessor for AppSearchResult(0);
  if (swift_dynamicCastClass(v9, v12))
  {
    v13 = type metadata accessor for ContentSearchResultCollectionViewCell();
    v14 = swift_dynamicCastClass(a2, v13);
    if (v14)
    {
      v15 = (char *)v14;
      swift_retain(v9);
      v16 = a2;
      v17 = AppSearchResult.lockup.getter();
      v18 = sub_1001ADF7C(v11 & 1);
      swift_release(v17);
      sub_100116FD8(v18, v15, a3, a1);

      v19 = v18;
LABEL_5:
      swift_release(v19);
      v20 = v9;
      v21 = 2;
LABEL_6:
      swift_release_n(v20, v21);
      return;
    }
    goto LABEL_73;
  }
  v22 = type metadata accessor for BundleSearchResult(0);
  if (!swift_dynamicCastClass(v9, v22))
  {
    v35 = type metadata accessor for AdvertsSearchResult(0);
    if (swift_dynamicCastClass(v9, v35))
    {
      v37 = type metadata accessor for AdvertSearchResultCollectionViewCell();
      v38 = swift_dynamicCastClass(a2, v37);
      if (!v38)
        goto LABEL_73;
      v39 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController;
      v40 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController);
      if (v40)
      {
        v41 = (char *)v38;
        v42 = a2;
        v43 = swift_retain(v40);
        dispatch thunk of AdvertRotationController.currentAdvert.getter(&v236, v43);
        swift_release(v40);
        v44 = sub_10007B804(&qword_10084E120);
        v46 = type metadata accessor for MixedMediaLockup(0, v45);
        if ((swift_dynamicCast(&v235, &v236, v44, v46, 6) & 1) != 0)
        {
          v218 = v39;
          v224 = v41;
          v230 = v235;
          v47 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
          objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets");
          v49 = v48;
          v50 = *(void **)(v4 + v47);
          *(_QWORD *)&v51 = swift_unknownObjectRetain(v50).n128_u64[0];
          v53 = objc_msgSend(v52, "traitCollection", v51);
          v54 = objc_msgSend(v53, "horizontalSizeClass");

          v219 = v42;
          v220 = v50;
          if (v54 == (id)1)
          {
            objc_msgSend(*(id *)(v4 + v47), "pageMarginInsets");
            top = v55.n128_f64[0];
            left = v57;
            bottom = v59;
            right = v61;
          }
          else
          {
            top = UIEdgeInsetsZero.top;
            left = UIEdgeInsetsZero.left;
            bottom = UIEdgeInsetsZero.bottom;
            right = UIEdgeInsetsZero.right;
          }
          v107 = (id)ASKDeviceTypeGetCurrent(v55);
          v108 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph);
          v221 = OBJC_IVAR____TtC8AppStore36AdvertSearchResultCollectionViewCell_advertsContentView;
          v109 = *(id *)&v224[OBJC_IVAR____TtC8AppStore36AdvertSearchResultCollectionViewCell_advertsContentView];
          v110 = objc_msgSend(v220, "traitCollection");
          v222 = v108;
          sub_1005A6A04((uint64_t)v230, (uint64_t)v110, (uint64_t)v107, v108, v49, top, left, bottom, right);

          objc_msgSend(v224, "setNeedsLayout");
          swift_unknownObjectRelease(v220);

          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v112 = objc_msgSend(a1, "layoutAttributesForItemAtIndexPath:", isa);

          if (v112)
          {
            objc_msgSend(v112, "frame");
            v114 = v113;
            v116 = v115;
            v118 = v117;
            v120 = v119;

          }
          else
          {
            v114 = 0;
            v116 = 0;
            v118 = 0;
            v120 = 0;
          }
          v236 = v114;
          v237 = v116;
          v238 = v118;
          v239 = v120;
          v240 = v112 == 0;
          v135 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
          v136 = *(void **)(v4 + v47);
          v137 = *(void **)&v224[v221];
          swift_unknownObjectRetain(v136);
          v138 = v137;
          v139 = objc_msgSend(v136, "traitCollection");
          sub_1005A6FC4((uint64_t)v230, (uint64_t)&v236, v135, (uint64_t)v139);
          swift_unknownObjectRelease(v136);

          v140 = type metadata accessor for VideoPlaybackCoordinator(0);
          v141 = *(void **)(v108 + qword_10088FDC8);
          if (v141)
          {
            v142 = *(char **)&v224[v221];
            Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&v142[OBJC_IVAR____TtC8AppStore30AdvertsSearchResultContentView_screenshots]+ OBJC_IVAR____TtC8AppStore15LockupMediaView_videoView);
            if (Strong)
            {
              v144 = sub_100005C94(&qword_10082E4F0, type metadata accessor for VideoView, (uint64_t)&unk_10067E990);
              v145 = Strong;
            }
            else
            {
              v145 = 0;
              v144 = 0;
            }
            v146 = sub_100005C94(&qword_10082E558, (uint64_t (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView, (uint64_t)&unk_100688DA0);
            v147 = v142;
            v148 = v141;
            v149 = v145;
            v150 = v148;
            dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v149, v144, v142, v146);

            swift_retain(v230);
            v152 = sub_10011837C(v151, v219, v4);
            v153 = Lockup.searchAd.getter(v152);
            swift_release(v230);
            v154 = *(void **)&v224[v221];
            if (v153)
            {
              v155 = (void *)objc_opt_self(UIColor);
              v156 = v154;
              v157 = objc_msgSend(v155, "clearColor");
              objc_msgSend(v156, "setBackgroundColor:", v157);

            }
            else
            {
              v158 = v154;
            }
            objc_msgSend(v154, "setNeedsLayout", sub_100256A38(v153, v222));

            objc_msgSend(v224, "setNeedsLayout");
            swift_release(v153);
            v159 = swift_allocObject(&unk_10075AA78, 24, 7);
            swift_unknownObjectWeakInit(v159 + 16, v4);
            swift_retain(v159);
            sub_1003DEE00((uint64_t)sub_10011DA7C, v159);
            swift_release(v159);
            v160 = *(_QWORD *)(v4 + v218);
            if (v160)
            {
              v161 = sub_100005C94((unint64_t *)&unk_10082E4D8, (uint64_t (*)(uint64_t))type metadata accessor for AdvertSearchResultCollectionViewCell, (uint64_t)&unk_10068AA10);
              v162 = v219;
              v163 = swift_retain(v160);
              dispatch thunk of AdvertRotationController.didApplyCell(_:in:)(v224, v161, a1, v163);
              swift_release(v160);
              swift_release(v9);
              swift_release(v230);

            }
            else
            {
              swift_release(v9);
              swift_release(v230);

            }
            return;
          }
          v102 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v140, v140);
          __break(1u);
LABEL_86:
          dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v102, v102);
          __break(1u);
          return;
        }

      }
      swift_release(v9);
      return;
    }
    v67 = type metadata accessor for EditorialSearchResult(0, v36);
    v68 = swift_dynamicCastClass(v9, v67);
    if (v68)
    {
      v69 = v68;
      v70 = type metadata accessor for EditorialSearchResultCollectionViewCell();
      v231 = (char *)swift_dynamicCastClass(a2, v70);
      if (v231)
      {
        v71 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
        v72 = *(char **)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits);
        swift_getObjectType();
        swift_retain(v9);
        v225 = a2;
        *(_QWORD *)&v73 = swift_unknownObjectRetain(v72).n128_u64[0];
        v75 = objc_msgSend(v74, "traitCollection", v73);
        v76 = objc_msgSend(v75, "horizontalSizeClass");

        if (v76 == (id)1)
        {
          objc_msgSend(*(id *)(v4 + v71), "pageMarginInsets");
          v78 = v77.n128_f64[0];
          v80 = v79;
          v82 = v81;
          v84 = v83;
        }
        else
        {
          v78 = UIEdgeInsetsZero.top;
          v80 = UIEdgeInsetsZero.left;
          v82 = UIEdgeInsetsZero.bottom;
          v84 = UIEdgeInsetsZero.right;
        }
        v98 = (id)ASKDeviceTypeGetCurrent(v77);
        v99 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph);
        sub_10035126C(v69, v72, v99, *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkIconFetcher), *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader), v231, v78, v80, v82, v84);
        swift_unknownObjectRelease(v72);

        v100 = &v231[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_videoView];
        v101 = (void *)swift_unknownObjectWeakLoadStrong(&v231[OBJC_IVAR____TtC8AppStore39EditorialSearchResultCollectionViewCell_videoView]);

        if (v101)
        {
          v102 = type metadata accessor for VideoPlaybackCoordinator(0);
          v103 = *(void **)(v99 + qword_10088FDC8);
          if (!v103)
            goto LABEL_86;
          v104 = (void *)swift_unknownObjectWeakLoadStrong(v100);
          if (v104)
          {
            v105 = sub_100005C94(&qword_10082E4F0, type metadata accessor for VideoView, (uint64_t)&unk_10067E990);
            v106 = v104;
          }
          else
          {
            v106 = 0;
            v105 = 0;
          }
          v164 = sub_100005C94(&qword_10082E550, (uint64_t (*)(uint64_t))type metadata accessor for EditorialSearchResultCollectionViewCell, (uint64_t)&unk_10068E2F8);
          v165 = v225;
          v166 = v103;
          dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v106, v105, v231, v164);

        }
        else
        {

        }
      }
      else
      {
        swift_retain(v9);
      }
      swift_retain(v9);
      sub_10011870C(v69, a2, v4);
    }
    else
    {
      v85 = type metadata accessor for InAppPurchaseSearchResult(0);
      if (swift_dynamicCastClass(v9, v85))
      {
        v87 = type metadata accessor for InAppPurchaseSearchResultCollectionViewCell(0);
        v88 = swift_dynamicCastClass(a2, v87);
        v89 = swift_retain(v9);
        if (v88)
        {
          v232 = a2;
          v90 = ((uint64_t (*)(void))InAppPurchaseSearchResult.lockup.getter)();
          v91 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
          v226 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits), "traitCollection");
          v92 = objc_msgSend(*(id *)(v3 + v91), "traitCollection");
          v93 = objc_msgSend(v92, "horizontalSizeClass");

          if (v93 == (id)1)
          {
            objc_msgSend(*(id *)(v4 + v91), "pageMarginInsets");
          }
          else
          {
            v94 = UIEdgeInsetsZero.top;
            v95 = UIEdgeInsetsZero.left;
            v96 = UIEdgeInsetsZero.bottom;
            v97 = UIEdgeInsetsZero.right;
          }
          sub_10032425C(v90, *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph), *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader), v94, v95, v96, v97);

          swift_release(v90);
        }
        v167 = InAppPurchaseSearchResult.lockup.getter(v89);
        sub_100118A9C(v167, a2, v4);
        v19 = v167;
        goto LABEL_5;
      }
      v121 = type metadata accessor for LockupCollectionSearchResult(0, v86);
      v122 = swift_dynamicCastClass(v9, v121);
      if (v122)
      {
        v123 = v122;
        v124 = type metadata accessor for SearchLockupListCollectionViewCell();
        if (swift_dynamicCastClass(a2, v124))
        {
          v227 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph);
          v233 = *(id *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
          v125 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
          v126 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits);
          swift_retain(v9);
          v223 = a2;
          *(_QWORD *)&v127 = swift_unknownObjectRetain(v126).n128_u64[0];
          v129 = objc_msgSend(v128, "traitCollection", v127);
          v130 = objc_msgSend(v129, "horizontalSizeClass");

          if (v130 == (id)1)
          {
            objc_msgSend(*(id *)(v3 + v125), "pageMarginInsets");
          }
          else
          {
            v131 = UIEdgeInsetsZero.top;
            v132 = UIEdgeInsetsZero.left;
            v133 = UIEdgeInsetsZero.bottom;
            v134 = UIEdgeInsetsZero.right;
          }
          sub_100529878(v123, (uint64_t)v233, v227, v126, v131, v132, v133, v134);

          swift_unknownObjectRelease(v126);
        }
        else
        {
          swift_retain(v9);
        }
        swift_retain(v9);
        sub_100118E2C(v123, a2, v3);
      }
      else
      {
        v168 = type metadata accessor for AppEventSearchResult(0);
        v169 = swift_dynamicCastClass(v9, v168);
        if (!v169)
          goto LABEL_73;
        v170 = v169;
        v171 = type metadata accessor for AppEventSearchResultCollectionViewCell();
        v172 = swift_dynamicCastClass(a2, v171);
        if (!v172)
        {
          v187 = type metadata accessor for ContentSearchResultCollectionViewCell();
          v188 = swift_dynamicCastClass(a2, v187);
          if (v188)
          {
            v189 = (char *)v188;
            swift_retain(v9);
            v190 = a2;
            v191 = AppEventSearchResult.lockup.getter();
            v192 = sub_1001ADF7C(v11 & 1);
            swift_release(v191);
            sub_100116FD8(v192, v189, a3, a1);

            v19 = v192;
            goto LABEL_5;
          }
LABEL_73:
          swift_release(v9);
          return;
        }
        v234 = (char *)v172;
        v173 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
        v174 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits);
        swift_retain(v9);
        v228 = a2;
        objc_msgSend(v174, "pageMarginInsets");
        v176 = v175;
        v177 = objc_msgSend(*(id *)(v4 + v173), "traitCollection");
        v178 = objc_msgSend(v177, "horizontalSizeClass");

        if (v178 == (id)1)
        {
          objc_msgSend(*(id *)(v4 + v173), "pageMarginInsets");
          v180 = v179;
          v182 = v181;
          v184 = v183;
          v186 = v185;
        }
        else
        {
          v180 = UIEdgeInsetsZero.top;
          v182 = UIEdgeInsetsZero.left;
          v184 = UIEdgeInsetsZero.bottom;
          v186 = UIEdgeInsetsZero.right;
        }
        v193 = v170;
        v194 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph);
        v195 = *(_QWORD *)(v4 + v173);
        swift_unknownObjectRetain(v195);
        sub_10019FC4C(v170, v194, v176, v180, v182, v184, v186);
        swift_unknownObjectRelease(v195);
        v196 = IndexPath._bridgeToObjectiveC()().super.isa;
        v197 = objc_msgSend(a1, "layoutAttributesForItemAtIndexPath:", v196);

        if (v197)
        {
          objc_msgSend(v197, "frame");
          v199 = v198;
          v201 = v200;
          v203 = v202;
          v205 = v204;

        }
        else
        {
          v199 = 0;
          v201 = 0;
          v203 = 0;
          v205 = 0;
        }
        v236 = v199;
        v237 = v201;
        v238 = v203;
        v239 = v205;
        v240 = v197 == 0;
        v206 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
        v207 = *(_QWORD *)(v4 + v173);
        swift_unknownObjectRetain(v207);
        sub_10019FEA4(v193, (uint64_t)&v236, v206);
        swift_unknownObjectRelease(v207);
        v208 = *(_QWORD *)&v234[OBJC_IVAR____TtC8AppStore38AppEventSearchResultCollectionViewCell_appEventView];
        v209 = OBJC_IVAR____TtC8AppStore12AppEventView_appEventCardView;
        v210 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v208 + OBJC_IVAR____TtC8AppStore12AppEventView_appEventCardView)+ OBJC_IVAR____TtC8AppStore16AppEventCardView_videoView);

        if (v210)
        {
          v102 = type metadata accessor for VideoPlaybackCoordinator(0);
          v211 = *(void **)(v194 + qword_10088FDC8);
          if (!v211)
            goto LABEL_86;
          v212 = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v208 + v209) + OBJC_IVAR____TtC8AppStore16AppEventCardView_videoView);
          if (v212)
          {
            v213 = sub_100005C94(&qword_10082E4F0, type metadata accessor for VideoView, (uint64_t)&unk_10067E990);
            v214 = v212;
          }
          else
          {
            v214 = 0;
            v213 = 0;
          }
          v215 = sub_100005C94(&qword_10082E4E8, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell, (uint64_t)&unk_10068DDB8);
          v216 = v228;
          v217 = v211;
          dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v214, v213, v234, v215);

        }
        swift_retain(v9);
        sub_1001191BC(v193, v234, v4);

      }
    }
    v20 = v9;
    v21 = 3;
    goto LABEL_6;
  }
  v23 = type metadata accessor for BundleSearchResultCollectionViewCell();
  if (!swift_dynamicCastClass(a2, v23))
    goto LABEL_73;
  swift_retain(v9);
  v229 = a2;
  v24 = ((uint64_t (*)(void))BundleSearchResult.lockup.getter)();
  v25 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
  v26 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits);
  *(_QWORD *)&v27 = swift_unknownObjectRetain(v26).n128_u64[0];
  v29 = objc_msgSend(v28, "traitCollection", v27);
  v30 = objc_msgSend(v29, "horizontalSizeClass");

  if (v30 == (id)1)
  {
    objc_msgSend(*(id *)(v4 + v25), "pageMarginInsets");
  }
  else
  {
    v31 = UIEdgeInsetsZero.top;
    v32 = UIEdgeInsetsZero.left;
    v33 = UIEdgeInsetsZero.bottom;
    v34 = UIEdgeInsetsZero.right;
  }
  sub_100468038(v24, *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph), v31, v32, v33, v34);
  swift_release(v24);
  v63 = swift_unknownObjectRelease(v26);
  v64 = BundleSearchResult.lockup.getter(v63);
  sub_100467DC4(v64, *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader));
  v65 = swift_release(v64);
  v66 = BundleSearchResult.lockup.getter(v65);
  sub_10011837C(v66, v229, v4);
  swift_release(v66);
  swift_release_n(v9, 2);

}

void sub_100116F5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController);
    swift_retain(v4);

    if (v4)
    {
      dispatch thunk of AdvertRotationController.didInteractWithAdvert()();
      swift_release(v4);
    }
  }
}

void sub_100116FD8(uint64_t a1, char *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  double v13;
  id v14;
  id v15;
  id v16;
  __n128 v17;
  double top;
  double v19;
  double left;
  double v21;
  double bottom;
  double v23;
  double right;
  id v25;
  uint64_t v26;
  __n128 v27;
  Class isa;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *Strong;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD v48[4];
  BOOL v49;

  v5 = v4;
  v9 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets");
  v11 = v10;
  v12 = *(void **)(v4 + v9);
  *(_QWORD *)&v13 = swift_unknownObjectRetain(v12).n128_u64[0];
  v15 = objc_msgSend(v14, "traitCollection", v13);
  v16 = objc_msgSend(v15, "horizontalSizeClass");

  if (v16 == (id)1)
  {
    objc_msgSend(*(id *)(v5 + v9), "pageMarginInsets");
    top = v17.n128_f64[0];
    left = v19;
    bottom = v21;
    right = v23;
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
  }
  v25 = (id)ASKDeviceTypeGetCurrent(v17);
  v26 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph);
  v27.n128_u64[0] = v11;
  sub_1003FB61C(a1, v12, (uint64_t)v25, v26, v27, top, left, bottom, right);
  swift_unknownObjectRelease(v12);

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(a4, "layoutAttributesForItemAtIndexPath:", isa);

  if (v29)
  {
    objc_msgSend(v29, "frame");
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v37 = v36;

  }
  else
  {
    v31 = 0;
    v33 = 0;
    v35 = 0;
    v37 = 0;
  }
  v48[0] = v31;
  v48[1] = v33;
  v48[2] = v35;
  v48[3] = v37;
  v49 = v29 == 0;
  v38 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
  v39 = *(char **)(v5 + v9);
  swift_unknownObjectRetain(v39);
  sub_1003FBC40(a1, (uint64_t)v48, v38, v39);
  swift_unknownObjectRelease(v39);
  v40 = type metadata accessor for VideoPlaybackCoordinator(0);
  v41 = *(void **)(v26 + qword_10088FDC8);
  if (v41)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&a2[OBJC_IVAR____TtC8AppStore37ContentSearchResultCollectionViewCell_screenshots]+ OBJC_IVAR____TtC8AppStore15LockupMediaView_videoView);
    if (Strong)
    {
      v43 = sub_100005C94(&qword_10082E4F0, type metadata accessor for VideoView, (uint64_t)&unk_10067E990);
      v44 = Strong;
    }
    else
    {
      v44 = 0;
      v43 = 0;
    }
    v45 = sub_100005C94(&qword_10082E500, (uint64_t (*)(uint64_t))type metadata accessor for ContentSearchResultCollectionViewCell, (uint64_t)&unk_100676168);
    v47 = v41;
    dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)(v44, v43, a2, v45);

    swift_retain(a1);
    sub_10011837C(v46, a2, v5);
    swift_release(a1);

  }
  else
  {
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v40, v40);
    __break(1u);
  }
}

void sub_1001172CC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  Swift::Bool v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t Strong;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  Swift::Bool v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  __n128 v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  Swift::Bool v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  __n128 v64;
  uint64_t v65;
  Swift::Bool v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  __n128 v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  __n128 v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  char v118[24];
  uint64_t v119;
  _QWORD v120[6];
  UIImage_optional v121;
  UIImage_optional v122;
  UIImage_optional v123;

  v4 = v3;
  v7 = type metadata accessor for ContentSearchResultCollectionViewCell();
  v8 = swift_dynamicCastClass(a2, v7);
  v117 = a2;
  if (!v8)
    goto LABEL_21;
  v9 = v8;
  v114 = a3;
  v113 = *(_QWORD *)(v8 + OBJC_IVAR____TtC8AppStore37ContentSearchResultCollectionViewCell_screenshots);
  v10 = (uint64_t *)(v113 + OBJC_IVAR____TtC8AppStore15LockupMediaView_imageViews);
  swift_beginAccess(v113 + OBJC_IVAR____TtC8AppStore15LockupMediaView_imageViews, v118, 0, 0);
  v11 = *v10;
  v115 = v4;
  v116 = v9;
  if ((unint64_t)*v10 >> 62)
  {
    if (v11 < 0)
      v24 = *v10;
    else
      v24 = v11 & 0xFFFFFFFFFFFFFF8;
    v25 = a2;
    swift_bridgeObjectRetain(v11);
    v15 = _CocoaArrayWrapper.endIndex.getter(v24);
    v13 = v15;
    if (!v15)
      goto LABEL_14;
  }
  else
  {
    v12 = a2;
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v12;
    swift_bridgeObjectRetain(v11);
    if (!v13)
      goto LABEL_14;
  }
  if (v13 < 1)
  {
    __break(1u);
LABEL_57:
    v67 = dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v15, v15);
    __break(1u);
    goto LABEL_58;
  }
  v16 = 0;
  do
  {
    if ((v11 & 0xC000000000000001) != 0)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v11);
    else
      v17 = *(id *)(v11 + 8 * v16 + 32);
    v18 = v17;
    ++v16;
    v119 = (uint64_t)v17;
    v19 = type metadata accessor for BorderedScreenshotView();
    v20 = sub_100005C94(&qword_10082E4F8, (uint64_t (*)(uint64_t))type metadata accessor for BorderedScreenshotView, (uint64_t)&protocol conformance descriptor for NSObject);
    v21 = v18;
    AnyHashable.init<A>(_:)(v120, &v119, v19, v20);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v120, 1);
    sub_10007E32C((uint64_t)v120);
    v22 = *(id *)&v21[OBJC_IVAR____TtC8AppStore22BorderedScreenshotView_artworkView];
    v121.value.super.isa = 0;
    v121.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v121, v23);

  }
  while (v13 != v16);
LABEL_14:
  swift_bridgeObjectRelease(v11);
  v26 = v113 + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoView;
  Strong = swift_unknownObjectWeakLoadStrong(v113 + OBJC_IVAR____TtC8AppStore15LockupMediaView_videoView);
  if (Strong)
  {
    v28 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + qword_100844118), "setImage:", 0);
    v119 = (uint64_t)v28;
    v29 = type metadata accessor for VideoView(0);
    v30 = sub_100005C94((unint64_t *)&qword_10082E508, type metadata accessor for VideoView, (uint64_t)&protocol conformance descriptor for NSObject);
    v31 = v28;
    AnyHashable.init<A>(_:)(v120, &v119, v29, v30);
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)(v120, 1);

    sub_10007E32C((uint64_t)v120);
  }
  v32 = *(_QWORD *)(v116 + OBJC_IVAR____TtC8AppStore37ContentSearchResultCollectionViewCell_lockupView);
  v33 = OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView;
  v34 = *(id *)(v32 + OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView);
  v122.value.super.isa = 0;
  v122.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v122, v35);

  v36 = *(void **)(v32 + v33);
  v37 = type metadata accessor for ArtworkView(0);
  v38 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
  v39 = v36;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v39, 1, v37, v38, v40);

  v15 = type metadata accessor for VideoPlaybackCoordinator(0);
  v4 = v115;
  v41 = *(void **)(*(_QWORD *)(v115 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph)
                 + qword_10088FDC8);
  a2 = v117;
  if (!v41)
    goto LABEL_57;
  v42 = (void *)swift_unknownObjectWeakLoadStrong(v26);
  if (v42)
  {
    v43 = sub_100005C94(&qword_10082E4F0, type metadata accessor for VideoView, (uint64_t)&unk_10067E990);
    v44 = v42;
  }
  else
  {
    v44 = 0;
    v43 = 0;
  }
  v45 = sub_100005C94(&qword_10082E500, (uint64_t (*)(uint64_t))type metadata accessor for ContentSearchResultCollectionViewCell, (uint64_t)&unk_100676168);
  v46 = v117;
  v47 = v41;
  dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)(v44, v43, v116, v45, 1);

  a3 = v114;
LABEL_21:
  v48 = dispatch thunk of SearchResultsPresenter.result(at:)(a3);
  if (!v48)
    return;
  v49 = v48;
  v50 = type metadata accessor for AppEventSearchResultCollectionViewCell();
  v51 = swift_dynamicCastClass(a2, v50);
  if (v51)
  {
    v52 = v51;
    v53 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
    v54 = *(_QWORD *)(v51 + OBJC_IVAR____TtC8AppStore38AppEventSearchResultCollectionViewCell_lockupView);
    v55 = OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView;
    v56 = *(void **)(v54 + OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView);
    v57 = a2;
    v58 = v56;
    v123.value.super.isa = 0;
    v123.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v123, v59);

    v60 = *(void **)(v54 + v55);
    v61 = type metadata accessor for ArtworkView(0);
    v62 = sub_100005C94((unint64_t *)&qword_10082B210, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkView, (uint64_t)&protocol conformance descriptor for ArtworkView);
    v63 = v60;
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)(v63, 1, v61, v62, v64);

    v65 = *(_QWORD *)(*(_QWORD *)(v52 + OBJC_IVAR____TtC8AppStore38AppEventSearchResultCollectionViewCell_appEventView)
                    + OBJC_IVAR____TtC8AppStore12AppEventView_appEventCardView);
    sub_100413384(v53, 1, v66);
    v67 = type metadata accessor for VideoPlaybackCoordinator(0);
    v68 = *(void **)(*(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph)
                   + qword_10088FDC8);
    if (v68)
    {
      v69 = (void *)swift_unknownObjectWeakLoadStrong(v65 + OBJC_IVAR____TtC8AppStore16AppEventCardView_videoView);
      if (v69)
      {
        v70 = sub_100005C94(&qword_10082E4F0, type metadata accessor for VideoView, (uint64_t)&unk_10067E990);
        v71 = v69;
      }
      else
      {
        v71 = 0;
        v70 = 0;
      }
      v72 = sub_100005C94(&qword_10082E4E8, (uint64_t (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell, (uint64_t)&unk_10068DDB8);
      v73 = v57;
      v74 = v68;
      dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)(v71, v70, v52, v72, 1);

      a2 = v117;
      goto LABEL_28;
    }
LABEL_58:
    dispatch thunk of BaseObjectGraph.noMemberFound<A>(toSatisfy:)(v67, v67);
    __break(1u);
    return;
  }
LABEL_28:
  v75 = type metadata accessor for AdvertSearchResultCollectionViewCell();
  v76 = swift_dynamicCastClass(a2, v75);
  if (v76)
  {
    v77 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController);
    if (v77)
    {
      v78 = v76;
      v79 = sub_100005C94((unint64_t *)&unk_10082E4D8, (uint64_t (*)(uint64_t))type metadata accessor for AdvertSearchResultCollectionViewCell, (uint64_t)&unk_10068AA10);
      v80 = a2;
      v81 = swift_retain(v77);
      dispatch thunk of AdvertRotationController.didEndDisplaying(_:in:)(v78, v79, a1, v81);
      swift_release(v77);

    }
  }
  v82 = type metadata accessor for AppSearchResult(0);
  if (!swift_dynamicCastClass(v49, v82))
  {
    v88 = type metadata accessor for AdvertsSearchResult(0);
    if (swift_dynamicCastClass(v49, v88))
    {
      v90 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController);
      if (v90)
      {
        v91 = swift_retain(*(_QWORD *)(v4
                                     + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController));
        dispatch thunk of AdvertRotationController.currentAdvert.getter(v120, v91);
        swift_release(v90);
        v92 = sub_10007B804(&qword_10084E120);
        v94 = type metadata accessor for MixedMediaLockup(0, v93);
        if ((swift_dynamicCast(&v119, v120, v92, v94, 6) & 1) != 0)
        {
          v95 = v119;
          swift_retain(v119);
          sub_100119AF4(v96, v4);
          swift_release(v49);
          v86 = v95;
          goto LABEL_36;
        }
      }
    }
    else
    {
      v97 = type metadata accessor for EditorialSearchResult(0, v89);
      v98 = swift_dynamicCastClass(v49, v97);
      if (v98)
      {
        v99 = v98;
        swift_retain(v49);
        sub_100119CB4(v99, v4);
        goto LABEL_35;
      }
      v100 = type metadata accessor for InAppPurchaseSearchResult(0);
      if (swift_dynamicCastClass(v49, v100))
      {
        v101 = swift_retain(v49);
        v85 = InAppPurchaseSearchResult.lockup.getter(v101);
        sub_100119E74(v85, v4);
        goto LABEL_34;
      }
      v102 = type metadata accessor for BundleSearchResult(0);
      if (swift_dynamicCastClass(v49, v102))
      {
        v104 = swift_retain(v49);
        v84 = BundleSearchResult.lockup.getter(v104);
        goto LABEL_33;
      }
      v105 = type metadata accessor for LockupCollectionSearchResult(0, v103);
      v106 = swift_dynamicCastClass(v49, v105);
      if (v106)
      {
        v107 = v106;
        swift_retain(v49);
        sub_10011A034(v107, v4);
        goto LABEL_35;
      }
      v108 = type metadata accessor for AppEventSearchResult(0);
      v109 = swift_dynamicCastClass(v49, v108);
      if (v109)
      {
        v110 = v109;
        v111 = swift_retain(v49);
        if ((dispatch thunk of SearchResultsPresenter.shouldDisplayAppEvent(for:)(v110, v111) & 1) != 0)
        {
          swift_retain(v49);
          sub_10011A1F4(v110, v4);
          v86 = v49;
          v87 = 3;
          goto LABEL_37;
        }
        v84 = AppEventSearchResult.lockup.getter();
        goto LABEL_33;
      }
    }
    swift_release(v49);
    return;
  }
  v83 = swift_retain(v49);
  v84 = AppSearchResult.lockup.getter(v83);
LABEL_33:
  v85 = v84;
  sub_100119AF4(v84, v4);
LABEL_34:
  swift_release(v85);
LABEL_35:
  v86 = v49;
LABEL_36:
  v87 = 2;
LABEL_37:
  swift_release_n(v86, v87);
}

void sub_100117EB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  id v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  double v25;
  id v26;
  id v27;
  __n128 v28;
  double top;
  double v30;
  double left;
  double v32;
  double bottom;
  double v34;
  double right;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  _BYTE v42[48];

  v13 = type metadata accessor for AdvertSearchResultCollectionViewCell();
  if (swift_dynamicCastClass(a1, v13))
  {
    sub_10008EC10(a3, (uint64_t)v42);
    v14 = a1;
    v15 = sub_10007B804(&qword_10084E120);
    v17 = type metadata accessor for MixedMediaLockup(0, v16);
    if ((swift_dynamicCast(&v41, v42, v15, v17, 6) & 1) != 0)
    {
      v18 = v41;
      sub_10008EC10(a4, (uint64_t)v42);
      if ((swift_dynamicCast(&v41, v42, v15, v17, 6) & 1) != 0)
      {
        v19 = v41;
        swift_retain(v18);
        sub_100119AF4(v20, v7);
        swift_release(v18);
        swift_retain(v19);
        sub_10011837C(v21, v14, v7);
        *(_QWORD *)&v22 = swift_release(v19).n128_u64[0];
        v23 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
        objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits), "pageMarginInsets", v22);
        v25 = v24;
        v40 = objc_msgSend(*(id *)(v7 + v23), "traitCollection");
        v26 = objc_msgSend(*(id *)(v7 + v23), "traitCollection");
        v27 = objc_msgSend(v26, "horizontalSizeClass");

        if (v27 == (id)1)
        {
          objc_msgSend(*(id *)(v7 + v23), "pageMarginInsets");
          top = v28.n128_f64[0];
          left = v30;
          bottom = v32;
          right = v34;
        }
        else
        {
          top = UIEdgeInsetsZero.top;
          left = UIEdgeInsetsZero.left;
          bottom = UIEdgeInsetsZero.bottom;
          right = UIEdgeInsetsZero.right;
        }
        v36 = (id)ASKDeviceTypeGetCurrent(v28);
        v37 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
        v38 = type metadata accessor for ObjectGraph(0);
        v39 = swift_dynamicCastClassUnconditional(a7, v38, 0, 0, 0);
        sub_1005A6400(v19, (uint64_t)v40, (uint64_t)v36, v37, v39, a6 & 1, v25, top, left, bottom, right);

        swift_release(v18);
        swift_release(v19);

      }
      else
      {
        swift_release(v18);

      }
    }
    else
    {

    }
  }
}

id sub_10011815C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsCollectionViewDelegate(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100118270()
{
  return type metadata accessor for SearchResultsCollectionViewDelegate(0);
}

uint64_t type metadata accessor for SearchResultsCollectionViewDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_10082E490;
  if (!qword_10082E490)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchResultsCollectionViewDelegate);
  return result;
}

void sub_1001182B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = "\b";
  sub_100006620(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    v4[6] = &unk_100664F50;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = &unk_100664F68;
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = "\b";
    v4[11] = "\b";
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
}

uint64_t sub_10011837C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  id v37;
  _QWORD v38[5];
  uint64_t v39[5];

  v37 = a2;
  v5 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v36 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v36 - v16;
  v18 = type metadata accessor for MixedMediaLockup(0, v15);
  v39[3] = v18;
  v39[4] = sub_100005C94(&qword_10082E4B8, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v39[0] = a1;
  sub_100005B48(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_10082E4B0);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_1000057AC((uint64_t)v10, &qword_10082E4B0);
    v20 = a3;
    v21 = v37;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v20 = a3;
    if (*(_QWORD *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v22 = swift_retain(a1).n128_u64[0];
      v21 = v37;
      objc_msgSend(v37, "frame", v22);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v17, 1);
    }
    else
    {
      swift_retain(a1);
      v21 = v37;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  sub_100022500((uint64_t)v39, (uint64_t)v38);
  v23 = sub_100005C94(&qword_10082E4C0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  dispatch thunk of ViewModel.impressionMetrics.getter(v18, v23);
  if (v19(v7, 1, v11) == 1)
  {
    sub_1000057AC((uint64_t)v7, &qword_10082E4B0);
  }
  else
  {
    v24 = v36;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v36, v7, v11);
    v25 = *(_QWORD *)(v20 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v25)
    {
      objc_msgSend(v21, "frame");
      ImpressionsCalculator.addElement(_:at:)(v24);
    }
    objc_msgSend(v21, "frame");
    v26 = sub_100060B40(v38, v38[3]);
    sub_10011A574(*v26, v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v38);
  ObjectType = swift_getObjectType();
  v28 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v28)
    v29 = v28;
  else
    v29 = 0;
  if (v28)
    v30 = v21;
  else
    v30 = 0;
  if (v30)
  {
    v31 = v21;
    objc_msgSend(v31, "frame");
    v33 = sub_1001198DC(v39[0], v20, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, &qword_10082E4C0, (uint64_t)&protocol conformance descriptor for Lockup, v32);
    v34 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v33, v34, v29);

  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v39);
}

uint64_t sub_10011870C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  id v37;
  _QWORD v38[5];
  uint64_t v39[5];

  v37 = a2;
  v5 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v36 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v36 - v16;
  v18 = type metadata accessor for EditorialSearchResult(0, v15);
  v39[3] = v18;
  v39[4] = sub_100005C94(&qword_10082E510, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v39[0] = a1;
  sub_100005B48(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_10082E4B0);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_1000057AC((uint64_t)v10, &qword_10082E4B0);
    v20 = a3;
    v21 = v37;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v20 = a3;
    if (*(_QWORD *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v22 = swift_retain(a1).n128_u64[0];
      v21 = v37;
      objc_msgSend(v37, "frame", v22);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v17, 1);
    }
    else
    {
      swift_retain(a1);
      v21 = v37;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  sub_100022500((uint64_t)v39, (uint64_t)v38);
  v23 = sub_100005C94(&qword_10082E518, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter(v18, v23);
  if (v19(v7, 1, v11) == 1)
  {
    sub_1000057AC((uint64_t)v7, &qword_10082E4B0);
  }
  else
  {
    v24 = v36;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v36, v7, v11);
    v25 = *(_QWORD *)(v20 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v25)
    {
      objc_msgSend(v21, "frame");
      ImpressionsCalculator.addElement(_:at:)(v24);
    }
    objc_msgSend(v21, "frame");
    v26 = sub_100060B40(v38, v38[3]);
    sub_10011AADC(*v26, v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v38);
  ObjectType = swift_getObjectType();
  v28 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v28)
    v29 = v28;
  else
    v29 = 0;
  if (v28)
    v30 = v21;
  else
    v30 = 0;
  if (v30)
  {
    v31 = v21;
    objc_msgSend(v31, "frame");
    v33 = sub_1001198DC(v39[0], v20, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, &qword_10082E518, (uint64_t)&protocol conformance descriptor for SearchResult, v32);
    v34 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v33, v34, v29);

  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v39);
}

uint64_t sub_100118A9C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  id v37;
  _QWORD v38[5];
  uint64_t v39[5];

  v37 = a2;
  v5 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v36 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v36 - v16;
  v18 = type metadata accessor for InAppPurchaseLockup(0, v15);
  v39[3] = v18;
  v39[4] = sub_100005C94(&qword_10082E520, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v39[0] = a1;
  sub_100005B48(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_10082E4B0);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_1000057AC((uint64_t)v10, &qword_10082E4B0);
    v20 = a3;
    v21 = v37;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v20 = a3;
    if (*(_QWORD *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v22 = swift_retain(a1).n128_u64[0];
      v21 = v37;
      objc_msgSend(v37, "frame", v22);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v17, 1);
    }
    else
    {
      swift_retain(a1);
      v21 = v37;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  sub_100022500((uint64_t)v39, (uint64_t)v38);
  v23 = sub_100005C94(&qword_10082E528, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  dispatch thunk of ViewModel.impressionMetrics.getter(v18, v23);
  if (v19(v7, 1, v11) == 1)
  {
    sub_1000057AC((uint64_t)v7, &qword_10082E4B0);
  }
  else
  {
    v24 = v36;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v36, v7, v11);
    v25 = *(_QWORD *)(v20 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v25)
    {
      objc_msgSend(v21, "frame");
      ImpressionsCalculator.addElement(_:at:)(v24);
    }
    objc_msgSend(v21, "frame");
    v26 = sub_100060B40(v38, v38[3]);
    sub_10011B044(*v26, v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v38);
  ObjectType = swift_getObjectType();
  v28 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v28)
    v29 = v28;
  else
    v29 = 0;
  if (v28)
    v30 = v21;
  else
    v30 = 0;
  if (v30)
  {
    v31 = v21;
    objc_msgSend(v31, "frame");
    v33 = sub_1001198DC(v39[0], v20, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, &qword_10082E528, (uint64_t)&protocol conformance descriptor for Lockup, v32);
    v34 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v33, v34, v29);

  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v39);
}

uint64_t sub_100118E2C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  id v37;
  _QWORD v38[5];
  uint64_t v39[5];

  v37 = a2;
  v5 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v36 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v36 - v16;
  v18 = type metadata accessor for LockupCollectionSearchResult(0, v15);
  v39[3] = v18;
  v39[4] = sub_100005C94(&qword_10082E530, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v39[0] = a1;
  sub_100005B48(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_10082E4B0);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_1000057AC((uint64_t)v10, &qword_10082E4B0);
    v20 = a3;
    v21 = v37;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v20 = a3;
    if (*(_QWORD *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v22 = swift_retain(a1).n128_u64[0];
      v21 = v37;
      objc_msgSend(v37, "frame", v22);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v17, 1);
    }
    else
    {
      swift_retain(a1);
      v21 = v37;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  sub_100022500((uint64_t)v39, (uint64_t)v38);
  v23 = sub_100005C94(&qword_10082E538, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter(v18, v23);
  if (v19(v7, 1, v11) == 1)
  {
    sub_1000057AC((uint64_t)v7, &qword_10082E4B0);
  }
  else
  {
    v24 = v36;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v36, v7, v11);
    v25 = *(_QWORD *)(v20 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v25)
    {
      objc_msgSend(v21, "frame");
      ImpressionsCalculator.addElement(_:at:)(v24);
    }
    objc_msgSend(v21, "frame");
    v26 = sub_100060B40(v38, v38[3]);
    sub_10011B5AC(*v26, v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v38);
  ObjectType = swift_getObjectType();
  v28 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v28)
    v29 = v28;
  else
    v29 = 0;
  if (v28)
    v30 = v21;
  else
    v30 = 0;
  if (v30)
  {
    v31 = v21;
    objc_msgSend(v31, "frame");
    v33 = sub_1001198DC(v39[0], v20, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, &qword_10082E538, (uint64_t)&protocol conformance descriptor for SearchResult, v32);
    v34 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v33, v34, v29);

  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v39);
}

uint64_t sub_1001191BC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  id v36;
  _QWORD v37[5];
  uint64_t v38[5];

  v36 = a2;
  v5 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v35 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v35 - v15;
  v17 = type metadata accessor for AppEventSearchResult(0);
  v38[3] = v17;
  v38[4] = sub_100005C94((unint64_t *)&qword_10082E540, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v38[0] = a1;
  sub_100005B48(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_10082E4B0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_1000057AC((uint64_t)v10, &qword_10082E4B0);
    v19 = a3;
    v20 = v36;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    v19 = a3;
    if (*(_QWORD *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v21 = swift_retain(a1).n128_u64[0];
      v20 = v36;
      objc_msgSend(v36, "frame", v21);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v16, 1);
    }
    else
    {
      swift_retain(a1);
      v20 = v36;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  sub_100022500((uint64_t)v38, (uint64_t)v37);
  v22 = sub_100005C94(&qword_10082E548, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter(v17, v22);
  if (v18(v7, 1, v11) == 1)
  {
    sub_1000057AC((uint64_t)v7, &qword_10082E4B0);
  }
  else
  {
    v23 = v35;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v35, v7, v11);
    v24 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v24)
    {
      objc_msgSend(v20, "frame");
      ImpressionsCalculator.addElement(_:at:)(v23);
    }
    objc_msgSend(v20, "frame");
    v25 = sub_100060B40(v37, v37[3]);
    sub_10011BB14(*v25, v24);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v37);
  ObjectType = swift_getObjectType();
  v27 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v27)
    v28 = v27;
  else
    v28 = 0;
  if (v27)
    v29 = v20;
  else
    v29 = 0;
  if (v29)
  {
    v30 = v20;
    objc_msgSend(v30, "frame");
    v32 = sub_1001198DC(v38[0], v19, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, &qword_10082E548, (uint64_t)&protocol conformance descriptor for SearchResult, v31);
    v33 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v32, v33, v28);

  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v38);
}

uint64_t sub_10011954C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  id v36;
  _QWORD v37[5];
  uint64_t v38[5];

  v36 = a2;
  v5 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - v9;
  v11 = type metadata accessor for ImpressionMetrics(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v35 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v35 - v15;
  v17 = type metadata accessor for LinkableText(0);
  v38[3] = v17;
  v38[4] = sub_100005C94((unint64_t *)&qword_10082E560, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v38[0] = a1;
  sub_100005B48(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_10082E4B0);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    swift_retain(a1);
    sub_1000057AC((uint64_t)v10, &qword_10082E4B0);
    v19 = a3;
    v20 = v36;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    v19 = a3;
    if (*(_QWORD *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      *(_QWORD *)&v21 = swift_retain(a1).n128_u64[0];
      v20 = v36;
      objc_msgSend(v36, "frame", v21);
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(v16, 1);
    }
    else
    {
      swift_retain(a1);
      v20 = v36;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  sub_100022500((uint64_t)v38, (uint64_t)v37);
  v22 = sub_100005C94(&qword_10082E568, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  dispatch thunk of ViewModel.impressionMetrics.getter(v17, v22);
  if (v18(v7, 1, v11) == 1)
  {
    sub_1000057AC((uint64_t)v7, &qword_10082E4B0);
  }
  else
  {
    v23 = v35;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v35, v7, v11);
    v24 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v24)
    {
      objc_msgSend(v20, "frame");
      ImpressionsCalculator.addElement(_:at:)(v23);
    }
    objc_msgSend(v20, "frame");
    v25 = sub_100060B40(v37, v37[3]);
    sub_10011DA84(*v25, v24);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v37);
  ObjectType = swift_getObjectType();
  v27 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for NestedModelImpressionsRecording);
  if (v27)
    v28 = v27;
  else
    v28 = 0;
  if (v27)
    v29 = v20;
  else
    v29 = 0;
  if (v29)
  {
    v30 = v20;
    objc_msgSend(v30, "frame");
    v32 = sub_1001198DC(v38[0], v19, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, &qword_10082E568, (uint64_t)&protocol conformance descriptor for LinkableText, v31);
    v33 = swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter(v32, v33, v28);

  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v38);
}

uint64_t sub_1001198DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, __n128 a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v11 = type metadata accessor for ImpressionMetrics.ID(0, a6);
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ImpressionMetrics(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  v22 = ((uint64_t (*)(_QWORD, __n128))a3)(0, v19);
  v23 = sub_100005C94(a4, a3, a5);
  dispatch thunk of ViewModel.impressionMetrics.getter(v22, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1000057AC((uint64_t)v16, &qword_10082E4B0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v17);
  if (!*(_QWORD *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    return 0;
  }
  v24 = ImpressionsCalculator.addElement(_:at:)(v21);
  ImpressionMetrics.id.getter(v24);
  v25 = ImpressionsCalculator.makeChildCalculator(for:)(v13);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  return v25;
}

uint64_t sub_100119AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v4 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MixedMediaLockup(0, v9);
  v19[3] = v12;
  v19[4] = sub_100005C94(&qword_10082E4B8, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v19[0] = a1;
  sub_100022500((uint64_t)v19, (uint64_t)v18);
  v13 = sub_100005C94(&qword_10082E4C0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000057AC((uint64_t)v6, &qword_10082E4B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v15)
      ImpressionsCalculator.removeElement(_:)(v11, v14);
    v16 = sub_100060B40(v18, v18[3]);
    sub_10011C07C(*v16, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v18);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v19);
}

uint64_t sub_100119CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v4 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditorialSearchResult(0, v9);
  v19[3] = v12;
  v19[4] = sub_100005C94(&qword_10082E510, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v19[0] = a1;
  sub_100022500((uint64_t)v19, (uint64_t)v18);
  v13 = sub_100005C94(&qword_10082E518, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000057AC((uint64_t)v6, &qword_10082E4B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v15)
      ImpressionsCalculator.removeElement(_:)(v11, v14);
    v16 = sub_100060B40(v18, v18[3]);
    sub_10011C5A8(*v16, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v18);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v19);
}

uint64_t sub_100119E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v4 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for InAppPurchaseLockup(0, v9);
  v19[3] = v12;
  v19[4] = sub_100005C94(&qword_10082E520, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v19[0] = a1;
  sub_100022500((uint64_t)v19, (uint64_t)v18);
  v13 = sub_100005C94(&qword_10082E528, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000057AC((uint64_t)v6, &qword_10082E4B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v15)
      ImpressionsCalculator.removeElement(_:)(v11, v14);
    v16 = sub_100060B40(v18, v18[3]);
    sub_10011CAD4(*v16, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v18);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v19);
}

uint64_t sub_10011A034(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v4 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LockupCollectionSearchResult(0, v9);
  v19[3] = v12;
  v19[4] = sub_100005C94(&qword_10082E530, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v19[0] = a1;
  sub_100022500((uint64_t)v19, (uint64_t)v18);
  v13 = sub_100005C94(&qword_10082E538, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000057AC((uint64_t)v6, &qword_10082E4B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v15 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v15)
      ImpressionsCalculator.removeElement(_:)(v11, v14);
    v16 = sub_100060B40(v18, v18[3]);
    sub_10011D000(*v16, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v18);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v19);
}

uint64_t sub_10011A1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[5];
  _QWORD v18[5];

  v4 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AppEventSearchResult(0);
  v18[3] = v11;
  v18[4] = sub_100005C94((unint64_t *)&qword_10082E540, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v18[0] = a1;
  sub_100022500((uint64_t)v18, (uint64_t)v17);
  v12 = sub_100005C94(&qword_10082E548, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000057AC((uint64_t)v6, &qword_10082E4B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v14)
      ImpressionsCalculator.removeElement(_:)(v10, v13);
    v15 = sub_100060B40(v17, v17[3]);
    sub_10011D52C(*v15, v14);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v17);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v18);
}

uint64_t sub_10011A3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v17[5];
  _QWORD v18[5];

  v4 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ImpressionMetrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LinkableText(0);
  v18[3] = v11;
  v18[4] = sub_100005C94((unint64_t *)&qword_10082E560, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v18[0] = a1;
  sub_100022500((uint64_t)v18, (uint64_t)v17);
  v12 = sub_100005C94(&qword_10082E568, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  swift_retain(a1);
  dispatch thunk of ViewModel.impressionMetrics.getter(v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000057AC((uint64_t)v6, &qword_10082E4B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v14)
      ImpressionsCalculator.removeElement(_:)(v10, v13);
    v15 = sub_100060B40(v17, v17[3]);
    sub_10011E18C(*v15, v14);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v17);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v18);
}

uint64_t sub_10011A574(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63[2];
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[6];

  v60 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v53 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v61 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v58 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v53 - v18;
  v20 = type metadata accessor for MixedMediaLockup(0, v17);
  v71[3] = v20;
  v71[4] = sub_100005C94(&qword_10082E4B8, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v71[0] = a1;
  sub_100022500((uint64_t)v71, (uint64_t)v65);
  swift_retain(a1);
  v21 = sub_10007B804((uint64_t *)&unk_10082C420);
  v22 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v63, v65, v21, v22, 6))
  {
    v59 = v5;
    sub_10000F5F4(v63, (uint64_t)v68);
    v23 = v69;
    v24 = v70;
    sub_100060B40(v68, v69);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v53 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v53 + 32;
        v57 = v20;
        v54 = v13;
        v55 = v14;
        v56 = v19;
        do
        {
          sub_100022500(v27, (uint64_t)v65);
          v29 = v66;
          v28 = v67;
          sub_100060B40(v65, v66);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_100005C94(&qword_10082E4C0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v32 = v61;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            v33 = v30(v32, 1, v13);
            if ((_DWORD)v33 == 1)
            {
              sub_1000057AC(v61, &qword_10082E4B0);
              v35 = type metadata accessor for ImpressionMetrics.ID(0, v34);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v62, 1, 1, v35);
            }
            else
            {
              v36 = v62;
              v37 = v61;
              ImpressionMetrics.id.getter(v33);
              v38.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v37, v13);
              v39 = type metadata accessor for ImpressionMetrics.ID(0, v38);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v36, 0, 1, v39);
            }
            v40 = (uint64_t)v59;
            if (v60)
            {
              sub_100005B48(v62, (uint64_t)v59, &qword_10084D980);
              v42 = type metadata accessor for ImpressionMetrics.ID(0, v41);
              v43 = *(_QWORD *)(v42 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42) == 1)
              {
                sub_1000057AC(v40, &qword_10084D980);
                v44 = 0;
                v45 = 0;
              }
              else
              {
                v46 = v40;
                v44 = ImpressionMetrics.ID.element.getter();
                v45 = v47;
                v13 = v54;
                (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v42);
              }
              v14 = v55;
              v48 = v58;
              v49 = v56;
              ImpressionMetrics.withParentId(_:)(v44, v45);
              swift_bridgeObjectRelease(v45);
              ImpressionsCalculator.addElement(_:at:)(v48);
              v50 = *(void (**)(char *, uint64_t))(v14 + 8);
              v51 = v48;
              v19 = v49;
              v50(v51, v13);
              sub_1000057AC(v62, &qword_10084D980);
              v50(v49, v13);
              v20 = v57;
            }
            else
            {
              sub_1000057AC(v62, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v65);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v53);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v68);
  }
  else
  {
    v64 = 0;
    memset(v63, 0, sizeof(v63));
    sub_1000057AC((uint64_t)v63, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v71);
}

uint64_t sub_10011AADC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63[2];
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[6];

  v60 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v53 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v61 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v58 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v53 - v18;
  v20 = type metadata accessor for EditorialSearchResult(0, v17);
  v71[3] = v20;
  v71[4] = sub_100005C94(&qword_10082E510, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v71[0] = a1;
  sub_100022500((uint64_t)v71, (uint64_t)v65);
  swift_retain(a1);
  v21 = sub_10007B804((uint64_t *)&unk_10082C420);
  v22 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v63, v65, v21, v22, 6))
  {
    v59 = v5;
    sub_10000F5F4(v63, (uint64_t)v68);
    v23 = v69;
    v24 = v70;
    sub_100060B40(v68, v69);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v53 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v53 + 32;
        v57 = v20;
        v54 = v13;
        v55 = v14;
        v56 = v19;
        do
        {
          sub_100022500(v27, (uint64_t)v65);
          v29 = v66;
          v28 = v67;
          sub_100060B40(v65, v66);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_100005C94(&qword_10082E518, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v32 = v61;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            v33 = v30(v32, 1, v13);
            if ((_DWORD)v33 == 1)
            {
              sub_1000057AC(v61, &qword_10082E4B0);
              v35 = type metadata accessor for ImpressionMetrics.ID(0, v34);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v62, 1, 1, v35);
            }
            else
            {
              v36 = v62;
              v37 = v61;
              ImpressionMetrics.id.getter(v33);
              v38.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v37, v13);
              v39 = type metadata accessor for ImpressionMetrics.ID(0, v38);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v36, 0, 1, v39);
            }
            v40 = (uint64_t)v59;
            if (v60)
            {
              sub_100005B48(v62, (uint64_t)v59, &qword_10084D980);
              v42 = type metadata accessor for ImpressionMetrics.ID(0, v41);
              v43 = *(_QWORD *)(v42 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42) == 1)
              {
                sub_1000057AC(v40, &qword_10084D980);
                v44 = 0;
                v45 = 0;
              }
              else
              {
                v46 = v40;
                v44 = ImpressionMetrics.ID.element.getter();
                v45 = v47;
                v13 = v54;
                (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v42);
              }
              v14 = v55;
              v48 = v58;
              v49 = v56;
              ImpressionMetrics.withParentId(_:)(v44, v45);
              swift_bridgeObjectRelease(v45);
              ImpressionsCalculator.addElement(_:at:)(v48);
              v50 = *(void (**)(char *, uint64_t))(v14 + 8);
              v51 = v48;
              v19 = v49;
              v50(v51, v13);
              sub_1000057AC(v62, &qword_10084D980);
              v50(v49, v13);
              v20 = v57;
            }
            else
            {
              sub_1000057AC(v62, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v65);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v53);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v68);
  }
  else
  {
    v64 = 0;
    memset(v63, 0, sizeof(v63));
    sub_1000057AC((uint64_t)v63, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v71);
}

uint64_t sub_10011B044(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63[2];
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[6];

  v60 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v53 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v61 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v58 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v53 - v18;
  v20 = type metadata accessor for InAppPurchaseLockup(0, v17);
  v71[3] = v20;
  v71[4] = sub_100005C94(&qword_10082E520, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v71[0] = a1;
  sub_100022500((uint64_t)v71, (uint64_t)v65);
  swift_retain(a1);
  v21 = sub_10007B804((uint64_t *)&unk_10082C420);
  v22 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v63, v65, v21, v22, 6))
  {
    v59 = v5;
    sub_10000F5F4(v63, (uint64_t)v68);
    v23 = v69;
    v24 = v70;
    sub_100060B40(v68, v69);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v53 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v53 + 32;
        v57 = v20;
        v54 = v13;
        v55 = v14;
        v56 = v19;
        do
        {
          sub_100022500(v27, (uint64_t)v65);
          v29 = v66;
          v28 = v67;
          sub_100060B40(v65, v66);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_100005C94(&qword_10082E528, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v32 = v61;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            v33 = v30(v32, 1, v13);
            if ((_DWORD)v33 == 1)
            {
              sub_1000057AC(v61, &qword_10082E4B0);
              v35 = type metadata accessor for ImpressionMetrics.ID(0, v34);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v62, 1, 1, v35);
            }
            else
            {
              v36 = v62;
              v37 = v61;
              ImpressionMetrics.id.getter(v33);
              v38.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v37, v13);
              v39 = type metadata accessor for ImpressionMetrics.ID(0, v38);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v36, 0, 1, v39);
            }
            v40 = (uint64_t)v59;
            if (v60)
            {
              sub_100005B48(v62, (uint64_t)v59, &qword_10084D980);
              v42 = type metadata accessor for ImpressionMetrics.ID(0, v41);
              v43 = *(_QWORD *)(v42 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42) == 1)
              {
                sub_1000057AC(v40, &qword_10084D980);
                v44 = 0;
                v45 = 0;
              }
              else
              {
                v46 = v40;
                v44 = ImpressionMetrics.ID.element.getter();
                v45 = v47;
                v13 = v54;
                (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v42);
              }
              v14 = v55;
              v48 = v58;
              v49 = v56;
              ImpressionMetrics.withParentId(_:)(v44, v45);
              swift_bridgeObjectRelease(v45);
              ImpressionsCalculator.addElement(_:at:)(v48);
              v50 = *(void (**)(char *, uint64_t))(v14 + 8);
              v51 = v48;
              v19 = v49;
              v50(v51, v13);
              sub_1000057AC(v62, &qword_10084D980);
              v50(v49, v13);
              v20 = v57;
            }
            else
            {
              sub_1000057AC(v62, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v65);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v53);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v68);
  }
  else
  {
    v64 = 0;
    memset(v63, 0, sizeof(v63));
    sub_1000057AC((uint64_t)v63, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v71);
}

uint64_t sub_10011B5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63[2];
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[6];

  v60 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v53 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v61 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v58 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v53 - v18;
  v20 = type metadata accessor for LockupCollectionSearchResult(0, v17);
  v71[3] = v20;
  v71[4] = sub_100005C94(&qword_10082E530, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v71[0] = a1;
  sub_100022500((uint64_t)v71, (uint64_t)v65);
  swift_retain(a1);
  v21 = sub_10007B804((uint64_t *)&unk_10082C420);
  v22 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v63, v65, v21, v22, 6))
  {
    v59 = v5;
    sub_10000F5F4(v63, (uint64_t)v68);
    v23 = v69;
    v24 = v70;
    sub_100060B40(v68, v69);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v53 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v53 + 32;
        v57 = v20;
        v54 = v13;
        v55 = v14;
        v56 = v19;
        do
        {
          sub_100022500(v27, (uint64_t)v65);
          v29 = v66;
          v28 = v67;
          sub_100060B40(v65, v66);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_100005C94(&qword_10082E538, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v32 = v61;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            v33 = v30(v32, 1, v13);
            if ((_DWORD)v33 == 1)
            {
              sub_1000057AC(v61, &qword_10082E4B0);
              v35 = type metadata accessor for ImpressionMetrics.ID(0, v34);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v62, 1, 1, v35);
            }
            else
            {
              v36 = v62;
              v37 = v61;
              ImpressionMetrics.id.getter(v33);
              v38.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v37, v13);
              v39 = type metadata accessor for ImpressionMetrics.ID(0, v38);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v36, 0, 1, v39);
            }
            v40 = (uint64_t)v59;
            if (v60)
            {
              sub_100005B48(v62, (uint64_t)v59, &qword_10084D980);
              v42 = type metadata accessor for ImpressionMetrics.ID(0, v41);
              v43 = *(_QWORD *)(v42 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42) == 1)
              {
                sub_1000057AC(v40, &qword_10084D980);
                v44 = 0;
                v45 = 0;
              }
              else
              {
                v46 = v40;
                v44 = ImpressionMetrics.ID.element.getter();
                v45 = v47;
                v13 = v54;
                (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v42);
              }
              v14 = v55;
              v48 = v58;
              v49 = v56;
              ImpressionMetrics.withParentId(_:)(v44, v45);
              swift_bridgeObjectRelease(v45);
              ImpressionsCalculator.addElement(_:at:)(v48);
              v50 = *(void (**)(char *, uint64_t))(v14 + 8);
              v51 = v48;
              v19 = v49;
              v50(v51, v13);
              sub_1000057AC(v62, &qword_10084D980);
              v50(v49, v13);
              v20 = v57;
            }
            else
            {
              sub_1000057AC(v62, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v65);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v53);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v68);
  }
  else
  {
    v64 = 0;
    memset(v63, 0, sizeof(v63));
    sub_1000057AC((uint64_t)v63, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v71);
}

uint64_t sub_10011BB14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[6];

  v59 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v61 = (uint64_t)&v52 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v60 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v57 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - v17;
  v19 = type metadata accessor for AppEventSearchResult(0);
  v70[3] = v19;
  v70[4] = sub_100005C94((unint64_t *)&qword_10082E540, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v70[0] = a1;
  sub_100022500((uint64_t)v70, (uint64_t)v64);
  swift_retain(a1);
  v20 = sub_10007B804((uint64_t *)&unk_10082C420);
  v21 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v62, v64, v20, v21, 6))
  {
    v58 = v5;
    sub_10000F5F4(v62, (uint64_t)v67);
    v22 = v68;
    v23 = v69;
    sub_100060B40(v67, v68);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v52 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v52 + 32;
        v56 = v19;
        v53 = v13;
        v54 = v14;
        v55 = v18;
        do
        {
          sub_100022500(v26, (uint64_t)v64);
          v28 = v65;
          v27 = v66;
          sub_100060B40(v64, v65);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_100005C94(&qword_10082E548, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v31 = v60;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            v32 = v29(v31, 1, v13);
            if ((_DWORD)v32 == 1)
            {
              sub_1000057AC(v60, &qword_10082E4B0);
              v34 = type metadata accessor for ImpressionMetrics.ID(0, v33);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v61, 1, 1, v34);
            }
            else
            {
              v35 = v61;
              v36 = v60;
              ImpressionMetrics.id.getter(v32);
              v37.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v38 = type metadata accessor for ImpressionMetrics.ID(0, v37);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 0, 1, v38);
            }
            v39 = (uint64_t)v58;
            if (v59)
            {
              sub_100005B48(v61, (uint64_t)v58, &qword_10084D980);
              v41 = type metadata accessor for ImpressionMetrics.ID(0, v40);
              v42 = *(_QWORD *)(v41 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v39, 1, v41) == 1)
              {
                sub_1000057AC(v39, &qword_10084D980);
                v43 = 0;
                v44 = 0;
              }
              else
              {
                v45 = v39;
                v43 = ImpressionMetrics.ID.element.getter();
                v44 = v46;
                v13 = v53;
                (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v41);
              }
              v14 = v54;
              v47 = v57;
              v48 = v55;
              ImpressionMetrics.withParentId(_:)(v43, v44);
              swift_bridgeObjectRelease(v44);
              ImpressionsCalculator.addElement(_:at:)(v47);
              v49 = *(void (**)(char *, uint64_t))(v14 + 8);
              v50 = v47;
              v18 = v48;
              v49(v50, v13);
              sub_1000057AC(v61, &qword_10084D980);
              v49(v48, v13);
              v19 = v56;
            }
            else
            {
              sub_1000057AC(v61, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v64);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v52);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v67);
  }
  else
  {
    v63 = 0;
    memset(v62, 0, sizeof(v62));
    sub_1000057AC((uint64_t)v62, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v70);
}

uint64_t sub_10011C07C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __n128 v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64[2];
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[6];

  v61 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v63 = (uint64_t)&v54 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v62 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v59 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v54 - v18;
  v20 = type metadata accessor for MixedMediaLockup(0, v17);
  v72[3] = v20;
  v72[4] = sub_100005C94(&qword_10082E4B8, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v72[0] = a1;
  sub_100022500((uint64_t)v72, (uint64_t)v66);
  swift_retain(a1);
  v21 = sub_10007B804((uint64_t *)&unk_10082C420);
  v22 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v64, v66, v21, v22, 6))
  {
    v60 = v5;
    sub_10000F5F4(v64, (uint64_t)v69);
    v23 = v70;
    v24 = v71;
    sub_100060B40(v69, v70);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v54 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v54 + 32;
        v58 = v20;
        v55 = v13;
        v56 = v14;
        v57 = v19;
        do
        {
          sub_100022500(v27, (uint64_t)v66);
          v29 = v67;
          v28 = v68;
          sub_100060B40(v66, v67);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_100005C94(&qword_10082E4C0, (uint64_t (*)(uint64_t))&type metadata accessor for MixedMediaLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v32 = v62;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            v33 = v30(v32, 1, v13);
            if ((_DWORD)v33 == 1)
            {
              sub_1000057AC(v62, &qword_10082E4B0);
              v35 = type metadata accessor for ImpressionMetrics.ID(0, v34);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v63, 1, 1, v35);
            }
            else
            {
              v36 = v63;
              v37 = v62;
              ImpressionMetrics.id.getter(v33);
              v38.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v37, v13);
              v39 = type metadata accessor for ImpressionMetrics.ID(0, v38);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v36, 0, 1, v39);
            }
            v40 = (uint64_t)v60;
            if (v61)
            {
              sub_100005B48(v63, (uint64_t)v60, &qword_10084D980);
              v42 = type metadata accessor for ImpressionMetrics.ID(0, v41);
              v43 = *(_QWORD *)(v42 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42) == 1)
              {
                sub_1000057AC(v40, &qword_10084D980);
                v44 = 0;
                v45 = 0;
              }
              else
              {
                v46 = v40;
                v44 = ImpressionMetrics.ID.element.getter();
                v45 = v47;
                v13 = v55;
                (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v42);
              }
              v14 = v56;
              v48 = v59;
              v49 = v57;
              ImpressionMetrics.withParentId(_:)(v44, v45);
              v50 = swift_bridgeObjectRelease(v45);
              ImpressionsCalculator.removeElement(_:)(v48, v50);
              v51 = *(void (**)(char *, uint64_t))(v14 + 8);
              v52 = v48;
              v19 = v49;
              v51(v52, v13);
              sub_1000057AC(v63, &qword_10084D980);
              v51(v49, v13);
              v20 = v58;
            }
            else
            {
              sub_1000057AC(v63, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v66);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v54);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v69);
  }
  else
  {
    v65 = 0;
    memset(v64, 0, sizeof(v64));
    sub_1000057AC((uint64_t)v64, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v72);
}

uint64_t sub_10011C5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __n128 v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64[2];
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[6];

  v61 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v63 = (uint64_t)&v54 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v62 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v59 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v54 - v18;
  v20 = type metadata accessor for EditorialSearchResult(0, v17);
  v72[3] = v20;
  v72[4] = sub_100005C94(&qword_10082E510, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v72[0] = a1;
  sub_100022500((uint64_t)v72, (uint64_t)v66);
  swift_retain(a1);
  v21 = sub_10007B804((uint64_t *)&unk_10082C420);
  v22 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v64, v66, v21, v22, 6))
  {
    v60 = v5;
    sub_10000F5F4(v64, (uint64_t)v69);
    v23 = v70;
    v24 = v71;
    sub_100060B40(v69, v70);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v54 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v54 + 32;
        v58 = v20;
        v55 = v13;
        v56 = v14;
        v57 = v19;
        do
        {
          sub_100022500(v27, (uint64_t)v66);
          v29 = v67;
          v28 = v68;
          sub_100060B40(v66, v67);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_100005C94(&qword_10082E518, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v32 = v62;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            v33 = v30(v32, 1, v13);
            if ((_DWORD)v33 == 1)
            {
              sub_1000057AC(v62, &qword_10082E4B0);
              v35 = type metadata accessor for ImpressionMetrics.ID(0, v34);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v63, 1, 1, v35);
            }
            else
            {
              v36 = v63;
              v37 = v62;
              ImpressionMetrics.id.getter(v33);
              v38.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v37, v13);
              v39 = type metadata accessor for ImpressionMetrics.ID(0, v38);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v36, 0, 1, v39);
            }
            v40 = (uint64_t)v60;
            if (v61)
            {
              sub_100005B48(v63, (uint64_t)v60, &qword_10084D980);
              v42 = type metadata accessor for ImpressionMetrics.ID(0, v41);
              v43 = *(_QWORD *)(v42 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42) == 1)
              {
                sub_1000057AC(v40, &qword_10084D980);
                v44 = 0;
                v45 = 0;
              }
              else
              {
                v46 = v40;
                v44 = ImpressionMetrics.ID.element.getter();
                v45 = v47;
                v13 = v55;
                (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v42);
              }
              v14 = v56;
              v48 = v59;
              v49 = v57;
              ImpressionMetrics.withParentId(_:)(v44, v45);
              v50 = swift_bridgeObjectRelease(v45);
              ImpressionsCalculator.removeElement(_:)(v48, v50);
              v51 = *(void (**)(char *, uint64_t))(v14 + 8);
              v52 = v48;
              v19 = v49;
              v51(v52, v13);
              sub_1000057AC(v63, &qword_10084D980);
              v51(v49, v13);
              v20 = v58;
            }
            else
            {
              sub_1000057AC(v63, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v66);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v54);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v69);
  }
  else
  {
    v65 = 0;
    memset(v64, 0, sizeof(v64));
    sub_1000057AC((uint64_t)v64, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v72);
}

uint64_t sub_10011CAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __n128 v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64[2];
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[6];

  v61 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v63 = (uint64_t)&v54 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v62 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v59 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v54 - v18;
  v20 = type metadata accessor for InAppPurchaseLockup(0, v17);
  v72[3] = v20;
  v72[4] = sub_100005C94(&qword_10082E520, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
  v72[0] = a1;
  sub_100022500((uint64_t)v72, (uint64_t)v66);
  swift_retain(a1);
  v21 = sub_10007B804((uint64_t *)&unk_10082C420);
  v22 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v64, v66, v21, v22, 6))
  {
    v60 = v5;
    sub_10000F5F4(v64, (uint64_t)v69);
    v23 = v70;
    v24 = v71;
    sub_100060B40(v69, v70);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v54 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v54 + 32;
        v58 = v20;
        v55 = v13;
        v56 = v14;
        v57 = v19;
        do
        {
          sub_100022500(v27, (uint64_t)v66);
          v29 = v67;
          v28 = v68;
          sub_100060B40(v66, v67);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_100005C94(&qword_10082E528, (uint64_t (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup, (uint64_t)&protocol conformance descriptor for Lockup);
            v32 = v62;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            v33 = v30(v32, 1, v13);
            if ((_DWORD)v33 == 1)
            {
              sub_1000057AC(v62, &qword_10082E4B0);
              v35 = type metadata accessor for ImpressionMetrics.ID(0, v34);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v63, 1, 1, v35);
            }
            else
            {
              v36 = v63;
              v37 = v62;
              ImpressionMetrics.id.getter(v33);
              v38.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v37, v13);
              v39 = type metadata accessor for ImpressionMetrics.ID(0, v38);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v36, 0, 1, v39);
            }
            v40 = (uint64_t)v60;
            if (v61)
            {
              sub_100005B48(v63, (uint64_t)v60, &qword_10084D980);
              v42 = type metadata accessor for ImpressionMetrics.ID(0, v41);
              v43 = *(_QWORD *)(v42 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42) == 1)
              {
                sub_1000057AC(v40, &qword_10084D980);
                v44 = 0;
                v45 = 0;
              }
              else
              {
                v46 = v40;
                v44 = ImpressionMetrics.ID.element.getter();
                v45 = v47;
                v13 = v55;
                (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v42);
              }
              v14 = v56;
              v48 = v59;
              v49 = v57;
              ImpressionMetrics.withParentId(_:)(v44, v45);
              v50 = swift_bridgeObjectRelease(v45);
              ImpressionsCalculator.removeElement(_:)(v48, v50);
              v51 = *(void (**)(char *, uint64_t))(v14 + 8);
              v52 = v48;
              v19 = v49;
              v51(v52, v13);
              sub_1000057AC(v63, &qword_10084D980);
              v51(v49, v13);
              v20 = v58;
            }
            else
            {
              sub_1000057AC(v63, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v66);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v54);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v69);
  }
  else
  {
    v65 = 0;
    memset(v64, 0, sizeof(v64));
    sub_1000057AC((uint64_t)v64, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v72);
}

uint64_t sub_10011D000(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __n128 v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64[2];
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[6];

  v61 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v63 = (uint64_t)&v54 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v62 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v59 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v54 - v18;
  v20 = type metadata accessor for LockupCollectionSearchResult(0, v17);
  v72[3] = v20;
  v72[4] = sub_100005C94(&qword_10082E530, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v72[0] = a1;
  sub_100022500((uint64_t)v72, (uint64_t)v66);
  swift_retain(a1);
  v21 = sub_10007B804((uint64_t *)&unk_10082C420);
  v22 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v64, v66, v21, v22, 6))
  {
    v60 = v5;
    sub_10000F5F4(v64, (uint64_t)v69);
    v23 = v70;
    v24 = v71;
    sub_100060B40(v69, v70);
    v25 = dispatch thunk of ComponentModelContainer.children.getter(v23, v24);
    if (v25)
    {
      v54 = v25;
      v26 = *(_QWORD *)(v25 + 16);
      if (v26)
      {
        v27 = v54 + 32;
        v58 = v20;
        v55 = v13;
        v56 = v14;
        v57 = v19;
        do
        {
          sub_100022500(v27, (uint64_t)v66);
          v29 = v67;
          v28 = v68;
          sub_100060B40(v66, v67);
          dispatch thunk of ViewModel.impressionMetrics.getter(v29, *(_QWORD *)(v28 + 8));
          v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v30((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
            v31 = sub_100005C94(&qword_10082E538, (uint64_t (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v32 = v62;
            dispatch thunk of ViewModel.impressionMetrics.getter(v20, v31);
            v33 = v30(v32, 1, v13);
            if ((_DWORD)v33 == 1)
            {
              sub_1000057AC(v62, &qword_10082E4B0);
              v35 = type metadata accessor for ImpressionMetrics.ID(0, v34);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v63, 1, 1, v35);
            }
            else
            {
              v36 = v63;
              v37 = v62;
              ImpressionMetrics.id.getter(v33);
              v38.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v37, v13);
              v39 = type metadata accessor for ImpressionMetrics.ID(0, v38);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v36, 0, 1, v39);
            }
            v40 = (uint64_t)v60;
            if (v61)
            {
              sub_100005B48(v63, (uint64_t)v60, &qword_10084D980);
              v42 = type metadata accessor for ImpressionMetrics.ID(0, v41);
              v43 = *(_QWORD *)(v42 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42) == 1)
              {
                sub_1000057AC(v40, &qword_10084D980);
                v44 = 0;
                v45 = 0;
              }
              else
              {
                v46 = v40;
                v44 = ImpressionMetrics.ID.element.getter();
                v45 = v47;
                v13 = v55;
                (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v42);
              }
              v14 = v56;
              v48 = v59;
              v49 = v57;
              ImpressionMetrics.withParentId(_:)(v44, v45);
              v50 = swift_bridgeObjectRelease(v45);
              ImpressionsCalculator.removeElement(_:)(v48, v50);
              v51 = *(void (**)(char *, uint64_t))(v14 + 8);
              v52 = v48;
              v19 = v49;
              v51(v52, v13);
              sub_1000057AC(v63, &qword_10084D980);
              v51(v49, v13);
              v20 = v58;
            }
            else
            {
              sub_1000057AC(v63, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v66);
          v27 += 40;
          --v26;
        }
        while (v26);
      }
      swift_bridgeObjectRelease(v54);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v69);
  }
  else
  {
    v65 = 0;
    memset(v64, 0, sizeof(v64));
    sub_1000057AC((uint64_t)v64, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v72);
}

uint64_t sub_10011D52C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __n128 v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63[2];
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[6];

  v60 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v53 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v61 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v58 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - v17;
  v19 = type metadata accessor for AppEventSearchResult(0);
  v71[3] = v19;
  v71[4] = sub_100005C94((unint64_t *)&qword_10082E540, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
  v71[0] = a1;
  sub_100022500((uint64_t)v71, (uint64_t)v65);
  swift_retain(a1);
  v20 = sub_10007B804((uint64_t *)&unk_10082C420);
  v21 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v63, v65, v20, v21, 6))
  {
    v59 = v5;
    sub_10000F5F4(v63, (uint64_t)v68);
    v22 = v69;
    v23 = v70;
    sub_100060B40(v68, v69);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v53 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v53 + 32;
        v57 = v19;
        v54 = v13;
        v55 = v14;
        v56 = v18;
        do
        {
          sub_100022500(v26, (uint64_t)v65);
          v28 = v66;
          v27 = v67;
          sub_100060B40(v65, v66);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_100005C94(&qword_10082E548, (uint64_t (*)(uint64_t))&type metadata accessor for AppEventSearchResult, (uint64_t)&protocol conformance descriptor for SearchResult);
            v31 = v61;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            v32 = v29(v31, 1, v13);
            if ((_DWORD)v32 == 1)
            {
              sub_1000057AC(v61, &qword_10082E4B0);
              v34 = type metadata accessor for ImpressionMetrics.ID(0, v33);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v62, 1, 1, v34);
            }
            else
            {
              v35 = v62;
              v36 = v61;
              ImpressionMetrics.id.getter(v32);
              v37.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v38 = type metadata accessor for ImpressionMetrics.ID(0, v37);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 0, 1, v38);
            }
            v39 = (uint64_t)v59;
            if (v60)
            {
              sub_100005B48(v62, (uint64_t)v59, &qword_10084D980);
              v41 = type metadata accessor for ImpressionMetrics.ID(0, v40);
              v42 = *(_QWORD *)(v41 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v39, 1, v41) == 1)
              {
                sub_1000057AC(v39, &qword_10084D980);
                v43 = 0;
                v44 = 0;
              }
              else
              {
                v45 = v39;
                v43 = ImpressionMetrics.ID.element.getter();
                v44 = v46;
                v13 = v54;
                (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v41);
              }
              v14 = v55;
              v47 = v58;
              v48 = v56;
              ImpressionMetrics.withParentId(_:)(v43, v44);
              v49 = swift_bridgeObjectRelease(v44);
              ImpressionsCalculator.removeElement(_:)(v47, v49);
              v50 = *(void (**)(char *, uint64_t))(v14 + 8);
              v51 = v47;
              v18 = v48;
              v50(v51, v13);
              sub_1000057AC(v62, &qword_10084D980);
              v50(v48, v13);
              v19 = v57;
            }
            else
            {
              sub_1000057AC(v62, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v65);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v53);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v68);
  }
  else
  {
    v64 = 0;
    memset(v63, 0, sizeof(v63));
    sub_1000057AC((uint64_t)v63, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v71);
}

uint64_t sub_10011DA58()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10011DA7C()
{
  uint64_t v0;

  sub_100116F5C(v0);
}

uint64_t sub_10011DA84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[6];

  v59 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v61 = (uint64_t)&v52 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v60 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v57 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - v17;
  v19 = type metadata accessor for LinkableText(0);
  v70[3] = v19;
  v70[4] = sub_100005C94((unint64_t *)&qword_10082E560, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v70[0] = a1;
  sub_100022500((uint64_t)v70, (uint64_t)v64);
  swift_retain(a1);
  v20 = sub_10007B804((uint64_t *)&unk_10082C420);
  v21 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v62, v64, v20, v21, 6))
  {
    v58 = v5;
    sub_10000F5F4(v62, (uint64_t)v67);
    v22 = v68;
    v23 = v69;
    sub_100060B40(v67, v68);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v52 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v52 + 32;
        v56 = v19;
        v53 = v13;
        v54 = v14;
        v55 = v18;
        do
        {
          sub_100022500(v26, (uint64_t)v64);
          v28 = v65;
          v27 = v66;
          sub_100060B40(v64, v65);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_100005C94(&qword_10082E568, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
            v31 = v60;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            v32 = v29(v31, 1, v13);
            if ((_DWORD)v32 == 1)
            {
              sub_1000057AC(v60, &qword_10082E4B0);
              v34 = type metadata accessor for ImpressionMetrics.ID(0, v33);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v61, 1, 1, v34);
            }
            else
            {
              v35 = v61;
              v36 = v60;
              ImpressionMetrics.id.getter(v32);
              v37.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v38 = type metadata accessor for ImpressionMetrics.ID(0, v37);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 0, 1, v38);
            }
            v39 = (uint64_t)v58;
            if (v59)
            {
              sub_100005B48(v61, (uint64_t)v58, &qword_10084D980);
              v41 = type metadata accessor for ImpressionMetrics.ID(0, v40);
              v42 = *(_QWORD *)(v41 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v39, 1, v41) == 1)
              {
                sub_1000057AC(v39, &qword_10084D980);
                v43 = 0;
                v44 = 0;
              }
              else
              {
                v45 = v39;
                v43 = ImpressionMetrics.ID.element.getter();
                v44 = v46;
                v13 = v53;
                (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v41);
              }
              v14 = v54;
              v47 = v57;
              v48 = v55;
              ImpressionMetrics.withParentId(_:)(v43, v44);
              swift_bridgeObjectRelease(v44);
              ImpressionsCalculator.addElement(_:at:)(v47);
              v49 = *(void (**)(char *, uint64_t))(v14 + 8);
              v50 = v47;
              v18 = v48;
              v49(v50, v13);
              sub_1000057AC(v61, &qword_10084D980);
              v49(v48, v13);
              v19 = v56;
            }
            else
            {
              sub_1000057AC(v61, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v64);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v52);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v67);
  }
  else
  {
    v63 = 0;
    memset(v62, 0, sizeof(v62));
    sub_1000057AC((uint64_t)v62, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v70);
}

void sub_10011DFEC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v4 = v3;
  v8 = type metadata accessor for SearchTransparencyView();
  v9 = static UICollectionReusableView.elementKind.getter();
  if (v9 == a2 && v10 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v12 = v10;
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v9, v10, 0);
    swift_bridgeObjectRelease(v12);
    if ((v13 & 1) == 0)
      return;
  }
  v14 = swift_dynamicCastClass(a1, v8);
  if (v14)
  {
    v15 = (void *)v14;
    v24 = a1;
    v16 = dispatch thunk of SearchResultsPresenter.transparencyLink.getter();
    if (v16)
    {
      v17 = v16;
      v18 = LinkableText.linkedSubstrings.getter();
      sub_100113CF0(v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))sub_100113FA4);
      v20 = v19;
      swift_bridgeObjectRelease(v18);
      v22 = LinkableText.styledText.getter(v21);
      sub_1002B1A24(v22, 0, v20);
      swift_bridgeObjectRelease(v20);
      objc_msgSend(v15, "setNeedsLayout", swift_release(v22).n128_f64[0]);
      swift_retain(v17);
      sub_10011954C(v23, v24, v4);
      swift_release_n(v17, 2);

    }
    else
    {

    }
  }
}

uint64_t sub_10011E18C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __n128 v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63[2];
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[6];

  v60 = a2;
  v3 = sub_10007B804(&qword_10084D980);
  __chkstk_darwin(v3);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v53 - v7;
  v8 = sub_10007B804(&qword_10082E4B0);
  __chkstk_darwin(v8);
  v61 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - v11;
  v13 = type metadata accessor for ImpressionMetrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v58 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - v17;
  v19 = type metadata accessor for LinkableText(0);
  v71[3] = v19;
  v71[4] = sub_100005C94((unint64_t *)&qword_10082E560, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
  v71[0] = a1;
  sub_100022500((uint64_t)v71, (uint64_t)v65);
  swift_retain(a1);
  v20 = sub_10007B804((uint64_t *)&unk_10082C420);
  v21 = sub_10007B804(&qword_10082E4C8);
  if (swift_dynamicCast(v63, v65, v20, v21, 6))
  {
    v59 = v5;
    sub_10000F5F4(v63, (uint64_t)v68);
    v22 = v69;
    v23 = v70;
    sub_100060B40(v68, v69);
    v24 = dispatch thunk of ComponentModelContainer.children.getter(v22, v23);
    if (v24)
    {
      v53 = v24;
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        v26 = v53 + 32;
        v57 = v19;
        v54 = v13;
        v55 = v14;
        v56 = v18;
        do
        {
          sub_100022500(v26, (uint64_t)v65);
          v28 = v66;
          v27 = v67;
          sub_100060B40(v65, v66);
          dispatch thunk of ViewModel.impressionMetrics.getter(v28, *(_QWORD *)(v27 + 8));
          v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
          if (v29((uint64_t)v12, 1, v13) == 1)
          {
            sub_1000057AC((uint64_t)v12, &qword_10082E4B0);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
            v30 = sub_100005C94(&qword_10082E568, (uint64_t (*)(uint64_t))&type metadata accessor for LinkableText, (uint64_t)&protocol conformance descriptor for LinkableText);
            v31 = v61;
            dispatch thunk of ViewModel.impressionMetrics.getter(v19, v30);
            v32 = v29(v31, 1, v13);
            if ((_DWORD)v32 == 1)
            {
              sub_1000057AC(v61, &qword_10082E4B0);
              v34 = type metadata accessor for ImpressionMetrics.ID(0, v33);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v62, 1, 1, v34);
            }
            else
            {
              v35 = v62;
              v36 = v61;
              ImpressionMetrics.id.getter(v32);
              v37.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v14 + 8))(v36, v13);
              v38 = type metadata accessor for ImpressionMetrics.ID(0, v37);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v35, 0, 1, v38);
            }
            v39 = (uint64_t)v59;
            if (v60)
            {
              sub_100005B48(v62, (uint64_t)v59, &qword_10084D980);
              v41 = type metadata accessor for ImpressionMetrics.ID(0, v40);
              v42 = *(_QWORD *)(v41 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v39, 1, v41) == 1)
              {
                sub_1000057AC(v39, &qword_10084D980);
                v43 = 0;
                v44 = 0;
              }
              else
              {
                v45 = v39;
                v43 = ImpressionMetrics.ID.element.getter();
                v44 = v46;
                v13 = v54;
                (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v41);
              }
              v14 = v55;
              v47 = v58;
              v48 = v56;
              ImpressionMetrics.withParentId(_:)(v43, v44);
              v49 = swift_bridgeObjectRelease(v44);
              ImpressionsCalculator.removeElement(_:)(v47, v49);
              v50 = *(void (**)(char *, uint64_t))(v14 + 8);
              v51 = v47;
              v18 = v48;
              v50(v51, v13);
              sub_1000057AC(v62, &qword_10084D980);
              v50(v48, v13);
              v19 = v57;
            }
            else
            {
              sub_1000057AC(v62, &qword_10084D980);
              (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
            }
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v65);
          v26 += 40;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v53);
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v68);
  }
  else
  {
    v64 = 0;
    memset(v63, 0, sizeof(v63));
    sub_1000057AC((uint64_t)v63, &qword_10082E4D0);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v71);
}

void sub_10011E6B8(uint64_t a1)
{
  sub_10011ED00(40.0, a1, qword_10088A678);
}

void sub_10011E6CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString *v24;
  uint64_t v25;

  v0 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v0);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FontUseCase(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - v14;
  v16 = type metadata accessor for BreakoutDetailsView.Config(0);
  sub_100033BAC(v16, qword_10088A690);
  v17 = sub_10007AF70(v16, (uint64_t)qword_10088A690);
  if (qword_1008282D0 != -1)
    swift_once(&qword_1008282D0, sub_1003A789C);
  v18 = sub_10007AF70(v3, (uint64_t)qword_10088E2A0);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19(v15, v18, v3);
  if (qword_1008282E0 != -1)
    swift_once(&qword_1008282E0, sub_1003A78D4);
  v20 = sub_10007AF70(v3, (uint64_t)qword_10088E2D0);
  v19(v12, v20, v3);
  if (qword_1008282E8 != -1)
    swift_once(&qword_1008282E8, sub_1003A78F0);
  v21 = sub_10007AF70(v3, (uint64_t)qword_10088E2E8);
  v19(v2, v21, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if (qword_1008282F8 != -1)
    swift_once(&qword_1008282F8, sub_1003A7928);
  v22 = sub_10007AF70(v3, (uint64_t)qword_10088E318);
  v19(v9, v22, v3);
  if (qword_100828300 != -1)
    swift_once(&qword_100828300, sub_1003A7940);
  v23 = sub_10007AF70(v3, (uint64_t)qword_10088E330);
  v19(v6, v23, v3);
  v24 = UIContentSizeCategoryExtraExtraExtraLarge;
  sub_100164844((uint64_t)v15, (uint64_t)v12, 3, 0, (uint64_t)v2, (uint64_t)v9, (uint64_t)v6, 0, v17, 16.0, 40.0, 10.0, 36.0, 30.0, 24.0, 0.0, 0, 0, 0,
    0,
    0,
    0,
    1,
    (uint64_t)UIContentSizeCategoryExtraExtraExtraLarge,
    0);
}

void sub_10011EA00()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString *v23;
  uint64_t v24;

  v0 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v0);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FontUseCase(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - v14;
  v16 = type metadata accessor for BreakoutDetailsView.Config(0);
  sub_100033BAC(v16, qword_10088A6A8);
  v17 = sub_10007AF70(v16, (uint64_t)qword_10088A6A8);
  if (qword_1008282D0 != -1)
    swift_once(&qword_1008282D0, sub_1003A789C);
  v18 = sub_10007AF70(v3, (uint64_t)qword_10088E2A0);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19(v15, v18, v3);
  if (qword_1008282F0 != -1)
    swift_once(&qword_1008282F0, sub_1003A790C);
  v20 = sub_10007AF70(v3, (uint64_t)qword_10088E300);
  v19(v12, v20, v3);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  if (qword_1008282F8 != -1)
    swift_once(&qword_1008282F8, sub_1003A7928);
  v21 = sub_10007AF70(v3, (uint64_t)qword_10088E318);
  v19(v9, v21, v3);
  if (qword_100828300 != -1)
    swift_once(&qword_100828300, sub_1003A7940);
  v22 = sub_10007AF70(v3, (uint64_t)qword_10088E330);
  v19(v6, v22, v3);
  v23 = UIContentSizeCategoryExtraExtraExtraLarge;
  sub_100164844((uint64_t)v15, (uint64_t)v12, 0, 1, (uint64_t)v2, (uint64_t)v9, (uint64_t)v6, 0, v17, 16.0, 40.0, 10.0, 42.0, 30.0, 24.0, 0.0, 0, 0, 0,
    0,
    0,
    0,
    1,
    (uint64_t)UIContentSizeCategoryExtraExtraExtraLarge,
    0);
}

void sub_10011ECEC(uint64_t a1)
{
  sub_10011ED00(36.0, a1, qword_10088A6C0);
}

void sub_10011ED00(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString *v28;
  uint64_t v29;

  v5 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FontUseCase(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v29 - v19;
  v21 = type metadata accessor for BreakoutDetailsView.Config(0);
  sub_100033BAC(v21, a3);
  v22 = sub_10007AF70(v21, (uint64_t)a3);
  if (qword_1008282D0 != -1)
    swift_once(&qword_1008282D0, sub_1003A789C);
  v23 = sub_10007AF70(v8, (uint64_t)qword_10088E2A0);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v24(v20, v23, v8);
  if (qword_1008282D8 != -1)
    swift_once(&qword_1008282D8, sub_1003A78B8);
  v25 = sub_10007AF70(v8, (uint64_t)qword_10088E2B8);
  v24(v17, v25, v8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  if (qword_1008282F8 != -1)
    swift_once(&qword_1008282F8, sub_1003A7928);
  v26 = sub_10007AF70(v8, (uint64_t)qword_10088E318);
  v24(v14, v26, v8);
  if (qword_100828300 != -1)
    swift_once(&qword_100828300, sub_1003A7940);
  v27 = sub_10007AF70(v8, (uint64_t)qword_10088E330);
  v24(v11, v27, v8);
  v28 = UIContentSizeCategoryExtraExtraExtraLarge;
  sub_100164844((uint64_t)v20, (uint64_t)v17, 0, 1, (uint64_t)v7, (uint64_t)v14, (uint64_t)v11, 0, v22, 16.0, a1, 28.0, 26.0, 24.0, 24.0, 20.0, 0, 0, 0,
    0,
    1,
    0,
    1,
    (uint64_t)UIContentSizeCategoryExtraExtraExtraLarge,
    0);
}

void sub_10011EFEC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v0);
  v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FontUseCase(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v27 - v14;
  v16 = type metadata accessor for BreakoutDetailsView.Config(0);
  sub_100033BAC(v16, qword_10088A6D8);
  v17 = sub_10007AF70(v16, (uint64_t)qword_10088A6D8);
  if (qword_100828308 != -1)
    swift_once(&qword_100828308, sub_1003A795C);
  v18 = sub_10007AF70(v3, (uint64_t)qword_10088E348);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19(v15, v18, v3);
  if (qword_100828330 != -1)
    swift_once(&qword_100828330, sub_1003A79E8);
  v20 = sub_10007AF70(v3, (uint64_t)qword_10088E3C0);
  v19(v12, v20, v3);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  if (qword_100828340 != -1)
    swift_once(&qword_100828340, sub_1003A7A20);
  v21 = sub_10007AF70(v3, (uint64_t)qword_10088E3F0);
  v19(v9, v21, v3);
  if (qword_100828300 != -1)
    swift_once(&qword_100828300, sub_1003A7940);
  v22 = sub_10007AF70(v3, (uint64_t)qword_10088E330);
  v19(v6, v22, v3);
  sub_1000520B8();
  v23 = static UIColor.primaryText.getter();
  v24 = static UIColor.primaryText.getter();
  v25 = static UIColor.secondaryText.getter();
  v26 = static UIColor.secondaryText.getter();
  sub_100164844((uint64_t)v15, (uint64_t)v12, 0, 1, (uint64_t)v2, (uint64_t)v9, (uint64_t)v6, v23, v17, 16.0, 36.0, 16.0, 39.0, 34.0, 24.0, 0.0, v24, v25, v26,
    0,
    0,
    0,
    0,
    0,
    1);
}

void sub_10011F2F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_10007B804(&qword_10082D610);
  __chkstk_darwin(v0);
  v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FontUseCase(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v27 - v14;
  v16 = type metadata accessor for BreakoutDetailsView.Config(0);
  sub_100033BAC(v16, qword_10088A6F0);
  v17 = sub_10007AF70(v16, (uint64_t)qword_10088A6F0);
  if (qword_100828308 != -1)
    swift_once(&qword_100828308, sub_1003A795C);
  v18 = sub_10007AF70(v3, (uint64_t)qword_10088E348);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19(v15, v18, v3);
  if (qword_100828338 != -1)
    swift_once(&qword_100828338, sub_1003A7A04);
  v20 = sub_10007AF70(v3, (uint64_t)qword_10088E3D8);
  v19(v12, v20, v3);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  if (qword_100828348 != -1)
    swift_once(&qword_100828348, sub_1003A7A38);
  v21 = sub_10007AF70(v3, (uint64_t)qword_10088E408);
  v19(v9, v21, v3);
  if (qword_100828300 != -1)
    swift_once(&qword_100828300, sub_1003A7940);
  v22 = sub_10007AF70(v3, (uint64_t)qword_10088E330);
  v19(v6, v22, v3);
  sub_1000520B8();
  v23 = static UIColor.primaryText.getter();
  v24 = static UIColor.primaryText.getter();
  v25 = static UIColor.secondaryText.getter();
  v26 = static UIColor.secondaryText.getter();
  sub_100164844((uint64_t)v15, (uint64_t)v12, 0, 1, (uint64_t)v2, (uint64_t)v9, (uint64_t)v6, v23, v17, 13.0, 13.0, 16.0, 31.0, 26.0, 24.0, 0.0, v24, v25, v26,
    0,
    0,
    0,
    0,
    0,
    1);
}

uint64_t AXArcadeSubscribePageLayout.init(metrics:headerView:contentView:detailsView:offerButton:dismissButton:)@<X0>(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, void *a7@<X8>)
{
  memcpy(a7, __src, 0x190uLL);
  sub_100032F6C(a2, (uint64_t)a7 + 400);
  sub_100032F6C(a3, (uint64_t)a7 + 440);
  sub_10000F5F4(a4, (uint64_t)a7 + 480);
  sub_10000F5F4(a5, (uint64_t)a7 + 520);
  return sub_10000F5F4(a6, (uint64_t)a7 + 560);
}

uint64_t ProductLockupAccessibilityLayout.iconView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.contentMinimumHeight.setter(__int128 *a1)
{
  _QWORD *v1;

  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v1);
  return sub_10000F5F4(a1, (uint64_t)v1);
}

uint64_t ProductLockupAccessibilityLayout.titleText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 40, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.contentMaximumHeight.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 40);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);
  return sub_10000F5F4(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.contentMaximumHeight.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ProductLockupAccessibilityLayout.developerText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 80, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.contentTopSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 80);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);
  return sub_10000F5F4(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.contentTopSpace.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ProductLockupAccessibilityLayout.taglineText.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 120, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.detailsTopMargin.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 120);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);
  return sub_10000F5F4(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.detailsTopMargin.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.detailsHorizontalMargin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 160, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.detailsHorizontalMargin.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 160);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);
  return sub_10000F5F4(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.detailsHorizontalMargin.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ProductLockupAccessibilityLayout.offerButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 200, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.detailsBottomMargin.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 200);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);
  return sub_10000F5F4(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.detailsBottomMargin.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ProductLockupAccessibilityLayout.shareButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 240, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.offerButtonHeight.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 240);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);
  return sub_10000F5F4(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.offerButtonHeight.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

double AXArcadeSubscribePageLayout.Metrics.offerButtonMargins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 280);
}

void AXArcadeSubscribePageLayout.Metrics.offerButtonMargins.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[35] = a1;
  v4[36] = a2;
  v4[37] = a3;
  v4[38] = a4;
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.offerButtonMargins.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.isOfferButtonFullWidth.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 312);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.isOfferButtonFullWidth.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 312) = result;
  return result;
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.isOfferButtonFullWidth.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.buttonsSpacing.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 320, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.buttonsSpacing.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 320);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);
  return sub_10000F5F4(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.buttonsSpacing.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.bottomSpace.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 360, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.bottomSpace.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 360);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);
  return sub_10000F5F4(a1, (uint64_t)v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.bottomSpace.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10011F9F8(v1, a1);
}

uint64_t sub_10011F9F8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AXArcadeSubscribePageLayout.Metrics(a2, a1);
  return a2;
}

uint64_t AXArcadeSubscribePageLayout.headerView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10005054C(v1 + 400, a1);
}

uint64_t AXArcadeSubscribePageLayout.contentView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10005054C(v1 + 440, a1);
}

uint64_t AXArcadeSubscribePageLayout.detailsView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 480, a1);
}

uint64_t AXArcadeSubscribePageLayout.offerButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 520, a1);
}

uint64_t AXArcadeSubscribePageLayout.dismissButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100022500(v1 + 560, a1);
}

double AXArcadeSubscribePageLayout.contentViewSize(fitting:in:)(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = v3;
  v8 = type metadata accessor for FloatingPointRoundingRule(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v3[3];
  v13 = v4[4];
  sub_100060B40(v4, v12);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v12);
  AnyDimension.value(in:rounded:)(a1, v11, v12, v13);
  v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  swift_getObjectType();
  sub_1001212DC(a1, (uint64_t)v4, a2, a3);
  v15 = v4 + 5;
  v16 = v4[8];
  v17 = v4[9];
  sub_100060B40(v15, v16);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v16);
  AnyDimension.value(in:rounded:)(a1, v11, v16, v17);
  v14(v11, v8);
  return a2;
}

_QWORD *AXArcadeSubscribePageLayout.placeChildren(relativeTo:in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t ObjectType;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double MinY;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double MaxY;
  double v47;
  double v48;
  double v49;
  double v50;
  CGFloat v51;
  CGFloat MinX;
  CGFloat Width;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  double v79;
  CGFloat v80;
  double v81;
  CGFloat v82;
  double v83;
  double v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  CGFloat v89;
  CGFloat v90;
  CGFloat v91;
  CGFloat v92;
  uint64_t v93;
  uint64_t v95;
  CGFloat v96;
  CGFloat v97;
  CGFloat v98;
  CGFloat v99;
  CGFloat v100;
  CGFloat height;
  uint64_t v102;
  CGFloat v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  CGFloat v108;
  CGFloat v109;
  _QWORD v110[3];
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  double v117;
  double v118;
  _BYTE v119[56];
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;

  v7 = v6;
  v106 = a2;
  *(_QWORD *)&v105 = type metadata accessor for LayoutRect(0);
  v107 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v104 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FloatingPointRoundingRule(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)(v6 + 80);
  v19 = *(_QWORD *)(v6 + 104);
  v20 = *(_QWORD *)(v7 + 112);
  sub_100060B40(v18, v19);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v19);
  v21 = AnyDimension.value(in:rounded:)(a1, v17, v19, v20);
  v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v17, v14);
  v23 = *(_QWORD *)(v7 + 24);
  v24 = *(_QWORD *)(v7 + 32);
  sub_100060B40((_QWORD *)v7, v23);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v23);
  v25 = AnyDimension.value(in:rounded:)(a1, v17, v23, v24);
  v22(v17, v14);
  v26 = *(_QWORD *)(v7 + 64);
  v27 = *(_QWORD *)(v7 + 72);
  sub_100060B40((_QWORD *)(v7 + 40), v26);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v26);
  v28 = AnyDimension.value(in:rounded:)(a1, v17, v26, v27);
  v22(v17, v14);
  ObjectType = swift_getObjectType();
  v30 = sub_1001212DC(a1, v7, a5, a6);
  if (v25 > v30)
    v30 = v25;
  if (v30 >= v28)
    v31 = v28;
  else
    v31 = v30;
  sub_10005054C(v7 + 400, (uint64_t)&v116);
  v32 = v118;
  v102 = ObjectType;
  v108 = v31;
  v103 = v21;
  if (v118 == 0.0)
  {
    sub_1000057AC((uint64_t)&v116, (uint64_t *)&unk_10083C310);
    v38 = 0.0;
    MinY = 0.0;
    v35 = 0.0;
    v37 = 0.0;
  }
  else
  {
    sub_10000F5F4(&v116, (uint64_t)v110);
    v33 = v111;
    v34 = v112;
    sub_100060B40(v110, v111);
    v35 = Measurable.measuredSize(fitting:in:)(a1, v33, *(_QWORD *)(v34 + 8), a5, a6);
    v37 = v36;
    v125.origin.x = a3;
    v125.origin.y = a4;
    v125.size.width = a5;
    v125.size.height = a6;
    v38 = CGRectGetMidX(v125) + v35 * -0.5;
    v126.origin.x = a3;
    v126.origin.y = a4;
    v126.size.width = a5;
    v126.size.height = a6;
    MinY = CGRectGetMinY(v126);
    v41 = v111;
    v40 = v112;
    sub_100060B40(v110, v111);
    v42 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v41, v40, v42, v43, v44, v45);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v110);
  }
  sub_10005054C(v7 + 440, (uint64_t)&v116);
  v109 = a4;
  if (v118 == 0.0)
  {
    sub_1000057AC((uint64_t)&v116, (uint64_t *)&unk_10083C310);
    v47 = 0.0;
    if (v32 == 0.0)
      v48 = 0.0;
    else
      v48 = v35;
    if (v32 != 0.0)
      v47 = v37;
    v108 = v47;
    if (v32 == 0.0)
      v49 = a3;
    else
      v49 = v38;
    v96 = v48;
    v97 = v49;
    if (v32 == 0.0)
      v50 = a4;
    else
      v50 = MinY;
    v98 = v50;
  }
  else
  {
    sub_10000F5F4(&v116, (uint64_t)v110);
    if (v32 == 0.0)
    {
      v128.origin.x = a3;
      v128.origin.y = a4;
      v128.size.width = a5;
      v128.size.height = a6;
      MaxY = CGRectGetMinY(v128);
    }
    else
    {
      v127.origin.x = v38;
      v127.origin.y = MinY;
      v127.size.width = v35;
      v127.size.height = v37;
      MaxY = CGRectGetMaxY(v127);
    }
    v51 = v103 + MaxY;
    v129.origin.x = a3;
    v129.origin.y = a4;
    v129.size.width = a5;
    v129.size.height = a6;
    MinX = CGRectGetMinX(v129);
    v130.origin.x = a3;
    v130.origin.y = a4;
    v130.size.width = a5;
    v130.size.height = a6;
    Width = CGRectGetWidth(v130);
    v54 = v111;
    v55 = v112;
    sub_100060B40(v110, v111);
    v97 = MinX;
    v98 = v51;
    v96 = Width;
    v56 = CGRect.withLayoutDirection(in:relativeTo:)(a1);
    dispatch thunk of LayoutView.frame.setter(v54, v55, v56, v57, v58, v59);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v110);
  }
  v60 = v105;
  v61 = *(_QWORD *)(v7 + 184);
  v62 = *(_QWORD *)(v7 + 192);
  sub_100060B40((_QWORD *)(v7 + 160), v61);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v61);
  v63 = AnyDimension.value(in:rounded:)(a1, v17, v61, v62);
  v22(v17, v14);
  v64 = *(_QWORD *)(v7 + 144);
  v65 = *(_QWORD *)(v7 + 152);
  sub_100060B40((_QWORD *)(v7 + 120), v64);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v64);
  v66 = AnyDimension.value(in:rounded:)(a1, v17, v64, v65);
  v22(v17, v14);
  v67 = *(_QWORD *)(v7 + 224);
  v68 = *(_QWORD *)(v7 + 232);
  sub_100060B40((_QWORD *)(v7 + 200), v67);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ(v67);
  v69 = AnyDimension.value(in:rounded:)(a1, v17, v67, v68);
  v22(v17, v14);
  sub_100022500(v7 + 240, (uint64_t)v119);
  v105 = *(_OWORD *)(v7 + 280);
  v70 = *(_QWORD *)(v7 + 296);
  v71 = *(_QWORD *)(v7 + 304);
  LOBYTE(v68) = *(_BYTE *)(v7 + 312);
  sub_100022500(v7 + 320, (uint64_t)&v123);
  sub_100022500(v7 + 360, (uint64_t)&v124);
  *(double *)&v116 = v66;
  *((double *)&v116 + 1) = v63;
  v117 = v69;
  v118 = v63;
  *(_OWORD *)&v119[40] = v105;
  v120 = v70;
  v121 = v71;
  v122 = v68;
  sub_100121604((uint64_t)&v116, (uint64_t)v110);
  sub_100022500(v7 + 480, (uint64_t)&v113);
  sub_100022500(v7 + 520, (uint64_t)&v114);
  sub_100022500(v7 + 560, (uint64_t)&v115);
  v131.origin.x = a3;
  v72 = v109;
  v131.origin.y = v109;
  v131.size.width = a5;
  v131.size.height = a6;
  v100 = CGRectGetMinX(v131);
  v73 = a5;
  v74 = v97;
  v75 = v98;
  v132.origin.x = v97;
  v132.origin.y = v98;
  v76 = v96;
  v132.size.width = v96;
  v77 = v108;
  v132.size.height = v108;
  v99 = CGRectGetMaxY(v132);
  v133.origin.x = a3;
  v133.origin.y = v72;
  v133.size.width = v73;
  v133.size.height = a6;
  v78 = CGRectGetWidth(v133);
  v103 = a3;
  v134.origin.x = a3;
  v79 = v78;
  v134.size.height = a6;
  v80 = v100;
  v134.origin.y = v72;
  *(CGFloat *)&v105 = v73;
  v134.size.width = v73;
  height = v134.size.height;
  v81 = CGRectGetMaxY(v134);
  v135.origin.x = v74;
  v82 = v99;
  v135.origin.y = v75;
  v135.size.width = v76;
  v135.size.height = v77;
  v83 = v81 - CGRectGetMaxY(v135);
  sub_100121638(a1, (uint64_t)v110, v79, v83);
  v85 = v84;
  v136.origin.x = v80;
  v136.origin.y = v82;
  v136.size.width = v79;
  v136.size.height = v83;
  if (v85 <= CGRectGetHeight(v136))
  {
    v86 = v104;
    v87 = sub_1001203A4(a1, v104, v80, v82, v79, v83);
  }
  else
  {
    v86 = v104;
    v87 = sub_10012085C(a1, v104, v80, v82, v79, v83);
  }
  v88 = LayoutRect.origin.getter(v87);
  LayoutRect.size.getter(v88);
  v89 = v103;
  v137.origin.x = v103;
  v90 = v109;
  v137.origin.y = v109;
  v91 = *(double *)&v105;
  *(_QWORD *)&v137.size.width = v105;
  v92 = height;
  v137.size.height = height;
  CGRectGetHeight(v137);
  v138.origin.x = v89;
  v138.origin.y = v90;
  v138.size.width = v91;
  v138.size.height = v92;
  CGRectGetMinX(v138);
  v139.origin.x = v89;
  v139.origin.y = v90;
  v139.size.width = v91;
  v139.size.height = v92;
  CGRectGetMinY(v139);
  v140.origin.x = v89;
  v140.origin.y = v90;
  v140.size.width = v91;
  v140.size.height = v92;
  CGRectGetWidth(v140);
  LayoutRect.init(representing:)(v93);
  (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v86, v60);
  sub_100121930(v110);
  return sub_10012195C(&v116);
}

