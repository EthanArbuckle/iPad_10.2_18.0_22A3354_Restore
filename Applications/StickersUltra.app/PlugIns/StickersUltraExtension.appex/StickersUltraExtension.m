void sub_1000075A0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD v6[5];

  if (objc_msgSend(*(id *)(a1 + 32), "needsLandscapeOverlayUpdate"))
  {
    if (objc_msgSend(*(id *)(a1 + 32), "isLandscapeMode"))
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_100007688;
      v6[3] = &unk_100089F40;
      v6[4] = *(_QWORD *)(a1 + 32);
      +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v6);
      v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "landscapeTrapOverlay"));
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "label"));
      objc_msgSend(v3, "setAlpha:", 1.0);

    }
    else
    {
      v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "landscapeTrapOverlay"));
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "label"));
      objc_msgSend(v4, "setAlpha:", 0.0);

    }
  }
}

void sub_100007688(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "updateLandscapeOverlayImmediately");
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "landscapeTrapOverlay"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "label"));
  objc_msgSend(v2, "setAlpha:", 0.0);

}

id sub_1000076E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateLandscapeOverlayImmediately");
}

void sub_100007C04(id *a1)
{
  id WeakRetained;
  id v3;
  int v4;
  id v5;

  WeakRetained = objc_loadWeakRetained(a1 + 5);
  if (objc_msgSend(WeakRetained, "snapshottingEnabledUpdateIdentifier") == a1[6])
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      v3 = a1[4];
      v4 = 138412290;
      v5 = v3;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BaseAnimoji] updating snapshottingEnabled applying futureValue: %@", (uint8_t *)&v4, 0xCu);
    }
    objc_msgSend(WeakRetained, "setSnapshottingEnabled:", objc_msgSend(a1[4], "BOOLValue"));
  }

}

void sub_100008C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100008C60(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id *v5;
  id v6;
  id v7;
  id WeakRetained;

  v5 = (id *)(a1 + 32);
  v6 = a4;
  v7 = a3;
  WeakRetained = objc_loadWeakRetained(v5);
  objc_msgSend(WeakRetained, "layoutMonitorDidUpdateDisplayLayout:withContext:", v7, v6);

}

void sub_100008F24(uint64_t a1)
{
  int v2;
  void *v3;
  void *v4;
  void *v5;
  const __CFString *v6;
  void *v7;

  v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 != objc_msgSend(*(id *)(a1 + 32), "strongPopoverCurrentlyPresented"))
  {
    objc_msgSend(*(id *)(a1 + 32), "setStrongPopoverCurrentlyPresented:", *(unsigned __int8 *)(a1 + 40));
    v6 = CFSTR("BaseMessagesViewControllerStrongPopupPresentedKey");
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
    v7 = v3;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v7, &v6, 1));

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v5, "postNotificationName:object:userInfo:", CFSTR("BaseMessagesViewControllerStrongPopupPresentationNotification"), *(_QWORD *)(a1 + 32), v4);

  }
}

void sub_1000095E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_10000973C(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_10009D8A0)
  {
    v4 = off_10008A030;
    v5 = 0;
    qword_10009D8A0 = _sl_dlopen(&v4, &v3);
    if (!qword_10009D8A0)
    {
      abort_report_np("%s", (const char *)v3);
LABEL_8:
      sub_100069924();
    }
    if (v3)
      free(v3);
  }
  result = objc_getClass("LSPlugInKitProxy");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    goto LABEL_8;
  qword_10009D898 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100009870(id a1)
{
  byte_10009D8A8 = espresso_create_context(10007, 0xFFFFFFFFLL) != 0;
  espresso_context_destroy();
}

uint64_t sub_100009A68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_100009C3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestDismiss);
  swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestDismiss + 8));
  return v1;
}

uint64_t sub_100009C74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestPresentPlugin);
  swift_retain(*(_QWORD *)(v0
                         + OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestPresentPlugin
                         + 8));
  return v1;
}

id sub_100009CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  objc_super v13;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestDismiss];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v11 = &v9[OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestPresentPlugin];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, "init");
}

id sub_100009D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = &v4[OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestDismiss];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  v6 = &v4[OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestPresentPlugin];
  *(_QWORD *)v6 = a3;
  *((_QWORD *)v6 + 1) = a4;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for StickerPackOrganizerDelegate();
  return objc_msgSendSuper2(&v8, "init");
}

uint64_t type metadata accessor for StickerPackOrganizerDelegate()
{
  return objc_opt_self(_TtC22StickersUltraExtension28StickerPackOrganizerDelegate);
}

uint64_t sub_10000A090()
{
  return 0;
}

uint64_t sub_10000A0A8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0
                              + OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestDismiss))();
}

void sub_10000A114(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  id v13;

  if (a1)
  {
    v13 = a1;
    v2 = objc_msgSend(v13, "identifier");
    if (v2)
    {
      v3 = v2;
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
      v6 = v5;

      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonPluginIdentifierAppStore);
      v9 = v8;
      if (v6)
      {
        if (v4 == v7 && v6 == v8)
        {
          swift_bridgeObjectRelease_n(v6, 2, v7);
        }
        else
        {
          v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
          swift_bridgeObjectRelease(v6);
          swift_bridgeObjectRelease(v9);
          if ((v11 & 1) == 0)
            goto LABEL_15;
        }
        (*(void (**)(id))(v1
                                   + OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestPresentPlugin))(v13);
LABEL_15:

        return;
      }
    }
    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonPluginIdentifierAppStore);
      v9 = v12;
    }

    swift_bridgeObjectRelease(v9);
  }
}

id sub_10000A294()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void sub_10000A2B4()
{
  _swift_stdlib_reportUnimplementedInitializer("StickersUltraExtension.StickerPackOrganizerDelegate", 51, "init()", 6, 0);
  __break(1u);
}

id sub_10000A30C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StickerPackOrganizerDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_10000A380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v8;
  char *v9;
  char *v10;
  char *v11;
  objc_super v13;

  v8 = (objc_class *)type metadata accessor for StickerPackOrganizerDelegate();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = &v9[OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestDismiss];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v11 = &v9[OBJC_IVAR____TtC22StickersUltraExtension28StickerPackOrganizerDelegate_requestPresentPlugin];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v8;
  return objc_msgSendSuper2(&v13, "init");
}

id sub_10000A400(uint64_t a1, uint64_t a2)
{
  id v3;

  v3 = objc_msgSend(objc_allocWithZone((Class)CKBrowserAppManagerViewController), "init");
  objc_msgSend(v3, "setIsManagingStickers:", 1);
  objc_msgSend(v3, "setSendDelegate:", a2);
  objc_msgSend(v3, "setDelegate:", a2);
  return v3;
}

unint64_t sub_10000A478()
{
  unint64_t result;

  result = qword_10009AF00;
  if (!qword_10009AF00)
  {
    result = swift_getWitnessTable(&unk_100077EB8, &type metadata for StickerPackOrganizer);
    atomic_store(result, (unint64_t *)&qword_10009AF00);
  }
  return result;
}

id sub_10000A4BC()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)CKBrowserAppManagerViewController), "init");
  objc_msgSend(v2, "setIsManagingStickers:", 1);
  objc_msgSend(v2, "setSendDelegate:", v1);
  objc_msgSend(v2, "setDelegate:", v1);
  return v2;
}

uint64_t sub_10000A53C(uint64_t a1, char a2)
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)(a1, a2 & 1);
}

void *sub_10000A574()
{
  return &protocol witness table for Never;
}

uint64_t sub_10000A580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10000A6EC();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10000A5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10000A6EC();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10000A620()
{
  return static View._viewListCount(inputs:)();
}

void sub_10000A638(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10000A6EC();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

ValueMetadata *type metadata accessor for StickerPackOrganizer()
{
  return &type metadata for StickerPackOrganizer;
}

uint64_t sub_10000A66C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_10000A6AC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000A66C(&qword_10009AFF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10000A6EC()
{
  unint64_t result;

  result = qword_10009AFF8;
  if (!qword_10009AFF8)
  {
    result = swift_getWitnessTable(&unk_100077E40, &type metadata for StickerPackOrganizer);
    atomic_store(result, (unint64_t *)&qword_10009AFF8);
  }
  return result;
}

uint64_t sub_10000A734()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009D9C8);
  sub_10000D130(v0, (uint64_t)qword_10009D9C8);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD000000000000012, 0x80000001000736C0);
}

uint64_t sub_10000A7B4()
{
  return 0;
}

uint64_t sub_10000A7C0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_10000A80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_10000A874(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_10000A8E8;
}

void sub_10000A8E8(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

id sub_10000A95C()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_image);
}

uint64_t sub_10000A96C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_localIdentifier);
  swift_bridgeObjectRetain(*(_QWORD *)(v0
                                     + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_localIdentifier
                                     + 8));
  return v1;
}

char *sub_10000A9A4(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return sub_10000A9EC(a1, a2, a3);
}

char *sub_10000A9EC(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v7;
  uint64_t v8;
  id v9;
  char *v10;
  id v11;
  uint64_t v12;
  char *v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD v23[5];
  uint64_t v24;
  objc_super v25;

  v7 = &v3[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_previewCache] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageView] = 0;
  v8 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_activityIndicator;
  v9 = objc_allocWithZone((Class)UIActivityIndicatorView);
  v10 = v3;
  v11 = objc_msgSend(v9, "initWithActivityIndicatorStyle:", 101);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v3[v8] = v11;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___cancelButton] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___addStickerButton] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___tapGestureRecognizer] = 0;
  v12 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_util;
  *(_QWORD *)&v10[v12] = objc_msgSend(objc_allocWithZone((Class)StickerPhotosUtil), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageAnalysisInteraction] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageAnalyzer] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_image] = a1;
  v13 = &v10[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_localIdentifier];
  *(_QWORD *)v13 = a2;
  *((_QWORD *)v13 + 1) = a3;
  v14 = a1;

  v25.receiver = v10;
  v25.super_class = (Class)type metadata accessor for StickerImageConfirmationController();
  v15 = (char *)objc_msgSendSuper2(&v25, "initWithNibName:bundle:", 0, 0);
  v16 = sub_10000BDFC();
  objc_msgSend(v16, "setAnalysis:", 0);

  v17 = objc_msgSend(objc_allocWithZone((Class)VKCImageAnalyzerRequest), "initWithImage:requestType:", *(_QWORD *)&v15[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_image], 32);
  v18 = sub_10000BEC8();
  v19 = swift_allocObject(&unk_10008A2D8, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v15);
  v23[4] = sub_10000C97C;
  v24 = v19;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_10000C1E0;
  v23[3] = &unk_10008A2F0;
  v20 = _Block_copy(v23);
  swift_release(v24, v21);
  objc_msgSend(v18, "processRequest:progressHandler:completionHandler:", v17, 0, v20);
  _Block_release(v20);

  return v15;
}

uint64_t type metadata accessor for StickerImageConfirmationController()
{
  return objc_opt_self(_TtC22StickersUltraExtension34StickerImageConfirmationController);
}

id sub_10000AC74()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v0;
}

id sub_10000ACC0()
{
  return objc_msgSend(objc_allocWithZone((Class)StickerPhotosUtil), "init");
}

id sub_10000ACE4(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

id sub_10000AD4C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
    objc_msgSend(v4, "setImage:", *(_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_image));
    objc_msgSend(v4, "setContentMode:", 1);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10000AE00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___cancelButton;
  v7 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___cancelButton);
  if (v7)
  {
    v8 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___cancelButton);
  }
  else
  {
    static UIButton.Configuration.plain()(v3);
    sub_10000D5F4(0, &qword_10009B168, UIButton_ptr);
    sub_10000D5F4(0, (unint64_t *)&unk_10009B170, UIAction_ptr);
    v9 = String.stkLocalized.getter(0x6C65636E6143, 0xE600000000000000);
    v11 = v10;
    v12 = swift_allocObject(&unk_10008A2D8, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v0);
    v13 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v9, v11, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10000D504, v12);
    v14 = (void *)UIButton.init(configuration:primaryAction:)(v5, v13);
    objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v15 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v14;
    v8 = v14;

    v7 = 0;
  }
  v16 = v7;
  return v8;
}

id sub_10000AF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___addStickerButton;
  v7 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___addStickerButton);
  if (v7)
  {
    v8 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___addStickerButton);
  }
  else
  {
    static UIButton.Configuration.plain()(v3);
    sub_10000D5F4(0, &qword_10009B168, UIButton_ptr);
    sub_10000D5F4(0, (unint64_t *)&unk_10009B170, UIAction_ptr);
    v9 = String.stkLocalized.getter(0x6369745320646441, 0xEB0000000072656BLL);
    v11 = v10;
    v12 = swift_allocObject(&unk_10008A2D8, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v0);
    v13 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v9, v11, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10000D1F8, v12);
    v14 = (void *)UIButton.init(configuration:primaryAction:)(v5, v13);
    objc_msgSend(v14, "setRole:", 1);
    objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v15 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v14;
    v8 = v14;

    v7 = 0;
  }
  v16 = v7;
  return v8;
}

void sub_10000B128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  NSIndexSet *v12;
  void *v13;
  void *v14;
  Class isa;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD aBlock[5];
  uint64_t v21;
  _BYTE v22[24];

  v2 = type metadata accessor for IndexSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(void **)(Strong + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_util);
    v9 = sub_10000BDFC();
    v10 = sub_10000BDFC();
    v11 = objc_msgSend(v10, "selectedSubjectIndexes");

    static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v11);
    IndexSet._bridgeToObjectiveC()(v12);
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    type metadata accessor for UUID(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v16 = swift_allocObject(&unk_10008A2D8, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16, v7);
    aBlock[4] = sub_10000D200;
    v21 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000BAF8;
    aBlock[3] = &unk_10008A340;
    v17 = _Block_copy(aBlock);
    swift_release(v21, v18);
    objc_msgSend(v8, "imageAnalysisInteraction:createStickerRepresentationsAtIndexSet:type:stickerIDs:progress:completion:", v9, v14, 5, isa, 0, v17);

    _Block_release(v17);
  }
}

id sub_10000B2F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___tapGestureRecognizer;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___tapGestureRecognizer);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___tapGestureRecognizer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "didTapImageView:");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10000B378()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  Class isa;
  id result;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  Class v58;
  id v59;
  id v60;
  objc_super v61;

  v1 = v0;
  v61.receiver = v0;
  v61.super_class = (Class)type metadata accessor for StickerImageConfirmationController();
  objc_msgSendSuper2(&v61, "loadView");
  v2 = objc_msgSend(v0, "navigationItem");
  String.stkLocalized.getter(0x636974532077654ELL, 0xEB0000000072656BLL);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "setTitle:", v5);

  v6 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
  v7 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100077F80;
  v8 = sub_10000AE00();
  v9 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v8);

  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
  v10 = sub_10000AF84();
  v11 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v10);

  *(_QWORD *)(v7 + 48) = v11;
  specialized Array._endMutation()();
  sub_10000D5F4(0, (unint64_t *)&unk_10009CB00, UIBarButtonItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v1, "setToolbarItems:", isa);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v14 = result;
  v15 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v14, "setBackgroundColor:", v15);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v16 = result;
  v17 = sub_10000AD4C();
  objc_msgSend(v16, "addSubview:", v17);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v18 = result;
  v19 = *(void **)&v1[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_activityIndicator];
  objc_msgSend(result, "addSubview:", v19);

  v20 = sub_10000AD4C();
  objc_msgSend(v20, "setUserInteractionEnabled:", 1);

  v21 = sub_10000AD4C();
  v22 = sub_10000B2F8();
  objc_msgSend(v21, "addGestureRecognizer:", v22);

  v23 = sub_10000AD4C();
  v24 = sub_10000BDFC();
  objc_msgSend(v23, "addInteraction:", v24);

  v25 = swift_allocObject(v6, 80, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100077F90;
  v26 = sub_10000AD4C();
  v27 = objc_msgSend(v26, "leftAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v28 = result;
  v29 = objc_msgSend(result, "leftAnchor");

  v30 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);
  *(_QWORD *)(v25 + 32) = v30;
  v31 = sub_10000AD4C();
  v32 = objc_msgSend(v31, "rightAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v33 = result;
  v34 = objc_msgSend(result, "rightAnchor");

  v35 = objc_msgSend(v32, "constraintEqualToAnchor:", v34);
  *(_QWORD *)(v25 + 40) = v35;
  v36 = sub_10000AD4C();
  v37 = objc_msgSend(v36, "centerYAnchor");

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v38 = result;
  v39 = objc_msgSend(result, "safeAreaLayoutGuide");

  v40 = objc_msgSend(v39, "centerYAnchor");
  v41 = objc_msgSend(v37, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v25 + 48) = v41;
  v42 = sub_10000AD4C();
  v43 = objc_msgSend(v42, "topAnchor");

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v44 = result;
    v45 = (void *)objc_opt_self(NSLayoutConstraint);
    v46 = objc_msgSend(v44, "safeAreaLayoutGuide");

    v47 = objc_msgSend(v46, "topAnchor");
    v48 = objc_msgSend(v43, "constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:", v47, 1.0);

    *(_QWORD *)(v25 + 56) = v48;
    v49 = objc_msgSend(v19, "centerXAnchor");
    v50 = sub_10000AD4C();
    v51 = objc_msgSend(v50, "centerXAnchor");

    v52 = objc_msgSend(v49, "constraintEqualToAnchor:", v51);
    *(_QWORD *)(v25 + 64) = v52;
    v53 = objc_msgSend(v19, "centerYAnchor");
    v54 = sub_10000AD4C();
    v55 = objc_msgSend(v54, "centerYAnchor");

    v56 = objc_msgSend(v53, "constraintEqualToAnchor:", v55);
    *(_QWORD *)(v25 + 72) = v56;
    specialized Array._endMutation()();
    v57 = v25;
    sub_10000D5F4(0, (unint64_t *)&qword_10009B0D0, NSLayoutConstraint_ptr);
    v58 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v57);
    objc_msgSend(v45, "activateConstraints:", v58);

    v59 = sub_10000B2F8();
    objc_msgSend(v59, "setEnabled:", 0);

    v60 = sub_10000AF84();
    objc_msgSend(v60, "setEnabled:", 0);

    return objc_msgSend(v19, "startAnimating");
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_10000BAF8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, void *, void *);
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;

  v6 = a2;
  v8 = *(void (**)(uint64_t, void *, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v9 = sub_10000D5F4(0, &qword_10009B880, _UIStickerRepresentation_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v9);
  }
  swift_retain(v7);
  v10 = a3;
  v11 = a4;
  v8(v6, a3, a4);
  swift_release(v7, v12);

  return swift_bridgeObjectRelease(v6);
}

void sub_10000BBA0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;
  id v15;
  NSIndexSet *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  NSIndexSet *v21;
  void *v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000AD4C();
  objc_msgSend(a1, "locationInView:", v8);
  v10 = v9;
  v12 = v11;

  v13 = sub_10000BDFC();
  v14 = objc_msgSend(v13, "subjectIndexAtPoint:", v10, v12);

  v15 = sub_10000BDFC();
  if (v14)
  {
    IndexSet.init(integer:)(objc_msgSend(v14, "integerValue"));
    IndexSet._bridgeToObjectiveC()(v16);
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v15, "highlightSubjectAtIndexSet:showCallout:showBurst:burstPoint:animated:", v18, 0, 0, 1, 0.0, 0.0);

  }
  else
  {
    v19 = sub_10000BDFC();
    v20 = objc_msgSend(v19, "allSubjectIndexes");

    static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v20);
    IndexSet._bridgeToObjectiveC()(v21);
    v18 = v22;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v15, "highlightSubjectAtIndexSet:showCallout:showBurst:burstPoint:animated:", v18, 0, 0, 1, 0.0, 0.0);
  }

  v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_previewCache);
  if (v23)
  {
    v24 = *(void (**)(uint64_t))(*(_QWORD *)v23 + 136);
    v25 = swift_retain(v23);
    v24(v25);
    swift_release(v23, v26);
  }
}

id sub_10000BDEC()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_util);
}

id sub_10000BDFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageAnalysisInteraction;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageAnalysisInteraction);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageAnalysisInteraction);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)VKCImageAnalysisInteraction), "init");
    objc_msgSend(v3, "setDelegate:", v0);
    objc_msgSend(v3, "setSubjectViewUserInteractionDisabled:", 1);
    v4 = sub_10000AD4C();
    objc_msgSend(v4, "addInteraction:", v3);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_util), "setUsesLightDimmingViewInLightModeForImageAnalysisInteraction:", v3);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10000BEC8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageAnalyzer;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageAnalyzer);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageAnalyzer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)VKCImageAnalyzer), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_10000BF38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  char *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  const void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;
  char v32[24];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v13 = (char *)result;
    v14 = sub_10000BDFC();
    objc_msgSend(v14, "setAnalysis:", a1);

    v15 = sub_10000BDFC();
    objc_msgSend(v15, "set_photosImageForRemoveBackground:", *(_QWORD *)&v13[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_image]);

    v16 = sub_10000BDFC();
    objc_msgSend(v16, "setActiveInteractionTypes:", 8);

    sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
    v17 = (void *)static OS_dispatch_queue.main.getter();
    v18 = swift_allocObject(&unk_10008A378, 24, 7);
    *(_QWORD *)(v18 + 16) = v13;
    aBlock[4] = sub_10000D650;
    v31 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000C1B4;
    aBlock[3] = &unk_10008A390;
    v19 = _Block_copy(aBlock);
    v29 = v8;
    v20 = v5;
    v21 = v19;
    v22 = v31;
    v23 = v13;
    v25 = swift_release(v22, v24);
    static DispatchQoS.unspecified.getter(v25);
    aBlock[0] = _swiftEmptyArrayStorage;
    v26 = sub_10000D68C();
    v27 = sub_10000A66C(&qword_10009B198);
    v28 = sub_10000D6D4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v4, v26);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  }
  return result;
}

uint64_t sub_10000C1B4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2, v4);
}

void sub_10000C1E0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  uint64_t v8;
  id v9;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v9 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5, v8);

}

id sub_10000C254(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void sub_10000C2C8()
{
  _swift_stdlib_reportUnimplementedInitializer("StickersUltraExtension.StickerImageConfirmationController", 57, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_10000C324()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StickerImageConfirmationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10000C430()
{
  return 0;
}

void sub_10000C440(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSIndexSet *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;

  v2 = v1;
  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10009D9C0 != -1)
    swift_once(&qword_10009D9C0, sub_10000A734);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_10000D130(v8, (uint64_t)qword_10009D9C8);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "did complete subject analysis", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_activityIndicator], "stopAnimating");
  v13 = objc_msgSend(a1, "isSubjectHighlightAvailable");
  if ((_DWORD)v13)
  {
    v14 = sub_10000AF84();
    objc_msgSend(v14, "setEnabled:", 1);

    v15 = sub_10000B2F8();
    objc_msgSend(v15, "setEnabled:", 1);

    v16 = sub_10000BDFC();
    v17 = sub_10000BDFC();
    v18 = objc_msgSend(v17, "allSubjectIndexes");

    static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v18);
    IndexSet._bridgeToObjectiveC()(v19);
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v16, "highlightSubjectAtIndexSet:showCallout:showBurst:burstPoint:animated:", v21, 0, 0, 1, 0.0, 0.0);

    type metadata accessor for StickerUIPreviewCache();
    v22 = a1;
    v23 = sub_10000FBFC((uint64_t)a1);
    v24 = *(_QWORD *)&v2[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_previewCache];
    *(_QWORD *)&v2[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_previewCache] = v23;
    swift_release(v24, v25);
  }
  else
  {
    v26 = Logger.logObject.getter(v13);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "no subject highlight available", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    type metadata accessor for PhotoConfirmationTipHostingController(0);
    v29 = sub_10000AF84();
    v30 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
    v31 = swift_allocObject(v30, 40, 7);
    *(_OWORD *)(v31 + 16) = xmmword_100077FA0;
    *(_QWORD *)(v31 + 32) = sub_10000AE00();
    v34 = v31;
    specialized Array._endMutation()();
    v32 = v34;
    v33 = sub_10005D1A8((uint64_t)v29, v34);

    swift_bridgeObjectRelease(v32);
    if (v33)
    {
      objc_msgSend(v2, "presentViewController:animated:completion:", v33, 1, 0);

    }
  }
}

uint64_t sub_10000C824()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *__return_ptr, uint64_t);
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[5];
  _QWORD v7[5];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_previewCache);
  if (!v1)
    return 0;
  v2 = *(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v1 + 120);
  v3 = swift_retain(v1);
  v2(v6, v3);
  swift_release(v1, v4);
  sub_10000D148((uint64_t)v6, (uint64_t)v7);
  return v7[0];
}

void sub_10000C88C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  void (*v5)(id *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  __int128 v10;
  __int128 v11;
  id v12[5];
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_previewCache);
  v4 = 0uLL;
  if (v3)
  {
    v5 = *(void (**)(id *__return_ptr, uint64_t))(*(_QWORD *)v3 + 120);
    v6 = swift_retain(v3);
    v5(v12, v6);
    swift_release(v3, v7);
    sub_10000D148((uint64_t)v12, (uint64_t)&v13);
    if (v13)
    {
      v10 = v15;
      v11 = v14;
      sub_10000D190(v12);
      v8 = v10;
      v4 = v11;
      v9 = 0;
    }
    else
    {
      v9 = 1;
      v8 = 0uLL;
      v4 = 0uLL;
    }
  }
  else
  {
    v9 = 1;
    v8 = 0uLL;
  }
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 32) = v9;
}

uint64_t sub_10000C940()
{
  return sub_100033FE0();
}

uint64_t sub_10000C958()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10000C97C(uint64_t a1)
{
  uint64_t v1;

  return sub_10000BF38(a1, v1);
}

uint64_t sub_10000C984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10000C994(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

uint64_t sub_10000C99C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_10000CA6C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10000D4C4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10000D4C4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_10000D4A4(v12);
  return v7;
}

uint64_t sub_10000CA6C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_10000CC24(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_10000CC24(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10000CCB8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_10000CE90(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_10000CE90(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10000CCB8(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_10000CE2C(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10000CE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = sub_10000A66C(&qword_10009B180);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_10000CE90(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000A66C(&qword_10009B180);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_10000CFDC()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_previewCache] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageView] = 0;
  v1 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_activityIndicator;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___cancelButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___addStickerButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___tapGestureRecognizer] = 0;
  v3 = OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController_util;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)StickerPhotosUtil), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageAnalysisInteraction] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension34StickerImageConfirmationController____lazy_storage___imageAnalyzer] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100073990, "StickersUltraExtension/StickerImageConfirmationController.swift", 63, 2, 43, 0);
  __break(1u);
}

uint64_t sub_10000D10C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

uint64_t sub_10000D130(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_10000D148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009B0D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id *sub_10000D190(id *a1)
{

  return a1;
}

uint64_t *sub_10000D1B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

void sub_10000D1F8()
{
  uint64_t v0;

  sub_10000B128(v0);
}

void sub_10000D200(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *Strong;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t ObjectType;
  void (*v15)(id, _UNKNOWN **, void *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  _BYTE v28[8];
  uint64_t v29;
  _BYTE v30[24];

  v6 = v3 + 16;
  swift_beginAccess(v6, v30, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    v9 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xB0))();
    if (v9)
    {
      v11 = v9;
      v12 = v10;
      if (a1)
        v13 = a1;
      else
        v13 = &_swiftEmptyArrayStorage;
      ObjectType = swift_getObjectType();
      v15 = *(void (**)(id, _UNKNOWN **, void *, uint64_t, uint64_t))(v12 + 16);
      v16 = v8;
      swift_bridgeObjectRetain(a1);
      v15(v16, &off_10008A318, v13, ObjectType, v12);

      swift_unknownObjectRelease(v11);
      swift_bridgeObjectRelease(v13);
    }
    if (a3)
    {
      swift_errorRetain(a3);
      if (qword_10009D9C0 != -1)
        swift_once(&qword_10009D9C0, sub_10000A734);
      v17 = type metadata accessor for Logger(0);
      sub_10000D130(v17, (uint64_t)qword_10009D9C8);
      swift_errorRetain(a3);
      v18 = swift_errorRetain(a3);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(12, -1);
        v22 = swift_slowAlloc(32, -1);
        v29 = v22;
        *(_DWORD *)v21 = 136315138;
        swift_getErrorValue(a3, v28, v27);
        v23 = Error.localizedDescription.getter(v27[1], v27[2]);
        v25 = v24;
        v26 = sub_10000C99C(v23, v24, &v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v21 + 4, v21 + 12);
        swift_bridgeObjectRelease(v25);
        swift_errorRelease(a3);
        swift_errorRelease(a3);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed to create sticker representations. %s", v21, 0xCu);
        swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1, -1);
        swift_slowDealloc(v21, -1, -1);

        swift_errorRelease(a3);
      }
      else
      {

        swift_errorRelease(a3);
        swift_errorRelease(a3);
        swift_errorRelease(a3);

      }
    }
    else
    {

    }
  }
}

uint64_t sub_10000D4A4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = *(_QWORD *)(v1 - 8);
  if ((*(_BYTE *)(v2 + 82) & 2) != 0)
    return swift_release(*a1, v1);
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10000D4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_10000D504()
{
  uint64_t v0;
  _QWORD *Strong;
  _QWORD *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  _QWORD *v10;
  _BYTE v11[24];

  swift_beginAccess(v0 + 16, v11, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "presentedViewController");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 0, 0);

    }
    v5 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xB0))();
    if (v5)
    {
      v7 = v5;
      v8 = v6;
      swift_getObjectType();
      v9 = *(void (**)(void))(v8 + 8);
      v10 = v2;
      v9();

      swift_unknownObjectRelease(v7);
    }

  }
}

uint64_t sub_10000D5F4(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10000D62C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10000D650()
{
  id v0;

  v0 = sub_10000BDFC();
  objc_msgSend(v0, "beginImageSubjectAnalysisIfNecessary");

}

unint64_t sub_10000D68C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009B190;
  if (!qword_10009B190)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_10009B190);
  }
  return result;
}

unint64_t sub_10000D6D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009B1A0;
  if (!qword_10009B1A0)
  {
    v1 = sub_10000D720(&qword_10009B198);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10009B1A0);
  }
  return result;
}

uint64_t sub_10000D720(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_10000D764()
{
  swift_deletedMethodError();
  __break(1u);
}

uint64_t sub_10000D784@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22StickersUltraExtension23AvatarPickerCoordinator_parent;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10000D7D4(v3, a1);
}

uint64_t sub_10000D7D4(uint64_t a1, uint64_t a2)
{
  return initializeWithCopy for AvatarPickerView(a2, a1);
}

uint64_t sub_10000D7E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22StickersUltraExtension23AvatarPickerCoordinator_parent;
  swift_beginAccess(v3, v5, 33, 0);
  sub_10000D83C(a1, v3);
  return swift_endAccess(v5);
}

uint64_t sub_10000D83C(uint64_t a1, uint64_t a2)
{
  return assignWithTake for AvatarPickerView(a2, a1);
}

uint64_t (*sub_10000D84C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension23AvatarPickerCoordinator_parent, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_10000D894(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_10000D7D4(a1, (uint64_t)v3 + OBJC_IVAR____TtC22StickersUltraExtension23AvatarPickerCoordinator_parent);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, "init");
  sub_10000D960(a1);
  return v4;
}

id sub_10000D904(uint64_t a1)
{
  void *v1;
  id v3;
  objc_super v5;

  sub_10000D7D4(a1, (uint64_t)v1 + OBJC_IVAR____TtC22StickersUltraExtension23AvatarPickerCoordinator_parent);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AvatarPickerCoordinator();
  v3 = objc_msgSendSuper2(&v5, "init");
  sub_10000D960(a1);
  return v3;
}

uint64_t sub_10000D960(uint64_t a1)
{
  destroy for AvatarPickerView(a1);
  return a1;
}

uint64_t type metadata accessor for AvatarPickerCoordinator()
{
  return objc_opt_self(_TtC22StickersUltraExtension23AvatarPickerCoordinator);
}

uint64_t sub_10000D9A4(uint64_t a1, uint64_t a2)
{
  return sub_10000E3D8(a2);
}

uint64_t sub_10000DA1C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[9];

  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v2) + 0x58))(v11);
  if (!v11[3])
    return sub_10000D960((uint64_t)v11);
  sub_10000E4F4((uint64_t)v11, (uint64_t)v8);
  sub_10000D960((uint64_t)v11);
  v5 = v9;
  v6 = v10;
  sub_10000E538(v8, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 16))(a1, a2 & 1, v5, v6);
  return sub_10000D4A4(v8);
}

uint64_t sub_10000DBA0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[9];

  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v3) + 0x58))(v13);
  if (!v13[3])
    return sub_10000D960((uint64_t)v13);
  sub_10000E4F4((uint64_t)v13, (uint64_t)v10);
  sub_10000D960((uint64_t)v13);
  v7 = v11;
  v8 = v12;
  sub_10000E538(v10, v11);
  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 24))(a1, a2, a3 & 1, v7, v8);
  return sub_10000D4A4(v10);
}

void sub_10000DD54()
{
  _swift_stdlib_reportUnimplementedInitializer("StickersUltraExtension.AvatarPickerCoordinator", 46, "init()", 6, 0);
  __break(1u);
}

id sub_10000DDAC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AvatarPickerCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_10000DDEC@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_10000DDFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000E55C(v1, a1);
}

uint64_t sub_10000DE08(uint64_t a1)
{
  uint64_t v1;

  return sub_10000E5A4(a1, v1);
}

uint64_t (*sub_10000DE10())()
{
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_10000DE20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 48));
  return v1;
}

uint64_t sub_10000DE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 48));
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*sub_10000DE80())()
{
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_10000DE90()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_10000DE98(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*sub_10000DEA0())()
{
  return PresentationContexts.rawValue.getter;
}

id sub_10000DEB0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 64), "contentInset");
}

id sub_10000DEC0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 64), "setContentInset:");
}

void (*sub_10000DED0(_QWORD *a1))(double **a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  objc_msgSend(*(id *)(v1 + 64), "contentInset");
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  return sub_10000DF2C;
}

void sub_10000DF2C(double **a1)
{
  double *v1;

  v1 = *a1;
  objc_msgSend(*(id *)(*((_QWORD *)*a1 + 4) + 64), "setContentInset:", **a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

void *sub_10000DF68()
{
  return &unk_100078040;
}

id sub_10000DF74()
{
  uint64_t v0;

  return *(id *)(v0 + 64);
}

uint64_t sub_10000DF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;
  double v17;
  double v18;
  _QWORD v20[3];
  _BYTE v21[32];
  char v22;

  sub_10000E5EC(a4, (uint64_t)v20);
  v12 = *(double *)v20;
  v13 = *(double *)&v20[1];
  v14 = *(double *)&v20[2];
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  *(_OWORD *)(a6 + 32) = 0u;
  *(_QWORD *)(a6 + 48) = 0;
  sub_10000E634(a1, a6);
  swift_bridgeObjectRelease(*(_QWORD *)(a6 + 48));
  *(_QWORD *)(a6 + 40) = a2;
  *(_QWORD *)(a6 + 48) = a3;
  *(_BYTE *)(a6 + 56) = a5;
  v15 = objc_msgSend(objc_allocWithZone((Class)AVTSimpleAvatarPickerSwiftProvider), "initWithDelegate:allowAddItem:allowEditing:interItemSpacing:", 0, 0, 0, 1.5);
  *(_QWORD *)(a6 + 64) = v15;
  sub_10000E5EC(a4, (uint64_t)v21);
  if ((v22 & 1) != 0)
    v16 = 0.0;
  else
    v16 = v12;
  if ((v22 & 1) != 0)
    v17 = 0.0;
  else
    v17 = v13;
  if ((v22 & 1) != 0)
    v18 = 0.0;
  else
    v18 = v14;
  objc_msgSend(v15, "setContentInset:", v16, v17, v18);
  return sub_10000E67C(a1);
}

id sub_10000E084()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSString v6;
  void *v8;

  v1 = v0;
  v2 = *(void **)(v0 + 64);
  v3 = sub_10000A66C(&qword_10009B1C8);
  UIViewRepresentableContext.coordinator.getter(&v8, v3);
  v4 = v8;
  objc_msgSend(v2, "setDelegate:", v8);

  v5 = objc_msgSend(v2, "avatarPickerView");
  if (*(_QWORD *)(v1 + 48))
  {
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "selectAvatarRecordWithIdentifier:animated:", v6, 0);

  }
  return v5;
}

void sub_10000E138()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  id v4;
  _QWORD v5[9];
  _QWORD *v6;

  if (*(_BYTE *)(v0 + 56) == 1)
  {
    v1 = sub_10000A66C(&qword_10009B1C8);
    v2 = UIViewRepresentableContext.coordinator.getter(&v6, v1);
    v3 = v6;
    (*(void (**)(_QWORD *__return_ptr, _QWORD *))((swift_isaMask & *v6) + 0x58))(v5, v2);

    v4 = (id)v5[8];
    sub_10000D960((uint64_t)v5);
    objc_msgSend(v4, "presentActionsForSelectedAvatar");

  }
}

id sub_10000E1D0()
{
  uint64_t v0;
  objc_class *v1;
  id v2;
  id v3;
  objc_super v5;
  _BYTE v6[72];

  sub_10000D7D4(v0, (uint64_t)v6);
  v1 = (objc_class *)type metadata accessor for AvatarPickerCoordinator();
  v2 = objc_allocWithZone(v1);
  sub_10000D7D4((uint64_t)v6, (uint64_t)v2 + OBJC_IVAR____TtC22StickersUltraExtension23AvatarPickerCoordinator_parent);
  v5.receiver = v2;
  v5.super_class = v1;
  v3 = objc_msgSendSuper2(&v5, "init");
  sub_10000D960((uint64_t)v6);
  return v3;
}

uint64_t sub_10000E250@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t result;
  objc_super v7;
  _BYTE v8[72];

  sub_10000D7D4(v1, (uint64_t)v8);
  v3 = (objc_class *)type metadata accessor for AvatarPickerCoordinator();
  v4 = objc_allocWithZone(v3);
  sub_10000D7D4((uint64_t)v8, (uint64_t)v4 + OBJC_IVAR____TtC22StickersUltraExtension23AvatarPickerCoordinator_parent);
  v7.receiver = v4;
  v7.super_class = v3;
  v5 = objc_msgSendSuper2(&v7, "init");
  result = sub_10000D960((uint64_t)v8);
  *a1 = v5;
  return result;
}

uint64_t sub_10000E2D4(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

uint64_t sub_10000E314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10000EBFC();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10000E364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10000EBFC();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10000E3B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10000EBFC();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_10000E3D8(uint64_t result)
{
  _QWORD *v1;
  void *v2;
  void (*v3)(_QWORD *__return_ptr);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[9];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[9];

  if (result)
  {
    v2 = (void *)result;
    v3 = *(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v1) + 0x58);
    v4 = swift_unknownObjectRetain(result);
    ((void (*)(_QWORD *__return_ptr, uint64_t))v3)(v15, v4);
    if (v15[3])
    {
      sub_10000E4F4((uint64_t)v15, (uint64_t)v12);
      sub_10000D960((uint64_t)v15);
      v5 = v13;
      v6 = v14;
      sub_10000E538(v12, v13);
      v3(v11);
      v7 = objc_msgSend(v2, "identifier");
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v10 = v9;

      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v11, v8, v10, v5, v6);
      swift_unknownObjectRelease(v2);
      swift_bridgeObjectRelease(v10);
      sub_10000D960((uint64_t)v11);
      return sub_10000D4A4(v12);
    }
    else
    {
      swift_unknownObjectRelease(v2);
      return sub_10000D960((uint64_t)v15);
    }
  }
  return result;
}

uint64_t sub_10000E4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_10000E538(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10000E55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009B1B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000E5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009B1B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000E5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009B1C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000E634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009B1B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000E67C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000A66C(&qword_10009B1B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10000E6C0()
{
  unint64_t result;

  result = qword_10009B1D0;
  if (!qword_10009B1D0)
  {
    result = swift_getWitnessTable(&unk_1000780D4, &type metadata for AvatarPickerView);
    atomic_store(result, (unint64_t *)&qword_10009B1D0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for StickerUIPreview(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

void destroy for AvatarPickerView(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    sub_10000D4A4((_QWORD *)a1);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));

}

uint64_t initializeWithCopy for AvatarPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  id v9;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRetain(v7);
  v9 = v8;
  return a1;
}

uint64_t assignWithCopy for AvatarPickerView(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_10000D4A4((_QWORD *)a1);
    goto LABEL_7;
  }
  sub_10000E8AC((_QWORD *)a1, a2);
LABEL_8:
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)a2 + 6);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  v9 = (void *)*((_QWORD *)a2 + 8);
  v10 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v9;
  v11 = v9;

  return a1;
}

_QWORD *sub_10000E8AC(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v12 = *result;
        v13 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v12, v14);
        *v3 = v13;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v16 = *a2;
          *v3 = *a2;
          swift_retain(v16);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10, v11);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v17, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v15 = *a2;
          *v3 = *a2;
          swift_retain(v15);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v17, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for AvatarPickerView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AvatarPickerView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  if (*(_QWORD *)(a1 + 24))
    sub_10000D4A4((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for AvatarPickerView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvatarPickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AvatarPickerView()
{
  return &type metadata for AvatarPickerView;
}

__n128 initializeWithTake for ScrollViewOffsetModifier(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_10000EB5C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10000EB7C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_10009B260)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, &unk_10008A4B0);
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_10009B260);
  }
}

unint64_t sub_10000EBFC()
{
  unint64_t result;

  result = qword_10009B268;
  if (!qword_10009B268)
  {
    result = swift_getWitnessTable(&unk_100078044, &type metadata for AvatarPickerView);
    atomic_store(result, (unint64_t *)&qword_10009B268);
  }
  return result;
}

void sub_10000EC40()
{
  xmmword_10009FCB0 = 0uLL;
}

__int128 *sub_10000EC50()
{
  if (qword_10009DAE0 != -1)
    swift_once(&qword_10009DAE0, sub_10000EC40);
  return &xmmword_10009FCB0;
}

double sub_10000EC90()
{
  _BYTE v1[24];

  if (qword_10009DAE0 != -1)
    swift_once(&qword_10009DAE0, sub_10000EC40);
  swift_beginAccess(&xmmword_10009FCB0, v1, 0, 0);
  return *(double *)&xmmword_10009FCB0;
}

uint64_t sub_10000ECF8(double a1, double a2)
{
  uint64_t result;
  _BYTE v5[24];

  if (qword_10009DAE0 != -1)
    swift_once(&qword_10009DAE0, sub_10000EC40);
  result = swift_beginAccess(&xmmword_10009FCB0, v5, 1, 0);
  *(double *)&xmmword_10009FCB0 = a1;
  *((double *)&xmmword_10009FCB0 + 1) = a2;
  return result;
}

uint64_t (*sub_10000ED70(uint64_t a1))(_QWORD)
{
  if (qword_10009DAE0 != -1)
    swift_once(&qword_10009DAE0, sub_10000EC40);
  swift_beginAccess(&xmmword_10009FCB0, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_10000EDDC(uint64_t a1, double (*a2)(void))
{
  uint64_t v3;

  *(double *)a1 = a2();
  *(_QWORD *)(a1 + 8) = v3;
}

double sub_10000EE04@<D0>(_OWORD *a1@<X8>)
{
  double result;
  _BYTE v3[24];

  if (qword_10009DAE0 != -1)
    swift_once(&qword_10009DAE0, sub_10000EC40);
  swift_beginAccess(&xmmword_10009FCB0, v3, 0, 0);
  result = *(double *)&xmmword_10009FCB0;
  *a1 = xmmword_10009FCB0;
  return result;
}

double sub_10000EE74(_OWORD *a1, void (*a2)(__int128 *__return_ptr))
{
  double result;
  __int128 v4;

  a2(&v4);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

uint64_t sub_10000EEB4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return a1;
}

uint64_t sub_10000EEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain(a4);
  return a3;
}

uint64_t sub_10000EF14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release(*(_QWORD *)(v2 + 24), a2);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_10000EF48())()
{
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_10000EF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  double (*v23)@<D0>(uint64_t@<X8>);
  uint64_t v24;
  uint64_t v25;
  double (**v26)@<D0>(uint64_t@<X8>);
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t (*v29)(double *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (**v33)(double *);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a3;
  v39 = a5;
  v36 = a2;
  v37 = a4;
  v40 = a6;
  v9 = sub_10000A66C(&qword_10009B270);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v35 - v14;
  v16 = sub_10000A66C(&qword_10009B278);
  v17 = __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v19 = static Alignment.center.getter(v17);
  v19[1] = v20;
  v21 = (char *)v19 + *(int *)(sub_10000A66C(&qword_10009B280) + 44);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v22(v15, a1, v9);
  v23 = (double (*)@<D0>(uint64_t@<X8>))swift_allocObject(&unk_10008A590, 48, 7);
  *((_QWORD *)v23 + 2) = a2;
  v24 = v38;
  *((_QWORD *)v23 + 3) = v38;
  *((_QWORD *)v23 + 4) = a4;
  v25 = v39;
  *((_QWORD *)v23 + 5) = v39;
  v22(v13, (uint64_t)v15, v9);
  v22(v21, (uint64_t)v13, v9);
  v26 = (double (**)@<D0>(uint64_t@<X8>))&v21[*(int *)(sub_10000A66C(&qword_10009B288) + 48)];
  *v26 = sub_10000F31C;
  v26[1] = v23;
  v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  swift_retain(v23);
  swift_bridgeObjectRetain(v24);
  swift_retain(v25);
  v27(v15, v9);
  swift_release(v23, v28);
  v27(v13, v9);
  v29 = (uint64_t (*)(double *))swift_allocObject(&unk_10008A5B8, 48, 7);
  *((_QWORD *)v29 + 2) = v36;
  *((_QWORD *)v29 + 3) = v24;
  v30 = v24;
  *((_QWORD *)v29 + 4) = v37;
  *((_QWORD *)v29 + 5) = v25;
  v31 = v25;
  v32 = v40;
  sub_10000F378((uint64_t)v19, v40);
  v33 = (uint64_t (**)(double *))(v32 + *(int *)(sub_10000A66C(&qword_10009B290) + 36));
  *v33 = sub_10000F354;
  v33[1] = v29;
  swift_bridgeObjectRetain(v30);
  swift_retain(v31);
  return sub_10000F3C0((uint64_t)v19);
}

double sub_10000F190@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  void (*v17)(char *, uint64_t);
  double MinX;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double MinY;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  CGRect v31;
  CGRect v32;

  v6 = type metadata accessor for NamedCoordinateSpace(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1;
  v30 = a2;
  static CoordinateSpaceProtocol<>.named<A>(_:)(&v29, &type metadata for String, &protocol witness table for String);
  v10 = GeometryProxy.frame<A>(in:)(v9, v6, &protocol witness table for NamedCoordinateSpace);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v9, v6);
  v31.origin.x = v10;
  v31.origin.y = v12;
  v31.size.width = v14;
  v31.size.height = v16;
  MinX = CGRectGetMinX(v31);
  v29 = a1;
  v30 = a2;
  static CoordinateSpaceProtocol<>.named<A>(_:)(&v29, &type metadata for String, &protocol witness table for String);
  v19 = GeometryProxy.frame<A>(in:)(v9, v6, &protocol witness table for NamedCoordinateSpace);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v17(v9, v6);
  v32.origin.x = v19;
  v32.origin.y = v21;
  v32.size.width = v23;
  v32.size.height = v25;
  MinY = CGRectGetMinY(v32);
  v27 = static Color.clear.getter();
  result = -MinX;
  *(_QWORD *)a3 = v27;
  *(double *)(a3 + 8) = -MinX;
  *(double *)(a3 + 16) = -MinY;
  return result;
}

double sub_10000F31C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000F190(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10000F328()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40), v1);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10000F354(double *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(double, double))(v1 + 32))(*a1, a1[1]);
}

uint64_t sub_10000F378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009B278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000F3C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000A66C(&qword_10009B278);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000F408()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_10000F420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_10000EF58(a1, *v2, v2[1], v2[2], v2[3], a2);
}

uint64_t sub_10000F42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD v7[4];

  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  v7[3] = a4;
  return View.modifier<A>(_:)(v7, a5, &type metadata for ScrollViewOffsetModifier, a6);
}

uint64_t sub_10000F464(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100081AC4, 1);
}

ValueMetadata *type metadata accessor for ScrollViewOffsetPreferenceKey()
{
  return &type metadata for ScrollViewOffsetPreferenceKey;
}

uint64_t destroy for ScrollViewOffsetModifier(uint64_t a1)
{
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24), v2);
}

uint64_t initializeWithCopy for ScrollViewOffsetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v4);
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for ScrollViewOffsetModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8, v9);
  return a1;
}

_QWORD *assignWithTake for ScrollViewOffsetModifier(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  v5 = a1[3];
  a1[3] = v4;
  swift_release(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrollViewOffsetModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrollViewOffsetModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollViewOffsetModifier()
{
  return &type metadata for ScrollViewOffsetModifier;
}

unint64_t sub_10000F640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009B298;
  if (!qword_10009B298)
  {
    v1 = sub_10000D720(&qword_10009B290);
    sub_10000F6DC(&qword_10009B2A0, &qword_10009B278, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_10000F6DC(&qword_10009B2A8, &qword_10009B2B0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009B298);
  }
  return result;
}

uint64_t sub_10000F6DC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10000D720(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000F71C(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for ScrollViewOffsetModifier);
  sub_10000F770();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

unint64_t sub_10000F770()
{
  unint64_t result;

  result = qword_10009B2B8;
  if (!qword_10009B2B8)
  {
    result = swift_getWitnessTable(&unk_100078208, &type metadata for ScrollViewOffsetModifier);
    atomic_store(result, (unint64_t *)&qword_10009B2B8);
  }
  return result;
}

__n128 initializeWithTake for StickersParentViewController.AddStickerError(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10000F7C0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10000F7E0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGPoint()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_10009C0C0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, &unk_10008A6D8);
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_10009C0C0);
  }
}

id sub_10000F85C()
{
  id *v0;

  return *v0;
}

double sub_10000F864()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t sub_10000F870@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(_QWORD *)a2 = result;
  *(double *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  return result;
}

uint64_t sub_10000F880()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009DBF8);
  sub_10000D130(v0, (uint64_t)qword_10009DBF8);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD000000000000015, 0x8000000100073AE0);
}

unint64_t sub_10000F8F8()
{
  return sub_10000F904((uint64_t)&_swiftEmptyArrayStorage);
}

unint64_t sub_10000F904(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_10000A66C(&qword_10009B3B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v27 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v27);
    return (unint64_t)v8;
  }
  sub_10000A66C(&qword_10009B398);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = &v5[*(int *)(v2 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v29 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_100010FA8(v13, (uint64_t)v5);
    result = sub_1000102C0((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for IndexSet(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    v21 = v8[7] + 40 * v17;
    v22 = *(_OWORD *)(v10 + 8);
    v23 = *(_OWORD *)(v10 + 24);
    *(_QWORD *)v21 = *(_QWORD *)v10;
    *(_OWORD *)(v21 + 8) = v22;
    *(_OWORD *)(v21 + 24) = v23;
    v24 = v8[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_12;
    v8[2] = v26;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8, v20);
      v27 = v29;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

void *sub_10000FAAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *result;
  id v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __int128 v17;
  _BYTE v18[24];

  v3 = type metadata accessor for IndexSet(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = *(void **)(v1 + 16);
  if (result)
  {
    v8 = objc_msgSend(result, "selectedSubjectIndexes");
    static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v8);

    swift_beginAccess(v1 + 24, v18, 0, 0);
    v9 = *(_QWORD *)(v1 + 24);
    if (*(_QWORD *)(v9 + 16))
    {
      swift_bridgeObjectRetain(v9);
      v10 = sub_1000102C0((uint64_t)v6);
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(v9 + 56) + 40 * v10;
        v13 = *(void **)v12;
        v14 = *(_QWORD *)(v12 + 8);
        v17 = *(_OWORD *)(v12 + 16);
        v15 = *(_QWORD *)(v12 + 32);
        v16 = v13;
      }
      else
      {
        v13 = 0;
        v14 = 0;
        v15 = 0;
        v17 = 0u;
      }
      swift_bridgeObjectRelease(v9);
    }
    else
    {
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v17 = 0u;
    }
    result = (void *)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    *(_QWORD *)a1 = v13;
    *(_QWORD *)(a1 + 8) = v14;
    *(_OWORD *)(a1 + 16) = v17;
    *(_QWORD *)(a1 + 32) = v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000FBFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = swift_allocObject(v1, 32, 7);
  v4 = sub_10000F904((uint64_t)&_swiftEmptyArrayStorage);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v4;
  sub_10000FC94();
  return v3;
}

_QWORD *sub_10000FC44(void *a1)
{
  _QWORD *v1;
  unint64_t v3;
  void (*v4)(void);
  id v5;

  v3 = sub_10000F904((uint64_t)&_swiftEmptyArrayStorage);
  v1[2] = a1;
  v1[3] = v3;
  v4 = *(void (**)(void))(*v1 + 136);
  v5 = a1;
  v4();

  return v1;
}

uint64_t sub_10000FC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSIndexSet *v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSIndexSet *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t aBlock[5];
  char *v53;
  char v54[24];

  v1 = v0;
  v2 = type metadata accessor for IndexSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = __chkstk_darwin(v2);
  v6 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v49 - v8;
  result = __chkstk_darwin(v7);
  v12 = (char *)&v49 - v11;
  v13 = *(void **)(v0 + 16);
  if (v13)
  {
    v14 = objc_msgSend(*(id *)(v0 + 16), "selectedSubjectIndexes");
    static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v14);

    swift_beginAccess(v1 + 24, v54, 0, 0);
    v15 = *(_QWORD *)(v1 + 24);
    v16 = *(NSIndexSet **)(v15 + 16);
    if (v16
      && (swift_bridgeObjectRetain(*(_QWORD *)(v1 + 24)),
          sub_1000102C0((uint64_t)v12),
          v18 = v17,
          swift_bridgeObjectRelease(v15),
          (v18 & 1) != 0))
    {
      if (qword_10009DBF0 != -1)
        swift_once(&qword_10009DBF0, sub_10000F880);
      v19 = type metadata accessor for Logger(0);
      sub_10000D130(v19, (uint64_t)qword_10009DBF8);
      v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))(v6, v12, v2);
      v21 = Logger.logObject.getter(v20);
      v22 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc(12, -1);
        v24 = swift_slowAlloc(32, -1);
        aBlock[0] = v24;
        *(_DWORD *)v23 = 136315138;
        v50 = v23 + 4;
        v25 = sub_100010F68(&qword_10009B2C0, (uint64_t)&protocol conformance descriptor for IndexSet);
        v26 = dispatch thunk of CustomStringConvertible.description.getter(v2, v25);
        v28 = v27;
        v51 = sub_10000C99C(v26, v27, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, aBlock, v50, v23 + 12);
        swift_bridgeObjectRelease(v28);
        v29 = *(void (**)(char *, uint64_t))(v3 + 8);
        v29(v6, v2);
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Already have an image for %s", v23, 0xCu);
        swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v24, -1, -1);
        swift_slowDealloc(v23, -1, -1);

      }
      else
      {

        v29 = *(void (**)(char *, uint64_t))(v3 + 8);
        v29(v6, v2);
      }
      return ((uint64_t (*)(char *, uint64_t))v29)(v12, v2);
    }
    else
    {
      IndexSet._bridgeToObjectiveC()(v16);
      v31 = v30;
      objc_msgSend(v13, "imageSubjectBoundsWithIndexes:", v30);
      v33 = v32;
      v35 = v34;
      v37 = v36;
      v39 = v38;

      IndexSet._bridgeToObjectiveC()(v40);
      v42 = v41;
      v43 = swift_allocObject(&unk_10008A770, 24, 7);
      swift_weakInit(v43 + 16, v1);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v12, v2);
      v44 = *(unsigned __int8 *)(v3 + 80);
      v45 = (v44 + 56) & ~v44;
      v46 = (char *)swift_allocObject(&unk_10008A798, v45 + v4, v44 | 7);
      *((_QWORD *)v46 + 2) = v43;
      *((_QWORD *)v46 + 3) = v33;
      *((_QWORD *)v46 + 4) = v35;
      *((_QWORD *)v46 + 5) = v37;
      *((_QWORD *)v46 + 6) = v39;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v46[v45], v9, v2);
      aBlock[4] = (uint64_t)sub_1000103BC;
      v53 = v46;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10001021C;
      aBlock[3] = (uint64_t)&unk_10008A7B0;
      v47 = _Block_copy(aBlock);
      swift_release(v53, v48);
      objc_msgSend(v13, "loadImageSubjectWithIndexes:completion:", v42, v47);
      _Block_release(v47);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000100A8(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  _BYTE v27[24];
  _QWORD v28[5];

  v14 = type metadata accessor for IndexSet(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v26[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v20 = Strong;
    if (a1)
    {
      v28[0] = a1;
      *(double *)&v28[1] = a4;
      *(double *)&v28[2] = a5;
      *(double *)&v28[3] = a6;
      *(double *)&v28[4] = a7;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v17, a3, v14);
      swift_beginAccess(v20 + 24, v26, 33, 0);
      v21 = a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v20 + 24));
      v25 = *(_QWORD *)(v20 + 24);
      *(_QWORD *)(v20 + 24) = 0x8000000000000000;
      sub_100010AF4((uint64_t)v28, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
      v23 = *(_QWORD *)(v20 + 24);
      *(_QWORD *)(v20 + 24) = v25;
      swift_bridgeObjectRelease(v23);
      (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v17, v14);
      swift_endAccess(v26);
      swift_release(v20, v24);

    }
    else
    {
      swift_release(Strong, v19);
    }
  }
}

void sub_10001021C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v6 = a2;
  v4(a2);
  swift_release(v3, v5);

}

uint64_t sub_100010270()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t sub_100010294()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

unint64_t sub_1000102C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for IndexSet(0);
  v6 = sub_100010F68(&qword_10009B3A0, (uint64_t)&protocol conformance descriptor for IndexSet);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1000105EC(a1, v7);
}

uint64_t sub_100010324()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100010348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for IndexSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16), v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000103BC(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexSet(0) - 8) + 80);
  sub_1000100A8(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 56) & ~v3), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48));
}

uint64_t sub_100010404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100010414(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

void destroy for StickerUIPreview(id *a1)
{

}

uint64_t initializeWithCopy for StickerUIPreview(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for StickerUIPreview(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for StickerUIPreview(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for StickerUIPreview(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerUIPreview(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerUIPreview(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerUIPreview()
{
  return &type metadata for StickerUIPreview;
}

uint64_t type metadata accessor for StickerUIPreviewCache()
{
  return objc_opt_self(_TtC22StickersUltraExtension21StickerUIPreviewCache);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_100011004(a1, (unint64_t *)&unk_10009BC80, (uint64_t)&unk_10008A8C0);
}

unint64_t sub_1000105EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v18 = a1;
  v5 = type metadata accessor for IndexSet(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_100010F68(&qword_10009B3A8, (uint64_t)&protocol conformance descriptor for IndexSet);
      v15 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v18, v5, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v15 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_100010724(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  __int128 v35;
  uint64_t v36;
  void *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t i;
  int v54;
  __int128 v55;
  __int128 v56;

  v3 = v2;
  v6 = type metadata accessor for IndexSet(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10000A66C(&qword_10009B398);
  v54 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v13 = v10;
  v14 = v11;
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_43;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = *(_QWORD *)(v13 + 64);
  v52 = (_QWORD *)(v13 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v50 = v3;
  v51 = (unint64_t)(v15 + 63) >> 6;
  v19 = v11 + 64;
  result = swift_retain(v13);
  v22 = 0;
  for (i = v13; ; v13 = i)
  {
    if (v18)
    {
      v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v26 = v25 | (v22 << 6);
      goto LABEL_24;
    }
    v27 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v27 >= v51)
      break;
    v28 = v52;
    v29 = v52[v27];
    ++v22;
    if (!v29)
    {
      v22 = v27 + 1;
      if (v27 + 1 >= v51)
        goto LABEL_36;
      v29 = v52[v22];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v51)
        {
LABEL_36:
          swift_release(v13, v21);
          v3 = v50;
          if ((v54 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v29 = v52[v30];
        if (!v29)
        {
          while (1)
          {
            v22 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_45;
            if (v22 >= v51)
              goto LABEL_36;
            v29 = v52[v22];
            ++v30;
            if (v29)
              goto LABEL_23;
          }
        }
        v22 = v30;
      }
    }
LABEL_23:
    v18 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_24:
    v31 = *(_QWORD *)(v7 + 72);
    v32 = *(_QWORD *)(v13 + 48) + v31 * v26;
    if ((v54 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v9, v32, v6);
      v33 = *(_QWORD *)(v13 + 56) + 40 * v26;
      v34 = *(id *)v33;
      v35 = *(_OWORD *)(v33 + 24);
      v55 = *(_OWORD *)(v33 + 8);
      v56 = v35;
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, v32, v6);
      v36 = *(_QWORD *)(v13 + 56) + 40 * v26;
      v37 = *(void **)v36;
      v38 = *(_OWORD *)(v36 + 24);
      v55 = *(_OWORD *)(v36 + 8);
      v56 = v38;
      v34 = v37;
    }
    v39 = *(_QWORD *)(v14 + 40);
    v40 = sub_100010F68(&qword_10009B3A0, (uint64_t)&protocol conformance descriptor for IndexSet);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v39, v6, v40);
    v41 = -1 << *(_BYTE *)(v14 + 32);
    v42 = result & ~v41;
    v43 = v42 >> 6;
    if (((-1 << v42) & ~*(_QWORD *)(v19 + 8 * (v42 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v42) & ~*(_QWORD *)(v19 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v46 = v43 == v45;
        if (v43 == v45)
          v43 = 0;
        v44 |= v46;
        v47 = *(_QWORD *)(v19 + 8 * v43);
      }
      while (v47 == -1);
      v23 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v14 + 48) + v31 * v23, v9, v6);
    v24 = *(_QWORD *)(v14 + 56) + 40 * v23;
    *(_QWORD *)v24 = v34;
    *(_OWORD *)(v24 + 8) = v55;
    *(_OWORD *)(v24 + 24) = v56;
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release(v13, v21);
  v3 = v50;
  v28 = v52;
  if ((v54 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v48 = 1 << *(_BYTE *)(v13 + 32);
  if (v48 >= 64)
    bzero(v28, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v48;
  *(_QWORD *)(v13 + 16) = 0;
LABEL_43:
  result = swift_release(v13, v12);
  *v3 = v14;
  return result;
}

void sub_100010AF4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  __int128 v22;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for IndexSet(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1000102C0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 40 * v14;

      v22 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)v21 = *(_OWORD *)a1;
      *(_OWORD *)(v21 + 16) = v22;
      *(_QWORD *)(v21 + 32) = *(_QWORD *)(a1 + 32);
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_100010D0C();
    goto LABEL_7;
  }
  sub_100010724(v17, a3 & 1);
  v23 = sub_1000102C0(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_100010C60(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_100010C60(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for IndexSet(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = a4[7] + 40 * a1;
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(a3 + 32);
  v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v12;
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

id sub_100010D0C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, char *, uint64_t);
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  __int128 v34;

  v1 = type metadata accessor for IndexSet(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A66C(&qword_10009B398);
  v31 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release(v5, v7);
    *v31 = v8;
    return result;
  }
  result = (id)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v32 = v5 + 64;
  v33 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    v27 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v33)
      goto LABEL_26;
    v28 = *(_QWORD *)(v32 + 8 * v27);
    ++v12;
    if (!v28)
    {
      v12 = v27 + 1;
      if (v27 + 1 >= v33)
        goto LABEL_26;
      v28 = *(_QWORD *)(v32 + 8 * v12);
      if (!v28)
        break;
    }
LABEL_25:
    v15 = (v28 - 1) & v28;
    v17 = __clz(__rbit64(v28)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v2 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v18, v1);
    v19 = 40 * v17;
    v20 = *(_QWORD *)(v5 + 56) + v19;
    v21 = *(void **)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 32);
    v24 = *(_QWORD *)(v8 + 48) + v18;
    v25 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 32);
    v34 = *(_OWORD *)(v20 + 16);
    v25(v24, v4, v1);
    v26 = *(_QWORD *)(v8 + 56) + v19;
    *(_QWORD *)v26 = v21;
    *(_QWORD *)(v26 + 8) = v22;
    *(_OWORD *)(v26 + 16) = v34;
    *(_QWORD *)(v26 + 32) = v23;
    result = v21;
  }
  v29 = v27 + 2;
  if (v29 >= v33)
    goto LABEL_26;
  v28 = *(_QWORD *)(v32 + 8 * v29);
  if (v28)
  {
    v12 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v12 >= v33)
      goto LABEL_26;
    v28 = *(_QWORD *)(v32 + 8 * v12);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100010F68(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IndexSet(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100010FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009B3B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_100011004(a1, (unint64_t *)&unk_10009BB40, (uint64_t)&unk_10008A940);
}

void sub_100011004(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_100011070()
{
  return sub_10000D5F4(0, &qword_10009B3B8, AVPlayerLayer_ptr);
}

void *sub_100011098()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_player);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_player, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1000110E4(void *a1)
{
  _QWORD *v1;
  id *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v3 = (id *)((char *)v1 + OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_player);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_player, v8, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  v6 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x90))();
  v7 = *v3;
  objc_msgSend(v6, "setPlayer:", v7);

}

void (*sub_100011190(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_player;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_1000111E8;
}

void sub_1000111E8(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = (_QWORD *)*a1;
  v4 = swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v5 = (_QWORD *)v3[3];
    v6 = v3[4];
    v7 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x90))(v4);
    v8 = *(id *)((char *)v5 + v6);
    objc_msgSend(v7, "setPlayer:", v8);

  }
  free(v3);
}

void *sub_10001126C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_playerItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_playerItem, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1000112B8(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_playerItem);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_100011308(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_playerItem, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_10001134C()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, "layer");
  v2 = objc_opt_self(AVPlayerLayer);
  return swift_dynamicCastObjCClassUnconditional(v1, v2, 0, 0, 0);
}

id sub_1000113A4(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_super v10;

  *(_QWORD *)&v4[OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_player] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_playerItem] = 0;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for PlayerView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

uint64_t type metadata accessor for PlayerView()
{
  return objc_opt_self(_TtC22StickersUltraExtension10PlayerView);
}

id sub_1000114C0(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_player] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension10PlayerView_playerItem] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PlayerView();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_100011580()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlayerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double variable initialization expression of iMessageAppsRegistry.extensionMatchingContext@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1000115F4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009DC18);
  sub_10000D130(v0, (uint64_t)qword_10009DC18);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD000000000000015, 0x8000000100073D30);
}

uint64_t (*sub_10001166C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerItemContext, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1000116B0()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_startPlaybackWhenReady);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_startPlaybackWhenReady, v3, 0, 0);
  return *v1;
}

uint64_t sub_1000116F4(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_startPlaybackWhenReady);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*sub_10001173C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_startPlaybackWhenReady, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_100011780()
{
  char *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  _QWORD *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(void);
  _QWORD *v13;
  void *v14;
  objc_class *v15;
  _BYTE v17[24];
  char v18[24];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  objc_super v23;

  v1 = v0;
  v2 = OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView;
  v3 = *(_QWORD **)&v0[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView];
  v4 = *(uint64_t (**)(void))((swift_isaMask & *v3) + 0x60);
  v5 = v3;
  v6 = (id)v4();

  if (v6)
  {
    v7 = (uint64_t)&v1[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerObserver];
    swift_beginAccess(&v1[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerObserver], v18, 0, 0);
    sub_100011940(v7, (uint64_t)&v19);
    if (*((_QWORD *)&v20 + 1))
    {
      sub_1000119C8(&v19, &v21);
      v8 = v22;
      v9 = sub_10000E538(&v21, v22);
      v6 = v6;
      v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v8);
      objc_msgSend(v6, "removeTimeObserver:", v10);
      swift_unknownObjectRelease(v10);
      v19 = 0u;
      v20 = 0u;
      swift_beginAccess(v7, v17, 33, 0);
      sub_1000124D4((uint64_t)&v19, v7);
      swift_endAccess(v17);

      sub_10000D4A4(&v21);
    }
    else
    {
      sub_100011988((uint64_t)&v19);
    }

  }
  v11 = *(_QWORD **)&v1[v2];
  v12 = *(uint64_t (**)(void))((swift_isaMask & *v11) + 0x60);
  v13 = v11;
  v14 = (void *)v12();

  objc_msgSend(v14, "pause");
  v15 = (objc_class *)type metadata accessor for LivePhotoView();
  v23.receiver = v1;
  v23.super_class = v15;
  return objc_msgSendSuper2(&v23, "dealloc");
}

uint64_t type metadata accessor for LivePhotoView()
{
  return objc_opt_self(_TtC22StickersUltraExtension13LivePhotoView);
}

uint64_t sub_100011940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C((uint64_t *)&unk_10009BC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100011988(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000A66C((uint64_t *)&unk_10009BC90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1000119C8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

_QWORD *sub_100011A64(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_100011AA4(a1, a2);
}

_QWORD *sub_100011AA4(void *a1, void *a2)
{
  _BYTE *v2;
  _OWORD *v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  Class isa;
  id v26;
  void *v27;
  id v28;
  _QWORD *v29;
  NSString v30;
  id v31;
  _QWORD *v32;
  void (*v33)(id);
  _QWORD *v34;
  id v35;
  _QWORD *v36;
  void (*v37)(id);
  _QWORD *v38;
  id v39;
  objc_super v41;

  v5 = &v2[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerObserver];
  *v5 = 0u;
  v5[1] = 0u;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerItemContext] = 0;
  v2[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_startPlaybackWhenReady] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_stillImage] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_livePhoto] = a2;
  v6 = objc_allocWithZone((Class)UIImageView);
  v7 = v2;
  v8 = a1;
  v9 = a2;
  v10 = objc_msgSend(v6, "initWithImage:", v8);
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_stillImageView] = v10;
  objc_msgSend(v10, "setContentMode:", 1);
  v11 = type metadata accessor for PlayerView();
  v12 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11)), "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView] = v12;
  v13 = v12;
  objc_msgSend(v13, "setContentMode:", 1);

  v41.receiver = v7;
  v41.super_class = (Class)type metadata accessor for LivePhotoView();
  v14 = objc_msgSendSuper2(&v41, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v14, "setContentMode:", 1);
  v15 = OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_stillImageView;
  v16 = *(void **)((char *)v14 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_stillImageView);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView;
  objc_msgSend(*(id *)((char *)v14 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "addSubview:", *(_QWORD *)((char *)v14 + v17));
  objc_msgSend(v14, "addSubview:", v16);
  v18 = *(uint64_t (**)(void))((swift_isaMask & *v14) + 0xF8);
  v19 = *(id *)((char *)v14 + v17);
  v20 = v18();

  v21 = *(id *)((char *)v14 + v15);
  v22 = v18();

  sub_100011E6C(v22);
  v23 = (void *)objc_opt_self(NSLayoutConstraint);
  v24 = v20;
  sub_10000D5F4(0, (unint64_t *)&qword_10009B0D0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v24);
  objc_msgSend(v23, "activateConstraints:", isa);

  v26 = objc_msgSend(v9, "videoAsset");
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(objc_allocWithZone((Class)AVPlayerItem), "initWithAsset:", v26);
    v29 = v14;
    v30 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "addObserver:forKeyPath:options:context:", v29, v30, 1, (char *)v29 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerItemContext);

    v31 = objc_msgSend(objc_allocWithZone((Class)AVPlayer), "initWithPlayerItem:", v28);
    objc_msgSend(v31, "setActionAtItemEnd:", 2);
    objc_msgSend(v31, "setMuted:", 1);
    v32 = *(_QWORD **)((char *)v14 + v17);
    v33 = *(void (**)(id))((swift_isaMask & *v32) + 0x68);
    v34 = v32;
    v35 = v31;
    v33(v31);

    v36 = *(_QWORD **)((char *)v14 + v17);
    v37 = *(void (**)(id))((swift_isaMask & *v36) + 0x80);
    v38 = v36;
    v39 = v28;
    v37(v28);

  }
  return v14;
}

uint64_t sub_100011E6C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_100014C20(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

void sub_100012024(uint64_t a1, uint64_t a2, uint64_t a3, Class isa, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  objc_class *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  __int128 v48;
  uint64_t v49;
  objc_super v50;

  v6 = v5;
  v13 = sub_10001166C((uint64_t)&v43);
  if (!a5)
  {
    ((void (*)(__int128 *, _QWORD))v13)(&v43, 0);
    if (a2)
      goto LABEL_4;
    goto LABEL_6;
  }
  v14 = v12;
  ((void (*)(__int128 *, _QWORD))v13)(&v43, 0);
  if (v14 != a5)
  {
    if (a2)
    {
LABEL_4:
      v15 = String._bridgeToObjectiveC()();
      goto LABEL_7;
    }
LABEL_6:
    v15 = 0;
LABEL_7:
    sub_100011940(a3, (uint64_t)&v43);
    v16 = *((_QWORD *)&v44 + 1);
    if (*((_QWORD *)&v44 + 1))
    {
      v17 = sub_10000E538(&v43, *((uint64_t *)&v44 + 1));
      v18 = *(_QWORD *)(v16 - 8);
      __chkstk_darwin(v17);
      v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v20);
      v21 = _bridgeAnythingToObjectiveC<A>(_:)(v20, v16);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
      sub_10000D4A4(&v43);
      if (!isa)
      {
LABEL_10:
        v22 = (objc_class *)type metadata accessor for LivePhotoView();
        v50.receiver = v6;
        v50.super_class = v22;
        objc_msgSendSuper2(&v50, "observeValueForKeyPath:ofObject:change:context:", v15, v21, isa, a5);

        swift_unknownObjectRelease(v21);
        return;
      }
    }
    else
    {
      v21 = 0;
      if (!isa)
        goto LABEL_10;
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_1000147D4(&qword_10009B408, (uint64_t)&unk_1000784F8);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    goto LABEL_10;
  }
  if (a2
    && (a1 == 0x737574617473 && a2 == 0xE600000000000000
     || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x737574617473, 0xE600000000000000, 0) & 1) != 0))
  {
    sub_100011940(a3, (uint64_t)&v48);
    if (!v49)
    {
      sub_100011988((uint64_t)&v48);
      return;
    }
    sub_1000119C8(&v48, &v43);
    v23 = sub_10000D5F4(0, &qword_10009B410, AVPlayerItem_ptr);
    swift_dynamicCast(&v47, &v43, (char *)&type metadata for Any + 8, v23, 7);
    v24 = v47;
    if (objc_msgSend(v47, "status") != (id)1)
      goto LABEL_37;
    v25 = objc_msgSend(v24, "loadedTimeRanges");
    v26 = sub_10000D5F4(0, &qword_10009B418, NSValue_ptr);
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

    if ((unint64_t)v27 >> 62)
    {
      if (v27 < 0)
        v35 = v27;
      else
        v35 = v27 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v27);
      v36 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(v27);
      if (v36)
        goto LABEL_22;
    }
    else if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_22:
      if ((v27 & 0xC000000000000001) != 0)
      {
        v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
        goto LABEL_25;
      }
      if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v28 = *(id *)(v27 + 32);
LABEL_25:
        v29 = v28;
        swift_bridgeObjectRelease(v27);
        objc_msgSend(v29, "CMTimeRangeValue");
        v30 = v43;
        v31 = v46;
        v32 = *((_QWORD *)&v43 + 1);
        v33 = v45;
        v42 = v44;

        *(_QWORD *)&v43 = v30;
        *((_QWORD *)&v43 + 1) = v32;
        v44 = v42;
        v45 = v33;
        v46 = v31;
        v34 = objc_msgSend(v24, "setLoopTimeRange:", &v43);
LABEL_35:
        if (((*(uint64_t (**)(id))((swift_isaMask & *v6) + 0xD8))(v34) & 1) != 0)
          (*(void (**)(void))((swift_isaMask & *v6) + 0x110))();
LABEL_37:

        return;
      }
      __break(1u);
      goto LABEL_40;
    }
    swift_bridgeObjectRelease(v27);
    if (qword_10009DC10 == -1)
    {
LABEL_32:
      v37 = type metadata accessor for Logger(0);
      v38 = sub_10000D130(v37, (uint64_t)qword_10009DC18);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Could not set loopTimeRange", v41, 2u);
        swift_slowDealloc(v41, -1, -1);
      }

      goto LABEL_35;
    }
LABEL_40:
    swift_once(&qword_10009DC10, sub_1000115F4);
    goto LABEL_32;
  }
}

uint64_t sub_1000124D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C((uint64_t *)&unk_10009BC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001263C(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v3 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100078360;
  v5 = objc_msgSend(a1, "leftAnchor");
  v6 = objc_msgSend(v1, "leftAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(a1, "rightAnchor");
  v9 = objc_msgSend(v1, "rightAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(a1, "topAnchor");
  v12 = objc_msgSend(v1, "topAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(a1, "bottomAnchor");
  v15 = objc_msgSend(v1, "bottomAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v4 + 56) = v16;
  specialized Array._endMutation()();
  return v4;
}

void sub_100012824()
{
  _BYTE *v0;
  _OWORD *v1;

  v1 = &v0[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerObserver];
  *v1 = 0u;
  v1[1] = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerItemContext] = 0;
  v0[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_startPlaybackWhenReady] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100073990, "StickersUltraExtension/LivePhotoView.swift", 42, 2, 118, 0);
  __break(1u);
}

id sub_100012958()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_stillImage), "size");
}

void sub_100012970(void *a1, CMTimeValue *a2, Swift::Double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  CMTimeValue v7;
  CMTimeValue v8;
  void *v9;
  CMTimeEpoch v10;
  void (*v11)(char);
  CMTimeValue v12;
  uint64_t v13;
  _QWORD *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t (*v31)(void);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  Class isa;
  void (*v45)(id);
  void (*v46)(id);
  CMTimeValue value;
  uint64_t timescale;
  uint64_t flags;
  CMTimeEpoch epoch;
  double v51;
  uint64_t v52;
  _QWORD *v53;
  os_log_type_t v54;
  uint64_t v55;
  _QWORD *v56;
  id v57;
  id v58;
  CMTimeScale v59;
  CMTimeFlags v60;
  CMTimeEpoch v61;
  Swift::Int32 v62;
  Swift::Int64 v63;
  Swift::Int32 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  _QWORD *v69;
  id v70;
  _QWORD *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t (*v76)(void);
  _QWORD *v77;
  CMTimeValue v78;
  _QWORD *v79;
  uint64_t v80;
  Swift::Int64 v81;
  Swift::Int64 v82;
  uint64_t v83;
  Swift::Int64 v84;
  CMTimeEpoch v85;
  id v86;
  id v87;
  uint64_t v88;
  CMTimeFlags v89;
  uint64_t v90;
  CMTimeScale v91;
  uint64_t v92;
  CMTimeValue v93;
  id v94;
  uint64_t v95;
  id v96;
  _QWORD *v97;
  CMTime v98;
  CMTime rhs;
  CMTime lhs;
  void *v101;
  void (*v102)(char);
  _QWORD *v103;
  __C::CMTime v104;
  __C::CMTime v105;

  v4 = v3;
  if (!a1)
  {
    if (qword_10009DC10 != -1)
      swift_once(&qword_10009DC10, sub_1000115F4);
    v22 = type metadata accessor for Logger(0);
    sub_10000D130(v22, (uint64_t)qword_10009DC18);
    v97 = v3;
    v15 = Logger.logObject.getter(v97);
    v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v24 = 138412290;
      lhs.value = (CMTimeValue)v97;
      v26 = v97;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&lhs, &lhs.timescale, v24 + 4, v24 + 12);
      *v25 = v97;

      _os_log_impl((void *)&_mh_execute_header, v15, v23, "Nil video composition for LivePhotoAuditionView %@.", v24, 0xCu);
      v27 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
      swift_arrayDestroy(v25, 1, v27);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
      goto LABEL_14;
    }

LABEL_17:
    return;
  }
  v7 = *a2;
  v8 = a2[1];
  v10 = a2[2];
  v9 = (void *)a2[3];
  v11 = (void (*)(char))a2[4];
  v12 = a2[5];
  v97 = a1;
  if ((CMTimeRange.isValid.getter() & 1) == 0
    || (CMTimeRange.isEmpty.getter() & 1) != 0
    || (CMTimeRange.isIndefinite.getter() & 1) != 0)
  {
    if (qword_10009DC10 != -1)
      swift_once(&qword_10009DC10, sub_1000115F4);
    v13 = type metadata accessor for Logger(0);
    sub_10000D130(v13, (uint64_t)qword_10009DC18);
    v14 = v3;
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v17 = 138412290;
      lhs.value = (CMTimeValue)v14;
      v19 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&lhs, &lhs.timescale, v17 + 4, v17 + 12);
      *v18 = v14;

      _os_log_impl((void *)&_mh_execute_header, v15, v16, "invalid time range for video composition for LivePhotoAuditionView. %@", v17, 0xCu);
      v20 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
      swift_arrayDestroy(v18, 1, v20);
      swift_slowDealloc(v18, -1, -1);
      v21 = (uint64_t)v17;
LABEL_9:
      swift_slowDealloc(v21, -1, -1);

LABEL_14:
      return;
    }

    goto LABEL_17;
  }
  v28 = *(void **)((char *)v3 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_livePhoto);
  v96 = objc_msgSend(v28, "videoAsset");
  if (!v96)
  {
LABEL_23:
    if (qword_10009DC10 != -1)
      swift_once(&qword_10009DC10, sub_1000115F4);
    v52 = type metadata accessor for Logger(0);
    sub_10000D130(v52, (uint64_t)qword_10009DC18);
    v53 = v4;
    v15 = Logger.logObject.getter(v53);
    v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v54))
    {
      v55 = swift_slowAlloc(32, -1);
      v56 = (_QWORD *)swift_slowAlloc(24, -1);
      *(_DWORD *)v55 = 138412802;
      v57 = objc_msgSend(v28, "videoAsset");
      v58 = v57;
      if (v57)
        lhs.value = (CMTimeValue)v57;
      else
        lhs.value = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&lhs, &lhs.timescale, v55 + 4, v55 + 12);
      *v56 = v58;
      *(_WORD *)(v55 + 12) = 2112;
      v75 = *(_QWORD **)((char *)v53 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView);
      v76 = *(uint64_t (**)(void))((swift_isaMask & *v75) + 0x60);
      v77 = v75;
      v78 = v76();

      if (v78)
        lhs.value = v78;
      else
        lhs.value = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&lhs, &lhs.timescale, v55 + 14, v55 + 22);
      v56[1] = v78;
      *(_WORD *)(v55 + 22) = 2112;
      lhs.value = (CMTimeValue)v53;
      v79 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&lhs, &lhs.timescale, v55 + 24, v55 + 32);
      v56[2] = v53;

      _os_log_impl((void *)&_mh_execute_header, v15, v54, "Either live photo asset %@ or player %@ are nil. %@", (uint8_t *)v55, 0x20u);
      v80 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
      swift_arrayDestroy(v56, 3, v80);
      swift_slowDealloc(v56, -1, -1);
      v21 = v55;
      goto LABEL_9;
    }

    goto LABEL_17;
  }
  v29 = OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView;
  v30 = *(_QWORD **)((char *)v3 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView);
  v31 = *(uint64_t (**)(void))((swift_isaMask & *v30) + 0x60);
  v32 = v30;
  v33 = v31();

  if (!v33)
  {

    goto LABEL_23;
  }
  v34 = swift_allocObject(&unk_10008A968, 40, 7);
  *(_OWORD *)(v34 + 16) = *(_OWORD *)a2;
  v95 = v34;
  *(_QWORD *)(v34 + 32) = a2[2];
  v35 = CMTimeRange.end.getter();
  v90 = v36;
  v92 = v35;
  v88 = v37;
  v86 = (id)v33;
  v38 = objc_msgSend(objc_allocWithZone((Class)AVPlayerItem), "initWithAsset:", v96);
  lhs.value = v7;
  *(_QWORD *)&lhs.timescale = v8;
  lhs.epoch = v10;
  v101 = v9;
  v102 = v11;
  v103 = (_QWORD *)v12;
  objc_msgSend(v38, "setLoopTimeRange:", &lhs);
  objc_msgSend(v38, "setVideoComposition:", v97);
  v39 = objc_msgSend(objc_allocWithZone((Class)AVPlayer), "initWithPlayerItem:", v38);
  objc_msgSend(v39, "setActionAtItemEnd:", 2);
  objc_msgSend(v39, "setMuted:", 1);
  v40 = type metadata accessor for PlayerView();
  v41 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v40)), "init");
  objc_msgSend(v41, "setContentMode:", 1);
  objc_msgSend(v41, "setHidden:", 1);
  objc_msgSend(v41, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v4, "insertSubview:aboveSubview:", v41, *(_QWORD *)((char *)v4 + v29));
  v42 = (void *)objc_opt_self(NSLayoutConstraint);
  v43 = (*(uint64_t (**)(_QWORD *))((swift_isaMask & *v4) + 0xF8))(v41);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B0D0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v43);
  objc_msgSend(v42, "activateConstraints:", isa);

  v45 = *(void (**)(id))((swift_isaMask & *v41) + 0x68);
  v87 = v39;
  v45(v39);
  v46 = *(void (**)(id))((swift_isaMask & *v41) + 0x80);
  v94 = v38;
  v46(v38);
  objc_msgSend(v86, "currentTime");
  value = lhs.value;
  timescale = lhs.timescale;
  flags = lhs.flags;
  epoch = lhs.epoch;
  v51 = CMTime.seconds.getter(v92, v90, v88);
  if (a3 + a3 <= v51 - CMTime.seconds.getter(value, timescale | (flags << 32), epoch))
  {
    rhs = (CMTime)CMTime.init(seconds:preferredTimescale:)(a3, 5000);
    lhs.value = value;
    lhs.timescale = timescale;
    lhs.flags = flags;
    lhs.epoch = epoch;
    CMTimeAdd(&v98, &lhs, &rhs);
    v59 = v98.timescale;
    v60 = v98.flags;
    v61 = v98.epoch;
    v93 = v98.value;
    *(_QWORD *)(v95 + 16) = v98.value;
    v91 = v59;
    *(_DWORD *)(v95 + 24) = v59;
    *(_DWORD *)(v95 + 28) = v60;
    v89 = v60;
    v85 = v61;
    *(_QWORD *)(v95 + 32) = v61;
  }
  else
  {
    v93 = *(_QWORD *)(v95 + 16);
    v91 = *(_DWORD *)(v95 + 24);
    v89 = *(_DWORD *)(v95 + 28);
    v85 = *(_QWORD *)(v95 + 32);
  }
  v104 = CMTime.init(value:timescale:)(1, 60);
  v62 = v104.timescale;
  v84 = v104.epoch;
  v82 = v104.value;
  v83 = HIDWORD(*(_QWORD *)&v104.timescale);
  v105 = CMTime.init(value:timescale:)(1, 60);
  v63 = v105.value;
  v64 = v105.timescale;
  v81 = v105.epoch;
  v65 = HIDWORD(*(_QWORD *)&v105.timescale);
  v66 = swift_allocObject(&unk_10008A990, 24, 7);
  swift_unknownObjectWeakInit(v66 + 16, v4);
  v67 = (_QWORD *)swift_allocObject(&unk_10008A9B8, 56, 7);
  v67[2] = v66;
  v67[3] = v95;
  v67[4] = v41;
  v67[5] = v86;
  v67[6] = v87;
  v102 = sub_100014110;
  v103 = v67;
  lhs.value = (CMTimeValue)_NSConcreteStackBlock;
  *(_QWORD *)&lhs.timescale = 1107296256;
  lhs.epoch = (CMTimeEpoch)sub_100013408;
  v101 = &unk_10008A9D0;
  v68 = _Block_copy(&lhs);
  v69 = v103;
  v70 = v87;
  swift_retain(v95);
  v71 = v41;
  v72 = v86;
  swift_release(v69, v73);
  lhs.timescale = v91;
  lhs.flags = v89;
  lhs.epoch = v85;
  rhs.timescale = v62;
  rhs.flags = v83;
  rhs.epoch = v84;
  lhs.value = v93;
  v98.value = v63;
  v98.timescale = v64;
  v98.flags = v65;
  v98.epoch = v81;
  rhs.value = v82;
  objc_msgSend(v70, "seekToTime:toleranceBefore:toleranceAfter:completionHandler:", &lhs, &rhs, &v98, v68);
  _Block_release(v68);

  swift_release(v95, v74);
}

uint64_t sub_100013410(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3, v5);
}

void sub_10001344C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  _QWORD *v4;
  void *v5;
  id v6;
  unsigned int v7;
  void **v8;
  void **v9;
  void **v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void (*v23)();
  uint64_t v24;

  v1 = v0;
  v2 = *(_QWORD **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView);
  v3 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x60);
  v4 = v2;
  v5 = (void *)v3();

  if (v5)
  {
    v6 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
    v19 = 0;
    v7 = objc_msgSend(v6, "setCategory:mode:options:error:", AVAudioSessionCategoryPlayback, AVAudioSessionModeDefault, 1, &v19);

    v8 = v19;
    if (v7)
    {
      v9 = v19;
    }
    else
    {
      v10 = v19;
      v11 = _convertNSErrorToError(_:)(v8);

      swift_willThrow();
      swift_errorRelease(v11);
    }
    objc_msgSend(v5, "play");
    v12 = (void *)objc_opt_self(UIView);
    v13 = swift_allocObject(&unk_10008A990, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16, v1);
    v23 = sub_10001453C;
    v24 = v13;
    v19 = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_10000C1B4;
    v22 = &unk_10008A9F8;
    v14 = _Block_copy(&v19);
    swift_release(v24, v15);
    v16 = swift_allocObject(&unk_10008A990, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16, v1);
    v23 = sub_100014544;
    v24 = v16;
    v19 = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_100013408;
    v22 = &unk_10008AA20;
    v17 = _Block_copy(&v19);
    swift_release(v24, v18);
    objc_msgSend(v12, "animateWithDuration:animations:completion:", v14, v17, 0.2);
    _Block_release(v17);
    _Block_release(v14);

  }
}

void sub_1000136A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  _QWORD *v3;
  id v4;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView);
  v2 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x60);
  v3 = v1;
  v4 = (id)v2();

  objc_msgSend(v4, "pause");
}

void sub_100013714()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;

  v1 = v0;
  v2 = *(_QWORD **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView);
  v3 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x60);
  v4 = v2;
  v5 = (void *)v3();

  if (v5)
  {
    v6 = (void *)objc_opt_self(UIView);
    v7 = swift_allocObject(&unk_10008A990, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16, v1);
    v20 = sub_1000145BC;
    v21 = v7;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_10000C1B4;
    v19 = &unk_10008AA48;
    v8 = _Block_copy(&v16);
    swift_release(v21, v9);
    v10 = swift_allocObject(&unk_10008A990, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v1);
    v11 = swift_allocObject(&unk_10008AA80, 32, 7);
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v5;
    v20 = sub_100014674;
    v21 = v11;
    v16 = _NSConcreteStackBlock;
    v17 = 1107296256;
    v18 = sub_100013408;
    v19 = &unk_10008AA98;
    v12 = _Block_copy(&v16);
    v13 = v21;
    v14 = v5;
    swift_release(v13, v15);
    objc_msgSend(v6, "animateWithDuration:animations:completion:", v8, v12, 0.2);
    _Block_release(v12);
    _Block_release(v8);

  }
}

uint64_t sub_1000138C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView);
  v2 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x60);
  v3 = v1;
  v4 = (void *)v2();

  if (!v4)
    return 0;
  objc_msgSend(v4, "currentTime");
  v5 = v7;

  return v5;
}

id sub_10001396C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  _QWORD *v5;
  void *v6;
  _QWORD *v7;
  uint64_t (*v8)(void);
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;

  v1 = v0;
  v2 = OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView;
  v3 = *(_QWORD **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView);
  v4 = *(uint64_t (**)(void))((swift_isaMask & *v3) + 0x60);
  v5 = v3;
  v6 = (void *)v4();

  if (!v6)
    return 0;
  objc_msgSend(v6, "pause");
  v7 = *(_QWORD **)(v1 + v2);
  v8 = *(uint64_t (**)(void))((swift_isaMask & *v7) + 0x90);
  v9 = v7;
  v10 = (void *)v8();

  v11 = objc_msgSend(v10, "copyDisplayedPixelBuffer");
  if (!v11)
  {

    return 0;
  }
  v12 = objc_msgSend(objc_allocWithZone((Class)CIImage), "initWithCVPixelBuffer:", v11);

  return v12;
}

double sub_100013A60()
{
  return sub_100013A88();
}

double sub_100013A88()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  double Width;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double Height;
  double v21;
  double v22;
  double v23;
  CGRect v24;
  CGRect v25;

  v1 = objc_msgSend(v0, "image");
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v0, "contentMode") == (id)1
      && (objc_msgSend(v2, "size"), v3 > 0.0)
      && (objc_msgSend(v2, "size"), v4 > 0.0))
    {
      objc_msgSend(v2, "size");
      v6 = v5;
      objc_msgSend(v2, "size");
      v8 = v7;
      objc_msgSend(v0, "bounds");
      if (v8 >= v6)
      {
        Height = CGRectGetHeight(*(CGRect *)&v9);
        objc_msgSend(v2, "size");
        v15 = Height / v21;
      }
      else
      {
        Width = CGRectGetWidth(*(CGRect *)&v9);
        objc_msgSend(v2, "size");
        v15 = Width / v14;
      }
      objc_msgSend(v2, "size");
      v23 = v15 * v22;
      objc_msgSend(v2, "size");
      objc_msgSend(v0, "bounds");
      v17 = (CGRectGetWidth(v24) - v23) * 0.5;
      objc_msgSend(v0, "bounds");
      CGRectGetHeight(v25);

    }
    else
    {
      objc_msgSend(v0, "bounds");
      v17 = v16;

    }
  }
  else
  {
    objc_msgSend(v0, "bounds");
    return v18;
  }
  return v17;
}

id sub_100013C48(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

void sub_100013C98()
{
  _swift_stdlib_reportUnimplementedInitializer("StickersUltraExtension.LivePhotoView", 36, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_100013CF0(uint64_t a1, uint64_t a2)
{
  return sub_100013DB8(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100013CFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100013D3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_100013DAC(uint64_t a1, uint64_t a2)
{
  return sub_100013DB8(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100013DB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100013DF4(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_100013E68(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_100013EE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

uint64_t sub_100013F24(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_100013FAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_100013FF0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100014018(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000147D4(&qword_10009B408, (uint64_t)&unk_1000784F8);
  v3 = sub_1000147D4(&qword_10009B498, (uint64_t)&unk_10007844C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_100011004(a1, &qword_10009B478, (uint64_t)&unk_10008AB58);
}

uint64_t sub_100014098()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000140A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000140CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v2 + 16), a2);
  swift_release(*(_QWORD *)(v2 + 24), v3);

  return swift_deallocObject(v2, 56, 7);
}

void sub_100014110(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t Strong;
  char *v9;
  Swift::Int64 value;
  Swift::Int32 timescale;
  Swift::Int64 epoch;
  uint64_t v13;
  CMTimeValue v14;
  CMTimeEpoch v15;
  uint64_t v16;
  CMTimeValue v17;
  CMTimeEpoch v18;
  uint64_t v19;
  Swift::Int64 v20;
  Swift::Int32 v21;
  Swift::Int64 v22;
  uint64_t v23;
  uint64_t v24;
  CMTimeValue v25;
  CMTimeValue v26;
  CMTimeEpoch v27;
  uint64_t v28;
  void *v29;
  CMTimeValue v30;
  Class isa;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  char v42;
  char v43[24];
  char v44[24];
  char v45[24];
  char v46[24];
  _BYTE v47[24];
  CMTime lhs;
  void *v49;
  void (*v50)();
  uint64_t v51;
  CMTime v52;
  CMTime rhs;
  char v54[24];
  char v55[24];
  char v56[32];
  __C::CMTime v57;
  CMTime v58;
  __C::CMTime v59;

  v3 = v1[3];
  v4 = (void *)v1[4];
  v5 = (void *)v1[5];
  v6 = (void *)v1[6];
  v7 = v1[2] + 16;
  swift_beginAccess(v7, v56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (char *)Strong;
    v42 = a1;
    swift_beginAccess(v3 + 16, v55, 0, 0);
    if (CMTime.seconds.getter(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32)) == 0.0)
    {
      v57 = CMTime.init(value:timescale:)(1, 60);
      value = v57.value;
      timescale = v57.timescale;
      epoch = v57.epoch;
      v13 = HIDWORD(*(_QWORD *)&v57.timescale);
      swift_beginAccess(v3 + 16, v43, 1, 0);
      *(_QWORD *)(v3 + 16) = value;
      *(_DWORD *)(v3 + 24) = timescale;
      *(_DWORD *)(v3 + 28) = v13;
      *(_QWORD *)(v3 + 32) = epoch;
    }
    objc_msgSend(v4, "setHidden:", 0);
    objc_msgSend(v4, "setAlpha:", 0.0);
    swift_beginAccess(v3 + 16, v54, 0, 0);
    if (CMTime.seconds.getter(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32)) > 0.2)
    {
      swift_beginAccess(v3 + 16, v45, 0, 0);
      v14 = *(_QWORD *)(v3 + 16);
      v15 = *(_QWORD *)(v3 + 32);
      v16 = *(_QWORD *)(v3 + 24);
      v58 = (CMTime)CMTime.init(seconds:preferredTimescale:)(0.2, 1000);
      lhs.value = v14;
      *(_QWORD *)&lhs.timescale = v16;
      lhs.epoch = v15;
      rhs = v58;
      CMTimeSubtract(&v52, &lhs, &rhs);
      v17 = v52.value;
      v18 = v52.epoch;
      v19 = *(_QWORD *)&v52.timescale;
      swift_beginAccess(v3 + 16, v44, 1, 0);
      *(_QWORD *)(v3 + 16) = v17;
      *(_QWORD *)(v3 + 24) = v19;
      *(_QWORD *)(v3 + 32) = v18;
    }
    swift_beginAccess(v3 + 16, &rhs, 0, 0);
    if (CMTime.seconds.getter(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32)) == 0.0)
    {
      v59 = CMTime.init(value:timescale:)(1, 60);
      v20 = v59.value;
      v21 = v59.timescale;
      v22 = v59.epoch;
      v23 = HIDWORD(*(_QWORD *)&v59.timescale);
      swift_beginAccess(v3 + 16, v46, 1, 0);
      *(_QWORD *)(v3 + 16) = v20;
      *(_DWORD *)(v3 + 24) = v21;
      *(_DWORD *)(v3 + 28) = v23;
      *(_QWORD *)(v3 + 32) = v22;
    }
    v24 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
    v25 = swift_allocObject(v24, 40, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100077FA0;
    swift_beginAccess(v3 + 16, &v52, 0, 0);
    v26 = *(_QWORD *)(v3 + 16);
    v27 = *(_QWORD *)(v3 + 32);
    v28 = *(_QWORD *)(v3 + 24);
    v29 = (void *)objc_opt_self(NSValue);
    lhs.value = v26;
    *(_QWORD *)&lhs.timescale = v28;
    lhs.epoch = v27;
    *(_QWORD *)(v25 + 32) = objc_msgSend(v29, "valueWithCMTime:", &lhs);
    lhs.value = v25;
    specialized Array._endMutation()();
    v30 = lhs.value;
    sub_10000D5F4(0, &qword_10009B418, NSValue_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v30);
    v32 = swift_allocObject(&unk_10008A990, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16, v9);
    v33 = swift_allocObject(&unk_10008AB80, 56, 7);
    *(_QWORD *)(v33 + 16) = v32;
    *(_BYTE *)(v33 + 24) = v42 & 1;
    *(_QWORD *)(v33 + 32) = v5;
    *(_QWORD *)(v33 + 40) = v6;
    *(_QWORD *)(v33 + 48) = v4;
    v50 = sub_100014898;
    v51 = v33;
    lhs.value = (CMTimeValue)_NSConcreteStackBlock;
    *(_QWORD *)&lhs.timescale = 1107296256;
    lhs.epoch = (CMTimeEpoch)sub_10001340C;
    v49 = &unk_10008AB98;
    v34 = _Block_copy(&lhs);
    v35 = v51;
    v36 = v5;
    v37 = v6;
    v38 = v4;
    swift_release(v35, v39);
    v40 = objc_msgSend(v36, "addBoundaryTimeObserverForTimes:queue:usingBlock:", isa, 0, v34);
    _Block_release(v34);

    _bridgeAnyObjectToAny(_:)(&lhs, v40);
    swift_unknownObjectRelease(v40);
    v41 = (uint64_t)&v9[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerObserver];
    swift_beginAccess(&v9[OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerObserver], v47, 33, 0);
    sub_1000124D4((uint64_t)&lhs, v41);
    swift_endAccess(v47);

  }
}

uint64_t sub_100014524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100014534(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

void sub_10001453C()
{
  sub_1000145C4(0.0);
}

void sub_100014544()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  id v3;
  _BYTE v4[24];

  swift_beginAccess(v0 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = (void *)Strong;
    v3 = *(id *)(Strong + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_stillImageView);

    objc_msgSend(v3, "setHidden:", 1);
  }
}

void sub_1000145BC()
{
  sub_1000145C4(1.0);
}

void sub_1000145C4(double a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  swift_beginAccess(v1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_stillImageView);

    objc_msgSend(v5, "setAlpha:", a1);
  }
}

uint64_t sub_100014648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);

  return swift_deallocObject(v2, 32, 7);
}

id sub_100014674()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  CMTimeEpoch epoch;
  _QWORD v8[3];
  _BYTE v9[24];

  v1 = *(void **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16) + 16;
  swift_beginAccess(v2, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_stillImageView);

    objc_msgSend(v5, "setHidden:", 0);
  }
  objc_msgSend(v1, "pause");
  epoch = kCMTimeZero.epoch;
  v8[0] = kCMTimeZero.value;
  v8[1] = *(_QWORD *)&kCMTimeZero.timescale;
  v8[2] = epoch;
  return objc_msgSend(v1, "seekToTime:", v8);
}

__n128 sub_10001473C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_100014750(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100014770(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_100011004(a1, &qword_10009B470, (uint64_t)&unk_10008AB28);
}

uint64_t sub_1000147B0()
{
  return sub_1000147D4(&qword_10009B480, (uint64_t)&unk_100078410);
}

uint64_t sub_1000147D4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100014814()
{
  return sub_1000147D4(&qword_10009B488, (uint64_t)&unk_1000783E4);
}

uint64_t sub_100014838()
{
  return sub_1000147D4(&qword_10009B490, (uint64_t)&unk_100078480);
}

uint64_t sub_10001485C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);

  return swift_deallocObject(v2, 56, 7);
}

void sub_100014898()
{
  uint64_t v0;
  int v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  _BYTE v25[24];
  __int128 aBlock;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char v31[24];
  __int128 v32;
  __int128 v33;
  char v34[24];

  v1 = *(unsigned __int8 *)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v2 = *(void **)(v0 + 40);
  v4 = *(void **)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 16) + 16;
  swift_beginAccess(v5, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    if (v1)
    {
      v8 = Strong + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerObserver;
      swift_beginAccess(Strong + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerObserver, v31, 0, 0);
      sub_100011940(v8, (uint64_t)&v32);
      if (*((_QWORD *)&v33 + 1))
      {
        sub_1000119C8(&v32, &aBlock);
        v9 = v28;
        v10 = sub_10000E538(&aBlock, (uint64_t)v28);
        v11 = v3;
        v12 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v9);
        objc_msgSend(v11, "removeTimeObserver:", v12);
        swift_unknownObjectRelease(v12);
        v32 = 0u;
        v33 = 0u;
        swift_beginAccess(v8, v25, 33, 0);
        sub_1000124D4((uint64_t)&v32, v8);
        swift_endAccess(v25);

        sub_10000D4A4(&aBlock);
      }
      else
      {
        sub_100011988((uint64_t)&v32);
      }
      objc_msgSend(v2, "play");
      v13 = (void *)objc_opt_self(UIView);
      v14 = swift_allocObject(&unk_10008ABD0, 24, 7);
      *(_QWORD *)(v14 + 16) = v4;
      v29 = sub_100014B28;
      v30 = v14;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v27 = sub_10000C1B4;
      v28 = &unk_10008ABE8;
      v15 = _Block_copy(&aBlock);
      v16 = v30;
      v17 = v4;
      swift_release(v16, v18);
      v19 = swift_allocObject(&unk_10008AC20, 32, 7);
      *(_QWORD *)(v19 + 16) = v7;
      *(_QWORD *)(v19 + 24) = v17;
      v29 = sub_100014B68;
      v30 = v19;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v27 = sub_100013408;
      v28 = &unk_10008AC38;
      v20 = _Block_copy(&aBlock);
      v21 = v30;
      v22 = v17;
      v23 = v7;
      swift_release(v21, v24);
      objc_msgSend(v13, "animateWithDuration:animations:completion:", v15, v20, 0.25);
      _Block_release(v20);
      _Block_release(v15);
    }

  }
}

uint64_t sub_100014B04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100014B28()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
}

uint64_t sub_100014B3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100014B68()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);
  _QWORD *v6;
  void *v7;
  id v8;
  id v9;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(void **)(v0 + 24);
  v3 = OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView;
  v4 = *(_QWORD **)(v2 + OBJC_IVAR____TtC22StickersUltraExtension13LivePhotoView_playerView);
  v5 = *(uint64_t (**)(void))((swift_isaMask & *v4) + 0x60);
  v6 = v4;
  v7 = (void *)v5();

  objc_msgSend(v7, "pause");
  objc_msgSend(*(id *)(v2 + v3), "setHidden:", 1);
  objc_msgSend(*(id *)(v2 + v3), "removeFromSuperview");
  v9 = *(id *)(v2 + v3);
  *(_QWORD *)(v2 + v3) = v1;
  v8 = v1;

}

uint64_t sub_100014C20(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100014F14();
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000A66C(&qword_10009B4A0);
          v13 = sub_100014E28(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000D5F4(0, (unint64_t *)&qword_10009B0D0, NSLayoutConstraint_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void (*sub_100014E28(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100014EA8(v6, a2, a3);
  return sub_100014E7C;
}

void sub_100014E7C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_100014EA8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for StickerUIPreview;
  }
  __break(1u);
  return result;
}

unint64_t sub_100014F14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009B4A8;
  if (!qword_10009B4A8)
  {
    v1 = sub_10000D720(&qword_10009B4A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10009B4A8);
  }
  return result;
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_100011004(a1, (unint64_t *)&unk_10009B4B0, (uint64_t)&unk_10008AC70);
}

uint64_t sub_100014FB4(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  unsigned int v4;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10008AD38, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t sub_100015004(char a1)
{
  if ((a1 & 1) != 0)
    return 0x696A6F6D696E61;
  else
    return 0x696A6F6D656DLL;
}

uint64_t sub_100015038(char *a1, char *a2)
{
  return sub_100015044(*a1, *a2);
}

uint64_t sub_100015044(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x696A6F6D696E61;
  else
    v3 = 0x696A6F6D656DLL;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x696A6F6D696E61;
  else
    v5 = 0x696A6F6D656DLL;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

Swift::Int sub_1000150E0()
{
  char *v0;

  return sub_1000150E8(*v0);
}

Swift::Int sub_1000150E8(char a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  if ((a1 & 1) != 0)
    v2 = 0x696A6F6D696E61;
  else
    v2 = 0x696A6F6D656DLL;
  if ((a1 & 1) != 0)
    v3 = 0xE700000000000000;
  else
    v3 = 0xE600000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100015164(uint64_t a1)
{
  char *v1;

  return sub_10001516C(a1, *v1);
}

uint64_t sub_10001516C(uint64_t a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;

  v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0)
    v3 = 0x696A6F6D696E61;
  else
    v3 = 0x696A6F6D656DLL;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

Swift::Int sub_1000151C0(uint64_t a1)
{
  char *v1;

  return sub_1000151C8(a1, *v1);
}

Swift::Int sub_1000151C8(uint64_t a1, char a2)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  if ((a2 & 1) != 0)
    v3 = 0x696A6F6D696E61;
  else
    v3 = 0x696A6F6D656DLL;
  if ((a2 & 1) != 0)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE600000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100015240@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10008AD38, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

uint64_t sub_10001529C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100015004(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000152C4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009DF38);
  sub_10000D130(v0, (uint64_t)qword_10009DF38);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0x702D746570707570, 0xEF72656469766F72);
}

_QWORD *sub_100015344()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;

  v0 = type metadata accessor for StickersAVTPuppetProvider();
  v1 = swift_allocObject(v0, 72, 7);
  result = sub_100015E34();
  qword_10009FCC0 = v1;
  return result;
}

uint64_t sub_10001537C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 72, 7);
  sub_100015E34();
  return v1;
}

uint64_t *sub_1000153B0()
{
  if (qword_10009DF50 != -1)
    swift_once(&qword_10009DF50, sub_100015344);
  return &qword_10009FCC0;
}

uint64_t sub_1000153F0()
{
  _BYTE v1[24];

  if (qword_10009DF50 != -1)
    swift_once(&qword_10009DF50, sub_100015344);
  swift_beginAccess(&qword_10009FCC0, v1, 0, 0);
  return swift_retain(qword_10009FCC0);
}

uint64_t sub_10001545C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  if (qword_10009DF50 != -1)
    swift_once(&qword_10009DF50, sub_100015344);
  swift_beginAccess(&qword_10009FCC0, v5, 1, 0);
  v2 = qword_10009FCC0;
  qword_10009FCC0 = a1;
  return swift_release(v2, v3);
}

uint64_t (*sub_1000154D0(uint64_t a1))(_QWORD)
{
  if (qword_10009DF50 != -1)
    swift_once(&qword_10009DF50, sub_100015344);
  swift_beginAccess(&qword_10009FCC0, a1, 33, 0);
  return j__swift_endAccess;
}

NSString sub_10001553C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10009FCC8 = (uint64_t)result;
  return result;
}

uint64_t *sub_100015570()
{
  if (qword_10009DF58 != -1)
    swift_once(&qword_10009DF58, sub_10001553C);
  return &qword_10009FCC8;
}

id sub_1000155B0()
{
  if (qword_10009DF58 != -1)
    swift_once(&qword_10009DF58, sub_10001553C);
  return (id)qword_10009FCC8;
}

id sub_1000155F0()
{
  return objc_msgSend(objc_allocWithZone((Class)AVTPAvatarStore), "init");
}

id sub_100015614()
{
  return objc_msgSend(objc_allocWithZone((Class)AVTAvatarRecordImageProvider), "init");
}

id sub_100015638()
{
  return objc_msgSend((id)objc_opt_self(AVTRenderingScope), "thumbnailScope");
}

id sub_100015664()
{
  return objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
}

uint64_t sub_100015688()
{
  return sub_1000156A0((uint64_t (*)(void))sub_10001584C);
}

uint64_t sub_100015694()
{
  return sub_1000156A0((uint64_t (*)(void))sub_100015B40);
}

uint64_t sub_1000156A0(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1();
  swift_retain(v1);
  v3 = sub_1000176AC(v2, v1);
  swift_bridgeObjectRelease(v2);
  swift_release(v1, v4);
  return v3;
}

uint64_t sub_100015704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
  sub_100017258(v2);
  return v1;
}

unint64_t sub_100015750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  unint64_t result;
  void *v5;
  id v6;
  uint64_t v7;

  v0 = (uint64_t)sub_10001584C();
  v1 = v0;
  if (!((unint64_t)v0 >> 62))
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease(v1);
    return 0;
  }
  if (v0 >= 0)
    v0 &= 0xFFFFFFFFFFFFFF8uLL;
  v2 = _CocoaArrayWrapper.endIndex.getter(v0);
  if (!v2)
    goto LABEL_12;
LABEL_3:
  v3 = __OFSUB__(v2, 1);
  result = v2 - 1;
  if (v3)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v1);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(void **)(v1 + 8 * result + 32);
    swift_unknownObjectRetain(v5);
LABEL_8:
    swift_bridgeObjectRelease(v1);
    v6 = objc_msgSend(v5, "identifier");
    swift_unknownObjectRelease(v5);
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);

    return v7;
  }
  __break(1u);
  return result;
}

void *sub_10001584C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD v27[3];
  _BYTE v28[16];
  id v29;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v2 = *(void **)(v0 + 48);
  }
  else
  {
    v3 = v0;
    v4 = *(void **)(v0 + 16);
    v5 = (void *)objc_opt_self(AVTAvatarFetchRequest);
    v6 = v4;
    v7 = objc_msgSend(v5, "requestForCustomAvatars");
    v29 = 0;
    v8 = objc_msgSend(v6, "avatarsForFetchRequest:error:", v7, &v29);

    v9 = v29;
    if (v8)
    {
      v10 = sub_10000A66C((uint64_t *)&unk_10009B738);
      v2 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v10);
      v11 = v9;

      v12 = *(_QWORD *)(v3 + 48);
      *(_QWORD *)(v3 + 48) = v2;
      swift_bridgeObjectRetain(v2);
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      v13 = v29;
      v14 = _convertNSErrorToError(_:)(v9);

      swift_willThrow();
      if (qword_10009DF30 != -1)
        swift_once(&qword_10009DF30, sub_1000152C4);
      v15 = type metadata accessor for Logger(0);
      sub_10000D130(v15, (uint64_t)qword_10009DF38);
      swift_errorRetain(v14);
      v16 = swift_errorRetain(v14);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(12, -1);
        v20 = (void *)swift_slowAlloc(32, -1);
        v29 = v20;
        *(_DWORD *)v19 = 136315138;
        swift_getErrorValue(v14, v28, v27);
        v21 = Error.localizedDescription.getter(v27[1], v27[2]);
        v23 = v22;
        v26 = sub_10000C99C(v21, v22, (uint64_t *)&v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v19 + 4, v19 + 12);
        swift_bridgeObjectRelease(v23);
        swift_errorRelease(v14);
        swift_errorRelease(v14);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Could not fetch memoji records. %s", v19, 0xCu);
        swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1, -1);
        swift_slowDealloc(v19, -1, -1);
      }
      else
      {
        swift_errorRelease(v14);
        swift_errorRelease(v14);
      }

      v24 = *(_QWORD *)(v3 + 48);
      v2 = &_swiftEmptyArrayStorage;
      *(_QWORD *)(v3 + 48) = &_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v24);
      swift_errorRelease(v14);
    }
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

void *sub_100015B40()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD v27[3];
  _BYTE v28[16];
  id v29;

  v1 = *(_QWORD *)(v0 + 56);
  if (v1)
  {
    v2 = *(void **)(v0 + 56);
  }
  else
  {
    v3 = v0;
    v4 = *(void **)(v0 + 16);
    v5 = (void *)objc_opt_self(AVTAvatarFetchRequest);
    v6 = v4;
    v7 = objc_msgSend(v5, "requestForPredefinedAvatars");
    v29 = 0;
    v8 = objc_msgSend(v6, "avatarsForFetchRequest:error:", v7, &v29);

    v9 = v29;
    if (v8)
    {
      v10 = sub_10000A66C((uint64_t *)&unk_10009B738);
      v2 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v10);
      v11 = v9;

      v12 = *(_QWORD *)(v3 + 56);
      *(_QWORD *)(v3 + 56) = v2;
      swift_bridgeObjectRetain(v2);
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      v13 = v29;
      v14 = _convertNSErrorToError(_:)(v9);

      swift_willThrow();
      if (qword_10009DF30 != -1)
        swift_once(&qword_10009DF30, sub_1000152C4);
      v15 = type metadata accessor for Logger(0);
      sub_10000D130(v15, (uint64_t)qword_10009DF38);
      swift_errorRetain(v14);
      v16 = swift_errorRetain(v14);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(12, -1);
        v20 = (void *)swift_slowAlloc(32, -1);
        v29 = v20;
        *(_DWORD *)v19 = 136315138;
        swift_getErrorValue(v14, v28, v27);
        v21 = Error.localizedDescription.getter(v27[1], v27[2]);
        v23 = v22;
        v26 = sub_10000C99C(v21, v22, (uint64_t *)&v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v19 + 4, v19 + 12);
        swift_bridgeObjectRelease(v23);
        swift_errorRelease(v14);
        swift_errorRelease(v14);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Could not fetch animoji records. %s", v19, 0xCu);
        swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1, -1);
        swift_slowDealloc(v19, -1, -1);
      }
      else
      {
        swift_errorRelease(v14);
        swift_errorRelease(v14);
      }

      v24 = *(_QWORD *)(v3 + 56);
      v2 = &_swiftEmptyArrayStorage;
      *(_QWORD *)(v3 + 56) = &_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v24);
      swift_errorRelease(v14);
    }
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

_QWORD *sub_100015E34()
{
  _QWORD *v0;

  v0[2] = objc_msgSend(objc_allocWithZone((Class)AVTPAvatarStore), "init");
  v0[3] = objc_msgSend(objc_allocWithZone((Class)AVTAvatarRecordImageProvider), "init");
  v0[4] = objc_msgSend((id)objc_opt_self(AVTRenderingScope), "thumbnailScope");
  v0[5] = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v0[6] = 0;
  v0[7] = 0;
  v0[8] = 0;
  (*(void (**)(void))(*v0 + 424))();
  return v0;
}

uint64_t sub_100015ED0()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)v0 + 432))();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  return v0;
}

uint64_t sub_100015F28()
{
  uint64_t v0;

  sub_100015ED0();
  return swift_deallocClassInstance(v0, 72, 7);
}

unint64_t sub_100015F48@<X0>(void **a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t result;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  _QWORD aBlock[5];
  _QWORD *v55;

  v53 = a3;
  v5 = sub_10000A66C(&qword_10009AFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  type metadata accessor for StickerFileCache(0);
  v13 = static StickerFileCache.cache.getter();
  v14 = objc_msgSend(v12, "identifier");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  dispatch thunk of StickerFileCache.existingImageURL(identifiedBy:)(v15, v17);
  swift_release(v13, v18);
  swift_bridgeObjectRelease(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10000A6AC((uint64_t)v7);
    v19 = (_QWORD *)swift_allocObject(&unk_10008AEA0, 48, 7);
    v19[2] = a2;
    v19[3] = v12;
    v19[4] = 0;
    v19[5] = 0;
    aBlock[4] = sub_100017E2C;
    v55 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001340C;
    aBlock[3] = &unk_10008AEB8;
    v20 = _Block_copy(aBlock);
    v21 = (void *)objc_opt_self(NSBlockOperation);
    swift_retain(a2);
    swift_unknownObjectRetain(v12);
    v22 = objc_msgSend(v21, "blockOperationWithBlock:", v20);
    _Block_release(v20);
    swift_release(v55, v23);
    objc_msgSend(*(id *)(a2 + 40), "addOperation:", v22);

    v24 = sub_10000A66C(&qword_10009B748);
    v25 = sub_10000A66C(&qword_10009B750);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(_QWORD *)(v26 + 72);
    v28 = *(unsigned __int8 *)(v26 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = swift_allocObject(v24, v29 + v27, v28 | 7);
    *(_OWORD *)(v30 + 16) = xmmword_100078550;
    v31 = (uint64_t *)(v30 + v29);
    v32 = v30 + v29 + *(int *)(v25 + 48);
    v33 = objc_msgSend(v12, "identifier");
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    *v31 = v34;
    v31[1] = v36;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v32, 1, 1, v8);
    result = sub_100016300(v30);
    v38 = result;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v39 = sub_10000A66C(&qword_10009B748);
    v40 = sub_10000A66C(&qword_10009B750);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(_QWORD *)(v41 + 72);
    v43 = *(unsigned __int8 *)(v41 + 80);
    v44 = (v43 + 32) & ~v43;
    v45 = swift_allocObject(v39, v44 + v42, v43 | 7);
    *(_OWORD *)(v45 + 16) = xmmword_100078550;
    v46 = (uint64_t *)(v45 + v44);
    v47 = v45 + v44 + *(int *)(v40 + 48);
    v48 = objc_msgSend(v12, "identifier");
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    *v46 = v49;
    v46[1] = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v47, v11, v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v47, 0, 1, v8);
    v38 = sub_100016300(v45);
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  *v53 = v38;
  return result;
}

unint64_t sub_100016300(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_10000A66C(&qword_10009B750);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v27 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v27);
    return (unint64_t)v8;
  }
  sub_10000A66C(&qword_10009B758);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = (uint64_t)v5 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v29 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1000180FC(v13, (uint64_t)v5);
    v15 = *v5;
    v16 = v5[1];
    result = sub_1000173C4(*v5, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = sub_10000A66C(&qword_10009AFF0);
    result = sub_100018144(v10, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19);
    v24 = v8[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_12;
    v8[2] = v26;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8, v23);
      v27 = v29;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_100016494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 56) = 0;
  swift_bridgeObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 48) = 0;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_1000164B8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = sub_10001693C(a1, a2, 0);
  if (v6)
    return v6;
  v7 = sub_100016C50(a1, a2, 0);
  v6 = v7;
  if ((a3 & 1) == 0 || v7)
    return v6;
  v8 = (uint64_t)sub_10001584C();
  v9 = v8;
  if ((unint64_t)v8 >> 62)
  {
    if (v8 >= 0)
      v8 &= 0xFFFFFFFFFFFFFF8uLL;
    v10 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (v10)
    {
LABEL_6:
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (v11)
      {
        __break(1u);
      }
      else
      {
        if ((v9 & 0xC000000000000001) != 0)
        {
LABEL_31:
          v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
          goto LABEL_20;
        }
        if ((v12 & 0x8000000000000000) == 0)
        {
          if (v12 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v6 = *(_QWORD *)(v9 + 8 * v12 + 32);
LABEL_19:
            swift_unknownObjectRetain(v6);
LABEL_20:
            swift_bridgeObjectRelease(v9);
            return v6;
          }
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      if (v9 < 0)
        v14 = v9;
      else
        v14 = v9 & 0xFFFFFFFFFFFFFF8;
      result = _CocoaArrayWrapper.endIndex.getter(v14);
      if (!result)
        goto LABEL_29;
      goto LABEL_16;
    }
  }
  else
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_6;
  }
  swift_bridgeObjectRelease(v9);
  v9 = (uint64_t)sub_100015B40();
  if ((unint64_t)v9 >> 62)
    goto LABEL_25;
  result = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!result)
  {
LABEL_29:
    swift_bridgeObjectRelease(v9);
    return 0;
  }
LABEL_16:
  if ((v9 & 0xC000000000000001) != 0)
  {
    v12 = 0;
    goto LABEL_31;
  }
  if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(_QWORD *)(v9 + 32);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_100016610(char a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if ((a1 & 1) != 0)
  {
    if (qword_10009DF30 != -1)
      swift_once(&qword_10009DF30, sub_1000152C4);
    v14 = type metadata accessor for Logger(0);
    sub_10000D130(v14, (uint64_t)qword_10009DF38);
    v15 = swift_bridgeObjectRetain_n(a3, 2);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v25 = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain(a3);
      v24 = sub_10000C99C(a2, a3, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease_n(a3, 3, v20);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Will attempt to find animoji identified by %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2, v23);
    }
    return sub_100016C50(a2, a3, a4 & 1);
  }
  else
  {
    if (qword_10009DF30 != -1)
      swift_once(&qword_10009DF30, sub_1000152C4);
    v7 = type metadata accessor for Logger(0);
    sub_10000D130(v7, (uint64_t)qword_10009DF38);
    v8 = swift_bridgeObjectRetain_n(a3, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v25 = v12;
      *(_DWORD *)v11 = 136315138;
      swift_bridgeObjectRetain(a3);
      v24 = sub_10000C99C(a2, a3, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease_n(a3, 3, v13);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Will attempt to find memoji identified by %s", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a3, 2, v21);
    }
    return sub_10001693C(a2, a3, a4 & 1);
  }
}

uint64_t sub_10001693C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[2];

  v4 = v3;
  v8 = sub_10001584C();
  swift_bridgeObjectRetain(a2);
  v9 = sub_100017C48((unint64_t)v8, a1, a2);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(a2);
  if (v9)
    return (uint64_t)v9;
  if (qword_10009DF30 != -1)
    swift_once(&qword_10009DF30, sub_1000152C4);
  v10 = type metadata accessor for Logger(0);
  sub_10000D130(v10, (uint64_t)qword_10009DF38);
  v11 = swift_bridgeObjectRetain_n(a2, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v27[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain(a2);
    v26 = sub_10000C99C(a1, a2, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease_n(a2, 3, v16);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Did not find memoji identified by %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    if ((a3 & 1) == 0)
      return 0;
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2, v17);
    if ((a3 & 1) == 0)
      return 0;
  }
  v18 = (uint64_t)sub_10001584C();
  v19 = v18;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 >= 0)
      v18 &= 0xFFFFFFFFFFFFFF8uLL;
    v20 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (v20)
    {
LABEL_10:
      v21 = __OFSUB__(v20, 1);
      v22 = v20 - 1;
      if (v21)
      {
        __break(1u);
      }
      else if ((v19 & 0xC000000000000001) == 0)
      {
        if ((v22 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v22 < *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v9 = *(void **)(v19 + 8 * v22 + 32);
          swift_unknownObjectRetain(v9);
          v23 = v19;
LABEL_24:
          swift_bridgeObjectRelease(v23);
          return (uint64_t)v9;
        }
        __break(1u);
LABEL_30:
        if (v4 < 0)
          v25 = v4;
        else
          v25 = v4 & 0xFFFFFFFFFFFFFF8;
        result = _CocoaArrayWrapper.endIndex.getter(v25);
        if (!result)
          goto LABEL_34;
        goto LABEL_20;
      }
      v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v19);
      v23 = v19;
      goto LABEL_24;
    }
  }
  else
  {
    v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v20)
      goto LABEL_10;
  }
  swift_bridgeObjectRelease(v19);
  v4 = (uint64_t)sub_100015B40();
  if ((unint64_t)v4 >> 62)
    goto LABEL_30;
  result = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!result)
  {
LABEL_34:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
LABEL_20:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    goto LABEL_23;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v9 = *(void **)(v4 + 32);
    swift_unknownObjectRetain(v9);
LABEL_23:
    v23 = v4;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_100016C50(uint64_t a1, unint64_t a2, char a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20[2];

  v6 = sub_100015B40();
  swift_bridgeObjectRetain(a2);
  v7 = sub_100017C48((unint64_t)v6, a1, a2);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(a2);
  if (v7)
    return (uint64_t)v7;
  if (qword_10009DF30 != -1)
    swift_once(&qword_10009DF30, sub_1000152C4);
  v8 = type metadata accessor for Logger(0);
  sub_10000D130(v8, (uint64_t)qword_10009DF38);
  v9 = swift_bridgeObjectRetain_n(a2, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v20[0] = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain(a2);
    v19 = sub_10000C99C(a1, a2, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease_n(a2, 3, v14);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Did not find animoji identified by %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    if ((a3 & 1) == 0)
      return 0;
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2, v15);
    if ((a3 & 1) == 0)
      return 0;
  }
  v16 = (uint64_t)sub_100015B40();
  v17 = v16;
  if (!((unint64_t)v16 >> 62))
  {
    result = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_10;
    goto LABEL_17;
  }
  if (v16 >= 0)
    v16 &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(v16);
  if (!result)
  {
LABEL_17:
    swift_bridgeObjectRelease(v17);
    return 0;
  }
LABEL_10:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    goto LABEL_13;
  }
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(void **)(v17 + 32);
    swift_unknownObjectRetain(v7);
LABEL_13:
    swift_bridgeObjectRelease(v17);
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

void sub_100016EC8()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  if (!v0[8])
  {
    v1 = *v0;
    v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v3 = String._bridgeToObjectiveC()();
    v4 = swift_allocObject(&unk_10008AD98, 24, 7);
    swift_weakInit(v4 + 16, v0);
    v5 = swift_allocObject(&unk_10008ADC0, 32, 7);
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v1;
    v10[4] = sub_100017878;
    v11 = v5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_100017018;
    v10[3] = &unk_10008ADD8;
    v6 = _Block_copy(v10);
    swift_release(v11, v7);
    v8 = objc_msgSend(v2, "addObserverForName:object:queue:usingBlock:", v3, 0, 0, v6);
    _Block_release(v6);

    v9 = v0[8];
    v0[8] = (uint64_t)v8;
    swift_unknownObjectRelease(v9);
  }
}

uint64_t sub_100017018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1000170BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:", v1);

    swift_unknownObjectRelease(v1);
    v4 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 64) = 0;
    swift_unknownObjectRelease(v4);
  }
}

char *sub_10001714C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10000A66C(&qword_10009B730);
      v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[8 * v8 + 32])
          memmove(v14, a4 + 32, 8 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_100017B40(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100017258(uint64_t a1)
{
  char **v1;
  unint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_10001714C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[8 * v9 + 32];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  sub_10000A66C(&qword_10009B728);
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = *((_QWORD *)v3 + 2);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *((_QWORD *)v3 + 2) = v14;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

unint64_t sub_1000173C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_100017428(a1, a2, v5);
}

unint64_t sub_100017428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_100017508(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100017524(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100017524(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000A66C(&qword_10009B730);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = &_swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    sub_10000A66C(&qword_10009B728);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4, a2);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000176AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t *v6;
  uint64_t result;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v16;
  unint64_t v17;
  unint64_t *v18;

  v3 = v2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v6 = (unint64_t *)&_swiftEmptyArrayStorage;
    if (!v5)
      return (uint64_t)v6;
    v18 = (unint64_t *)&_swiftEmptyArrayStorage;
    result = sub_100017508(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
      break;
    v8 = 0;
    v6 = v18;
    while (v5 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1);
      }
      else
      {
        v9 = *(void **)(a1 + 8 * v8 + 32);
        swift_unknownObjectRetain(v9);
      }
      v16 = v9;
      sub_100015F48(&v16, a2, &v17);
      if (v3)
      {
        swift_release(v6, v10);
        swift_unknownObjectRelease(v9);
        return (uint64_t)v6;
      }
      swift_unknownObjectRelease(v9);
      v11 = v17;
      v18 = v6;
      v13 = v6[2];
      v12 = v6[3];
      if (v13 >= v12 >> 1)
      {
        sub_100017508(v12 > 1, v13 + 1, 1);
        v6 = v18;
      }
      ++v8;
      v6[2] = v13 + 1;
      v6[v13 + 4] = v11;
      if (v5 == v8)
        return (uint64_t)v6;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_100017830()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100017854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);
  return swift_deallocObject(v2, 32, 7);
}

uint64_t sub_100017878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  id v4;
  uint64_t v5;
  _BYTE v6[24];

  v1 = *(_QWORD *)(v0 + 16) + 16;
  swift_beginAccess(v1, v6, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    (*(void (**)(uint64_t))(*(_QWORD *)result + 368))(result);
    v4 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10009DF58 != -1)
      swift_once(&qword_10009DF58, sub_10001553C);
    objc_msgSend(v4, "postNotificationName:object:", qword_10009FCC8, 0);

    return swift_release(v3, v5);
  }
  return result;
}

uint64_t sub_100017944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100017954(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

unint64_t sub_100017960()
{
  unint64_t result;

  result = qword_10009B4C0;
  if (!qword_10009B4C0)
  {
    result = swift_getWitnessTable(&unk_10007856C, &type metadata for StickersAVTPuppetProvider.PuppetType);
    atomic_store(result, (unint64_t *)&qword_10009B4C0);
  }
  return result;
}

uint64_t type metadata accessor for StickersAVTPuppetProvider()
{
  return objc_opt_self(_TtC22StickersUltraExtension25StickersAVTPuppetProvider);
}

_BYTE *initializeBufferWithCopyOfBuffer for StickersAVTPuppetProvider.PuppetType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for StickersAVTPuppetProvider.PuppetType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StickersAVTPuppetProvider.PuppetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100017AAC + 4 * byte_100078565[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100017AE0 + 4 * byte_100078560[v4]))();
}

uint64_t sub_100017AE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100017AE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100017AF0);
  return result;
}

uint64_t sub_100017AFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100017B04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100017B08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100017B10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100017B1C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100017B24(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StickersAVTPuppetProvider.PuppetType()
{
  return &type metadata for StickersAVTPuppetProvider.PuppetType;
}

uint64_t sub_100017B40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      sub_10000A66C(&qword_10009B728);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

void *sub_100017C48(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v8)
  {
    v23 = v4;
    v24 = v7;
    v25 = v7 & 0xC000000000000001;
    v4 = 4;
    while (1)
    {
      v9 = v4 - 4;
      if (!v25)
        break;
      v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v7);
      v11 = v4 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_20;
LABEL_9:
      v12 = v8;
      v13 = v10;
      v14 = a3;
      v15 = objc_msgSend(v10, "identifier", v23);
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      a3 = v14;
      v19 = v16 == a2 && v18 == v14;
      if (v19)
      {
        swift_bridgeObjectRelease(v24);
LABEL_19:
        swift_bridgeObjectRelease(a3);
        return v13;
      }
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, a2, v14, 0);
      swift_bridgeObjectRelease(v18);
      if ((v20 & 1) != 0)
      {
        a3 = v24;
        goto LABEL_19;
      }
      swift_unknownObjectRelease(v13);
      ++v4;
      v8 = v12;
      v19 = v11 == v12;
      v7 = v24;
      if (v19)
      {
        swift_bridgeObjectRelease(v24);
        return 0;
      }
    }
    v10 = (void *)swift_unknownObjectRetain(*(_QWORD *)(v7 + 8 * v4));
    v11 = v4 - 3;
    if (!__OFADD__(v9, 1))
      goto LABEL_9;
LABEL_20:
    __break(1u);
LABEL_21:
    if (v7 < 0)
      v21 = v7;
    else
      v21 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v21);
  }
  swift_bridgeObjectRelease(v7);
  return 0;
}

uint64_t sub_100017DF0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  swift_release(v2[2], a2);
  swift_unknownObjectRelease(v2[3]);
  if (v2[4])
    swift_release(v2[5], v3);
  return swift_deallocObject(v2, 48, 7);
}

void sub_100017E2C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v1 = (void *)v0[3];
  v2 = v0[4];
  v3 = v0[5];
  v12 = objc_msgSend(*(id *)(v0[2] + 24), "imageForRecord:scope:", v1, *(_QWORD *)(v0[2] + 32));
  type metadata accessor for StickerFileCache(0);
  v4 = static StickerFileCache.cache.getter();
  v5 = objc_msgSend(v1, "identifier");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = swift_allocObject(&unk_10008AEF0, 32, 7);
  *(_QWORD *)(v9 + 16) = v2;
  *(_QWORD *)(v9 + 24) = v3;
  sub_1000181E0(v2, v3);
  dispatch thunk of StickerFileCache.url(for:with:completion:)(v12, v6, v8, sub_1000181B8, v9);
  swift_release(v9, v10);
  swift_bridgeObjectRelease(v8);
  swift_release(v4, v11);

}

uint64_t sub_1000180FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009B750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100018144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009AFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001818C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_QWORD *)(v2 + 16))
    swift_release(*(_QWORD *)(v2 + 24), a2);
  return swift_deallocObject(v2, 32, 7);
}

uint64_t sub_1000181B8()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1000181E0(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_1000181F8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009E0E8);
  sub_10000D130(v0, (uint64_t)qword_10009E0E8);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD000000000000011, 0x80000001000745F0);
}

void sub_100018278()
{
  qword_10009E108 = 0x4089A00000000000;
  qword_10009E110 = 0x4084000000000000;
}

uint64_t sub_10001829C(char a1)
{
  return *(_QWORD *)&aUsercontrecent[8 * a1];
}

uint64_t sub_1000182BC(char *a1, char *a2)
{
  return sub_1000182C8(*a1, *a2);
}

uint64_t sub_1000182C8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = 8 * a1;
  v3 = *(_QWORD *)&aUsercontrecent[v2];
  v4 = *(_QWORD *)&aThirdparphotos[v2 + 16];
  v5 = 8 * a2;
  v6 = *(_QWORD *)&aUsercontrecent[v5];
  v7 = *(_QWORD *)&aThirdparphotos[v5 + 16];
  if (v3 == v6 && v4 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, *(_QWORD *)&aThirdparphotos[8 * a2 + 16], 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v7);
  return v9 & 1;
}

Swift::Int sub_10001834C()
{
  char *v0;

  return sub_1000183A8(0, *v0);
}

uint64_t sub_100018358(uint64_t a1)
{
  char *v1;

  return sub_100018360(a1, *v1);
}

uint64_t sub_100018360(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8 * a2;
  v3 = *(_QWORD *)&aThirdparphotos[v2 + 16];
  String.hash(into:)(a1, *(_QWORD *)&aUsercontrecent[v2], v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1000183A0(uint64_t a1)
{
  char *v1;

  return sub_1000183A8(a1, *v1);
}

Swift::Int sub_1000183A8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  v3 = 8 * a2;
  v4 = *(_QWORD *)&aThirdparphotos[v3 + 16];
  String.hash(into:)(v6, *(_QWORD *)&aUsercontrecent[v3], v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

unint64_t sub_10001840C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100029294(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100018438@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10001829C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

char *sub_100018470()
{
  return &byte_10009B760;
}

uint64_t sub_10001847C()
{
  _BYTE v1[24];

  swift_beginAccess(&byte_10009B760, v1, 0, 0);
  return byte_10009B760;
}

uint64_t sub_1000184BC(char a1)
{
  uint64_t result;
  _BYTE v3[24];

  result = swift_beginAccess(&byte_10009B760, v3, 1, 0);
  byte_10009B760 = a1;
  return result;
}

uint64_t (*sub_100018500(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&byte_10009B760, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t *sub_100018540()
{
  return &qword_10009FCD0;
}

uint64_t sub_10001854C()
{
  uint64_t v0;
  id v1;
  _BYTE v3[24];

  swift_beginAccess(&qword_10009FCD0, v3, 0, 0);
  v0 = qword_10009FCD0;
  v1 = (id)qword_10009FCD0;
  return v0;
}

void sub_100018594(uint64_t a1)
{
  void *v2;
  _BYTE v3[24];

  swift_beginAccess(&qword_10009FCD0, v3, 1, 0);
  v2 = (void *)qword_10009FCD0;
  qword_10009FCD0 = a1;

}

uint64_t (*sub_1000185E0(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&qword_10009FCD0, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t *sub_100018620()
{
  return &qword_10009FCD8;
}

uint64_t sub_10001862C()
{
  uint64_t v0;
  id v1;
  _BYTE v3[24];

  swift_beginAccess(&qword_10009FCD8, v3, 0, 0);
  v0 = qword_10009FCD8;
  v1 = (id)qword_10009FCD8;
  return v0;
}

void sub_100018674(uint64_t a1)
{
  void *v2;
  _BYTE v3[24];

  swift_beginAccess(&qword_10009FCD8, v3, 1, 0);
  v2 = (void *)qword_10009FCD8;
  qword_10009FCD8 = a1;

}

uint64_t (*sub_1000186C0(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&qword_10009FCD8, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t *sub_100018700()
{
  return &qword_10009FCE0;
}

uint64_t sub_10001870C()
{
  uint64_t v0;
  id v1;
  _BYTE v3[24];

  swift_beginAccess(&qword_10009FCE0, v3, 0, 0);
  v0 = qword_10009FCE0;
  v1 = (id)qword_10009FCE0;
  return v0;
}

void sub_100018754(uint64_t a1)
{
  void *v2;
  _BYTE v3[24];

  swift_beginAccess(&qword_10009FCE0, v3, 1, 0);
  v2 = (void *)qword_10009FCE0;
  qword_10009FCE0 = a1;

}

uint64_t (*sub_1000187A0(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&qword_10009FCE0, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t *sub_1000187E0()
{
  return &qword_10009FCE8;
}

uint64_t sub_1000187EC()
{
  _BYTE v1[24];

  swift_beginAccess(&qword_10009FCE8, v1, 0, 0);
  return swift_retain(qword_10009FCE8);
}

uint64_t sub_100018830(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(&qword_10009FCE8, v5, 1, 0);
  v2 = qword_10009FCE8;
  qword_10009FCE8 = a1;
  return swift_release(v2, v3);
}

uint64_t (*sub_10001887C(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&qword_10009FCE8, a1, 33, 0);
  return j_j__swift_endAccess;
}

__int128 *sub_1000188BC()
{
  return &xmmword_10009B770;
}

double sub_1000188C8@<D0>(uint64_t a1@<X8>)
{
  char v2;
  double result;
  __int128 v4;
  _BYTE v5[24];

  swift_beginAccess(&xmmword_10009B770, v5, 0, 0);
  v2 = byte_10009B790;
  result = *(double *)&xmmword_10009B770;
  v4 = *(_OWORD *)&qword_10009B780;
  *(_OWORD *)a1 = xmmword_10009B770;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_100018918(uint64_t a1)
{
  _BYTE v3[24];

  swift_beginAccess(&xmmword_10009B770, v3, 1, 0);
  return sub_1000292DC(a1, (uint64_t)&xmmword_10009B770);
}

uint64_t (*sub_100018964(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&xmmword_10009B770, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t *sub_1000189A4()
{
  return &qword_10009FCF0;
}

uint64_t sub_1000189B0()
{
  uint64_t v0;
  id v1;
  _BYTE v3[24];

  swift_beginAccess(&qword_10009FCF0, v3, 0, 0);
  v0 = qword_10009FCF0;
  v1 = (id)qword_10009FCF0;
  return v0;
}

void sub_1000189F8(uint64_t a1)
{
  void *v2;
  _BYTE v3[24];

  swift_beginAccess(&qword_10009FCF0, v3, 1, 0);
  v2 = (void *)qword_10009FCF0;
  qword_10009FCF0 = a1;

}

uint64_t (*sub_100018A44(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&qword_10009FCF0, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *sub_100018A84()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerProvidingViewController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerProvidingViewController, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_100018AD0(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerProvidingViewController);
}

uint64_t (*sub_100018ADC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerProvidingViewController, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_100018B20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_photoPickerDidDismissClosure);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_photoPickerDidDismissClosure, v4, 0, 0);
  v2 = *v1;
  sub_1000181E0(*v1, v1[1]);
  return v2;
}

uint64_t sub_100018B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_photoPickerDidDismissClosure);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100029324(v6, v7);
}

uint64_t (*sub_100018BD4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_photoPickerDidDismissClosure, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_100018C18()
{
  return 7;
}

uint64_t sub_100018C20()
{
  type metadata accessor for StickerPackStripViewModel(0);
  return sub_100038EC0();
}

uint64_t sub_100018C48()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerStripViewModel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerStripViewModel, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_100018C90(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerStripViewModel);
  swift_beginAccess(v3, v7, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4, v5);
}

uint64_t (*sub_100018CE0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerStripViewModel, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_100018D24()
{
  __asm { BR              X10 }
}

uint64_t sub_100018D78()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746E65636572, 0xE600000000000000, 0x7261506472696874, 0xEA00000000007974, 0);
  result = swift_bridgeObjectRelease(0xE600000000000000);
  if ((v2 & 1) != 0)
  {
    v4 = *(_QWORD *)((char *)v0
                   + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier
                   + 8);
    if (v4)
    {
      v5 = *(_QWORD *)((char *)v0
                     + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier);
      v6 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x178);
      v7 = swift_bridgeObjectRetain(*(_QWORD *)((char *)v0
                                              + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier
                                              + 8));
      v8 = v6(v7);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 328))(v5, v4);
      swift_bridgeObjectRelease(v4);
      return swift_release(v8, v9);
    }
  }
  else
  {
    v10 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x178))(result);
    v11 = *(_QWORD *)&aThirdparphotos[8 * v1 + 16];
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)v10 + 328))(*(_QWORD *)&aUsercontrecent[8 * v1], v11);
    swift_release(v10, v12);
    return swift_bridgeObjectRelease(v11);
  }
  return result;
}

uint64_t static PresentationContexts.all.getter()
{
  return 3;
}

id sub_100018F28()
{
  return objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
}

id sub_100018F4C()
{
  return objc_msgSend(objc_allocWithZone((Class)UINavigationController), "init");
}

id sub_100018F70()
{
  return objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
}

uint64_t sub_100018F94()
{
  if (AVTIsStickersStripEnabled())
    __asm { BR              X11 }
  return 0;
}

void sub_1000190B4()
{
  swift_bridgeObjectRelease(0xEB000000006C6164);
  JUMPOUT(0x1000190A4);
}

void *sub_1000190CC()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripHostHeightConstraint);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripHostHeightConstraint, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_100019118(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripHostHeightConstraint);
}

uint64_t (*sub_100019124(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripHostHeightConstraint, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *sub_100019168()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_contentControllerTopAnchorConstraint);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_contentControllerTopAnchorConstraint, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1000191B4(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_contentControllerTopAnchorConstraint);
}

uint64_t (*sub_1000191C0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_contentControllerTopAnchorConstraint, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *sub_100019204()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripTopConstraint);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripTopConstraint, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_100019250(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripTopConstraint);
}

uint64_t (*sub_10001925C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripTopConstraint, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t static PresentationContexts.messages.getter()
{
  return 1;
}

uint64_t sub_1000192A8()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_presentedFromMessages);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_presentedFromMessages, v3, 0, 0);
  return *v1;
}

uint64_t sub_1000192EC(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_presentedFromMessages);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*sub_100019334(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_presentedFromMessages, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_100019378()
{
  _QWORD *v0;

  if (((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x280))() & 1) == 0)
    __asm { BR              X11 }
  return 0;
}

void sub_1000194B0()
{
  swift_bridgeObjectRelease(0xEB000000006C6164);
  JUMPOUT(0x1000194A0);
}

uint64_t sub_1000194C8()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  if (v1 == (id)1)
    return 0;
  result = (uint64_t)objc_msgSend((id)objc_opt_self(AVTUIControllerPresentation), "pendingGlobalPresentation");
  if (result)
  {

    return 1;
  }
  return result;
}

id sub_100019554()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStripHost;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStripHost);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStripHost);
  }
  else
  {
    sub_1000195B4(v0);
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1000195B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;

  v2 = type metadata accessor for StickerPackStrip(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100019CC0(v4);
  v5 = objc_allocWithZone((Class)sub_10000A66C(&qword_10009BAF0));
  v6 = (void *)UIHostingController.init(rootView:)(v4);
  v7 = objc_msgSend(v6, "view");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v8, "setBackgroundColor:", v9);

    v10 = objc_msgSend(v6, "view");
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      v12 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController;
      objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController), "addChildViewController:", v6);
      v13 = objc_msgSend(*(id *)(a1 + v12), "view");
      if (v13)
      {
        v14 = v13;
        v15 = objc_msgSend(v6, "view");
        if (v15)
        {
          v16 = v15;
          objc_msgSend(v14, "addSubview:", v15);

          objc_msgSend(v6, "didMoveToParentViewController:", *(_QWORD *)(a1 + v12));
          v17 = objc_msgSend(v6, "view");
          if (v17)
          {
            v18 = v17;
            v19 = objc_msgSend(v17, "heightAnchor");

            __asm { BR              X12 }
          }
LABEL_11:
          __break(1u);
          JUMPOUT(0x100019C84);
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
LABEL_9:
      __break(1u);
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_9;
}

uint64_t sub_100019CC0@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v14[5];
  char v15[24];

  v3 = sub_10000A66C((uint64_t *)&unk_10009B820);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)v14 - v7;
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStrip];
  swift_beginAccess(&v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStrip], v15, 0, 0);
  sub_10002E23C(v9, (uint64_t)v8, (uint64_t *)&unk_10009B820);
  v10 = type metadata accessor for StickerPackStrip(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_10002D8A0((uint64_t)v8, (uint64_t)a1);
  sub_10002E2B4((uint64_t)v8, (uint64_t *)&unk_10009B820);
  v14[3] = type metadata accessor for StickersParentViewController(0);
  v14[4] = &off_10008B500;
  v14[0] = v1;
  v12 = v1;
  sub_10003A4DC((uint64_t)v14, a1);
  sub_10002D814((uint64_t)a1, (uint64_t)v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v14, 33, 0);
  sub_10002D858((uint64_t)v6, v9);
  return swift_endAccess(v14);
}

uint64_t sub_100019E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for StickerPackStrip(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void *sub_100019E80()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_imageAnalysisInteraction);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_imageAnalysisInteraction, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_100019ECC(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_imageAnalysisInteraction);
}

void sub_100019ED8(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;
  _BYTE v6[24];

  v4 = (void **)(v2 + *a2);
  swift_beginAccess(v4, v6, 1, 0);
  v5 = *v4;
  *v4 = a1;

}

uint64_t (*sub_100019F24(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_imageAnalysisInteraction, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_100019F68()
{
  char *v0;
  void **v1;
  void *v2;
  id v3;
  objc_super v5;
  char v6[24];

  v1 = (void **)&v0[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_imageAnalysisInteraction];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_imageAnalysisInteraction], v6, 1, 0);
  v2 = *v1;
  *v1 = 0;

  v3 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v3, "removeObserver:", v0);

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for StickersParentViewController(0);
  return objc_msgSendSuper2(&v5, "dealloc");
}

id sub_10001A20C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint8_t *v17;
  void **v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id result;
  void *v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  void **aBlock;
  uint64_t v61;
  void *v62;
  void *v63;
  void (*v64)();
  uint64_t v65;
  objc_super v66;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS.QoSClass(0);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  __chkstk_darwin(v9);
  v52 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for StickersParentViewController(0);
  v66.receiver = v0;
  v66.super_class = v11;
  objc_msgSendSuper2(&v66, "viewDidLoad");
  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v12 = type metadata accessor for Logger(0);
  sub_10000D130(v12, (uint64_t)qword_10009E0E8);
  v13 = v0;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.info.getter();
  v16 = os_log_type_enabled(v14, v15);
  v57 = v5;
  v58 = v4;
  v55 = v8;
  v56 = v6;
  if (v16)
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = (void **)swift_slowAlloc(32, -1);
    aBlock = v18;
    v51 = v2;
    *(_DWORD *)v17 = 136315138;
    v50 = v17 + 4;
    v19 = objc_msgSend(v13, "debugDescription");
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v21 = v1;
    v23 = v22;

    v59 = (void *)sub_10000C99C(v20, v23, (uint64_t *)&aBlock);
    v2 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &aBlock, v50, v17 + 12);

    v24 = v23;
    v1 = v21;
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Loading %s", v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

  }
  result = objc_msgSend(v13, "view");
  if (result)
  {
    v26 = result;
    v27 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v26, "setBackgroundColor:", v27);

    objc_msgSend(v13, "setAutomaticallyDisplaysLandscapeRotationOverlay:", (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x2A0))() & 1);
    sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
    v29 = v52;
    v28 = v53;
    v30 = v54;
    (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v52, enum case for DispatchQoS.QoSClass.userInteractive(_:), v54);
    v31 = (void *)static OS_dispatch_queue.global(qos:)(v29);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
    v64 = sub_10001A7B8;
    v65 = 0;
    aBlock = _NSConcreteStackBlock;
    v61 = 1107296256;
    v62 = sub_10001340C;
    v63 = &unk_10008B028;
    v32 = _Block_copy(&aBlock);
    v33 = v55;
    static DispatchQoS.unspecified.getter();
    v59 = &_swiftEmptyArrayStorage;
    v34 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v35 = sub_10000A66C(&qword_10009B198);
    v36 = sub_10000D6D4();
    v37 = v58;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v35, v36, v1, v34);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v33, v37, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v37, v1);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v57);
    v38 = iMessageAppsRegistry.shared.unsafeMutableAddressor();
    v39 = *v38;
    v40 = *(void (**)(uint64_t))(*(_QWORD *)*v38 + 248);
    v41 = swift_retain(*v38);
    v40(v41);
    swift_release(v39, v42);
    v43 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v44 = (void *)static NSNotificationName.stickerCreationProgress.getter();
    v45 = swift_allocObject(&unk_10008B060, 24, 7);
    swift_unknownObjectWeakInit(v45 + 16, v13);
    v64 = sub_1000293AC;
    v65 = v45;
    aBlock = _NSConcreteStackBlock;
    v61 = 1107296256;
    v62 = sub_100017018;
    v63 = &unk_10008B078;
    v46 = _Block_copy(&aBlock);
    swift_release(v65, v47);
    v48 = objc_msgSend(v43, "addObserverForName:object:queue:usingBlock:", v44, 0, 0, v46);
    _Block_release(v46);
    swift_unknownObjectRelease(v48);

    return (id)(*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x310))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10001A7B8()
{

}

void sub_10001A81C(void *a1)
{
  _QWORD *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "_presentationSemanticContext");

  if (!a1 || v4 != objc_msgSend(a1, "_presentationSemanticContext"))
  {
    (*(void (**)(void))((swift_isaMask & *v1) + 0x310))();
    sub_10001A978();
  }
}

void sub_10001A978()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  id v3;
  char v4;
  double v5;
  id v6;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x268))();
  if (v1)
  {
    v6 = (id)v1;
    v2 = objc_msgSend(v0, "traitCollection");
    v3 = objc_msgSend(v2, "_presentationSemanticContext");

    v4 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x298))();
    v5 = 0.0;
    if (v3 == (id)3)
      v5 = 8.0;
    if ((v4 & 1) != 0)
      v5 = 6.0;
    objc_msgSend(v6, "setConstant:", v5);

  }
}

void sub_10001AA4C()
{
  _BYTE v0[24];

  swift_beginAccess(&byte_10009B760, v0, 0, 0);
  __asm { BR              X10 }
}

void sub_10001AAC4()
{
  char *v0;
  char v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  Class isa;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  Class v38;
  void *v39;

  v1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746E65636572, 0xE600000000000000, 0x6F4D736F746F6870, 0xEB000000006C6164, 0);
  swift_bridgeObjectRelease(0xE600000000000000);
  if ((v1 & 1) == 0)
  {
    v2 = objc_msgSend(v0, "traitCollection");
    v3 = objc_msgSend(v2, "_presentationSemanticContext");

    if (v3 != (id)3)
    {
      v4 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
      v5 = swift_allocObject(v4, 56, 7);
      *(_OWORD *)(v5 + 16) = xmmword_100077F80;
      v6 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 24.0);
      if (v6)
      {
        *(_QWORD *)(v5 + 32) = v6;
        *(_QWORD *)(v5 + 40) = objc_msgSend((id)objc_opt_self(UIColorEffect), "colorEffectSaturate:", 1.5);
        v7 = sub_10000D5F4(0, &qword_10009B830, UIColorEffect_ptr);
        v8 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
        v9 = objc_msgSend(v8, "colorWithAlphaComponent:", 0.85);

        v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(v7), "effectCompositingColor:", v9);
        if (v10)
        {
          *(_QWORD *)(v5 + 48) = v10;
          specialized Array._endMutation()();
          sub_10000D5F4(0, (unint64_t *)&unk_10009B838, UIVisualEffect_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v5);
          v12 = objc_msgSend((id)objc_opt_self(UIVisualEffect), "effectCombiningEffects:", isa);

          v13 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v12);
          objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          v14 = objc_msgSend(v0, "view");
          if (v14)
          {
            v15 = v14;
            objc_msgSend(v14, "insertSubview:atIndex:", v13, 0);

            v16 = swift_allocObject(v4, 64, 7);
            *(_OWORD *)(v16 + 16) = xmmword_100078360;
            v17 = objc_msgSend(v13, "topAnchor");
            v18 = objc_msgSend(v0, "view");
            if (v18)
            {
              v19 = v18;
              v20 = objc_msgSend(v18, "topAnchor");

              v21 = objc_msgSend(v17, "constraintEqualToAnchor:", v20);
              *(_QWORD *)(v16 + 32) = v21;
              v22 = objc_msgSend(v13, "leadingAnchor");
              v23 = objc_msgSend(v0, "view");
              if (v23)
              {
                v24 = v23;
                v25 = objc_msgSend(v23, "leadingAnchor");

                v26 = objc_msgSend(v22, "constraintEqualToAnchor:", v25);
                *(_QWORD *)(v16 + 40) = v26;
                v27 = objc_msgSend(v13, "heightAnchor");
                v28 = objc_msgSend(v0, "view");
                if (v28)
                {
                  v29 = v28;
                  v30 = objc_msgSend(v28, "heightAnchor");

                  v31 = objc_msgSend(v27, "constraintEqualToAnchor:", v30);
                  *(_QWORD *)(v16 + 48) = v31;
                  v32 = objc_msgSend(v13, "widthAnchor");
                  v33 = objc_msgSend(v0, "view");
                  if (v33)
                  {
                    v34 = v33;
                    v35 = (void *)objc_opt_self(NSLayoutConstraint);
                    v36 = objc_msgSend(v34, "widthAnchor");

                    v37 = objc_msgSend(v32, "constraintEqualToAnchor:", v36);
                    *(_QWORD *)(v16 + 56) = v37;
                    specialized Array._endMutation()();
                    sub_10000D5F4(0, (unint64_t *)&qword_10009B0D0, NSLayoutConstraint_ptr);
                    v38 = Array._bridgeToObjectiveC()().super.isa;
                    swift_bridgeObjectRelease(v16);
                    objc_msgSend(v35, "activateConstraints:", v38);

                    v39 = *(void **)&v0[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_visualEffectViewBackground];
                    *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_visualEffectViewBackground] = v13;

                    return;
                  }
LABEL_18:
                  __break(1u);
                  JUMPOUT(0x10001B070);
                }
LABEL_17:
                __break(1u);
                goto LABEL_18;
              }
LABEL_16:
              __break(1u);
              goto LABEL_17;
            }
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_14;
    }
  }
}

id sub_10001B090(char a1)
{
  _QWORD *v1;
  id result;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for StickersParentViewController(0);
  objc_msgSendSuper2(&v10, "viewWillAppear:", a1 & 1);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v4, "setBackgroundColor:", v5);

    (*(void (**)(void))((swift_isaMask & *v1) + 0x318))();
    v6 = sub_10000A66C(&qword_10009B848);
    v7 = swift_allocObject(v6, 48, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100078550;
    *(_QWORD *)(v7 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
    *(_QWORD *)(v7 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
    v8 = UIViewController.registerForTraitChanges(_:action:)(v7, "traitStyleDidChange");
    swift_bridgeObjectRelease(v7);
    v9 = *(_QWORD *)((char *)v1
                   + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_traitRegistration);
    *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_traitRegistration) = v8;
    return (id)swift_unknownObjectRelease(v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10001B208(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  objc_super v6;

  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_traitRegistration];
  if (v3)
  {
    v4 = swift_unknownObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_traitRegistration]);
    UIViewController.unregisterForTraitChanges(_:)(v4);
    swift_unknownObjectRelease(v3);
  }
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for StickersParentViewController(0);
  return objc_msgSendSuper2(&v6, "viewWillDisappear:", a1 & 1);
}

void sub_10001B300()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;

  v1 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin();
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(id *)&v0[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_rootNavigationController];
  v5 = objc_msgSend(v0, "traitCollection");
  v6 = objc_msgSend(v5, "userInterfaceStyle");

  UIViewController.traitOverrides.getter();
  UIMutableTraits.userInterfaceStyle.setter(v6, v1, &protocol witness table for UITraitOverrides);
  UIViewController.traitOverrides.setter(v3);

}

double sub_10001B4C8()
{
  _QWORD *v0;
  id v1;
  double v2;
  double v3;
  uint64_t (*v4)(void);
  id v5;
  id v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for StickersParentViewController(0);
  v1 = objc_msgSendSuper2(&v8, "additionalSafeAreaInsets");
  v3 = v2;
  v4 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x298);
  if ((((uint64_t (*)(id))v4)(v1) & 1) != 0)
  {
    v5 = objc_msgSend(v0, "traitCollection");
    v6 = objc_msgSend(v5, "_presentationSemanticContext");

    v3 = 6.0;
    if ((v4() & 1) == 0)
    {
      if (v6 == (id)3)
        return 8.0;
      else
        return 0.0;
    }
  }
  return v3;
}

uint64_t sub_10001B600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10001B670, v5, v6);
}

uint64_t sub_10001B670(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSString v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v3 = *(char **)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  swift_release(*(_QWORD *)(v2 + 40), a2);
  v6 = &v3[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier];
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier + 8];
  *(_QWORD *)v6 = v5;
  *((_QWORD *)v6 + 1) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v7);
  sub_100018D24();
  v8 = String._bridgeToObjectiveC()();
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "requestPresentationWithStickerType:identifier:", v8, v9);

  if (v3[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType] == 7)
  {
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_10000D130(v10, (uint64_t)qword_10009E0E8);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "No active controller type yet; not presenting", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

  }
  else
  {
    sub_100020BE4();
  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10001B920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_10001B990, v5, v6);
}

uint64_t sub_10001B990(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v3 = (void *)v2[4];
  v4 = v2[2];
  v5 = (const void *)v2[3];
  swift_release(v2[5], a2);
  v2[6] = _Block_copy(v5);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v8 = v7;
  v2[7] = v7;
  v9 = dword_10009B854;
  v10 = v3;
  v11 = (_QWORD *)swift_task_alloc(v9);
  v2[8] = v11;
  *v11 = v2;
  v11[1] = sub_10001BA24;
  return sub_10001B600(v6, v8);
}

uint64_t sub_10001BA24()
{
  uint64_t *v0;
  uint64_t v1;
  void (**v2)(_QWORD);
  void *v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*v0 + 56);
  v2 = *(void (***)(_QWORD))(*v0 + 48);
  v3 = *(void **)(*v0 + 32);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  swift_bridgeObjectRelease(v1);

  v2[2](v2);
  _Block_release(v2);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_10001BA9C(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[80];
  _BYTE v31[24];
  _BYTE v32[80];
  _BYTE v33[80];
  _BYTE v34[88];

  v2 = sub_10000A66C(&qword_10009B858);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100078A10;
  v4 = sub_10000A66C(&qword_10009B860);
  inited = swift_initStackObject(v4, v34);
  *(_OWORD *)(inited + 16) = xmmword_100078550;
  *(_QWORD *)(inited + 32) = 0x746E65636572;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = 0x6B636F6C43;
  *(_QWORD *)(inited + 56) = 0xE500000000000000;
  *(_QWORD *)(v3 + 32) = sub_10001BE1C(inited);
  v6 = swift_initStackObject(v4, v33);
  *(_OWORD *)(v6 + 16) = xmmword_100078550;
  *(_QWORD *)(v6 + 32) = 0x746E6F4372657375;
  *(_QWORD *)(v6 + 40) = 0xEB00000000746E65;
  *(_QWORD *)(v6 + 72) = &type metadata for String;
  *(_QWORD *)(v6 + 48) = 0x72656B63697453;
  *(_QWORD *)(v6 + 56) = 0xE700000000000000;
  *(_QWORD *)(v3 + 40) = sub_10001BE1C(v6);
  v7 = swift_initStackObject(v4, v32);
  *(_OWORD *)(v7 + 16) = xmmword_100078550;
  *(_QWORD *)(v7 + 32) = 0x696A6F6D656DLL;
  *(_QWORD *)(v7 + 40) = 0xE600000000000000;
  v8 = sub_1000153B0();
  swift_beginAccess(v8, v31, 0, 0);
  v9 = *v8;
  v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 232);
  v11 = swift_retain(v9);
  v12 = v10(v11);
  swift_release(v9, v13);
  *(_QWORD *)(v7 + 72) = sub_10000A66C(&qword_10009B868);
  *(_QWORD *)(v7 + 48) = v12;
  *(_QWORD *)(v3 + 48) = sub_10001BE1C(v7);
  v14 = swift_initStackObject(v4, v30);
  *(_OWORD *)(v14 + 16) = xmmword_100078550;
  *(_QWORD *)(v14 + 32) = 0x696A6F6D65;
  *(_QWORD *)(v14 + 40) = 0xE500000000000000;
  *(_QWORD *)(v14 + 72) = &type metadata for String;
  *(_QWORD *)(v14 + 48) = 0xD000000000000013;
  *(_QWORD *)(v14 + 56) = 0x8000000100073F20;
  *(_QWORD *)(v3 + 56) = sub_10001BE1C(v14);
  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v15 = type metadata accessor for Logger(0);
  sub_10000D130(v15, (uint64_t)qword_10009E0E8);
  v16 = swift_bridgeObjectRetain_n(v3, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v29 = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = sub_10000A66C((uint64_t *)&unk_10009B870);
    v22 = Array.debugDescription.getter(v3, v21);
    v24 = v23;
    v28 = sub_10000C99C(v22, v23, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease_n(v3, 2, v25);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "requestStickerExtensionMetadataDictionary will call completion with %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v3, 2, v26);
  }
  a1(v3);
  return swift_bridgeObjectRelease(v3);
}

unint64_t sub_10001BE1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A66C(&qword_10009BB30);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10002E23C(v7, (uint64_t)&v17, &qword_10009BB38);
    v8 = v17;
    v9 = v18;
    result = sub_1000173C4(v17, v18);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_1000119C8(&v19, (_OWORD *)(v4[7] + 32 * result));
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4, v13);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10001BFA8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  void *object;
  NSString v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  Class isa;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  Swift::String v60;

  v1 = v0;
  v2 = type metadata accessor for UITraitOverrides(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController;
  v6 = objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController), "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_19;
  }
  v7 = v6;
  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "clearColor");
  objc_msgSend(v7, "setBackgroundColor:", v9);

  v10 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x298))();
  v11 = *(void **)((char *)v1 + v5);
  if ((v10 & 1) == 0)
  {
    v51 = objc_msgSend(*(id *)((char *)v1 + v5), "view");
    if (v51)
    {
      v52 = v51;
      objc_msgSend(v51, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      objc_msgSend(v1, "addChildViewController:", *(_QWORD *)((char *)v1 + v5));
      v53 = objc_msgSend(v1, "view");
      if (v53)
      {
        v54 = v53;
        v55 = objc_msgSend(*(id *)((char *)v1 + v5), "view");
        if (v55)
        {
          v56 = v55;
          objc_msgSend(v54, "addSubview:", v55);

          v57 = objc_msgSend(*(id *)((char *)v1 + v5), "view");
          if (v57)
          {
            v58 = v57;
            UIView.activateConstraintsFillingSuperview()();

            return;
          }
          goto LABEL_27;
        }
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = v11;
  v14 = objc_msgSend(v12, "mainBundle");
  v60._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0x7372656B63697453;
  v15._object = (void *)0xE800000000000000;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v60._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v60)._object;

  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v13, "setTitle:", v18);

  v19 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v20 = objc_msgSend(v19, "userInterfaceIdiom");

  if (v20 != (id)1)
  {
LABEL_6:
    v25 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 7);
    objc_msgSend(v25, "addTarget:action:forControlEvents:", v1, "handleCloseButton", 64);
    v26 = objc_msgSend(*(id *)((char *)v1 + v5), "navigationItem");
    v27 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v25);
    objc_msgSend(v26, "setRightBarButtonItem:", v27);

LABEL_7:
    v28 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_rootNavigationController;
    v29 = objc_retain(*(id *)((char *)v1
                            + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_rootNavigationController));
    v30 = objc_msgSend(v1, "traitCollection");
    v31 = objc_msgSend(v30, "userInterfaceStyle");

    UIViewController.traitOverrides.getter();
    UIMutableTraits.userInterfaceStyle.setter(v31, v2, &protocol witness table for UITraitOverrides);
    UIViewController.traitOverrides.setter(v4);

    v32 = objc_msgSend(*(id *)((char *)v1 + v28), "view");
    if (v32)
    {
      v33 = v32;
      v34 = objc_msgSend(v8, "clearColor");
      objc_msgSend(v33, "setBackgroundColor:", v34);

      v35 = objc_msgSend(*(id *)((char *)v1 + v28), "view");
      if (v35)
      {
        v36 = v35;
        objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

        v37 = *(void **)((char *)v1 + v28);
        v38 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
        v39 = swift_allocObject(v38, 40, 7);
        *(_OWORD *)(v39 + 16) = xmmword_100077FA0;
        v40 = *(void **)((char *)v1 + v5);
        *(_QWORD *)(v39 + 32) = v40;
        v59 = v39;
        specialized Array._endMutation()();
        v41 = v59;
        sub_10000D5F4(0, &qword_10009C9C0, UIViewController_ptr);
        v42 = v37;
        v43 = v40;
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v41);
        objc_msgSend(v42, "setViewControllers:", isa);

        objc_msgSend(v1, "addChildViewController:", *(_QWORD *)((char *)v1 + v28));
        v45 = objc_msgSend(v1, "view");
        if (v45)
        {
          v46 = v45;
          v47 = objc_msgSend(*(id *)((char *)v1 + v28), "view");
          if (v47)
          {
            v48 = v47;
            objc_msgSend(v46, "addSubview:", v47);

            v49 = objc_msgSend(*(id *)((char *)v1 + v28), "view");
            if (v49)
            {
              v50 = v49;
              UIView.activateConstraintsFillingSuperview()();

              return;
            }
            goto LABEL_23;
          }
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v21 = objc_msgSend(v1, "view");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, "traitCollection");

    v24 = objc_msgSend(v23, "horizontalSizeClass");
    if (v24 != (id)1)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_28:
  __break(1u);
}

id sub_10001C5D4()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  void *v3;

  v1 = v0;
  v2 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x100))();
  if (v2)
  {
    v3 = v2;
    (*(void (**)(void))((swift_isaMask & *v2) + 0x150))();

  }
  return objc_msgSend(v1, "dismiss");
}

void sub_10001C6C4(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::String v66;

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v54 - v13;
  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v15 = sub_10000D130(v8, (uint64_t)qword_10009E0E8);
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v58(v14, v15, v8);
  swift_bridgeObjectRetain_n(a4, 2);
  v16 = swift_bridgeObjectRetain_n(a2, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter();
  v63 = v9;
  v19 = v18;
  v20 = os_log_type_enabled(v17, v18);
  v61 = a3;
  if (v20)
  {
    v21 = swift_slowAlloc(22, -1);
    v56 = v15;
    v22 = v21;
    v55 = swift_slowAlloc(64, -1);
    v65 = v55;
    *(_DWORD *)v22 = 136315394;
    v59 = v12;
    swift_bridgeObjectRetain(a2);
    v64 = sub_10000C99C(a1, (unint64_t)a2, &v65);
    v60 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease_n(a2, 3, v23);
    *(_WORD *)(v22 + 12) = 2080;
    if (a4)
      v24 = a3;
    else
      v24 = 7104878;
    v57 = a1;
    if (a4)
      v25 = a4;
    else
      v25 = 0xE300000000000000;
    swift_bridgeObjectRetain(a4);
    v26 = v24;
    v12 = v59;
    v64 = sub_10000C99C(v26, v25, &v65);
    v8 = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v22 + 14, v22 + 22);
    swift_bridgeObjectRelease_n(a4, 2, v27);
    v28 = v25;
    a1 = v57;
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v17, v19, "requestPresentation of %s with identifier: %s)", (uint8_t *)v22, 0x16u);
    v29 = v55;
    swift_arrayDestroy(v55, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    v30 = v22;
    v15 = v56;
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2, v31);
    swift_bridgeObjectRelease_n(a2, 2, v32);
  }
  v33 = *(void (**)(char *, uint64_t))(v63 + 8);
  v33(v14, v8);
  swift_bridgeObjectRetain(a2);
  v66._countAndFlagsBits = a1;
  v66._object = a2;
  v34 = sub_100029294(v66);
  if (v34 != 7)
  {
    v41 = v34;
    v42 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v12, v15, v8);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v59 = v12;
      v45 = (uint8_t *)swift_slowAlloc(12, -1);
      v46 = swift_slowAlloc(32, -1);
      v60 = v8;
      v47 = v46;
      *(_DWORD *)v45 = 136315138;
      v48 = 8 * v41;
      v49 = *(_QWORD *)&aUsercontrecent[v48];
      v65 = v47;
      v50 = *(_QWORD *)&aThirdparphotos[v48 + 16];
      v64 = sub_10000C99C(v49, v50, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v45 + 4, v45 + 12);
      swift_bridgeObjectRelease(v50);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "will present view of type %s", v45, 0xCu);
      swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v45, -1, -1);

      v51 = v59;
      v52 = v60;
    }
    else
    {

      v51 = v12;
      v52 = v8;
    }
    v33(v51, v52);
    *(_BYTE *)(v62 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType) = v41;
    sub_100018D24();
    __asm { BR              X10 }
  }
  v35 = swift_bridgeObjectRetain_n(a2, 2);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v65 = v39;
    *(_DWORD *)v38 = 136315138;
    swift_bridgeObjectRetain(a2);
    v64 = sub_10000C99C(a1, (unint64_t)a2, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v38 + 4, v38 + 12);
    swift_bridgeObjectRelease_n(a2, 3, v40);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Was asked to present a view I don't understand. Nothing to do. %s", v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2, v53);
  }
}

id sub_10001CE30(uint64_t a1)
{
  _QWORD *v1;
  id v3;
  id result;
  void *v5;
  id v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for StickersParentViewController(0);
  v3 = objc_msgSendSuper2(&v7, "defaultMessagesChildViewControllerForPresentationContext:", a1);
  result = objc_msgSend(v3, "view");
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v5, "setBackgroundColor:", v6);

    (*(void (**)(BOOL))((swift_isaMask & *v1) + 0x288))(a1 == 0);
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10001D014(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  _QWORD *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  objc_class *v19;
  id v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_super v29;

  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v3 = type metadata accessor for Logger(0);
  sub_10000D130(v3, (uint64_t)qword_10009E0E8);
  v4 = v1;
  v5 = a1;
  v6 = v4;
  v7 = v5;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v28 = v26;
    *(_DWORD *)v10 = 136315394;
    v11 = objc_msgSend(v6, "debugDescription");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v27 = sub_10000C99C(v12, v14, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v10 + 4, v10 + 12);

    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v10 + 12) = 2080;
    v15 = objc_msgSend(v7, "debugDescription");
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v27 = sub_10000C99C(v16, v18, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v10 + 14, v10 + 22);

    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s willBecomeActive(with conversation: %s)", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  v19 = (objc_class *)type metadata accessor for StickersParentViewController(0);
  v29.receiver = v6;
  v29.super_class = v19;
  v20 = objc_msgSendSuper2(&v29, "willBecomeActiveWithConversation:", v7);
  objc_msgSend(v6, "setAutomaticallyDisplaysLandscapeRotationOverlay:", (*(uint64_t (**)(id))((swift_isaMask & *v6) + 0x2A0))(v20) & 1);
  v21 = objc_msgSend((id)objc_opt_self(AVTUIControllerPresentation), "pendingGlobalPresentation");

  if (!v21)
  {
    sub_100022050();
    v22 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x320))();
    if (*((_BYTE *)v6 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType) == 7)
    {
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "No active controller type yet; not presenting", v25, 2u);
        swift_slowDealloc(v25, -1, -1);
      }

    }
    else
    {
      sub_100020BE4();
    }
  }
}

void sub_10001D3EC(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  objc_class *v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v3 = type metadata accessor for Logger(0);
  sub_10000D130(v3, (uint64_t)qword_10009E0E8);
  v4 = v1;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc(22, -1);
    v8 = swift_slowAlloc(32, -1);
    v15 = v8;
    *(_DWORD *)v7 = 136315394;
    v9 = objc_msgSend(v4, "debugDescription");
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    v14 = sub_10000C99C(v10, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v7 + 4, v7 + 12);

    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v7 + 12) = 2048;
    v14 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v7 + 14, v7 + 22);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s willTransition(to presentationStyle: %lu)", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
  v13 = (objc_class *)type metadata accessor for StickersParentViewController(0);
  v16.receiver = v4;
  v16.super_class = v13;
  objc_msgSendSuper2(&v16, "willTransitionToPresentationStyle:", a1);
  __asm { BR              X10 }
}

void sub_10001D828(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  _QWORD *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  objc_class *v13;
  id v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  NSObject *v23;
  NSObject *v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  objc_super v29;

  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v3 = type metadata accessor for Logger(0);
  sub_10000D130(v3, (uint64_t)qword_10009E0E8);
  v4 = v1;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc(22, -1);
    v8 = swift_slowAlloc(32, -1);
    v28 = v8;
    *(_DWORD *)v7 = 136315394;
    v9 = objc_msgSend(v4, "debugDescription");
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    v27 = sub_10000C99C(v10, v12, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v7 + 4, v7 + 12);

    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v7 + 12) = 2048;
    v27 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v7 + 14, v7 + 22);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s didTransition(to presentationStyle:%lu)", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
  v13 = (objc_class *)type metadata accessor for StickersParentViewController(0);
  v29.receiver = v4;
  v29.super_class = v13;
  objc_msgSendSuper2(&v29, "didTransitionToPresentationStyle:", a1);
  v14 = objc_msgSend(v4, "activeConversation");

  if (!v14)
  {
    v24 = Logger.logObject.getter(v15);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, (os_log_type_t)v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v25, "Could not find a conversation", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }
    goto LABEL_17;
  }
  v16 = *(uint64_t (**)(void))((swift_isaMask & *v4) + 0x100);
  v17 = (void *)v16();
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, "view");

    if (!v19)
    {
      __break(1u);
      goto LABEL_20;
    }
    objc_msgSend(v19, "setNeedsLayout");

  }
  v20 = *(void **)((char *)v4
                 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerCollectionViewControllerPresentedViewController);
  if (v20)
  {
    v21 = objc_msgSend(v20, "view");
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v21, "setNeedsLayout");

      goto LABEL_13;
    }
LABEL_20:
    __break(1u);
    return;
  }
LABEL_13:
  v23 = v16();
  if (!v23)
    return;
  v24 = v23;
  (*(void (**)(uint64_t))((swift_isaMask & (uint64_t)v23->isa) + 0x160))(a1);
LABEL_17:

}

void sub_10001DBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  Class isa;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  sub_10000D5F4(0, &qword_10009B880, _UIStickerRepresentation_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v7 = swift_allocObject(&unk_10008B0B0, 32, 7);
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v11[4] = sub_10002951C;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10001DCC8;
  v11[3] = &unk_10008B0C8;
  v8 = _Block_copy(v11);
  v9 = v12;
  swift_retain(a3);
  swift_release(v9, v10);
  objc_msgSend(v3, "_addStickerToStoreWithRepresentations:completionWithStickerIDs:", isa, v8);
  _Block_release(v8);

}

uint64_t sub_10001DCC8(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7)
{
  uint64_t v8;
  uint64_t v13;
  void (*v14)(uint64_t, void *, double, double, double, double);
  uint64_t v15;
  id v16;
  uint64_t v17;

  v8 = a2;
  v14 = *(void (**)(uint64_t, void *, double, double, double, double))(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v15 = type metadata accessor for UUID(0);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v15);
  }
  swift_retain(v13);
  v16 = a3;
  v14(v8, a3, a4, a5, a6, a7);
  swift_release(v13, v17);

  return swift_bridgeObjectRelease(v8);
}

void sub_10001DEC8(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  id v12;

  if (a1)
    v11 = _convertErrorToNSError(_:)();
  else
    v11 = 0;
  v12 = (id)v11;
  (*(void (**)(uint64_t, double, double, double, double))(a2 + 16))(a2, a3, a4, a5, a6);

}

void sub_10001DF44(uint64_t a1, void (*a2)(_QWORD, uint64_t, double, double, double, double), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  double y;
  double width;
  double height;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  double v60;
  double v61;
  double v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  char *v70;
  unint64_t v71;
  id v72;
  void *v73;
  id v74;
  void *v75;
  void *v76;
  _QWORD *v77;
  void *v78;
  _QWORD *v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(_QWORD, uint64_t, double, double, double, double);
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  _QWORD aBlock[5];
  _QWORD *v113;
  unint64_t v114;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v102 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v101 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for DispatchQoS(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for Sticker.StickerType(0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v97 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000A66C(&qword_10009B888);
  __chkstk_darwin(v10);
  v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UTType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v110 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v109 = (char *)&v90 - v17;
  if (qword_10009E0E0 != -1)
    goto LABEL_26;
  while (1)
  {
    v18 = type metadata accessor for Logger(0);
    v19 = sub_10000D130(v18, (uint64_t)qword_10009E0E8);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.info.getter();
    v22 = os_log_type_enabled(v20, v21);
    v111 = v13;
    if (v22)
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "_addStickerToStoreWithStickerIDS", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    v24 = v103;
    v25 = *(void **)&v103[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingStickerMu];
    objc_msgSend(v25, "lock");
    v26 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingSticker;
    LOBYTE(v24) = v24[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingSticker];
    objc_msgSend(v25, "unlock");
    if ((v24 & 1) != 0)
    {
      y = CGRectNull.origin.y;
      width = CGRectNull.size.width;
      height = CGRectNull.size.height;
      v30 = sub_100029520();
      v31 = swift_allocError(&type metadata for StickersParentViewController.AddStickerError, v30, 0, 0);
      *v32 = 0;
      v32[1] = 0;
      a2(0, v31, CGRectNull.origin.x, y, width, height);
      swift_errorRelease(v31);
      return;
    }
    v114 = (unint64_t)&_swiftEmptyArrayStorage;
    if ((unint64_t)a1 >> 62)
    {
      v89 = a1 < 0 ? a1 : a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v33 = _CocoaArrayWrapper.endIndex.getter(v89);
    }
    else
    {
      v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
    }
    v93 = v26;
    v94 = v25;
    if (!v33)
      break;
    v108 = v14;
    v90 = v6;
    v91 = a2;
    v92 = a3;
    v6 = 0;
    v106 = a1;
    v107 = a1 & 0xC000000000000001;
    v104 = v33;
    v105 = v12;
    v13 = (uint64_t)v109;
    while (1)
    {
      v34 = v107 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1) : *(id *)(a1 + 8 * v6 + 32);
      v35 = v34;
      v14 = v108;
      a3 = v6 + 1;
      if (__OFADD__(v6, 1))
        break;
      v36 = objc_msgSend(v34, "type");
      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v39 = v38;

      v40 = v111;
      UTType.init(_:)(v37, v39);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v40) == 1)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(v114);
        sub_10002E2B4((uint64_t)v12, &qword_10009B888);
        v60 = CGRectNull.origin.y;
        v61 = CGRectNull.size.width;
        v62 = CGRectNull.size.height;
        v63 = objc_msgSend(v35, "type");
        v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
        v66 = v65;

        v67 = sub_100029520();
        v68 = swift_allocError(&type metadata for StickersParentViewController.AddStickerError, v67, 0, 0);
        *v69 = v64;
        v69[1] = v66;
        v91(0, v68, CGRectNull.origin.x, v60, v61, v62);
        swift_errorRelease(v68);

        return;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v13, v12, v40);
      v41 = v40;
      v42 = objc_msgSend(v35, "data");
      v43 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v45 = v44;

      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v110, v13, v41);
      objc_msgSend(v35, "size");
      v47 = v46;
      v49 = v48;
      v50 = objc_msgSend(v35, "role");
      if (v50)
      {
        v51 = v50;
        v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
        v54 = v53;

      }
      else
      {
        v52 = static Sticker.Representation.Role.default.getter();
        v54 = v55;
      }
      v56 = objc_allocWithZone((Class)type metadata accessor for Sticker.Representation(0));
      a2 = (void (*)(_QWORD, uint64_t, double, double, double, double))(id)Sticker.Representation.init(data:uti:size:role:isPreferred:)(v43, v45, v110, v52, v54, v6 == 0, v47, v49);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v58 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v57 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v58 >= v57 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
      v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, a2);
      specialized Array._endMutation()(v59);

      (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v111);
      ++v6;
      v12 = v105;
      a1 = v106;
      if (a3 == v104)
      {
        swift_bridgeObjectRelease(v106);
        a3 = v92;
        a2 = v91;
        v6 = v90;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_26:
    swift_once(&qword_10009E0E0, sub_1000181F8);
  }
  swift_bridgeObjectRelease(a1);
LABEL_24:
  v70 = v97;
  (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v97, enum case for Sticker.StickerType.userContent(_:), v96);
  v71 = v114;
  v72 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  v73 = (void *)Sticker.init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:)(v70, v71, 0, 0xE000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, 0);
  v74 = v94;
  objc_msgSend(v94, "lock");
  v75 = v103;
  v103[v93] = 1;
  objc_msgSend(v74, "unlock");
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v76 = (void *)static OS_dispatch_queue.main.getter();
  v77 = (_QWORD *)swift_allocObject(&unk_10008B100, 48, 7);
  v77[2] = v75;
  v77[3] = v73;
  v77[4] = a2;
  v77[5] = a3;
  aBlock[4] = sub_100029568;
  v113 = v77;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008B118;
  v78 = _Block_copy(aBlock);
  v79 = v113;
  v80 = v75;
  v81 = v73;
  swift_retain(a3);
  v83 = swift_release(v79, v82);
  v84 = v98;
  static DispatchQoS.unspecified.getter(v83);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v85 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v86 = sub_10000A66C(&qword_10009B198);
  v87 = sub_10000D6D4();
  v88 = v101;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v86, v87, v6, v85);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v84, v88, v78);
  _Block_release(v78);

  (*(void (**)(char *, uint64_t))(v102 + 8))(v88, v6);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v84, v100);
}

void sub_10001E820(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v8)(void);
  _QWORD *v9;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  void *v19;
  char v20;
  char v21;

  v8 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x100);
  v9 = (_QWORD *)v8();
  if (!v9
    || (v10 = v9,
        v11 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x98))(),
        v10,
        v21 = v11,
        v20 = 0,
        v12 = sub_10002DDD4(),
        (dispatch thunk of static Equatable.== infix(_:_:)(&v21, &v20, &type metadata for StickerProvidingViewController.ControllerType, v12) & 1) == 0))
  {
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_10000D130(v13, (uint64_t)qword_10009E0E8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Don't have the right userGenerated VC; switching to it",
        v17,
        2u);
      swift_slowDealloc(v17, -1, -1);
    }

    *((_BYTE *)a1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType) = 0;
    sub_100018D24();
    sub_100020BE4();
  }
  v18 = (_QWORD *)v8();
  if (v18)
  {
    v19 = v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *v18) + 0x198))(a2, a3, a4);

  }
}

void sub_10001EA6C(objc_class *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  Class isa;
  uint64_t v14;
  id v15;

  isa = a1;
  if (a1)
  {
    type metadata accessor for UUID(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  if (a2)
    v14 = _convertErrorToNSError(_:)(a2);
  else
    v14 = 0;
  v15 = (id)v14;
  (*(void (**)(uint64_t, Class, double, double, double, double))(a3 + 16))(a3, isa, a4, a5, a6, a7);

}

uint64_t sub_10001EB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))((swift_isaMask & *v3) + 0x330))(a1, 0, 1, a2, a3);
}

void sub_10001EC40(objc_class *a1, uint64_t a2, uint64_t a3)
{
  Class isa;
  uint64_t v6;
  id v7;

  isa = a1;
  if (a1)
  {
    type metadata accessor for UUID(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  if (a2)
    v6 = _convertErrorToNSError(_:)(a2);
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, isa);

}

uint64_t sub_10001ECC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))((swift_isaMask & *v4) + 0x330))(a1, a2, 0, a3, a4);
}

void sub_10001EDEC(void *a1, void (*a2)(_QWORD, uint64_t), uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  unint64_t v72;
  char v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  void *v85;
  uint64_t v86;
  unint64_t v87;
  id v88;
  void *v89;
  unint64_t v90;
  unint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  void (*v114)(_QWORD, uint64_t);
  uint64_t v115;
  char *v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;

  v114 = a2;
  v115 = a3;
  v117 = a1;
  v112 = type metadata accessor for Sticker.StickerType(0);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v116 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10000A66C(&qword_10009B888);
  __chkstk_darwin(v12);
  v14 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UTType(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v124 = (char *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v123 = (char *)&v110 - v19;
  if (qword_10009E0E0 != -1)
    goto LABEL_21;
  while (1)
  {
    v20 = type metadata accessor for Logger(0);
    v21 = sub_10000D130(v20, (uint64_t)qword_10009E0E8);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "_addStickerToStoreWithUISticker:sourceRect:completion", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

    v128 = (unint64_t)&_swiftEmptyArrayStorage;
    v25 = objc_msgSend(v117, "representations");
    v26 = sub_10000D5F4(0, &qword_10009B880, _UIStickerRepresentation_ptr);
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

    if ((unint64_t)v27 >> 62)
      break;
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v28)
      goto LABEL_26;
LABEL_6:
    v29 = 0;
    v120 = (uint64_t)v14;
    v121 = v27 & 0xC000000000000001;
    v118 = v27;
    v119 = v16;
    while (1)
    {
      v30 = v121
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27)
          : *(id *)(v27 + 8 * v29 + 32);
      v31 = v30;
      if (__OFADD__(v29, 1))
        break;
      v122 = v29 + 1;
      v32 = objc_msgSend(v30, "type");
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v35 = v34;

      UTType.init(_:)(v33, v35);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        swift_bridgeObjectRelease(v27);
        swift_bridgeObjectRelease(v128);
        sub_10002E2B4((uint64_t)v14, &qword_10009B888);
        v56 = objc_msgSend(v31, "type");
        v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
        v59 = v58;

        v60 = sub_100029520();
        v61 = swift_allocError(&type metadata for StickersParentViewController.AddStickerError, v60, 0, 0);
        *v62 = v57;
        v62[1] = v59;
        v114(0, v61);
        swift_errorRelease(v61);
        goto LABEL_67;
      }
      v36 = v123;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v123, v14, v15);
      v37 = objc_msgSend(v31, "data");
      v38 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v40 = v39;

      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v124, v36, v15);
      objc_msgSend(v31, "size");
      v42 = v41;
      v44 = v43;
      v45 = objc_msgSend(v31, "role");
      if (v45)
      {
        v46 = v45;
        v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
        v49 = v48;

      }
      else
      {
        v47 = static Sticker.Representation.Role.default.getter();
        v49 = v50;
      }
      v51 = objc_allocWithZone((Class)type metadata accessor for Sticker.Representation(0));
      v52 = (id)Sticker.Representation.init(data:uti:size:role:isPreferred:)(v38, v40, v124, v47, v49, v29 == 0, v42, v44);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v54 = *(_QWORD *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v53 = *(_QWORD *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x18);
      v27 = v118;
      if (v54 >= v53 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
      v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
      specialized Array._endMutation()(v55);

      v16 = v119;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v123, v15);
      ++v29;
      v14 = (char *)v120;
      if (v122 == v28)
        goto LABEL_26;
    }
    __break(1u);
LABEL_21:
    swift_once(&qword_10009E0E0, sub_1000181F8);
  }
  if (v27 < 0)
    v63 = v27;
  else
    v63 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v27);
  v28 = _CocoaArrayWrapper.endIndex.getter(v63);
  swift_bridgeObjectRelease(v27);
  if (v28)
    goto LABEL_6;
LABEL_26:
  swift_bridgeObjectRelease(v27);
  v64 = objc_msgSend(v117, "attributionInfo");
  v65 = sub_10000A66C((uint64_t *)&unk_10009B960);
  v66 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v64, &type metadata for String, v65, &protocol witness table for String);

  if (!*(_QWORD *)(v66 + 16))
  {
    v76 = 0;
    v75 = 0;
    v71 = 0;
    goto LABEL_51;
  }
  v67 = sub_1000173C4(0x64692D6D616461, 0xE700000000000000);
  if ((v68 & 1) == 0)
  {
    v71 = 0;
    if (*(_QWORD *)(v66 + 16))
      goto LABEL_31;
    goto LABEL_42;
  }
  v69 = *(_QWORD *)(*(_QWORD *)(v66 + 56) + 8 * v67);
  v70 = objc_opt_self(NSNumber);
  v71 = (void *)swift_dynamicCastObjCClass(v69, v70);
  if (v71)
    swift_unknownObjectRetain(v69);
  if (!*(_QWORD *)(v66 + 16))
  {
LABEL_42:
    v76 = 0;
    v75 = 0;
    goto LABEL_51;
  }
LABEL_31:
  v72 = sub_1000173C4(0x692D656C646E7562, 0xE900000000000064);
  if ((v73 & 1) != 0)
  {
    v127 = *(_QWORD *)(*(_QWORD *)(v66 + 56) + 8 * v72);
    swift_unknownObjectRetain(v127);
    v74 = swift_dynamicCast(&v125, &v127, v65, &type metadata for String, 6);
    if (v74)
      v75 = v125;
    else
      v75 = 0;
    if (v74)
      v76 = v126;
    else
      v76 = 0;
    if (!*(_QWORD *)(v66 + 16))
    {
LABEL_51:
      swift_bridgeObjectRelease(v66);
      v81 = 0;
      v82 = 0;
      goto LABEL_52;
    }
  }
  else
  {
    v75 = 0;
    v76 = 0;
    if (!*(_QWORD *)(v66 + 16))
      goto LABEL_51;
  }
  v77 = sub_1000173C4(1701667182, 0xE400000000000000);
  if ((v78 & 1) == 0)
    goto LABEL_51;
  v79 = *(_QWORD *)(*(_QWORD *)(v66 + 56) + 8 * v77);
  swift_unknownObjectRetain(v79);
  swift_bridgeObjectRelease(v66);
  v127 = v79;
  v80 = swift_dynamicCast(&v125, &v127, v65, &type metadata for String, 6);
  if (v80)
    v81 = v125;
  else
    v81 = 0;
  if (v80)
    v82 = v126;
  else
    v82 = 0;
LABEL_52:
  objc_allocWithZone((Class)type metadata accessor for Sticker.AttributionInfo(0));
  v124 = v71;
  v83 = (void *)Sticker.AttributionInfo.init(adamID:bundleIdentifier:name:)(v71, v75, v76, v81, v82);
  (*(void (**)(char *, _QWORD, uint64_t))(v111 + 104))(v116, enum case for Sticker.StickerType.userContent(_:), v112);
  v123 = (char *)v128;
  v84 = objc_msgSend(v117, "name");
  if (v84)
  {
    v85 = v84;
    v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
    v121 = v87;
    v122 = v86;

  }
  else
  {
    v121 = 0xE000000000000000;
    v122 = 0;
  }
  v88 = objc_msgSend(v117, "metadata");
  if (v88)
  {
    v89 = v88;
    v120 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    v91 = v90;

  }
  else
  {
    v120 = 0;
    v91 = 0xF000000000000000;
  }
  v92 = v117;
  v93 = objc_msgSend(v117, "externalURI");
  v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
  v96 = v95;

  v97 = objc_msgSend(v92, "accessibilityLabel");
  if (v97)
  {
    v98 = v97;
    v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
    v101 = v100;

  }
  else
  {
    v99 = 0;
    v101 = 0;
  }
  v102 = objc_msgSend(v117, "searchText");
  if (v102)
  {
    v103 = v102;
    v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
    v106 = v105;

  }
  else
  {
    v104 = 0;
    v106 = 0;
  }
  type metadata accessor for Sticker(0);
  v107 = v83;
  v31 = (void *)Sticker.__allocating_init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:searchText:)(v116, v123, v122, v121, v120, v91, v94, v96, v99, v101, v83, v104, v106);
  v108 = Sticker.Effect.init(rawValue:)(objc_msgSend(v117, "effectType"));
  if ((v109 & 1) == 0)
    dispatch thunk of Sticker.effect.setter(v108);
  (*(void (**)(void *, void (*)(_QWORD, uint64_t), uint64_t, double, double, double, double))((swift_isaMask & *v113) + 0x338))(v31, v114, v115, a4, a5, a6, a7);

LABEL_67:
}

void sub_10001F7C4(uint64_t a1, uint64_t a2, int a3, void (*a4)(_QWORD, uint64_t), _BOOL8 a5, double a6, double a7, double a8, double a9)
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  void *v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  uint64_t v42;
  void (**v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  char v73;
  _QWORD *v74;
  void (*v75)(_QWORD, uint64_t);
  _BOOL8 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  unint64_t v88;

  v10 = v9;
  v81 = a3;
  v77 = a2;
  v18 = type metadata accessor for Sticker.StickerType(0);
  v78 = *(_QWORD *)(v18 - 8);
  v79 = v18;
  __chkstk_darwin(v18);
  v80 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000A66C(&qword_10009B888);
  __chkstk_darwin(v20);
  v84 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for UTType(0);
  v85 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v87 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v86 = (char *)&v74 - v25;
  if (qword_10009E0E0 != -1)
    goto LABEL_21;
  while (1)
  {
    v26 = type metadata accessor for Logger(0);
    v27 = sub_10000D130(v26, (uint64_t)qword_10009E0E8);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "_addStickerToStoreWithRepresentations:sourceRect:effect:completion", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    v88 = (unint64_t)&_swiftEmptyArrayStorage;
    if ((unint64_t)a1 >> 62)
      break;
    v31 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v31)
      goto LABEL_26;
LABEL_6:
    v74 = v10;
    v75 = a4;
    v76 = a5;
    v10 = 0;
    v82 = a1;
    v83 = a1 & 0xC000000000000001;
    a4 = (void (*)(_QWORD, uint64_t))v85;
    while (1)
    {
      v32 = v83
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a1)
          : *(id *)(a1 + 8 * (_QWORD)v10 + 32);
      v33 = v32;
      v34 = (char *)v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v35 = objc_msgSend(v32, "type");
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

      v39 = (uint64_t)v84;
      UTType.init(_:)(v36, v38);
      if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))a4 + 6))(v39, 1, v22) == 1)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(v88);
        sub_10002E2B4(v39, &qword_10009B888);
        v61 = objc_msgSend(v33, "type");
        v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
        v64 = v63;

        v65 = sub_100029520();
        v66 = swift_allocError(&type metadata for StickersParentViewController.AddStickerError, v65, 0, 0);
        *v67 = v62;
        v67[1] = v64;
        v75(0, v66);
        swift_errorRelease(v66);
        goto LABEL_31;
      }
      v40 = v86;
      (*((void (**)(char *, uint64_t, uint64_t))a4 + 4))(v86, v39, v22);
      v41 = objc_msgSend(v33, "data");
      v42 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v43 = (void (**)(char *, char *, uint64_t))a4;
      v45 = v44;

      v43[2](v87, v40, v22);
      objc_msgSend(v33, "size");
      v47 = v46;
      v49 = v48;
      v50 = objc_msgSend(v33, "role");
      if (v50)
      {
        v51 = v50;
        v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
        v54 = v53;

      }
      else
      {
        v52 = static Sticker.Representation.Role.default.getter();
        v54 = v55;
      }
      a5 = v10 == 0;
      v56 = objc_allocWithZone((Class)type metadata accessor for Sticker.Representation(0));
      v57 = (id)Sticker.Representation.init(data:uti:size:role:isPreferred:)(v42, v45, v87, v52, v54, a5, v47, v49);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v59 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v58 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v59 >= v58 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v58 > 1, v59 + 1, 1);
      v60 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v57);
      specialized Array._endMutation()(v60);

      a4 = (void (*)(_QWORD, uint64_t))v85;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v22);
      v10 = (_QWORD *)((char *)v10 + 1);
      a1 = v82;
      if (v34 == (char *)v31)
      {
        swift_bridgeObjectRelease(v82);
        a4 = v75;
        a5 = v76;
        v10 = v74;
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_21:
    swift_once(&qword_10009E0E0, sub_1000181F8);
  }
  if (a1 < 0)
    v68 = a1;
  else
    v68 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v31 = _CocoaArrayWrapper.endIndex.getter(v68);
  if (v31)
    goto LABEL_6;
LABEL_26:
  swift_bridgeObjectRelease(a1);
LABEL_27:
  v69 = v80;
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v80, enum case for Sticker.StickerType.userContent(_:), v79);
  v70 = v88;
  v71 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  v33 = (void *)Sticker.init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:)(v69, v70, 0, 0xE000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, 0);
  if ((v81 & 1) == 0)
  {
    v72 = Sticker.Effect.init(rawValue:)(v77);
    if ((v73 & 1) == 0)
      dispatch thunk of Sticker.effect.setter(v72);
  }
  (*(void (**)(void *, void (*)(_QWORD, uint64_t), _BOOL8, double, double, double, double))((swift_isaMask & *v10) + 0x338))(v33, a4, a5, a6, a7, a8, a9);
LABEL_31:

}

uint64_t sub_10001FD94(void *a1, void (*a2)(_QWORD, uint64_t), uint64_t a3, double a4, double a5, double a6, double a7)
{
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  _BYTE *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, uint64_t);
  _QWORD aBlock[5];
  uint64_t v46;

  v8 = v7;
  v44 = a2;
  v40 = a1;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v17 - 8);
  v42 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void **)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingStickerMu];
  objc_msgSend(v20, "lock");
  v21 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingSticker;
  v22 = v8[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingSticker];
  objc_msgSend(v20, "unlock");
  if ((v22 & 1) != 0)
  {
    v23 = sub_100029520();
    v24 = swift_allocError(&type metadata for StickersParentViewController.AddStickerError, v23, 0, 0);
    *v25 = 0;
    v25[1] = 0;
    v44(0, v24);
    return swift_errorRelease(v24);
  }
  else
  {
    objc_msgSend(v20, "lock");
    v8[v21] = 1;
    objc_msgSend(v20, "unlock");
    sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
    v27 = (void *)static OS_dispatch_queue.main.getter();
    v28 = swift_allocObject(&unk_10008B150, 80, 7);
    v29 = v40;
    *(_QWORD *)(v28 + 16) = v8;
    *(_QWORD *)(v28 + 24) = v29;
    *(double *)(v28 + 32) = a4;
    *(double *)(v28 + 40) = a5;
    *(double *)(v28 + 48) = a6;
    *(double *)(v28 + 56) = a7;
    *(_QWORD *)(v28 + 64) = v44;
    *(_QWORD *)(v28 + 72) = a3;
    aBlock[4] = sub_1000295A8;
    v46 = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000C1B4;
    aBlock[3] = &unk_10008B168;
    v30 = _Block_copy(aBlock);
    v31 = v46;
    v32 = v8;
    v33 = v29;
    swift_retain(a3);
    v35 = swift_release(v31, v34);
    static DispatchQoS.unspecified.getter(v35);
    aBlock[0] = &_swiftEmptyArrayStorage;
    v36 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v37 = sub_10000A66C(&qword_10009B198);
    v38 = sub_10000D6D4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v37, v38, v14, v36);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v19, v16, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v19, v42);
  }
}

uint64_t sub_100020098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter();
  v11 = swift_allocObject(&unk_10008B060, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  aBlock[4] = sub_100029810;
  v20 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008B190;
  v12 = _Block_copy(aBlock);
  v14 = swift_release(v20, v13);
  static DispatchQoS.unspecified.getter(v14);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v15 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_10000A66C(&qword_10009B198);
  v17 = sub_10000D6D4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v16, v17, v2, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000202C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))((swift_isaMask & *v3) + 0x348))(a1, 0, a2, a3);
}

uint64_t sub_1000202EC(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v5 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter();
  v17 = swift_allocObject(&unk_10008B1C8, 56, 7);
  *(_QWORD *)(v17 + 16) = v4;
  *(_QWORD *)(v17 + 24) = a1;
  *(_BYTE *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = a3;
  *(_QWORD *)(v17 + 48) = a4;
  aBlock[4] = sub_1000299FC;
  v33 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008B1E0;
  v18 = _Block_copy(aBlock);
  v19 = v33;
  v20 = v5;
  v21 = a1;
  swift_retain(a4);
  v23 = swift_release(v19, v22);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v24 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_10000A66C(&qword_10009B198);
  v26 = sub_10000D6D4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v10, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v30);
}

uint64_t sub_100020508(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = (_QWORD *)swift_allocObject(&unk_10008B218, 40, 7);
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_100029AD4;
  v26 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008B230;
  v14 = _Block_copy(aBlock);
  v15 = v26;
  v16 = v3;
  swift_retain(a2);
  v18 = swift_release(v15, v17);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v19 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_10000A66C(&qword_10009B198);
  v21 = sub_10000D6D4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v23);
}

uint64_t sub_100020784()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter();
  v11 = swift_allocObject(&unk_10008B268, 32, 7);
  *(_QWORD *)(v11 + 16) = v0;
  *(_QWORD *)(v11 + 24) = ObjectType;
  aBlock[4] = sub_100029C44;
  v24 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008B280;
  v12 = _Block_copy(aBlock);
  v13 = v24;
  v14 = v1;
  v16 = swift_release(v13, v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v17 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_10000A66C(&qword_10009B198);
  v19 = sub_10000D6D4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v3, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000209C0()
{
  return 0x4972656B63697473;
}

uint64_t sub_1000209DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__VKStickerInfoKeyStickerIDs);
  swift_bridgeObjectRetain(*(_QWORD *)(v0
                                     + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__VKStickerInfoKeyStickerIDs
                                     + 8));
  return v1;
}

void sub_100020A14(uint64_t a1, double a2)
{
  _QWORD *v2;
  _QWORD *v5;
  void *v6;
  void *v7;
  id v8;

  v5 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x100))();
  if (v5)
  {
    v6 = v5;
    v7 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x118))();

    if (v7)
    {
      v8 = v7;
      dispatch thunk of StickerCollectionViewController.updateStickerViewWithProgress(_:progress:)(a1, a2);

    }
  }
}

void sub_100020BE4()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23[3];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *((char *)&v1->isa + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType);
  if (v6 != 7)
  {
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v10 = sub_10000D130(v2, (uint64_t)qword_10009E0E8);
    v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(12, -1);
      v21 = v1;
      v15 = (uint8_t *)v14;
      v16 = swift_slowAlloc(32, -1);
      v20 = v16;
      *(_DWORD *)v15 = 136315138;
      v17 = *(_QWORD *)&aUsercontrecent[8 * v6];
      v23[0] = v16;
      v18 = *(_QWORD *)&aThirdparphotos[8 * v6 + 16];
      v22 = sub_10000C99C(v17, v18, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v15 + 4, v15 + 12);
      swift_bridgeObjectRelease(v18);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Preparing %s VC", v15, 0xCu);
      v19 = v20;
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    __asm { BR              X10 }
  }
  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v7 = sub_10000D130(v2, (uint64_t)qword_10009E0E8);
  v21 = Logger.logObject.getter(v7);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v8, "Missing controller type - nothing to prepare", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

}

void sub_100020F30()
{
  uint64_t (*v1)(void);
  id v2;
  _BYTE v3[24];

  swift_beginAccess(&qword_10009FCF0, v3, 0, 0);
  if (qword_10009FCF0)
  {
    v1 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)qword_10009FCF0) + 0xA8);
    v2 = (id)qword_10009FCF0;
    if (v1())
      __asm { BR              X10 }

  }
}

void sub_100021150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v2 = v1;
  v4 = sub_1000212B0();
  v20 = a1;
  v19 = 5;
  v5 = sub_10002D7D0();
  dispatch thunk of RawRepresentable.rawValue.getter(&v17, &type metadata for StickerProvidingViewController.ControllerType, v5);
  dispatch thunk of RawRepresentable.rawValue.getter(&v15, &type metadata for StickerProvidingViewController.ControllerType, v5);
  v6 = v18;
  v7 = v16;
  if (v17 == v15 && v18 == v16)
  {
    swift_bridgeObjectRelease_n(v18, 2, v15);
    goto LABEL_8;
  }
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v15, v16, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  if ((v9 & 1) != 0)
  {
LABEL_8:
    v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier);
    v11 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier
                    + 8);
    v14 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v4) + 0x130);
    swift_bridgeObjectRetain(v11);
    v14(v13, v11);
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_puppetIdentifier);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_puppetIdentifier + 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *v4) + 0x128);
  swift_bridgeObjectRetain(v11);
  v12(a1, v10, v11);
LABEL_9:
  swift_bridgeObjectRelease(v11);

}

_QWORD *sub_1000212B0()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD *result;
  void *v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(_QWORD *);
  _QWORD *v21;

  v1 = v0;
  v2 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x100))();
  if (v2)
  {
    v3 = v2;
    v4 = v2;
    v5 = objc_msgSend(v4, "parentViewController");
    if (!v5)
      goto LABEL_6;
    v6 = v5;
    v7 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController;
    v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController);
    sub_10000D5F4(0, &qword_10009C9C0, UIViewController_ptr);
    v9 = v8;
    v10 = v6;
    LOBYTE(v6) = static NSObject.== infix(_:_:)();

    if ((v6 & 1) == 0)
      goto LABEL_6;
    result = objc_msgSend(*(id *)((char *)v1 + v7), "view");
    if (result)
    {
      v12 = result;
      v13 = objc_msgSend(v4, "view");
      v14 = objc_msgSend(v12, "containsView:", v13);

      if (v14)
      {
LABEL_7:

        return v4;
      }
LABEL_6:
      v4 = v4;
      sub_100029DE4(v3);

      sub_1000215D4(v4);
      goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v15 = type metadata accessor for StickerProvidingViewController();
    v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v15)), "init");
    v17 = *(void (**)(uint64_t))((swift_isaMask & *v16) + 0x88);
    v18 = swift_unknownObjectRetain(v0);
    v17(v18);
    v19 = v16;
    sub_100021490(v16);

    v20 = *(void (**)(_QWORD *))((swift_isaMask & *v0) + 0x108);
    v21 = v19;
    v20(v16);
    return v21;
  }
  return result;
}

id sub_100021490(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id result;
  void *v12;
  id v13;
  unsigned __int8 v14;
  id v15;

  if (!a1)
    return (id)(a1 != 0);
  v3 = v1;
  v4 = a1;
  v5 = objc_msgSend(v4, "parentViewController");
  if (!v5)
    goto LABEL_6;
  v6 = v5;
  v7 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController;
  v8 = *(void **)(v3 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController);
  sub_10000D5F4(0, &qword_10009C9C0, UIViewController_ptr);
  v9 = v8;
  v10 = v6;
  LOBYTE(v6) = static NSObject.== infix(_:_:)();

  if ((v6 & 1) == 0)
    goto LABEL_6;
  result = objc_msgSend(*(id *)(v3 + v7), "view");
  if (result)
  {
    v12 = result;
    v13 = objc_msgSend(v4, "view");
    v14 = objc_msgSend(v12, "containsView:", v13);

    if ((v14 & 1) != 0)
    {
LABEL_7:

      return (id)(a1 != 0);
    }
LABEL_6:
    v15 = v4;
    sub_100029DE4(a1);

    sub_1000215D4(v15);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000215D4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  Class isa;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Class v59;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;

  v2 = v1;
  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v4 = type metadata accessor for Logger(0);
  sub_10000D130(v4, (uint64_t)qword_10009E0E8);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  v62 = v5;
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v64 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = objc_msgSend(v5, "debugDescription");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v63 = sub_10000C99C(v11, v13, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Adding child controller %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v14 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController;
  objc_msgSend(*(id *)((char *)v2 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController), "addChildViewController:", v5);
  v15 = objc_msgSend(*(id *)((char *)v2 + v14), "view");
  if (!v15)
  {
    __break(1u);
    goto LABEL_22;
  }
  v16 = v15;
  v17 = objc_msgSend(v5, "view");
  if (!v17)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = v17;
  objc_msgSend(v16, "addSubview:", v17);

  v19 = objc_msgSend(v5, "view");
  if (!v19)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v20 = v19;
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v21 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
  v22 = swift_allocObject(v21, 56, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100077F80;
  v23 = objc_msgSend(v5, "view");
  if (!v23)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "leadingAnchor");

  v26 = objc_msgSend(*(id *)((char *)v2 + v14), "view");
  if (!v26)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "safeAreaLayoutGuide");

  v29 = objc_msgSend(v28, "leadingAnchor");
  v30 = objc_msgSend(v25, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v22 + 32) = v30;
  v31 = objc_msgSend(v5, "view");
  if (!v31)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v32 = v31;
  v33 = objc_msgSend(v31, "trailingAnchor");

  v34 = objc_msgSend(*(id *)((char *)v2 + v14), "view");
  if (!v34)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, "safeAreaLayoutGuide");

  v37 = objc_msgSend(v36, "trailingAnchor");
  v38 = objc_msgSend(v33, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v22 + 40) = v38;
  v39 = objc_msgSend(v5, "view");
  if (!v39)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v40 = v39;
  v61 = v21;
  v41 = objc_msgSend(v39, "bottomAnchor");

  v42 = objc_msgSend(*(id *)((char *)v2 + v14), "view");
  if (!v42)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v43 = v42;
  v44 = (void *)objc_opt_self(NSLayoutConstraint);
  v45 = objc_msgSend(v43, "bottomAnchor");

  v46 = objc_msgSend(v41, "constraintEqualToAnchor:", v45);
  *(_QWORD *)(v22 + 48) = v46;
  v64 = v22;
  specialized Array._endMutation()();
  v47 = v64;
  sub_10000D5F4(0, (unint64_t *)&qword_10009B0D0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v47);
  objc_msgSend(v44, "activateConstraints:", isa);

  if (((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x230))() & 1) == 0)
    __asm { BR              X10 }
  v49 = objc_msgSend(v62, "view");
  if (!v49)
    goto LABEL_30;
  v50 = v49;
  v51 = objc_msgSend(v49, "topAnchor");

  v52 = sub_100019554();
  v53 = objc_msgSend(v52, "view");

  if (!v53)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v54 = objc_msgSend(v53, "bottomAnchor");

  v55 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v54, 8.0);
  (*(void (**)(id))((swift_isaMask & *v2) + 0x258))(v55);
  v56 = swift_allocObject(v61, 40, 7);
  *(_OWORD *)(v56 + 16) = xmmword_100077FA0;
  v57 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x250))();
  if (!v57)
  {
LABEL_32:
    __break(1u);
    JUMPOUT(0x100021F58);
  }
  *(_QWORD *)(v56 + 32) = v57;
  v64 = v56;
  specialized Array._endMutation()();
  v58 = v64;
  v59 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v58);
  objc_msgSend(v44, "activateConstraints:", v59);

  objc_msgSend(v62, "didMoveToParentViewController:", *(_QWORD *)((char *)v2 + v14));
  return 1;
}

_QWORD *sub_100021F88()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  id v4;
  _QWORD *v5;
  void (*v6)(uint64_t, _UNKNOWN **);
  uint64_t v7;
  _BYTE v9[24];

  v1 = v0;
  swift_beginAccess(&qword_10009FCD0, v9, 0, 0);
  v2 = qword_10009FCD0;
  if (qword_10009FCD0)
  {
    v3 = *(void (**)(uint64_t))((swift_isaMask & *v1) + 0x108);
    v4 = (id)qword_10009FCD0;
    v3(v2);

  }
  type metadata accessor for StickerPhotosController(0);
  v5 = sub_10000A294();
  v6 = *(void (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *v5) + 0x80);
  v7 = swift_unknownObjectRetain(v1);
  v6(v7, &off_10008B4B0);
  return v5;
}

void sub_100022050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  unint64_t v76;
  os_log_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  os_log_t v83;
  unint64_t v84;
  void (*v85)(char *);
  uint64_t v86;
  uint64_t *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[3];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE v100[16];
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[3];
  uint64_t aBlock;
  uint64_t v105;
  void *v106;
  void *v107;
  void *v108;
  uint64_t v109;
  char v110[32];
  Swift::String v111;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v79 - v6;
  v8 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType) == 7)
  {
    swift_beginAccess(&byte_10009B760, v110, 1, 0);
    if (byte_10009B760 != 7)
    {
      *(_BYTE *)(v0 + v8) = byte_10009B760;
      sub_100018D24();
      byte_10009B760 = 7;
      return;
    }
    v93 = v5;
    v94 = v8;
    v95 = v0;
    v9 = objc_allocWithZone((Class)NSXPCConnection);
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v9, "initWithMachServiceName:options:", v10, 0);

    v12 = (void *)static LaunchStateManagerAPI.xpcInterface.getter();
    objc_msgSend(v11, "setRemoteObjectInterface:", v12);

    objc_msgSend(v11, "resume");
    v13 = swift_allocObject(&unk_10008B2B8, 24, 7);
    *(_QWORD *)(v13 + 16) = 0;
    v14 = (uint64_t *)(v13 + 16);
    v108 = sub_10002A578;
    v109 = v13;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v105 = 1107296256;
    v106 = sub_1000232C0;
    v107 = &unk_10008BCC8;
    v15 = _Block_copy(&aBlock);
    v16 = v109;
    swift_retain(v13);
    swift_release(v16, v17);
    v18 = objc_msgSend(v11, "synchronousRemoteObjectProxyWithErrorHandler:", v15);
    _Block_release(v15);
    _bridgeAnyObjectToAny(_:)(&aBlock, v18);
    swift_unknownObjectRelease(v18);
    v19 = sub_10000A66C(&qword_10009B970);
    if (!swift_dynamicCast(v103, &aBlock, (char *)&type metadata for Any + 8, v19, 6))
    {
      if (qword_10009E0E0 != -1)
        swift_once(&qword_10009E0E0, sub_1000181F8);
      v33 = sub_10000D130(v1, (uint64_t)qword_10009E0E8);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v34, v35))
      {
        v37 = v13;
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Could not find a valid launch state manager proxy", v38, 2u);
        v39 = v38;
        v13 = v37;
        swift_slowDealloc(v39, -1, -1);
      }
      swift_release(v13, v36);

      goto LABEL_25;
    }
    v20 = (void *)v103[0];
    swift_beginAccess(v14, v103, 0, 0);
    v21 = *v14;
    if (v21)
    {
      swift_errorRetain(v21);
      if (qword_10009E0E0 != -1)
        swift_once(&qword_10009E0E0, sub_1000181F8);
      sub_10000D130(v1, (uint64_t)qword_10009E0E8);
      swift_errorRetain(v21);
      v22 = swift_errorRetain(v21);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v23, v24))
      {
        swift_errorRelease(v21);
        swift_errorRelease(v21);
        swift_errorRelease(v21);
        swift_release(v13, v61);

        swift_unknownObjectRelease(v20);
LABEL_25:
        objc_msgSend(v11, "invalidate");

        return;
      }
      v25 = swift_slowAlloc(12, -1);
      v92 = v20;
      v26 = (uint8_t *)v25;
      v27 = swift_slowAlloc(32, -1);
      aBlock = v27;
      *(_DWORD *)v26 = 136315138;
      v91 = v13;
      swift_getErrorValue(v21, &v97, v96);
      v28 = Error.localizedDescription.getter(v96[1], v96[2]);
      v30 = v29;
      v101 = sub_10000C99C(v28, v29, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v26 + 4, v26 + 12);
      swift_bridgeObjectRelease(v30);
      swift_errorRelease(v21);
      swift_errorRelease(v21);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Could not connect to launch state manager proxy %s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      swift_unknownObjectRelease(v92);
      swift_errorRelease(v21);
      v32 = v91;
    }
    else
    {
      v88 = v11;
      v91 = v13;
      v40 = swift_allocObject(&unk_10008BD00, 32, 7);
      *(_QWORD *)(v40 + 16) = 0;
      *(_QWORD *)(v40 + 24) = 0;
      v41 = swift_allocObject(&unk_10008BD00, 32, 7);
      *(_QWORD *)(v41 + 16) = 0;
      v87 = (uint64_t *)(v41 + 16);
      *(_QWORD *)(v41 + 24) = 0;
      v42 = swift_allocObject(&unk_10008BD28, 32, 7);
      *(_QWORD *)(v42 + 16) = v40;
      *(_QWORD *)(v42 + 24) = v41;
      v108 = sub_10002DED4;
      v109 = v42;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v105 = 1107296256;
      v106 = sub_100023310;
      v107 = &unk_10008BD40;
      v43 = _Block_copy(&aBlock);
      v44 = v109;
      swift_retain(v40);
      v89 = v41;
      swift_retain(v41);
      swift_release(v44, v45);
      v92 = v20;
      objc_msgSend(v20, "launchConfigurationWithReply:", v43);
      _Block_release(v43);
      swift_beginAccess(v40 + 16, &v101, 0, 0);
      v90 = v40;
      v46 = *(void **)(v40 + 24);
      if (v46)
      {
        v47 = *(_QWORD *)(v40 + 16);
        swift_bridgeObjectRetain(*(_QWORD *)(v40 + 24));
        v111._countAndFlagsBits = v47;
        v111._object = v46;
        v48 = sub_100029294(v111);
        if (v48 != 7)
        {
          v65 = v48;
          if (qword_10009E0E0 != -1)
            swift_once(&qword_10009E0E0, sub_1000181F8);
          v66 = sub_10000D130(v1, (uint64_t)qword_10009E0E8);
          v85 = *(void (**)(char *))(v2 + 16);
          v86 = v66;
          v85(v7);
          v67 = v89;
          v68 = swift_retain_n(v89, 2);
          v69 = Logger.logObject.getter(v68);
          v70 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v69, (os_log_type_t)v70))
          {
            v82 = v70;
            v83 = v69;
            v71 = swift_slowAlloc(22, -1);
            v81 = swift_slowAlloc(64, -1);
            aBlock = v81;
            v84 = v65;
            v72 = 8 * (char)v65;
            v73 = *(_QWORD *)&aUsercontrecent[v72];
            *(_DWORD *)v71 = 136315394;
            v74 = *(_QWORD *)&aThirdparphotos[v72 + 16];
            v99 = sub_10000C99C(v73, v74, &aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100, v71 + 4, v71 + 12);
            swift_bridgeObjectRelease(v74);
            *(_WORD *)(v71 + 12) = 2080;
            v75 = v87;
            swift_beginAccess(v87, &v98, 0, 0);
            v76 = *(_QWORD *)(v67 + 24);
            if (v76)
            {
              v80 = *v75;
              v65 = v76;
            }
            else
            {
              v65 = 0xED00007265696669;
              v80 = 0x746E656469206F6ELL;
            }
            swift_bridgeObjectRetain(v76);
            v99 = sub_10000C99C(v80, v65, &aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100, v71 + 14, v71 + 22);
            swift_release_n(v67, 2);
            swift_bridgeObjectRelease(v65);
            v77 = v83;
            _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v82, "Preparing to launch to %s with %s", (uint8_t *)v71, 0x16u);
            v78 = v81;
            swift_arrayDestroy(v81, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v78, -1, -1);
            swift_slowDealloc(v71, -1, -1);

            (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
            LOBYTE(v65) = v84;
          }
          else
          {

            swift_release_n(v67, 2);
            (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
          }
          __asm { BR              X10 }
        }
      }
      if (qword_10009E0E0 != -1)
        swift_once(&qword_10009E0E0, sub_1000181F8);
      sub_10000D130(v1, (uint64_t)qword_10009E0E8);
      v49 = v90;
      v50 = swift_retain_n(v90, 2);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.info.getter();
      v53 = os_log_type_enabled(v51, v52);
      v11 = v88;
      if (v53)
      {
        v54 = (uint8_t *)swift_slowAlloc(12, -1);
        v55 = swift_slowAlloc(32, -1);
        *(_DWORD *)v54 = 136315138;
        v99 = v55;
        v56 = *(_QWORD *)(v90 + 24);
        aBlock = *(_QWORD *)(v90 + 16);
        v105 = v56;
        swift_bridgeObjectRetain(v56);
        v57 = sub_10000A66C(&qword_10009BB20);
        v58 = String.init<A>(describing:)(&aBlock, v57);
        v60 = v59;
        aBlock = sub_10000C99C(v58, v59, &v99);
        v49 = v90;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v105, v54 + 4, v54 + 12);
        swift_release_n(v49, 2);
        swift_bridgeObjectRelease(v60);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "Was not able to parse the launch destination. %s", v54, 0xCu);
        swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v55, -1, -1);
        swift_slowDealloc(v54, -1, -1);

      }
      else
      {

        swift_release_n(v49, 2);
      }
      v62 = v91;
      *(_BYTE *)(v95 + v94) = 1;
      sub_100018D24();
      swift_release(v62, v63);
      swift_unknownObjectRelease(v92);
      swift_release(v49, v64);
      v32 = v89;
    }
    swift_release(v32, v31);
    goto LABEL_25;
  }
}

void sub_1000232C0(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v6 = a2;
  v4();
  swift_release(v3, v5);

}

uint64_t sub_100023310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;
  if (a3)
  {
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    a3 = v10;
  }
  else
  {
    v9 = 0;
  }
  swift_retain(v4);
  v5(v6, v8, v9, a3);
  swift_release(v4, v11);
  swift_bridgeObjectRelease(v8);
  return swift_bridgeObjectRelease(a3);
}

_QWORD *sub_10002339C(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *result;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[5];
  uint64_t v43;
  _BYTE v44[24];

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v44, 0, 0);
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v16 = result;
    v17 = (*(uint64_t (**)(uint64_t, unint64_t))((swift_isaMask & *result) + 0x3A0))(a3, a4);
    v38 = v12;
    v39 = v9;
    if ((v17 & 1) != 0)
    {
      swift_bridgeObjectRetain(a4);
    }
    else
    {
      if (qword_10009E0E0 != -1)
        swift_once(&qword_10009E0E0, sub_1000181F8);
      v18 = type metadata accessor for Logger(0);
      sub_10000D130(v18, (uint64_t)qword_10009E0E8);
      v19 = swift_bridgeObjectRetain_n(a4, 2);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(12, -1);
        v37 = swift_slowAlloc(32, -1);
        aBlock[0] = v37;
        *(_DWORD *)v22 = 136315138;
        v36 = v22 + 4;
        swift_bridgeObjectRetain(a4);
        v41 = sub_10000C99C(a3, a4, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, aBlock, v36, v22 + 12);
        swift_bridgeObjectRelease_n(a4, 3, v23);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Got notified that apps have loaded, but didn't have the one we are looking for. Will launch to recents instead. (%s)", v22, 0xCu);
        a2 = 1;
        v24 = v37;
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v24, -1, -1);
        swift_slowDealloc(v22, -1, -1);

        a3 = 0;
        a4 = 0;
      }
      else
      {

        swift_bridgeObjectRelease_n(a4, 2, v25);
        a3 = 0;
        a4 = 0;
        a2 = 1;
      }
    }
    sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
    v26 = (void *)static OS_dispatch_queue.main.getter();
    v27 = swift_allocObject(&unk_10008B060, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16, v16);
    v28 = swift_allocObject(&unk_10008BE90, 48, 7);
    *(_QWORD *)(v28 + 16) = v27;
    *(_BYTE *)(v28 + 24) = a2;
    *(_QWORD *)(v28 + 32) = a3;
    *(_QWORD *)(v28 + 40) = a4;
    aBlock[4] = (uint64_t)sub_10002E054;
    v43 = v28;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10000C1B4;
    aBlock[3] = (uint64_t)&unk_10008BEA8;
    v29 = _Block_copy(aBlock);
    v31 = swift_release(v43, v30);
    static DispatchQoS.unspecified.getter(v31);
    aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
    v32 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v33 = sub_10000A66C(&qword_10009B198);
    v34 = sub_10000D6D4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v33, v34, v8, v32);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v8);
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v14, v38);
  }
  return result;
}

uint64_t sub_1000237AC(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  if (a2)
  {
    v4 = objc_msgSend((id)objc_opt_self(CKBalloonPluginManager), "sharedInstance");
    v5 = objc_msgSend(v4, "orderedCombinedStickerApps");

    v6 = sub_10000D5F4(0, (unint64_t *)&unk_10009CA70, IMBalloonPlugin_ptr);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    swift_bridgeObjectRetain(a2);
    v8 = sub_10002A3BC(v7, a1, a2);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

void sub_100023890(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSString v10;
  id v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void **v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  _BOOL4 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  void **v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  NSString v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  void **v62;
  NSObject *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  _QWORD v67[3];
  char v68[8];
  uint64_t v69;
  _QWORD v70[3];
  void **aBlock;
  uint64_t v72;
  void (*v73)(uint64_t, void *);
  void *v74;
  void *v75;
  uint64_t v76;

  v66 = a1;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_allocWithZone((Class)NSXPCConnection);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "initWithMachServiceName:options:", v10, 0);

  v12 = (void *)static LaunchStateManagerAPI.xpcInterface.getter();
  objc_msgSend(v11, "setRemoteObjectInterface:", v12);

  objc_msgSend(v11, "resume");
  v13 = swift_allocObject(&unk_10008B2B8, 24, 7);
  *(_QWORD *)(v13 + 16) = 0;
  v14 = (_QWORD *)(v13 + 16);
  v75 = sub_10002A578;
  v76 = v13;
  aBlock = _NSConcreteStackBlock;
  v72 = 1107296256;
  v73 = sub_1000232C0;
  v74 = &unk_10008B2D0;
  v15 = _Block_copy(&aBlock);
  v16 = v76;
  swift_retain(v13);
  swift_release(v16, v17);
  v18 = objc_msgSend(v11, "synchronousRemoteObjectProxyWithErrorHandler:", v15);
  _Block_release(v15);
  _bridgeAnyObjectToAny(_:)(&aBlock, v18);
  swift_unknownObjectRelease(v18);
  v19 = sub_10000A66C(&qword_10009B970);
  if (swift_dynamicCast(v70, &aBlock, (char *)&type metadata for Any + 8, v19, 6))
  {
    v65 = (id)v70[0];
    swift_beginAccess(v14, v70, 0, 0);
    v20 = *v14;
    if (*v14)
    {
      swift_errorRetain(*v14);
      if (qword_10009E0E0 != -1)
        swift_once(&qword_10009E0E0, sub_1000181F8);
      sub_10000D130(v5, (uint64_t)qword_10009E0E8);
      swift_errorRetain(v20);
      v21 = swift_errorRetain(v20);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc(12, -1);
        v25 = (void **)swift_slowAlloc(32, -1);
        aBlock = v25;
        *(_DWORD *)v24 = 136315138;
        swift_getErrorValue(v20, v68, v67);
        v26 = Error.localizedDescription.getter(v67[1], v67[2]);
        v28 = v27;
        v69 = sub_10000C99C(v26, v27, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v24 + 4, v24 + 12);
        swift_bridgeObjectRelease(v28);
        swift_errorRelease(v20);
        swift_errorRelease(v20);
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Could not connect to launch state manager proxy %s", v24, 0xCu);
        swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v25, -1, -1);
        swift_slowDealloc(v24, -1, -1);

        swift_unknownObjectRelease(v65);
        swift_errorRelease(v20);
        swift_release(v13, v29);
      }
      else
      {
        swift_errorRelease(v20);
        swift_errorRelease(v20);
        swift_errorRelease(v20);
        swift_release(v13, v52);

        swift_unknownObjectRelease(v65);
      }
    }
    else
    {
      if (qword_10009E0E0 != -1)
        swift_once(&qword_10009E0E0, sub_1000181F8);
      v64 = a2;
      v35 = sub_10000D130(v5, (uint64_t)qword_10009E0E8);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v35, v5);
      v36 = swift_bridgeObjectRetain_n(a3, 2);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.debug.getter();
      v39 = v38;
      v63 = v37;
      v40 = os_log_type_enabled(v37, v38);
      v41 = v66;
      if (v40)
      {
        v42 = swift_slowAlloc(22, -1);
        v62 = (void **)swift_slowAlloc(64, -1);
        aBlock = v62;
        *(_DWORD *)v42 = 136315394;
        v43 = 8 * v41;
        v44 = *(_QWORD *)&aUsercontrecent[v43];
        v45 = *(_QWORD *)&aThirdparphotos[v43 + 16];
        v61 = v39;
        v69 = sub_10000C99C(v44, v45, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v42 + 4, v42 + 12);
        swift_bridgeObjectRelease(v45);
        *(_WORD *)(v42 + 12) = 2080;
        if (a3)
          v46 = v64;
        else
          v46 = 0x746E656469206F6ELL;
        if (a3)
          v47 = a3;
        else
          v47 = 0xED00007265696669;
        v60 = v42 + 14;
        swift_bridgeObjectRetain(a3);
        v69 = sub_10000C99C(v46, v47, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v60, v42 + 22);
        swift_bridgeObjectRelease_n(a3, 2, v48);
        swift_bridgeObjectRelease(v47);
        v49 = v63;
        _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v61, "Will save launch config of %s with %s", (uint8_t *)v42, 0x16u);
        v50 = v62;
        swift_arrayDestroy(v62, 2, (char *)&type metadata for Any + 8);
        v51 = v50;
        v41 = v66;
        swift_slowDealloc(v51, -1, -1);
        swift_slowDealloc(v42, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a3, 2, v53);
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v54 = *(_QWORD *)&aThirdparphotos[8 * v41 + 16];
      v55 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v54);
      if (a3)
        v56 = String._bridgeToObjectiveC()();
      else
        v56 = 0;
      v75 = sub_10002402C;
      v76 = 0;
      aBlock = _NSConcreteStackBlock;
      v72 = 1107296256;
      v73 = sub_10001021C;
      v74 = &unk_10008B2F8;
      v57 = _Block_copy(&aBlock);
      v58 = v65;
      objc_msgSend(v65, "updateCurrentConfigurationWithSection:identifier:withReply:", v55, v56, v57);
      _Block_release(v57);
      swift_release(v13, v59);
      swift_unknownObjectRelease(v58);

    }
  }
  else
  {
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v30 = sub_10000D130(v5, (uint64_t)qword_10009E0E8);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Could not find a valid launch state manager proxy", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }
    swift_release(v13, v33);

  }
  objc_msgSend(v11, "invalidate");

}

void sub_10002402C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSObject *oslog;
  uint64_t v11;
  _QWORD v12[3];
  _BYTE v13[8];
  uint64_t v14;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v2 = type metadata accessor for Logger(0);
    sub_10000D130(v2, (uint64_t)qword_10009E0E8);
    swift_errorRetain(a1);
    v3 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(12, -1);
      v6 = swift_slowAlloc(32, -1);
      v14 = v6;
      *(_DWORD *)v5 = 136315138;
      swift_getErrorValue(a1, v13, v12);
      v7 = Error.localizedDescription.getter(v12[1], v12[2]);
      v9 = v8;
      v11 = sub_10000C99C(v7, v8, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12, v5 + 4, v5 + 12);
      swift_bridgeObjectRelease(v9);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Could not save current stickers state. %s", v5, 0xCu);
      swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v6, -1, -1);
      swift_slowDealloc(v5, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
}

id sub_10002421C(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  NSString v17;
  id v18;
  objc_super v20;

  *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerProvidingViewController] = 0;
  v6 = &v3[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_photoPickerDidDismissClosure];
  *v6 = 0;
  v6[1] = 0;
  v3[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType] = 7;
  v7 = &v3[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v3[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_puppetIdentifier];
  *v8 = 0;
  v8[1] = 0;
  v9 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerStripViewModel;
  type metadata accessor for StickerPackStripViewModel(0);
  v10 = v3;
  *(_QWORD *)&v3[v9] = sub_100038EC0();
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_MSMessagesAppPresentationStyleModal] = 3;
  v11 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingStickerMu;
  *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
  v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingSticker] = 0;
  v12 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_rootNavigationController;
  *(_QWORD *)&v10[v12] = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_visualEffectViewBackground] = 0;
  v13 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController;
  *(_QWORD *)&v10[v13] = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerCollectionViewControllerPresentedViewController] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripHostHeightConstraint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_contentControllerTopAnchorConstraint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripTopConstraint] = 0;
  v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_presentedFromMessages] = 1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStripHost] = 0;
  v14 = &v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStrip];
  v15 = type metadata accessor for StickerPackStrip(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_imageAnalysisInteraction] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_traitRegistration] = 0;
  v16 = &v10[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__VKStickerInfoKeyStickerIDs];
  *v16 = 0x4972656B63697473;
  v16[1] = 0xEA00000000007344;

  if (a2)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v17 = 0;
  }
  v20.receiver = v10;
  v20.super_class = (Class)type metadata accessor for StickersParentViewController(0);
  v18 = objc_msgSendSuper2(&v20, "initWithNibName:bundle:", v17, a3);

  return v18;
}

id sub_1000244D4(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  objc_super v16;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerProvidingViewController] = 0;
  v3 = &v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_photoPickerDidDismissClosure];
  *v3 = 0;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType] = 7;
  v4 = &v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_puppetIdentifier];
  *v5 = 0;
  v5[1] = 0;
  v6 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerStripViewModel;
  type metadata accessor for StickerPackStripViewModel(0);
  v7 = v1;
  *(_QWORD *)&v1[v6] = sub_100038EC0();
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_MSMessagesAppPresentationStyleModal] = 3;
  v8 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingStickerMu;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
  v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingSticker] = 0;
  v9 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_rootNavigationController;
  *(_QWORD *)&v7[v9] = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_visualEffectViewBackground] = 0;
  v10 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController;
  *(_QWORD *)&v7[v10] = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerCollectionViewControllerPresentedViewController] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripHostHeightConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_contentControllerTopAnchorConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripTopConstraint] = 0;
  v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_presentedFromMessages] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStripHost] = 0;
  v11 = &v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStrip];
  v12 = type metadata accessor for StickerPackStrip(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_imageAnalysisInteraction] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_traitRegistration] = 0;
  v13 = &v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__VKStickerInfoKeyStickerIDs];
  *v13 = 0x4972656B63697473;
  v13[1] = 0xEA00000000007344;

  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for StickersParentViewController(0);
  v14 = objc_msgSendSuper2(&v16, "initWithCoder:", a1);

  return v14;
}

id sub_100024718(char a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), "initWithShouldBeSheetPresentationControllerDelegate:", a1 & 1);
}

id sub_100024748(char a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  objc_super v15;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerProvidingViewController] = 0;
  v3 = &v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_photoPickerDidDismissClosure];
  *v3 = 0;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType] = 7;
  v4 = &v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_puppetIdentifier];
  *v5 = 0;
  v5[1] = 0;
  v6 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerStripViewModel;
  type metadata accessor for StickerPackStripViewModel(0);
  v7 = v1;
  *(_QWORD *)&v1[v6] = sub_100038EC0();
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_MSMessagesAppPresentationStyleModal] = 3;
  v8 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingStickerMu;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
  v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingSticker] = 0;
  v9 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_rootNavigationController;
  *(_QWORD *)&v7[v9] = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_visualEffectViewBackground] = 0;
  v10 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_mainController;
  *(_QWORD *)&v7[v10] = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerCollectionViewControllerPresentedViewController] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripHostHeightConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_contentControllerTopAnchorConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerPackStripTopConstraint] = 0;
  v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_presentedFromMessages] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStripHost] = 0;
  v11 = &v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController____lazy_storage___stickerPackStrip];
  v12 = type metadata accessor for StickerPackStrip(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_imageAnalysisInteraction] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_traitRegistration] = 0;
  v13 = &v7[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__VKStickerInfoKeyStickerIDs];
  *v13 = 0x4972656B63697473;
  v13[1] = 0xEA00000000007344;

  v15.receiver = v7;
  v15.super_class = (Class)type metadata accessor for StickersParentViewController(0);
  return objc_msgSendSuper2(&v15, "initWithShouldBeSheetPresentationControllerDelegate:", a1 & 1);
}

void sub_100024980(uint64_t a1, uint64_t a2, void (*a3)(id, _QWORD), uint64_t a4)
{
  Sticker.asMSSticker(completionHandler:)(a3, a4);
}

void sub_100024A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t sub_100024A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Sticker.asDisplaySticker(completionHandler:)(a3, a4);
}

id sub_100024B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10002B848(a2, a3, a4, a5, a6);
}

void sub_100024CFC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, void *a6, void *a7)
{
  sub_10002B9E8(a6, a7, a1, a2, a3, a4);
}

void sub_100024DB8()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  void *v9;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if (!v3 && objc_msgSend(v1, "isLandscapeMode"))
  {
    v4 = objc_msgSend(v1, "view");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "traitCollection");

      v7 = objc_msgSend(v6, "verticalSizeClass");
      if (v7 == (id)1)
      {
        v8 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x100))();
        if (v8)
        {
          v9 = v8;
          (*(void (**)(void))((swift_isaMask & *v8) + 0x150))();

        }
        objc_msgSend(v1, "dismiss");
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100024EE8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  NSObject *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  NSObject *v43;
  NSObject *v44;
  uint64_t aBlock[5];
  _QWORD *v46;
  uint64_t v47;
  _QWORD v48[3];
  char v49[8];

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(NSObject **)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v43 = v9;
    v44 = a1;
    v16 = objc_msgSend(a3, "activeConversation");
    if (v16)
    {
      v17 = v16;
      sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
      v42 = static OS_dispatch_queue.main.getter();
      v18 = swift_allocObject(&unk_10008B060, 24, 7);
      swift_unknownObjectWeakInit(v18 + 16, a3);
      v19 = (_QWORD *)swift_allocObject(&unk_10008BC10, 80, 7);
      v19[2] = v18;
      v19[3] = v17;
      sub_1000292DC(a4, (uint64_t)(v19 + 4));
      v19[9] = v44;
      aBlock[4] = (uint64_t)sub_10002DC44;
      v46 = v19;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10000C1B4;
      aBlock[3] = (uint64_t)&unk_10008BC28;
      v20 = _Block_copy(aBlock);
      v21 = v46;
      v22 = v44;
      v23 = v17;
      v25 = swift_release(v21, v24);
      static DispatchQoS.unspecified.getter(v25);
      aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
      v26 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v27 = sub_10000A66C(&qword_10009B198);
      v28 = sub_10000D6D4();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v8, v26);
      v29 = (void *)v42;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v20);
      _Block_release(v20);

      ((void (*)(char *, uint64_t))v43[1].isa)(v11, v8);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return;
    }
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_10000D130(v38, (uint64_t)qword_10009E0E8);
    v43 = Logger.logObject.getter(v39);
    v40 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v43, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v40, "Sticker was tapped, but there is no active conversation. Nothing more for us to do.", v41, 2u);
      swift_slowDealloc(v41, -1, -1);

      return;
    }

    goto LABEL_16;
  }
  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v30 = type metadata accessor for Logger(0);
    sub_10000D130(v30, (uint64_t)qword_10009E0E8);
    swift_errorRetain(a2);
    v31 = swift_errorRetain(a2);
    v44 = Logger.logObject.getter(v31);
    v32 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v44, v32))
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
LABEL_16:

      return;
    }
    v33 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    aBlock[0] = v34;
    *(_DWORD *)v33 = 136315138;
    swift_getErrorValue(a2, v49, v48);
    v35 = Error.localizedDescription.getter(v48[1], v48[2]);
    v37 = v36;
    v47 = sub_10000C99C(v35, v36, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease(v37);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v44, v32, "Could not load sticker to send. %s", v33, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);

    swift_errorRelease(a2);
  }
}

void sub_1000253F0(uint64_t a1)
{
  sub_100028A2C(a1, "Error sending sticker. %s", "Sticker was sent");
}

void sub_100025464(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];
  char v8;

  *(double *)v7 = a1;
  *(double *)&v7[1] = a2;
  *(double *)&v7[2] = a3;
  *(double *)&v7[3] = a4;
  v8 = 0;
  v5 = swift_allocObject(&unk_10008B330, 57, 7);
  *(_QWORD *)(v5 + 16) = v4;
  sub_1000292DC((uint64_t)v7, v5 + 24);
  v4;
  Sticker.asMSSticker(completionHandler:)(sub_10002BB8C, v5);
  swift_release(v5, v6);
  sub_100024DB8();
}

void sub_1000255AC(void *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  double v28;
  char v29;
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[6];

  v3 = v2;
  v6 = objc_msgSend(a1, "parentViewController");
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for StickerProvidingViewController();
    v9 = swift_dynamicCastClass(v7, v8);
    if (v9)
    {
      v10 = (_QWORD *)v9;
      swift_beginAccess(&qword_10009FCD0, v32, 1, 0);
      v11 = (void *)qword_10009FCD0;
      qword_10009FCD0 = (uint64_t)v10;
      v12 = v7;

      swift_beginAccess(&qword_10009FCD8, v31, 1, 0);
      v13 = (void *)qword_10009FCD8;
      qword_10009FCD8 = (uint64_t)v3;

      (*(void (**)(uint64_t *__return_ptr, _QWORD *))((swift_isaMask & *v10) + 0x188))(v36, v3);
      swift_beginAccess(&xmmword_10009B770, v30, 1, 0);
      sub_1000292DC((uint64_t)v36, (uint64_t)&xmmword_10009B770);

      if ((a2 & 1) == 0)
        return;
      goto LABEL_12;
    }

  }
  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v14 = type metadata accessor for Logger(0);
  sub_10000D130(v14, (uint64_t)qword_10009E0E8);
  v15 = a1;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = a2;
    v19 = swift_slowAlloc(32, -1);
    v36[0] = v19;
    *(_DWORD *)v18 = 136315138;
    v20 = objc_msgSend(v15, "debugDescription");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v34 = sub_10000C99C(v21, v23, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v18 + 4, v18 + 12);

    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Could not store reference to providing controller %s", v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    if ((v29 & 1) == 0)
      return;
  }
  else
  {

    if ((a2 & 1) == 0)
      return;
  }
LABEL_12:
  v24 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x388))();
  swift_beginAccess(&qword_10009FCF0, &v34, 1, 0);
  v25 = (void *)qword_10009FCF0;
  qword_10009FCF0 = v24;

  v26 = objc_msgSend(v3, "traitCollection");
  v27 = objc_msgSend(v26, "_presentationSemanticContext");

  if (v27 == (id)3)
  {
    *(_QWORD *)&v28 = swift_beginAccess(&byte_10009B760, v33, 1, 0).n128_u64[0];
    byte_10009B760 = 6;
    if (objc_msgSend(v3, "respondsToSelector:", "_requestFullScreenModalPresentationWithSize:", v28))
    {
      if (qword_10009E100 != -1)
        swift_once(&qword_10009E100, sub_100018278);
      objc_msgSend(v3, "_requestFullScreenModalPresentationWithSize:", *(double *)&qword_10009E108, *(double *)&qword_10009E110);
    }
    else
    {
      objc_msgSend(v3, "requestPresentationStyle:", *(_QWORD *)((char *)v3+ OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_MSMessagesAppPresentationStyleModal));
    }
  }
  else
  {
    sub_100020F30();
  }
}

uint64_t sub_100025A10(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t (*v6)(uint64_t, uint64_t);

  v6 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v2) + 0x120);
  swift_retain(a2);
  return v6(a1, a2);
}

id sub_100025AFC()
{
  void *v0;

  return objc_msgSend(v0, "requestPresentationStyle:", 1);
}

BOOL sub_100025B20()
{
  void *v0;

  return objc_msgSend(v0, "presentationStyle") == (id)1;
}

void sub_100025B6C(uint64_t a1, void *a2)
{
  sub_10002BB98(a2);
}

void sub_100025C38(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_10002BD54(a6, a7, a8, a9, a10, a11 & 1, a1, a2, a3, a4);
}

uint64_t sub_100025C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)(), _QWORD))((swift_isaMask & *v3) + 0x348))(a2, a3, sub_100029230, 0);
}

void sub_100025C8C()
{
  void *v0;
  Class isa;
  void *v2;
  uint64_t v3;
  _QWORD v4[5];
  uint64_t v5;

  sub_10000D5F4(0, &qword_10009B880, _UIStickerRepresentation_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v4[4] = sub_100029230;
  v5 = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_10001DCC8;
  v4[3] = &unk_10008B348;
  v2 = _Block_copy(v4);
  swift_release(v5, v3);
  objc_msgSend(v0, "_addStickerToStoreWithRepresentations:completionWithStickerIDs:", isa, v2);
  _Block_release(v2);

}

void sub_100025D50(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = v1;
  swift_beginAccess(&qword_10009FCF0, v8, 0, 0);
  v4 = (void *)qword_10009FCF0;
  if (qword_10009FCF0)
  {
    sub_10000D5F4(0, (unint64_t *)&unk_10009B980, NSObject_ptr);
    v5 = v4;
    if ((static NSObject.== infix(_:_:)(a1, v5) & 1) != 0)
    {
      objc_msgSend(v2, "dismiss");
      swift_beginAccess(&qword_10009FCE0, &v7, 1, 0);
      v6 = qword_10009FCE0;
      qword_10009FCE0 = 0;

      v5 = (id)v6;
    }

  }
}

void sub_100025E1C(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  void *v17;
  double v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  void (*v38)(_QWORD *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[5];
  uint64_t v43;
  char v44[24];
  char v45[24];

  v2 = v1;
  v4 = type metadata accessor for StickersCancelState(0);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(&qword_10009FCF0, v45, 0, 0);
  v7 = (void *)qword_10009FCF0;
  if (qword_10009FCF0)
  {
    sub_10000D5F4(0, (unint64_t *)&unk_10009B980, NSObject_ptr);
    v8 = v7;
    if ((static NSObject.== infix(_:_:)(a1, v8) & 1) != 0
      && (v9 = (*(uint64_t (**)(void))((swift_isaMask & *v8) + 0xA8))()) != 0)
    {
      v10 = (id)v9;
      v11 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x100);
      v12 = (_QWORD *)v11();
      if (v12)
      {
        v13 = v12;
        v14 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v12) + 0x118))();

        if (v14)
        {
          objc_msgSend(v14, "setNeedsUpdateContentUnavailableConfiguration");

        }
      }
      v15 = (_QWORD *)v11();
      if (v15)
      {
        v16 = v15;
        v17 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v15) + 0x118))();

        if (v17)
        {
          if ((dispatch thunk of StickerCollectionViewController.isStickerEffectPaused.getter() & 1) != 0)
            StickerCollectionViewController.setStickerEffectPaused(_:)(0);

        }
      }
      *(_QWORD *)&v18 = swift_beginAccess(&qword_10009FCE0, v44, 1, 0).n128_u64[0];
      v19 = (void *)qword_10009FCE0;
      if (qword_10009FCE0)
      {
        v20 = (void *)qword_10009FCF0;
        if (qword_10009FCF0)
        {
          v21 = (id)qword_10009FCE0;
          v22 = v20;
          if ((static NSObject.== infix(_:_:)(a1, v22) & 1) != 0)
          {
            objc_msgSend(v21, "dismiss");
            v23 = (void *)qword_10009FCE0;
            qword_10009FCE0 = 0;

          }
          else
          {

          }
        }
        else
        {
          v37 = (id)qword_10009FCE0;
        }
        v38 = (void (*)(_QWORD *))(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x118))();
        if (v38)
        {
          v40 = (uint64_t)v38;
          v41 = v39;
          v38(v2);

          sub_100029324(v40, v41);
        }
        else
        {

        }
      }
      else
      {
        v24 = objc_msgSend(v2, "presentedViewController", v18);
        if (!v24)
          goto LABEL_24;
        v25 = v24;
        sub_10000D5F4(0, &qword_10009C9C0, UIViewController_ptr);
        v10 = v10;
        v26 = v25;
        LOBYTE(v25) = static NSObject.== infix(_:_:)(v26, v10);

        if ((v25 & 1) != 0)
        {
          v27 = (_QWORD *)v11();
          if (v27)
          {
            v28 = v27;
            v29 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v27) + 0x118))();

            if (v29)
            {
              v30 = dispatch thunk of StickerCollectionViewController.analyticsCreationEvent.getter();
              (*(void (**)(void))((swift_isaMask & *a1) + 0x90))();
              dispatch thunk of StickersAnalyticsCreationEvent.lastCancelledState.setter(v6);
              swift_release(v30, v31);

            }
          }
          v32 = swift_allocObject(&unk_10008B380, 24, 7);
          *(_QWORD *)(v32 + 16) = v2;
          aBlock[4] = sub_10002BF1C;
          v43 = v32;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10000C1B4;
          aBlock[3] = &unk_10008B398;
          v33 = _Block_copy(aBlock);
          v34 = v43;
          v35 = v2;
          swift_release(v34, v36);
          objc_msgSend(v35, "dismissViewControllerAnimated:completion:", 1, v33);

          _Block_release(v33);
        }
        else
        {
LABEL_24:

        }
      }
    }
    else
    {

    }
  }
}

uint64_t sub_100026234(uint64_t a1, void *a2)
{
  _QWORD *v2;
  id v4;
  uint64_t (*v6)(void *);

  v6 = *(uint64_t (**)(void *))((swift_isaMask & *v2) + 0x2E0);
  v4 = a2;
  return v6(a2);
}

void sub_100026284()
{
  void *v0;
  Class isa;
  void *v2;
  uint64_t v3;
  _QWORD v4[5];
  uint64_t v5;

  sub_10000D5F4(0, &qword_10009B880, _UIStickerRepresentation_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v4[4] = sub_100029230;
  v5 = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_10001DCC8;
  v4[3] = &unk_10008BAC0;
  v2 = _Block_copy(v4);
  swift_release(v5, v3);
  objc_msgSend(v0, "_addStickerToStoreWithRepresentations:completionWithStickerIDs:", isa, v2);
  _Block_release(v2);

}

void sub_100026348(double a1)
{
  _QWORD *v1;
  _QWORD *v3;
  id v4;

  v3 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x100))();
  if (v3)
  {
    v4 = v3;
    (*(void (**)(double))((swift_isaMask & *v3) + 0x1C0))(a1);

  }
}

void sub_1000263CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  void (*v5)(__n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(__n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;
  _BYTE v28[24];

  v1 = v0;
  v3 = swift_beginAccess(&qword_10009FCE8, v28, 1, 0);
  v4 = qword_10009FCE8;
  if (qword_10009FCE8)
  {
    v5 = *(void (**)(__n128))(*(_QWORD *)qword_10009FCE8 + 560);
    v6 = swift_retain(qword_10009FCE8);
    v5(v6);
    v2 = swift_release(v4, v7);
  }
  v8 = (*(uint64_t (**)(uint64_t, __n128))((swift_isaMask & *v1) + 0x100))(v2, v3);
  if (v8)
  {
    v10 = (_QWORD *)v8;
    v11 = qword_10009FCE8;
    if (qword_10009FCE8)
    {
      v12 = *(uint64_t (**)(__n128))(*(_QWORD *)qword_10009FCE8 + 424);
      v13 = swift_retain(qword_10009FCE8);
      v14 = v12(v13);
      v16 = v15;
      v18 = v17;
      v20 = v19;
      swift_release(v11, v15);
      v21 = v20 & 1;
    }
    else
    {
      v14 = 0;
      v16 = 0;
      v18 = 0;
      v21 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((swift_isaMask & *v10) + 0x1C8))(v14, v16, v18, v21);

  }
  v22 = qword_10009FCE8;
  qword_10009FCE8 = 0;
  swift_release(v22, v9);
  v23 = swift_allocObject(&unk_10008B060, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v1);
  aBlock[4] = sub_10002BF8C;
  v27 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008B3C0;
  v24 = _Block_copy(aBlock);
  swift_release(v27, v25);
  objc_msgSend(v1, "_addStickerAnimationDidFinishWithCompletion:", v24);
  _Block_release(v24);
}

void sub_10002658C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  void *v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  char v11;

  v3 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x100))();
  if (v3)
  {
    v4 = v3;
    (*(void (**)(_OWORD *__return_ptr))((swift_isaMask & *v3) + 0x188))(v10);
    v8 = v10[1];
    v9 = v10[0];
    v5 = v11;

    v7 = v8;
    v6 = v9;
  }
  else
  {
    v6 = 0uLL;
    v5 = 1;
    v7 = 0uLL;
  }
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = v5;
}

uint64_t sub_100026628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t (*v5)(__n128);
  __n128 v6;
  uint64_t v7;
  _BYTE v9[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_puppetIdentifier + 8);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_puppetIdentifier);
  }
  else
  {
    v3 = sub_1000153B0();
    swift_beginAccess(v3, v9, 0, 0);
    v4 = *v3;
    v5 = *(uint64_t (**)(__n128))(*(_QWORD *)*v3 + 240);
    v6 = swift_retain(*v3);
    v2 = v5(v6);
    swift_release(v4, v7);
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

uint64_t sub_1000266C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  NSString v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;

  v4 = v3;
  v8 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_puppetIdentifier);
  v7 = *(_QWORD *)((char *)v3
                 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_puppetIdentifier
                 + 8);
  if (a2 == 0x746E65636572 && a3 == 0xE600000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0x746E65636572, 0xE600000000000000, a2, a3, 0) & 1) != 0)
  {
    swift_bridgeObjectRetain(v7);
    v9 = 1;
    v10 = 0xE600000000000000;
  }
  else
  {
    v10 = 0xEB00000000746E65;
    if (a2 == 0x746E6F4372657375 && a3 == 0xEB00000000746E65
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x746E6F4372657375, 0xEB00000000746E65, a2, a3, 0) & 1) != 0)
    {
      swift_bridgeObjectRetain(v7);
      v9 = 0;
    }
    else if (a2 == 0x696A6F6D65 && a3 == 0xE500000000000000
           || (_stringCompareWithSmolCheck(_:_:expecting:)(0x696A6F6D65, 0xE500000000000000, a2, a3, 0) & 1) != 0)
    {
      swift_bridgeObjectRetain(v7);
      v9 = 4;
      v10 = 0xE500000000000000;
    }
    else if (a2 == 0x696A6F6D656DLL && a3 == 0xE600000000000000)
    {
      swift_bridgeObjectRetain(v7);
      v9 = 3;
      v10 = 0xE600000000000000;
    }
    else
    {
      v10 = 0xE600000000000000;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(0x696A6F6D656DLL, 0xE600000000000000, a2, a3, 0);
      swift_bridgeObjectRetain(v7);
      if ((v19 & 1) != 0
        || (v20 = sub_100067D6C(), v21 = v20[1], *v20 == a2) && v21 == a3
        || (_stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, a2, a3, 0) & 1) != 0)
      {
        v9 = 3;
      }
      else if (((*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0x3A0))(a2, a3) & 1) != 0)
      {
        swift_bridgeObjectRelease(v7);
        swift_bridgeObjectRetain(a3);
        v9 = 5;
        v10 = 0xEA00000000007974;
        v8 = a2;
        v7 = a3;
      }
      else
      {
        if (qword_10009E0E0 != -1)
          swift_once(&qword_10009E0E0, sub_1000181F8);
        v22 = type metadata accessor for Logger(0);
        v23 = sub_10000D130(v22, (uint64_t)qword_10009E0E8);
        v24 = Logger.logObject.getter(v23);
        v25 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v26 = 0;
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "Asked to present a 3rd party app that isn't available. Falling back to recents.", v26, 2u);
          swift_slowDealloc(v26, -1, -1);
        }

        v9 = 1;
      }
    }
  }
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  if (v7)
  {
    swift_bridgeObjectRetain(v7);
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v4, "requestPresentationWithStickerType:identifier:", v11, v12);

  if (*((_BYTE *)v4 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType) == 7)
  {
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_10000D130(v13, (uint64_t)qword_10009E0E8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "No active controller type yet; not presenting", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
  else
  {
    sub_100020BE4();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *v4) + 0x3A8))(v9, v8, v7);
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_100026B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)(v3 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier);
  v7 = *(_QWORD *)(v3
                 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier
                 + 8);
  *v6 = 0;
  v6[1] = 0;
  swift_bridgeObjectRelease(v7);
  sub_100018D24();
  return sub_100026B9C(a2, a3);
}

uint64_t sub_100026B9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v3 = v2;
  v24 = a1;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = swift_allocObject(&unk_10008B060, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v3);
  v14 = (_QWORD *)swift_allocObject(&unk_10008B3F8, 40, 7);
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_10002BFE4;
  v28 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008B410;
  v15 = _Block_copy(aBlock);
  v16 = v28;
  swift_bridgeObjectRetain(a2);
  v18 = swift_release(v16, v17);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_10000A66C(&qword_10009B198);
  v21 = sub_10000D6D4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *v3) + 0x3A8))(3, v24, a2);
}

id sub_100026DF8(uint64_t a1, id a2)
{
  void *v2;
  id result;

  result = objc_msgSend(v2, "presentationStyle");
  if (result != a2)
    return objc_msgSend(v2, "requestPresentationStyle:", a2);
  return result;
}

id sub_100026E48(uint64_t a1, uint64_t a2)
{
  char *v2;

  objc_msgSend((id)objc_opt_self(AVTUIControllerPresentation), "setPendingGlobalPresentation:", a2);
  return objc_msgSend(v2, "requestPresentationStyle:", *(_QWORD *)&v2[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_MSMessagesAppPresentationStyleModal]);
}

void sub_100026EA0()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_10000D130(v0, (uint64_t)qword_10009E0E8);
  oslog = Logger.logObject.getter(v1);
  v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Got completion for requesting app store", v3, 2u);
    swift_slowDealloc(v3, -1, -1);
  }

}

uint64_t sub_100026F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000266C4(a1, a2, a3);
}

uint64_t sub_100026F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)(*v3 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_thirdPartyAppIdentifier);
  v7 = v6[1];
  *v6 = 0;
  v6[1] = 0;
  swift_bridgeObjectRelease(v7);
  sub_100018D24();
  return sub_100026B9C(a2, a3);
}

id sub_100026FE0(uint64_t a1, id a2)
{
  void **v2;
  void *v4;
  id result;

  v4 = *v2;
  result = objc_msgSend(v4, "presentationStyle");
  if (result != a2)
    return objc_msgSend(v4, "requestPresentationStyle:", a2);
  return result;
}

id sub_100027034(uint64_t a1, uint64_t a2)
{
  void **v2;
  char *v3;

  v3 = (char *)*v2;
  objc_msgSend((id)objc_opt_self(AVTUIControllerPresentation), "setPendingGlobalPresentation:", a2);
  return objc_msgSend(v3, "requestPresentationStyle:", *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_MSMessagesAppPresentationStyleModal]);
}

id sub_100027088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C154(a1, a2, a3);
}

uint64_t sub_1000270A8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  char v10[24];

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_puppetIdentifier);
  v2 = v1[1];
  if (v2)
  {
    v3 = *v1;
  }
  else
  {
    v4 = sub_1000153B0();
    swift_beginAccess(v4, v10, 0, 0);
    v5 = *v4;
    v6 = *(uint64_t (**)(__n128))(*(_QWORD *)*v4 + 240);
    v7 = swift_retain(*v4);
    v3 = v6(v7);
    swift_release(v5, v8);
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_100027148()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x178))();
}

void sub_10002718C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  NSObject *v35;
  void (*v36)(char *, NSObject *, uint64_t);
  id v37;
  void *v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  void **v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  NSObject *v62;
  void **aBlock;
  uint64_t v64;
  void (*v65)(uint64_t, void *);
  void *v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[3];
  char v71;

  v56 = a8;
  v58 = a6;
  v59 = a4;
  v57 = a2;
  v13 = sub_10000A66C(&qword_10009AFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v55 - v22;
  __chkstk_darwin(v21);
  v62 = ((char *)&v55 - v24);
  v60 = v8;
  v61 = objc_msgSend(v8, "activeConversation");
  if (v61)
  {
    sub_10002E23C(a1, (uint64_t)v15, &qword_10009AFF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_10002E2B4((uint64_t)v15, &qword_10009AFF0);
      v25 = v61;
      if (qword_10009E0E0 != -1)
        swift_once(&qword_10009E0E0, sub_1000181F8);
      v26 = type metadata accessor for Logger(0);
      v27 = sub_10000D130(v26, (uint64_t)qword_10009E0E8);
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Expected a file URL to create an MSSticker. Aborting sendSticker.", v30, 2u);
        swift_slowDealloc(v30, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      v35 = v62;
      (*(void (**)(NSObject *, char *, uint64_t))(v17 + 32))(v62, v15, v16);
      sub_10000D5F4(0, &qword_10009B990, MSSticker_ptr);
      v36 = *(void (**)(char *, NSObject *, uint64_t))(v17 + 16);
      v36(v23, v35, v16);
      swift_bridgeObjectRetain(a7);
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRetain(a5);
      v37 = MSSticker.init(fileURL:externalURI:localizedDescription:extensionIdentifier:)((uint64_t)v23, v58, a7, v57, a3, v59, a5);
      if (v37)
      {
        v38 = v37;
        sub_1000292DC(v56, (uint64_t)&v69);
        v39 = v61;
        if ((v71 & 1) != 0
          || (v40 = *(double *)&v69,
              v41 = *(double *)v70,
              v42 = *(double *)&v70[1],
              v43 = *(double *)&v70[2],
              !objc_msgSend(v61, "respondsToSelector:", "insertSticker:withSourceFrame:completionHandler:")))
        {
          v67 = sub_1000253F0;
          v68 = 0;
          aBlock = _NSConcreteStackBlock;
          v64 = 1107296256;
          v65 = sub_10001021C;
          v66 = &unk_10008B438;
          v44 = _Block_copy(&aBlock);
          objc_msgSend(v39, "insertSticker:completionHandler:", v38, v44);
        }
        else
        {
          v67 = sub_1000253F0;
          v68 = 0;
          aBlock = _NSConcreteStackBlock;
          v64 = 1107296256;
          v65 = sub_10001021C;
          v66 = &unk_10008B460;
          v44 = _Block_copy(&aBlock);
          objc_msgSend(v39, "insertSticker:withSourceFrame:completionHandler:", v38, v44, v40, v41, v42, v43);
        }

        _Block_release(v44);
      }
      else
      {
        if (qword_10009E0E0 != -1)
          swift_once(&qword_10009E0E0, sub_1000181F8);
        v45 = type metadata accessor for Logger(0);
        sub_10000D130(v45, (uint64_t)qword_10009E0E8);
        v46 = ((uint64_t (*)(char *, NSObject *, uint64_t))v36)(v20, v62, v16);
        v47 = Logger.logObject.getter(v46);
        v48 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = (uint8_t *)swift_slowAlloc(12, -1);
          v50 = (void **)swift_slowAlloc(32, -1);
          aBlock = v50;
          *(_DWORD *)v49 = 136315138;
          v51 = sub_10002CA50(qword_10009B998, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v52 = dispatch thunk of CustomStringConvertible.description.getter(v16, v51);
          v54 = v53;
          v69 = sub_10000C99C(v52, v53, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, v70, v49 + 4, v49 + 12);
          swift_bridgeObjectRelease(v54);
          (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "Could not create MSSticker for url %s", v49, 0xCu);
          swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v50, -1, -1);
          swift_slowDealloc(v49, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
        }

        v39 = v61;
      }
      sub_100024DB8();

      (*(void (**)(NSObject *, uint64_t))(v17 + 8))(v62, v16);
    }
  }
  else
  {
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_10000D130(v31, (uint64_t)qword_10009E0E8);
    v62 = Logger.logObject.getter(v32);
    v33 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v62, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v33, "Sticker was tapped, but there is no active conversation. Nothing more for us to do.", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

  }
}

uint64_t sub_100027848(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10002CA90(a1, a3, a4);
}

void sub_100027854()
{
  void *v0;
  id v1;
  NSURL *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject *oslog;
  _QWORD aBlock[6];

  v1 = objc_msgSend(v0, "activeConversation");
  if (v1)
  {
    v3 = v1;
    URL._bridgeToObjectiveC()(v2);
    v5 = v4;
    aBlock[4] = sub_100028A18;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001021C;
    aBlock[3] = &unk_10008B488;
    v6 = _Block_copy(aBlock);
    objc_msgSend(v3, "insertAttachment:withAlternateFilename:completionHandler:", v5, 0, v6);
    _Block_release(v6);

  }
  else
  {
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_10000D130(v7, (uint64_t)qword_10009E0E8);
    oslog = Logger.logObject.getter(v8);
    v9 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "Attachment was tapped, but there is no active conversation. Nothing more for us to do.", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

  }
}

uint64_t sub_100027A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter();
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10002E334, v2, v3);
}

uint64_t sub_100027C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_10000A66C(&qword_10009AFF0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[7] = v6;
  v4[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100027C9C, v7, v8);
}

uint64_t sub_100027C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(const void **)(v2 + 32);
  v4 = *(_QWORD *)(v2 + 16);
  swift_release(*(_QWORD *)(v2 + 64), a2);
  *(_QWORD *)(v2 + 72) = _Block_copy(v3);
  v5 = *(_QWORD *)(v2 + 48);
  if (v4)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v2 + 16));
    v6 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  }
  v8 = *(_QWORD *)(v2 + 24);
  if (v8)
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  else
    v9 = 0;
  *(_QWORD *)(v2 + 80) = v9;
  v10 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 88) = static MainActor.shared.getter(*(id *)(v2 + 40));
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_100027D90, v11, v12);
}

uint64_t sub_100027D90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void (**v7)(_QWORD, _QWORD);

  v3 = *(_QWORD *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 72);
  v6 = *(void **)(v2 + 40);
  v5 = *(_QWORD *)(v2 + 48);
  swift_release(*(_QWORD *)(v2 + 88), a2);
  swift_bridgeObjectRelease(v3);

  sub_10002E2B4(v5, &qword_10009AFF0);
  if (v4)
  {
    v7 = *(void (***)(_QWORD, _QWORD))(v2 + 72);
    v7[2](v7, 0);
    _Block_release(v7);
  }
  swift_task_dealloc(*(_QWORD *)(v2 + 48));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100027E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100027E7C, v2, v3);
}

uint64_t sub_100027E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(0);
}

uint64_t sub_100027FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = sub_10000A66C(&qword_10009AFF0);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[8] = v7;
  v5[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_100028098, v8, v9);
}

uint64_t sub_100028098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(const void **)(v2 + 40);
  v4 = *(_QWORD *)(v2 + 16);
  swift_release(*(_QWORD *)(v2 + 72), a2);
  *(_QWORD *)(v2 + 80) = _Block_copy(v3);
  v5 = *(_QWORD *)(v2 + 56);
  if (v4)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v2 + 16));
    v6 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  }
  v8 = *(_QWORD *)(v2 + 24);
  if (v8)
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  else
    v9 = 0;
  *(_QWORD *)(v2 + 88) = v9;
  v10 = *(_QWORD *)(v2 + 32);
  if (v10)
    static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  else
    v11 = 0;
  *(_QWORD *)(v2 + 96) = v11;
  v12 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 104) = static MainActor.shared.getter(*(id *)(v2 + 48));
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000281A4, v13, v14);
}

uint64_t sub_1000281A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (**v8)(_QWORD, _QWORD);

  v3 = *(_QWORD *)(v2 + 96);
  v5 = *(_QWORD *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 88);
  v7 = *(void **)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 56);
  swift_release(*(_QWORD *)(v2 + 104), a2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);

  sub_10002E2B4(v6, &qword_10009AFF0);
  if (v5)
  {
    v8 = *(void (***)(_QWORD, _QWORD))(v2 + 80);
    v8[2](v8, 0);
    _Block_release(v8);
  }
  swift_task_dealloc(*(_QWORD *)(v2 + 56));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id sub_100028238()
{
  void *v0;

  return objc_msgSend(v0, "dismiss");
}

id sub_100028254(char a1)
{
  void *v1;

  return objc_msgSend(v1, "requestPresentationStyle:", a1 & 1);
}

uint64_t sub_100028278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000282E0, v2, v3);
}

uint64_t sub_1000282E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10002845C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = v6;
  v5[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000284D4, v7, v8);
}

uint64_t sub_1000284D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(const void **)(v2 + 40);
  v4 = *(_QWORD *)(v2 + 16);
  swift_release(*(_QWORD *)(v2 + 64), a2);
  *(_QWORD *)(v2 + 72) = _Block_copy(v3);
  if (v4)
    static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v2 + 16));
  else
    v5 = 0;
  *(_QWORD *)(v2 + 80) = v5;
  v6 = *(_QWORD *)(v2 + 24);
  if (v6)
    static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  else
    v7 = 0;
  *(_QWORD *)(v2 + 88) = v7;
  v8 = *(_QWORD *)(v2 + 32);
  if (v8)
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  else
    v9 = 0;
  *(_QWORD *)(v2 + 96) = v9;
  v10 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 104) = static MainActor.shared.getter(*(id *)(v2 + 48));
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_10002859C, v11, v12);
}

uint64_t sub_10002859C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (**v8)(_QWORD);

  v3 = *(_QWORD *)(v2 + 96);
  v5 = *(_QWORD *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 88);
  v6 = *(_QWORD *)(v2 + 72);
  v7 = *(void **)(v2 + 48);
  swift_release(*(_QWORD *)(v2 + 104), a2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);

  if (v6)
  {
    v8 = *(void (***)(_QWORD))(v2 + 72);
    v8[2](v8);
    _Block_release(v8);
  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_100028628(void *a1, double a2, double a3, double a4, double a5)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v44[4];
  char v45;

  v11 = sub_10000A66C(&qword_10009AFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v44[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x100))(v12);
  if (v15)
  {
    v16 = (void *)v15;
    v17 = objc_msgSend(v5, "view");
    if (!v17)
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    v18 = v17;
    v19 = objc_msgSend(v17, "window");

    if (v19)
    {
      v20 = objc_msgSend(v16, "view");
      if (!v20)
      {
LABEL_14:
        __break(1u);
        return;
      }
      v21 = v20;
      v22 = objc_msgSend(v20, "coordinateSpace");

      v23 = objc_msgSend(v19, "coordinateSpace");
      objc_msgSend(v22, "convertRect:toCoordinateSpace:", v23, a2, a3, a4, a5);
      a2 = v24;
      a3 = v25;
      a4 = v26;
      a5 = v27;
      swift_unknownObjectRelease(v23);
      swift_unknownObjectRelease(v22);

    }
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_13;
  }
  v28 = objc_msgSend(a1, "fileURL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v28);

  v29 = type metadata accessor for URL(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 0, 1, v29);
  v30 = objc_msgSend(a1, "accessibilityLabel");
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  v34 = objc_msgSend(a1, "stickerPackGUID");
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v37 = v36;

  v38 = objc_msgSend(a1, "externalURI");
  if (v38)
  {
    v39 = v38;
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v42 = v41;

  }
  else
  {
    v40 = 0;
    v42 = 0;
  }
  *(double *)v44 = a2;
  *(double *)&v44[1] = a3;
  *(double *)&v44[2] = a4;
  *(double *)&v44[3] = a5;
  v45 = 0;
  sub_10002718C((uint64_t)v14, v31, v33, v35, v37, v40, v42, (uint64_t)v44);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v42);
  sub_10002E2B4((uint64_t)v14, &qword_10009AFF0);
}

void sub_100028A18(uint64_t a1)
{
  sub_100028A2C(a1, "Error staging attachment. %s", "Attachment was staged");
}

void sub_100028A2C(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *oslog;
  uint64_t v19;
  _QWORD v20[3];
  _BYTE v21[8];
  uint64_t v22;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v5 = type metadata accessor for Logger(0);
    sub_10000D130(v5, (uint64_t)qword_10009E0E8);
    swift_errorRetain(a1);
    v6 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v6);
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v22 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_getErrorValue(a1, v21, v20);
      v10 = Error.localizedDescription.getter(v20[1], v20[2]);
      v12 = v11;
      v19 = sub_10000C99C(v10, v11, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20, v8 + 4, v8 + 12);
      swift_bridgeObjectRelease(v12);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, a2, v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      swift_errorRelease(a1);
      return;
    }
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_10000D130(v14, (uint64_t)qword_10009E0E8);
    oslog = Logger.logObject.getter(v15);
    v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v16, a3, v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
  }

}

id sub_100028CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  id v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  id v18;

  v4 = v3;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  v18 = 0;
  v10 = objc_msgSend(v4, "initWithContentsOfFileURL:localizedDescription:error:", v8, v9, &v18);

  v11 = v18;
  if (v10)
  {
    v12 = type metadata accessor for URL(0);
    v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v14 = v11;
    v13(a1, v12);
  }
  else
  {
    v15 = v18;
    _convertNSErrorToError(_:)(v11);

    swift_willThrow();
    v16 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
  }
  return v10;
}

_QWORD *sub_100028DF8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_100028E08(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_100028E14(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100028E28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_10002E33C;
  return v6();
}

uint64_t sub_100028E7C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_10002E33C;
  return v7();
}

uint64_t sub_100028ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10002E2B4(a1, &qword_10009BA60);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_10008B710, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_10009BAA0, v16);
}

uint64_t sub_10002901C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100029080;
  return v6(a1);
}

uint64_t sub_100029080()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000290CC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v6 = a4();
  v8 = v7;
  v9 = sub_10000C99C(v6, v7, a3);
  v10 = *a1;
  v11 = *a1 + 8;
  v13 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v10, v11);
  result = swift_bridgeObjectRelease(v8);
  *a1 = v11;
  return result;
}

unint64_t sub_10002913C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10002916C(a1, v4);
}

unint64_t sub_10002916C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_10002E2F0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10002E280((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_100029234()
{
  uint64_t result;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[24];

  result = swift_beginAccess(&qword_10009FCE8, v5, 0, 0);
  v1 = qword_10009FCE8;
  if (qword_10009FCE8)
  {
    v2 = *(void (**)(uint64_t))(*(_QWORD *)qword_10009FCE8 + 552);
    v3 = swift_retain(qword_10009FCE8);
    v2(v3);
    return swift_release(v1, v4);
  }
  return result;
}

unint64_t sub_100029294(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10008AF60, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7)
    return 7;
  else
    return v3;
}

uint64_t sub_1000292DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009C000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100029324(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2, a2);
  return result;
}

uint64_t type metadata accessor for StickersParentViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_10009E330;
  if (!qword_10009E330)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StickersParentViewController);
  return result;
}

uint64_t sub_100029370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100029380(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

uint64_t sub_100029388()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000293AC()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  double v7;
  Class isa;
  float v9;
  _QWORD v10[5];
  __int128 v11;
  __int128 v12;
  _BYTE v13[24];

  swift_beginAccess(v0 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = (void *)Strong;
    v3 = Notification.userInfo.getter();
    if (!v3)
    {
LABEL_13:

      return;
    }
    v4 = v3;
    *(_QWORD *)&v11 = 0x73736572676F7270;
    *((_QWORD *)&v11 + 1) = 0xE800000000000000;
    AnyHashable.init<A>(_:)(v10, &v11, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v4 + 16) && (v5 = sub_10002913C((uint64_t)v10), (v6 & 1) != 0))
    {
      sub_10000D4C4(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v11);
    }
    else
    {
      v11 = 0u;
      v12 = 0u;
    }
    sub_10002E280((uint64_t)v10);
    if (*((_QWORD *)&v12 + 1))
    {
      if (swift_dynamicCast(&v9, &v11, (char *)&type metadata for Any + 8, &type metadata for Float, 6))
      {
        v7 = v9;
LABEL_12:
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v4);
        objc_msgSend(v2, "_animatedStickerCreationProgressChanged:progress:", isa, v7);

        goto LABEL_13;
      }
    }
    else
    {
      sub_10002E2B4((uint64_t)&v11, (uint64_t *)&unk_10009BC90);
    }
    v7 = 0.0;
    goto LABEL_12;
  }
}

unint64_t sub_100029520()
{
  unint64_t result;

  result = qword_10009B898;
  if (!qword_10009B898)
  {
    result = swift_getWitnessTable(&unk_1000787A0, &type metadata for StickersParentViewController.AddStickerError);
    atomic_store(result, (unint64_t *)&qword_10009B898);
  }
  return result;
}

void sub_100029568()
{
  uint64_t v0;

  sub_10001E820(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100029574()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 72), v1);
  return swift_deallocObject(v0, 80, 7);
}

void sub_1000295A8()
{
  double *v0;
  uint64_t v1;
  _QWORD *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void);
  _QWORD *v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSString v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t (*)(), uint64_t, double, double, double, double);
  uint64_t v27;
  char v28;
  char v29;

  v2 = (_QWORD *)*((_QWORD *)v0 + 2);
  v1 = *((_QWORD *)v0 + 3);
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v6 = v0[7];
  v8 = *((_QWORD *)v0 + 8);
  v7 = *((_QWORD *)v0 + 9);
  v9 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerCollectionViewControllerPresentedViewController;
  v10 = *(void **)((char *)v2
                 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerCollectionViewControllerPresentedViewController);
  if (v10)
  {
    objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);
    v11 = *(void **)((char *)v2 + v9);
    *(_QWORD *)((char *)v2 + v9) = 0;

  }
  v12 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x100);
  v13 = (_QWORD *)v12();
  if (!v13
    || (v14 = v13,
        v15 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x98))(),
        v14,
        v29 = v15,
        v28 = 0,
        v16 = sub_10002DDD4(),
        (dispatch thunk of static Equatable.== infix(_:_:)(&v29, &v28, &type metadata for StickerProvidingViewController.ControllerType, v16) & 1) == 0))
  {
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_10000D130(v17, (uint64_t)qword_10009E0E8);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Don't have the right userGenerated VC; switching to it",
        v21,
        2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v22 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "requestPresentationWithStickerType:identifier:", v22, 0);

    sub_100020BE4();
  }
  v23 = v12();
  if (v23)
  {
    v24 = (_QWORD *)v23;
    v25 = swift_allocObject(&unk_10008BCB0, 32, 7);
    *(_QWORD *)(v25 + 16) = v8;
    *(_QWORD *)(v25 + 24) = v7;
    v26 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t, double, double, double, double))((swift_isaMask & *v24)
                                                                                                 + 0x1A0);
    swift_retain(v7);
    v26(v1, sub_10002DE18, v25, v3, v4, v5, v6);
    swift_release(v25, v27);

  }
}

void sub_100029810()
{
  uint64_t v0;
  _QWORD *Strong;
  void *v2;
  _QWORD *v3;
  void *v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  NSString v12;
  char v13;
  char v14;
  _BYTE v15[24];

  swift_beginAccess(v0 + 16, v15, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    v3 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x100))();
    if (!v3
      || (v4 = v3,
          v5 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x98))(),
          v4,
          v14 = v5,
          v13 = 0,
          v6 = sub_10002DDD4(),
          (dispatch thunk of static Equatable.== infix(_:_:)(&v14, &v13, &type metadata for StickerProvidingViewController.ControllerType, v6) & 1) == 0))
    {
      if (qword_10009E0E0 != -1)
        swift_once(&qword_10009E0E0, sub_1000181F8);
      v7 = type metadata accessor for Logger(0);
      v8 = sub_10000D130(v7, (uint64_t)qword_10009E0E8);
      v9 = Logger.logObject.getter(v8);
      v10 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Don't have the right userGenerated VC; switching to it",
          v11,
          2u);
        swift_slowDealloc(v11, -1, -1);
      }

      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v2, "requestPresentationWithStickerType:identifier:", v12, 0);

      sub_100020BE4();
    }

  }
}

uint64_t sub_1000299C8()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 48), v1);
  return swift_deallocObject(v0, 56, 7);
}

void sub_1000299FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & **(_QWORD **)(v0 + 16)) + 0x100))();
  if (v5)
  {
    v6 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((swift_isaMask & *v5) + 0x1A8))(v1, v2, v3, v4);

  }
}

uint64_t sub_100029AA8()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100029AD4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;

  v2 = (_QWORD *)v0[2];
  v1 = v0[3];
  v3 = v0[4];
  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10000D130(v4, (uint64_t)qword_10009E0E8);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "_addStickerAnimationDidFinish", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x100))();
  if (v9)
  {
    v10 = v9;
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v9) + 0x1B0))(v1, v3);

  }
}

uint64_t sub_100029C20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100029C44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = *(_QWORD **)(v0 + 16);
  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000D130(v2, (uint64_t)qword_10009E0E8);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "_didRemoveStickerPreview", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x100))();
  if (v7)
  {
    v8 = v7;
    (*(void (**)(void))((swift_isaMask & *v7) + 0x1B8))();

  }
  v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingStickerMu);
  objc_msgSend(v9, "lock");
  *((_BYTE *)v1 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingSticker) = 0;
  objc_msgSend(v9, "unlock");
  swift_beginAccess(&qword_10009FCD0, v13, 1, 0);
  v10 = (void *)qword_10009FCD0;
  qword_10009FCD0 = 0;

  swift_beginAccess(&qword_10009FCD8, &v12, 1, 0);
  v11 = (void *)qword_10009FCD8;
  qword_10009FCD8 = 0;

}

void sub_100029DE4(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = qword_10009E0E0;
  v2 = a1;
  if (v1 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v3 = type metadata accessor for Logger(0);
  sub_10000D130(v3, (uint64_t)qword_10009E0E8);
  v4 = v2;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v16 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = objc_msgSend(v4, "debugDescription");
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    v15 = sub_10000C99C(v10, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4, v7 + 12);

    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Removing old %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
  objc_msgSend(v4, "willMoveToParentViewController:", 0);
  v13 = objc_msgSend(v4, "view");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "removeFromSuperview");

    objc_msgSend(v4, "removeFromParentViewController");
    objc_msgSend(v4, "didMoveToParentViewController:", 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_10002A01C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[80];
  _BYTE v31[24];
  _BYTE v32[80];
  _BYTE v33[80];
  _BYTE v34[80];

  v2 = sub_10000A66C(&qword_10009B858);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100078A10;
  v4 = sub_10000A66C(&qword_10009B860);
  inited = swift_initStackObject(v4, v34);
  *(_OWORD *)(inited + 16) = xmmword_100078550;
  *(_QWORD *)(inited + 32) = 0x746E65636572;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = 0x6B636F6C43;
  *(_QWORD *)(inited + 56) = 0xE500000000000000;
  *(_QWORD *)(v3 + 32) = sub_10001BE1C(inited);
  v6 = swift_initStackObject(v4, v33);
  *(_OWORD *)(v6 + 16) = xmmword_100078550;
  *(_QWORD *)(v6 + 32) = 0x746E6F4372657375;
  *(_QWORD *)(v6 + 40) = 0xEB00000000746E65;
  *(_QWORD *)(v6 + 72) = &type metadata for String;
  *(_QWORD *)(v6 + 48) = 0x72656B63697453;
  *(_QWORD *)(v6 + 56) = 0xE700000000000000;
  *(_QWORD *)(v3 + 40) = sub_10001BE1C(v6);
  v7 = swift_initStackObject(v4, v32);
  *(_OWORD *)(v7 + 16) = xmmword_100078550;
  *(_QWORD *)(v7 + 32) = 0x696A6F6D656DLL;
  *(_QWORD *)(v7 + 40) = 0xE600000000000000;
  v8 = sub_1000153B0();
  swift_beginAccess(v8, v31, 0, 0);
  v9 = *v8;
  v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 232);
  v11 = swift_retain(v9);
  v12 = v10(v11);
  swift_release(v9, v13);
  *(_QWORD *)(v7 + 72) = sub_10000A66C(&qword_10009B868);
  *(_QWORD *)(v7 + 48) = v12;
  *(_QWORD *)(v3 + 48) = sub_10001BE1C(v7);
  v14 = swift_initStackObject(v4, v30);
  *(_OWORD *)(v14 + 16) = xmmword_100078550;
  *(_QWORD *)(v14 + 32) = 0x696A6F6D65;
  *(_QWORD *)(v14 + 40) = 0xE500000000000000;
  *(_QWORD *)(v14 + 72) = &type metadata for String;
  *(_QWORD *)(v14 + 48) = 0xD000000000000013;
  *(_QWORD *)(v14 + 56) = 0x8000000100073F20;
  *(_QWORD *)(v3 + 56) = sub_10001BE1C(v14);
  if (qword_10009E0E0 != -1)
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v15 = type metadata accessor for Logger(0);
  sub_10000D130(v15, (uint64_t)qword_10009E0E8);
  v16 = swift_bridgeObjectRetain_n(v3, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v29 = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = sub_10000A66C((uint64_t *)&unk_10009B870);
    v22 = Array.debugDescription.getter(v3, v21);
    v24 = v23;
    v28 = sub_10000C99C(v22, v23, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease_n(v3, 2, v25);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "requestStickerExtensionMetadataDictionary will call completion with %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v3, 2, v26);
  }
  sub_10000A66C((uint64_t *)&unk_10009B870);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a1 + 16))(a1, isa);
  swift_bridgeObjectRelease(v3);

}

uint64_t sub_10002A3BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v6)
  {
    do
    {
      v7 = 4;
      while (1)
      {
        v8 = (v5 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5)
           : *(id *)(v5 + 8 * v7);
        v9 = v8;
        v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        v11 = objc_msgSend(v8, "extensionIdentifier");
        if (v11)
        {
          v12 = v11;
          v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
          v15 = v14;

          if (v13 == a2 && v15 == a3)
          {
            v19 = v5;
            v5 = a3;
            swift_bridgeObjectRelease(v19);

LABEL_19:
            v18 = 1;
            goto LABEL_26;
          }
          v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, a2, a3, 0);

          swift_bridgeObjectRelease(v15);
          if ((v17 & 1) != 0)
            goto LABEL_19;
        }
        else
        {

        }
        ++v7;
        if (v10 == v6)
        {
          v18 = 0;
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_21:
      v20 = a3;
      if (v5 < 0)
        v21 = v5;
      else
        v21 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v22 = _CocoaArrayWrapper.endIndex.getter(v21);
      a3 = v20;
      v6 = v22;
    }
    while (v22);
  }
  v18 = 0;
LABEL_26:
  swift_bridgeObjectRelease(v5);
  return v18;
}

uint64_t sub_10002A554()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10002A57C(uint64_t a1, char *a2, void (**a3)(const void *, _QWORD, void *, CGFloat, double, double, double))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  char *v23;
  void *v24;
  double y;
  double width;
  double height;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  double v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  void *v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  id v76;
  void *v77;
  id v78;
  void *v79;
  void *v80;
  _QWORD *v81;
  void *v82;
  _QWORD *v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void (**v108)(const void *, _QWORD, void *, CGFloat, double, double, double);
  char *v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  _QWORD aBlock[5];
  _QWORD *v118;
  unint64_t v119;

  v109 = a2;
  v5 = sub_10000A66C(&qword_10009B888);
  __chkstk_darwin(v5);
  v112 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UTType(0);
  v113 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v115 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v114 = (char *)&v95 - v10;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for DispatchQoS(0);
  v106 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v105 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for Sticker.StickerType(0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v104 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject(&unk_10008B968, 24, 7);
  *(_QWORD *)(v17 + 16) = a3;
  v108 = a3;
  _Block_copy(a3);
  if (qword_10009E0E0 != -1)
    goto LABEL_26;
  while (1)
  {
    v18 = type metadata accessor for Logger(0);
    v19 = sub_10000D130(v18, (uint64_t)qword_10009E0E8);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.info.getter();
    v22 = os_log_type_enabled(v20, v21);
    v116 = v7;
    if (v22)
    {
      v7 = swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "_addStickerToStoreWithStickerIDS", (uint8_t *)v7, 2u);
      swift_slowDealloc(v7, -1, -1);
    }

    v23 = v109;
    v24 = *(void **)&v109[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingStickerMu];
    objc_msgSend(v24, "lock");
    v100 = OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingSticker;
    LODWORD(v23) = v23[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController__isAddingSticker];
    v101 = v24;
    objc_msgSend(v24, "unlock");
    if ((_DWORD)v23 == 1)
    {
      y = CGRectNull.origin.y;
      width = CGRectNull.size.width;
      height = CGRectNull.size.height;
      v28 = sub_100029520();
      v29 = swift_allocError(&type metadata for StickersParentViewController.AddStickerError, v28, 0, 0);
      *v30 = 0;
      v30[1] = 0;
      v31 = (void *)_convertErrorToNSError(_:)(v29);
      v108[2](v108, 0, v31, CGRectNull.origin.x, y, width, height);

      swift_errorRelease(v29);
      swift_release(v17, v32);
      return;
    }
    v119 = (unint64_t)&_swiftEmptyArrayStorage;
    if ((unint64_t)a1 >> 62)
    {
      v94 = a1 < 0 ? a1 : a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v33 = _CocoaArrayWrapper.endIndex.getter(v94);
    }
    else
    {
      v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
    }
    v99 = v14;
    if (!v33)
      break;
    v96 = v12;
    v97 = v11;
    v98 = v17;
    v12 = 0;
    v110 = a1;
    v111 = a1 & 0xC000000000000001;
    v11 = v113;
    while (1)
    {
      v34 = v111
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1)
          : (char *)*(id *)(a1 + 8 * v12 + 32);
      v14 = v34;
      v17 = v12 + 1;
      if (__OFADD__(v12, 1))
        break;
      v35 = objc_msgSend(v34, "type");
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

      v39 = (uint64_t)v112;
      v40 = v36;
      v41 = v116;
      UTType.init(_:)(v40, v38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v39, 1, v41) == 1)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(v119);
        sub_10002E2B4(v39, &qword_10009B888);
        v62 = CGRectNull.origin.y;
        v63 = CGRectNull.size.width;
        v64 = CGRectNull.size.height;
        v65 = objc_msgSend(v14, "type");
        v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
        v68 = v67;

        v69 = sub_100029520();
        v70 = swift_allocError(&type metadata for StickersParentViewController.AddStickerError, v69, 0, 0);
        *v71 = v66;
        v71[1] = v68;
        v72 = (void *)_convertErrorToNSError(_:)(v70);
        v108[2](v108, 0, v72, CGRectNull.origin.x, v62, v63, v64);

        swift_errorRelease(v70);
        swift_release(v98, v73);

        return;
      }
      v42 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v114, v39, v41);
      v43 = objc_msgSend(v14, "data");
      v44 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v46 = v45;

      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v115, v42, v41);
      objc_msgSend(v14, "size");
      v48 = v47;
      v50 = v49;
      v51 = objc_msgSend(v14, "role");
      if (v51)
      {
        v52 = v51;
        v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
        v55 = v54;

      }
      else
      {
        v53 = static Sticker.Representation.Role.default.getter();
        v55 = v56;
      }
      v7 = v12 == 0;
      v57 = objc_allocWithZone((Class)type metadata accessor for Sticker.Representation(0));
      v58 = (id)Sticker.Representation.init(data:uti:size:role:isPreferred:)(v44, v46, v115, v53, v55, v7, v48, v50);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v60 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v59 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v60 >= v59 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
      v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v58);
      specialized Array._endMutation()(v61);

      v11 = v113;
      (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v116);
      ++v12;
      a1 = v110;
      if (v17 == v33)
      {
        swift_bridgeObjectRelease(v110);
        v17 = v98;
        v11 = v97;
        v12 = v96;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_26:
    swift_once(&qword_10009E0E0, sub_1000181F8);
  }
  swift_bridgeObjectRelease(a1);
LABEL_24:
  v74 = v104;
  (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v104, enum case for Sticker.StickerType.userContent(_:), v103);
  v75 = v119;
  v76 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
  v77 = (void *)Sticker.init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:)(v74, v75, 0, 0xE000000000000000, 0, 0xF000000000000000, 0, 0, 0, 0, 0);
  v78 = v101;
  objc_msgSend(v101, "lock");
  v79 = v109;
  v109[v100] = 1;
  objc_msgSend(v78, "unlock");
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v80 = (void *)static OS_dispatch_queue.main.getter();
  v81 = (_QWORD *)swift_allocObject(&unk_10008B990, 48, 7);
  v81[2] = v79;
  v81[3] = v77;
  v81[4] = sub_10002D8F8;
  v81[5] = v17;
  aBlock[4] = sub_10002E338;
  v118 = v81;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008B9A8;
  v82 = _Block_copy(aBlock);
  v83 = v118;
  v84 = v79;
  v85 = v77;
  swift_retain(v17);
  v87 = swift_release(v83, v86);
  v88 = v105;
  static DispatchQoS.unspecified.getter(v87);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v89 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v90 = sub_10000A66C(&qword_10009B198);
  v91 = sub_10000D6D4();
  v92 = v99;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v90, v91, v11, v89);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v88, v92, v82);
  _Block_release(v82);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v92, v11);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v88, v107);
  swift_release(v17, v93);
}

void sub_10002AEA4(char *a1, _QWORD *a2, void (**a3)(const void *, _QWORD, void *), double a4, double a5, double a6, double a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  unint64_t v76;
  char v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  void *v89;
  uint64_t v90;
  unint64_t v91;
  id v92;
  void *v93;
  uint64_t v94;
  unint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  void (**v117)(const void *, _QWORD, void *);
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;

  v120 = a2;
  v13 = sub_10000A66C(&qword_10009B888);
  __chkstk_darwin(v13);
  v15 = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UTType(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v130 = (char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v129 = (char *)&v116 - v20;
  v119 = type metadata accessor for Sticker.StickerType(0);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v122 = (char *)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = swift_allocObject(&unk_10008B8F0, 24, 7);
  *(_QWORD *)(v121 + 16) = a3;
  v117 = a3;
  _Block_copy(a3);
  if (qword_10009E0E0 != -1)
LABEL_22:
    swift_once(&qword_10009E0E0, sub_1000181F8);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_10000D130(v22, (uint64_t)qword_10009E0E8);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "_addStickerToStoreWithUISticker:sourceRect:completion", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  v134 = (unint64_t)&_swiftEmptyArrayStorage;
  v27 = objc_msgSend(a1, "representations");
  v28 = sub_10000D5F4(0, &qword_10009B880, _UIStickerRepresentation_ptr);
  v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0)
      v67 = v29;
    else
      v67 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v29);
    v30 = _CocoaArrayWrapper.endIndex.getter(v67);
    swift_bridgeObjectRelease(v29);
    if (v30)
      goto LABEL_6;
  }
  else
  {
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v30)
    {
LABEL_6:
      v116 = a1;
      a1 = 0;
      v127 = (unint64_t)v15;
      v128 = v29 & 0xC000000000000001;
      v125 = v29;
      v126 = v17;
      v123 = v30;
      v124 = v16;
      while (1)
      {
        if (v128)
        {
          v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v29);
          v32 = a1 + 1;
          if (__OFADD__(a1, 1))
            goto LABEL_21;
        }
        else
        {
          v31 = *(id *)(v29 + 8 * (_QWORD)a1 + 32);
          v32 = a1 + 1;
          if (__OFADD__(a1, 1))
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        v33 = v31;
        v34 = objc_msgSend(v31, "type", v116);
        v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        v37 = v36;

        UTType.init(_:)(v35, v37);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
        {
          swift_bridgeObjectRelease(v29);
          swift_bridgeObjectRelease(v134);
          sub_10002E2B4((uint64_t)v15, &qword_10009B888);
          v58 = objc_msgSend(v33, "type");
          v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
          v61 = v60;

          v62 = sub_100029520();
          v63 = swift_allocError(&type metadata for StickersParentViewController.AddStickerError, v62, 0, 0);
          *v64 = v59;
          v64[1] = v61;
          v65 = (void *)_convertErrorToNSError(_:)(v63);
          v117[2](v117, 0, v65);

          swift_errorRelease(v63);
          swift_release(v121, v66);
          goto LABEL_69;
        }
        v38 = v129;
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v129, v15, v16);
        v39 = objc_msgSend(v33, "data");
        v40 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        v42 = v41;

        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v130, v38, v16);
        objc_msgSend(v33, "size");
        v44 = v43;
        v46 = v45;
        v47 = objc_msgSend(v33, "role");
        if (v47)
        {
          v48 = v47;
          v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
          v51 = v50;

        }
        else
        {
          v49 = static Sticker.Representation.Role.default.getter();
          v51 = v52;
        }
        v53 = objc_allocWithZone((Class)type metadata accessor for Sticker.Representation(0));
        v54 = (id)Sticker.Representation.init(data:uti:size:role:isPreferred:)(v40, v42, v130, v49, v51, a1 == 0, v44, v46);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v56 = *(_QWORD *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v55 = *(_QWORD *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x18);
        v29 = v125;
        if (v56 >= v55 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
        v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
        specialized Array._endMutation()(v57);

        v17 = v126;
        v16 = v124;
        (*(void (**)(char *, uint64_t))(v126 + 8))(v129, v124);
        ++a1;
        v15 = (char *)v127;
        if (v32 == (char *)v123)
        {
          swift_bridgeObjectRelease(v29);
          a1 = v116;
          goto LABEL_28;
        }
      }
    }
  }
  swift_bridgeObjectRelease(v29);
LABEL_28:
  v68 = objc_msgSend(a1, "attributionInfo", v116);
  v69 = sub_10000A66C((uint64_t *)&unk_10009B960);
  v70 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v68, &type metadata for String, v69, &protocol witness table for String);

  if (!*(_QWORD *)(v70 + 16))
  {
    v80 = 0;
    v79 = 0;
    v75 = 0;
    goto LABEL_53;
  }
  v71 = sub_1000173C4(0x64692D6D616461, 0xE700000000000000);
  if ((v72 & 1) != 0)
  {
    v73 = *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v71);
    v74 = objc_opt_self(NSNumber);
    v75 = (void *)swift_dynamicCastObjCClass(v73, v74);
    if (v75)
      swift_unknownObjectRetain(v73);
    if (*(_QWORD *)(v70 + 16))
      goto LABEL_33;
LABEL_44:
    v80 = 0;
    v79 = 0;
    goto LABEL_53;
  }
  v75 = 0;
  if (!*(_QWORD *)(v70 + 16))
    goto LABEL_44;
LABEL_33:
  v76 = sub_1000173C4(0x692D656C646E7562, 0xE900000000000064);
  if ((v77 & 1) != 0)
  {
    v133 = *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v76);
    swift_unknownObjectRetain(v133);
    v78 = swift_dynamicCast(&v131, &v133, v69, &type metadata for String, 6);
    if (v78)
      v79 = v131;
    else
      v79 = 0;
    if (v78)
      v80 = v132;
    else
      v80 = 0;
    if (!*(_QWORD *)(v70 + 16))
      goto LABEL_53;
  }
  else
  {
    v79 = 0;
    v80 = 0;
    if (!*(_QWORD *)(v70 + 16))
      goto LABEL_53;
  }
  v81 = sub_1000173C4(1701667182, 0xE400000000000000);
  if ((v82 & 1) != 0)
  {
    v83 = *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v81);
    swift_unknownObjectRetain(v83);
    swift_bridgeObjectRelease(v70);
    v133 = v83;
    v84 = swift_dynamicCast(&v131, &v133, v69, &type metadata for String, 6);
    if (v84)
      v85 = v131;
    else
      v85 = 0;
    if (v84)
      v86 = v132;
    else
      v86 = 0;
    goto LABEL_54;
  }
LABEL_53:
  swift_bridgeObjectRelease(v70);
  v85 = 0;
  v86 = 0;
LABEL_54:
  objc_allocWithZone((Class)type metadata accessor for Sticker.AttributionInfo(0));
  v129 = v75;
  v87 = (void *)Sticker.AttributionInfo.init(adamID:bundleIdentifier:name:)(v75, v79, v80, v85, v86);
  (*(void (**)(char *, _QWORD, uint64_t))(v118 + 104))(v122, enum case for Sticker.StickerType.userContent(_:), v119);
  v130 = (char *)v134;
  v88 = objc_msgSend(a1, "name");
  if (v88)
  {
    v89 = v88;
    v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
    v127 = v91;
    v128 = v90;

  }
  else
  {
    v127 = 0xE000000000000000;
    v128 = 0;
  }
  v92 = objc_msgSend(a1, "metadata");
  if (v92)
  {
    v93 = v92;
    v94 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    v125 = v95;
    v126 = v94;

  }
  else
  {
    v125 = 0xF000000000000000;
    v126 = 0;
  }
  v96 = objc_msgSend(a1, "externalURI");
  v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(v96);
  v99 = v98;

  v100 = objc_msgSend(a1, "accessibilityLabel");
  if (v100)
  {
    v101 = v100;
    v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v100);
    v104 = v103;

  }
  else
  {
    v102 = 0;
    v104 = 0;
  }
  v105 = a1;
  v106 = objc_msgSend(a1, "searchText");
  if (v106)
  {
    v107 = v106;
    v108 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
    v110 = v109;

  }
  else
  {
    v108 = 0;
    v110 = 0;
  }
  type metadata accessor for Sticker(0);
  v111 = v87;
  v33 = (void *)Sticker.__allocating_init(type:representations:name:metadata:externalURI:accessibilityName:attributionInfo:searchText:)(v122, v130, v128, v127, v126, v125, v97, v99, v102, v104, v87, v108, v110);
  v112 = Sticker.Effect.init(rawValue:)(objc_msgSend(v105, "effectType"));
  if ((v113 & 1) == 0)
    dispatch thunk of Sticker.effect.setter(v112);
  v114 = v121;
  (*(void (**)(void *, void (*)(objc_class *, uint64_t), uint64_t, double, double, double, double))((swift_isaMask & *v120) + 0x338))(v33, sub_10002D8F0, v121, a4, a5, a6, a7);
  swift_release(v114, v115);

LABEL_69:
}

id sub_10002B848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  NSURL *v15;
  void *v16;
  void *v17;
  NSString v18;
  NSString v19;
  id v20;
  id v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a4;
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000D5F4(0, &qword_10009B990, MSSticker_ptr);
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(v13), "instancesRespondToSelector:", "initWithContentsOfURL:externalURI:localizedDescription:error:"))
  {
    v14 = objc_allocWithZone((Class)MSSticker);
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a3);
    URL._bridgeToObjectiveC()(v15);
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5);
    v20 = objc_msgSend(v14, "initWithContentsOfURL:externalURI:localizedDescription:error:", v17, v18, v19, 0);

  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
    v20 = objc_allocWithZone((Class)MSSticker);
    swift_bridgeObjectRetain(a5);
    v21 = sub_100028CC8((uint64_t)v12, v24, a5);
    if (!v5)
      return v21;
  }
  return v20;
}

void sub_10002B9E8(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  void *v6;
  double v13;
  CGFloat v14;
  CGFloat v15;
  __int128 v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(__n128);
  __n128 v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];

  swift_beginAccess(&qword_10009FCE8, v28, 1, 0);
  if (!qword_10009FCE8)
  {
    *(_QWORD *)&v13 = swift_beginAccess(&xmmword_10009B770, v27, 0, 0).n128_u64[0];
    if ((byte_10009B790 & 1) == 0)
    {
      v15 = *(double *)&qword_10009B780;
      v14 = unk_10009B788;
      v16 = xmmword_10009B770;
      v17 = objc_msgSend(v6, "view", v13);
      if (v17)
      {
        v18 = v17;
        type metadata accessor for StickerCreateTransitionAnimator();
        v19 = objc_msgSend(v18, "window");

        v20 = sub_10005B4F8(a1, v19, a2, 0, 0, 0, 1, 1, a3, a4, a5, a6, *(CGFloat *)&v16, *((CGFloat *)&v16 + 1), v15, v14, (uint64_t)v6, (uint64_t)&off_10008B4E0);
        v21 = qword_10009FCE8;
        qword_10009FCE8 = v20;
        swift_release(v21, v22);
        v23 = qword_10009FCE8;
        if (qword_10009FCE8)
        {
          v24 = *(void (**)(__n128))(*(_QWORD *)qword_10009FCE8 + 520);
          v25 = swift_retain(qword_10009FCE8);
          v24(v25);
          swift_release(v23, v26);
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_10002BB8C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100024EE8(a1, a2, *(void **)(v2 + 16), v2 + 24);
}

void sub_10002BB98(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v2 = *(void **)&v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerCollectionViewControllerPresentedViewController];
  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerCollectionViewControllerPresentedViewController] = a1;
  v3 = a1;

  v4 = (void *)objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_10008BBC0, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v10[4] = sub_10002DB18;
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10000C1B4;
  v10[3] = &unk_10008BBD8;
  v6 = _Block_copy(v10);
  v7 = v11;
  v8 = v1;
  swift_release(v7, v9);
  objc_msgSend(v4, "animateWithDuration:animations:", v6, 0.2);
  _Block_release(v6);
}

void sub_10002BC78()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerCollectionViewControllerPresentedViewController];
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_stickerCollectionViewControllerPresentedViewController] = 0;

  v2 = (void *)objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_10008BB70, 24, 7);
  *(_QWORD *)(v3 + 16) = v0;
  v8[4] = sub_10002DB10;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10000C1B4;
  v8[3] = &unk_10008BB88;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v0;
  swift_release(v5, v7);
  objc_msgSend(v2, "animateWithDuration:animations:", v4, 0.2);
  _Block_release(v4);
}

void sub_10002BD54(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  void *v10;
  double v21;
  CGFloat v22;
  CGFloat v23;
  __int128 v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(__n128);
  __n128 v33;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[24];

  swift_beginAccess(&qword_10009FCE8, v36, 1, 0);
  if (!qword_10009FCE8)
  {
    *(_QWORD *)&v21 = swift_beginAccess(&xmmword_10009B770, v35, 0, 0).n128_u64[0];
    if ((byte_10009B790 & 1) == 0)
    {
      v23 = *(double *)&qword_10009B780;
      v22 = unk_10009B788;
      v24 = xmmword_10009B770;
      v25 = objc_msgSend(v10, "view", v21);
      if (v25)
      {
        v26 = v25;
        type metadata accessor for StickerCreateTransitionAnimator();
        v27 = objc_msgSend(v26, "window");

        v28 = sub_10005B4F8(a1, v27, a2, a3, a4, a5, a6 & 1, 0, a7, a8, a9, a10, *(CGFloat *)&v24, *((CGFloat *)&v24 + 1), v23, v22, (uint64_t)v10, (uint64_t)&off_10008B4E0);
        v29 = qword_10009FCE8;
        qword_10009FCE8 = v28;
        swift_release(v29, v30);
        v31 = qword_10009FCE8;
        if (qword_10009FCE8)
        {
          v32 = *(void (**)(__n128))(*(_QWORD *)qword_10009FCE8 + 528);
          v33 = swift_retain(qword_10009FCE8);
          v32(v33);
          swift_release(v31, v34);
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void (*sub_10002BF1C())(_QWORD *)
{
  uint64_t v0;
  _QWORD *v1;
  void (*result)(_QWORD *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD **)(v0 + 16);
  result = (void (*)(_QWORD *))(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x118))();
  if (result)
  {
    v4 = (uint64_t)result;
    v5 = v3;
    result(v1);
    return (void (*)(_QWORD *))sub_100029324(v4, v5);
  }
  return result;
}

void sub_10002BF8C()
{
  uint64_t v0;
  void *Strong;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  objc_msgSend(Strong, "_didRemoveStickerPreview");

}

void sub_10002BFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  NSString v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE v11[24];

  v1 = *(_QWORD *)(v0 + 16) + 16;
  swift_beginAccess(v1, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = String._bridgeToObjectiveC()();
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "requestPresentationWithStickerType:identifier:", v4, v5);

    if (*((_BYTE *)v3 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType) == 7)
    {
      if (qword_10009E0E0 != -1)
        swift_once(&qword_10009E0E0, sub_1000181F8);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_10000D130(v6, (uint64_t)qword_10009E0E8);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "No active controller type yet; not presenting", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

    }
    else
    {
      sub_100020BE4();
    }

  }
}

id sub_10002C154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  id result;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  _QWORD aBlock[5];
  _QWORD *v34;
  _BYTE v35[24];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)objc_opt_self(AVTUIControllerPresentation);
  v13 = objc_msgSend(v12, "pendingGlobalPresentation");
  v14 = objc_msgSend(v13, "modalMessagesController");

  objc_msgSend(v14, "dismiss");
  result = objc_msgSend(v12, "setPendingGlobalPresentation:", 0);
  if (a3)
  {
    swift_bridgeObjectRetain(a3);
    v16 = sub_1000153B0();
    swift_beginAccess(v16, v35, 0, 0);
    v17 = *v16;
    v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)v17 + 376);
    v19 = swift_retain(v17);
    v20 = v18(a2, a3, 1, v19);
    swift_release(v17, v21);
    swift_unknownObjectRelease(v20);
    if (v20)
    {
      sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
      v22 = (void *)static OS_dispatch_queue.main.getter();
      v23 = swift_allocObject(&unk_10008B060, 24, 7);
      swift_unknownObjectWeakInit(v23 + 16, v31[1]);
      v24 = (_QWORD *)swift_allocObject(&unk_10008BB20, 40, 7);
      v24[2] = v23;
      v24[3] = a2;
      v24[4] = a3;
      aBlock[4] = sub_10002DA80;
      v34 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10000C1B4;
      aBlock[3] = &unk_10008BB38;
      v25 = _Block_copy(aBlock);
      v27 = swift_release(v34, v26);
      static DispatchQoS.unspecified.getter(v27);
      aBlock[0] = _swiftEmptyArrayStorage;
      v28 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v29 = sub_10000A66C(&qword_10009B198);
      v30 = sub_10000D6D4();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v5, v28);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v25);
      _Block_release(v25);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      return (id)swift_bridgeObjectRelease(a3);
    }
  }
  return result;
}

void sub_10002C44C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t aBlock[6];
  uint64_t v37;
  uint64_t v38;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a2, "identifier");
  if (!v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonPluginIdentifierAppStore);
    v14 = v17;
    goto LABEL_10;
  }
  v8 = v7;
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v11 = v10;

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonPluginIdentifierAppStore);
  v14 = v13;
  if (!v11)
  {
LABEL_10:
    swift_bridgeObjectRelease(v14);
    goto LABEL_11;
  }
  if (v9 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease_n(v11, 2, v12);
    goto LABEL_18;
  }
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v14);
  if ((v16 & 1) == 0)
  {
LABEL_11:
    if (qword_10009E0E0 != -1)
      swift_once(&qword_10009E0E0, sub_1000181F8);
    v18 = sub_10000D130(v3, (uint64_t)qword_10009E0E8);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v18, v3);
    v19 = a2;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v20, v21))
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return;
    }
    v35 = v4;
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    aBlock[0] = v34;
    *(_DWORD *)v22 = 136315138;
    v23 = objc_msgSend(v19, "identifier");
    if (v23)
    {
      v24 = v23;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v27 = v26;

      v37 = sub_10000C99C(v25, v27, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v22 + 4, v22 + 12);

      swift_bridgeObjectRelease(v27);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Not requesting non-app store plugin: %s", v22, 0xCu);
      v28 = v34;
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v3);
      return;
    }

    __break(1u);
    goto LABEL_21;
  }
LABEL_18:
  v29 = objc_msgSend((id)objc_opt_self(_MSStickerSendManager), "sharedInstance");
  v30 = objc_msgSend(a2, "identifier");
  if (v30)
  {
    v31 = v30;
    aBlock[4] = (uint64_t)sub_100026EA0;
    aBlock[5] = 0;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10000C1B4;
    aBlock[3] = (uint64_t)&unk_10008BAE8;
    v32 = _Block_copy(aBlock);
    objc_msgSend(v29, "showBrowserForPluginIdentifier:style:completion:", v31, 2, v32);
    _Block_release(v32);

    return;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_10002C7DC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, _QWORD, uint64_t, uint64_t);
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  char v30;

  v2 = sub_10000A66C(&qword_10009AFF0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)v29 - v6;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v15 = (char *)v29 - v14;
  if (!a1)
  {
    __break(1u);
    return result;
  }
  v16 = objc_msgSend(a1, "fileURL");
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_10002E2B4((uint64_t)v7, &qword_10009AFF0);
  }
  v17 = v16;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v16);

  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v18(v7, v12, v8);
  v19 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56);
  v19(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_10002E2B4((uint64_t)v7, &qword_10009AFF0);
  v18(v15, v7, v8);
  v20 = objc_msgSend(a1, "pluginBundleID");
  if (v20)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v5, v15, v8);
    v25 = ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v19)(v5, 0, 1, v8);
    v26 = URL.absoluteString.getter(v25);
    v28 = v27;
    memset(v29, 0, sizeof(v29));
    v30 = 1;
    sub_10002718C((uint64_t)v5, 0, 0xE000000000000000, v22, v24, v26, v27, (uint64_t)v29);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v28);
    sub_10002E2B4((uint64_t)v5, &qword_10009AFF0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
}

uint64_t sub_10002CA50(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002CA90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  char v30;

  v28 = a2;
  v5 = sub_10000A66C(&qword_10009AFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v27 - v9;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v13);
  v18 = (char *)&v27 - v17;
  if (!a1)
  {
    __break(1u);
    return result;
  }
  v19 = objc_msgSend(a1, "fileURL");
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    return sub_10002E2B4((uint64_t)v10, &qword_10009AFF0);
  }
  v20 = v19;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v19);

  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v21(v10, v15, v11);
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
  v22(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_10002E2B4((uint64_t)v10, &qword_10009AFF0);
  v21(v18, v10, v11);
  if (a3)
  {
    if ((objc_msgSend(a1, "isSticker") & 1) != 0)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v18, v11);
      v23 = ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v22)(v8, 0, 1, v11);
      v24 = URL.absoluteString.getter(v23);
      v26 = v25;
      memset(v29, 0, sizeof(v29));
      v30 = 1;
      sub_10002718C((uint64_t)v8, 0, 0xE000000000000000, v28, a3, v24, v25, (uint64_t)v29);
      swift_bridgeObjectRelease(v26);
      sub_10002E2B4((uint64_t)v8, &qword_10009AFF0);
    }
    else
    {
      sub_100027854();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v11);
}

uint64_t sub_10002CCFC(void *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  char v22;

  v2 = sub_10000A66C(&qword_10009AFF0);
  result = __chkstk_darwin(v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v6 = objc_msgSend(a1, "fileURL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v6);

    v7 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
    v8 = objc_msgSend(a1, "accessibilityLabel");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v12 = objc_msgSend(a1, "stickerPackGUID");
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    v16 = objc_msgSend(a1, "externalURI");
    if (v16)
    {
      v17 = v16;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v20 = v19;

    }
    else
    {
      v18 = 0;
      v20 = 0;
    }
    memset(v21, 0, sizeof(v21));
    v22 = 1;
    sub_10002718C((uint64_t)v5, v9, v11, v13, v15, v18, v20, (uint64_t)v21);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v20);
    return sub_10002E2B4((uint64_t)v5, &qword_10009AFF0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10002CEC0()
{
  unint64_t result;

  result = qword_10009B9B8;
  if (!qword_10009B9B8)
  {
    result = swift_getWitnessTable(&unk_100078700, &type metadata for StickersParentViewController.StickerChildControllerType);
    atomic_store(result, (unint64_t *)&qword_10009B9B8);
  }
  return result;
}

uint64_t sub_10002CF04()
{
  return type metadata accessor for StickersParentViewController(0);
}

void sub_10002CF0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[22];

  v4[0] = "\b";
  v4[1] = &unk_100078868;
  v4[2] = &unk_100078880;
  v4[3] = &unk_100078868;
  v4[4] = &unk_100078868;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = &unk_100078898;
  v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[10] = "\b";
  v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[12] = "\b";
  v4[13] = "\b";
  v4[14] = "\b";
  v4[15] = "\b";
  v4[16] = &unk_100078898;
  v4[17] = "\b";
  sub_10002CFE8(319);
  if (v3 <= 0x3F)
  {
    v4[18] = *(_QWORD *)(v2 - 8) + 64;
    v4[19] = "\b";
    v4[20] = "\b";
    v4[21] = &unk_1000788B0;
    swift_updateClassMetadata2(a1, 256, 22, v4, a1 + 80);
  }
}

void sub_10002CFE8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10009B9E8)
  {
    v2 = type metadata accessor for StickerPackStrip(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10009B9E8);
  }
}

uint64_t getEnumTagSinglePayload for StickersParentViewController.StickerChildControllerType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StickersParentViewController.StickerChildControllerType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_10002D118 + 4 * byte_1000786E3[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_10002D14C + 4 * byte_1000786DE[v4]))();
}

uint64_t sub_10002D14C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002D154(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002D15CLL);
  return result;
}

uint64_t sub_10002D168(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002D170);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_10002D174(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002D17C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10002D188(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for StickersParentViewController.StickerChildControllerType()
{
  return &type metadata for StickersParentViewController.StickerChildControllerType;
}

_QWORD *initializeBufferWithCopyOfBuffer for StickersParentViewController.AddStickerError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for StickersParentViewController.AddStickerError(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for StickersParentViewController.AddStickerError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for StickersParentViewController.AddStickerError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickersParentViewController.AddStickerError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StickersParentViewController.AddStickerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_10002D2E8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_10002D300(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StickersParentViewController.AddStickerError()
{
  return &type metadata for StickersParentViewController.AddStickerError;
}

void type metadata accessor for MSMessagesAppPresentationStyle(uint64_t a1)
{
  sub_100011004(a1, (unint64_t *)&unk_10009BA50, (uint64_t)&unk_10008B678);
}

uint64_t sub_10002D348()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = (_QWORD *)swift_task_alloc(dword_10009BA6C);
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_10002D3C8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10009BA68
                                                                              + dword_10009BA68))(v2, v3, v4, v5, v6);
}

uint64_t sub_10002D3C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10002D410()
{
  return sub_10002E018((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10002D424()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_10009BA7C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10002E33C;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10009BA78 + dword_10009BA78))(v2, v3, v4);
}

uint64_t sub_10002D49C()
{
  return sub_10002E018((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10002D4B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10009BA8C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10002E33C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10009BA88 + dword_10009BA88))(a1, v4, v5, v6);
}

uint64_t sub_10002D534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10009BA9C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10002D3C8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10009BA98 + dword_10009BA98))(a1, v4);
}

uint64_t sub_10002D5A8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10002D5EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = (_QWORD *)swift_task_alloc(dword_10009BAAC);
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_10002E33C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10009BAA8
                                                                              + dword_10009BAA8))(v2, v3, v4, v5, v6);
}

uint64_t sub_10002D66C()
{
  return sub_10002E018((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10002D680()
{
  return sub_10002E018((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10002D694()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10002D6D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_10009BACC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10002E33C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10009BAC8 + dword_10009BAC8))(v2, v3, v5, v4);
}

uint64_t sub_10002D748()
{
  return sub_10002E018((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10002D75C()
{
  return sub_10002E018((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10002D770()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002D794()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10002D7A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 57, 7);
}

void sub_10002D7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100024A3C(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_10002D7D0()
{
  unint64_t result;

  result = qword_10009BAE8;
  if (!qword_10009BAE8)
  {
    result = swift_getWitnessTable(&unk_100079708, &type metadata for StickerProvidingViewController.ControllerType);
    atomic_store(result, (unint64_t *)&qword_10009BAE8);
  }
  return result;
}

uint64_t sub_10002D814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StickerPackStrip(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C((uint64_t *)&unk_10009B820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StickerPackStrip(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D8E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_10002D8F0(objc_class *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10001EC40(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_10002D8F8(objc_class *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;

  sub_10001EA6C(a1, a2, *(_QWORD *)(v6 + 16), a3, a4, a5, a6);
}

uint64_t sub_10002D904()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 40), v1);
  return swift_deallocObject(v0, 48, 7);
}

void sub_10002D938(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;

  sub_10001DEC8(a1, *(_QWORD *)(v5 + 16), a2, a3, a4, a5);
}

uint64_t sub_10002D940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 24), a2);
  return swift_deallocObject(v2, 32, 7);
}

uint64_t sub_10002D964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 16))(a2);
}

uint64_t sub_10002D988()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10002D9BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_10009BAFC);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10002E33C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10009BAF8 + dword_10009BAF8))(v2, v3, v4);
}

uint64_t sub_10002DA28()
{
  return sub_10002E018((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10002DA3C()
{
  return sub_10002E018((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10002DA54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, 40, 7);
}

void sub_10002DA80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = v1 + 16;
  swift_beginAccess(v1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100026B9C(v2, v3);

  }
}

uint64_t sub_10002DAEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10002DB10()
{
  sub_10002DB20(1.0);
}

void sub_10002DB18()
{
  sub_10002DB20(0.0);
}

void sub_10002DB20(double a1)
{
  uint64_t v1;
  _QWORD *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *(_QWORD **)(v1 + 16);
  v4 = sub_100019554();
  v5 = objc_msgSend(v4, "view");

  if (!v5)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  objc_msgSend(v5, "setAlpha:", a1);

  v6 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x100))();
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "view");

    if (v8)
    {
      objc_msgSend(v8, "setAlpha:", a1);

      return;
    }
    goto LABEL_7;
  }
}

uint64_t sub_10002DC10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);

  return swift_deallocObject(v2, 80, 7);
}

void sub_10002DC44()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void **v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  _BYTE v17[24];
  _QWORD v18[4];
  char v19;

  v1 = (void *)v0[3];
  v2 = v0[9];
  v3 = v0[2] + 16;
  swift_beginAccess(v3, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if (objc_msgSend(v1, "respondsToSelector:", "insertSticker:withSourceFrame:completionHandler:")
      && (sub_1000292DC((uint64_t)(v0 + 4), (uint64_t)v18), (v19 & 1) == 0))
    {
      v7 = *(double *)v18;
      v8 = *(double *)&v18[1];
      v9 = *(double *)&v18[2];
      v10 = *(double *)&v18[3];
      v15 = sub_1000253F0;
      v16 = 0;
      v11 = _NSConcreteStackBlock;
      v12 = 1107296256;
      v13 = sub_10001021C;
      v14 = &unk_10008BC78;
      v6 = _Block_copy(&v11);
      objc_msgSend(v1, "insertSticker:withSourceFrame:completionHandler:", v2, v6, v7, v8, v9, v10);
    }
    else
    {
      v15 = sub_1000253F0;
      v16 = 0;
      v11 = _NSConcreteStackBlock;
      v12 = 1107296256;
      v13 = sub_10001021C;
      v14 = &unk_10008BC50;
      v6 = _Block_copy(&v11);
      objc_msgSend(v1, "insertSticker:completionHandler:", v2, v6);
    }
    _Block_release(v6);
    objc_msgSend(v5, "requestPresentationStyleExpanded:", 0);

  }
}

unint64_t sub_10002DDD4()
{
  unint64_t result;

  result = qword_10009BB18;
  if (!qword_10009BB18)
  {
    result = swift_getWitnessTable(&unk_1000796A0, &type metadata for StickerProvidingViewController.ControllerType);
    atomic_store(result, (unint64_t *)&qword_10009BB18);
  }
  return result;
}

uint64_t sub_10002DE18()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10002DE38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 16, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  swift_errorRelease(v3);
  return swift_errorRetain(a1);
}

uint64_t sub_10002DE84()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002DEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v2 + 16), a2);
  swift_release(*(_QWORD *)(v2 + 24), v3);
  return swift_deallocObject(v2, 32, 7);
}

uint64_t sub_10002DED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[24];

  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(_QWORD *)(v4 + 24);
  swift_beginAccess(v9 + 16, v15, 1, 0);
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  swift_bridgeObjectRelease(v11);
  swift_beginAccess(v10 + 16, &v14, 1, 0);
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  return swift_bridgeObjectRelease(v12);
}

uint64_t sub_10002DF78()
{
  return sub_10002E018((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

_QWORD *sub_10002DF8C()
{
  uint64_t v0;

  return sub_10002339C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t iMessageApp.extensionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t sub_10002DFC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE **sub_10002DFD8(_BYTE **result)
{
  uint64_t v1;
  _BYTE *v2;

  v2 = *result;
  *v2 = *(_BYTE *)(v1 + 16);
  *result = v2 + 1;
  return result;
}

uint64_t sub_10002DFEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10002DFFC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1000290CC(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_10002E004()
{
  return sub_10002E018((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10002E018(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 40));
  return swift_deallocObject(v2, 48, 7);
}

void sub_10002E054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  NSString v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  _BYTE v15[24];

  v1 = *(char *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 16) + 16;
  swift_beginAccess(v3, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD *)&aThirdparphotos[8 * v1 + 16];
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    if (v2)
      v8 = String._bridgeToObjectiveC()();
    else
      v8 = 0;
    objc_msgSend(v5, "requestPresentationWithStickerType:identifier:", v7, v8);

    if (*((_BYTE *)v5 + OBJC_IVAR____TtC22StickersUltraExtension28StickersParentViewController_activeControllerType) == 7)
    {
      if (qword_10009E0E0 != -1)
        swift_once(&qword_10009E0E0, sub_1000181F8);
      v9 = type metadata accessor for Logger(0);
      v10 = sub_10000D130(v9, (uint64_t)qword_10009E0E8);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "No active controller type yet; not presenting", v13, 2u);
        swift_slowDealloc(v13, -1, -1);
      }

    }
    else
    {
      sub_100020BE4();
    }
    v14 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v14, "removeObserver:name:object:", v5, CKBrowserSelectionControllerReloadedInstallationsNotification, 0);

  }
}

uint64_t sub_10002E23C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000A66C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002E280(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_10002E2B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_10000A66C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002E2F0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_10002E490()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009E448);
  sub_10000D130(v0, (uint64_t)qword_10009E448);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD000000000000010, 0x8000000100074A40);
}

void *sub_10002E514()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_keyline);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_keyline, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_10002E560(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_keyline);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_10002E5B0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_keyline, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_10002E5F4()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_delegate);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_delegate, v3, 0, 0);
  return swift_unknownObjectRetain(*v1);
}

uint64_t sub_10002E63C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_delegate);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_unknownObjectRelease(v4);
}

uint64_t (*sub_10002E68C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_delegate, a1, 33, 0);
  return j_j__swift_endAccess;
}

double sub_10002E6D0@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

void sub_10002E6E4()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  void *v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  Class v89;
  id v90;
  void *v91;
  _QWORD *v92;
  id v93;
  NSString v94;
  _QWORD aBlock[5];
  uint64_t v96;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
    goto LABEL_47;
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  v4 = OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_textView;
  v5 = *(void **)&v0[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_textView];
  if (v5)
  {
    objc_msgSend(v5, "removeFromSuperview");
    v6 = *(void **)&v0[v4];
    if (!v6)
      goto LABEL_8;
    goto LABEL_4;
  }
  v7 = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  v8 = *(void **)&v0[v4];
  *(_QWORD *)&v0[v4] = v7;

  v9 = *(void **)&v0[v4];
  if (v9)
  {
    objc_msgSend(v9, "setHidden:", 1);
    v10 = *(void **)&v0[v4];
    if (v10)
    {
      objc_msgSend(v10, "setKeyboardType:", 124);
      v6 = *(void **)&v0[v4];
      if (v6)
LABEL_4:
        objc_msgSend(v6, "setDelegate:", v0);
    }
  }
LABEL_8:
  v11 = objc_msgSend(v0, "view");
  if (!v11)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (!*(_QWORD *)&v0[v4])
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v12 = v11;
  objc_msgSend(v11, "addSubview:");

  v13 = (void *)objc_opt_self(NSNotificationCenter);
  v14 = objc_msgSend(v13, "defaultCenter");
  v15 = UIKeyboardBeganTouchEmojiNotification;
  v16 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v17 = swift_allocObject(&unk_10008BF78, 24, 7);
  *(_QWORD *)(v17 + 16) = v0;
  aBlock[4] = sub_10002F018;
  v96 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100017018;
  aBlock[3] = &unk_10008BF90;
  v18 = _Block_copy(aBlock);
  v19 = v96;
  v20 = v0;
  swift_release(v19, v21);
  v22 = objc_msgSend(v14, "addObserverForName:object:queue:usingBlock:", v15, 0, v16, v18);
  _Block_release(v18);
  swift_unknownObjectRelease(v22);

  v23 = OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_keyboardViewController;
  v24 = *(void **)&v20[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_keyboardViewController];
  if (v24)
  {
    v25 = objc_msgSend(v24, "view");
    if (!v25)
    {
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    v26 = v25;
    v27 = *(void **)&v20[v23];
    if (!v27)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v28 = objc_msgSend(v27, "view");
    if (!v28)
    {
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    v29 = v28;
    isa = (Class)objc_msgSend(v28, "constraints");

    if (!isa)
    {
      v31 = sub_10000D5F4(0, (unint64_t *)&qword_10009B0D0, NSLayoutConstraint_ptr);
      v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v31);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v32);
    }
    objc_msgSend(v26, "removeConstraints:", isa);

    v33 = *(void **)&v20[v23];
    if (v33)
    {
      objc_msgSend(v33, "removeFromParentViewController");
      v34 = *(void **)&v20[v23];
      if (v34)
      {
        v35 = objc_msgSend(v34, "view");
        if (!v35)
        {
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
        v36 = v35;
        objc_msgSend(v35, "removeFromSuperview");
LABEL_28:

        if (*(_QWORD *)&v20[v23])
        {
          objc_msgSend(v20, "addChildViewController:");
          v44 = objc_msgSend(v20, "view");
          if (v44)
          {
            v45 = v44;
            v46 = *(void **)&v20[v23];
            if (v46)
            {
              v47 = objc_msgSend(v46, "view");
              if (v47)
              {
                v48 = v47;
                objc_msgSend(v45, "addSubview:", v47);

                v49 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
                v50 = swift_allocObject(v49, 64, 7);
                *(_OWORD *)(v50 + 16) = xmmword_100078360;
                v51 = *(void **)&v20[v23];
                if (v51)
                {
                  v52 = objc_msgSend(v51, "view");
                  if (v52)
                  {
                    v53 = v52;
                    v54 = objc_msgSend(v52, "leftAnchor");

                    v55 = objc_msgSend(v20, "view");
                    if (v55)
                    {
                      v56 = v55;
                      v57 = objc_msgSend(v55, "safeAreaLayoutGuide");

                      v58 = objc_msgSend(v57, "leftAnchor");
                      v59 = objc_msgSend(v54, "constraintEqualToAnchor:", v58);

                      *(_QWORD *)(v50 + 32) = v59;
                      v60 = *(void **)&v20[v23];
                      if (v60)
                      {
                        v61 = objc_msgSend(v60, "view");
                        if (v61)
                        {
                          v62 = v61;
                          v63 = objc_msgSend(v61, "rightAnchor");

                          v64 = objc_msgSend(v20, "view");
                          if (v64)
                          {
                            v65 = v64;
                            v66 = objc_msgSend(v64, "safeAreaLayoutGuide");

                            v67 = objc_msgSend(v66, "rightAnchor");
                            v68 = objc_msgSend(v63, "constraintEqualToAnchor:", v67);

                            *(_QWORD *)(v50 + 40) = v68;
                            v69 = *(void **)&v20[v23];
                            if (v69)
                            {
                              v70 = objc_msgSend(v69, "view");
                              if (v70)
                              {
                                v71 = v70;
                                v72 = objc_msgSend(v70, "topAnchor");

                                v73 = objc_msgSend(v20, "view");
                                if (v73)
                                {
                                  v74 = v73;
                                  v75 = objc_msgSend(v73, "safeAreaLayoutGuide");

                                  v76 = objc_msgSend(v75, "topAnchor");
                                  v77 = objc_msgSend(v72, "constraintEqualToAnchor:", v76);

                                  *(_QWORD *)(v50 + 48) = v77;
                                  v78 = *(void **)&v20[v23];
                                  if (v78)
                                  {
                                    v79 = objc_msgSend(v78, "view");
                                    if (v79)
                                    {
                                      v80 = v79;
                                      v81 = objc_msgSend(v79, "bottomAnchor");

                                      v82 = objc_msgSend(v20, "view");
                                      if (v82)
                                      {
                                        v83 = v82;
                                        v84 = (void *)objc_opt_self(NSLayoutConstraint);
                                        v85 = objc_msgSend(v83, "bottomAnchor");

                                        v86 = objc_msgSend(v81, "constraintEqualToAnchor:", v85);
                                        *(_QWORD *)(v50 + 56) = v86;
                                        aBlock[0] = v50;
                                        specialized Array._endMutation()(v87);
                                        v88 = aBlock[0];
                                        sub_10000D5F4(0, (unint64_t *)&qword_10009B0D0, NSLayoutConstraint_ptr);
                                        v89 = Array._bridgeToObjectiveC()().super.isa;
                                        swift_bridgeObjectRelease(v88);
                                        objc_msgSend(v84, "activateConstraints:", v89);

                                        v90 = objc_msgSend(v20, "view");
                                        if (v90)
                                        {
                                          v91 = v90;
                                          type metadata accessor for KeylineView();
                                          v92 = sub_100046D0C(v91);
                                          (*(void (**)(_QWORD *))((swift_isaMask & *(_QWORD *)v20) + 0x88))(v92);
                                          v93 = objc_msgSend(v13, "defaultCenter");
                                          v94 = String._bridgeToObjectiveC()();
                                          objc_msgSend(v93, "addObserver:selector:name:object:", v20, "keyboardScroll:", v94, 0);

                                          return;
                                        }
                                        goto LABEL_65;
                                      }
LABEL_64:
                                      __break(1u);
LABEL_65:
                                      __break(1u);
                                      goto LABEL_66;
                                    }
LABEL_63:
                                    __break(1u);
                                    goto LABEL_64;
                                  }
LABEL_62:
                                  __break(1u);
                                  goto LABEL_63;
                                }
LABEL_61:
                                __break(1u);
                                goto LABEL_62;
                              }
LABEL_60:
                              __break(1u);
                              goto LABEL_61;
                            }
LABEL_59:
                            __break(1u);
                            goto LABEL_60;
                          }
LABEL_58:
                          __break(1u);
                          goto LABEL_59;
                        }
LABEL_57:
                        __break(1u);
                        goto LABEL_58;
                      }
LABEL_56:
                      __break(1u);
                      goto LABEL_57;
                    }
LABEL_55:
                    __break(1u);
                    goto LABEL_56;
                  }
LABEL_54:
                  __break(1u);
                  goto LABEL_55;
                }
LABEL_53:
                __break(1u);
                goto LABEL_54;
              }
LABEL_52:
              __break(1u);
              goto LABEL_53;
            }
LABEL_51:
            __break(1u);
            goto LABEL_52;
          }
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
      }
    }
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v37 = objc_msgSend(objc_allocWithZone((Class)UIKeyboardViewController), "initWithServiceRole:", 0);
  v38 = *(void **)&v20[v23];
  *(_QWORD *)&v20[v23] = v37;

  v39 = *(void **)&v20[v23];
  if (!v39)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (objc_msgSend(v39, "respondsToSelector:", "setResizable:"))
  {
    v40 = *(void **)&v20[v23];
    if (!v40)
      goto LABEL_46;
    objc_msgSend(v40, "setResizable:", 1);
  }
  v41 = *(void **)&v20[v23];
  if (!v41)
    goto LABEL_46;
  objc_msgSend(v41, "setTextInputView:", *(_QWORD *)&v0[v4]);
  v42 = *(void **)&v20[v23];
  if (!v42)
    goto LABEL_46;
  v43 = objc_msgSend(v42, "view");
  if (v43)
  {
    v36 = v43;
    objc_msgSend(v43, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    goto LABEL_28;
  }
LABEL_71:
  __break(1u);
}

uint64_t sub_10002EFF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10002F018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD v19[2];
  id v20[5];
  __int128 v21;
  __int128 v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = Notification.userInfo.getter();
  if (!v2)
  {
    v21 = 0u;
    v22 = 0u;
LABEL_10:
    sub_100011988((uint64_t)&v21);
    goto LABEL_11;
  }
  v3 = v2;
  v19[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardBeganTouchEmojiNotificationFrameKey);
  v19[1] = v4;
  AnyHashable.init<A>(_:)(v20, v19, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v5 = sub_10002913C((uint64_t)v20), (v6 & 1) != 0))
  {
    sub_10000D4C4(*(_QWORD *)(v3 + 56) + 32 * v5, (uint64_t)&v21);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_10002E280((uint64_t)v20);
  if (!*((_QWORD *)&v22 + 1))
    goto LABEL_10;
  v7 = sub_10000D5F4(0, &qword_10009B418, NSValue_ptr);
  if ((swift_dynamicCast(v20, &v21, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
  {
LABEL_11:
    v17 = 1;
    v10 = 0;
    v12 = 0;
    v14 = 0;
    v16 = 0;
    goto LABEL_12;
  }
  v8 = v20[0];
  objc_msgSend(v20[0], "CGRectValue");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v17 = 0;
LABEL_12:
  v18 = v1 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_mostRecentlySelectedFrame;
  *(_QWORD *)v18 = v10;
  *(_QWORD *)(v18 + 8) = v12;
  *(_QWORD *)(v18 + 16) = v14;
  *(_QWORD *)(v18 + 24) = v16;
  *(_BYTE *)(v18 + 32) = v17;
}

uint64_t sub_10002F184(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002F194(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

void sub_10002F1D0()
{
  void *v0;
  id v1;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for EmojiViewController();
  objc_msgSendSuper2(&v3, "viewWillLayoutSubviews");
  v1 = objc_msgSend((id)objc_opt_self(UIKeyboardImpl), "activeInstance");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "clearAnimations");

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for EmojiViewController()
{
  return objc_opt_self(_TtC22StickersUltraExtension19EmojiViewController);
}

void sub_10002F2EC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  id v8;
  float v9;
  float v10;
  _QWORD *v11;
  void *v12;
  id v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[5];
  char v17[32];

  v1 = v0;
  v2 = Notification.userInfo.getter();
  if (!v2)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  v3 = v2;
  strcpy(v17, "contentOffsetY");
  v17[15] = -18;
  AnyHashable.init<A>(_:)(v16, v17, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_10002913C((uint64_t)v16), (v5 & 1) != 0))
  {
    sub_10000D4C4(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_11;
  sub_10002E280((uint64_t)v16);
  sub_1000119C8(&v14, v17);
  v6 = sub_10000D5F4(0, &qword_10009BBD0, NSNumber_ptr);
  swift_dynamicCast(&v13, v17, (char *)&type metadata for Any + 8, v6, 7);
  v7 = v13;
  v8 = objc_msgSend(v13, "floatValue");
  v10 = v9;
  v11 = (_QWORD *)(*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x80))(v8);
  if (v11)
  {
    v12 = v11;
    (*(void (**)(double))((swift_isaMask & *v11) + 0x58))(v10);

  }
}

id sub_10002F500(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v5;
  NSString v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_keyline] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_textView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_keyboardViewController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_delegate] = 0;
  v5 = &v3[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_mostRecentlySelectedFrame];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v5[32] = 1;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for EmojiViewController();
  v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

id sub_10002F624(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_keyline] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_textView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_keyboardViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_delegate] = 0;
  v3 = &v1[OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_mostRecentlySelectedFrame];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v3[32] = 1;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for EmojiViewController();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id sub_10002F6E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10002F768(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  NSString v24;
  _QWORD v25[5];
  _QWORD *v26;

  v3 = objc_msgSend(a1, "text");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

    v8 = sub_10002F944(v5, v7);
    v10 = v9;
    swift_bridgeObjectRelease(v7);
    if (v10)
    {
      v11 = objc_msgSend((id)objc_opt_self(TUIEmojiUpscaler), "sharedInstance");
      v12 = sub_10000A66C(&qword_10009BBE0);
      v13 = swift_allocObject(v12, 48, 7);
      *(_OWORD *)(v13 + 16) = xmmword_100078550;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      v25[0] = v13;
      swift_bridgeObjectRetain(v10);
      v14 = sub_10000A66C(&qword_10009BBE8);
      v15 = sub_10002FF20();
      String.init<A>(_:)(v25, v14, v15);
      v17 = v16;
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      v19 = (_QWORD *)swift_allocObject(&unk_10008BFC8, 40, 7);
      v19[2] = v1;
      v19[3] = v8;
      v19[4] = v10;
      v25[4] = sub_10002FF98;
      v26 = v19;
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 1107296256;
      v25[2] = sub_10002FE3C;
      v25[3] = &unk_10008BFE0;
      v20 = _Block_copy(v25);
      v21 = v26;
      v22 = v1;
      swift_release(v21, v23);
      objc_msgSend(v11, "generateEmoji:completion:", v18, v20);
      _Block_release(v20);

      v24 = String._bridgeToObjectiveC()();
      objc_msgSend(a1, "setText:", v24);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10002F944(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v5 = 11;
  v6 = String.index(before:)(v5 | (v2 << 16), a1, a2);
  return String.subscript.getter(v6, a1, a2);
}

double sub_10002F9BC(void *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint8_t *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t (*v31)(void);
  void *v32;
  void *v33;
  unsigned int v34;
  uint64_t v35;
  double *v36;
  void *v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  void *v43;
  char *v44;
  double result;
  uint64_t *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = a5;
  v9 = type metadata accessor for Sticker.StickerType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &unk_10009E000;
  if (a2)
  {
    v49 = a4;
    swift_errorRetain(a2);
    if (qword_10009E440 != -1)
      swift_once(&qword_10009E440, sub_10002E490);
    v14 = type metadata accessor for Logger(0);
    sub_10000D130(v14, (uint64_t)qword_10009E448);
    swift_errorRetain(a2);
    v15 = swift_errorRetain(a2);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v47 = a1;
      v18 = swift_slowAlloc(12, -1);
      v48 = v10;
      v19 = (uint8_t *)v18;
      v46 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v19 = 138412290;
      swift_errorRetain(a2);
      v20 = _swift_stdlib_bridgeErrorToNSError(a2);
      v51 = v20;
      v13 = (_QWORD *)&unk_10009E000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v19 + 4, v19 + 12);
      v21 = v46;
      *v46 = v20;
      a1 = v47;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Can not generate emoji %@", v19, 0xCu);
      v22 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
      swift_arrayDestroy(v21, 1, v22);
      swift_slowDealloc(v21, -1, -1);
      v23 = v19;
      v10 = v48;
      swift_slowDealloc(v23, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
    a4 = v49;
  }
  type metadata accessor for StickerFactory(0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for Sticker.StickerType.userContent(_:), v9);
  if (a1)
  {
    v24 = a1;
    v25 = (void *)static StickerFactory.makeSticker(emoji:emojiImage:inStore:)(a4, v50, v24, v12);

  }
  else
  {
    v25 = (void *)static StickerFactory.makeSticker(emoji:inStore:)(a4, v50, v12);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v13[136] != -1)
    swift_once(&qword_10009E440, sub_10002E490);
  v26 = type metadata accessor for Logger(0);
  v27 = sub_10000D130(v26, (uint64_t)qword_10009E448);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Made sticker for an emoji", v30, 2u);
    swift_slowDealloc(v30, -1, -1);
  }

  v31 = *(uint64_t (**)(void))((swift_isaMask & *a3) + 0xC8);
  v32 = (void *)v31();
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(v32, "respondsToSelector:", "stickerCollectionViewController:didSelectSticker:withFrame:");
    v35 = swift_unknownObjectRelease(v33);
    if (v34)
    {
      v36 = (double *)((char *)a3
                     + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_mostRecentlySelectedFrame);
      if ((*((_BYTE *)a3 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_mostRecentlySelectedFrame + 32) & 1) == 0)
      {
        v40 = v36[2];
        v39 = v36[3];
        v42 = *v36;
        v41 = v36[1];
        v43 = (void *)((uint64_t (*)(uint64_t))v31)(v35);
        if (v43)
        {
          v38 = v43;
          objc_msgSend(v43, "stickerCollectionViewController:didSelectSticker:withFrame:", a3, v25, v42, v41, v40, v39);
          goto LABEL_20;
        }
LABEL_23:

        goto LABEL_24;
      }
    }
  }
  v37 = (void *)v31();
  if (!v37)
    goto LABEL_23;
  v38 = v37;
  objc_msgSend(v37, "stickerCollectionViewController:didSelectSticker:", a3, v25);
LABEL_20:

  swift_unknownObjectRelease(v38);
LABEL_24:
  v44 = (char *)a3 + OBJC_IVAR____TtC22StickersUltraExtension19EmojiViewController_mostRecentlySelectedFrame;
  result = 0.0;
  *(_OWORD *)v44 = 0u;
  *((_OWORD *)v44 + 1) = 0u;
  v44[32] = 1;
  return result;
}

void sub_10002FE3C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7;
  void (*v8)(void *, void *, void *);
  id v9;
  id v10;
  uint64_t v11;
  id v12;

  v8 = *(void (**)(void *, void *, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v12 = a2;
  v9 = a3;
  v10 = a4;
  v8(a2, a3, a4);
  swift_release(v7, v11);

}

unint64_t sub_10002FF20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009BBF0;
  if (!qword_10009BBF0)
  {
    v1 = sub_10000D720(&qword_10009BBE8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10009BBF0);
  }
  return result;
}

uint64_t sub_10002FF6C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_10002FF98(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10002F9BC(a2, a3, *(_QWORD **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t iMessageApp.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t iMessageApp.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t sub_100030010()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 72));
  return v1;
}

uint64_t sub_10003003C(uint64_t a1)
{
  uint64_t v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Image);
}

uint64_t sub_100030068()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100078AA0);
  v2 = swift_getKeyPath(&unk_100078AC8);
  static Published.subscript.getter(&v6, v0, KeyPath, v2);
  swift_release(v2, v3);
  swift_release(KeyPath, v4);
  return v6;
}

uint64_t sub_1000300D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 120))();
  *a2 = result;
  return result;
}

uint64_t sub_100030108(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 128);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_100030138(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100078AA0);
  v4 = swift_getKeyPath(&unk_100078AC8);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*sub_1000301A4(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100078AA0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100078AC8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10003021C;
}

void sub_10003021C(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release(v2, v4);
  swift_release(v3, v5);
  free(v1);
}

uint64_t sub_100030268()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension20StickerPackStripItem__icon, v3, 33, 0);
  v1 = sub_10000A66C(&qword_10009BD00);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_1000302C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_10000A66C(&qword_10009BD08);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension20StickerPackStripItem__icon, v10, 33, 0);
  v7 = sub_10000A66C(&qword_10009BD00);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*sub_10003039C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10000A66C(&qword_10009BD08);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22StickersUltraExtension20StickerPackStripItem__icon;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10000A66C(&qword_10009BD00);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100030464;
}

void sub_100030464(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6);
    swift_endAccess(v3 + 3);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
    v14(v7, v12);
  }
  else
  {
    swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6);
    swift_endAccess(v3 + 6);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v14(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

_QWORD *sub_10003057C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[24];

  v11 = (_QWORD *)swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  swift_beginAccess((char *)v11 + OBJC_IVAR____TtC22StickersUltraExtension20StickerPackStripItem__icon, v15, 33, 0);
  v14 = a5;
  swift_retain(a5);
  Published.init(initialValue:)(&v14, &type metadata for Image);
  swift_endAccess(v15);
  swift_release(a5, v12);
  v11[6] = 0;
  v11[7] = 0xE000000000000000;
  v11[8] = 0;
  v11[9] = 0xE000000000000000;
  return v11;
}

_QWORD *sub_10003063C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];

  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  swift_beginAccess((char *)v5 + OBJC_IVAR____TtC22StickersUltraExtension20StickerPackStripItem__icon, v10, 33, 0);
  v9 = a5;
  swift_retain(a5);
  Published.init(initialValue:)(&v9, &type metadata for Image);
  swift_endAccess(v10);
  v5[6] = 0;
  v5[7] = 0xE000000000000000;
  swift_release(a5, v7);
  v5[8] = 0;
  v5[9] = 0xE000000000000000;
  return v5;
}

_QWORD *sub_1000306D0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  v3 = sub_1000309BC(a1);
  swift_release(a1, v4);
  return v3;
}

_QWORD *sub_100030718(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = sub_1000309BC(a1);
  swift_release(a1, v3);
  return v2;
}

_QWORD *sub_100030748()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[9]);
  v1 = (char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension20StickerPackStripItem__icon;
  v2 = sub_10000A66C(&qword_10009BD00);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1000307B0()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[9]);
  v1 = (char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension20StickerPackStripItem__icon;
  v2 = sub_10000A66C(&qword_10009BD00);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_100030824@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for StickerPackStripItem(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100030860@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t static iMessageApp.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  if (v4 == v6 && v5 == v7)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0);
}

uint64_t sub_1000308A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  if (v4 == v6 && v5 == v7)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0);
}

unint64_t sub_1000308CC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  void *v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;

  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease(0xE000000000000000);
  v1 = v0[4];
  v2 = (void *)v0[5];
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v4._countAndFlagsBits = 10272;
  v4._object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  v6 = v0[2];
  v5 = (void *)v0[3];
  swift_bridgeObjectRetain(v5);
  v7._countAndFlagsBits = v6;
  v7._object = v5;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v5);
  v8._countAndFlagsBits = 41;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  return 0xD000000000000016;
}

unint64_t sub_10003099C()
{
  return sub_1000308CC();
}

_QWORD *sub_1000309BC(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[24];

  v2 = v1;
  v4 = a1[7];
  v2[4] = a1[6];
  v2[5] = v4;
  v5 = a1[2];
  v6 = a1[3];
  v2[6] = v5;
  v2[7] = v6;
  v7 = a1[5];
  v2[8] = a1[4];
  v2[9] = v7;
  v2[2] = v5;
  v2[3] = v6;
  v8 = type metadata accessor for iMessageAppBalloonPlugin(0);
  v9 = swift_dynamicCastClass(a1, v8);
  if (v9)
  {
    v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 184);
    swift_bridgeObjectRetain_n(v6, 2);
    swift_bridgeObjectRetain(v4);
    v11 = swift_bridgeObjectRetain(v7);
    v12 = v10(v11);
  }
  else
  {
    swift_bridgeObjectRetain_n(v6, 2);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v7);
    v12 = Image.init(systemName:)(0xD000000000000017, 0x8000000100074B00);
  }
  v13 = v12;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC22StickersUltraExtension20StickerPackStripItem__icon, v16, 33, 0);
  v15 = v13;
  Published.init(initialValue:)(&v15, &type metadata for Image);
  swift_endAccess(v16);
  return v2;
}

void *sub_100030ADC()
{
  return &protocol witness table for ObservableObjectPublisher;
}

void *sub_100030AE8()
{
  return &protocol witness table for String;
}

uint64_t sub_100030AF4()
{
  return type metadata accessor for StickerPackStripItem(0);
}

uint64_t type metadata accessor for StickerPackStripItem(uint64_t a1)
{
  uint64_t result;

  result = qword_10009E680;
  if (!qword_10009E680)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StickerPackStripItem);
  return result;
}

void sub_100030B38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100078C08;
  v4[1] = &unk_100078C08;
  v4[2] = &unk_100078C08;
  v4[3] = &unk_100078C08;
  sub_100030BB4();
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_100030BB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10009BD38)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Image);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10009BD38);
  }
}

uint64_t sub_100030C08()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009E698);
  sub_10000D130(v0, (uint64_t)qword_10009E698);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD000000000000017, 0x8000000100074D70);
}

uint64_t sub_100030C84(uint64_t a1)
{
  if (a1 == 1)
    return 0x736567617373654DLL;
  else
    return 21327;
}

void _s22StickersUltraExtension20iMessageAppsRegistryC08registerE0yyF_0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  sub_100030DBC();
  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v2 = CKCombinedStickerAppsOrderChangedNotification;
  v3 = swift_allocObject(&unk_10008C078, 24, 7);
  swift_weakInit(v3 + 16, v0);
  v7[4] = sub_1000317CC;
  v8 = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100017018;
  v7[3] = &unk_10008C090;
  v4 = _Block_copy(v7);
  swift_release(v8, v5);
  v6 = objc_msgSend(v1, "addObserverForName:object:queue:usingBlock:", v2, 0, 0, v4);
  _Block_release(v4);
  swift_unknownObjectRelease(v6);

}

uint64_t sub_100030DBC()
{
  NSObject *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  void *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  NSObject *v90;
  uint64_t v91;
  int v92;
  uint8_t *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unsigned int v103;
  _QWORD *v104;
  uint64_t aBlock[5];
  uint64_t v106;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v99 = *(_QWORD *)(v4 - 8);
  v100 = v4;
  __chkstk_darwin(v4);
  v98 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v96 = *(_QWORD *)(v6 - 8);
  v97 = v6;
  __chkstk_darwin(v6);
  v95 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(CKBalloonPluginManager), "sharedInstance");
  v9 = objc_msgSend(v8, "orderedCombinedStickerApps");

  v10 = sub_10000D5F4(0, (unint64_t *)&unk_10009CA70, IMBalloonPlugin_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v19 = v11;
    else
      v19 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v12 = _CocoaArrayWrapper.endIndex.getter(v19);
    if (v12)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v11);
    v12 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v11);
  if (!v12)
    goto LABEL_16;
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_84;
  }
  v13 = 0;
  v2 = v11 & 0xC000000000000001;
  do
  {
    if (v2)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
    else
      v14 = *(id *)(v11 + 8 * v13 + 32);
    v15 = v14;
    v16 = type metadata accessor for iMessageAppBalloonPlugin(0);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    v0 = sub_100031F90(v15);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v1 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v17 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v1 >= v17 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v1 + 1, 1);
    ++v13;
    v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v0);
    specialized Array._endMutation()(v18);
  }
  while (v12 != v13);
  swift_bridgeObjectRelease(v11);
  v12 = aBlock[0];
LABEL_17:
  swift_bridgeObjectRelease(v11);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v69 = v12;
    else
      v69 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v20 = _CocoaArrayWrapper.endIndex.getter(v69);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v20 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = 0xD000000000000025;
  if (v20)
  {
    if (v20 >= 1)
    {
      for (i = 0; i != v20; ++i)
      {
        if ((v12 & 0xC000000000000001) != 0)
        {
          v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v12);
        }
        else
        {
          v22 = *(_QWORD *)(v12 + 8 * i + 32);
          swift_retain(v22);
        }
        v23 = *(_QWORD *)(v22 + 32);
        v24 = *(_QWORD *)(v22 + 40);
        if (v23 == 0xD000000000000025 && v24 == 0x8000000100074B20
          || (v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, 0xD000000000000025, 0x8000000100074B20, 0), (v25 & 1) != 0))
        {
          swift_release(v22, v24);
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v25);
          v26 = *(_QWORD *)(aBlock[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
          v27 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v22);
          specialized ContiguousArray._endMutation()(v27);
        }
      }
      swift_bridgeObjectRelease(v12);
      v2 = aBlock[0];
      goto LABEL_33;
    }
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  swift_bridgeObjectRelease(v12);
  v2 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_33:
  v103 = objc_msgSend((id)objc_opt_self(SSiMessageAppHelper), "balloonHostAppIsMessages");
  if (qword_10009E690 != -1)
    swift_once(&qword_10009E690, sub_100030C08);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_10000D130(v28, (uint64_t)qword_10009E698);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v32 = 67109120;
    LODWORD(aBlock[0]) = v103;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4, v32 + 4, v32 + 8);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "StickersUltra host is MobileSMS: %{BOOL}d", v32, 8u);
    swift_slowDealloc(v32, -1, -1);
  }

  v3 = Selector.init(_:)(0xD000000000000013, 0x8000000100074B50);
  v33 = swift_retain_n(v2, 2);
  v0 = Logger.logObject.getter(v33);
  LODWORD(v12) = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v0, (os_log_type_t)v12))
  {

    swift_release_n(v2, 2);
    v1 = v2 & 0x4000000000000000;
    goto LABEL_61;
  }
  v34 = (uint8_t *)swift_slowAlloc(12, -1);
  v91 = swift_slowAlloc(32, -1);
  aBlock[0] = v91;
  v93 = v34;
  *(_DWORD *)v34 = 136315138;
  v1 = v2 & 0x4000000000000000;
  if ((v2 & 0x8000000000000000) != 0 || v1)
    goto LABEL_86;
  v35 = *(_QWORD *)(v2 + 16);
  while (1)
  {
    v36 = _swiftEmptyArrayStorage;
    v92 = v12;
    if (v35)
    {
      v104 = _swiftEmptyArrayStorage;
      result = sub_1000330B8(0, v35 & ~(v35 >> 63), 0);
      if (v35 < 0)
      {
        __break(1u);
        return result;
      }
      v89 = v1;
      v90 = v0;
      v38 = 0;
      v36 = v104;
      v101 = v2 & 0xC000000000000001;
      v102 = v2;
      v39 = v35;
      do
      {
        if (v101)
        {
          v40 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v2);
        }
        else
        {
          v40 = *(_QWORD **)(v2 + 8 * v38 + 32);
          swift_retain(v40);
        }
        v42 = v40[6];
        v41 = v40[7];
        v43 = (void *)v40[10];
        swift_bridgeObjectRetain(v41);
        v44 = v3;
        if (objc_msgSend(v43, "respondsToSelector:", v3))
        {
          v46 = objc_msgSend(v43, "stickerSharingLevel");
          swift_release(v40, v47);
          if (v46 == (id)1)
            v48 = 0x736567617373654DLL;
          else
            v48 = 21327;
          if (v46 == (id)1)
            v49 = 0xE800000000000000;
          else
            v49 = 0xE200000000000000;
        }
        else
        {
          swift_release(v40, v45);
          v49 = 0xE200000000000000;
          v48 = 21327;
        }
        v104 = v36;
        v51 = v36[2];
        v50 = v36[3];
        if (v51 >= v50 >> 1)
        {
          sub_1000330B8(v50 > 1, v51 + 1, 1);
          v36 = v104;
        }
        ++v38;
        v36[2] = v51 + 1;
        v52 = &v36[4 * v51];
        v52[4] = v42;
        v52[5] = v41;
        v52[6] = v48;
        v52[7] = v49;
        v2 = v102;
        v3 = v44;
      }
      while (v39 != v38);
      v0 = v90;
      v1 = v89;
    }
    v54 = v93;
    v55 = sub_10000A66C(&qword_10009BE10);
    v12 = Array.description.getter(v36, v55);
    v57 = v56;
    swift_bridgeObjectRelease(v36);
    v104 = (_QWORD *)sub_10000C99C(v12, v57, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, aBlock, v54 + 4, v54 + 12);
    swift_release_n(v2, 2);
    swift_bridgeObjectRelease(v57);
    _os_log_impl((void *)&_mh_execute_header, v0, (os_log_type_t)v92, "Got apps: %s", v54, 0xCu);
    v58 = v91;
    swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1, -1);
    swift_slowDealloc(v54, -1, -1);

LABEL_61:
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    if ((v2 & 0x8000000000000000) != 0 || v1)
      break;
    v59 = *(_QWORD *)(v2 + 16);
    if (!v59)
      goto LABEL_81;
LABEL_64:
    if (v59 >= 1)
    {
      v60 = 0;
      while (1)
      {
        if ((v2 & 0xC000000000000001) != 0)
        {
          v64 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v60, v2);
          v65 = v64;
          if ((v103 & 1) != 0)
            goto LABEL_66;
        }
        else
        {
          v65 = *(_QWORD **)(v2 + 8 * v60 + 32);
          swift_retain(v65);
          if ((v103 & 1) != 0)
            goto LABEL_66;
        }
        v66 = (void *)v65[10];
        v64 = objc_msgSend(v66, "respondsToSelector:", v3);
        if ((_DWORD)v64)
        {
          v64 = objc_msgSend(v66, "stickerSharingLevel");
          if (v64)
          {
            swift_release(v65, v67);
            goto LABEL_67;
          }
        }
LABEL_66:
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v64);
        v61 = *(_QWORD *)(aBlock[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v61);
        v62 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v65);
        specialized ContiguousArray._endMutation()(v62);
LABEL_67:
        if (v59 == ++v60)
        {
          swift_release(v2, v63);
          v68 = (_QWORD *)aBlock[0];
          goto LABEL_82;
        }
      }
    }
LABEL_85:
    __break(1u);
LABEL_86:
    v86 = swift_bridgeObjectRetain(v2);
    v35 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_release(v2, v87);
  }
  v70 = swift_bridgeObjectRetain(v2);
  v59 = _CocoaArrayWrapper.endIndex.getter(v70);
  swift_release(v2, v71);
  if (v59)
    goto LABEL_64;
LABEL_81:
  swift_release(v2, v53);
  v68 = _swiftEmptyArrayStorage;
LABEL_82:
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v72 = (void *)static OS_dispatch_queue.main.getter();
  v73 = swift_allocObject(&unk_10008C0C8, 32, 7);
  v74 = v94;
  *(_QWORD *)(v73 + 16) = v94;
  *(_QWORD *)(v73 + 24) = v68;
  aBlock[4] = (uint64_t)sub_100032CE4;
  v106 = v73;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10000C1B4;
  aBlock[3] = (uint64_t)&unk_10008C0E0;
  v75 = _Block_copy(aBlock);
  v76 = v106;
  swift_retain(v74);
  v78 = swift_release(v76, v77);
  v79 = v95;
  static DispatchQoS.unspecified.getter(v78);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v80 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v81 = sub_10000A66C(&qword_10009B198);
  v82 = sub_100033118((unint64_t *)&qword_10009B1A0, &qword_10009B198);
  v83 = v98;
  v84 = v81;
  v85 = v100;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v84, v82, v100, v80);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v79, v83, v75);
  _Block_release(v75);

  (*(void (**)(char *, uint64_t))(v99 + 8))(v83, v85);
  return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v79, v97);
}

uint64_t sub_1000317A8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000317CC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[24];

  swift_beginAccess(v0 + 16, v4, 0, 0);
  result = swift_weakLoadStrong(v0 + 16);
  if (result)
  {
    v2 = result;
    sub_100030DBC();
    return swift_release(v2, v3);
  }
  return result;
}

uint64_t sub_100031820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100031830(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

id sub_100031838(void *a1)
{
  uint64_t v1;

  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  return sub_100031F90(a1);
}

_QWORD *sub_100031870(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v15;
  _QWORD v16[3];
  uint64_t v17;
  __int128 v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_1000333F0(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v16[0] = *(v4 - 2);
      v16[1] = v5;
      v16[2] = v6;
      swift_bridgeObjectRetain_n(v5, 2);
      swift_retain_n(v6, 2);
      v7 = sub_10000A66C(&qword_10009BF90);
      v8 = sub_10000A66C(&qword_10009BF98);
      swift_dynamicCast(&v17, v16, v7, v8, 7);
      v9 = v17;
      v15 = v18;
      swift_release(v6, v10);
      swift_bridgeObjectRelease(v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_1000333F0(0, v2[2] + 1, 1);
        v2 = v19;
      }
      v12 = v2[2];
      v11 = v2[3];
      if (v12 >= v11 >> 1)
      {
        sub_1000333F0(v11 > 1, v12 + 1, 1);
        v2 = v19;
      }
      v2[2] = v12 + 1;
      v13 = &v2[3 * v12];
      v13[4] = v9;
      *(_OWORD *)(v13 + 5) = v15;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id sub_1000319E8()
{
  uint64_t v0;

  return *(id *)(v0 + 80);
}

uint64_t sub_1000319F0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100078C30);
  v2 = swift_getKeyPath(&unk_100078C58);
  static Published.subscript.getter(&v6, v0, KeyPath, v2);
  swift_release(v2, v3);
  swift_release(KeyPath, v4);
  return v6;
}

uint64_t sub_100031A60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 184))();
  *a2 = result;
  return result;
}

uint64_t sub_100031A90(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 192);
  v3 = swift_retain(*a1);
  return v2(v3);
}

uint64_t sub_100031AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100078C30);
  v4 = swift_getKeyPath(&unk_100078C58);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*sub_100031B2C(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100078C30);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100078C58);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10003021C;
}

uint64_t sub_100031BA4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension24iMessageAppBalloonPlugin__iconImage, v3, 33, 0);
  v1 = sub_10000A66C(&qword_10009BD00);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_100031C04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_10000A66C(&qword_10009BD08);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension24iMessageAppBalloonPlugin__iconImage, v10, 33, 0);
  v7 = sub_10000A66C(&qword_10009BD00);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*sub_100031CD8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10000A66C(&qword_10009BD08);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22StickersUltraExtension24iMessageAppBalloonPlugin__iconImage;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10000A66C(&qword_10009BD00);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100030464;
}

id sub_100031DA0()
{
  id v0;
  id result;

  v0 = objc_msgSend((id)objc_opt_self(ISImageDescriptor), "imageDescriptorNamed:", kISImageDescriptorMessagesExtensionBadge);
  result = objc_msgSend(v0, "setDrawBorder:", 1);
  qword_10009E6B8 = (uint64_t)v0;
  return result;
}

id sub_100031E04()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
  qword_10009E6C8 = (uint64_t)result;
  return result;
}

void sub_100031E34()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;

  v1 = *v0;
  if (qword_10009E6B0 != -1)
    swift_once(&qword_10009E6B0, sub_100031DA0);
  v2 = (void *)qword_10009E6B8;
  v3 = v0[5];
  v4 = objc_allocWithZone((Class)ISIcon);
  v5 = v2;
  swift_bridgeObjectRetain(v3);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v7 = objc_msgSend(v4, "initWithBundleIdentifier:", v6);

  v8 = swift_allocObject(&unk_10008C118, 32, 7);
  *(_QWORD *)(v8 + 16) = v0;
  *(_QWORD *)(v8 + 24) = v1;
  v12[4] = sub_100033288;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10001021C;
  v12[3] = &unk_10008C130;
  v9 = _Block_copy(v12);
  v10 = v13;
  swift_retain(v0);
  swift_release(v10, v11);
  objc_msgSend(v7, "getImageForImageDescriptor:completion:", v5, v9);
  _Block_release(v9);

}

id sub_100031F90(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  ValueMetadata *v8;
  ValueMetadata *v9;
  unint64_t v10;
  ValueMetadata *v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t Kind;
  ValueMetadata *v20;
  uint64_t v21;
  void *Description;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  UIImage *v47;
  UIImage *v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  NSString v53;
  id v54;
  id result;
  void *v56;
  void *v57;
  double v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  NSString v67;
  id v68;
  void *v69;
  void *v70;
  double v71;
  id v72;
  id v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  char v84;
  id v85;
  char v86;
  id v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  ValueMetadata *v97;
  uint64_t v98;
  _QWORD v99[3];
  ValueMetadata *v100;
  CGSize v101;

  v2 = v1;
  *(_QWORD *)(v1 + 80) = a1;
  v100 = (ValueMetadata *)_swiftEmptyArrayStorage;
  v4 = sub_1000330D4();
  swift_retain(v1);
  v5 = a1;
  v6 = sub_10000A66C(&qword_10009BE20);
  v7 = sub_100033118(&qword_10009BE28, &qword_10009BE20);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v100, v6, v7, &type metadata for PresentationContexts, v4);
  v8 = (ValueMetadata *)v99[0];
  v100 = (ValueMetadata *)v99[0];
  if ((objc_msgSend(v5, "presentationContexts") & 2) != 0)
  {
    v9 = *(ValueMetadata **)PresentationContexts.media.unsafeMutableAddressor();
    v99[0] = v9;
    v97 = v8;
    dispatch thunk of SetAlgebra.intersection(_:)(&v98, v99, &type metadata for PresentationContexts, v4);
    v10 = sub_10003319C();
    v8 = &type metadata for PresentationContexts;
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v98, v99, &type metadata for PresentationContexts, v10) & 1) == 0)
    {
      v97 = v9;
      v8 = (ValueMetadata *)&v100;
      dispatch thunk of SetAlgebra.formUnion(_:)(&v97, &type metadata for PresentationContexts, v4);
    }
  }
  if ((objc_msgSend(v5, "presentationContexts") & 1) != 0)
  {
    v11 = *(ValueMetadata **)PresentationContexts.messages.unsafeMutableAddressor();
    v99[0] = v11;
    v97 = v100;
    dispatch thunk of SetAlgebra.intersection(_:)(&v98, v99, &type metadata for PresentationContexts, v4);
    v12 = sub_10003319C();
    v8 = &type metadata for PresentationContexts;
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v98, v99, &type metadata for PresentationContexts, v12) & 1) == 0)
    {
      v97 = v11;
      v8 = (ValueMetadata *)&v100;
      dispatch thunk of SetAlgebra.formUnion(_:)(&v97, &type metadata for PresentationContexts, v4);
    }
  }
  if (objc_msgSend(v5, "presentationContexts") == (id)-1)
    v100 = *(ValueMetadata **)PresentationContexts.all.unsafeMutableAddressor();
  v13 = objc_msgSend(v5, "extensionIdentifier");
  if (!v13)
  {
    __break(1u);
    goto LABEL_35;
  }
  v14 = v13;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v17 = v16;

  v99[0] = v15;
  v99[1] = v17;
  v18 = sub_100033158();
  v8 = (ValueMetadata *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(58, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v18);
  swift_bridgeObjectRelease(v17);
  Kind = v8[1].Kind;
  if (!Kind)
  {
LABEL_35:
    result = (id)swift_bridgeObjectRelease(v8);
    __break(1u);
    goto LABEL_36;
  }
  v20 = &v8[2 * Kind];
  v21 = v20->Kind;
  Description = v20->Description;
  v23 = v20[1].Kind;
  v24 = v20[1].Description;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v8);
  v25 = static String._fromSubstring(_:)(v21, Description, v23, v24);
  v27 = v26;
  swift_bridgeObjectRelease(v24);
  if (qword_10009E6C0 != -1)
    swift_once(&qword_10009E6C0, sub_100031E04);
  v28 = (id)qword_10009E6C8;
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v28, "objectForKey:", v29);

  v94 = v27;
  v95 = v25;
  v96 = v2;
  if (v30)
  {
    v31 = v30;
    v32 = Image.init(uiImage:)();
    swift_beginAccess(v2 + OBJC_IVAR____TtC22StickersUltraExtension24iMessageAppBalloonPlugin__iconImage, v99, 33, 0);
    v98 = v32;
    Published.init(initialValue:)(&v98, &type metadata for Image);
    swift_endAccess(v99);

    v34 = 0;
    goto LABEL_29;
  }
  v35 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v36 = objc_msgSend(v35, "userInterfaceStyle");

  v37 = objc_msgSend(v5, "__ck_browserImageForInterfaceStyle:", v36);
  if (v37)
  {
    v38 = v37;
    if (qword_10009E6B0 != -1)
      swift_once(&qword_10009E6B0, sub_100031DA0);
    objc_msgSend((id)qword_10009E6B8, "size");
    v40 = v39;
    objc_msgSend(v38, "size");
    v42 = v40 / v41;
    objc_msgSend(v38, "size");
    v44 = v42 * v43;
    objc_msgSend((id)qword_10009E6B8, "scale");
    v46 = v45;
    v101.width = v44;
    v101.height = v40;
    UIGraphicsBeginImageContextWithOptions(v101, 0, v46);
    objc_msgSend(v38, "drawInRect:", 0.0, 0.0, v44, v40);
    v47 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    if (v47)
    {
      v48 = v47;
      v49 = Image.init(uiImage:)();
      swift_beginAccess(v2 + OBJC_IVAR____TtC22StickersUltraExtension24iMessageAppBalloonPlugin__iconImage, v99, 33, 0);
      v98 = v49;
      Published.init(initialValue:)(&v98, &type metadata for Image);
      swift_endAccess(v99);

      v34 = 0;
      goto LABEL_29;
    }
    v64 = (void *)qword_10009E6B8;
    v65 = objc_allocWithZone((Class)ISIcon);
    swift_bridgeObjectRetain(v27);
    v66 = v64;
    v67 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v68 = objc_msgSend(v65, "initWithBundleIdentifier:", v67);

    result = objc_msgSend(v68, "imageForDescriptor:", v66);
    if (!result)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    v69 = result;
    result = objc_msgSend(result, "CGImage");
    if (!result)
    {
LABEL_41:
      __break(1u);
      return result;
    }
    v70 = result;
    objc_msgSend(v69, "scale");
    v72 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v70, 0, v71);

    v73 = v72;
    v74 = Image.init(uiImage:)();
    v34 = objc_msgSend(v69, "placeholder");

    v2 = v96;
    swift_beginAccess(v96 + OBJC_IVAR____TtC22StickersUltraExtension24iMessageAppBalloonPlugin__iconImage, v99, 33, 0);
    v98 = v74;
    swift_retain(v74);
    Published.init(initialValue:)(&v98, &type metadata for Image);
    swift_endAccess(v99);

    v63 = v74;
  }
  else
  {
    if (qword_10009E6B0 != -1)
      swift_once(&qword_10009E6B0, sub_100031DA0);
    v50 = (void *)qword_10009E6B8;
    v51 = objc_allocWithZone((Class)ISIcon);
    v52 = v50;
    swift_bridgeObjectRetain(v27);
    v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v54 = objc_msgSend(v51, "initWithBundleIdentifier:", v53);

    result = objc_msgSend(v54, "imageForDescriptor:", v52);
    if (!result)
      goto LABEL_38;
    v56 = result;
    result = objc_msgSend(result, "CGImage");
    if (!result)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v57 = result;
    objc_msgSend(v56, "scale");
    v59 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v57, 0, v58);

    v60 = v59;
    v61 = Image.init(uiImage:)();
    v34 = objc_msgSend(v56, "placeholder");

    swift_beginAccess(v2 + OBJC_IVAR____TtC22StickersUltraExtension24iMessageAppBalloonPlugin__iconImage, v99, 33, 0);
    v98 = v61;
    swift_retain(v61);
    Published.init(initialValue:)(&v98, &type metadata for Image);
    swift_endAccess(v99);
    v63 = v61;
  }
  swift_release(v63, v62);
LABEL_29:
  swift_release(v2, v33);
  result = objc_msgSend(v5, "extensionIdentifier");
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v75 = result;
  v93 = v34;
  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v78 = v77;

  result = objc_msgSend(v5, "browserDisplayName");
  if (!result)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v79 = result;
  v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v82 = v81;

  v83 = objc_msgSend(v5, "app");
  v84 = objc_msgSend(v83, "isStickerPackOnly");

  LOBYTE(v83) = objc_msgSend(v5, "showInBrowser") ^ 1;
  v85 = objc_msgSend(v5, "app");
  v86 = objc_msgSend(v85, "canSendDataPayloads");

  v87 = objc_msgSend(v5, "app");
  v88 = objc_msgSend(v87, "shouldBalloonHideAppIcon");

  v89 = objc_msgSend(v5, "shouldHideAppSwitcher");
  v90 = iMessageApp.init(extensionIdentifier:bundleIdentifier:displayName:isStickerPackOnly:hideFromBrowser:canSendDataPayloads:shouldHideAppIcon:shouldHideAppSwitcher:presentationContexts:)(v76, v78, v95, v94, v80, v82, v84, (char)v83, v86, v88, v89, (uint64_t)v100);
  v91 = v90;
  if (v93)
  {
    swift_retain(v90);
    sub_100031E34();
    swift_release(v91, v92);
  }

  return (id)v91;
}

void sub_1000328F4()
{
  _swift_stdlib_reportUnimplementedInitializer("StickersUltraExtension.iMessageAppBalloonPlugin", 47, "init(extensionIdentifier:bundleIdentifier:displayName:infoDictionary:)", 70, 0);
  __break(1u);
}

void sub_100032920()
{
  _swift_stdlib_reportUnimplementedInitializer("StickersUltraExtension.iMessageAppBalloonPlugin", 47, "init(extensionIdentifier:bundleIdentifier:displayName:isStickerPackOnly:hideFromBrowser:canSendDataPayloads:shouldHideAppIcon:shouldHideAppSwitcher:presentationContexts:)", 170, 0);
  __break(1u);
}

uint64_t sub_10003294C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC22StickersUltraExtension24iMessageAppBalloonPlugin__iconImage;
  v2 = sub_10000A66C(&qword_10009BD00);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_QWORD *sub_100032994()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  v0 = iMessageApp.deinit();

  v1 = (char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension24iMessageAppBalloonPlugin__iconImage;
  v2 = sub_10000A66C(&qword_10009BD00);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1000329EC()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v0 = (id *)iMessageApp.deinit();

  v1 = (char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension24iMessageAppBalloonPlugin__iconImage;
  v2 = sub_10000A66C(&qword_10009BD00);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

unint64_t sub_100032A50(unint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = a2;
  v3 = result;
  v4 = result >> 62;
  if (result >> 62)
    goto LABEL_30;
  v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = a2 >> 62;
  if (!(a2 >> 62))
    goto LABEL_3;
  while (2)
  {
    if (v2 < 0)
      v20 = v2;
    else
      v20 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v21 = _CocoaArrayWrapper.endIndex.getter(v20);
    result = swift_bridgeObjectRelease(v2);
    if (v5 != v21)
      goto LABEL_38;
LABEL_4:
    if (!v5)
      goto LABEL_27;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    if (v3 < 0)
      v7 = v3;
    if (!v4)
      v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
    v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    v23 = v2 & 0xFFFFFFFFFFFFFF8;
    if (v2 < 0)
      v8 = v2;
    if (v6)
      v9 = v8;
    if (v7 == v9)
    {
LABEL_27:
      LOBYTE(v2) = 1;
      return v2 & 1;
    }
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    v10 = type metadata accessor for iMessageApp();
    v11 = 0;
    v12 = v2 & 0xC000000000000001;
    v24 = v2;
    v22 = v2 + 32;
    v4 = v5 - 1;
    while (v5 != v11)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v3);
        v26 = v13;
        if (v12)
          goto LABEL_19;
      }
      else
      {
        v13 = *(_QWORD *)(v3 + 32 + 8 * v11);
        swift_retain(v13);
        v26 = v13;
        if (v12)
        {
LABEL_19:
          v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v24);
          goto LABEL_23;
        }
      }
      if (v11 >= *(_QWORD *)(v23 + 16))
        goto LABEL_29;
      v14 = *(_QWORD *)(v22 + 8 * v11);
      swift_retain(v14);
LABEL_23:
      v25 = v14;
      v15 = sub_10002CA50((unint64_t *)&qword_10009BFB0, (uint64_t (*)(uint64_t))type metadata accessor for iMessageApp, (uint64_t)&protocol conformance descriptor for iMessageApp);
      v2 = dispatch thunk of static Equatable.== infix(_:_:)(&v26, &v25, v10, v15);
      swift_release(v13, v16);
      swift_release(v14, v17);
      if ((v2 & 1) != 0 && v4 != v11++)
        continue;
      return v2 & 1;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    if (v3 < 0)
      v19 = v3;
    else
      v19 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v5 = _CocoaArrayWrapper.endIndex.getter(v19);
    result = swift_bridgeObjectRelease(v3);
    v6 = (unint64_t)v2 >> 62;
    if ((unint64_t)v2 >> 62)
      continue;
    break;
  }
LABEL_3:
  if (v5 == *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_4;
LABEL_38:
  LOBYTE(v2) = 0;
  return v2 & 1;
}

uint64_t type metadata accessor for iMessageAppBalloonPlugin(uint64_t a1)
{
  uint64_t result;

  result = qword_10009E6E8;
  if (!qword_10009E6E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for iMessageAppBalloonPlugin);
  return result;
}

uint64_t sub_100032CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
  return swift_deallocObject(v2, 32, 7);
}

uint64_t sub_100032CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 144))();
  v4 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v37 = v2;
    else
      v37 = v2 & 0xFFFFFFFFFFFFFF8;
    v38 = type metadata accessor for iMessageApp();
    swift_bridgeObjectRetain(v2);
    v6 = _bridgeCocoaArray<A>(_:)(v37, v38);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v5 = swift_bridgeObjectRetain(v2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v5);
    type metadata accessor for iMessageApp();
    v6 = v2;
  }
  v7 = sub_100032A50(v3, v6);
  swift_bridgeObjectRelease(v6);
  result = swift_bridgeObjectRelease(v3);
  if ((v7 & 1) == 0)
  {
    if (v4)
    {
      if (v2 < 0)
        v10 = v2;
      else
        v10 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      v9 = _CocoaArrayWrapper.endIndex.getter(v10);
      swift_bridgeObjectRelease(v2);
    }
    else
    {
      v9 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v11 = _swiftEmptyArrayStorage;
    if (v9)
    {
      v44 = _swiftEmptyArrayStorage;
      sub_10003341C(0, v9 & ~(v9 >> 63), 0);
      if (v9 < 0)
      {
        __break(1u);
        result = swift_unexpectedError(v9, "Swift/Dictionary.swift", 22, 1, 489);
        __break(1u);
        return result;
      }
      v39 = (unint64_t)v2 >> 62;
      v40 = v1;
      v11 = v44;
      v43 = v2;
      if ((v2 & 0xC000000000000001) != 0)
      {
        v12 = 0;
        do
        {
          v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v43);
          v14 = *(_QWORD *)(v13 + 16);
          v15 = *(_QWORD *)(v13 + 24);
          v44 = v11;
          v16 = v11[2];
          v17 = v11[3];
          swift_bridgeObjectRetain(v15);
          if (v16 >= v17 >> 1)
          {
            sub_10003341C(v17 > 1, v16 + 1, 1);
            v11 = v44;
          }
          ++v12;
          v11[2] = v16 + 1;
          v18 = &v11[3 * v16];
          v18[4] = v14;
          v18[5] = v15;
          v18[6] = v13;
        }
        while (v9 != v12);
      }
      else
      {
        v19 = 0;
        v41 = v44[2];
        v42 = v2 + 32;
        v20 = 3 * v41;
        do
        {
          v21 = *(_QWORD *)(v42 + 8 * v19);
          v22 = *(_QWORD *)(v21 + 16);
          v23 = *(_QWORD *)(v21 + 24);
          v44 = v11;
          v24 = v11[3];
          v25 = v41 + v19 + 1;
          swift_retain(v21);
          swift_bridgeObjectRetain(v23);
          if (v41 + v19 >= v24 >> 1)
          {
            sub_10003341C(v24 > 1, v25, 1);
            v11 = v44;
          }
          ++v19;
          v11[2] = v25;
          v26 = &v11[v20];
          v26[4] = v22;
          v26[5] = v23;
          v26[6] = v21;
          v20 += 3;
        }
        while (v9 != v19);
      }
      v4 = v39;
      v1 = v40;
      v2 = v43;
    }
    v27 = sub_100031870((uint64_t)v11);
    swift_bridgeObjectRelease(v11);
    v28 = v27[2];
    if (v28)
    {
      sub_10000A66C(&qword_10009BF80);
      v29 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v28);
    }
    else
    {
      v29 = &_swiftEmptyDictionarySingleton;
    }
    v44 = v29;
    v30 = (_QWORD *)swift_bridgeObjectRetain(v27);
    sub_100033778(v30, 1, &v44);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(_QWORD *))(*(_QWORD *)v1 + 176))(v44);
    if (v4)
    {
      if (v2 < 0)
        v33 = v2;
      else
        v33 = v2 & 0xFFFFFFFFFFFFFF8;
      v34 = type metadata accessor for iMessageApp();
      swift_bridgeObjectRetain(v2);
      v35 = _bridgeCocoaArray<A>(_:)(v33, v34);
      swift_bridgeObjectRelease(v2);
      (*(void (**)(uint64_t))(*(_QWORD *)v1 + 152))(v35);
      swift_bridgeObjectRetain(v2);
      v36 = _bridgeCocoaArray<A>(_:)(v33, v34);
      swift_bridgeObjectRelease(v2);
      v2 = v36;
    }
    else
    {
      v31 = swift_bridgeObjectRetain(v2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v31);
      type metadata accessor for iMessageApp();
      (*(void (**)(uint64_t))(*(_QWORD *)v1 + 152))(v2);
      v32 = swift_bridgeObjectRetain(v2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v32);
    }
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 200))(v2);
  }
  return result;
}

uint64_t sub_1000330B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100033448(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

unint64_t sub_1000330D4()
{
  unint64_t result;

  result = qword_10009BE18;
  if (!qword_10009BE18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationContexts, &type metadata for PresentationContexts);
    atomic_store(result, (unint64_t *)&qword_10009BE18);
  }
  return result;
}

uint64_t sub_100033118(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10000D720(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100033158()
{
  unint64_t result;

  result = qword_10009BE30;
  if (!qword_10009BE30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10009BE30);
  }
  return result;
}

unint64_t sub_10003319C()
{
  unint64_t result;

  result = qword_10009BE38;
  if (!qword_10009BE38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationContexts, &type metadata for PresentationContexts);
    atomic_store(result, (unint64_t *)&qword_10009BE38);
  }
  return result;
}

uint64_t sub_1000331E0()
{
  return type metadata accessor for iMessageAppBalloonPlugin(0);
}

void sub_1000331E8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100030BB4();
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 168);
  }
}

uint64_t sub_100033264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);
  return swift_deallocObject(v2, 32, 7);
}

void sub_100033288(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  void *v4;
  id v5;
  void *v6;
  double v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  id v13;

  if (a1)
  {
    v2 = *(_QWORD *)(v1 + 16);
    v13 = a1;
    v3 = objc_msgSend(v13, "placeholder");
    v4 = v13;
    if ((v3 & 1) != 0)
    {
LABEL_7:

      return;
    }
    v5 = objc_msgSend(v13, "CGImage");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v13, "scale");
      v8 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v6, 0, v7);

      if (qword_10009E6C0 != -1)
        swift_once(&qword_10009E6C0, sub_100031E04);
      v9 = (id)qword_10009E6C8;
      v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "setObject:forKey:", v8, v10);

      v11 = v8;
      v12 = Image.init(uiImage:)();
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 192))(v12);

      v4 = v13;
      goto LABEL_7;
    }
    __break(1u);
  }
}

uint64_t sub_1000333F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000335D0(a1, a2, a3, (_QWORD *)*v3, &qword_10009BFA0, &qword_10009BF98);
  *v3 = result;
  return result;
}

uint64_t sub_10003341C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1000335D0(a1, a2, a3, (_QWORD *)*v3, &qword_10009BFA8, &qword_10009BF90);
  *v3 = result;
  return result;
}

uint64_t sub_100033448(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000A66C(&qword_10009BF78);
    v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 5);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 32 * v8)
      memmove(v11 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 32 * v8 || v14 >= v15 + 32 * v8)
  {
    sub_10000A66C(&qword_10009BE10);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4, a2);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000335D0(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10000A66C(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 24 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 24);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v16 = (unint64_t)(v14 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v16 >= v17 + 24 * v11)
      memmove(v14 + 4, a4 + 4, 24 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 24 * v11 || v16 >= v17 + 24 * v11)
  {
    sub_10000A66C(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_28:
    swift_release(a4, a2);
    return (uint64_t)v14;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100033778(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *i;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  char v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (!a1[2])
    return swift_bridgeObjectRelease(a1);
  v46 = a1[2];
  v7 = a1[4];
  v6 = a1[5];
  v8 = a1[6];
  swift_bridgeObjectRetain(a1);
  v49 = v7;
  v50 = v6;
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain(v6);
  swift_retain(v8);
  v12 = sub_1000173C4(v7, v6);
  v13 = v9[2];
  v14 = (v10 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
    goto LABEL_23;
  v16 = v10;
  if (v9[3] >= v15)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_100033B08();
      if ((v16 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v24 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v25 = (uint64_t *)(v24[6] + 16 * v12);
    *v25 = v7;
    v25[1] = v6;
    *(_QWORD *)(v24[7] + 8 * v12) = v8;
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v24[2] = v28;
    v29 = v46 - 1;
    if (v46 == 1)
      return swift_bridgeObjectRelease_n(a1, 2, v11);
    for (i = a1 + 9; ; i += 3)
    {
      v6 = *(i - 1);
      v8 = *i;
      v49 = *(i - 2);
      v31 = v49;
      v50 = v6;
      v32 = (_QWORD *)*a3;
      swift_bridgeObjectRetain(v6);
      swift_retain(v8);
      v33 = sub_1000173C4(v49, v6);
      v35 = v32[2];
      v36 = (v34 & 1) == 0;
      v27 = __OFADD__(v35, v36);
      v37 = v35 + v36;
      if (v27)
        break;
      v38 = v34;
      if (v32[3] < v37)
      {
        sub_100033CBC(v37, 1);
        v33 = sub_1000173C4(v49, v6);
        if ((v38 & 1) != (v39 & 1))
          goto LABEL_25;
      }
      if ((v38 & 1) != 0)
        goto LABEL_10;
      v40 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v33 >> 6) + 64) |= 1 << v33;
      v41 = (uint64_t *)(v40[6] + 16 * v33);
      *v41 = v31;
      v41[1] = v6;
      *(_QWORD *)(v40[7] + 8 * v33) = v8;
      v42 = v40[2];
      v27 = __OFADD__(v42, 1);
      v43 = v42 + 1;
      if (v27)
        goto LABEL_24;
      v40[2] = v43;
      if (!--v29)
        return swift_bridgeObjectRelease_n(a1, 2, v11);
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_100033CBC(v15, a2 & 1);
  v17 = sub_1000173C4(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    v12 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v20 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow();
    v51 = v20;
    swift_errorRetain(v20);
    v21 = sub_10000A66C(&qword_10009BF88);
    if ((swift_dynamicCast(v21, &v51, v21, &type metadata for _MergeError, 0) & 1) == 0)
    {
      swift_bridgeObjectRelease(v6);
      swift_release(v8, v22);
      swift_bridgeObjectRelease_n(a1, 2, v23);
      return swift_errorRelease(v51);
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_26:
  v47 = 0;
  v48 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v44._object = (void *)0x8000000100074D50;
  v44._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v44);
  _print_unlocked<A, B>(_:_:)(&v49, &v47, &type metadata for String, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v45._countAndFlagsBits = 39;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v47, v48, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
  return result;
}

void sub_100033B08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_10000A66C(&qword_10009BF80);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2, v4);
    *v1 = v5;
    return;
  }
  v6 = (void *)(v3 + 64);
  v7 = v2 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v2 || (unint64_t)v6 >= v2 + 64 + 8 * v8)
    memmove(v6, (const void *)(v2 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v2 + 16);
  v11 = 1 << *(_BYTE *)(v2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v2 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v19);
    swift_retain(v21);
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100033CBC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000A66C(&qword_10009BF80);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v9 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v10 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v22 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v23 = v22 | (v15 << 6);
      goto LABEL_34;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v37)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v38 + 8 * v24);
    ++v15;
    if (!v26)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v37)
        goto LABEL_36;
      v26 = *(_QWORD *)(v38 + 8 * v15);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v37)
        {
LABEL_36:
          swift_release(v5, v14);
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v15 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v15 >= v37)
              goto LABEL_36;
            v26 = *(_QWORD *)(v38 + 8 * v15);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v15 = v27;
      }
    }
LABEL_33:
    v12 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_34:
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v23);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v23);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain(v32[1]);
      swift_retain(v35);
    }
    Hasher.init(_seed:)(v40, *(_QWORD *)(v9 + 40));
    String.hash(into:)(v40, v34, v33);
    v16 = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(v9 + 32);
    v18 = v16 & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v13 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v13 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v19 == v29;
        if (v19 == v29)
          v19 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v13 + 8 * v19);
      }
      while (v31 == -1);
      v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(_QWORD *)(v13 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v20);
    *v21 = v34;
    v21[1] = v33;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v20) = v35;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v5, v14);
  v25 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5, v8);
  *v3 = v9;
}

uint64_t sub_100033FE0()
{
  return 0;
}

uint64_t sub_100033FF4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_100034040(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_1000340A8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_10000A8E8;
}

uint64_t sub_10003411C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for StickersCancelState.addNewStickerButton(_:);
  v3 = type metadata accessor for StickersCancelState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_100034160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_analyticsCancelState;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for StickersCancelState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1000341C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_analyticsCancelState;
  swift_beginAccess(v3, v6, 33, 0);
  v4 = type metadata accessor for StickersCancelState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess(v6);
}

uint64_t (*sub_100034230(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_analyticsCancelState, a1, 33, 0);
  return j__swift_endAccess;
}

void *sub_100034274()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_picker);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_picker, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1000342C0(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_picker);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_100034310(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_picker, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *variable initialization expression of iMessageAppsRegistry.apps()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_100034360()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_selection);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_selection, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t sub_1000343A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_selection);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*sub_1000343F8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_selection, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10003443C()
{
  return 8000;
}

char *sub_100034444()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  uint64_t v36;
  id v37;
  char *v38;
  id v39;
  void *v40;
  void **v41;
  void *v42;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49[24];
  objc_super v50;

  v1 = sub_10000A66C(&qword_10009BFC8);
  __chkstk_darwin(v1);
  v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PHPickerFilter(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000A66C(&qword_10009BFD0);
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PHPickerConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  v47 = v12;
  v13 = __chkstk_darwin(v11);
  v48 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v44 - v15;
  v17 = &v0[OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_delegate];
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakInit(v17, 0);
  v18 = &v0[OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_analyticsCancelState];
  v19 = enum case for StickersCancelState.addNewStickerButton(_:);
  v20 = type metadata accessor for StickersCancelState(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_picker] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_selection] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_maxPixelDimension] = 8000;
  v21 = (objc_class *)type metadata accessor for StickerPhotosController(0);
  v50.receiver = v0;
  v50.super_class = v21;
  v22 = objc_msgSendSuper2(&v50, "init");
  v23 = (void *)objc_opt_self(PHPhotoLibrary);
  v45 = v22;
  PHPickerConfiguration.init(photoLibrary:)(objc_msgSend(v23, "sharedPhotoLibrary"));
  PHPickerConfiguration._alwaysShowLoadingPlaceholder.setter(1);
  PHPickerConfiguration.selectionLimit.setter(1);
  v24 = sub_10000A66C(&qword_10009BFD8);
  v25 = swift_allocObject(v24, ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ 3 * *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | 7);
  *(_OWORD *)(v25 + 16) = xmmword_100078A20;
  v26 = static PHPickerFilter._stickers.getter();
  v27 = static PHPickerFilter.images.getter(v26);
  static PHPickerFilter.screenshots.getter(v27);
  static PHPickerFilter.not(_:)(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  static PHPickerFilter.all(of:)(v25);
  swift_bridgeObjectRelease(v25);
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56);
  v29 = v4;
  v30 = v46;
  v31 = v47;
  v28(v10, 0, 1, v29);
  v32 = PHPickerConfiguration.filter.setter(v10);
  static _PHPickerSuggestionGroup.stickers.getter(v32);
  v33 = type metadata accessor for _PHPickerSuggestionGroup(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v3, 0, 1, v33);
  PHPickerConfiguration._suggestionGroup.setter(v3);
  PHPickerConfiguration._disabledPrivateCapabilities.setter(5);
  sub_10000D5F4(0, &qword_10009BFE0, PHPickerViewController_ptr);
  v34 = v48;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v48, v16, v30);
  v35 = (void *)PHPickerViewController.init(configuration:)(v34);
  v36 = sub_10002CA50(&qword_10009BFE8, type metadata accessor for StickerPhotosController, (uint64_t)&unk_100078CE0);
  v37 = v45;
  v38 = (char *)v45;
  PHPickerViewController.delegate.setter(v37, v36);
  v39 = objc_msgSend(v35, "presentationController");
  if (v39)
  {
    v40 = v39;
    objc_msgSend(v39, "setDelegate:", v38);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v30);

  }
  v41 = (void **)&v38[OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_picker];
  swift_beginAccess(&v38[OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_picker], v49, 1, 0);
  v42 = *v41;
  *v41 = v35;

  return v38;
}

uint64_t type metadata accessor for StickerPhotosController(uint64_t a1)
{
  uint64_t result;

  result = qword_10009E7A0;
  if (!qword_10009E7A0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StickerPhotosController);
  return result;
}

id sub_1000348C8()
{
  char *v0;
  void **v1;
  void *v2;
  objc_super v4;
  _BYTE v5[24];

  v1 = (void **)&v0[OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_picker];
  swift_beginAccess(&v0[OBJC_IVAR____TtC22StickersUltraExtension23StickerPhotosController_picker], v5, 1, 0);
  v2 = *v1;
  *v1 = 0;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for StickerPhotosController(0);
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_100034A1C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009E708);
  sub_10000D130(v0, (uint64_t)qword_10009E708);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD000000000000011, 0x8000000100074E40);
}

uint64_t sub_100034A9C(uint64_t a1, uint64_t a2)
{
  return sub_1000364C8(a2);
}

_QWORD *sub_100034AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(type metadata accessor for PHPickerResult(0) - 8);
  v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v5 = *(_QWORD *)(v3 + 72);
  isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain(a1);
  v7 = _swiftEmptyArrayStorage;
  do
  {
    isUniquelyReferenced_nonNull_native = PHPickerResult.assetIdentifier.getter(isUniquelyReferenced_nonNull_native);
    if (v9)
    {
      v10 = isUniquelyReferenced_nonNull_native;
      v11 = v9;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1000362CC(0, v7[2] + 1, 1, v7);
        v7 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v13 = v7[2];
      v12 = v7[3];
      if (v13 >= v12 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1000362CC((_QWORD *)(v12 > 1), v13 + 1, 1, v7);
        v7 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v7[2] = v13 + 1;
      v8 = &v7[2 * v13];
      v8[4] = v10;
      v8[5] = v11;
    }
    v4 += v5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease(a1);
  return v7;
}

void sub_100034BC0(void *a1, char **a2, uint64_t a3)
{
  void *v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char **v30;
  void **aBlock;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  _QWORD *v36;

  v7 = objc_msgSend((id)objc_opt_self(PHAssetResource), "assetResourcesForLivePhoto:", a1);
  v8 = sub_10000D5F4(0, (unint64_t *)&unk_10009BFF0, PHAssetResource_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
    goto LABEL_13;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v9);
  for (; v10; v10 = _CocoaArrayWrapper.endIndex.getter(v29))
  {
    v30 = a2;
    v12 = 4;
    a2 = &off_100098000;
    while (1)
    {
      v13 = (v9 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v9)
          : *(id *)(v9 + 8 * v12);
      v14 = v13;
      v15 = v12 - 3;
      if (__OFADD__(v12 - 4, 1))
        break;
      if (objc_msgSend(v13, "type") == (id)1)
      {
        swift_bridgeObjectRelease_n(v9, 2, v16);
        v17 = swift_allocObject(&unk_10008C180, 32, 7);
        *(_OWORD *)(v17 + 16) = xmmword_100078CC0;
        v18 = objc_msgSend((id)objc_opt_self(PHAssetResourceManager), "defaultManager");
        v35 = sub_100037078;
        v36 = (_QWORD *)v17;
        aBlock = _NSConcreteStackBlock;
        v32 = 1107296256;
        v33 = sub_1000356B4;
        v34 = &unk_10008C198;
        v19 = _Block_copy(&aBlock);
        v20 = v36;
        swift_retain(v17);
        swift_release(v20, v21);
        v22 = (_QWORD *)swift_allocObject(&unk_10008C1D0, 56, 7);
        v22[2] = v3;
        v22[3] = v17;
        v22[4] = v30;
        v22[5] = a3;
        v22[6] = a1;
        v35 = sub_100037128;
        v36 = v22;
        aBlock = _NSConcreteStackBlock;
        v32 = 1107296256;
        v33 = sub_10001021C;
        v34 = &unk_10008C1E8;
        v23 = _Block_copy(&aBlock);
        v24 = v36;
        swift_bridgeObjectRetain(a3);
        v25 = a1;
        swift_retain(v17);
        v26 = v3;
        swift_release(v24, v27);
        objc_msgSend(v18, "requestDataForAssetResource:options:dataReceivedHandler:completionHandler:", v14, 0, v19, v23);
        _Block_release(v23);
        _Block_release(v19);

        swift_release(v17, v28);
        return;
      }

      ++v12;
      if (v15 == v10)
        goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    if (v9 < 0)
      v29 = v9;
    else
      v29 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
  }
LABEL_10:
  swift_bridgeObjectRelease_n(v9, 2, v11);
}

uint64_t sub_100034E8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[5];
  char *v46;

  v40 = a7;
  v37 = a2;
  v38 = a6;
  v36 = a5;
  v41 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v12 - 8);
  v43 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PHPickerResult(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v39 = static OS_dispatch_queue.main.getter();
  v19 = swift_allocObject(&unk_10008C258, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a4, v15);
  v20 = *(unsigned __int8 *)(v16 + 80);
  v21 = (v20 + 40) & ~v20;
  v22 = (char *)swift_allocObject(v36, v21 + v17, v20 | 7);
  *((_QWORD *)v22 + 2) = v19;
  *((_QWORD *)v22 + 3) = a1;
  v23 = v37;
  *((_QWORD *)v22 + 4) = v37;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v22[v21], v18, v15);
  aBlock[4] = v38;
  v46 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = v40;
  v24 = _Block_copy(aBlock);
  v25 = v46;
  v26 = a1;
  swift_errorRetain(v23);
  v28 = swift_release(v25, v27);
  static DispatchQoS.unspecified.getter(v28);
  aBlock[0] = _swiftEmptyArrayStorage;
  v29 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v30 = sub_10000A66C(&qword_10009B198);
  v31 = sub_10000D6D4();
  v32 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v41, v29);
  v33 = (void *)v39;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v14, v43);
}

void sub_100035134(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  uint64_t v5;
  void *v6;
  char **v11;
  double v12;
  double v13;
  double v14;
  double v15;
  char **v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  id v22;
  void *DownsampledImage;
  uint64_t v24;
  uint64_t v25;

  v6 = v4;
  v11 = &off_100098000;
  objc_msgSend(a1, "size");
  v13 = v12;
  objc_msgSend(a1, "size");
  if (v13 > v14)
    v15 = v13;
  else
    v15 = v14;
  if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v15 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    swift_once(&qword_10009E700, sub_100034A1C);
    goto LABEL_10;
  }
  v5 = (uint64_t)v15;
  if ((uint64_t)v15 < 8001 || (v16 = (char **)objc_msgSend(a1, "CGImage")) == 0)
  {
    v22 = a1;
    goto LABEL_15;
  }
  v11 = v16;
  if (qword_10009E700 != -1)
    goto LABEL_19;
LABEL_10:
  v17 = type metadata accessor for Logger(0);
  sub_10000D130(v17, (uint64_t)qword_10009E708);
  v18 = v6;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    *(_DWORD *)v21 = 134218240;
    v24 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v21 + 4, v21 + 12);
    *(_WORD *)(v21 + 12) = 2048;
    v24 = 8000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v21 + 14, v21 + 22);

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "maxDimension: %ld is greater than max: %ld, attempting downscale", (uint8_t *)v21, 0x16u);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

  }
  DownsampledImage = (void *)_UIStickerCreateDownsampledImage(v11, 8000);
  v22 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", DownsampledImage);

LABEL_15:
  sub_100035968(v22, a2, a3, a4);

}

uint64_t sub_100035394(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *Strong;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD aBlock[5];
  char *v52;
  char v53[32];

  v42 = a6;
  v43 = a7;
  v40 = a5;
  v46 = type metadata accessor for DispatchWorkItemFlags(0);
  v49 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v45 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  __chkstk_darwin(v12);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PHPickerResult(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v44 = static OS_dispatch_queue.main.getter();
  v18 = swift_allocObject(&unk_10008C258, 24, 7);
  swift_beginAccess(a4 + 16, v53, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4 + 16);
  swift_unknownObjectWeakInit(v18 + 16, Strong);

  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v40, v14);
  v20 = *(unsigned __int8 *)(v15 + 80);
  v21 = (v20 + 48) & ~v20;
  v22 = (v16 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (char *)swift_allocObject(&unk_10008C438, v22 + 16, v20 | 7);
  *((_QWORD *)v23 + 2) = v18;
  *((_QWORD *)v23 + 3) = a1;
  *((_QWORD *)v23 + 4) = a2;
  *((_QWORD *)v23 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v23[v21], v17, v14);
  v24 = &v23[v22];
  v25 = v43;
  *(_QWORD *)v24 = v42;
  *((_QWORD *)v24 + 1) = v25;
  aBlock[4] = sub_100037BD4;
  v52 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001340C;
  aBlock[3] = &unk_10008C450;
  v26 = _Block_copy(aBlock);
  swift_retain(v18);
  sub_100037F58(a1, a2);
  swift_errorRetain(a3);
  v27 = swift_bridgeObjectRetain(v25);
  v28 = v41;
  static DispatchQoS.unspecified.getter(v27);
  v50 = _swiftEmptyArrayStorage;
  v29 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v30 = sub_10000A66C(&qword_10009B198);
  v31 = sub_10000D6D4();
  v33 = v45;
  v32 = v46;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v30, v31, v46, v29);
  v34 = (void *)v44;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v28, v33, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v32);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v48);
  v35 = v52;
  swift_release(v18, v36);
  return swift_release(v35, v37);
}

uint64_t sub_1000356B4(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, unint64_t);
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;

  v4(v6, v8);
  sub_100037034(v6, v8);
  return swift_release(v3, v9);
}

uint64_t sub_100035724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  _QWORD *v33;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v29 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter();
  v17 = swift_allocObject(&unk_10008C258, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, a1);
  v18 = (_QWORD *)swift_allocObject(&unk_10008C280, 56, 7);
  v18[2] = v17;
  v18[3] = a2;
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  aBlock[4] = sub_10003723C;
  v33 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008C298;
  v19 = _Block_copy(aBlock);
  v20 = v33;
  swift_bridgeObjectRetain(a4);
  v21 = a5;
  swift_retain(a2);
  v23 = swift_release(v20, v22);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_10000A66C(&qword_10009B198);
  v26 = sub_10000D6D4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v10, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v30);
}

void sub_100035968(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _UNKNOWN **);
  uint64_t v24;
  id v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, _UNKNOWN **);
  uint64_t v31;
  char *v32;
  id v33;
  unint64_t v34;
  Class isa;
  uint64_t v36;
  unint64_t v37;

  v5 = v4;
  v10 = type metadata accessor for StickersCancelState(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0xA8))(v12);
  if (v15)
  {
    v16 = (void *)v15;
    v37 = (unint64_t)_swiftEmptyArrayStorage;
    if (a4 && a3)
    {
      type metadata accessor for StickerLivePhotoConfirmationController(0);
      v17 = a4;
      v18 = a1;
      swift_bridgeObjectRetain(a3);
      v19 = sub_10004C2EC(v18, a2, a3, v17);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v21 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v20 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v21 >= v20 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
      v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
      specialized Array._endMutation()(v22);
      v23 = *(void (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *(_QWORD *)v19) + 0x140);
      v24 = swift_unknownObjectRetain(v4);
      v23(v24, &off_10008C230);
      v25 = objc_msgSend(v19, "presentationController");
      if (v25)
      {
        v26 = v25;
        objc_msgSend(v25, "setDelegate:", v5);

      }
    }
    else
    {
      type metadata accessor for StickerImageConfirmationController();
      swift_bridgeObjectRetain(a3);
      v17 = sub_10000A9A4(a1, a2, a3);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v28 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v27 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v17);
      specialized Array._endMutation()(v29);
      v30 = *(void (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *(_QWORD *)v17) + 0xB8);
      v31 = swift_unknownObjectRetain(v4);
      v30(v31, &off_10008C210);
      v32 = (char *)objc_msgSend(v17, "presentationController");
      if (!v32)
        goto LABEL_13;
      v19 = v32;
      objc_msgSend(v32, "setDelegate:", v4);
    }

LABEL_13:
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, enum case for StickersCancelState.choosePhoto(_:), v10);
    (*(void (**)(char *))((swift_isaMask & *v5) + 0x98))(v14);
    v33 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "init");
    v34 = v37;
    sub_10000D5F4(0, &qword_10009C9C0, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v34);
    objc_msgSend(v33, "setViewControllers:", isa);

    objc_msgSend(v33, "setToolbarHidden:", 0);
    objc_msgSend(v16, "presentViewController:animated:completion:", v33, 1, 0);

  }
}

uint64_t sub_100035CCC()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Class isa;

  v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xC0);
  v2 = v1();
  v3 = *(_QWORD *)(v2 + 16);
  result = swift_bridgeObjectRelease(v2);
  if (v3)
  {
    v5 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0xA8))(result);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v1();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v7);
      objc_msgSend(v6, "deselectAssetsWithIdentifiers:", isa);

    }
    return (*(uint64_t (**)(void *))((swift_isaMask & *v0) + 0xC8))(&_swiftEmptyArrayStorage);
  }
  return result;
}

id sub_100035DA0(void *a1)
{
  sub_100035CCC();
  return objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_100035DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = *(uint64_t (**)(void))((swift_isaMask & *v3) + 0x78);
  v9 = v8();
  if (v9)
  {
    v11 = v9;
    v12 = v10;
    ObjectType = swift_getObjectType(v9);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v12 + 8))(v4, ObjectType, v12);
    v9 = swift_unknownObjectRelease(v11);
  }
  v14 = ((uint64_t (*)(uint64_t))v8)(v9);
  if (v14)
  {
    v16 = v14;
    v17 = v15;
    v18 = swift_getObjectType(v14);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v17 + 32))(v4, a3, v18, v17);
    swift_unknownObjectRelease(v16);
  }
  sub_100035E9C(a1, a2);
}

void sub_100035E9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t ObjectType;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  _QWORD v26[4];
  char v27;

  ObjectType = swift_getObjectType(a1);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  if (v5)
  {
    v6 = (void *)v5;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v25, ObjectType, a2);
    sub_1000292DC((uint64_t)v25, (uint64_t)v26);
    if ((v27 & 1) == 0)
    {
      v7 = *(double *)v26;
      v8 = *(double *)&v26[1];
      v9 = *(double *)&v26[2];
      v10 = *(double *)&v26[3];
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
      v23 = v13;
      v24 = v12;
      v15 = v14;
      v16 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x78))();
      if (v16)
      {
        v18 = v16;
        v19 = v17;
        v22 = v15 & 1;
        v20 = swift_getObjectType(v16);
        v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
        (*(void (**)(_QWORD *, void *, void *, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, double, double, double, double, uint64_t))(v19 + 24))(v2, v21, v6, v11, v24, v23, v22, v20, v7, v8, v9, v10, v19);

        swift_unknownObjectRelease(v18);
      }
    }

  }
}

void sub_10003600C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = v4;
  v10 = *(uint64_t (**)(void))((swift_isaMask & *v4) + 0x78);
  v11 = v10();
  if (v11)
  {
    v13 = v11;
    v14 = v12;
    ObjectType = swift_getObjectType(v11);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 8))(v5, ObjectType, v14);
    v11 = swift_unknownObjectRelease(v13);
  }
  v16 = ((uint64_t (*)(uint64_t))v10)(v11);
  if (v16)
  {
    v18 = v16;
    v19 = v17;
    v20 = swift_getObjectType(v16);
    (*(void (**)(_QWORD *, uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 40))(v5, a3, a4 & 1, v20, v19);
    swift_unknownObjectRelease(v18);
  }
  sub_100035E9C(a1, a2);
}

uint64_t sub_1000360DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  result = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x78))();
  if (result)
  {
    v6 = result;
    v7 = v5;
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, a2, ObjectType, v7);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_1000361A8()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  result = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x78))();
  if (result)
  {
    v3 = result;
    v4 = v2;
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 8))(v0, ObjectType, v4);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

_QWORD *sub_1000362CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_10000A66C((uint64_t *)&unk_10009C0B0);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000363D8(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000363D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1000364C8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  CFArrayRef v40;
  void **v41;
  uint64_t v42;
  void *v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  BOOL v49;
  void *v50;
  void *v51;
  uint64_t result;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  void **v69;
  uint64_t v70;
  void **v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(_QWORD, _QWORD, _QWORD);
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  __n128 v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  void **v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  void **v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t ObjectType;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  __n128 v115;
  void **v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(_QWORD, _QWORD, _QWORD);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void **aBlock;
  uint64_t v136;
  void (*v137)(uint64_t, void *, void *);
  void *v138;
  uint64_t (*v139)(void *, uint64_t);
  uint64_t v140;
  uint64_t v141;
  char v142;

  v2 = v1;
  v4 = sub_10000A66C(&qword_10009B888);
  __chkstk_darwin(v4);
  v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for UTType(0);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v113 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PHPickerResult(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v122 = (char *)&v107 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
  {
    result = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x78))(v13);
    if (result)
    {
      v104 = result;
      v105 = v103;
      ObjectType = swift_getObjectType(result);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v105 + 8))(v2, ObjectType, v105);
      return swift_unknownObjectRelease(v104);
    }
    return result;
  }
  v111 = v6;
  v16 = sub_100034AA4(a1);
  (*(void (**)(_QWORD *))((swift_isaMask & *v2) + 0xC8))(v16);
  v128 = objc_msgSend(objc_allocWithZone((Class)StickerPhotosUtil), "init");
  v17 = sub_10000D5F4(0, &qword_10009C090, PHLivePhoto_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v19 = *(unsigned __int8 *)(v9 + 80);
  v133 = a1 + ((v19 + 32) & ~v19);
  v134 = ObjCClassFromMetadata;
  v132 = *(_QWORD *)(v9 + 72);
  v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v9 + 16);
  v107 = &v142;
  v129 = v19 | 7;
  v130 = (v19 + 24) & ~v19;
  v127 = v130 + v10;
  v110 = (v130 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v109 = v110 + 16;
  v108 = a1;
  v21 = swift_bridgeObjectRetain(a1);
  v22 = 0;
  v21.n128_u64[0] = 136315138;
  v115 = v21;
  v114 = (char *)&type metadata for Any + 8;
  v119 = v9;
  v123 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v122;
  v120 = v15;
  v131 = v20;
  v121 = v2;
  v112 = v8;
  while (1)
  {
    v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v23, v133 + v132 * v22, v8);
    v31 = (void *)PHPickerResult.itemProvider.getter(v30);
    if (!objc_msgSend(v31, "canLoadObjectOfClass:", v134))
      break;
    v20(v12, v23, v8);
    v24 = swift_allocObject(&unk_10008C348, v127, v129);
    *(_QWORD *)(v24 + 16) = v2;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24 + v130, v12, v8);
    v139 = sub_100037558;
    v140 = v24;
    aBlock = _NSConcreteStackBlock;
    v136 = 1107296256;
    v137 = sub_100034E88;
    v138 = &unk_10008C360;
    v25 = _Block_copy(&aBlock);
    v26 = v140;
    v27 = v2;
    v28 = v26;
    v20 = v131;
    swift_release(v28, v29);
    objc_msgSend(v128, "loadLivePhotoFromItemProvider:completion:", v31, v25);
    _Block_release(v25);

LABEL_4:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v23, v8);
LABEL_5:
    if (++v22 == v15)
    {

      return swift_bridgeObjectRelease(v108);
    }
  }
  v32 = sub_10000D5F4(0, &qword_10009C098, UIImage_ptr);
  if (objc_msgSend(v31, "canLoadObjectOfClass:", swift_getObjCClassFromMetadata(v32)))
  {
    v20(v12, v23, v8);
    v33 = swift_allocObject(&unk_10008C2F8, v127, v129);
    *(_QWORD *)(v33 + 16) = v2;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v33 + v130, v12, v8);
    v139 = sub_1000374C4;
    v140 = v33;
    aBlock = _NSConcreteStackBlock;
    v136 = 1107296256;
    v137 = sub_100034E88;
    v138 = &unk_10008C310;
    v34 = _Block_copy(&aBlock);
    v35 = v140;
    v36 = v2;
    v37 = v35;
    v20 = v131;
    swift_release(v37, v38);
    objc_msgSend(v128, "loadImageFromItemProvider:completion:", v31, v34);

    _Block_release(v34);
    goto LABEL_4;
  }
  v39 = objc_msgSend(v31, "registeredTypeIdentifiers");
  v126 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v39, &type metadata for String);

  v40 = CGImageSourceCopyTypeIdentifiers();
  aBlock = 0;
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v40, &aBlock, &type metadata for String);

  v41 = aBlock;
  if (!aBlock)
  {
LABEL_46:
    if (qword_10009E700 != -1)
      swift_once(&qword_10009E700, sub_100034A1C);
    v86 = type metadata accessor for Logger(0);
    sub_10000D130(v86, (uint64_t)qword_10009E708);
    v87 = v126;
    swift_bridgeObjectRetain(v126);
    v89 = Logger.logObject.getter(v88);
    v90 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v89, v90))
    {
      v92 = swift_slowAlloc(12, -1);
      v93 = (void **)swift_slowAlloc(32, -1);
      aBlock = v93;
      *(_DWORD *)v92 = v115.n128_u32[0];
      swift_bridgeObjectRetain(v87);
      v95 = Array.description.getter(v94, &type metadata for String);
      v97 = v96;
      swift_bridgeObjectRelease(v87);
      v98 = v95;
      v23 = v122;
      *(_QWORD *)(v92 + 4) = sub_10000C99C(v98, v97, (uint64_t *)&aBlock);
      swift_bridgeObjectRelease_n(v87, 2, v99);
      v100 = v97;
      v12 = v123;
      swift_bridgeObjectRelease(v100);
      _os_log_impl((void *)&_mh_execute_header, v89, v90, "Error loading item from provider with registered types %s", (uint8_t *)v92, 0xCu);
      swift_arrayDestroy(v93, 1, v114);
      v101 = v93;
      v9 = v119;
      swift_slowDealloc(v101, -1, -1);
      v102 = v92;
      v20 = v131;
      swift_slowDealloc(v102, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v87, 2, v91);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v23, v8);
    v15 = v120;
    v2 = v121;
    goto LABEL_5;
  }
  v125 = *(_QWORD *)(v126 + 16);
  if (!v125)
  {
    swift_bridgeObjectRelease(aBlock);
    goto LABEL_46;
  }
  v42 = 0;
  v43 = aBlock[2];
  v124 = v126 + 32;
  v116 = aBlock + 9;
  while (1)
  {
    if (v43)
    {
      v44 = (uint64_t *)(v124 + 16 * v42);
      v46 = *v44;
      v45 = v44[1];
      v47 = v41[4];
      v48 = v41[5];
      v49 = v47 == (void *)*v44 && v48 == (void *)v45;
      if (v49 || (_stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, *v44, v44[1], 0) & 1) != 0)
      {
LABEL_35:
        swift_bridgeObjectRetain_n(v45, 2);
        swift_bridgeObjectRelease(v41);
        v60 = (uint64_t)v111;
        UTType.init(_:)(v46, v45);
        v61 = v117;
        v62 = v118;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v60, 1, v118) != 1)
        {
          swift_bridgeObjectRelease(v126);
          (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v113, v60, v62);
          v2 = v121;
          v63 = v123;
          if (qword_10009E700 != -1)
            swift_once(&qword_10009E700, sub_100034A1C);
          v64 = type metadata accessor for Logger(0);
          sub_10000D130(v64, (uint64_t)qword_10009E708);
          v65 = swift_bridgeObjectRetain_n(v45, 2);
          v66 = Logger.logObject.getter(v65);
          v67 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v66, v67))
          {
            v68 = (uint8_t *)swift_slowAlloc(12, -1);
            aBlock = (void **)swift_slowAlloc(32, -1);
            v69 = aBlock;
            *(_DWORD *)v68 = v115.n128_u32[0];
            v126 = (uint64_t)(v68 + 4);
            swift_bridgeObjectRetain(v45);
            v141 = sub_10000C99C(v46, v45, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, v107, v126, v68 + 12);
            swift_bridgeObjectRelease_n(v45, 3, v70);
            _os_log_impl((void *)&_mh_execute_header, v66, v67, "Attempting to load data with type identifier %s as a UIImage", v68, 0xCu);
            swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
            v71 = v69;
            v63 = v123;
            swift_slowDealloc(v71, -1, -1);
            swift_slowDealloc(v68, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v45, 2, v72);
          }
          v73 = swift_allocObject(&unk_10008C258, 24, 7);
          swift_unknownObjectWeakInit(v73 + 16, v2);
          v74 = v63;
          v75 = v112;
          v76 = v131;
          v131(v74, v122, v112);
          v77 = swift_allocObject(&unk_10008C2D0, v109, v129);
          *(_QWORD *)(v77 + 16) = v73;
          v78 = v119;
          (*(void (**)(uint64_t, char *, uint64_t))(v119 + 32))(v77 + v130, v123, v75);
          v79 = (uint64_t *)(v77 + v110);
          *v79 = v46;
          v79[1] = v45;
          v20 = v76;
          v80 = swift_retain(v73);
          v81 = v113;

          v82 = v77;
          v9 = v78;
          swift_release(v82, v83);

          v84 = v81;
          v23 = v122;
          (*(void (**)(char *, uint64_t))(v117 + 8))(v84, v118);
          (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v75);
          v8 = v75;
          v12 = v123;
          swift_release(v73, v85);
          v15 = v120;
          goto LABEL_5;
        }
        swift_bridgeObjectRelease(v45);
        sub_10003737C(v60);
LABEL_45:
        v8 = v112;
        v9 = v119;
        v12 = v123;
        v23 = v122;
        v20 = v131;
        goto LABEL_46;
      }
      if (v43 != (void *)1)
      {
        v50 = v41[6];
        v51 = v41[7];
        if (v50 == (void *)v46 && v51 == (void *)v45)
          goto LABEL_35;
        result = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v51, v46, v45, 0);
        if ((result & 1) != 0)
          goto LABEL_35;
        if (v43 != (void *)2)
          break;
      }
    }
LABEL_12:
    if (++v42 == v125)
    {
      swift_bridgeObjectRelease(v41);
      goto LABEL_45;
    }
  }
  v54 = v116;
  v55 = 2;
  while (1)
  {
    v56 = v55 + 1;
    if (__OFADD__(v55, 1))
      break;
    v57 = (uint64_t)*(v54 - 1);
    v58 = *v54;
    if (v57 == v46 && v58 == (void *)v45)
      goto LABEL_35;
    result = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v58, v46, v45, 0);
    if ((result & 1) != 0)
      goto LABEL_35;
    v54 += 2;
    ++v55;
    if ((void *)v56 == v43)
      goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_100037010()
{
  uint64_t v0;

  sub_100037034(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100037034(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result, a2);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL, a2);
}

uint64_t sub_100037078(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 16, v6, 33, 0);
  Data.append(_:)(a1, a2);
  return swift_endAccess(v6);
}

uint64_t sub_1000370D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000370E4(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

uint64_t sub_1000370EC()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24), v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100037128()
{
  uint64_t v0;

  return sub_100035724(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100037138()
{
  return type metadata accessor for StickerPhotosController(0);
}

uint64_t sub_100037140(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100078DA8;
  result = type metadata accessor for StickersCancelState(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100078DC0;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000371DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100037200(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v2 + 16), a2);
  swift_release(*(_QWORD *)(v2 + 24), v3);
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));

  return swift_deallocObject(v2, 56, 7);
}

void sub_10003723C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  Class isa;
  id v12;
  uint64_t v13;
  _BYTE v14[24];

  v1 = v0[3];
  v2 = v0[4];
  v3 = v0[5];
  v4 = (void *)v0[6];
  v5 = v0[2] + 16;
  swift_beginAccess(v5, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    swift_beginAccess(v1 + 16, &v13, 0, 0);
    v8 = *(_QWORD *)(v1 + 16);
    v9 = *(_QWORD *)(v1 + 24);
    v10 = objc_allocWithZone((Class)UIImage);
    sub_100037338(v8, v9);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v12 = objc_msgSend(v10, "initWithData:", isa);
    sub_100037034(v8, v9);

    if (v12)
    {
      sub_100035134(v12, v2, v3, v4);

    }
  }
}

uint64_t sub_100037338(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10003737C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000A66C(&qword_10009B888);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000373BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16), v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100037450(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;

  v7 = *(_QWORD *)(type metadata accessor for PHPickerResult(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_100035394(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v8, *v9, v9[1]);
}

uint64_t sub_1000374C4(void *a1, uint64_t a2)
{
  return sub_100037574(a1, a2, (uint64_t)&unk_10008C3E8, (uint64_t)sub_1000378C8, (uint64_t)&unk_10008C400);
}

uint64_t sub_1000374E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100037558(void *a1, uint64_t a2)
{
  return sub_100037574(a1, a2, (uint64_t)&unk_10008C398, (uint64_t)sub_1000375EC, (uint64_t)&unk_10008C3B0);
}

uint64_t sub_100037574(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PHPickerResult(0) - 8) + 80);
  return sub_100034E8C(a1, a2, *(_QWORD *)(v5 + 16), v5 + ((v11 + 24) & ~v11), a3, a4, a5);
}

void sub_1000375EC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  char **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  type metadata accessor for PHPickerResult(0);
  v1 = (void *)v0[3];
  v2 = v0[4];
  v3 = v0[2] + 16;
  swift_beginAccess(v3, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if (!v1 || v2)
    {
      if (qword_10009E700 != -1)
        swift_once(&qword_10009E700, sub_100034A1C);
      v10 = type metadata accessor for Logger(0);
      sub_10000D130(v10, (uint64_t)qword_10009E708);
      swift_errorRetain(v2);
      v11 = swift_errorRetain(v2);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(12, -1);
        v15 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v14 = 138412290;
        if (v2)
        {
          swift_errorRetain(v2);
          v16 = _swift_stdlib_bridgeErrorToNSError(v2);
          v18 = v16;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19, v14 + 4, v14 + 12);
        }
        else
        {
          v18 = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19, v14 + 4, v14 + 12);
          v16 = 0;
        }
        *v15 = v16;
        swift_errorRelease(v2);
        swift_errorRelease(v2);
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Error loading live photo: %@", v14, 0xCu);
        v17 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
        swift_arrayDestroy(v15, 1, v17);
        swift_slowDealloc(v15, -1, -1);
        swift_slowDealloc(v14, -1, -1);

      }
      else
      {

        swift_errorRelease(v2);
        swift_errorRelease(v2);
      }

    }
    else
    {
      v6 = v1;
      v7 = (char **)PHPickerResult.assetIdentifier.getter(v6);
      v9 = v8;
      sub_100034BC0(v6, v7, v8);

      swift_bridgeObjectRelease(v9);
    }
  }
}

uint64_t sub_100037844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16), v7);

  swift_errorRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1000378C8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  type metadata accessor for PHPickerResult(0);
  v1 = (void *)v0[3];
  v2 = v0[4];
  v3 = v0[2] + 16;
  swift_beginAccess(v3, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if (!v1 || v2)
    {
      if (qword_10009E700 != -1)
        swift_once(&qword_10009E700, sub_100034A1C);
      v10 = type metadata accessor for Logger(0);
      sub_10000D130(v10, (uint64_t)qword_10009E708);
      swift_errorRetain(v2);
      v11 = swift_errorRetain(v2);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(12, -1);
        v15 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v14 = 138412290;
        if (v2)
        {
          swift_errorRetain(v2);
          v16 = _swift_stdlib_bridgeErrorToNSError(v2);
          v18 = v16;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19, v14 + 4, v14 + 12);
        }
        else
        {
          v18 = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19, v14 + 4, v14 + 12);
          v16 = 0;
        }
        *v15 = v16;
        swift_errorRelease(v2);
        swift_errorRelease(v2);
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Error loading image from photo: %@", v14, 0xCu);
        v17 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
        swift_arrayDestroy(v15, 1, v17);
        swift_slowDealloc(v15, -1, -1);
        swift_slowDealloc(v14, -1, -1);

      }
      else
      {

        swift_errorRelease(v2);
        swift_errorRelease(v2);
      }

    }
    else
    {
      v6 = v1;
      v7 = PHPickerResult.assetIdentifier.getter(v6);
      v9 = v8;
      sub_100035134(v6, v7, v8, 0);

      swift_bridgeObjectRelease(v9);
    }
  }
}

uint64_t sub_100037B20()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release(*((_QWORD *)v0 + 2), v5);
  v6 = *((_QWORD *)v0 + 4);
  if (v6 >> 60 != 15)
    sub_100037034(*((_QWORD *)v0 + 3), v6);
  v7 = (v3 + 48) & ~v3;
  v8 = (v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_errorRelease(*((_QWORD *)v0 + 5));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v7], v1);
  swift_bridgeObjectRelease(*(_QWORD *)&v0[v8 + 8]);
  return swift_deallocObject(v0, v8 + 16, v3 | 7);
}

void sub_100037BD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  id v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = v0[3];
  v4 = v0[4];
  v3 = v0[5];
  v5 = (_QWORD *)((char *)v0
                + ((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
                  + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
                  + 7) & 0xFFFFFFFFFFFFFFF8));
  v7 = *v5;
  v6 = v5[1];
  v8 = v0[2] + 16;
  swift_beginAccess(v8, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    if (v4 >> 60 != 15)
    {
      v11 = objc_allocWithZone((Class)UIImage);
      sub_100037338(v2, v4);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v13 = objc_msgSend(v11, "initWithData:", isa);

      if (v13)
      {
        if (!v3)
        {
          v26 = PHPickerResult.assetIdentifier.getter(v14);
          v28 = v27;
          sub_100035134(v13, v26, v27, 0);

          swift_bridgeObjectRelease(v28);
          sub_100037F6C(v2, v4);
          return;
        }

      }
      sub_100037F6C(v2, v4);
    }
    if (qword_10009E700 != -1)
      swift_once(&qword_10009E700, sub_100034A1C);
    v15 = type metadata accessor for Logger(0);
    sub_10000D130(v15, (uint64_t)qword_10009E708);
    swift_bridgeObjectRetain(v6);
    swift_errorRetain(v3);
    swift_bridgeObjectRetain(v6);
    v16 = swift_errorRetain(v3);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(22, -1);
      v20 = (uint64_t *)swift_slowAlloc(8, -1);
      v21 = swift_slowAlloc(32, -1);
      v30 = v21;
      *(_DWORD *)v19 = 136315394;
      swift_bridgeObjectRetain(v6);
      v29 = sub_10000C99C(v7, v6, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v19 + 4, v19 + 12);
      swift_bridgeObjectRelease_n(v6, 3, v22);
      *(_WORD *)(v19 + 12) = 2112;
      if (v3)
      {
        swift_errorRetain(v3);
        v23 = _swift_stdlib_bridgeErrorToNSError(v3);
        v29 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v19 + 14, v19 + 22);
      }
      else
      {
        v29 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v19 + 14, v19 + 22);
        v23 = 0;
      }
      *v20 = v23;
      swift_errorRelease(v3);
      swift_errorRelease(v3);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Error loading %s image: %@", (uint8_t *)v19, 0x16u);
      v25 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
      swift_arrayDestroy(v20, 1, v25);
      swift_slowDealloc(v20, -1, -1);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v6, 2, v24);
      swift_errorRelease(v3);
      swift_errorRelease(v3);

    }
  }
}

uint64_t sub_100037F58(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100037338(result, a2);
  return result;
}

uint64_t sub_100037F6C(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100037034(result, a2);
  return result;
}

uint64_t sub_100037FB8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009E7B8);
  sub_10000D130(v0, (uint64_t)qword_10009E7B8);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD000000000000012, 0x8000000100074FC0);
}

void sub_100038038()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = IMBalloonPluginIdentifierAnimojiStickers;
  v1 = (id)IMBalloonExtensionIDWithSuffix();

  if (v1)
  {
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v4 = v3;

    qword_10009FD28 = v2;
    unk_10009FD30 = v4;
  }
  else
  {
    __break(1u);
  }
}

uint64_t *sub_1000380A8()
{
  if (qword_10009E7D0 != -1)
    swift_once(&qword_10009E7D0, sub_100038038);
  return &qword_10009FD28;
}

uint64_t sub_1000380E8()
{
  uint64_t v0;

  if (qword_10009E7D0 != -1)
    swift_once(&qword_10009E7D0, sub_100038038);
  v0 = qword_10009FD28;
  swift_bridgeObjectRetain(unk_10009FD30);
  return v0;
}

uint64_t sub_100038144(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  return Published.init(initialValue:)(v3, &type metadata for String);
}

uint64_t sub_100038170()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100078E40);
  v2 = swift_getKeyPath(&unk_100078E68);
  static Published.subscript.getter(&v6, v0, KeyPath, v2);
  swift_release(v2, v3);
  swift_release(KeyPath, v4);
  return v6;
}

uint64_t sub_1000381E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 112))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100038210(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 120);
  swift_bridgeObjectRetain(v3);
  return v4(v2, v3);
}

uint64_t sub_100038254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  KeyPath = swift_getKeyPath(&unk_100078E40);
  v6 = swift_getKeyPath(&unk_100078E68);
  v8[0] = a1;
  v8[1] = a2;
  swift_retain(v2);
  return static Published.subscript.setter(v8, v2, KeyPath, v6);
}

void (*sub_1000382CC(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100078E40);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100078E68);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100038344;
}

uint64_t sub_100038348()
{
  return 0x616974696E696E75;
}

uint64_t sub_10003836C()
{
  return sub_100038A68(&OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__selectedItemIdentifier, &qword_10009C0D0);
}

uint64_t sub_100038380(uint64_t a1)
{
  return sub_100038AE8(a1, &qword_10009C0D8, &OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__selectedItemIdentifier, &qword_10009C0D0);
}

void (*sub_10003839C(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10000A66C(&qword_10009C0D8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__selectedItemIdentifier;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10000A66C(&qword_10009C0D0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100038464;
}

uint64_t sub_100038468()
{
  return sub_100038898((uint64_t)&unk_100078E88, (uint64_t)&unk_100078EB0);
}

uint64_t sub_10003847C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000384B0(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 168))(*a1);
}

uint64_t sub_1000384DC(char a1)
{
  return sub_100038974(a1, (uint64_t)&unk_100078E88, (uint64_t)&unk_100078EB0);
}

void (*sub_1000384F0(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100078E88);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100078EB0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100038344;
}

uint64_t sub_100038568()
{
  return sub_100038A68(OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__canShowAppStore, &qword_10009C0E0);
}

uint64_t sub_10003857C(uint64_t a1)
{
  return sub_100038AE8(a1, &qword_10009C0E8, OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__canShowAppStore, &qword_10009C0E0);
}

void (*sub_100038598(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10000A66C(&qword_10009C0E8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__canShowAppStore[0];
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10000A66C(&qword_10009C0E0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100038464;
}

uint64_t sub_100038660()
{
  return sub_100038898((uint64_t)&unk_100078ED0, (uint64_t)&unk_100078EF8);
}

uint64_t sub_100038674@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 208))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000386A8(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 216))(*a1);
}

uint64_t sub_1000386D4(char a1)
{
  return sub_100038974(a1, (uint64_t)&unk_100078ED0, (uint64_t)&unk_100078EF8);
}

void (*sub_1000386E8(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100078ED0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100078EF8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100038344;
}

uint64_t sub_100038760()
{
  return sub_100038A68(OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__isUserContentSupported, &qword_10009C0E0);
}

uint64_t sub_100038774(uint64_t a1)
{
  return sub_100038AE8(a1, &qword_10009C0E8, OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__isUserContentSupported, &qword_10009C0E0);
}

void (*sub_100038790(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10000A66C(&qword_10009C0E8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__isUserContentSupported[0];
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10000A66C(&qword_10009C0E0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100038464;
}

uint64_t sub_100038858(char a1)
{
  char v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Bool);
}

uint64_t sub_100038884()
{
  return sub_100038898((uint64_t)&unk_100078F18, (uint64_t)&unk_100078F40);
}

uint64_t sub_100038898(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v9, v2, KeyPath, v5);
  swift_release(v5, v6);
  swift_release(KeyPath, v7);
  return v9;
}

uint64_t sub_100038900@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 256))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100038934(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 264))(*a1);
}

uint64_t sub_100038960(char a1)
{
  return sub_100038974(a1, (uint64_t)&unk_100078F18, (uint64_t)&unk_100078F40);
}

uint64_t sub_100038974(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  char v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  swift_retain(v3);
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

void (*sub_1000389DC(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100078F18);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100078F40);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100038344;
}

uint64_t sub_100038A54()
{
  return sub_100038A68(OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__willShowMemoji, &qword_10009C0E0);
}

uint64_t sub_100038A68(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v2 + *a1, v6, 33, 0);
  v4 = sub_10000A66C(a2);
  Published.projectedValue.getter(v4);
  return swift_endAccess(v6);
}

uint64_t sub_100038ACC(uint64_t a1)
{
  return sub_100038AE8(a1, &qword_10009C0E8, OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__willShowMemoji, &qword_10009C0E0);
}

uint64_t sub_100038AE8(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v15[24];

  v8 = sub_10000A66C(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  swift_beginAccess(v4 + *a3, v15, 33, 0);
  v12 = sub_10000A66C(a4);
  Published.projectedValue.setter(v11, v12);
  swift_endAccess(v15);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

void (*sub_100038BC0(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10000A66C(&qword_10009C0E8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__willShowMemoji[0];
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10000A66C(&qword_10009C0E0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100038464;
}

uint64_t sub_100038C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
  v3 = v2;
  if (qword_10009E7D0 != -1)
    swift_once(&qword_10009E7D0, sub_100038038);
  if (v1 == qword_10009FD28 && v3 == unk_10009FD30)
    v5 = 1;
  else
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, qword_10009FD28, unk_10009FD30, 0);
  swift_bridgeObjectRelease(v3);
  return v5 & 1;
}

uint64_t sub_100038D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;

  v1 = sub_10000A66C((uint64_t *)&unk_10009C0B0);
  inited = swift_initStackObject(v1, &v8);
  *(_OWORD *)(inited + 16) = xmmword_100078A20;
  *(_QWORD *)(inited + 32) = 0x746E65636572;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = 0x746E6F4372657375;
  *(_QWORD *)(inited + 56) = 0xEB00000000746E65;
  *(_QWORD *)(inited + 64) = 0x696A6F6D65;
  *(_QWORD *)(inited + 72) = 0xE500000000000000;
  v3 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
  v5 = v4;
  v6 = sub_100038DFC(v3, v4, (_QWORD *)inited);
  swift_bridgeObjectRelease(v5);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 3, &type metadata for String);
  return v6 & 1;
}

uint64_t sub_100038DFC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100038EC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  sub_100038EF4();
  return v1;
}

uint64_t sub_100038EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _WORD v25[8];

  v1 = v0;
  v2 = sub_10000A66C(&qword_10009BA60);
  __chkstk_darwin(v2);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000A66C(&qword_10009C0E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000A66C(&qword_10009C0D0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__selectedItemIdentifier;
  strcpy((char *)v25, "uninitialized");
  v25[7] = -4864;
  Published.init(initialValue:)(v25, &type metadata for String);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  v14 = v1 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__canShowAppStore;
  LOBYTE(v25[0]) = 0;
  Published.init(initialValue:)(v25, &type metadata for Bool);
  v15 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v15(v14, v8, v5);
  v16 = v1 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__isUserContentSupported;
  LOBYTE(v25[0]) = 1;
  Published.init(initialValue:)(v25, &type metadata for Bool);
  v15(v16, v8, v5);
  v17 = v1 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__willShowMemoji;
  LOBYTE(v25[0]) = 0;
  Published.init(initialValue:)(v25, &type metadata for Bool);
  v15(v17, v8, v5);
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
  type metadata accessor for MainActor(0);
  v19 = swift_retain(v1);
  v20 = static MainActor.shared.getter(v19);
  v21 = (_QWORD *)swift_allocObject(&unk_10008C4A8, 40, 7);
  v21[2] = v20;
  v21[3] = &protocol witness table for MainActor;
  v21[4] = v1;
  v22 = sub_100039678((uint64_t)v4, (uint64_t)&unk_10009C0F8, (uint64_t)v21);
  swift_release(v22, v23);
  return v1;
}

uint64_t sub_100039160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[15] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[16] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[17] = v6;
  v4[18] = v7;
  return swift_task_switch(sub_1000391CC, v6, v7);
}

uint64_t sub_1000391CC()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = objc_msgSend((id)objc_opt_self(_MSStickerSendManager), "sharedInstance");
  v3 = (void *)IMBalloonPluginIdentifierAppStore;
  v0[19] = v2;
  v0[20] = v3;
  v0[7] = v0 + 24;
  v0[2] = v0;
  v0[3] = sub_1000392A0;
  v4 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_100039664;
  v5[3] = &unk_10008CB48;
  v5[4] = v4;
  objc_msgSend(v2, "canShowBrowserForPluginIdentifier:completion:", v3, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_1000392A0()
{
  uint64_t v0;

  return swift_task_switch(sub_1000392E4, *(_QWORD *)(*(_QWORD *)v0 + 136), *(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_1000392E4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(void **)(v0 + 152);
  v1 = *(void **)(v0 + 160);
  (*(void (**)(_QWORD))(**(_QWORD **)(v0 + 120) + 168))(*(unsigned __int8 *)(v0 + 192));

  if (qword_10009E7B0 != -1)
    swift_once(&qword_10009E7B0, sub_100037FB8);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 168) = sub_10000D130(v4, (uint64_t)qword_10009E7B8);
  swift_retain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  v8 = os_log_type_enabled(v6, v7);
  v10 = *(_QWORD *)(v0 + 120);
  if (v8)
  {
    v11 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 67109120;
    *(_DWORD *)(v0 + 188) = (*(uint64_t (**)(void))(*(_QWORD *)v10 + 160))() & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 188, v0 + 192, v11 + 4, v11 + 8);
    swift_release(v10, v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Can show App Store: %{BOOL}d", v11, 8u);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 120), v9);
  }

  type metadata accessor for Sticker(0);
  v13 = (_QWORD *)swift_task_alloc(dword_10009D72C);
  *(_QWORD *)(v0 + 176) = v13;
  *v13 = v0;
  v13[1] = sub_100039488;
  return static Sticker.isUserContentSupported()();
}

uint64_t sub_100039488(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_BYTE *)(*v1 + 193) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1000394E0, *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144));
}

uint64_t sub_1000394E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;

  v3 = *(unsigned __int8 *)(v2 + 193);
  v4 = *(_QWORD *)(v2 + 120);
  swift_release(*(_QWORD *)(v2 + 128), a2);
  (*(void (**)(uint64_t))(*(_QWORD *)v4 + 216))(v3);
  v5 = swift_retain(v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v9 = *(_QWORD *)(v2 + 120);
    v10 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 67109120;
    *(_DWORD *)(v2 + 184) = (*(uint64_t (**)(void))(*(_QWORD *)v9 + 208))() & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 184, v2 + 188, v10 + 4, v10 + 8);
    swift_release(v9, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Is user content supported: %{BOOL}d", v10, 8u);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 120), v8);
  }

  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100039604()
{
  return sub_100039C08((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100039618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_10009C0F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002D3C8;
  return sub_100039160((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_100039664(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_100039678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10002E2B4(a1, &qword_10009BA60);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_10008CB30, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_10009C860, v16);
}

uint64_t sub_1000397C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 0x696A6F6D656DLL && a2 == 0xE600000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x696A6F6D656DLL, 0xE600000000000000, 0) & 1) != 0)
  {
    if (qword_10009E7D0 != -1)
      swift_once(&qword_10009E7D0, sub_100038038);
    a1 = qword_10009FD28;
    a2 = unk_10009FD30;
    v11 = swift_bridgeObjectRetain(unk_10009FD30);
  }
  else
  {
    v12 = qword_10009E7D0;
    v11 = swift_bridgeObjectRetain(a2);
    if (v12 != -1)
      swift_once(&qword_10009E7D0, sub_100038038);
  }
  if (a1 == qword_10009FD28 && a2 == unk_10009FD30)
    v13 = 1;
  else
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, qword_10009FD28, unk_10009FD30, 0);
  (*(void (**)(_QWORD, __n128))(*(_QWORD *)v2 + 264))(v13 & 1, v11);
  sub_100039AF0();
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = swift_allocObject(&unk_10008C4D0, 24, 7);
  swift_weakInit(v15 + 16, v2);
  v16 = (_QWORD *)swift_allocObject(&unk_10008C4F8, 40, 7);
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = sub_100039C44;
  v30 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001340C;
  aBlock[3] = &unk_10008C510;
  v17 = _Block_copy(aBlock);
  swift_retain(v15);
  static DispatchQoS.unspecified.getter(v18);
  v28 = _swiftEmptyArrayStorage;
  v19 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_10000A66C(&qword_10009B198);
  v21 = sub_10000F6DC((unint64_t *)&qword_10009B1A0, &qword_10009B198, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v20, v21, v5, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  swift_release(v30, v22);
  return swift_release(v15, v23);
}

unint64_t sub_100039AF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009B188;
  if (!qword_10009B188)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10009B188);
  }
  return result;
}

uint64_t sub_100039B2C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100039B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_10009E7F0 != -1)
    swift_once(&qword_10009E7F0, sub_10003A33C);
  v6 = __chkstk_darwin(qword_10009FD58);
  v8 = a1;
  v9 = a2;
  v10 = a3;
  return withAnimation<A>(_:_:)(v6, sub_100046B4C);
}

uint64_t sub_100039BF4()
{
  return sub_100039C08((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100039C08(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, 40, 7);
}

uint64_t sub_100039C44()
{
  uint64_t *v0;

  return sub_100039B50(v0[2], v0[3], v0[4]);
}

uint64_t *sub_100039C50()
{
  if (qword_10009E7F0 != -1)
    swift_once(&qword_10009E7F0, sub_10003A33C);
  return &qword_10009FD58;
}

uint64_t sub_100039C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100039CA0(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

uint64_t sub_100039CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__selectedItemIdentifier;
  v2 = sub_10000A66C(&qword_10009C0D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__canShowAppStore[0];
  v4 = sub_10000A66C(&qword_10009C0E0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__isUserContentSupported[0], v4);
  v5(v0 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__willShowMemoji[0], v4);
  return v0;
}

uint64_t sub_100039D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__selectedItemIdentifier;
  v2 = sub_10000A66C(&qword_10009C0D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__canShowAppStore[0];
  v4 = sub_10000A66C(&qword_10009C0E0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__isUserContentSupported[0], v4);
  v5(v0 + OBJC_IVAR____TtC22StickersUltraExtension25StickerPackStripViewModel__willShowMemoji[0], v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100039E04@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for StickerPackStripViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100039E40@<X0>(uint64_t a1@<X8>)
{
  return sub_100039E80(&qword_10009C100, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_100039E80@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000A66C(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E23C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = *v17;
    v21 = static os_log_type_t.fault.getter();
    v22 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v22, v21))
    {
      v28 = a4;
      v23 = swift_slowAlloc(12, -1);
      v29 = a5;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc(32, -1);
      v32 = v25;
      *(_DWORD *)v24 = 136315138;
      v31 = sub_10000C99C(v30, v28, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v24 + 4, v24 + 12);
      _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v20);
    swift_release(v20, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_10003A0B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = swift_getKeyPath(&unk_100078F60);
  v2 = sub_10000A66C(&qword_10009C100);
  return swift_storeEnumTagMultiPayload(a1, v2, 0);
}

uint64_t sub_10003A0FC()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10003A11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003EDF4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

double sub_10003A130()
{
  double result;

  if (qword_10009E7D0 != -1)
    swift_once(&qword_10009E7D0, sub_100038038);
  qword_10009FD38 = qword_10009FD28;
  unk_10009FD40 = unk_10009FD30;
  *(_QWORD *)&result = swift_bridgeObjectRetain(unk_10009FD30).n128_u64[0];
  return result;
}

uint64_t *sub_10003A180()
{
  if (qword_10009E7D8 != -1)
    swift_once(&qword_10009E7D8, sub_10003A130);
  return &qword_10009FD38;
}

uint64_t sub_10003A1C0()
{
  uint64_t v0;

  if (qword_10009E7D8 != -1)
    swift_once(&qword_10009E7D8, sub_10003A130);
  v0 = qword_10009FD38;
  swift_bridgeObjectRetain(unk_10009FD40);
  return v0;
}

double sub_10003A21C()
{
  double result;

  result = *(double *)sub_1000472A4();
  qword_10009FD48 = *(_QWORD *)&result;
  return result;
}

uint64_t *sub_10003A23C()
{
  if (qword_10009E7E0 != -1)
    swift_once(&qword_10009E7E0, sub_10003A21C);
  return &qword_10009FD48;
}

double sub_10003A27C()
{
  return sub_10003A304(&qword_10009E7E0, (uint64_t)&qword_10009FD48);
}

void sub_10003A298()
{
  qword_10009FD50 = 0x4020000000000000;
}

uint64_t *sub_10003A2A8()
{
  if (qword_10009E7E8 != -1)
    swift_once(&qword_10009E7E8, sub_10003A298);
  return &qword_10009FD50;
}

double sub_10003A2E8()
{
  return sub_10003A304(&qword_10009E7E8, (uint64_t)&qword_10009FD50);
}

double sub_10003A304(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(double *)a2;
}

uint64_t sub_10003A33C()
{
  uint64_t result;

  result = static Animation.spring(response:dampingFraction:blendDuration:)(0.45, 0.8, 0.0);
  qword_10009FD58 = result;
  return result;
}

double sub_10003A36C()
{
  double result;

  if (qword_10009E7F0 != -1)
    swift_once(&qword_10009E7F0, sub_10003A33C);
  *(_QWORD *)&result = swift_retain(qword_10009FD58).n128_u64[0];
  return result;
}

double sub_10003A3AC()
{
  if (qword_10009E7E0 != -1)
    swift_once(&qword_10009E7E0, sub_10003A21C);
  return *(double *)&qword_10009FD48;
}

uint64_t sub_10003A3EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StickerPackStrip(0);
  return sub_10002E23C(v1 + *(int *)(v3 + 20), a1, &qword_10009C108);
}

uint64_t type metadata accessor for StickerPackStrip(uint64_t a1)
{
  return sub_10003D580(a1, qword_10009ED20, (uint64_t)&nominal type descriptor for StickerPackStrip);
}

uint64_t sub_10003A43C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for StickerPackStrip(0) + 20);
  return sub_10003A46C(a1, v3);
}

uint64_t sub_10003A46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009C108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_10003A4B4())()
{
  type metadata accessor for StickerPackStrip(0);
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_10003A4DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];

  *a2 = swift_getKeyPath(&unk_100078F60);
  v4 = sub_10000A66C(&qword_10009C100);
  swift_storeEnumTagMultiPayload(a2, v4, 0);
  v5 = (int *)type metadata accessor for StickerPackStrip(0);
  v6 = (uint64_t)a2 + v5[5];
  *(_QWORD *)(v6 + 32) = 0;
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  v7 = (char *)a2 + v5[7];
  v33[0] = 0x746E65636572;
  v33[1] = 0xE600000000000000;
  State.init(wrappedValue:)(&v29, v33, &type metadata for String);
  v8 = v30;
  *(_OWORD *)v7 = v29;
  *((_QWORD *)v7 + 2) = v8;
  v9 = (char *)a2 + v5[8];
  LOBYTE(v33[0]) = 0;
  v10 = State.init(wrappedValue:)(&v29, v33, &type metadata for Bool);
  v11 = *((_QWORD *)&v29 + 1);
  *v9 = v29;
  *((_QWORD *)v9 + 1) = v11;
  v12 = (char *)a2 + v5[9];
  *(_QWORD *)v12 = sub_10003A8AC;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 0;
  v13 = (_QWORD *)((char *)a2 + v5[10]);
  *v13 = 0xD000000000000013;
  v13[1] = 0x8000000100074EC0;
  v14 = (char *)a2 + v5[11];
  *(double *)v14 = static UnitPoint.leading.getter(v10);
  *((_QWORD *)v14 + 1) = v15;
  v16 = (char *)a2 + v5[12];
  *(double *)v16 = static UnitPoint.trailing.getter();
  *((_QWORD *)v16 + 1) = v17;
  sub_10003A8C4(a1, v6);
  sub_10002E23C(a1, (uint64_t)&v29, &qword_10009C108);
  v18 = v31;
  if (v31)
  {
    v19 = v32;
    sub_10000E538(&v29, v31);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 64))(v18, v19);
    sub_10000D4A4(&v29);
  }
  else
  {
    sub_10002E2B4((uint64_t)&v29, &qword_10009C108);
    v21 = type metadata accessor for StickerPackStripViewModel(0);
    v20 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    sub_100038EF4();
  }
  v22 = (_QWORD *)((char *)a2 + v5[6]);
  v23 = type metadata accessor for StickerPackStripViewModel(0);
  v24 = sub_10002CA50(&qword_10009C110, type metadata accessor for StickerPackStripViewModel, (uint64_t)&unk_100079080);
  v25 = ObservedObject.init(wrappedValue:)(v20, v23, v24);
  v27 = v26;
  result = sub_10002E2B4(a1, &qword_10009C108);
  *v22 = v25;
  v22[1] = v27;
  return result;
}

uint64_t sub_10003A710()
{
  return 0x746E65636572;
}

uint64_t sub_10003A724(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  uint64_t v4;

  v3[0] = a1;
  v3[1] = a2;
  State.init(wrappedValue:)(&v4, v3, &type metadata for String);
  return v4;
}

uint64_t (*sub_10003A760())()
{
  return sub_10003A8AC;
}

unint64_t sub_10003A778()
{
  return 0xD000000000000013;
}

uint64_t sub_10003A79C(uint64_t a1)
{
  return sub_100042288(a1, type metadata accessor for StickerPackStripViewModel, &qword_10009C110, (uint64_t)&unk_100079080);
}

uint64_t sub_10003A7B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = v1 + *(int *)(type metadata accessor for StickerPackStrip(0) + 24);
  result = swift_release(*(_QWORD *)(v3 + 8), v4);
  *(_QWORD *)(v3 + 8) = a1;
  return result;
}

double sub_10003A7F0()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = type metadata accessor for StickerPackStrip(0);
  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v0 + *(int *)(v1 + 24) + 8)).n128_u64[0];
  return result;
}

uint64_t (*sub_10003A814())()
{
  type metadata accessor for StickerPackStrip(0);
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_10003A840()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for StickerPackStrip(0) + 24));
  v2 = *v1;
  v3 = v1[1];
  v4 = type metadata accessor for StickerPackStripViewModel(0);
  v5 = sub_10002CA50(&qword_10009C110, type metadata accessor for StickerPackStripViewModel, (uint64_t)&unk_100079080);
  return ObservedObject.projectedValue.getter(v2, v3, v4, v5);
}

uint64_t sub_10003A8AC()
{
  uint64_t *v0;

  v0 = iMessageAppsRegistry.shared.unsafeMutableAddressor();
  return swift_retain(*v0);
}

uint64_t sub_10003A8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009C108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for StickerPackStripViewModel(uint64_t a1)
{
  return sub_10003D580(a1, (uint64_t *)&unk_10009ED10, (uint64_t)&nominal type descriptor for StickerPackStripViewModel);
}

uint64_t sub_10003A920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(__n128);
  __n128 v9;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for StickerPackStrip(0);
  v3 = *(_QWORD *)(v0 + *(int *)(v2 + 24) + 8);
  v4 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 304);
  v5 = swift_retain(v3);
  LOBYTE(v4) = v4(v5);
  swift_release(v3, v6);
  if ((v4 & 1) != 0)
  {
    v7 = 11;
    return *(_QWORD *)(v1 + *(int *)(v2 + 4 * v7));
  }
  v8 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 312);
  v9 = swift_retain(v3);
  LOBYTE(v8) = v8(v9);
  swift_release(v3, v10);
  if ((v8 & 1) != 0)
  {
    v7 = 12;
    return *(_QWORD *)(v1 + *(int *)(v2 + 4 * v7));
  }
  return 0;
}

double sub_10003A9D0()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for StickerPackStrip(0) + 44));
}

double sub_10003A9F4()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for StickerPackStrip(0) + 48));
}

uint64_t sub_10003AA18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t (*v12)(__n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t result;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  v3 = v2;
  v6 = (int *)type metadata accessor for StickerPackStrip(0);
  v7 = *(_QWORD *)(v2 + v6[6] + 8);
  v8 = qword_10009E7D8;
  swift_retain(v7);
  if (v8 != -1)
    swift_once(&qword_10009E7D8, sub_10003A130);
  if (qword_10009FD38 == a1 && unk_10009FD40 == a2)
    v10 = 1;
  else
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, qword_10009FD38, unk_10009FD40, 0);
  (*(void (**)(_QWORD))(*(_QWORD *)v7 + 264))(v10 & 1);
  swift_release(v7, v11);
  v12 = *(uint64_t (**)(__n128))(*(_QWORD *)v7 + 112);
  v13 = swift_retain(v7);
  v14 = v12(v13);
  v16 = v15;
  swift_release(v7, v15);
  if (v14 == a1 && v16 == a2)
    return swift_bridgeObjectRelease(a2);
  v18 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v14, v16, 0);
  result = swift_bridgeObjectRelease(v16);
  if ((v18 & 1) == 0)
  {
    v20 = swift_retain(v7);
    v21 = v12(v20);
    v23 = v22;
    swift_release(v7, v22);
    v24 = (__int128 *)(v3 + v6[7]);
    v25 = *v24;
    v26 = *((_QWORD *)v24 + 2);
    v30 = v25;
    v31 = v26;
    v34[0] = v21;
    v34[1] = v23;
    v27 = sub_10000A66C(&qword_10009C118);
    State.wrappedValue.setter(v34, v27);
    sub_10002E23C(v3 + v6[5], (uint64_t)&v30, &qword_10009C108);
    v28 = v32;
    if (v32)
    {
      v29 = v33;
      sub_10000E538(&v30, v32);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8))(v3, a1, a2, v28, v29);
      return sub_10000D4A4(&v30);
    }
    else
    {
      return sub_10002E2B4((uint64_t)&v30, &qword_10009C108);
    }
  }
  return result;
}

_QWORD *sub_10003AC24@<X0>(double (**a1)@<D0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)@<X8>)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  void (*v16)(_QWORD);
  char v17;
  void (*v18)(_BYTE *, uint64_t);
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(__n128);
  __n128 v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  int *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  __n128 v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  __n128 v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *result;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  double (*v94)@<D0>(uint64_t@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>);
  char v95;
  double (**v96)@<D0>(uint64_t@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>);
  _BYTE v97[12];
  unsigned int v98;
  void (*v99)(_BYTE *, _QWORD, uint64_t);
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  double (**v103)@<D0>(uint64_t@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>);
  _QWORD *v104;
  int *object;
  id v106;
  unint64_t v107;
  char v108;
  double (*v109)@<D0>(uint64_t@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>);
  char v110;
  __int128 v111;
  Swift::String v112;
  Swift::String v113;
  Swift::String v114;

  v103 = a1;
  v2 = (int *)type metadata accessor for StickerPackStrip(0);
  v100 = *((_QWORD *)v2 - 1);
  __chkstk_darwin(v2);
  v101 = v3;
  v102 = &v97[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for ColorScheme(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v97[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v97[-v9];
  v106 = (id)objc_opt_self(NSBundle);
  v11 = objc_msgSend(v106, "mainBundle");
  v112._object = (void *)0xE000000000000000;
  v12._countAndFlagsBits = 0x746E65636552;
  v12._object = (void *)0xE600000000000000;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v112._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v112);
  object = (int *)v14._object;

  v15 = v1;
  sub_100039E80(&qword_10009C100, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v10);
  v16 = *(void (**)(_QWORD))(v5 + 104);
  v98 = enum case for ColorScheme.light(_:);
  v99 = (void (*)(_BYTE *, _QWORD, uint64_t))v16;
  v16(v8);
  v17 = static ColorScheme.== infix(_:_:)(v10, v8);
  v18 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v18(v8, v4);
  v18(v10, v4);
  v19 = (v17 & 1) == 0;
  if ((v17 & 1) != 0)
    v20 = 0x6B636F6C63;
  else
    v20 = 0x69662E6B636F6C63;
  if (v19)
    v21 = 0xEA00000000006C6CLL;
  else
    v21 = 0xE500000000000000;
  type metadata accessor for StickerPackStripItem(0);
  v22 = Image.init(systemName:)(v20, v21);
  v104 = sub_10003057C(0x746E65636572, 0xE600000000000000, v14._countAndFlagsBits, (uint64_t)object, v22);
  object = v2;
  v23 = v15;
  v24 = *(_QWORD *)(v15 + v2[6] + 8);
  v25 = *(uint64_t (**)(__n128))(*(_QWORD *)v24 + 208);
  v26 = swift_retain(v24);
  LOBYTE(v25) = v25(v26);
  swift_release(v24, v27);
  v28 = 0;
  if ((v25 & 1) != 0)
  {
    v29 = objc_msgSend(v106, "mainBundle");
    v113._object = (void *)0xE000000000000000;
    v30._countAndFlagsBits = 0x697453206576694CLL;
    v30._object = (void *)0xED00007372656B63;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    v113._countAndFlagsBits = 0;
    v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v113);

    sub_100039E80(&qword_10009C100, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v10);
    v99(v8, v98, v4);
    v33 = static ColorScheme.== infix(_:_:)(v10, v8);
    v18(v8, v4);
    v18(v10, v4);
    if ((v33 & 1) != 0)
      v34 = 0x72656B63697473;
    else
      v34 = 0x2E72656B63697473;
    if ((v33 & 1) != 0)
      v35 = 0xE700000000000000;
    else
      v35 = 0xEC0000006C6C6966;
    v36 = Image.init(_internalSystemName:)(v34, v35);
    v28 = sub_10003057C(0x746E6F4372657375, 0xEB00000000746E65, v32._countAndFlagsBits, (uint64_t)v32._object, v36);
  }
  v37 = objc_msgSend(v106, "mainBundle");
  v114._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0x696A6F6D45;
  v38._object = (void *)0xE500000000000000;
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  v114._countAndFlagsBits = 0;
  v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v114);

  v41 = object;
  v42 = (uint64_t *)(v23 + object[10]);
  v43 = *v42;
  v44 = v42[1];
  swift_bridgeObjectRetain(v44);
  v45 = Image.init(_internalSystemName:)(v43, v44);
  v46 = sub_10003057C(0x696A6F6D65, 0xE500000000000000, v40._countAndFlagsBits, (uint64_t)v40._object, v45);
  v107 = (unint64_t)_swiftEmptyArrayStorage;
  v47 = v104;
  v48 = swift_retain(v104);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
  v50 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v49 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18);
  v51 = v23;
  if (v50 >= v49 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
  v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v47);
  specialized Array._endMutation()(v52);
  if (v28)
  {
    v53 = swift_retain(v28);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
    v55 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v54 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v55 >= v54 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
    v56 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v28);
    specialized Array._endMutation()(v56);
  }
  v57 = swift_retain(v46);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v57);
  v59 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v58 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v59 >= v58 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v58 > 1, v59 + 1, 1);
  v60 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v46);
  specialized Array._endMutation()(v60);
  v61 = v107;
  swift_release(v47, v62);
  swift_release(v46, v63);
  swift_release(v28, v64);
  v65 = v51 + v41[9];
  v66 = *(_QWORD *)v65;
  v67 = *(_QWORD *)(v65 + 8);
  v68 = *(unsigned __int8 *)(v65 + 16);
  v69 = type metadata accessor for iMessageAppsRegistry(0);
  v70 = sub_10002CA50(&qword_10009C120, type metadata accessor for iMessageAppsRegistry, (uint64_t)&protocol conformance descriptor for iMessageAppsRegistry);
  v71 = StateObject.wrappedValue.getter(v66, v67, v68, v69, v70);
  v72 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v71 + 192))(v71);
  swift_release(v71, v73);
  if ((unint64_t)v72 >> 62)
  {
    if (v72 < 0)
      v82 = v72;
    else
      v82 = v72 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v72);
    v74 = _CocoaArrayWrapper.endIndex.getter(v82);
    swift_bridgeObjectRelease(v72);
    if (v74)
      goto LABEL_25;
LABEL_36:
    swift_bridgeObjectRelease(v72);
    v81 = _swiftEmptyArrayStorage;
    goto LABEL_37;
  }
  v74 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v74)
    goto LABEL_36;
LABEL_25:
  v107 = (unint64_t)_swiftEmptyArrayStorage;
  result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v74);
  if (v74 < 0)
  {
    __break(1u);
    return result;
  }
  v76 = 0;
  do
  {
    if ((v72 & 0xC000000000000001) != 0)
      v77 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v76, v72);
    else
      swift_retain(*(_QWORD *)(v72 + 8 * v76 + 32));
    ++v76;
    v78 = sub_1000306D0(v77);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v78);
    v79 = *(_QWORD *)(v107 + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v79);
    v80 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v78);
    specialized ContiguousArray._endMutation()(v80);
  }
  while (v74 != v76);
  v81 = (_QWORD *)v107;
  swift_bridgeObjectRelease(v72);
LABEL_37:
  v83 = v102;
  sub_100041CC8(v51, (uint64_t)v102, type metadata accessor for StickerPackStrip);
  v84 = *(unsigned __int8 *)(v100 + 80);
  v85 = (v84 + 24) & ~v84;
  v86 = (v101 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
  v87 = swift_allocObject(&unk_10008C548, v86 + 8, v84 | 7);
  *(_QWORD *)(v87 + 16) = v61;
  v88 = sub_100041D10((uint64_t)v83, v87 + v85, type metadata accessor for StickerPackStrip);
  *(_QWORD *)(v87 + v86) = v81;
  if (qword_10009E7E0 != -1)
    v88 = swift_once(&qword_10009E7E0, sub_10003A21C);
  v89 = qword_10009FD48;
  v90 = static Alignment.center.getter(v88);
  result = _FrameLayout.init(width:height:alignment:)(&v107, 0, 1, v89, 0, v90, v91);
  v92 = v107;
  v93 = v108;
  v94 = v109;
  v95 = v110;
  v96 = v103;
  *v103 = sub_10003B6C4;
  v96[1] = (double (*)@<D0>(uint64_t@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>))v87;
  v96[2] = (double (*)@<D0>(uint64_t@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>))v92;
  *((_BYTE *)v96 + 24) = v93;
  v96[4] = v94;
  *((_BYTE *)v96 + 40) = v95;
  *((_OWORD *)v96 + 3) = v111;
  return result;
}

double sub_10003B404@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v27 = a4;
  v8 = type metadata accessor for GeometryProxy(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StickerPackStrip(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100041CC8(a3, (uint64_t)v15, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v17 = *(unsigned __int8 *)(v13 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(unsigned __int8 *)(v9 + 80);
  v21 = (v20 + v19 + 8) & ~v20;
  v22 = swift_allocObject(&unk_10008C900, v21 + v10, v17 | v20 | 7);
  v23 = v26;
  *(_QWORD *)(v22 + 16) = v26;
  sub_100041D10((uint64_t)v15, v22 + v18, type metadata accessor for StickerPackStrip);
  v24 = v27;
  *(_QWORD *)(v22 + v19) = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v22 + v21, v11, v8);
  *a5 = sub_100045B24;
  a5[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v22;
  swift_bridgeObjectRetain(v23);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v24).n128_u64[0];
  return result;
}

uint64_t sub_10003B580()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for StickerPackStrip(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10000A66C(&qword_10009C100);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
  }
  else
  {
    swift_release(*v6, v8);
  }
  v11 = (_QWORD *)((char *)v6 + v1[5]);
  if (v11[3])
    sub_10000D4A4(v11);
  v12 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)((char *)v6 + v1[6] + 8), v10);
  v13 = (char *)v6 + v1[7];
  swift_bridgeObjectRelease(*((_QWORD *)v13 + 1));
  swift_release(*((_QWORD *)v13 + 2), v14);
  swift_release(*(_QWORD *)((char *)v6 + v1[8] + 8), v15);
  sub_10003B6BC(*(_QWORD *)((char *)v6 + v1[9]), *(_QWORD *)((char *)v6 + v1[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v12));
  return swift_deallocObject(v0, v12 + 8, v3 | 7);
}

uint64_t sub_10003B6BC(uint64_t a1, uint64_t a2)
{
  return swift_release(a2, a2);
}

double sub_10003B6C4@<D0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for StickerPackStrip(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10003B404(a1, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_10003B728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(__n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)();
  _BYTE v53[4];
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[16];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  void *v79;

  v55 = a3;
  v56 = a1;
  v69 = a6;
  v60 = type metadata accessor for StickerPackStrip(0);
  v11 = *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64);
  v67 = *(_QWORD *)(v60 - 8);
  v68 = v11;
  __chkstk_darwin(v60);
  v66 = &v53[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ScrollViewProxy(0);
  v63 = *(_QWORD *)(v13 - 8);
  v64 = v13;
  v65 = *(_QWORD *)(v63 + 64);
  __chkstk_darwin(v13);
  v62 = &v53[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_10000A66C(&qword_10009C720);
  v61 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = &v53[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v59 = sub_10000A66C(&qword_10009C728);
  v58 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v19 = &v53[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = sub_10000A66C(&qword_10009C730);
  v20 = __chkstk_darwin(v57);
  v22 = &v53[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v54 = static Axis.Set.horizontal.getter(v20);
  v71 = a2;
  v72 = a3;
  v73 = a4;
  v74 = a5;
  v75 = a1;
  v23 = sub_10000A66C(&qword_10009C738);
  v24 = sub_10000D720(&qword_10009C740);
  v25 = sub_10000D720(&qword_10009C748);
  v26 = sub_10000D720(&qword_10009C750);
  v27 = sub_100045BC0();
  v28 = sub_100042C94(&qword_10009C770, &qword_10009C750, (void (*)(void))sub_10000A478);
  v76 = v25;
  v77 = (void *)v26;
  v78 = v27;
  v79 = (void *)v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v76, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v76 = v24;
  v77 = &type metadata for String;
  v78 = OpaqueTypeConformance2;
  v79 = &protocol witness table for String;
  v30 = swift_getOpaqueTypeConformance2(&v76, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  ScrollView.init(_:showsIndicators:content:)(v54, 0, sub_100045BB0, v70, v23, v30);
  v31 = v55;
  v32 = *(_QWORD *)(v55 + *(int *)(v60 + 24) + 8);
  v33 = *(uint64_t (**)(__n128))(*(_QWORD *)v32 + 304);
  v34 = swift_retain(v32);
  LOBYTE(v33) = v33(v34);
  swift_release(v32, v35);
  v36 = sub_10000F6DC(&qword_10009C778, &qword_10009C720, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  View.scrollDisabled(_:)(v33 & 1, v15, v36);
  (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v17, v15);
  v37 = v58;
  v38 = v59;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v58 + 16))(v22, v19, v59);
  v39 = &v22[*(int *)(v57 + 36)];
  *v39 = 0xD000000000000010;
  v39[1] = 0x8000000100079390;
  (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v19, v38);
  v41 = v62;
  v40 = v63;
  v42 = v64;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v63 + 16))(v62, v56, v64);
  v43 = v66;
  sub_100041CC8(v31, (uint64_t)v66, type metadata accessor for StickerPackStrip);
  v44 = *(unsigned __int8 *)(v40 + 80);
  v45 = v40;
  v46 = (v44 + 16) & ~v44;
  v47 = *(unsigned __int8 *)(v67 + 80);
  v48 = (v65 + v47 + v46) & ~v47;
  v49 = swift_allocObject(&unk_10008C928, v48 + v68, v44 | v47 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v45 + 32))(v49 + v46, v41, v42);
  sub_100041D10((uint64_t)v43, v49 + v48, type metadata accessor for StickerPackStrip);
  v50 = v69;
  sub_10002E23C((uint64_t)v22, v69, &qword_10009C730);
  v51 = (uint64_t (**)())(v50 + *(int *)(sub_10000A66C(&qword_10009C780) + 36));
  *v51 = sub_100045C48;
  v51[1] = (uint64_t (*)())v49;
  v51[2] = 0;
  v51[3] = 0;
  return sub_10002E2B4((uint64_t)v22, &qword_10009C730);
}

uint64_t sub_10003BBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(__n128);
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t OpaqueTypeConformance2;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v87 = a5;
  v94 = a6;
  v10 = type metadata accessor for ScrollViewProxy(0);
  v92 = *(_QWORD *)(v10 - 8);
  v93 = v10;
  __chkstk_darwin(v10);
  v88 = v11;
  v91 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for StickerPackStrip(0);
  v12 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v97 = v13;
  v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000A66C(&qword_10009C768);
  __chkstk_darwin(v15);
  v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10000A66C(&qword_10009C748);
  __chkstk_darwin(v18);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10000A66C(&qword_10009C740);
  v89 = *(_QWORD *)(v21 - 8);
  v90 = v21;
  __chkstk_darwin(v21);
  v96 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_10000A66C(&qword_10009C738);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v84 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10009E7E8 != -1)
    swift_once(&qword_10009E7E8, sub_10003A298);
  v24 = qword_10009FD50;
  *(_QWORD *)v17 = static VerticalAlignment.center.getter();
  *((_QWORD *)v17 + 1) = v24;
  v17[16] = 0;
  v25 = sub_10000A66C(&qword_10009C788);
  v26 = sub_10003C1A8(a1, a2, a3, a4, &v17[*(int *)(v25 + 44)]);
  v27 = static Edge.Set.leading.getter(v26);
  v28 = static Edge.Set.trailing.getter();
  v29 = Edge.Set.init(rawValue:)(0);
  v30 = Edge.Set.init(rawValue:)(v29);
  if (Edge.Set.init(rawValue:)(v30 & v27) != v27)
    v29 = Edge.Set.init(rawValue:)(v29 | v27);
  v31 = Edge.Set.init(rawValue:)(v29);
  if (Edge.Set.init(rawValue:)(v31 & v28) != v28)
    LOBYTE(v29) = Edge.Set.init(rawValue:)(v29 | v28);
  v32 = EdgeInsets.init(_all:)(10.0);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  sub_10002E23C((uint64_t)v17, (uint64_t)v20, &qword_10009C768);
  v80 = v18;
  v39 = &v20[*(int *)(v18 + 36)];
  *v39 = v29;
  *((double *)v39 + 1) = v32;
  *((_QWORD *)v39 + 2) = v34;
  *((_QWORD *)v39 + 3) = v36;
  *((_QWORD *)v39 + 4) = v38;
  v39[40] = 0;
  sub_10002E2B4((uint64_t)v17, &qword_10009C768);
  v40 = a2 + *(int *)(v95 + 32);
  v41 = *(_BYTE *)v40;
  v42 = *(_QWORD *)(v40 + 8);
  LOBYTE(v102) = v41;
  v103 = v42;
  v43 = sub_10000A66C(&qword_10009C1C8);
  State.projectedValue.getter(&v98, v43);
  v44 = a2;
  v45 = v98;
  v46 = v99;
  v47 = v100;
  sub_100041CC8(v44, (uint64_t)v14, type metadata accessor for StickerPackStrip);
  v48 = *(unsigned __int8 *)(v12 + 80);
  v49 = (v48 + 16) & ~v48;
  v83 = v48 | 7;
  v50 = swift_allocObject(&unk_10008C9A0, v49 + v97, v48 | 7);
  sub_100041D10((uint64_t)v14, v50 + v49, type metadata accessor for StickerPackStrip);
  v78 = v14;
  v51 = sub_10000A66C(&qword_10009C750);
  v79 = v51;
  v52 = sub_100045BC0();
  v81 = v52;
  v82 = sub_100042C94(&qword_10009C770, &qword_10009C750, (void (*)(void))sub_10000A478);
  v53 = v80;
  View.sheet<A>(isPresented:onDismiss:content:)(v45, v46, v47, 0, 0, sub_100045F04, v50, v80, v51, v52, v82);
  swift_release(v46, v54);
  swift_release(v50, v55);
  swift_release(v45, v56);
  sub_10002E2B4((uint64_t)v20, &qword_10009C748);
  v57 = *(_QWORD *)(v44 + *(int *)(v95 + 24) + 8);
  v58 = *(uint64_t (**)(__n128))(*(_QWORD *)v57 + 112);
  v59 = swift_retain(v57);
  v60 = v58(v59);
  v62 = v61;
  swift_release(v57, v61);
  v102 = v60;
  v103 = v62;
  v63 = v91;
  v64 = v92;
  v65 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v87, v93);
  v66 = (uint64_t)v78;
  sub_100041CC8(v44, (uint64_t)v78, type metadata accessor for StickerPackStrip);
  v67 = *(unsigned __int8 *)(v64 + 80);
  v68 = (v67 + 16) & ~v67;
  v69 = (v88 + v48 + v68) & ~v48;
  v70 = swift_allocObject(&unk_10008C9C8, v69 + v97, v83 | v67);
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v70 + v68, v63, v65);
  sub_100041D10(v66, v70 + v69, type metadata accessor for StickerPackStrip);
  v98 = v53;
  v99 = v79;
  v100 = v81;
  v101 = v82;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v98, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v72 = v84;
  v73 = v90;
  v74 = v96;
  View.onChange<A>(of:initial:_:)(&v102, 0, sub_100045F44, v70, v90, &type metadata for String, OpaqueTypeConformance2, &protocol witness table for String);
  swift_release(v70, v75);
  swift_bridgeObjectRelease(v103);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v74, v73);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v85 + 32))(v94, v72, v86);
}

uint64_t sub_10003C1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  void (*v43)(char *, uint64_t);
  void (*v44)(char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char v58[16];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62[16];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[16];
  uint64_t v67;
  uint64_t v68;

  v53 = a5;
  v52 = sub_10000A66C(&qword_10009C790);
  v57 = *(_QWORD *)(v52 - 8);
  v9 = __chkstk_darwin(v52);
  v51 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v56 = (char *)&v46 - v11;
  v50 = sub_10000A66C(&qword_10009C798);
  v54 = *(_QWORD *)(v50 - 8);
  v12 = __chkstk_darwin(v50);
  v55 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v46 - v14;
  v49 = sub_10000A66C(&qword_10009C7A0);
  v48 = *(_QWORD *)(v49 - 8);
  v16 = v48;
  v17 = __chkstk_darwin(v49);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v46 - v20;
  v67 = a1;
  v68 = a2;
  v22 = sub_10000A66C(&qword_10009C7A8);
  v23 = sub_1000463F0();
  v24 = v21;
  v47 = v21;
  Section<>.init(content:)(sub_1000463E8, v66, v22, v23);
  v63 = a3;
  v64 = a2;
  v65 = a4;
  v25 = sub_10000A66C(&qword_10009C7C0);
  v26 = sub_1000464C4(&qword_10009C7C8, &qword_10009C7C0, (void (*)(void))sub_100046528);
  v46 = v15;
  Section<>.init(content:)(sub_1000464B8, v62, v25, v26);
  v59 = a2;
  v60 = a3;
  v61 = a4;
  v27 = sub_10000A66C(&qword_10009C800);
  v28 = sub_10000F6DC(&qword_10009C808, &qword_10009C800, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v29 = v56;
  Section<>.init(content:)(sub_1000465FC, v58, v27, v28);
  v30 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v31 = v49;
  v30(v19, v24, v49);
  v32 = v55;
  v33 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  v34 = v15;
  v35 = v50;
  v33(v55, v34, v50);
  v36 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  v37 = v51;
  v38 = v29;
  v39 = v52;
  v36(v51, v38, v52);
  v40 = v53;
  v30(v53, v19, v31);
  v41 = sub_10000A66C(&qword_10009C810);
  v33(&v40[*(int *)(v41 + 48)], v32, v35);
  v36(&v40[*(int *)(v41 + 64)], v37, v39);
  v42 = *(void (**)(char *, uint64_t))(v57 + 8);
  v42(v56, v39);
  v43 = *(void (**)(char *, uint64_t))(v54 + 8);
  v43(v46, v35);
  v44 = *(void (**)(char *, uint64_t))(v48 + 8);
  v44(v47, v31);
  v42(v37, v39);
  v43(v55, v35);
  return ((uint64_t (*)(char *, uint64_t))v44)(v19, v31);
}

uint64_t sub_10003C540(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  _QWORD v18[2];
  uint64_t v19;

  v4 = type metadata accessor for StickerPackStrip(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v19 = a1;
  sub_100041CC8(a2, (uint64_t)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StickerPackStrip);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_10008CAE0, v8 + v6, v7 | 7);
  sub_100041D10((uint64_t)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for StickerPackStrip);
  swift_bridgeObjectRetain(a1);
  v10 = sub_10000A66C(&qword_10009C2E0);
  v11 = sub_10000A66C(&qword_10009C850);
  v12 = sub_10000F6DC(&qword_10009C6D0, &qword_10009C2E0, (uint64_t)&protocol conformance descriptor for [A]);
  v13 = sub_100046474();
  v18[0] = &type metadata for StickerPackStripSymbolView;
  v18[1] = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v18, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v15 = sub_10002CA50(&qword_10009C6D8, type metadata accessor for StickerPackStripItem, (uint64_t)&unk_100078B20);
  return ForEach<>.init(_:content:)(&v19, sub_100046974, v9, v10, &type metadata for String, v11, v12, OpaqueTypeConformance2, v15);
}

uint64_t sub_10003C6CC@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(__n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(__n128);
  __n128 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];
  _BYTE v42[8];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v41[1] = a3;
  v5 = type metadata accessor for StickerPackStrip(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = *(_QWORD *)(a2 + *(int *)(v8 + 24) + 8);
  v12 = *(uint64_t (**)(__n128))(*(_QWORD *)v11 + 112);
  v13 = swift_retain(v11);
  v14 = v12(v13);
  v16 = v15;
  swift_release(v11, v15);
  v17 = v10[2];
  v18 = v10[3];
  if (v14 == v17 && v16 == v18)
    v20 = 1;
  else
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
  swift_bridgeObjectRelease(v16);
  v21 = v10[4];
  v22 = v10[5];
  v23 = *(uint64_t (**)(__n128))(*v10 + 120);
  v24 = swift_bridgeObjectRetain(v22);
  v25 = v23(v24);
  v26 = sub_10000C430();
  sub_1000615F0(v21, v22, v25, v20 & 1, v26 & 1, (uint64_t)v42);
  sub_100041CC8(a2, (uint64_t)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StickerPackStrip);
  v27 = *(unsigned __int8 *)(v6 + 80);
  v28 = (v27 + 16) & ~v27;
  v29 = (v7 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_10008CB08, v29 + 8, v27 | 7);
  sub_100041D10((uint64_t)v9, v30 + v28, type metadata accessor for StickerPackStrip);
  *(_QWORD *)(v30 + v29) = v10;
  v31 = sub_100046474();
  v32 = swift_retain(v10);
  View.onTapGesture(count:perform:)(1, sub_10004675C, v30, &type metadata for StickerPackStripSymbolView, v31, v32);
  swift_release(v30, v33);
  v34 = v43;
  v35 = v44;
  v36 = v45;
  swift_release(v46, v37);
  swift_release(v36, v38);
  swift_release(v35, v39);
  return swift_bridgeObjectRelease(v34);
}

uint64_t sub_10003C8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v25 = a4;
  v7 = type metadata accessor for GeometryProxy(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = type metadata accessor for StickerPackStrip(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v26 = a1;
  sub_100041CC8(a2, (uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
  v14 = *(unsigned __int8 *)(v11 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = *(unsigned __int8 *)(v8 + 80);
  v17 = (v12 + v16 + v15) & ~v16;
  v18 = swift_allocObject(&unk_10008CA68, v17 + v9, v14 | v16 | 7);
  sub_100041D10((uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v15, type metadata accessor for StickerPackStrip);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_bridgeObjectRetain(a1);
  v19 = sub_10000A66C(&qword_10009C2E0);
  v20 = sub_10000A66C(&qword_10009C7D8);
  v21 = sub_10000F6DC(&qword_10009C6D0, &qword_10009C2E0, (uint64_t)&protocol conformance descriptor for [A]);
  v22 = sub_100046528();
  v23 = sub_10002CA50(&qword_10009C6D8, type metadata accessor for StickerPackStripItem, (uint64_t)&unk_100078B20);
  return ForEach<>.init(_:content:)(&v26, sub_1000466E0, v18, v19, &type metadata for String, v20, v21, v22, v23);
}

uint64_t sub_10003CAA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(__n128);
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, char *, uint64_t);
  uint64_t v52;
  int *v53;
  _QWORD *v54;
  uint64_t (**v55)@<X0>(uint64_t@<X8>);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t OpaqueTypeConformance2;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _UNKNOWN **v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  char v112;
  uint64_t v113;
  _UNKNOWN **v114;

  v100 = a3;
  v109 = a4;
  v110 = sub_10000A66C(&qword_10009C838);
  v95 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v94 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_10000A66C(&qword_10009C840);
  __chkstk_darwin(v107);
  v108 = (uint64_t)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StickerPackStrip(0);
  v103 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v104 = v9;
  v105 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v97 - 8);
  v11 = __chkstk_darwin(v97);
  v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v93 - v14;
  v98 = sub_10000A66C(&qword_10009C848);
  v16 = __chkstk_darwin(v98);
  v18 = (char **)((char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v101 = (uint64_t)&v93 - v19;
  v106 = sub_10000A66C(&qword_10009C7E8);
  v20 = __chkstk_darwin(v106);
  v99 = (uint64_t)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v102 = (uint64_t)&v93 - v22;
  v23 = *a1;
  v24 = *(_QWORD *)(a2 + *(int *)(v8 + 24) + 8);
  v25 = *(uint64_t (**)(__n128))(*(_QWORD *)v24 + 112);
  v26 = swift_retain(v24);
  v27 = v25(v26);
  v29 = v28;
  swift_release(v24, v28);
  v30 = *(_QWORD *)(v23 + 16);
  v31 = *(_QWORD *)(v23 + 24);
  if (v27 == v30 && v29 == v31)
  {
    swift_bridgeObjectRelease(v29);
  }
  else
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v30, v31, 0);
    swift_bridgeObjectRelease(v29);
    v34 = 0;
    if ((v33 & 1) == 0)
      goto LABEL_16;
  }
  v36 = *(_QWORD *)(v23 + 16);
  v35 = *(_QWORD *)(v23 + 24);
  v37 = qword_10009E7D8;
  swift_bridgeObjectRetain(v35);
  if (v37 != -1)
    swift_once(&qword_10009E7D8, sub_10003A130);
  if (v36 == qword_10009FD38 && v35 == unk_10009FD40)
  {
    swift_bridgeObjectRelease(v35);
LABEL_14:
    v113 = v8;
    v114 = &off_10008C5A8;
    v39 = sub_10004563C(&v111);
    sub_100041CC8(a2, (uint64_t)v39, type metadata accessor for StickerPackStrip);
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v41 = v15;
    v93 = v15;
    v42 = v100;
    v43 = v97;
    v40(v41, v100, v97);
    v44 = a2;
    v45 = v105;
    sub_100041CC8(v44, v105, type metadata accessor for StickerPackStrip);
    v40(v13, v42, v43);
    v46 = *(unsigned __int8 *)(v103 + 80);
    v47 = (v46 + 16) & ~v46;
    v48 = *(unsigned __int8 *)(v10 + 80);
    v49 = (v104 + v48 + v47) & ~v48;
    v50 = swift_allocObject(&unk_10008CAB8, v49 + v96, v46 | v48 | 7);
    sub_100041D10(v45, v50 + v47, type metadata accessor for StickerPackStrip);
    v51 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v51(v50 + v49, v13, v43);
    *v18 = swift_getKeyPath(&unk_100078F90);
    v52 = sub_10000A66C(&qword_10009C128);
    swift_storeEnumTagMultiPayload(v18, v52, 0);
    v53 = (int *)v98;
    v54 = (_QWORD *)((char *)v18 + *(int *)(v98 + 48));
    *v54 = 0xD000000000000010;
    v54[1] = 0x8000000100074EE0;
    v55 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v18 + v53[11]);
    *v55 = sub_1000468C4;
    v55[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v50;
    v51((uint64_t)v18 + v53[9], v93, v43);
    sub_10003D554(&v111, (uint64_t)v18 + v53[10]);
    v56 = v101;
    sub_10004692C((uint64_t)v18, v101, &qword_10009C848);
    v58 = *(_QWORD *)(v23 + 16);
    v57 = *(_QWORD *)(v23 + 24);
    v59 = v99;
    sub_10002E23C(v56, v99, &qword_10009C848);
    v60 = v106;
    v61 = (_QWORD *)(v59 + *(int *)(v106 + 52));
    *v61 = v58;
    v61[1] = v57;
    swift_bridgeObjectRetain(v57);
    sub_10002E2B4(v56, &qword_10009C848);
    v62 = v102;
    sub_10004692C(v59, v102, &qword_10009C7E8);
    v63 = v108;
    sub_10002E23C(v62, v108, &qword_10009C7E8);
    swift_storeEnumTagMultiPayload(v63, v107, 0);
    v64 = sub_10000F6DC(&qword_10009C7E0, &qword_10009C7E8, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
    v65 = sub_10000D720(&qword_10009C7F0);
    v66 = sub_10000F6DC(&qword_10009C7F8, &qword_10009C7F0, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
    *(_QWORD *)&v111 = v65;
    *((_QWORD *)&v111 + 1) = v66;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v111, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    _ConditionalContent<>.init(storage:)(v63, v60, v110, v64, OpaqueTypeConformance2);
    return sub_10002E2B4(v62, &qword_10009C7E8);
  }
  v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v35, qword_10009FD38, unk_10009FD40, 0);
  swift_bridgeObjectRelease(v35);
  if ((v38 & 1) != 0)
    goto LABEL_14;
  v34 = 1;
LABEL_16:
  v69 = a2;
  v70 = type metadata accessor for StickerPackStripItem(0);
  v71 = sub_10002CA50(&qword_10009C130, type metadata accessor for StickerPackStripItem, (uint64_t)&unk_100078AE8);
  swift_retain(v23);
  v73 = ObservedObject.init(wrappedValue:)(v72, v70, v71);
  v74 = *(_QWORD *)(v23 + 16);
  v75 = *(_UNKNOWN ***)(v23 + 24);
  *(_QWORD *)&v111 = v73;
  *((_QWORD *)&v111 + 1) = v76;
  v112 = v34;
  v113 = v74;
  v114 = v75;
  v77 = v105;
  sub_100041CC8(v69, v105, type metadata accessor for StickerPackStrip);
  v78 = *(unsigned __int8 *)(v103 + 80);
  v79 = (v78 + 16) & ~v78;
  v80 = (v104 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
  v81 = swift_allocObject(&unk_10008CA90, v80 + 8, v78 | 7);
  sub_100041D10(v77, v81 + v79, type metadata accessor for StickerPackStrip);
  *(_QWORD *)(v81 + v80) = v23;
  swift_retain(v23);
  swift_bridgeObjectRetain(v75);
  v82 = sub_10000A66C(&qword_10009C7F0);
  v83 = sub_10000F6DC(&qword_10009C7F8, &qword_10009C7F0, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
  v84 = v94;
  View.onTapGesture(count:perform:)(1, sub_10004675C, v81, v82, v83, v85);
  swift_release(v81, v86);
  swift_release(*((_QWORD *)&v111 + 1), v87);
  swift_bridgeObjectRelease(v114);
  v88 = v95;
  v89 = v108;
  v90 = v110;
  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 16))(v108, v84, v110);
  swift_storeEnumTagMultiPayload(v89, v107, 1);
  v91 = sub_10000F6DC(&qword_10009C7E0, &qword_10009C7E8, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
  *(_QWORD *)&v111 = v82;
  *((_QWORD *)&v111 + 1) = v83;
  v92 = swift_getOpaqueTypeConformance2(&v111, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  _ConditionalContent<>.init(storage:)(v89, v106, v90, v91, v92);
  return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v84, v90);
}

uint64_t sub_10003D22C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _OWORD *v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE v26[15];
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _UNKNOWN **v34;

  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = (int *)type metadata accessor for StickerPackStrip.MemojiPicker(0);
  __chkstk_darwin(v10);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for StickerPackStrip(0);
  v33 = v13;
  v34 = &off_10008C5B8;
  v14 = sub_10004563C(&v32);
  sub_100041CC8(a1, (uint64_t)v14, type metadata accessor for StickerPackStrip);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_10002E23C(a1 + *(int *)(v13 + 20), (uint64_t)&v28, &qword_10009C108);
  v15 = v30;
  if (v30)
  {
    v16 = v31;
    sub_10000E538(&v28, v30);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 56))(v15, v16);
    v15 = v18;
    sub_10000D4A4(&v28);
  }
  else
  {
    sub_10002E2B4((uint64_t)&v28, &qword_10009C108);
    v17 = 0;
  }
  sub_10003D554(&v32, (uint64_t)v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(&v12[v10[5]], v9, v6);
  v19 = (uint64_t *)&v12[v10[6]];
  *v19 = v17;
  v19[1] = v15;
  v20 = &v12[v10[7]];
  *v20 = xmmword_100078E00;
  v20[1] = xmmword_100078E00;
  v21 = &v12[v10[8]];
  v27 = 0;
  State.init(wrappedValue:)(&v28, &v27, &type metadata for Bool);
  v22 = v29;
  *v21 = v28;
  *((_QWORD *)v21 + 1) = v22;
  v23 = &v12[v10[9]];
  v27 = 0;
  State.init(wrappedValue:)(&v28, &v27, &type metadata for Bool);
  v24 = v29;
  *v23 = v28;
  *((_QWORD *)v23 + 1) = v24;
  return sub_100041D10((uint64_t)v12, a3, type metadata accessor for StickerPackStrip.MemojiPicker);
}

_QWORD *sub_10003D458@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *result;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  sub_10003D554(a1, a5);
  v9 = (int *)type metadata accessor for StickerPackStrip.MemojiPicker(0);
  v10 = a5 + v9[5];
  v11 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  v12 = (_QWORD *)(a5 + v9[6]);
  *v12 = a3;
  v12[1] = a4;
  v13 = (_OWORD *)(a5 + v9[7]);
  *v13 = xmmword_100078E00;
  v13[1] = xmmword_100078E00;
  v14 = a5 + v9[8];
  v19 = 0;
  State.init(wrappedValue:)(&v20, &v19, &type metadata for Bool);
  v15 = v21;
  *(_BYTE *)v14 = v20;
  *(_QWORD *)(v14 + 8) = v15;
  v16 = a5 + v9[9];
  v19 = 0;
  result = State.init(wrappedValue:)(&v20, &v19, &type metadata for Bool);
  v18 = v21;
  *(_BYTE *)v16 = v20;
  *(_QWORD *)(v16 + 8) = v18;
  return result;
}

uint64_t sub_10003D554(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t type metadata accessor for StickerPackStrip.MemojiPicker(uint64_t a1)
{
  return sub_10003D580(a1, qword_10009EDB0, (uint64_t)&nominal type descriptor for StickerPackStrip.MemojiPicker);
}

uint64_t sub_10003D580(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_10003D5B4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;

  *a7 = swift_getKeyPath(&unk_100078F90);
  v14 = sub_10000A66C(&qword_10009C128);
  swift_storeEnumTagMultiPayload(a7, v14, 0);
  v16 = (int *)type metadata accessor for StickerPackStrip.DrillDownContainer(0, a5, a6, v15);
  v17 = (_QWORD *)((char *)a7 + v16[12]);
  *v17 = 0xD000000000000010;
  v17[1] = 0x8000000100074EE0;
  v18 = (_QWORD *)((char *)a7 + v16[11]);
  *v18 = a3;
  v18[1] = a4;
  v19 = (char *)a7 + v16[9];
  v20 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a2, v20);
  return sub_10003D554(a1, (uint64_t)a7 + v16[10]);
}

uint64_t sub_10003D6A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for StickerPackStripItem(0);
  v3 = sub_10002CA50(&qword_10009C130, type metadata accessor for StickerPackStripItem, (uint64_t)&unk_100078AE8);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

void sub_10003D708(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(__n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(__n128);
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(__n128);
  __n128 v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v8 = type metadata accessor for StickerPackStrip(0);
  v67 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v67 + 64);
  v10 = __chkstk_darwin(v8);
  v11 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v68 = (uint64_t)&v62 - v12;
  v13 = sub_10000A66C(&qword_10009C818);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v62 - v17;
  v19 = *(int *)(v8 + 24);
  v69 = a1;
  v71 = a1 + v19;
  v20 = *(_QWORD *)(a1 + v19 + 8);
  v21 = *(uint64_t (**)(__n128))(*(_QWORD *)v20 + 160);
  v22 = swift_retain(v20);
  LOBYTE(v21) = v21(v22);
  swift_release(v20, v23);
  v72 = a4;
  v70 = a3;
  if ((v21 & 1) != 0)
    goto LABEL_29;
  v73 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)a2 >> 62))
  {
    v24 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v24)
      goto LABEL_4;
LABEL_25:
    swift_bridgeObjectRelease(a2);
    v35 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_36;
    goto LABEL_26;
  }
  if (a2 < 0)
    v36 = a2;
  else
    v36 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v24 = _CocoaArrayWrapper.endIndex.getter(v36);
  if (!v24)
    goto LABEL_25;
LABEL_4:
  if (v24 >= 1)
  {
    v63 = v8;
    v64 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    v65 = v18;
    v66 = v16;
    for (i = 0; i != v24; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
      }
      else
      {
        v27 = *(_QWORD *)(a2 + 8 * i + 32);
        swift_retain(v27);
      }
      v28 = *(_QWORD *)(v27 + 48);
      v29 = *(_QWORD *)(v27 + 56);
      if (qword_10009E7D8 != -1)
        swift_once(&qword_10009E7D8, sub_10003A130);
      v30 = v28 == qword_10009FD38 && v29 == unk_10009FD40;
      if (v30
        || (v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, qword_10009FD38, unk_10009FD40, 0),
            (v31 & 1) != 0))
      {
        swift_release(v27, v26);
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
        v32 = *(_QWORD *)(v73 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
        v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v27);
        specialized ContiguousArray._endMutation()(v33);
      }
    }
    swift_bridgeObjectRelease(a2);
    v35 = v73;
    v18 = v65;
    v16 = v66;
    v8 = v63;
    v11 = v64;
    if (v73 < 0)
      goto LABEL_36;
LABEL_26:
    if ((v35 & 0x4000000000000000) == 0)
    {
      v37 = *(_QWORD *)(v35 + 16);
      goto LABEL_28;
    }
LABEL_36:
    swift_bridgeObjectRetain(v35);
    v37 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_release(v35, v61);
LABEL_28:
    swift_release(v35, v34);
    if (!v37)
    {
      v59 = sub_10000A66C(&qword_10009C828);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v18, 1, 1, v59);
      v39 = v69;
LABEL_30:
      v47 = *(_QWORD *)(v71 + 8);
      v48 = *(uint64_t (**)(__n128))(*(_QWORD *)v47 + 256);
      v49 = swift_retain(v47);
      LOBYTE(v48) = v48(v49);
      swift_release(v47, v50);
      sub_100041CC8(v39, (uint64_t)v11, type metadata accessor for StickerPackStrip);
      if ((v48 & 1) != 0)
      {
        v51 = sub_100045678((uint64_t)v11, type metadata accessor for StickerPackStrip);
      }
      else
      {
        v52 = *(_QWORD *)&v11[*(int *)(v8 + 24) + 8];
        v53 = *(uint64_t (**)(__n128))(*(_QWORD *)v52 + 304);
        v54 = swift_retain(v52);
        LOBYTE(v53) = v53(v54);
        swift_release(v52, v55);
        v51 = sub_100045678((uint64_t)v11, type metadata accessor for StickerPackStrip);
        v56 = 0.0;
        if ((v53 & 1) == 0)
        {
LABEL_34:
          sub_10002E23C((uint64_t)v18, (uint64_t)v16, &qword_10009C818);
          v57 = v72;
          sub_10002E23C((uint64_t)v16, v72, &qword_10009C818);
          v58 = v57 + *(int *)(sub_10000A66C(&qword_10009C830) + 48);
          *(double *)v58 = v56;
          *(_BYTE *)(v58 + 8) = 0;
          sub_10002E2B4((uint64_t)v18, &qword_10009C818);
          sub_10002E2B4((uint64_t)v16, &qword_10009C818);
          return;
        }
      }
      v56 = GeometryProxy.size.getter(v51);
      goto LABEL_34;
    }
LABEL_29:
    v73 = 0x4036000000000000;
    v38 = v68;
    v39 = v69;
    sub_100041CC8(v69, v68, type metadata accessor for StickerPackStrip);
    v40 = *(unsigned __int8 *)(v67 + 80);
    v41 = (v40 + 16) & ~v40;
    v42 = swift_allocObject(&unk_10008CA40, v41 + v9, v40 | 7);
    sub_100041D10(v38, v42 + v41, type metadata accessor for StickerPackStrip);
    v43 = sub_100046698();
    View.onTapGesture(count:perform:)(1, sub_10004660C, v42, &type metadata for StickerPackStrip.EditButton, v43, v44);
    swift_release(v42, v45);
    v46 = sub_10000A66C(&qword_10009C828);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v18, 0, 1, v46);
    goto LABEL_30;
  }
  __break(1u);
}

double sub_10003DBCC()
{
  return 22.0;
}

uint64_t sub_10003DBD4(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    __chkstk_darwin();
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *a1++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return TupleView.init(_:)(v8, TupleTypeMetadata);
  }
  __chkstk_darwin();
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata(0, a2);
  __chkstk_darwin();
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return TupleView.init(_:)(v8, TupleTypeMetadata);
}

uint64_t sub_10003DD88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t result;
  uint64_t v24;

  v4 = type metadata accessor for StickerPackStrip(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - v9;
  sub_100041CC8(a1, (uint64_t)&v24 - v9, type metadata accessor for StickerPackStrip);
  v11 = *(unsigned __int8 *)(v5 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = v12 + v6;
  v14 = v11 | 7;
  v15 = swift_allocObject(&unk_10008C9F0, v13, v11 | 7);
  sub_100041D10((uint64_t)v10, v15 + v12, type metadata accessor for StickerPackStrip);
  sub_100041CC8(a1, (uint64_t)v8, type metadata accessor for StickerPackStrip);
  v16 = swift_allocObject(&unk_10008CA18, v13, v14);
  sub_100041D10((uint64_t)v8, v16 + v12, type metadata accessor for StickerPackStrip);
  v17 = sub_10000A380((uint64_t)sub_1000461F8, v15, (uint64_t)sub_100046334, v16);
  v18 = static Edge.Set.top.getter();
  v19 = static Edge.Set.bottom.getter();
  v20 = Edge.Set.init(rawValue:)(0);
  v21 = Edge.Set.init(rawValue:)(v20);
  if (Edge.Set.init(rawValue:)(v21 & v18) != v18)
    v20 = Edge.Set.init(rawValue:)(v20 | v18);
  v22 = Edge.Set.init(rawValue:)(v20);
  result = Edge.Set.init(rawValue:)(v22 & v19);
  if (result != v19)
  {
    result = Edge.Set.init(rawValue:)(v20 | v19);
    LOBYTE(v20) = result;
  }
  *(_QWORD *)a2 = v17;
  *(_BYTE *)(a2 + 8) = v20;
  return result;
}

uint64_t sub_10003DF38()
{
  uint64_t v0;

  if (qword_10009E7F0 != -1)
    swift_once(&qword_10009E7F0, sub_10003A33C);
  v0 = __chkstk_darwin(qword_10009FD58);
  return withAnimation<A>(_:_:)(v0, sub_100045FC0);
}

uint64_t sub_10003DFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v27 = a1;
  v28 = a2;
  v31 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v30 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StickerPackStrip(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = type metadata accessor for ScrollViewProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  sub_100039AF0();
  v29 = static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v9);
  sub_100041CC8(v28, (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StickerPackStrip);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = (v11 + v14 + v13) & ~v14;
  v16 = swift_allocObject(&unk_10008C950, v15 + v8, v12 | v14 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v16 + v13, (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_100041D10((uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for StickerPackStrip);
  aBlock[4] = sub_100045DB8;
  v36 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008C968;
  v17 = _Block_copy(aBlock);
  v19 = swift_release(v36, v18);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  v20 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_10000A66C(&qword_10009B198);
  v22 = sub_10000F6DC((unint64_t *)&qword_10009B1A0, &qword_10009B198, (uint64_t)&protocol conformance descriptor for [A]);
  v24 = v30;
  v23 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v31, v20);
  v25 = (void *)v29;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v5, v24, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v5, v33);
}

uint64_t sub_10003E2B4(uint64_t a1)
{
  return sub_100042288(a1, type metadata accessor for StickerPackStripItem, &qword_10009C130, (uint64_t)&unk_100078AE8);
}

uint64_t sub_10003E2D0(uint64_t a1, uint64_t a2)
{
  return swift_retain(a2);
}

uint64_t sub_10003E2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release(*(_QWORD *)(v2 + 8), a2);
  *(_QWORD *)(v2 + 8) = a1;
  return result;
}

uint64_t (*sub_10003E300())()
{
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_10003E310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for StickerPackStripItem(0);
  v5 = sub_10002CA50(&qword_10009C130, type metadata accessor for StickerPackStripItem, (uint64_t)&unk_100078AE8);
  return ObservedObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t sub_10003E370(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t sub_10003E378(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t sub_10003E380@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE v48[12];
  int v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _QWORD v56[2];

  v3 = a2;
  v49 = a2;
  v55 = a3;
  v51 = type metadata accessor for AccessibilityTraits(0);
  v5 = *(_QWORD *)(v51 - 8);
  v6 = __chkstk_darwin(v51);
  v54 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v9 = &v48[-v8];
  v50 = sub_10000A66C(&qword_10009C138);
  __chkstk_darwin(v50);
  v11 = &v48[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_10000A66C(&qword_10009C140);
  __chkstk_darwin(v12);
  v14 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_10000A66C(&qword_10009C148);
  __chkstk_darwin(v15);
  v17 = &v48[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v53 = sub_10000A66C(&qword_10009C150);
  v18 = __chkstk_darwin(v53);
  v20 = &v48[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __chkstk_darwin(v18);
  v52 = &v48[-v22];
  *v11 = static Alignment.center.getter(v21);
  v11[1] = v23;
  v24 = sub_10000A66C(&qword_10009C158);
  v25 = sub_10003E770(a1, v3, (uint64_t)v11 + *(int *)(v24 + 44));
  v26 = sub_10003EAC0(v25, a1);
  v28 = v27;
  v56[0] = v26;
  v56[1] = v27;
  v29 = sub_10000F6DC(&qword_10009C160, &qword_10009C138, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v30 = sub_100033158();
  View.accessibilityLabel<A>(_:)(v56, v50, &type metadata for String, v29, v30);
  swift_bridgeObjectRelease(v28);
  sub_10002E2B4((uint64_t)v11, &qword_10009C138);
  sub_10002E23C((uint64_t)v14, (uint64_t)v17, &qword_10009C140);
  v17[*(int *)(v15 + 36)] = 1;
  v31 = sub_10002E2B4((uint64_t)v14, &qword_10009C140);
  static AccessibilityTraits.isImage.getter(v31);
  v32 = sub_10003FA58();
  v33 = v15;
  v34 = v51;
  View.accessibilityRemoveTraits(_:)(v9, v33, v32);
  v35 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v35(v9, v34);
  sub_10002E2B4((uint64_t)v17, &qword_10009C148);
  v36 = sub_10000A66C(&qword_10009C188);
  v37 = *(_QWORD *)(v5 + 72);
  v38 = *(unsigned __int8 *)(v5 + 80);
  v39 = (v38 + 32) & ~v38;
  if ((v49 & 1) != 0)
  {
    v40 = swift_allocObject(v36, v39 + 2 * v37, v38 | 7);
    *(_OWORD *)(v40 + 16) = xmmword_100078E10;
    v41 = static AccessibilityTraits.isSelected.getter();
  }
  else
  {
    v41 = swift_allocObject(v36, v39 + v37, v38 | 7);
    v40 = v41;
    *(_OWORD *)(v41 + 16) = xmmword_100078550;
  }
  static AccessibilityTraits.isButton.getter(v41);
  v56[0] = v40;
  v42 = sub_10002CA50(&qword_10009C190, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v43 = sub_10000A66C(&qword_10009C198);
  v44 = sub_10000F6DC(&qword_10009C1A0, &qword_10009C198, (uint64_t)&protocol conformance descriptor for [A]);
  v45 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)(v56, v43, v44, v34, v42);
  v46 = (uint64_t)v52;
  ModifiedContent<>.accessibilityAddTraits(_:)(v45, v53);
  v35(v45, v34);
  sub_10002E2B4((uint64_t)v20, &qword_10009C150);
  return sub_10004692C(v46, v55, &qword_10009C150);
}

uint64_t sub_10003E770@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(__n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a3;
  v5 = sub_10000A66C(&qword_10009C708);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for ContentShapeKinds(0);
  v11 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_10000A66C(&qword_10009C710);
  v14 = __chkstk_darwin(v41);
  v16 = (uint64_t *)((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v43 = (uint64_t)&v41 - v17;
  v18 = type metadata accessor for StickerPackStripSelectionBackground(0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v41 - v22;
  sub_100047A78(a2, (_BYTE *)&v41 - v22);
  v24 = *(uint64_t (**)(__n128))(*(_QWORD *)a1 + 120);
  v25 = swift_retain(a1);
  v26 = v24(v25);
  v28 = swift_release(a1, v27);
  static ContentShapeKinds.accessibility.getter(v28);
  v29 = enum case for RoundedCornerStyle.continuous(_:);
  v30 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v10, v29, v30);
  sub_100041CC8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
  v31 = v5;
  v32 = &v7[*(int *)(v5 + 40)];
  v33 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v34 = v11;
  v35 = v42;
  v33(v32, v13, v42);
  v7[*(int *)(v31 + 36)] = 0;
  sub_10002E23C((uint64_t)v7, (uint64_t)v16 + *(int *)(v41 + 36), &qword_10009C708);
  *v16 = v26;
  swift_retain(v26);
  sub_10002E2B4((uint64_t)v7, &qword_10009C708);
  sub_100045678((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  swift_release(v26, v36);
  v37 = v43;
  sub_10004692C((uint64_t)v16, v43, &qword_10009C710);
  sub_100041CC8((uint64_t)v23, (uint64_t)v21, type metadata accessor for StickerPackStripSelectionBackground);
  sub_10002E23C(v37, (uint64_t)v16, &qword_10009C710);
  v38 = v44;
  sub_100041CC8((uint64_t)v21, v44, type metadata accessor for StickerPackStripSelectionBackground);
  v39 = sub_10000A66C(&qword_10009C718);
  sub_10002E23C((uint64_t)v16, v38 + *(int *)(v39 + 48), &qword_10009C710);
  sub_10002E2B4(v37, &qword_10009C710);
  sub_100045678((uint64_t)v23, type metadata accessor for StickerPackStripSelectionBackground);
  sub_10002E2B4((uint64_t)v16, &qword_10009C710);
  return sub_100045678((uint64_t)v21, type metadata accessor for StickerPackStripSelectionBackground);
}

uint64_t sub_10003EAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  BOOL v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  BOOL v12;
  unint64_t v13;

  v2 = 0x746E65636572;
  countAndFlagsBits = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = countAndFlagsBits == 0x746E65636572 && v4 == 0xE600000000000000;
  if (!v5
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0x746E65636572, 0xE600000000000000, countAndFlagsBits, v4, 0) & 1) == 0)
  {
    v12 = countAndFlagsBits == 0x746E6F4372657375 && v4 == 0xEB00000000746E65;
    if (v12
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x746E6F4372657375, 0xEB00000000746E65, countAndFlagsBits, v4, 0) & 1) != 0)
    {
      v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v13 = 0xE000000000000000;
      v7 = 0x697453206576694CLL;
      v8 = 0xED00007372656B63;
      goto LABEL_7;
    }
    if (countAndFlagsBits == 0x696A6F6D65 && v4 == 0xE500000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x696A6F6D65, 0xE500000000000000, countAndFlagsBits, v4, 0) & 1) != 0)
    {
      v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v7 = 0x696A6F6D45;
      v13 = 0xE000000000000000;
      v8 = 0xE500000000000000;
      goto LABEL_7;
    }
    v2 = 0x696A6F6D656DLL;
    if ((countAndFlagsBits != 0x696A6F6D656DLL || v4 != 0xE600000000000000)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(0x696A6F6D656DLL, 0xE600000000000000, countAndFlagsBits, v4, 0) & 1) == 0)
    {
      swift_bridgeObjectRetain(v4);
      return countAndFlagsBits;
    }
  }
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v7 = v2 - 32;
  v13 = 0xE000000000000000;
  v8 = 0xE600000000000000;
LABEL_7:
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, (NSBundle)v6, v9, *(Swift::String *)(&v13 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10003ED2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10003E380(*(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_10003ED38@<X0>(uint64_t a1@<X8>)
{
  return sub_100039E80(&qword_10009C128, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_10003ED7C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = swift_getKeyPath(&unk_100078F90);
  v2 = sub_10000A66C(&qword_10009C128);
  return swift_storeEnumTagMultiPayload(a1, v2, 0);
}

uint64_t sub_10003EDC0()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10003EDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003EDF4(a1, a2, a3, a4, (void (*)(_QWORD))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t sub_10003EDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  __chkstk_darwin();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10003EE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = type metadata accessor for GeometryProxy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_10003EEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 36);
  v5 = type metadata accessor for GeometryProxy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_10003EEF0())()
{
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_10003EF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10000E4F4(v2 + *(int *)(a1 + 40), a2);
}

uint64_t sub_10003EF24(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *(int *)(a2 + 40));
  sub_10000D4A4(v4);
  return sub_10003D554(a1, (uint64_t)v4);
}

uint64_t (*sub_10003EF58())()
{
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_10003EF6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 44));
  v3 = *v2;
  swift_retain(v2[1]);
  return v3;
}

uint64_t sub_10003EFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3 + 44));
  result = swift_release(v6[1], a2);
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*sub_10003EFDC())()
{
  return PresentationContexts.rawValue.getter;
}

unint64_t sub_10003EFF0()
{
  return 0xD000000000000010;
}

uint64_t sub_10003F00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 48));
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t sub_10003F040@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  void (*v42)(char *, uint64_t);
  uint64_t WitnessTable;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;

  v53 = a2;
  v3 = sub_10000D720(&qword_10009C1A8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v47 = a1;
  v45 = v4;
  v6 = type metadata accessor for VStack(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v6, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v9 = type metadata accessor for HStack(0, v8);
  v46 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&WitnessTable - v10;
  v12 = type metadata accessor for ModifiedContent(0, v9, &type metadata for _FrameLayout);
  v50 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&WitnessTable - v13;
  v15 = sub_10000D720(&qword_10009C1B0);
  v16 = type metadata accessor for ModifiedContent(0, v12, v15);
  v52 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v48 = (char *)&WitnessTable - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v51 = (char *)&WitnessTable - v20;
  if (qword_10009E7E8 != -1)
    v19 = swift_once(&qword_10009E7E8, sub_10003A298);
  v21 = *(double *)&qword_10009FD50 * 1.5;
  v22 = __chkstk_darwin(v19);
  *(&WitnessTable - 4) = v45;
  *(&WitnessTable - 3) = v5;
  *(&WitnessTable - 2) = v49;
  v23 = static VerticalAlignment.center.getter(v22);
  v24 = HStack.init(alignment:spacing:content:)(v23, *(_QWORD *)&v21, 0, sub_10003FBA4, &WitnessTable - 6, v8, WitnessTable);
  v25 = GeometryProxy.size.getter(v24);
  v27 = static Alignment.center.getter(v26);
  v29 = v28;
  v30 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v9);
  View.frame(width:height:alignment:)(*(_QWORD *)&v25, 0, 0, 1, v27, v29, v9, v30);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v9);
  v58 = 0x3FF0000000000000;
  v59 = 0;
  v31 = sub_100041C84();
  v32 = static AnyTransition.modifier<A>(active:identity:)(&v59, &v58, &type metadata for DrillDownTransitionModifier, v31);
  if (qword_10009E7F0 != -1)
    swift_once(&qword_10009E7F0, sub_10003A33C);
  v33 = AnyTransition.animation(_:)(qword_10009FD58, v32);
  swift_release(v32, v34);
  v56 = v30;
  v57 = &protocol witness table for _FrameLayout;
  v35 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v36 = v48;
  View.transition(_:)(v33, v12, v35);
  swift_release(v33, v37);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v12);
  v38 = sub_10000F6DC(&qword_10009C1C0, &qword_10009C1B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  v54 = v35;
  v55 = v38;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v40 = v51;
  v39 = v52;
  v41 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  v41(v51, v36, v16);
  v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v42(v36, v16);
  v41(v53, v40, v16);
  return ((uint64_t (*)(char *, uint64_t))v42)(v40, v16);
}

uint64_t sub_10003F434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t WitnessTable;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  ValueMetadata *OpaqueTypeConformance2;
  unint64_t v65;
  _QWORD v66[2];
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;

  v63 = a4;
  v57 = a3;
  v7 = type metadata accessor for VStack(0);
  v62 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v61 = (char *)&v54 - v11;
  v13 = type metadata accessor for StickerPackStrip.DrillDownContainer(0, a2, a3, v12);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v17 = (char *)&v54 - v16;
  v18 = sub_10000A66C(&qword_10009C1A8);
  v59 = *(_QWORD *)(v18 - 8);
  v60 = v18;
  v19 = __chkstk_darwin(v18);
  v58 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v54 = a1;
  v55 = (char *)&v54 - v21;
  v22 = (uint64_t *)(a1 + *(int *)(v13 + 48));
  v23 = *v22;
  v24 = v22[1];
  swift_bridgeObjectRetain(v24);
  v25 = Image.init(systemName:)(v23, v24);
  v67 = sub_100061CF4(v25);
  v68 = v26;
  v69 = v27;
  v70 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, v13);
  v29 = *(unsigned __int8 *)(v14 + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = swift_allocObject(&unk_10008C8D8, v30 + v15, v29 | 7);
  v32 = v57;
  *(_QWORD *)(v31 + 16) = a2;
  *(_QWORD *)(v31 + 24) = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v31 + v30, v17, v13);
  v56 = sub_1000457A0();
  v33 = v55;
  View.onTapGesture(count:perform:)(1, sub_1000458F4, v31, &type metadata for StickerPackStripDrillDownSymbolView, v56, v34);
  swift_release(v31, v35);
  swift_release(v67, v36);
  swift_release(v68, v37);
  v39 = swift_release(v69, v38);
  v40 = (uint64_t *)(v54 + *(int *)(v13 + 44));
  v41 = *v40;
  v42 = v40[1];
  v43 = static HorizontalAlignment.center.getter(v39);
  VStack.init(alignment:spacing:content:)(v43, 0, 1, v41, v42, a2, v32);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v7);
  v46 = v61;
  v45 = v62;
  v47 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v47(v61, v10, v7);
  v48 = *(void (**)(char *, uint64_t))(v45 + 8);
  v48(v10, v7);
  v49 = (uint64_t)v58;
  v50 = v59;
  v51 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, v33, v60);
  v67 = v49;
  v47(v10, v46, v7);
  v68 = v10;
  v66[0] = v51;
  v66[1] = v7;
  OpaqueTypeConformance2 = &type metadata for StickerPackStripDrillDownSymbolView;
  v65 = v56;
  OpaqueTypeConformance2 = (ValueMetadata *)swift_getOpaqueTypeConformance2(&OpaqueTypeConformance2, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v65 = WitnessTable;
  sub_10003DBD4(&v67, 2uLL, (uint64_t)v66);
  v48(v46, v7);
  v52 = *(void (**)(char *, uint64_t))(v50 + 8);
  v52(v33, v51);
  v48(v10, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v52)(v49, v51);
}

uint64_t sub_10003F778()
{
  uint64_t v0;

  if (qword_10009E7F0 != -1)
    swift_once(&qword_10009E7F0, sub_10003A33C);
  v0 = __chkstk_darwin(qword_10009FD58);
  return withAnimation<A>(_:_:)(v0, sub_100045944);
}

uint64_t sub_10003F81C()
{
  unint64_t v0;
  uint64_t v2;
  uint64_t v3;

  v2 = 0x3FF0000000000000;
  v3 = 0;
  v0 = sub_100041C84();
  return static AnyTransition.modifier<A>(active:identity:)(&v3, &v2, &type metadata for DrillDownTransitionModifier, v0);
}

uint64_t sub_10003F85C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10000E4F4(v1, a1);
}

uint64_t sub_10003F878@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StickerPackStrip.MemojiPicker(0) + 20);
  v4 = type metadata accessor for GeometryProxy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10003F8C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StickerPackStrip.MemojiPicker(0) + 20);
  v4 = type metadata accessor for GeometryProxy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*sub_10003F908())()
{
  type metadata accessor for StickerPackStrip.MemojiPicker(0);
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_10003F930()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for StickerPackStrip.MemojiPicker(0) + 24));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_10003F96C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for StickerPackStrip.MemojiPicker(0) + 24));
  result = swift_bridgeObjectRelease(v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_10003F9B0())()
{
  type metadata accessor for StickerPackStrip.MemojiPicker(0);
  return PresentationContexts.rawValue.getter;
}

double sub_10003F9D8()
{
  return 0.0;
}

double sub_10003F9EC()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for StickerPackStrip.MemojiPicker(0) + 28));
}

uint64_t sub_10003FA14(char a1)
{
  char v2;
  uint64_t v3;

  v2 = a1;
  State.init(wrappedValue:)(&v3, &v2, &type metadata for Bool);
  return v3;
}

uint64_t type metadata accessor for StickerPackStrip.DrillDownContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100046C70(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StickerPackStrip.DrillDownContainer);
}

unint64_t sub_10003FA58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C168;
  if (!qword_10009C168)
  {
    v1 = sub_10000D720(&qword_10009C148);
    sub_10003FAC4();
    sub_10003FB60();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C168);
  }
  return result;
}

unint64_t sub_10003FAC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C170;
  if (!qword_10009C170)
  {
    v1 = sub_10000D720(&qword_10009C140);
    sub_10000F6DC(&qword_10009C160, &qword_10009C138, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_10002CA50(&qword_10009C178, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C170);
  }
  return result;
}

unint64_t sub_10003FB60()
{
  unint64_t result;

  result = qword_10009C180;
  if (!qword_10009C180)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AccessibilityIgnoresInvertColorsViewModifier, &type metadata for _AccessibilityIgnoresInvertColorsViewModifier);
    atomic_store(result, (unint64_t *)&qword_10009C180);
  }
  return result;
}

uint64_t sub_10003FBA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10003F434(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_10003FBB0()
{
  uint64_t v0;
  uint64_t v2;

  type metadata accessor for StickerPackStrip.MemojiPicker(0);
  v0 = sub_10000A66C(&qword_10009C1C8);
  State.wrappedValue.getter(&v2, v0);
  if ((_BYTE)v2)
    return 0x73697370696C6C65;
  else
    return 1937075312;
}

uint64_t sub_10003FC38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double v11;
  double *v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)();
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for StickerPackStrip.MemojiPicker(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = sub_10000A66C(&qword_10009C1D0);
  v8 = __chkstk_darwin(v7);
  v10 = (double *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = GeometryProxy.size.getter(v8);
  v12 = (double *)sub_10004728C();
  v13 = *v12;
  if (qword_10009E7E8 != -1)
    v12 = (double *)swift_once(&qword_10009E7E8, sub_10003A298);
  v14 = v11 - (v13 + v13) + *(double *)&qword_10009FD50 * -5.0;
  v15 = *(double *)&qword_10009FD50 * 1.5;
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v12);
  v10[1] = v15;
  *((_BYTE *)v10 + 16) = 0;
  v16 = sub_10000A66C(&qword_10009C1D8);
  sub_10003FE7C(v2, (uint64_t)v10 + *(int *)(v16 + 44), v14);
  sub_100041CC8(v2, (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StickerPackStrip.MemojiPicker);
  v17 = *(unsigned __int8 *)(v5 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_10008C570, v18 + v6, v17 | 7);
  sub_100041D10((uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for StickerPackStrip.MemojiPicker);
  sub_10002E23C((uint64_t)v10, a1, &qword_10009C1D0);
  v20 = (uint64_t (**)())(a1 + *(int *)(sub_10000A66C(&qword_10009C1E0) + 36));
  *v20 = sub_100041D54;
  v20[1] = (uint64_t (*)())v19;
  v20[2] = 0;
  v20[3] = 0;
  return sub_10002E2B4((uint64_t)v10, &qword_10009C1D0);
}

double sub_10003FE14(double a1)
{
  double v2;

  v2 = *(double *)sub_10004728C();
  if (qword_10009E7E8 != -1)
    swift_once(&qword_10009E7E8, sub_10003A298);
  return a1 - (v2 + v2) + *(double *)&qword_10009FD50 * -5.0;
}

uint64_t sub_10003FE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  _UNKNOWN **v95;
  _OWORD v96[4];
  _OWORD v97[2];
  char v98;

  v89 = a2;
  v5 = (int *)type metadata accessor for StickerPackStrip.MemojiPicker(0);
  v82 = *((_QWORD *)v5 - 1);
  v83 = *(_QWORD *)(v82 + 64);
  __chkstk_darwin(v5);
  v81 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_10000A66C(&qword_10009C1A8);
  v86 = *(_QWORD *)(v87 - 8);
  v7 = __chkstk_darwin(v87);
  v88 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v84 = (char *)&v77 - v10;
  __chkstk_darwin(v9);
  v85 = (char *)&v77 - v11;
  v12 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v12);
  v14 = (_OWORD *)((char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_10000A66C(&qword_10009C6E0);
  __chkstk_darwin(v15);
  v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_10000A66C(&qword_10009C6E8);
  v18 = __chkstk_darwin(v80);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v79 = (uint64_t)&v77 - v21;
  v94 = v5;
  v95 = &off_10008C588;
  v22 = sub_10004563C(&v91);
  sub_100041CC8(a1, (uint64_t)v22, type metadata accessor for StickerPackStrip.MemojiPicker);
  v23 = (uint64_t *)(a1 + v5[6]);
  v25 = *v23;
  v24 = v23[1];
  v26 = (_OWORD *)(a1 + v5[7]);
  v27 = v26[1];
  v97[0] = *v26;
  v97[1] = v27;
  v98 = 0;
  v28 = a1 + v5[8];
  v29 = *(_BYTE *)v28;
  v30 = *(_QWORD *)(v28 + 8);
  LOBYTE(v96[0]) = v29;
  *((_QWORD *)&v96[0] + 1) = v30;
  swift_bridgeObjectRetain(v24);
  v78 = sub_10000A66C(&qword_10009C1C8);
  State.wrappedValue.getter(&v90, v78);
  sub_10000DF7C((uint64_t)&v91, v25, v24, (uint64_t)v97, v90, (uint64_t)v96);
  v31 = (char *)v14 + *(int *)(v12 + 20);
  v32 = enum case for RoundedCornerStyle.continuous(_:);
  v33 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v31, v32, v33);
  __asm { FMOV            V0.2D, #13.0 }
  *v14 = _Q0;
  v39 = (uint64_t)&v17[*(int *)(v15 + 36)];
  sub_100041CC8((uint64_t)v14, v39, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v39 + *(int *)(sub_10000A66C(&qword_10009C6F0) + 36)) = 256;
  sub_10000D7D4((uint64_t)v96, (uint64_t)v17);
  sub_100045678((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v40 = sub_10000D960((uint64_t)v96);
  v41 = static Alignment.center.getter(v40);
  _FrameLayout.init(width:height:alignment:)(v96, *(_QWORD *)&a3, 0, 0, 1, v41, v42);
  sub_10002E23C((uint64_t)v17, (uint64_t)v20, &qword_10009C6E0);
  v43 = &v20[*(int *)(v80 + 36)];
  v44 = v96[1];
  *(_OWORD *)v43 = v96[0];
  *((_OWORD *)v43 + 1) = v44;
  *((_OWORD *)v43 + 2) = v96[2];
  sub_10002E2B4((uint64_t)v17, &qword_10009C6E0);
  v45 = v79;
  sub_10004692C((uint64_t)v20, v79, &qword_10009C6E8);
  v46 = a1 + v5[9];
  v47 = *(_BYTE *)v46;
  v48 = *(_QWORD *)(v46 + 8);
  LOBYTE(v91) = v47;
  v92 = v48;
  State.wrappedValue.getter(&v90, v78);
  if (v90)
    v49 = 0x73697370696C6C65;
  else
    v49 = 1937075312;
  if (v90)
    v50 = 0xE800000000000000;
  else
    v50 = 0xE400000000000000;
  v51 = Image.init(systemName:)(v49, v50);
  v91 = sub_100061CF4(v51);
  v92 = v52;
  v93 = v53;
  v94 = v54;
  v55 = v81;
  sub_100041CC8(a1, v81, type metadata accessor for StickerPackStrip.MemojiPicker);
  v56 = *(unsigned __int8 *)(v82 + 80);
  v57 = (v56 + 16) & ~v56;
  v58 = swift_allocObject(&unk_10008C860, v57 + v83, v56 | 7);
  sub_100041D10(v55, v58 + v57, type metadata accessor for StickerPackStrip.MemojiPicker);
  v59 = sub_1000457A0();
  v60 = v84;
  View.onTapGesture(count:perform:)(1, sub_100045774, v58, &type metadata for StickerPackStripDrillDownSymbolView, v59, v61);
  swift_release(v58, v62);
  swift_release(v91, v63);
  swift_release(v92, v64);
  swift_release(v93, v65);
  v66 = v86;
  v67 = v85;
  v68 = v87;
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v60, v87);
  sub_10002E23C(v45, (uint64_t)v20, &qword_10009C6E8);
  v69 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v70 = v66;
  v71 = v88;
  v72 = v68;
  v69(v88, v67, v68);
  v73 = v89;
  sub_10002E23C((uint64_t)v20, v89, &qword_10009C6E8);
  v74 = sub_10000A66C(&qword_10009C700);
  v69((char *)(v73 + *(int *)(v74 + 48)), v71, v72);
  v75 = *(void (**)(char *, uint64_t))(v70 + 8);
  v75(v67, v72);
  sub_10002E2B4(v45, &qword_10009C6E8);
  v75(v71, v72);
  return sub_10002E2B4((uint64_t)v20, &qword_10009C6E8);
}

uint64_t sub_100040458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void **aBlock;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  uint64_t (*v47)();
  uint64_t v48;
  char v49;

  v39 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StickerPackStrip.MemojiPicker(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v36 - v14;
  v16 = a1 + *(int *)(v6 + 32);
  v17 = *(_BYTE *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  LOBYTE(aBlock) = v17;
  v44 = v18;
  v49 = 1;
  v19 = sub_10000A66C(&qword_10009C1C8);
  State.wrappedValue.setter(&v49, v19);
  sub_100039AF0();
  v37 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)(v13, 1.0);
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21 = v9;
  v20(v13, v9);
  v22 = (uint64_t (*)(char *, uint64_t))v20;
  sub_100041CC8(a1, (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StickerPackStrip.MemojiPicker);
  v23 = *(unsigned __int8 *)(v7 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = swift_allocObject(&unk_10008C888, v24 + v8, v23 | 7);
  sub_100041D10((uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, type metadata accessor for StickerPackStrip.MemojiPicker);
  v47 = sub_1000457E8;
  v48 = v25;
  aBlock = _NSConcreteStackBlock;
  v44 = 1107296256;
  v45 = sub_10000C1B4;
  v46 = &unk_10008C8A0;
  v26 = _Block_copy(&aBlock);
  v28 = swift_release(v48, v27);
  static DispatchQoS.unspecified.getter(v28);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v29 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v30 = sub_10000A66C(&qword_10009B198);
  v31 = sub_10000F6DC((unint64_t *)&qword_10009B1A0, &qword_10009B198, (uint64_t)&protocol conformance descriptor for [A]);
  v33 = v38;
  v32 = v39;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v30, v31, v39, v29);
  v34 = (void *)v37;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v5, v33, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v32);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v41);
  return v22(v15, v21);
}

uint64_t sub_100040790(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  BOOL v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[9];
  uint64_t v19;

  v5 = sub_10000A66C(&qword_10009CAB0);
  __chkstk_darwin(v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  if (a2)
  {
    v8 = a2;
  }
  else
  {
    a1 = 0;
    v8 = 0xE000000000000000;
  }
  v9 = swift_bridgeObjectRetain(a2);
  UUID.init(uuidString:)(a1, v8, v9);
  swift_bridgeObjectRelease(v8);
  v10 = type metadata accessor for UUID(0);
  v11 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10) != 1;
  sub_10002E2B4((uint64_t)v7, &qword_10009CAB0);
  v12 = (char *)(v2 + *(int *)(type metadata accessor for StickerPackStrip.MemojiPicker(0) + 36));
  v13 = *v12;
  v14 = *((_QWORD *)v12 + 1);
  v18[1] = v13;
  v19 = v14;
  v18[0] = v11;
  v15 = sub_10000A66C(&qword_10009C1C8);
  return State.wrappedValue.setter(v18, v15);
}

uint64_t sub_1000408A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  __n128 v10;
  uint64_t v11;
  BOOL v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[9];
  uint64_t v22;

  v7 = sub_10000A66C(&qword_10009CAB0);
  __chkstk_darwin(v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v10 = swift_bridgeObjectRetain(a3);
  UUID.init(uuidString:)(a2, a3, v10);
  swift_bridgeObjectRelease(a3);
  v11 = type metadata accessor for UUID(0);
  v12 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_10002E2B4((uint64_t)v9, &qword_10009CAB0);
  v13 = (char *)v3 + *(int *)(type metadata accessor for StickerPackStrip.MemojiPicker(0) + 36);
  v14 = *v13;
  v15 = *((_QWORD *)v13 + 1);
  v21[1] = v14;
  v22 = v15;
  v21[0] = v12;
  v16 = sub_10000A66C(&qword_10009C1C8);
  State.wrappedValue.setter(v21, v16);
  v17 = v3[3];
  v18 = v3[4];
  sub_10000E538(v3, v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8))(a1, a2, a3, v17, v18);
}

uint64_t sub_1000409F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2[3];
  v6 = v2[4];
  sub_10000E538(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5, v6);
}

uint64_t sub_100040A4C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = v3;
  v8 = v4[3];
  v9 = v4[4];
  sub_10000E538(v4, v8);
  result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24))(a1, a2, a3, v8, v9);
  if (a2)
    return sub_100040790(a1, a2);
  return result;
}

uint64_t sub_100040ADC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;

  sub_100040790(a2, a3);
  v7 = v3[3];
  v8 = v3[4];
  sub_10000E538(v3, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3, v7, v8);
}

uint64_t sub_100040B4C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t OpaqueTypeConformance2;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  unsigned int v76;
  unsigned int v77;
  uint64_t v78;
  int v79;
  int v80;
  unsigned __int8 v81;
  uint64_t v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _OWORD *v107;
  __int128 v108;
  uint64_t *v109;
  uint64_t v110;
  unsigned int v111;
  unsigned int v112;
  uint64_t v113;
  int v114;
  int v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;

  v152 = a1;
  v151 = type metadata accessor for AccessibilityTraits(0);
  v150 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v149 = (char *)&v130 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v4);
  v147 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_10000A66C(&qword_10009C1E8);
  __chkstk_darwin(v146);
  v148 = (uint64_t)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_10000A66C(&qword_10009C1F0);
  __chkstk_darwin(v140);
  v161 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000A66C(&qword_10009D500);
  __chkstk_darwin(v8);
  v160 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Font.TextStyle(0);
  v158 = *(_QWORD *)(v10 - 8);
  v159 = v10;
  __chkstk_darwin(v10);
  v157 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_10000A66C(&qword_10009C1F8);
  __chkstk_darwin(v156);
  v13 = (uint64_t *)((char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_10000A66C(&qword_10009C200);
  __chkstk_darwin(v14);
  v16 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_10000A66C(&qword_10009C208);
  __chkstk_darwin(v154);
  v18 = (char *)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_10000A66C(&qword_10009C210);
  __chkstk_darwin(v155);
  v153 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_10000A66C(&qword_10009C218);
  v132 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v131 = (char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_10000A66C(&qword_10009C220);
  v135 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v133 = (char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_10000A66C(&qword_10009C228);
  __chkstk_darwin(v130);
  v137 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_10000A66C(&qword_10009C230);
  __chkstk_darwin(v138);
  v141 = (uint64_t)&v130 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_10000A66C(&qword_10009C238);
  __chkstk_darwin(v139);
  v143 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_10000A66C(&qword_10009C240);
  __chkstk_darwin(v144);
  v145 = (uint64_t)&v130 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_10000A66C(&qword_10009C248);
  __chkstk_darwin(v26);
  v142 = (char *)&v130 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = LocalizedStringKey.init(stringLiteral:)(1953064005, 0xE400000000000000);
  v29 = Text.init(_:tableName:bundle:comment:)(v28);
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  v36 = enum case for Text.Case.uppercase(_:);
  v37 = type metadata accessor for Text.Case(0);
  v38 = *(_QWORD *)(v37 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 104))(v16, v36, v37);
  v39 = v37;
  v40 = (uint64_t)v153;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v16, 0, 1, v39);
  KeyPath = swift_getKeyPath(&unk_100078FC0);
  sub_10002E23C((uint64_t)v16, (uint64_t)v13 + *(int *)(v156 + 28), &qword_10009C200);
  *v13 = KeyPath;
  sub_10002E23C((uint64_t)v13, (uint64_t)&v18[*(int *)(v154 + 36)], &qword_10009C1F8);
  *(_QWORD *)v18 = v29;
  *((_QWORD *)v18 + 1) = v31;
  v18[16] = v35;
  *((_QWORD *)v18 + 3) = v33;
  sub_100042A04(v29, v31, v35);
  swift_bridgeObjectRetain(v33);
  sub_10002E2B4((uint64_t)v13, &qword_10009C1F8);
  sub_10002E2B4((uint64_t)v16, &qword_10009C200);
  v42 = v29;
  v43 = v155;
  sub_100042A14(v42, v31, v35);
  swift_bridgeObjectRelease(v33);
  v45 = v157;
  v44 = v158;
  v46 = v159;
  (*(void (**)(char *, _QWORD, uint64_t))(v158 + 104))(v157, enum case for Font.TextStyle.caption2(_:), v159);
  v47 = type metadata accessor for Font.Design(0);
  v48 = v160;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v160, 1, 1, v47);
  v49 = (uint64_t)v48;
  v50 = static Font.system(_:design:weight:)(v45, v48, 0, 1);
  sub_10002E2B4(v49, &qword_10009D500);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  v51 = swift_getKeyPath(&unk_100078FF0);
  sub_10002E23C((uint64_t)v18, v40, &qword_10009C208);
  v52 = (uint64_t *)(v40 + *(int *)(v43 + 36));
  *v52 = v51;
  v52[1] = v50;
  v53 = (uint64_t)v18;
  v54 = (uint64_t)v161;
  sub_10002E2B4(v53, &qword_10009C208);
  v55 = enum case for DynamicTypeSize.xxLarge(_:);
  v56 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 104))(v54, v55, v56);
  v57 = sub_10002CA50(&qword_10009C250, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v54, v54, v56, v57);
  if ((result & 1) != 0)
  {
    v59 = sub_100042A74();
    v60 = sub_10000F6DC(&qword_10009C278, &qword_10009C1F0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v61 = v131;
    v62 = v140;
    View.dynamicTypeSize<A>(_:)(v54, v43, v140, v59, v60);
    sub_10002E2B4(v54, &qword_10009C1F0);
    v63 = sub_10002E2B4(v40, &qword_10009C210);
    v64 = static Font.Weight.medium.getter(v63);
    *(_QWORD *)&v162 = v43;
    *((_QWORD *)&v162 + 1) = v62;
    *(_QWORD *)&v163 = v59;
    *((_QWORD *)&v163 + 1) = v60;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v162, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v66 = v133;
    v67 = v134;
    View.fontWeight(_:)(*(_QWORD *)&v64, 0, v134, OpaqueTypeConformance2);
    v68 = (*(uint64_t (**)(char *, uint64_t))(v132 + 8))(v61, v67);
    v69 = static Color.secondary.getter(v68);
    v70 = swift_getKeyPath(&unk_100079020);
    v71 = v135;
    v72 = (uint64_t)v137;
    v73 = v136;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v137, v66, v136);
    v74 = (uint64_t *)(v72 + *(int *)(v130 + 36));
    *v74 = v70;
    v74[1] = v69;
    v75 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v66, v73);
    v76 = static Edge.Set.leading.getter(v75);
    v77 = static Edge.Set.trailing.getter();
    v78 = Edge.Set.init(rawValue:)(0);
    v79 = Edge.Set.init(rawValue:)(v78);
    if (Edge.Set.init(rawValue:)(v79 & v76) != v76)
      v78 = Edge.Set.init(rawValue:)(v78 | v76);
    v80 = Edge.Set.init(rawValue:)(v78);
    v81 = Edge.Set.init(rawValue:)(v80 & v77);
    v82 = (uint64_t)v143;
    if (v81 != v77)
      LOBYTE(v78) = Edge.Set.init(rawValue:)(v78 | v77);
    v83 = EdgeInsets.init(_all:)(10.0);
    v85 = v84;
    v87 = v86;
    v89 = v88;
    v90 = v141;
    sub_10002E23C(v72, v141, &qword_10009C228);
    v91 = v90 + *(int *)(v138 + 36);
    *(_BYTE *)v91 = v78;
    *(double *)(v91 + 8) = v83;
    *(_QWORD *)(v91 + 16) = v85;
    *(_QWORD *)(v91 + 24) = v87;
    *(_QWORD *)(v91 + 32) = v89;
    *(_BYTE *)(v91 + 40) = 0;
    v92 = sub_10002E2B4(v72, &qword_10009C228);
    v93 = static Alignment.center.getter(v92);
    v95 = v94;
    v96 = v82 + *(int *)(v139 + 36);
    v97 = enum case for RoundedCornerStyle.continuous(_:);
    v98 = type metadata accessor for RoundedCornerStyle(0);
    v99 = (uint64_t)v147;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 104))(v147, v97, v98);
    v100 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
    v101 = Color.init(uiColor:)(v100);
    v102 = v148;
    sub_100041CC8(v99, v148, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    v103 = v146;
    *(_QWORD *)(v102 + *(int *)(v146 + 52)) = v101;
    *(_WORD *)(v102 + *(int *)(v103 + 56)) = 256;
    v104 = sub_100045678(v99, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    v105 = static Alignment.center.getter(v104);
    _FrameLayout.init(width:height:alignment:)(&v162, 0, 1, *(_QWORD *)&a2, 0, v105, v106);
    sub_10002E23C(v102, v96, &qword_10009C1E8);
    v107 = (_OWORD *)(v96 + *(int *)(sub_10000A66C(&qword_10009C280) + 36));
    v108 = v163;
    *v107 = v162;
    v107[1] = v108;
    v107[2] = v164;
    sub_10002E2B4(v102, &qword_10009C1E8);
    v109 = (uint64_t *)(v96 + *(int *)(sub_10000A66C(&qword_10009C288) + 36));
    *v109 = v93;
    v109[1] = v95;
    v110 = sub_10004692C(v90, v82, &qword_10009C230);
    v111 = static Edge.Set.leading.getter(v110);
    v112 = static Edge.Set.trailing.getter();
    v113 = Edge.Set.init(rawValue:)(0);
    v114 = Edge.Set.init(rawValue:)(v113);
    if (Edge.Set.init(rawValue:)(v114 & v111) != v111)
      v113 = Edge.Set.init(rawValue:)(v113 | v111);
    v115 = Edge.Set.init(rawValue:)(v113);
    if (Edge.Set.init(rawValue:)(v115 & v112) != v112)
      LOBYTE(v113) = Edge.Set.init(rawValue:)(v113 | v112);
    v116 = EdgeInsets.init(_all:)(6.0);
    v118 = v117;
    v120 = v119;
    v122 = v121;
    v123 = v145;
    sub_10002E23C(v82, v145, &qword_10009C238);
    v124 = v144;
    v125 = v123 + *(int *)(v144 + 36);
    *(_BYTE *)v125 = v113;
    *(double *)(v125 + 8) = v116;
    *(_QWORD *)(v125 + 16) = v118;
    *(_QWORD *)(v125 + 24) = v120;
    *(_QWORD *)(v125 + 32) = v122;
    *(_BYTE *)(v125 + 40) = 0;
    v126 = sub_10002E2B4(v82, &qword_10009C238);
    v127 = v149;
    static AccessibilityTraits.isButton.getter(v126);
    v128 = sub_100042BCC();
    v129 = (uint64_t)v142;
    View.accessibilityAddTraits(_:)(v127, v124, v128);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v127, v151);
    sub_10002E2B4(v123, &qword_10009C240);
    return sub_10004692C(v129, v152, &qword_10009C248);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100041770@<X0>(uint64_t a1@<X8>)
{
  double *v1;

  return sub_100040B4C(a1, *v1);
}

uint64_t sub_10004177C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for StickerPackStrip(0);
  v0 = sub_10000A66C(&qword_10009C118);
  State.wrappedValue.getter(&v3, v0);
  v1 = v4;
  sub_10003AA18(v3, v4);
  return swift_bridgeObjectRelease(v1);
}

uint64_t sub_1000417F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_10000A66C(&qword_10009C118);
  State.wrappedValue.getter(&v3, v0);
  v1 = v4;
  sub_10003AA18(v3, v4);
  return swift_bridgeObjectRelease(v1);
}

uint64_t sub_10004186C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for StickerPackStrip(0);
  sub_10002E23C(v3 + *(int *)(v6 + 20), (uint64_t)v10, &qword_10009C108);
  v7 = v11;
  if (!v11)
    return sub_10002E2B4((uint64_t)v10, &qword_10009C108);
  v8 = v12;
  sub_10000E538(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, a2, a3, v7, v8);
  return sub_10000D4A4(v10);
}

uint64_t sub_10004191C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for StickerPackStrip(0);
  sub_10002E23C(v2 + *(int *)(v5 + 20), (uint64_t)v9, &qword_10009C108);
  v6 = v10;
  if (!v10)
    return sub_10002E2B4((uint64_t)v9, &qword_10009C108);
  v7 = v11;
  sub_10000E538(v9, v10);
  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 32))(v2, a1, a2 & 1, v6, v7);
  return sub_10000D4A4(v9);
}

uint64_t sub_1000419CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v7 = type metadata accessor for StickerPackStrip(0);
  sub_10002E23C(v3 + *(int *)(v7 + 20), (uint64_t)v11, &qword_10009C108);
  v8 = v12;
  if (!v12)
    return sub_10002E2B4((uint64_t)v11, &qword_10009C108);
  v9 = v13;
  sub_10000E538(v11, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 40))(v3, a1, a2, a3 & 1, v8, v9);
  return sub_10000D4A4(v11);
}

uint64_t sub_100041A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_10002E23C(v4 + *(int *)(a4 + 20), (uint64_t)v10, &qword_10009C108);
  v7 = v11;
  if (!v11)
    return sub_10002E2B4((uint64_t)v10, &qword_10009C108);
  v8 = v12;
  sub_10000E538(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(v4, a2, a3, v7, v8);
  return sub_10000D4A4(v10);
}

uint64_t sub_100041B2C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_10002E23C(v3 + *(int *)(a3 + 20), (uint64_t)v9, &qword_10009C108);
  v6 = v10;
  if (!v10)
    return sub_10002E2B4((uint64_t)v9, &qword_10009C108);
  v7 = v11;
  sub_10000E538(v9, v10);
  (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 32))(v3, a1, a2 & 1, v6, v7);
  return sub_10000D4A4(v9);
}

uint64_t sub_100041BD4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  sub_10002E23C(v4 + *(int *)(a4 + 20), (uint64_t)v11, &qword_10009C108);
  v8 = v12;
  if (!v12)
    return sub_10002E2B4((uint64_t)v11, &qword_10009C108);
  v9 = v13;
  sub_10000E538(v11, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 40))(v4, a1, a2, a3 & 1, v8, v9);
  return sub_10000D4A4(v11);
}

unint64_t sub_100041C84()
{
  unint64_t result;

  result = qword_10009C1B8;
  if (!qword_10009C1B8)
  {
    result = swift_getWitnessTable(&unk_100079278, &type metadata for DrillDownTransitionModifier);
    atomic_store(result, (unint64_t *)&qword_10009C1B8);
  }
  return result;
}

uint64_t sub_100041CC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100041D10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100041D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for StickerPackStrip.MemojiPicker(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24);
  return sub_100040790(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
}

uint64_t sub_100041D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v6 = sub_10000A66C(&qword_10009C2C8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = static UnitPoint.leading.getter(v7);
  v12 = v11;
  v13 = sub_10000A66C(&qword_10009C2D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, a1, v13);
  v14 = &v9[*(int *)(v6 + 36)];
  *(double *)v14 = a3;
  *((double *)v14 + 1) = a3 * 0.5 + 0.5;
  *((double *)v14 + 2) = v10;
  *((_QWORD *)v14 + 3) = v12;
  sub_10002E23C((uint64_t)v9, a2, &qword_10009C2C8);
  *(double *)(a2 + *(int *)(sub_10000A66C(&qword_10009C2D8) + 36)) = a3;
  return sub_10002E2B4((uint64_t)v9, &qword_10009C2C8);
}

uint64_t sub_100041E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v5 = sub_10000A66C(&qword_10009C2C8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  v10 = *v2 * 0.5 + 0.5;
  v11 = static UnitPoint.leading.getter(v6);
  v13 = v12;
  v14 = sub_10000A66C(&qword_10009C2D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, a1, v14);
  v15 = &v8[*(int *)(v5 + 36)];
  *(double *)v15 = v9;
  *((double *)v15 + 1) = v10;
  *((double *)v15 + 2) = v11;
  *((_QWORD *)v15 + 3) = v13;
  sub_10002E23C((uint64_t)v8, a2, &qword_10009C2C8);
  *(double *)(a2 + *(int *)(sub_10000A66C(&qword_10009C2D8) + 36)) = v9;
  return sub_10002E2B4((uint64_t)v8, &qword_10009C2C8);
}

uint64_t sub_100041FA4()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_10000A66C(&qword_10009C2E8);
  State.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t sub_100041FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v5[3];

  v5[1] = a2;
  v5[2] = a3;
  v5[0] = a1;
  v3 = sub_10000A66C(&qword_10009C2E8);
  return State.wrappedValue.setter(v5, v3);
}

void (*sub_100042028(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x38uLL);
  *a1 = v6;
  v6[4] = a2;
  v6[5] = a3;
  *v6 = a2;
  v6[1] = a3;
  swift_retain(a3);
  swift_bridgeObjectRetain(a2);
  v7 = sub_10000A66C(&qword_10009C2E8);
  v6[6] = v7;
  State.wrappedValue.getter(v6 + 2, v7);
  return sub_1000420A8;
}

void sub_1000420A8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v2[3] = v3;
  v4 = v2[5];
  v5 = v2[6];
  v6 = v2[4];
  *v2 = v6;
  v2[1] = v4;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(v3);
    State.wrappedValue.setter(v2 + 3, v5);
    swift_bridgeObjectRelease(v6);
    swift_release(v4, v7);
    swift_bridgeObjectRelease(v2[2]);
  }
  else
  {
    State.wrappedValue.setter(v2 + 3, v5);
    swift_bridgeObjectRelease(v6);
    swift_release(v4, v8);
  }
  free(v2);
}

uint64_t sub_100042140()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_10000A66C(&qword_10009C2E8);
  State.projectedValue.getter(&v2, v0);
  return v2;
}

uint64_t sub_100042184@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v23[2];

  v5 = static VerticalAlignment.center.getter(a1);
  v6 = *(uint64_t (**)(__n128))(*a2 + 120);
  v7 = swift_retain(a2);
  v8 = v6(v7);
  swift_release(a2, v9);
  v10 = a2[4];
  v11 = a2[5];
  v23[0] = v10;
  v23[1] = v11;
  v12 = sub_100033158();
  v13 = swift_bridgeObjectRetain(v11);
  v14 = Text.init<A>(_:)(v23, &type metadata for String, v12, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  swift_retain(v8);
  sub_100042A04(v14, v16, v20);
  swift_bridgeObjectRetain(v18);
  sub_100042A14(v14, v16, v20);
  swift_release(v8, v21);
  result = swift_bridgeObjectRelease(v18);
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  *(_QWORD *)(a3 + 24) = v8;
  *(_QWORD *)(a3 + 32) = v14;
  *(_QWORD *)(a3 + 40) = v16;
  *(_BYTE *)(a3 + 48) = v20;
  *(_QWORD *)(a3 + 56) = v18;
  return result;
}

uint64_t sub_100042288(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  v8 = a2(0);
  v9 = sub_10002CA50(a3, a2, a4);
  return ObservedObject.init(wrappedValue:)(a1, v8, v9);
}

uint64_t sub_1000422E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100042184(a1, *(_QWORD **)(v2 + 8), a2);
}

uint64_t sub_1000422F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];

  v6 = type metadata accessor for EditMode(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10000A66C(&qword_10009C2F0);
  __chkstk_darwin(v10);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10000A66C(&qword_10009C2F8);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = a1;
  v28 = a2;
  v17 = sub_10000A66C(&qword_10009C300);
  v18 = sub_10000D720(&qword_10009C308);
  v19 = sub_100042E1C();
  v29[0] = v18;
  v29[1] = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v29, &opaque type descriptor for <<opaque return type of View.onDrag(_:)>>, 1);
  List<>.init(content:)(sub_100042E14, v26, v17, OpaqueTypeConformance2);
  KeyPath = swift_getKeyPath(&unk_100079050);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for EditMode.active(_:), v6);
  static Binding.constant(_:)(v9, v6);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v22 = sub_10000A66C(&qword_10009C340);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v12, 0, 1, v22);
  v23 = (uint64_t *)(a3 + *(int *)(sub_10000A66C(&qword_10009C348) + 36));
  v24 = sub_10000A66C(&qword_10009C350);
  sub_10002E23C((uint64_t)v12, (uint64_t)v23 + *(int *)(v24 + 28), &qword_10009C2F0);
  *v23 = KeyPath;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v14 + 16))(a3, v16, v13);
  sub_10002E2B4((uint64_t)v12, &qword_10009C2F0);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_100042528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, __n128);
  __n128 v21;
  unint64_t v22;
  uint64_t v24;
  _QWORD v25[3];

  v24 = a3;
  v5 = sub_10000A66C(&qword_10009C320);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000A66C(&qword_10009C308);
  __chkstk_darwin(v9);
  v11 = (char *)&v25[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = a1;
  v25[2] = a2;
  v12 = sub_10000A66C(&qword_10009C2E8);
  State.wrappedValue.getter(v25, v12);
  v13 = sub_10000A66C(&qword_10009C2E0);
  v14 = sub_10000F6DC(&qword_10009C6D0, &qword_10009C2E0, (uint64_t)&protocol conformance descriptor for [A]);
  v15 = sub_100042EB8();
  v16 = sub_10002CA50(&qword_10009C6D8, type metadata accessor for StickerPackStripItem, (uint64_t)&unk_100078B20);
  ForEach<>.init(_:content:)(v25, sub_100042754, 0, v13, &type metadata for String, &type metadata for ManageStickerAppsSheet.StickerAppRow, v14, v15, v16);
  v17 = swift_allocObject(&unk_10008C810, 32, 7);
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  v18 = swift_allocObject(&unk_10008C838, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100045534;
  *(_QWORD *)(v18 + 24) = v17;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
  v19 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v19 = sub_100045618;
  *((_QWORD *)v19 + 1) = v18;
  v20 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
  swift_bridgeObjectRetain(a1);
  v21 = swift_retain(a2);
  v20(v8, v5, v21);
  v22 = sub_100042E1C();
  View.onDrag(_:)(sub_1000428A8, 0, v9, v22);
  return sub_10002E2B4((uint64_t)v11, &qword_10009C308);
}

uint64_t sub_100042754@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v3 = *a1;
  v4 = type metadata accessor for StickerPackStripItem(0);
  v5 = sub_10002CA50(&qword_10009C130, type metadata accessor for StickerPackStripItem, (uint64_t)&unk_100078AE8);
  swift_retain(v3);
  result = ObservedObject.init(wrappedValue:)(v6, v4, v5);
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t sub_1000427C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;

  swift_retain(a4);
  swift_bridgeObjectRetain(a3);
  v8 = sub_10000A66C(&qword_10009C2E8);
  State.wrappedValue.getter(&v14, v8);
  v9 = sub_10000A66C(&qword_10009C2E0);
  v10 = sub_10000F6DC(&qword_10009C358, &qword_10009C2E0, (uint64_t)&protocol conformance descriptor for [A]);
  MutableCollection.move(fromOffsets:toOffset:)(a1, a2, v9, v10);
  v13[1] = a3;
  v13[2] = a4;
  v13[0] = v14;
  State.wrappedValue.setter(v13, v8);
  swift_release(a4, v11);
  return swift_bridgeObjectRelease(a3);
}

id sub_1000428A8()
{
  return objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
}

uint64_t sub_1000428CC()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_1000428EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100042978(a1, a2, a3, a4, &qword_10009C2F0, (uint64_t (*)(char *))&EnvironmentValues.editMode.setter);
}

uint64_t sub_100042900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = a1;
  v1 = sub_10000A66C(&qword_10009C2E0);
  State.init(wrappedValue:)(&v4, &v3, v1);
  return v4;
}

uint64_t sub_10004293C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1000422F0(*v1, v1[1], a1);
}

uint64_t sub_100042944()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100042964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100042978(a1, a2, a3, a4, &qword_10009C200, (uint64_t (*)(char *))&EnvironmentValues.textCase.setter);
}

uint64_t sub_100042978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v9 = sub_10000A66C(a5);
  __chkstk_darwin(v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E23C(a1, (uint64_t)v11, a5);
  return a6(v11);
}

uint64_t sub_100042A04(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_100042A14(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1, a2);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_100042A24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100042A4C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

unint64_t sub_100042A74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C258;
  if (!qword_10009C258)
  {
    v1 = sub_10000D720(&qword_10009C210);
    sub_100042AF8();
    sub_10000F6DC((unint64_t *)&unk_10009D560, &qword_10009C270, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C258);
  }
  return result;
}

unint64_t sub_100042AF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C260;
  if (!qword_10009C260)
  {
    v1 = sub_10000D720(&qword_10009C208);
    sub_10000F6DC(&qword_10009C268, &qword_10009C1F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C260);
  }
  return result;
}

uint64_t sub_100042B7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100042BA4(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_100042BCC()
{
  return sub_100042C94(&qword_10009C290, &qword_10009C240, (void (*)(void))sub_100042BF0);
}

unint64_t sub_100042BF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C298;
  if (!qword_10009C298)
  {
    v1 = sub_10000D720(&qword_10009C238);
    sub_100042C94(&qword_10009C2A0, &qword_10009C230, (void (*)(void))sub_100042CFC);
    sub_10000F6DC(&qword_10009C2C0, &qword_10009C288, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C298);
  }
  return result;
}

uint64_t sub_100042C94(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10000D720(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100042CFC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  result = qword_10009C2A8;
  if (!qword_10009C2A8)
  {
    v1 = sub_10000D720(&qword_10009C228);
    v2 = sub_10000D720(&qword_10009C218);
    v4 = sub_10000D720(&qword_10009C210);
    v5 = sub_10000D720(&qword_10009C1F0);
    v6 = sub_100042A74();
    v7 = sub_10000F6DC(&qword_10009C278, &qword_10009C1F0, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_10000F6DC(&qword_10009C2B0, &qword_10009C2B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C2A8);
  }
  return result;
}

uint64_t sub_100042E14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100042528(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_100042E1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C310;
  if (!qword_10009C310)
  {
    v1 = sub_10000D720(&qword_10009C308);
    sub_1000464C4(&qword_10009C318, &qword_10009C320, (void (*)(void))sub_100042EB8);
    sub_10000F6DC(&qword_10009C330, &qword_10009C338, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C310);
  }
  return result;
}

unint64_t sub_100042EB8()
{
  unint64_t result;

  result = qword_10009C328;
  if (!qword_10009C328)
  {
    result = swift_getWitnessTable(&unk_1000792C8, &type metadata for ManageStickerAppsSheet.StickerAppRow);
    atomic_store(result, (unint64_t *)&qword_10009C328);
  }
  return result;
}

uint64_t sub_100042EFC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100082858, 1);
}

uint64_t sub_100042F0C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100082880, 1);
}

uint64_t sub_100042F40(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000828B4, 1);
}

uint64_t sub_100042F50(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000828DC, 1);
}

uint64_t sub_100042F60(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100082830, 1);
}

uint64_t sub_100042F70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100082904, 1);
}

uint64_t sub_100042F80(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10008292C, 1);
}

uint64_t sub_100042F90(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100082954, 1);
}

uint64_t sub_100042FA0()
{
  return type metadata accessor for StickerPackStripViewModel(0);
}

void sub_100042FA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1000454C4(319, &qword_10009C388, (uint64_t)&type metadata for String, (uint64_t (*)(_QWORD, uint64_t))&type metadata accessor for Published);
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(v2 - 8) + 64;
    sub_1000454C4(319, (unint64_t *)&unk_10009C390, (uint64_t)&type metadata for Bool, (uint64_t (*)(_QWORD, uint64_t))&type metadata accessor for Published);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = v7;
      swift_updateClassMetadata2(a1, 256, 4, &v6, a1 + 80);
    }
  }
}

_QWORD *sub_100043064(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_10000A66C(&qword_10009C100);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)((char *)a2 + v14 + 24);
    if (v17)
    {
      v18 = *((_QWORD *)v16 + 4);
      *((_QWORD *)v15 + 3) = v17;
      *((_QWORD *)v15 + 4) = v18;
      (**(void (***)(void))(v17 - 8))();
    }
    else
    {
      v19 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v19;
      *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
    }
    v20 = a3[6];
    v21 = a3[7];
    v22 = (_QWORD *)((char *)a1 + v20);
    v23 = (_QWORD *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)((char *)a1 + v21);
    v26 = (_QWORD *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = v26[2];
    v25[2] = v28;
    v29 = a3[8];
    v30 = a3[9];
    v31 = (char *)a1 + v29;
    v32 = (char *)a2 + v29;
    *v31 = *v32;
    v33 = *((_QWORD *)v32 + 1);
    *((_QWORD *)v31 + 1) = v33;
    v34 = (char *)a1 + v30;
    v35 = *(_QWORD *)((char *)a2 + v30);
    v36 = *(_QWORD *)((char *)a2 + v30 + 8);
    v37 = *((_BYTE *)a2 + v30 + 16);
    swift_retain(v24);
    swift_bridgeObjectRetain(v27);
    swift_retain(v28);
    swift_retain(v33);
    sub_10003E2D0(v35, v36);
    *(_QWORD *)v34 = v35;
    *((_QWORD *)v34 + 1) = v36;
    v34[16] = v37;
    v38 = a3[10];
    v39 = a3[11];
    v40 = (_QWORD *)((char *)a1 + v38);
    v41 = (_QWORD *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    *(_OWORD *)((char *)a1 + v39) = *(_OWORD *)((char *)a2 + v39);
    *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
    swift_bridgeObjectRetain(v42);
  }
  return a1;
}

uint64_t sub_10004323C(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_10000A66C(&qword_10009C100);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  else
  {
    swift_release(*a1, v5);
  }
  v8 = (_QWORD *)((char *)a1 + a2[5]);
  if (v8[3])
    sub_10000D4A4(v8);
  swift_release(*(_QWORD *)((char *)a1 + a2[6] + 8), v7);
  v9 = (char *)a1 + a2[7];
  swift_bridgeObjectRelease(*((_QWORD *)v9 + 1));
  swift_release(*((_QWORD *)v9 + 2), v10);
  swift_release(*(_QWORD *)((char *)a1 + a2[8] + 8), v11);
  sub_10003B6BC(*(_QWORD *)((char *)a1 + a2[9]), *(_QWORD *)((char *)a1 + a2[9] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[10] + 8));
}

_QWORD *sub_100043318(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;

  v6 = sub_10000A66C(&qword_10009C100);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)((char *)a2 + v12 + 24);
  if (v15)
  {
    v16 = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 3) = v15;
    *((_QWORD *)v13 + 4) = v16;
    (**(void (***)(void))(v15 - 8))();
  }
  else
  {
    v17 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v17;
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  }
  v18 = a3[6];
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v18);
  v21 = (_QWORD *)((char *)a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)((char *)a1 + v19);
  v24 = (_QWORD *)((char *)a2 + v19);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = v24[2];
  v23[2] = v26;
  v27 = a3[8];
  v28 = a3[9];
  v29 = (char *)a1 + v27;
  v30 = (char *)a2 + v27;
  *v29 = *v30;
  v31 = *((_QWORD *)v30 + 1);
  *((_QWORD *)v29 + 1) = v31;
  v32 = (char *)a1 + v28;
  v33 = *(_QWORD *)((char *)a2 + v28);
  v34 = *(_QWORD *)((char *)a2 + v28 + 8);
  v35 = *((_BYTE *)a2 + v28 + 16);
  swift_retain(v22);
  swift_bridgeObjectRetain(v25);
  swift_retain(v26);
  swift_retain(v31);
  sub_10003E2D0(v33, v34);
  *(_QWORD *)v32 = v33;
  *((_QWORD *)v32 + 1) = v34;
  v32[16] = v35;
  v36 = a3[10];
  v37 = a3[11];
  v38 = (_QWORD *)((char *)a1 + v36);
  v39 = (_QWORD *)((char *)a2 + v36);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  *(_OWORD *)((char *)a1 + v37) = *(_OWORD *)((char *)a2 + v37);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain(v40);
  return a1;
}

uint64_t *sub_1000434C4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;

  if (a1 != a2)
  {
    sub_10002E2B4((uint64_t)a1, &qword_10009C100);
    v6 = sub_10000A66C(&qword_10009C100);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(uint64_t *)((char *)a2 + v12 + 24);
  if (!*(uint64_t *)((char *)a1 + v12 + 24))
  {
    if (v15)
    {
      *((_QWORD *)v13 + 3) = v15;
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      (**(void (***)(char *, char *))(v15 - 8))(v13, v14);
      goto LABEL_13;
    }
LABEL_12:
    v16 = *(_OWORD *)v14;
    v17 = *((_OWORD *)v14 + 1);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *(_OWORD *)v13 = v16;
    *((_OWORD *)v13 + 1) = v17;
    goto LABEL_13;
  }
  if (!v15)
  {
    sub_10000D4A4(v13);
    goto LABEL_12;
  }
  sub_10000E8AC(v13, v14);
LABEL_13:
  v18 = a3[6];
  v19 = (uint64_t *)((char *)a1 + v18);
  v20 = (uint64_t *)((char *)a2 + v18);
  *v19 = *v20;
  v21 = v20[1];
  v22 = v19[1];
  v19[1] = v21;
  swift_retain(v21);
  swift_release(v22, v23);
  v24 = a3[7];
  v25 = (uint64_t *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  *v25 = *(uint64_t *)((char *)a2 + v24);
  v27 = *(uint64_t *)((char *)a2 + v24 + 8);
  v28 = *(uint64_t *)((char *)a1 + v24 + 8);
  v25[1] = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  v29 = v25[2];
  v30 = *((_QWORD *)v26 + 2);
  v25[2] = v30;
  swift_retain(v30);
  swift_release(v29, v31);
  v32 = a3[8];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  *v33 = *v34;
  v35 = *((_QWORD *)v33 + 1);
  v36 = *((_QWORD *)v34 + 1);
  *((_QWORD *)v33 + 1) = v36;
  swift_retain(v36);
  swift_release(v35, v37);
  v38 = a3[9];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = *(_QWORD *)v40;
  v42 = *((_QWORD *)v40 + 1);
  LOBYTE(v26) = v40[16];
  sub_10003E2D0(*(_QWORD *)v40, v42);
  v43 = *(_QWORD *)v39;
  v44 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v39 = v41;
  *((_QWORD *)v39 + 1) = v42;
  v39[16] = (char)v26;
  sub_10003B6BC(v43, v44);
  v45 = a3[10];
  v46 = (uint64_t *)((char *)a1 + v45);
  v47 = (uint64_t *)((char *)a2 + v45);
  *v46 = *v47;
  v48 = v47[1];
  v49 = v46[1];
  v46[1] = v48;
  swift_bridgeObjectRetain(v48);
  swift_bridgeObjectRelease(v49);
  v50 = a3[11];
  v51 = (uint64_t *)((char *)a1 + v50);
  v52 = (uint64_t *)((char *)a2 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  v53 = a3[12];
  v54 = (uint64_t *)((char *)a1 + v53);
  v55 = (uint64_t *)((char *)a2 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  return a1;
}

char *sub_100043730(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;

  v6 = sub_10000A66C(&qword_10009C100);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v13 = a3[7];
  v14 = a3[8];
  v15 = &a1[v13];
  v16 = &a2[v13];
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  v17 = a3[9];
  v18 = a3[10];
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = *(_OWORD *)v20;
  v19[16] = v20[16];
  *(_OWORD *)v19 = v21;
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  v22 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v22] = *(_OWORD *)&a2[v22];
  return a1;
}

char *sub_10004384C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  if (a1 != a2)
  {
    sub_10002E2B4((uint64_t)a1, &qword_10009C100);
    v6 = sub_10000A66C(&qword_10009C100);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  if (*(_QWORD *)&a1[v8 + 24])
    sub_10000D4A4(&a1[v8]);
  v10 = *(_OWORD *)&a2[v8 + 16];
  *(_OWORD *)v9 = *(_OWORD *)&a2[v8];
  *((_OWORD *)v9 + 1) = v10;
  *((_QWORD *)v9 + 4) = *(_QWORD *)&a2[v8 + 32];
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  v16 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_release(v16, a2);
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(_QWORD *)&a2[v17 + 8];
  v21 = *(_QWORD *)&a1[v17 + 8];
  *(_QWORD *)v18 = *(_QWORD *)&a2[v17];
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease(v21);
  v22 = *((_QWORD *)v18 + 2);
  *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
  swift_release(v22, v23);
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *v25 = *v26;
  v27 = *((_QWORD *)v25 + 1);
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_release(v27, v28);
  v29 = a3[9];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = v31[16];
  v33 = *(_QWORD *)v30;
  v34 = *((_QWORD *)v30 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v30[16] = v32;
  sub_10003B6BC(v33, v34);
  v35 = a3[10];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v39 = *(_QWORD *)v37;
  v38 = *((_QWORD *)v37 + 1);
  v40 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v36 = v39;
  *((_QWORD *)v36 + 1) = v38;
  swift_bridgeObjectRelease(v40);
  v41 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v41] = *(_OWORD *)&a2[v41];
  return a1;
}

uint64_t sub_1000439F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100043A04);
}

uint64_t sub_100043A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10000A66C(&qword_10009C500);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100043A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100043A94);
}

uint64_t sub_100043A94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10000A66C(&qword_10009C500);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_100043B14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  sub_10004463C(319, (unint64_t *)&unk_10009C560, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "(";
    v4[2] = &unk_1000793E0;
    v4[3] = &unk_1000793F8;
    v4[4] = &unk_100079410;
    v4[5] = &unk_100079428;
    v4[6] = &unk_1000793E0;
    v4[7] = &unk_100079440;
    v4[8] = &unk_100079440;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
  }
}

uint64_t destroy for StickerPackStrip.IconView(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 8), a2);
}

uint64_t _s22StickersUltraExtension16StickerPackStripV8IconViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for StickerPackStrip.IconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5, v6);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for StickerPackStrip.IconView(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for StickerPackStrip.IconView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5, a2);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerPackStrip.IconView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerPackStrip.IconView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerPackStrip.IconView()
{
  return &type metadata for StickerPackStrip.IconView;
}

uint64_t sub_100043D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_100043D50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_10004463C(319, &qword_10009C5B8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for GeometryProxy(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "(";
      v6[3] = (char *)&value witness table for () + 64;
      v6[4] = &unk_1000793E0;
      swift_initStructMetadata(a1, 0, 5, v6, a1 + 32);
    }
  }
}

uint64_t *sub_100043E04(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_10000A66C(&qword_10009C128);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[9];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for GeometryProxy(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[10];
    v19 = *(_OWORD *)((char *)a2 + v18 + 24);
    *(_OWORD *)((char *)a1 + v18 + 24) = v19;
    (**(void (***)(void))(v19 - 8))();
    v20 = a3[11];
    v21 = a3[12];
    v22 = (uint64_t *)((char *)a1 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (uint64_t *)((char *)a1 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_retain(v24);
    swift_bridgeObjectRetain(v27);
  }
  return a1;
}

uint64_t sub_100043F58(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_10000A66C(&qword_10009C128);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v6 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  else
  {
    swift_release(*a1, v5);
  }
  v7 = (char *)a1 + a2[9];
  v8 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  sub_10000D4A4((_QWORD *)((char *)a1 + a2[10]));
  swift_release(*(_QWORD *)((char *)a1 + a2[11] + 8), v9);
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[12] + 8));
}

uint64_t *sub_100044014(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = sub_10000A66C(&qword_10009C128);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[9];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[10];
  v17 = *(_OWORD *)((char *)a2 + v16 + 24);
  *(_OWORD *)((char *)a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  v18 = a3[11];
  v19 = a3[12];
  v20 = (uint64_t *)((char *)a1 + v18);
  v21 = (uint64_t *)((char *)a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (uint64_t *)((char *)a1 + v19);
  v24 = (uint64_t *)((char *)a2 + v19);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain(v22);
  swift_bridgeObjectRetain(v25);
  return a1;
}

uint64_t *sub_10004413C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 != a2)
  {
    sub_10002E2B4((uint64_t)a1, &qword_10009C128);
    v6 = sub_10000A66C(&qword_10009C128);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[9];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  sub_10000E8AC((uint64_t *)((char *)a1 + a3[10]), (uint64_t *)((char *)a2 + a3[10]));
  v16 = a3[11];
  v17 = (uint64_t *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = v18[1];
  v20 = v17[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain(v19);
  swift_release(v20, v21);
  v22 = a3[12];
  v23 = (uint64_t *)((char *)a1 + v22);
  v24 = (uint64_t *)((char *)a2 + v22);
  *v23 = *v24;
  v25 = v24[1];
  v26 = v23[1];
  v23[1] = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  return a1;
}

char *sub_100044288(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;

  v6 = sub_10000A66C(&qword_10009C128);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[9];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[10];
  v13 = a3[11];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = *(_OWORD *)v15;
  v17 = *((_OWORD *)v15 + 1);
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  *(_OWORD *)v14 = v16;
  *((_OWORD *)v14 + 1) = v17;
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  return a1;
}

char *sub_100044388(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_10002E2B4((uint64_t)a1, &qword_10009C128);
    v6 = sub_10000A66C(&qword_10009C128);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[9];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[10];
  v13 = &a1[v12];
  v14 = &a2[v12];
  sub_10000D4A4(&a1[v12]);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  v16 = a3[11];
  v17 = *(_QWORD *)&a1[v16 + 8];
  *(_OWORD *)&a1[v16] = *(_OWORD *)&a2[v16];
  swift_release(v17, v18);
  v19 = a3[12];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease(v24);
  return a1;
}

uint64_t sub_1000444C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000444D4);
}

uint64_t sub_1000444D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_10000A66C(&qword_10009C5B0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for GeometryProxy(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 40) + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100044584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100044590);
}

uint64_t sub_100044590(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_10000A66C(&qword_10009C5B0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for GeometryProxy(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 40) + 24) = (a2 - 1);
  return result;
}

void sub_10004463C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Environment.Content(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_100044688(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v27 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for GeometryProxy(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)(v4 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (_OWORD *)(v4 + v13);
    v18 = (_OWORD *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[8];
    v21 = a3[9];
    v22 = v4 + v20;
    v23 = (uint64_t)a2 + v20;
    *(_BYTE *)v22 = *(_BYTE *)v23;
    v24 = *(_QWORD *)(v23 + 8);
    *(_QWORD *)(v22 + 8) = v24;
    v25 = v4 + v21;
    v26 = (uint64_t)a2 + v21;
    *(_BYTE *)v25 = *(_BYTE *)v26;
    v27 = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 8) = v27;
    swift_bridgeObjectRetain(v16);
    swift_retain(v24);
  }
  swift_retain(v27);
  return v4;
}

uint64_t sub_1000447A0(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_10000D4A4(a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[6] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[8] + 8), v6);
  return swift_release(*(_QWORD *)((char *)a1 + a2[9] + 8), v7);
}

uint64_t sub_10004481C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (_OWORD *)(a1 + v12);
  v17 = (_OWORD *)(a2 + v12);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[8];
  v20 = a3[9];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v23 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 8) = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v26 = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 8) = v26;
  swift_bridgeObjectRetain(v15);
  swift_retain(v23);
  swift_retain(v26);
  return a1;
}

_QWORD *sub_100044904(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_10000E8AC(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v13 = v12[1];
  v14 = v11[1];
  v11[1] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  v16[2] = v17[2];
  v16[3] = v17[3];
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *v19 = *v20;
  v21 = *((_QWORD *)v19 + 1);
  v22 = *((_QWORD *)v20 + 1);
  *((_QWORD *)v19 + 1) = v22;
  swift_retain(v22);
  swift_release(v21, v23);
  v24 = a3[9];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *v25 = *v26;
  v27 = *((_QWORD *)v25 + 1);
  v28 = *((_QWORD *)v26 + 1);
  *((_QWORD *)v25 + 1) = v28;
  swift_retain(v28);
  swift_release(v27, v29);
  return a1;
}

uint64_t sub_100044A1C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  return a1;
}

uint64_t sub_100044AC0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_10000D4A4((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = a3[8];
  v19 = (_OWORD *)(a1 + v17);
  v20 = (_OWORD *)(a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a1 + v18;
  v23 = a2 + v18;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v24 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  swift_release(v24, v25);
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_BYTE *)v27 = *(_BYTE *)v28;
  v29 = *(_QWORD *)(v27 + 8);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  swift_release(v29, v30);
  return a1;
}

uint64_t sub_100044BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100044BB8);
}

uint64_t sub_100044BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GeometryProxy(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_100044C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100044C40);
}

uint64_t sub_100044C40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GeometryProxy(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100044CB4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  result = type metadata accessor for GeometryProxy(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100079410;
    v4[3] = " ";
    v4[4] = &unk_100079410;
    v4[5] = &unk_100079410;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerPackStrip.EditButton()
{
  return &type metadata for StickerPackStrip.EditButton;
}

ValueMetadata *type metadata accessor for DrillDownTransitionModifier()
{
  return &type metadata for DrillDownTransitionModifier;
}

uint64_t destroy for ManageStickerAppsSheet(_QWORD *a1)
{
  uint64_t v2;

  swift_bridgeObjectRelease(*a1);
  return swift_release(a1[1], v2);
}

uint64_t *_s22StickersUltraExtension22ManageStickerAppsSheetVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for ManageStickerAppsSheet(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a1[1];
  v7 = a2[1];
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v6, v8);
  return a1;
}

_QWORD *assignWithTake for ManageStickerAppsSheet(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManageStickerAppsSheet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManageStickerAppsSheet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManageStickerAppsSheet()
{
  return &type metadata for ManageStickerAppsSheet;
}

_QWORD *initializeBufferWithCopyOfBuffer for ManageStickerAppsSheet.StickerAppRow(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for ManageStickerAppsSheet.StickerAppRow(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_retain(v3);
  swift_release(v4, v5);
  return a1;
}

_QWORD *assignWithTake for ManageStickerAppsSheet.StickerAppRow(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release(v4, a2);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManageStickerAppsSheet.StickerAppRow(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManageStickerAppsSheet.StickerAppRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManageStickerAppsSheet.StickerAppRow()
{
  return &type metadata for ManageStickerAppsSheet.StickerAppRow;
}

unint64_t sub_100045020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C650;
  if (!qword_10009C650)
  {
    v1 = sub_10000D720(&qword_10009C658);
    sub_10000F6DC(&qword_10009C660, &qword_10009C668, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C650);
  }
  return result;
}

uint64_t sub_1000450A4()
{
  return sub_1000452BC(&qword_10009C670, &qword_10009C150, (void (*)(void))sub_10003FA58);
}

uint64_t sub_1000450D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_10000D720(&qword_10009C1A8);
  v1 = type metadata accessor for VStack(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v0, v1, 0, 0);
  v3 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v3);
  v4 = type metadata accessor for HStack(255, v3);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _FrameLayout);
  v6 = sub_10000D720(&qword_10009C1B0);
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v4);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  sub_10000F6DC(&qword_10009C1C0, &qword_10009C1B0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
}

unint64_t sub_10004520C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C678;
  if (!qword_10009C678)
  {
    v1 = sub_10000D720(&qword_10009C1E0);
    sub_10000F6DC(&qword_10009C680, &qword_10009C1D0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C678);
  }
  return result;
}

uint64_t sub_100045290()
{
  return sub_1000452BC(&qword_10009C688, &qword_10009C248, (void (*)(void))sub_100042BCC);
}

uint64_t sub_1000452BC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10000D720(a2);
    a3();
    sub_10002CA50(&qword_10009C178, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100045340()
{
  return sub_100042C94(&qword_10009C690, &qword_10009C2D8, (void (*)(void))sub_100045374);
}

unint64_t sub_100045374()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C698;
  if (!qword_10009C698)
  {
    v1 = sub_10000D720(&qword_10009C2C8);
    sub_10000F6DC(&qword_10009C6A0, &qword_10009C2D0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C698);
  }
  return result;
}

uint64_t sub_1000453F8()
{
  return sub_10000F6DC(&qword_10009C6A8, &qword_10009C6B0, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

unint64_t sub_100045428()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C6B8;
  if (!qword_10009C6B8)
  {
    v1 = sub_10000D720(&qword_10009C348);
    sub_10000F6DC(&qword_10009C6C0, &qword_10009C2F8, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_10000F6DC(&qword_10009C6C8, &qword_10009C350, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C6B8);
  }
  return result;
}

void sub_1000454C4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_100045508()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24), v1);
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100045534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;

  v6 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  v7 = sub_10000A66C(&qword_10009C2E8);
  State.wrappedValue.getter(&v13, v7);
  v8 = sub_10000A66C(&qword_10009C2E0);
  v9 = sub_10000F6DC(&qword_10009C358, &qword_10009C2E0, (uint64_t)&protocol conformance descriptor for [A]);
  MutableCollection.move(fromOffsets:toOffset:)(a1, a2, v8, v9);
  v12[1] = v6;
  v12[2] = v5;
  v12[0] = v13;
  State.wrappedValue.setter(v12, v7);
  swift_bridgeObjectRelease(v6);
  return swift_release(v5, v10);
}

uint64_t sub_100045618(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 16))(a1, *a2);
}

_QWORD *sub_10004563C(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_100045678(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000456B8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for StickerPackStrip.MemojiPicker(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  sub_10000D4A4((_QWORD *)(v0 + v4));
  v8 = v7 + v1[5];
  v9 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[6] + 8));
  swift_release(*(_QWORD *)(v7 + v1[8] + 8), v10);
  swift_release(*(_QWORD *)(v7 + v1[9] + 8), v11);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100045774()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StickerPackStrip.MemojiPicker(0) - 8) + 80);
  return sub_100040458(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_1000457A0()
{
  unint64_t result;

  result = qword_10009C6F8;
  if (!qword_10009C6F8)
  {
    result = swift_getWitnessTable(&unk_10007A408, &type metadata for StickerPackStripDrillDownSymbolView);
    atomic_store(result, (unint64_t *)&qword_10009C6F8);
  }
  return result;
}

uint64_t sub_1000457E8()
{
  return sub_10004661C(type metadata accessor for StickerPackStrip.MemojiPicker, 0);
}

uint64_t sub_1000457F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = (int *)type metadata accessor for StickerPackStrip.DrillDownContainer(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = (_QWORD *)(v4 + v8);
  v11 = sub_10000A66C(&qword_10009C128);
  if (swift_getEnumCaseMultiPayload(v4 + v8, v11) == 1)
  {
    v13 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v4 + v8, v13);
  }
  else
  {
    swift_release(*v10, v12);
  }
  v14 = v8 + v9;
  v15 = (char *)v10 + v5[9];
  v16 = type metadata accessor for GeometryProxy(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  sub_10000D4A4((_QWORD *)((char *)v10 + v5[10]));
  swift_release(*(_QWORD *)((char *)v10 + v5[11] + 8), v17);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v5[12] + 8));
  return swift_deallocObject(v4, v14, v7 | 7);
}

uint64_t sub_1000458F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for StickerPackStrip.DrillDownContainer(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_10003F778();
}

uint64_t sub_100045944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = v4[2];
  v6 = v4[3];
  v7 = v4[4];
  v8 = (_QWORD *)(v7 + *(int *)(type metadata accessor for StickerPackStrip.DrillDownContainer(0, v5, v6, a4) + 40));
  v9 = v8[3];
  v10 = v8[4];
  sub_10000E538(v8, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(1, v9, v10);
}

uint64_t sub_1000459A8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v1 = (int *)type metadata accessor for StickerPackStrip(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  v10 = (_QWORD *)(v0 + v4);
  v11 = sub_10000A66C(&qword_10009C100);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v11) == 1)
  {
    v13 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v0 + v4, v13);
  }
  else
  {
    swift_release(*v10, v12);
  }
  v15 = (_QWORD *)((char *)v10 + v1[5]);
  if (v15[3])
    sub_10000D4A4(v15);
  v16 = v3 | v8 | 7;
  v17 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + v8 + 8) & ~v8;
  v19 = v18 + v9;
  swift_release(*(_QWORD *)((char *)v10 + v1[6] + 8), v14);
  v20 = (char *)v10 + v1[7];
  swift_bridgeObjectRelease(*((_QWORD *)v20 + 1));
  swift_release(*((_QWORD *)v20 + 2), v21);
  swift_release(*(_QWORD *)((char *)v10 + v1[8] + 8), v22);
  sub_10003B6BC(*(_QWORD *)((char *)v10 + v1[9]), *(_QWORD *)((char *)v10 + v1[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v1[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v17));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v18, v6);
  return swift_deallocObject(v0, v19, v16);
}

uint64_t sub_100045B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for StickerPackStrip(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8) + 80);
  return sub_10003B728(a1, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), v2 + ((v7 + v8 + 8) & ~v8), a2);
}

uint64_t sub_100045BB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10003BBA0(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

unint64_t sub_100045BC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C758;
  if (!qword_10009C758)
  {
    v1 = sub_10000D720(&qword_10009C748);
    sub_10000F6DC(&qword_10009C760, &qword_10009C768, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C758);
  }
  return result;
}

uint64_t sub_100045C48()
{
  return sub_100045F50((uint64_t (*)(unint64_t, unint64_t))sub_10003DFD4);
}

uint64_t sub_100045C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v1 = type metadata accessor for ScrollViewProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (int *)type metadata accessor for StickerPackStrip(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v11 = (_QWORD *)(v0 + v9);
  v12 = sub_10000A66C(&qword_10009C100);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v12) == 1)
  {
    v14 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v0 + v9, v14);
  }
  else
  {
    swift_release(*v11, v13);
  }
  v16 = (_QWORD *)((char *)v11 + v6[5]);
  if (v16[3])
    sub_10000D4A4(v16);
  v17 = v3 | v8 | 7;
  v18 = v9 + v10;
  swift_release(*(_QWORD *)((char *)v11 + v6[6] + 8), v15);
  v19 = (char *)v11 + v6[7];
  swift_bridgeObjectRelease(*((_QWORD *)v19 + 1));
  swift_release(*((_QWORD *)v19 + 2), v20);
  swift_release(*(_QWORD *)((char *)v11 + v6[8] + 8), v21);
  sub_10003B6BC(*(_QWORD *)((char *)v11 + v6[9]), *(_QWORD *)((char *)v11 + v6[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v11 + v6[10] + 8));
  return swift_deallocObject(v0, v18, v17);
}

uint64_t sub_100045DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(__n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(__n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(__n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];

  v1 = v0;
  v2 = *(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for StickerPackStrip(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v1 + ((v3 + v4 + v6) & ~v6);
  v8 = *(_QWORD *)(v7 + *(int *)(v5 + 24) + 8);
  v9 = *(uint64_t (**)(__n128))(*(_QWORD *)v8 + 112);
  v10 = swift_retain(v8);
  v11 = v9(v10);
  v13 = v12;
  swift_release(v8, v12);
  v26[0] = v11;
  v26[1] = v13;
  v14 = *(uint64_t (**)(__n128))(*(_QWORD *)v8 + 304);
  v15 = swift_retain(v8);
  LOBYTE(v14) = v14(v15);
  swift_release(v8, v16);
  if ((v14 & 1) != 0)
  {
    v17 = 11;
  }
  else
  {
    v18 = *(uint64_t (**)(__n128))(*(_QWORD *)v8 + 312);
    v19 = swift_retain(v8);
    LOBYTE(v18) = v18(v19);
    swift_release(v8, v20);
    if ((v18 & 1) == 0)
    {
      v23 = 0;
      v24 = 0;
      v21 = 1;
      goto LABEL_7;
    }
    v17 = 12;
  }
  v21 = 0;
  v22 = (uint64_t *)(v7 + *(int *)(v5 + 4 * v17));
  v23 = *v22;
  v24 = v22[1];
LABEL_7:
  ScrollViewProxy.scrollTo<A>(_:anchor:)(v26, v23, v24, v21, &type metadata for String, &protocol witness table for String);
  return swift_bridgeObjectRelease(v13);
}

uint64_t sub_100045F04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StickerPackStrip(0) - 8) + 80);
  return sub_10003DD88(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_100045F44()
{
  return sub_100045F50((uint64_t (*)(unint64_t, unint64_t))sub_10003DF38);
}

uint64_t sub_100045F50(uint64_t (*a1)(unint64_t, unint64_t))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StickerPackStrip(0) - 8) + 80);
  return a1(v1 + v3, v1 + ((v3 + v4 + v5) & ~v5));
}

uint64_t sub_100045FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(__n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(__n128);
  __n128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v1 = *(_QWORD *)(v0 + 24);
  v2 = type metadata accessor for StickerPackStrip(0);
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 24) + 8);
  v4 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 112);
  v5 = swift_retain(v3);
  v6 = v4(v5);
  v8 = v7;
  swift_release(v3, v7);
  v22[0] = v6;
  v22[1] = v8;
  v9 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 304);
  v10 = swift_retain(v3);
  LOBYTE(v6) = v9(v10);
  swift_release(v3, v11);
  if ((v6 & 1) != 0)
  {
    v12 = 11;
  }
  else
  {
    v13 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 312);
    v14 = swift_retain(v3);
    v15 = v13(v14);
    swift_release(v3, v16);
    if ((v15 & 1) == 0)
    {
      v19 = 0;
      v20 = 0;
      v17 = 1;
      goto LABEL_7;
    }
    v12 = 12;
  }
  v17 = 0;
  v18 = (uint64_t *)(v1 + *(int *)(v2 + 4 * v12));
  v19 = *v18;
  v20 = v18[1];
LABEL_7:
  ScrollViewProxy.scrollTo<A>(_:anchor:)(v22, v19, v20, v17, &type metadata for String, &protocol witness table for String);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_1000460E0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (int *)type metadata accessor for StickerPackStrip(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10000A66C(&qword_10009C100);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
  }
  else
  {
    swift_release(*v6, v8);
  }
  v11 = (_QWORD *)((char *)v6 + v1[5]);
  if (v11[3])
    sub_10000D4A4(v11);
  v12 = v4 + v5;
  swift_release(*(_QWORD *)((char *)v6 + v1[6] + 8), v10);
  v13 = (char *)v6 + v1[7];
  swift_bridgeObjectRelease(*((_QWORD *)v13 + 1));
  swift_release(*((_QWORD *)v13 + 2), v14);
  swift_release(*(_QWORD *)((char *)v6 + v1[8] + 8), v15);
  sub_10003B6BC(*(_QWORD *)((char *)v6 + v1[9]), *(_QWORD *)((char *)v6 + v1[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[10] + 8));
  return swift_deallocObject(v0, v12, v3 | 7);
}

uint64_t sub_1000461F8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(__n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  char v20;

  v1 = (int *)type metadata accessor for StickerPackStrip(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (char *)(v3 + v1[8]);
  v5 = *v4;
  v6 = *((_QWORD *)v4 + 1);
  LOBYTE(v17[0]) = v5;
  v17[1] = v6;
  v20 = 0;
  v7 = sub_10000A66C(&qword_10009C1C8);
  State.wrappedValue.setter(&v20, v7);
  sub_10002E23C(v3 + v1[5], (uint64_t)v17, &qword_10009C108);
  v8 = v18;
  if (!v18)
    return sub_10002E2B4((uint64_t)v17, &qword_10009C108);
  v9 = v19;
  sub_10000E538(v17, v18);
  v10 = *(_QWORD *)(v3 + v1[6] + 8);
  v11 = *(uint64_t (**)(__n128))(*(_QWORD *)v10 + 112);
  v12 = swift_retain(v10);
  v13 = v11(v12);
  v15 = v14;
  swift_release(v10, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(v3, v13, v15, v8, v9);
  swift_bridgeObjectRelease(v15);
  return sub_10000D4A4(v17);
}

uint64_t sub_100046334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v3 = type metadata accessor for StickerPackStrip(0);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  sub_10002E23C(v5 + *(int *)(v3 + 20), (uint64_t)v9, &qword_10009C108);
  v6 = v10;
  if (!v10)
    return sub_10002E2B4((uint64_t)v9, &qword_10009C108);
  v7 = v11;
  sub_10000E538(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, a1, v6, v7);
  return sub_10000D4A4(v9);
}

uint64_t sub_1000463E8()
{
  uint64_t v0;

  return sub_10003C540(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1000463F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10009C7B0;
  if (!qword_10009C7B0)
  {
    v1 = sub_10000D720(&qword_10009C7A8);
    v2[0] = &type metadata for StickerPackStripSymbolView;
    v2[1] = sub_100046474();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C7B0);
  }
  return result;
}

unint64_t sub_100046474()
{
  unint64_t result;

  result = qword_10009C7B8;
  if (!qword_10009C7B8)
  {
    result = swift_getWitnessTable(&unk_10007A3B8, &type metadata for StickerPackStripSymbolView);
    atomic_store(result, (unint64_t *)&qword_10009C7B8);
  }
  return result;
}

uint64_t sub_1000464B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10003C8B8(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1000464C4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10000D720(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100046528()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10009C7D0;
  if (!qword_10009C7D0)
  {
    v1 = sub_10000D720(&qword_10009C7D8);
    sub_10000F6DC(&qword_10009C7E0, &qword_10009C7E8, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
    v2[0] = sub_10000D720(&qword_10009C7F0);
    v2[1] = sub_10000F6DC(&qword_10009C7F8, &qword_10009C7F0, (uint64_t)&protocol conformance descriptor for IDView<A, B>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C7D0);
  }
  return result;
}

void sub_1000465FC(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_10003D708(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_10004660C()
{
  return sub_10004661C(type metadata accessor for StickerPackStrip, 1);
}

uint64_t sub_10004661C(uint64_t (*a1)(_QWORD), char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[9];
  uint64_t v12;

  v4 = a1(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = v2 + *(int *)(v4 + 32) + ((v5 + 16) & ~v5);
  v7 = *(_BYTE *)v6;
  v8 = *(_QWORD *)(v6 + 8);
  v11[1] = v7;
  v12 = v8;
  v11[0] = a2;
  v9 = sub_10000A66C(&qword_10009C1C8);
  return State.wrappedValue.setter(v11, v9);
}

unint64_t sub_100046698()
{
  unint64_t result;

  result = qword_10009C820;
  if (!qword_10009C820)
  {
    result = swift_getWitnessTable(&unk_1000791B8, &type metadata for StickerPackStrip.EditButton);
    atomic_store(result, (unint64_t *)&qword_10009C820);
  }
  return result;
}

uint64_t sub_1000466E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for StickerPackStrip(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8) + 80);
  return sub_10003CAA4(a1, v2 + v6, v2 + ((v6 + v7 + v8) & ~v8), a2);
}

uint64_t sub_100046764()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (int *)type metadata accessor for StickerPackStrip(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for GeometryProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = (_QWORD *)(v0 + v4);
  v11 = sub_10000A66C(&qword_10009C100);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v11) == 1)
  {
    v13 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v0 + v4, v13);
  }
  else
  {
    swift_release(*v10, v12);
  }
  v15 = (_QWORD *)((char *)v10 + v1[5]);
  if (v15[3])
    sub_10000D4A4(v15);
  v16 = v3 | v8 | 7;
  v17 = (v4 + v5 + v8) & ~v8;
  swift_release(*(_QWORD *)((char *)v10 + v1[6] + 8), v14);
  v18 = (char *)v10 + v1[7];
  swift_bridgeObjectRelease(*((_QWORD *)v18 + 1));
  swift_release(*((_QWORD *)v18 + 2), v19);
  swift_release(*(_QWORD *)((char *)v10 + v1[8] + 8), v20);
  sub_10003B6BC(*(_QWORD *)((char *)v10 + v1[9]), *(_QWORD *)((char *)v10 + v1[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v1[10] + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v17, v6);
  return swift_deallocObject(v0, v17 + v9, v16);
}

uint64_t sub_1000468C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for StickerPackStrip(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GeometryProxy(0) - 8) + 80);
  return sub_10003D22C(v1 + v4, v1 + ((v4 + v5 + v6) & ~v6), a1);
}

uint64_t sub_10004692C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000A66C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100046974@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StickerPackStrip(0) - 8) + 80);
  return sub_10003C6CC(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1000469C4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (int *)type metadata accessor for StickerPackStrip(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10000A66C(&qword_10009C100);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
  }
  else
  {
    swift_release(*v6, v8);
  }
  v11 = (_QWORD *)((char *)v6 + v1[5]);
  if (v11[3])
    sub_10000D4A4(v11);
  v12 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)((char *)v6 + v1[6] + 8), v10);
  v13 = (char *)v6 + v1[7];
  swift_bridgeObjectRelease(*((_QWORD *)v13 + 1));
  swift_release(*((_QWORD *)v13 + 2), v14);
  swift_release(*(_QWORD *)((char *)v6 + v1[8] + 8), v15);
  sub_10003B6BC(*(_QWORD *)((char *)v6 + v1[9]), *(_QWORD *)((char *)v6 + v1[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[10] + 8));
  swift_release(*(_QWORD *)(v0 + v12), v16);
  return swift_deallocObject(v0, v12 + 8, v3 | 7);
}

uint64_t sub_100046AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for StickerPackStrip(0);
  v2 = *(_QWORD *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  return sub_10003AA18(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_100046B4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  _BYTE v8[24];

  v1 = v0[3];
  v2 = v0[4];
  v3 = v0[2] + 16;
  swift_beginAccess(v3, v8, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)result + 120);
    swift_bridgeObjectRetain(v2);
    v6(v1, v2);
    return swift_release(v5, v7);
  }
  return result;
}

uint64_t sub_100046BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 24), a2);
  return swift_deallocObject(v2, 32, 7);
}

uint64_t sub_100046C00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10009C85C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10002D3C8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10009C858 + dword_10009C858))(a1, v4);
}

uint64_t sub_100046C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

void *sub_100046CC0()
{
  return &unk_100079570;
}

double sub_100046CCC()
{
  return 0.5;
}

void *sub_100046CD4()
{
  return &unk_100079578;
}

double sub_100046CE0()
{
  return 75.0;
}

void *sub_100046CF0()
{
  return &unk_100079580;
}

double sub_100046CFC()
{
  return 0.35;
}

_QWORD *sub_100046D0C(void *a1)
{
  objc_class *v1;
  _QWORD *v3;
  void (*v4)(void *);
  _QWORD *v5;

  v3 = objc_msgSend(objc_allocWithZone(v1), "init");
  v4 = *(void (**)(void *))((swift_isaMask & *v3) + 0x50);
  v5 = v3;
  v4(a1);

  return v5;
}

void sub_100046D78(void *a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;

  objc_msgSend(v1, "setAlpha:", 0.0);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  objc_msgSend(v1, "setBackgroundColor:", v3);

  v4 = objc_msgSend(a1, "subviews");
  v5 = sub_10000D5F4(0, (unint64_t *)&qword_10009C868, UIView_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v23 = v6;
    else
      v23 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v6);
  objc_msgSend(a1, "insertSubview:atIndex:", v1, v7);
  v8 = (void *)objc_opt_self(NSLayoutConstraint);
  v9 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100078360;
  v11 = objc_msgSend(v1, "heightAnchor");
  v12 = objc_msgSend(v11, "constraintEqualToConstant:", 0.35);

  *(_QWORD *)(v10 + 32) = v12;
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(a1, "topAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v10 + 40) = v15;
  v16 = objc_msgSend(v1, "leftAnchor");
  v17 = objc_msgSend(a1, "leftAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v10 + 48) = v18;
  v19 = objc_msgSend(v1, "rightAnchor");
  v20 = objc_msgSend(a1, "rightAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v10 + 56) = v21;
  specialized Array._endMutation()(v22);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B0D0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v8, "activateConstraints:", isa);

}

id sub_1000470B4(double a1)
{
  void *v1;
  double v2;

  v2 = a1 / 75.0;
  if (v2 > 0.5)
    v2 = 0.5;
  return objc_msgSend(v1, "setAlpha:", v2);
}

id sub_1000470E0(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for KeylineView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

uint64_t type metadata accessor for KeylineView()
{
  return objc_opt_self(_TtC22StickersUltraExtension11KeylineView);
}

id sub_1000471CC(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for KeylineView();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_10004725C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for KeylineView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void *sub_10004728C()
{
  return &unk_1000795C0;
}

double sub_100047298()
{
  return 44.0;
}

void *sub_1000472A4()
{
  return &unk_1000795C8;
}

uint64_t sub_1000472B0()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1000472B8(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

__n128 sub_1000472C0@<Q0>(__n128 *a1@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;

  v2 = (char *)a1 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v3 = enum case for RoundedCornerStyle.continuous(_:);
  v4 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v2, v3, v4);
  __asm { FMOV            V0.2D, #13.0 }
  *a1 = result;
  return result;
}

uint64_t sub_100047328@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for StickerPackStripSelectionBackground(0) + 20);
  return sub_100047394(v3, a1);
}

uint64_t type metadata accessor for StickerPackStripSelectionBackground(uint64_t a1)
{
  uint64_t result;

  result = qword_10009EE40;
  if (!qword_10009EE40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for StickerPackStripSelectionBackground);
  return result;
}

uint64_t sub_100047394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000473D8@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  unsigned __int8 v62;
  __int128 v63;

  v3 = sub_10000A66C(&qword_10009C898);
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ContentShapeKinds(0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  __chkstk_darwin(v6);
  v56 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000A66C(&qword_10009C6F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000A66C(&qword_10009C8A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10000A66C(&qword_10009C8A8);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  if (*v1 == 1)
  {
    v55 = (uint64_t)&v47 - v19;
    v20 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
    v52 = Color.init(uiColor:)(v20);
    v21 = static Alignment.center.getter(v52);
    _FrameLayout.init(width:height:alignment:)(&v59, 0x4046000000000000, 0, 0x4046000000000000, 0, v21, v22);
    v53 = v3;
    v54 = a1;
    v23 = v59;
    v24 = v60;
    v51 = v61;
    v50 = v62;
    v48 = *((_QWORD *)&v63 + 1);
    v49 = v63;
    v25 = (uint64_t)&v1[*(int *)(type metadata accessor for StickerPackStripSelectionBackground(0) + 20)];
    sub_100047394(v25, (uint64_t)v10);
    *(_WORD *)&v10[*(int *)(v8 + 36)] = 256;
    sub_10002E23C((uint64_t)v10, (uint64_t)&v13[*(int *)(v11 + 36)], &qword_10009C6F0);
    *(_QWORD *)v13 = v52;
    *((_QWORD *)v13 + 1) = v23;
    v13[16] = v24;
    *((_QWORD *)v13 + 3) = v51;
    v13[32] = v50;
    v26 = v48;
    *((_QWORD *)v13 + 5) = v49;
    *((_QWORD *)v13 + 6) = v26;
    v27 = sub_10002E2B4((uint64_t)v10, &qword_10009C6F0);
    v28 = v56;
    static ContentShapeKinds.accessibility.getter(v27);
    v29 = (uint64_t)&v17[*(int *)(v14 + 36)];
    sub_100047394(v25, v29);
    v30 = sub_10000A66C(&qword_10009C8E8);
    v32 = v57;
    v31 = v58;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v29 + *(int *)(v30 + 40), v28, v58);
    *(_BYTE *)(v29 + *(int *)(v30 + 36)) = 0;
    sub_10002E23C((uint64_t)v13, (uint64_t)v17, &qword_10009C8A0);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v31);
    sub_10002E2B4((uint64_t)v13, &qword_10009C8A0);
    v33 = v55;
    sub_1000479B4((uint64_t)v17, v55);
    sub_10002E23C(v33, (uint64_t)v5, &qword_10009C8A8);
    swift_storeEnumTagMultiPayload(v5, v53, 0);
    v34 = sub_10000A66C(&qword_10009C8B0);
    v35 = sub_100047838();
    v36 = sub_100047958(&qword_10009C8F0, &qword_10009C8B0);
    _ConditionalContent<>.init(storage:)(v5, v14, v34, v35, v36);
    return sub_10002E2B4(v33, &qword_10009C8A8);
  }
  else
  {
    v38 = static Alignment.center.getter(v18);
    _FrameLayout.init(width:height:alignment:)(&v59, 0x4046000000000000, 0, 0x4046000000000000, 0, v38, v39);
    v40 = v59;
    v41 = v60;
    v42 = v61;
    v43 = v62;
    *(_QWORD *)v5 = 0;
    v5[8] = 1;
    *((_QWORD *)v5 + 2) = v40;
    v5[24] = v41;
    *((_QWORD *)v5 + 4) = v42;
    v5[40] = v43;
    *((_OWORD *)v5 + 3) = v63;
    swift_storeEnumTagMultiPayload(v5, v3, 1);
    v44 = sub_10000A66C(&qword_10009C8B0);
    v45 = sub_100047838();
    v46 = sub_100047958(&qword_10009C8F0, &qword_10009C8B0);
    return _ConditionalContent<>.init(storage:)(v5, v14, v44, v45, v46);
  }
}

unint64_t sub_100047838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C8B8;
  if (!qword_10009C8B8)
  {
    v1 = sub_10000D720(&qword_10009C8A8);
    sub_1000478BC();
    sub_10000F6DC(&qword_10009C8E0, &qword_10009C8E8, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C8B8);
  }
  return result;
}

unint64_t sub_1000478BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C8C0;
  if (!qword_10009C8C0)
  {
    v1 = sub_10000D720(&qword_10009C8A0);
    sub_100047958(&qword_10009C8C8, &qword_10009C8D0);
    sub_10000F6DC(&qword_10009C8D8, &qword_10009C6F0, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C8C0);
  }
  return result;
}

uint64_t sub_100047958(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10000D720(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000479B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009C8A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 sub_1000479FC@<Q0>(_BYTE *a1@<X8>)
{
  __n128 *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;

  *a1 = 0;
  v1 = (__n128 *)&a1[*(int *)(type metadata accessor for StickerPackStripSelectionBackground(0) + 20)];
  v2 = (char *)v1 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v3 = enum case for RoundedCornerStyle.continuous(_:);
  v4 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v2, v3, v4);
  __asm { FMOV            V0.2D, #13.0 }
  *v1 = result;
  return result;
}

__n128 sub_100047A78@<Q0>(char a1@<W0>, _BYTE *a2@<X8>)
{
  __n128 *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;

  *a2 = a1;
  v2 = (__n128 *)&a2[*(int *)(type metadata accessor for StickerPackStripSelectionBackground(0) + 20)];
  v3 = (char *)v2 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v4 = enum case for RoundedCornerStyle.continuous(_:);
  v5 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  __asm { FMOV            V0.2D, #13.0 }
  *v2 = result;
  return result;
}

uint64_t sub_100047AF4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000829E8, 1);
}

uint64_t *sub_100047B08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  _BYTE *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v12);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    *(_OWORD *)((char *)a1 + v5) = *(_OWORD *)((char *)a2 + v5);
    v8 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v9 = &v6[v8];
    v10 = &v7[v8];
    v11 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v3;
}

uint64_t sub_100047BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = v2 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v4 = type metadata accessor for RoundedCornerStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

_BYTE *sub_100047BF4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  *(_OWORD *)&a1[v4] = *(_OWORD *)&a2[v4];
  v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_BYTE *sub_100047C6C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  char *v8;
  _BYTE *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  *v5 = *(_QWORD *)&a2[v4];
  v5[1] = *(_QWORD *)&a2[v4 + 8];
  v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v8 = (char *)v5 + v7;
  v9 = &v6[v7];
  v10 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_BYTE *sub_100047CEC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  *(_OWORD *)&a1[v4] = *(_OWORD *)&a2[v4];
  v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

_BYTE *sub_100047D64(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  *(_OWORD *)&a1[v4] = *(_OWORD *)&a2[v4];
  v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100047DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100047DE8);
}

uint64_t sub_100047DE8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for RoundedRectangle(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t sub_100047E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100047E70);
}

_BYTE *sub_100047E70(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for RoundedRectangle(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_100047EE0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100079668;
  result = type metadata accessor for RoundedRectangle(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_100047F58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C978;
  if (!qword_10009C978)
  {
    v1 = sub_10000D720((uint64_t *)&unk_10009C980);
    sub_100047838();
    sub_100047958(&qword_10009C8F0, &qword_10009C8B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009C978);
  }
  return result;
}

uint64_t sub_100047FDC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009EE58);
  sub_10000D130(v0, (uint64_t)qword_10009EE58);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD000000000000010, 0x80000001000750D0);
}

uint64_t sub_100048060()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_delegate);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_delegate, v3, 0, 0);
  return swift_unknownObjectRetain(*v1);
}

uint64_t sub_1000480A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_delegate);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_unknownObjectRelease(v4);
}

uint64_t (*sub_1000480F8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_delegate, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_10004813C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeControllerType) == 6)
    return 1;
  else
    return *(unsigned __int8 *)(v0
                              + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeControllerType);
}

uint64_t sub_100048154()
{
  return sub_10004816C(&OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController__puppetIdentifier);
}

uint64_t sub_100048160()
{
  return sub_10004816C(&OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController__thirdPartyAppIdentifier);
}

uint64_t sub_10004816C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t sub_1000481A0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 == 2 || a1 == 1)
  {
    v3 = (unsigned int *)&enum case for Sticker.StickerType.recent(_:);
  }
  else
  {
    if (a1)
    {
      v10 = type metadata accessor for Sticker.StickerType(0);
      v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
      v8 = a2;
      v9 = 1;
      return v7(v8, v9, 1, v10);
    }
    v3 = (unsigned int *)&enum case for Sticker.StickerType.userContent(_:);
  }
  v4 = *v3;
  v5 = type metadata accessor for Sticker.StickerType(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104))(a2, v4, v5);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v8 = a2;
  v9 = 0;
  v10 = v5;
  return v7(v8, v9, 1, v10);
}

uint64_t sub_100048254(char a1)
{
  return *(_QWORD *)&aUsercontrecent_0[8 * a1];
}

uint64_t sub_100048274(char *a1, char *a2)
{
  return sub_100048280(*a1, *a2);
}

uint64_t sub_100048280(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = 8 * a1;
  v3 = *(_QWORD *)&aUsercontrecent_0[v2];
  v4 = *(_QWORD *)&aThirdparent[v2 + 8];
  v5 = 8 * a2;
  v6 = *(_QWORD *)&aUsercontrecent_0[v5];
  v7 = *(_QWORD *)&aThirdparent[v5 + 8];
  if (v3 == v6 && v4 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, *(_QWORD *)&aThirdparent[8 * a2 + 8], 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v7);
  return v9 & 1;
}

Swift::Int sub_100048304()
{
  char *v0;

  return sub_10004830C(*v0);
}

Swift::Int sub_10004830C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  v2 = 8 * a1;
  v3 = *(_QWORD *)&aThirdparent[v2 + 8];
  String.hash(into:)(v5, *(_QWORD *)&aUsercontrecent_0[v2], v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100048374(uint64_t a1)
{
  char *v1;

  return sub_10004837C(a1, *v1);
}

uint64_t sub_10004837C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8 * a2;
  v3 = *(_QWORD *)&aThirdparent[v2 + 8];
  String.hash(into:)(a1, *(_QWORD *)&aUsercontrecent_0[v2], v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1000483BC(uint64_t a1)
{
  char *v1;

  return sub_1000483C4(a1, *v1);
}

Swift::Int sub_1000483C4(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  v3 = 8 * a2;
  v4 = *(_QWORD *)&aThirdparent[v3 + 8];
  String.hash(into:)(v6, *(_QWORD *)&aUsercontrecent_0[v3], v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

unint64_t sub_100048428@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10004B14C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100048454@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100048254(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10004847C()
{
  return 6;
}

uint64_t sub_100048484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v1 = type metadata accessor for Sticker.StickerType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v17 - v6;
  v8 = *(void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController);
  if (!v8)
    return 0;
  v9 = type metadata accessor for StickerCollectionViewController(0);
  v10 = swift_dynamicCastClass(v8, v9);
  if (v10)
  {
    v11 = v8;
    dispatch thunk of StickerCollectionViewController.storeType.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for Sticker.StickerType.userContent(_:), v1);
    v12 = sub_10004B194();
    dispatch thunk of RawRepresentable.rawValue.getter(&v18, v1, v12);
    dispatch thunk of RawRepresentable.rawValue.getter(&v17, v1, v12);
    v14 = v17;
    v13 = v18;
    v15 = *(void (**)(char *, uint64_t))(v2 + 8);
    v15(v5, v1);
    v15(v7, v1);
    if (v13 != v14)
    {

      return 0;
    }
  }
  return v10;
}

void sub_1000485D0(char a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for StickerProvidingViewController();
  objc_msgSendSuper2(&v6, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v4, "setBackgroundColor:", v5);

  }
  else
  {
    __break(1u);
  }
}

void sub_100048734(char a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  int v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t (*v15)(void);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  char *v32;
  char v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  unsigned int v41;
  id v42;
  char *v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  char *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  unsigned int v53;
  uint64_t v54;
  id v55;
  id v56;

  v4 = v3;
  v8 = OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeControllerType;
  v9 = v3[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeControllerType];
  if (v9 == 6 || (sub_100048280(v9, a1) & 1) == 0)
  {
    v22 = OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController;
    v23 = *(void **)&v3[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController];
    v24 = &v3[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController__puppetIdentifier];
    v25 = *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController__puppetIdentifier + 8];
    *(_QWORD *)v24 = a2;
    *((_QWORD *)v24 + 1) = a3;
    v26 = v23;
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRelease(v25);
    sub_100048FD4(a1);
    v28 = v27;
    if (v27)
    {
      v55 = v23;
      v29 = v27;
      v30 = objc_msgSend(v29, "parentViewController");
      if (!v30)
        goto LABEL_18;
      v31 = v30;
      sub_10000D5F4(0, &qword_10009C9C0, UIViewController_ptr);
      v32 = v4;
      v54 = v22;
      v33 = a1;
      v34 = v29;
      v35 = v26;
      v36 = v8;
      v37 = v31;
      LOBYTE(v31) = static NSObject.== infix(_:_:)(v37, v32);

      v8 = v36;
      v26 = v35;
      v29 = v34;
      a1 = v33;
      v22 = v54;

      if ((v31 & 1) == 0)
        goto LABEL_18;
      v38 = objc_msgSend(v32, "view");
      if (!v38)
      {
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      v39 = v38;
      v40 = objc_msgSend(v29, "view");
      v41 = objc_msgSend(v39, "containsView:", v40);

      if (!v41)
      {
LABEL_18:
        v42 = v29;
        sub_100049F14(v28, 0);

        sub_100049B0C(v42, 0);
      }

      v23 = v55;
    }
    sub_100049F14(v23, 0);
    v4[v8] = a1;
    v56 = *(id *)&v4[v22];
    *(_QWORD *)&v4[v22] = v28;

LABEL_21:
    return;
  }
  v10 = OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController;
  v11 = *(void **)&v3[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController];
  if (!v11)
    return;
  v12 = type metadata accessor for AvatarStickersViewController();
  v13 = (_QWORD *)swift_dynamicCastClass(v11, v12);
  if (!v13)
    goto LABEL_27;
  v14 = v13;
  v15 = *(uint64_t (**)(void))((swift_isaMask & *v13) + 0xE0);
  v16 = v11;
  v17 = v15();
  if (!v18)
  {
    if (!a3)
      goto LABEL_26;
    goto LABEL_25;
  }
  v19 = v18;
  if (!a3)
  {
    swift_bridgeObjectRelease(v18);
LABEL_25:
    v43 = &v4[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController__puppetIdentifier];
    v44 = *(_QWORD *)&v4[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController__puppetIdentifier + 8];
    *(_QWORD *)v43 = a2;
    *((_QWORD *)v43 + 1) = a3;
    swift_bridgeObjectRetain_n(a3, 2);
    swift_bridgeObjectRelease(v44);
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v14) + 0xE8))(a2, a3);
LABEL_26:

LABEL_27:
    v45 = *(void **)&v4[v10];
    if (v45)
      goto LABEL_28;
    return;
  }
  if (v17 != a2 || v18 != a3)
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, a2, a3, 0);
    swift_bridgeObjectRelease(v19);
    if ((v21 & 1) != 0)
      goto LABEL_26;
    goto LABEL_25;
  }

  swift_bridgeObjectRelease(v19);
  v45 = *(void **)&v4[v10];
  if (v45)
  {
LABEL_28:
    v56 = v45;
    v46 = objc_msgSend(v56, "parentViewController");
    if (!v46)
      goto LABEL_32;
    v47 = v46;
    sub_10000D5F4(0, &qword_10009C9C0, UIViewController_ptr);
    v48 = v4;
    v49 = v47;
    LOBYTE(v47) = static NSObject.== infix(_:_:)(v49, v48);

    if ((v47 & 1) == 0)
      goto LABEL_32;
    v50 = objc_msgSend(v48, "view");
    if (v50)
    {
      v51 = v50;
      v52 = objc_msgSend(v56, "view");
      v53 = objc_msgSend(v51, "containsView:", v52);

      if (v53)
      {
LABEL_33:

        goto LABEL_21;
      }
LABEL_32:
      v56 = v56;
      sub_100049F14(v45, 0);

      sub_100049B0C(v56, 0);
      goto LABEL_33;
    }
    goto LABEL_37;
  }
}

void sub_100048B78()
{
  __asm { BR              X10 }
}

void sub_100048BE8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  BOOL v30;
  void *v31;
  id v32;
  void *v33;
  char *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  unsigned int v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  char *v50;
  void *v51;
  id v52;
  uint64_t v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  unsigned int v58;
  id v59;
  id v60;
  uint64_t v61;

  v27 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746E65636572, 0xE600000000000000, 0x7261506472696874, 0xEA00000000007974, 0);
  swift_bridgeObjectRelease(0xE600000000000000);
  if ((v27 & 1) == 0)
    goto LABEL_17;
  v28 = &v22[*(_QWORD *)(v25 + 2472)];
  v29 = *((_QWORD *)v28 + 1);
  if (!v23)
  {
    if (!v29)
      goto LABEL_9;
LABEL_17:
    v40 = OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController;
    v41 = *(void **)&v22[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController];
    v42 = &v22[*(_QWORD *)(v25 + 2472)];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v42 = v24;
    *((_QWORD *)v42 + 1) = v23;
    v44 = v41;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRelease(v43);
    sub_100048FD4(5);
    v46 = v45;
    if (v45)
    {
      v61 = v40;
      v47 = v45;
      v48 = objc_msgSend(v47, "parentViewController");
      if (!v48)
        goto LABEL_22;
      v49 = v48;
      sub_10000D5F4(0, &qword_10009C9C0, UIViewController_ptr);
      v50 = v22;
      v51 = v41;
      v52 = v44;
      v53 = v26;
      v54 = v49;
      LOBYTE(v49) = static NSObject.== infix(_:_:)(v54, v50);

      v26 = v53;
      v44 = v52;
      v41 = v51;

      if ((v49 & 1) == 0)
        goto LABEL_22;
      v55 = objc_msgSend(v50, "view");
      if (!v55)
      {
        __break(1u);
        goto LABEL_28;
      }
      v56 = v55;
      v57 = objc_msgSend(v47, "view");
      v58 = objc_msgSend(v56, "containsView:", v57);

      if (!v58)
      {
LABEL_22:
        v59 = v47;
        sub_100049F14(v46, 0);

        sub_100049B0C(v59, 0);
      }

      v40 = v61;
    }
    sub_100049F14(v41, 0);
    v22[v26] = 5;
    v60 = *(id *)&v22[v40];
    *(_QWORD *)&v22[v40] = v46;

    goto LABEL_25;
  }
  if (!v29)
    goto LABEL_17;
  v30 = *(_QWORD *)v28 == v24 && v29 == v23;
  if (!v30 && (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v23, *(_QWORD *)v28, v29, 0) & 1) == 0)
    goto LABEL_17;
LABEL_9:
  v31 = *(void **)&v22[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController];
  if (v31)
  {
    v60 = v31;
    v32 = objc_msgSend(v60, "parentViewController");
    if (!v32)
      goto LABEL_14;
    v33 = v32;
    sub_10000D5F4(0, &qword_10009C9C0, UIViewController_ptr);
    v34 = v22;
    v35 = v33;
    LOBYTE(v33) = static NSObject.== infix(_:_:)(v35, v34);

    if ((v33 & 1) == 0)
      goto LABEL_14;
    v36 = objc_msgSend(v34, "view");
    if (v36)
    {
      v37 = v36;
      v38 = objc_msgSend(v60, "view");
      v39 = objc_msgSend(v37, "containsView:", v38);

      if (v39)
      {
LABEL_15:

LABEL_25:
        return;
      }
LABEL_14:
      v60 = v60;
      sub_100049F14(v31, 0);

      sub_100049B0C(v60, 0);
      goto LABEL_15;
    }
LABEL_28:
    __break(1u);
    JUMPOUT(0x100048FB8);
  }
}

void sub_100048FD4(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Sticker.StickerType(0);
  __chkstk_darwin(v2);
  v3 = sub_10000A66C((uint64_t *)&unk_10009CA60);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_100049090(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  id v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  unsigned int *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;

  v29 = objc_msgSend(v24, "view");
  if (!v29)
  {
    __break(1u);
    goto LABEL_8;
  }
  v30 = v29;
  objc_msgSend(v29, "frame");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  if (!v27)
  {
    v39 = (unsigned int *)&enum case for Sticker.StickerType.userContent(_:);
    goto LABEL_6;
  }
  if (v27 != 1)
  {
LABEL_8:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v25);
    __break(1u);
    JUMPOUT(0x1000494F0);
  }
  v39 = (unsigned int *)&enum case for Sticker.StickerType.recent(_:);
LABEL_6:
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v26, *v39, v25);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v25);
  v40 = objc_allocWithZone((Class)type metadata accessor for StickerCollectionViewController(0));
  v41 = ((uint64_t (*)(uint64_t, double, double, double, double))StickerCollectionViewController.init(with:storeType:))(v26, v32, v34, v36, v38);
  v42 = (*(uint64_t (**)(void))((swift_isaMask & *v24) + 0x80))();
  ((void (*)(uint64_t))dispatch thunk of StickerCollectionViewController.delegate.setter)(v42);
  return v41;
}

void sub_1000498DC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController);
  if (v1)
  {
    v2 = type metadata accessor for StickerCollectionViewController(0);
    if (swift_dynamicCastClass(v1, v2))
    {
      v3 = v1;
      StickerCollectionViewController.sendAndResetAnalyticsIfNecessary()();

    }
  }
}

void sub_100049948(uint64_t a1)
{
  sub_100049970(a1, (SEL *)&selRef_viewWillTransitionToCompactPresentation, (SEL *)&selRef_viewWillTransitionToExpandedPresentation);
}

void sub_10004995C(uint64_t a1)
{
  sub_100049970(a1, (SEL *)&selRef_viewDidTransitionToCompactPresentation, (SEL *)&selRef_viewDidTransitionToExpandedPresentation);
}

void sub_100049970(uint64_t a1, SEL *a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *oslog;
  __objc2_prot *v17;
  __objc2_prot *v18;

  if (a1 == 1)
  {
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController);
    if (v8)
    {
      v18 = &OBJC_PROTOCOL___CKBrowserViewControllerProtocol;
      v10 = (void *)swift_dynamicCastObjCProtocolConditional(v8, 1, &v18);
      if (v10)
      {
        v11 = v10;
        if ((objc_msgSend(v10, "respondsToSelector:", *a3) & 1) != 0)
          objc_msgSend(v11, *a3);
      }
    }
  }
  else if (a1)
  {
    if (qword_10009EE50 != -1)
      swift_once(&qword_10009EE50, sub_100047FDC);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_10000D130(v12, (uint64_t)qword_10009EE58);
    oslog = Logger.logObject.getter(v13);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v14, "Should never transition to anything besides compact/expanded", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

  }
  else
  {
    v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController);
    if (v4)
    {
      v17 = &OBJC_PROTOCOL___CKBrowserViewControllerProtocol;
      v6 = (void *)swift_dynamicCastObjCProtocolConditional(v4, 1, &v17);
      if (v6)
      {
        v7 = v6;
        if ((objc_msgSend(v6, "respondsToSelector:", *a2) & 1) != 0)
          objc_msgSend(v7, *a2);
      }
    }
  }
}

uint64_t sub_100049B0C(void *a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  void *v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t aBlock[5];
  uint64_t v41;

  v3 = v2;
  if (qword_10009EE50 != -1)
    swift_once(&qword_10009EE50, sub_100047FDC);
  v6 = type metadata accessor for Logger(0);
  sub_10000D130(v6, (uint64_t)qword_10009EE58);
  v7 = a1;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v38 = v3;
    v11 = swift_slowAlloc(32, -1);
    aBlock[0] = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = objc_msgSend(v7, "debugDescription");
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    v39 = sub_10000C99C(v13, v15, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, aBlock, v10 + 4, v10 + 12);

    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Adding child controller %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    v16 = v11;
    v3 = v38;
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  objc_msgSend(v3, "addChildViewController:", v7);
  result = (uint64_t)objc_msgSend(v7, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  v18 = (void *)result;
  result = (uint64_t)objc_msgSend(v3, "view");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v19 = (void *)result;
  objc_msgSend((id)result, "bounds");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  objc_msgSend(v18, "setFrame:", v21, v23, v25, v27);
  result = (uint64_t)objc_msgSend(v7, "view");
  if (!result)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v28 = (void *)result;
  objc_msgSend((id)result, "setTranslatesAutoresizingMaskIntoConstraints:", 1);

  if ((a2 & 1) != 0)
  {
    result = (uint64_t)objc_msgSend(v7, "view");
    if (!result)
    {
LABEL_22:
      __break(1u);
      return result;
    }
    v29 = (void *)result;
    objc_msgSend((id)result, "setAlpha:", 0.0);

  }
  result = (uint64_t)objc_msgSend(v3, "view");
  if (!result)
    goto LABEL_20;
  v30 = (void *)result;
  result = (uint64_t)objc_msgSend(v7, "view");
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v31 = (void *)result;
  objc_msgSend(v30, "addSubview:", result);

  objc_msgSend(v7, "didMoveToParentViewController:", v3);
  if ((a2 & 1) != 0)
  {
    v32 = (void *)objc_opt_self(UIView);
    v33 = swift_allocObject(&unk_10008CDB0, 24, 7);
    *(_QWORD *)(v33 + 16) = v7;
    aBlock[4] = (uint64_t)sub_10004B380;
    v41 = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10000C1B4;
    aBlock[3] = (uint64_t)&unk_10008CDC8;
    v34 = _Block_copy(aBlock);
    v35 = v41;
    v36 = v7;
    swift_release(v35, v37);
    objc_msgSend(v32, "animateWithDuration:animations:", v34, 0.2);
    _Block_release(v34);
  }
  return 1;
}

void sub_100049F14(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void **v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void **v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void **aBlock;
  uint64_t v35;
  void *v36;
  void *v37;
  void (*v38)();
  uint64_t v39;

  if (a1)
  {
    v3 = v2;
    v5 = qword_10009EE50;
    v6 = a1;
    if (v5 != -1)
      swift_once(&qword_10009EE50, sub_100047FDC);
    v7 = type metadata accessor for Logger(0);
    sub_10000D130(v7, (uint64_t)qword_10009EE58);
    v8 = v6;
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = v3;
      v12 = (void **)swift_slowAlloc(32, -1);
      aBlock = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = objc_msgSend(v8, "debugDescription");
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

      v33 = sub_10000C99C(v14, v16, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &aBlock, v11 + 4, v11 + 12);

      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Removing old %s", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      v17 = v12;
      v3 = v32;
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v11, -1, -1);

      if ((a2 & 1) == 0)
        goto LABEL_6;
    }
    else
    {

      if ((a2 & 1) == 0)
      {
LABEL_6:
        objc_msgSend(v8, "willMoveToParentViewController:", 0);
        v18 = objc_msgSend(v8, "view");
        if (v18)
        {
          v19 = v18;
          objc_msgSend(v18, "removeFromSuperview");

          objc_msgSend(v8, "removeFromParentViewController");
          objc_msgSend(v8, "didMoveToParentViewController:", 0);

        }
        else
        {
          __break(1u);
        }
        return;
      }
    }
    v20 = (void *)objc_opt_self(UIView);
    v21 = swift_allocObject(&unk_10008CE00, 24, 7);
    *(_QWORD *)(v21 + 16) = v8;
    v38 = sub_10004B3A0;
    v39 = v21;
    aBlock = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_10000C1B4;
    v37 = &unk_10008CE18;
    v22 = _Block_copy(&aBlock);
    v23 = v39;
    v24 = v8;
    swift_release(v23, v25);
    v26 = swift_allocObject(&unk_10008CE50, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16, v3);
    v27 = swift_allocObject(&unk_10008CE78, 32, 7);
    *(_QWORD *)(v27 + 16) = v26;
    *(_QWORD *)(v27 + 24) = v24;
    v38 = sub_10004B454;
    v39 = v27;
    aBlock = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_100013408;
    v37 = &unk_10008CE90;
    v28 = _Block_copy(&aBlock);
    v29 = v39;
    v30 = v24;
    swift_release(v29, v31);
    objc_msgSend(v20, "animateWithDuration:animations:completion:", v22, v28, 0.2);

    _Block_release(v28);
    _Block_release(v22);
  }
}

void sub_10004A2B0(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  void *v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  char v11;

  v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x118))();
  if (v3)
  {
    v4 = (void *)v3;
    dispatch thunk of StickerCollectionViewController.expectedNewStickerTargetInWindow.getter(v10);
    v8 = v10[1];
    v9 = v10[0];
    v5 = v11;

    v7 = v8;
    v6 = v9;
  }
  else
  {
    v6 = 0uLL;
    v5 = 1;
    v7 = 0uLL;
  }
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = v5;
}

void sub_10004A338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10004A350(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of StickerCollectionViewController.addStickerToStore(_:completionHandler:));
}

void sub_10004A344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10004A350(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of StickerCollectionViewController.addStickerToStore(_:completionWithStickerIDs:));
}

void sub_10004A350(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  NSObject *v17;
  os_log_type_t v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x118))(v11);
  if (v14)
  {
    v23 = v14;
    a4(a1, a2, a3);

  }
  else
  {
    if (qword_10009EE50 != -1)
      swift_once(&qword_10009EE50, sub_100047FDC);
    v15 = sub_10000D130(v9, (uint64_t)qword_10009EE58);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v15, v9);
    v16 = v4;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (_DWORD *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      *v19 = 136315138;
      v21 = *((unsigned __int8 *)v16
            + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeControllerType);
      v24 = v20;
      __asm { BR              X10 }
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

void sub_10004A674(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  _QWORD *v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v23;
  os_log_type_t v24;
  _DWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;

  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v7) + 0x118))(v17);
  if (v20)
  {
    v29 = v20;
    dispatch thunk of StickerCollectionViewController.addStickerToStore(_:sourceRect:completion:)(a1, a2, a3, a4, a5, a6, a7);

  }
  else
  {
    if (qword_10009EE50 != -1)
      swift_once(&qword_10009EE50, sub_100047FDC);
    v21 = sub_10000D130(v15, (uint64_t)qword_10009EE58);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v21, v15);
    v22 = v7;
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (_DWORD *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      *v25 = 136315138;
      v27 = *((unsigned __int8 *)v22
            + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeControllerType);
      v30 = v26;
      __asm { BR              X10 }
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
}

void sub_10004A9CC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  NSObject *v17;
  os_log_type_t v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x118))(v11);
  if (v14)
  {
    v23 = v14;
    dispatch thunk of StickerCollectionViewController.animateAdding(_:isLive:completionWithStickerIDs:)(a1, a2 & 1, a3, a4);

  }
  else
  {
    if (qword_10009EE50 != -1)
      swift_once(&qword_10009EE50, sub_100047FDC);
    v15 = sub_10000D130(v9, (uint64_t)qword_10009EE58);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v15, v9);
    v16 = v4;
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (_DWORD *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      *v19 = 136315138;
      v21 = *((unsigned __int8 *)v16
            + OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeControllerType);
      v24 = v20;
      __asm { BR              X10 }
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

void sub_10004ACF4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  id v6;

  v5 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x118))();
  if (v5)
  {
    v6 = (id)v5;
    dispatch thunk of StickerCollectionViewController.previewAddStickerAnimationDidFinish(completion:)(a1, a2);

  }
}

void sub_10004AD74()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x118))();
  if (v1)
  {
    v2 = (id)v1;
    dispatch thunk of StickerCollectionViewController.didRemoveStickerPreview()();

  }
}

void sub_10004ADD4(double a1)
{
  _QWORD *v1;
  uint64_t v3;
  id v4;

  v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x118))();
  if (v3)
  {
    v4 = (id)v3;
    dispatch thunk of StickerCollectionViewController.beginImpactRipple(after:)(a1);

  }
}

void sub_10004AE48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  uint64_t v9;
  id v10;

  v9 = (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x118))();
  if (v9)
  {
    v10 = (id)v9;
    dispatch thunk of StickerCollectionViewController.setAnimationStartTime(_:)(a1, a2, a3, a4 & 1);

  }
}

id sub_10004AEE4(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _QWORD *v5;
  _QWORD *v6;
  NSString v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_delegate] = 0;
  v5 = &v3[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController__puppetIdentifier];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v3[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController__thirdPartyAppIdentifier];
  *v6 = 0;
  v6[1] = 0;
  v3[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeControllerType] = 6;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController] = 0;
  if (a2)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for StickerProvidingViewController();
  v9 = objc_msgSendSuper2(&v11, "initWithNibName:bundle:", v8, a3);

  return v9;
}

id sub_10004B004(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_delegate] = 0;
  v3 = &v1[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController__puppetIdentifier];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v1[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController__thirdPartyAppIdentifier];
  *v4 = 0;
  v4[1] = 0;
  v1[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeControllerType] = 6;
  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension30StickerProvidingViewController_activeController] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for StickerProvidingViewController();
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

id sub_10004B0BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StickerProvidingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_10004B14C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10008CC60, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

unint64_t sub_10004B194()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C9B8;
  if (!qword_10009C9B8)
  {
    v1 = type metadata accessor for Sticker.StickerType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Sticker.StickerType, v1);
    atomic_store(result, (unint64_t *)&qword_10009C9B8);
  }
  return result;
}

uint64_t type metadata accessor for StickerProvidingViewController()
{
  return objc_opt_self(_TtC22StickersUltraExtension30StickerProvidingViewController);
}

uint64_t getEnumTagSinglePayload for StickerProvidingViewController.ControllerType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerProvidingViewController.ControllerType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10004B2DC + 4 * byte_10007969A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10004B310 + 4 * byte_100079695[v4]))();
}

uint64_t sub_10004B310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004B318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10004B320);
  return result;
}

uint64_t sub_10004B32C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10004B334);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10004B338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10004B340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StickerProvidingViewController.ControllerType()
{
  return &type metadata for StickerProvidingViewController.ControllerType;
}

uint64_t sub_10004B35C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10004B380()
{
  sub_10004B3A8(1.0);
}

uint64_t sub_10004B388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004B398(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

void sub_10004B3A0()
{
  sub_10004B3A8(0.0);
}

void sub_10004B3A8(double a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_msgSend(*(id *)(v1 + 16), "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setAlpha:", a1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10004B404()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004B428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);

  return swift_deallocObject(v2, 32, 7);
}

void sub_10004B454()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  void *v6;
  _BYTE v7[24];

  v1 = *(void **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16) + 16;
  swift_beginAccess(v2, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    objc_msgSend(v1, "willMoveToParentViewController:", 0);
    v5 = objc_msgSend(v1, "view");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "removeFromSuperview");

      objc_msgSend(v1, "removeFromParentViewController");
      objc_msgSend(v1, "didMoveToParentViewController:", 0);

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_10004B518()
{
  uint64_t v0;
  void *v1;
  id result;

  v1 = *(void **)(v0 + 16);
  if ((objc_msgSend(v1, "respondsToSelector:", "viewWillTransitionToCompactPresentation") & 1) != 0)
    objc_msgSend(v1, "viewWillTransitionToCompactPresentation");
  result = objc_msgSend(v1, "respondsToSelector:", "viewDidTransitionToCompactPresentation");
  if ((result & 1) != 0)
    return objc_msgSend(v1, "viewDidTransitionToCompactPresentation");
  return result;
}

uint64_t sub_10004B5B4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009EFF8);
  sub_10000D130(v0, (uint64_t)qword_10009EFF8);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD000000000000017, 0x80000001000754B0);
}

uint64_t sub_10004B630()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_10004B67C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_10004B6E4(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_10000A8E8;
}

id sub_10004B758()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_image);
}

id sub_10004B768()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhoto);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhoto, v3, 0, 0);
  return *v1;
}

void sub_10004B7AC(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhoto);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_10004B7FC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhoto, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_10004B840()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_localIdentifier);
  swift_bridgeObjectRetain(*(_QWORD *)(v0
                                     + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_localIdentifier
                                     + 8));
  return v1;
}

id sub_10004B878()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_liveButton));
}

void *sub_10004B888()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoSticker);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoSticker, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_10004B8D4(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoSticker);
}

uint64_t (*sub_10004B8E0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoSticker, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10004B924@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_10004B960@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoStickerRecentUUID;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10002E23C(v3, a1, &qword_10009CAB0);
}

uint64_t sub_10004B9B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoStickerRecentUUID;
  swift_beginAccess(v3, v5, 33, 0);
  sub_10004BA10(a1, v3);
  return swift_endAccess(v5);
}

uint64_t sub_10004BA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009CAB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_10004BA58(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoStickerRecentUUID, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *sub_10004BA9C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_asset);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_asset, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_10004BAE8(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_asset);
}

uint64_t (*sub_10004BAF4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_asset, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *sub_10004BB38()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrack);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrack, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_10004BB84(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrack);
}

uint64_t (*sub_10004BB90(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrack, a1, 33, 0);
  return j_j__swift_endAccess;
}

double sub_10004BBD4@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 48) = 1;
  return result;
}

__n128 sub_10004BBEC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;
  __n128 result;
  _BYTE v7[24];

  v3 = v1
     + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackPreferredTransform;
  swift_beginAccess(v3, v7, 0, 0);
  v4 = *(_BYTE *)(v3 + 48);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v3 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 48) = v4;
  return result;
}

uint64_t sub_10004BC48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1
     + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackPreferredTransform;
  swift_beginAccess(v3, v5, 1, 0);
  return sub_10004692C(a1, v3, (uint64_t *)&unk_10009CAB8);
}

uint64_t (*sub_10004BCA0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackPreferredTransform, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10004BCE4()
{
  return 0;
}

uint64_t sub_10004BCF4()
{
  return sub_10004BFA4(&OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackNaturalSize);
}

uint64_t sub_10004BD00(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10004BFF4(a1, a2, a3, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackNaturalSize);
}

uint64_t (*sub_10004BD0C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackNaturalSize, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10004BD50()
{
  return sub_10004BFA4(&OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackNaturalSizeTransformed);
}

uint64_t sub_10004BD5C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10004BFF4(a1, a2, a3, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackNaturalSizeTransformed);
}

uint64_t (*sub_10004BD68(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackNaturalSizeTransformed, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *sub_10004BDAC()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescription);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescription, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_10004BDF8(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescription);
}

uint64_t (*sub_10004BE04(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescription, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10004BE48()
{
  return 0;
}

uint64_t sub_10004BE54()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0
     + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescriptionDimensions;
  swift_beginAccess(v0+ OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescriptionDimensions, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_10004BE9C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[24];

  v5 = v2
     + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescriptionDimensions;
  result = swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_10004BEF8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescriptionDimensions, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10004BF3C()
{
  return sub_10004BFA4(&OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackEncodedSize);
}

uint64_t sub_10004BF48(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10004BFF4(a1, a2, a3, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackEncodedSize);
}

uint64_t (*sub_10004BF54(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackEncodedSize, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10004BF98()
{
  return sub_10004BFA4(&OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackEncodedSizeTransformed);
}

uint64_t sub_10004BFA4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = v1 + *a1;
  swift_beginAccess(v2, v4, 0, 0);
  return *(_QWORD *)v2;
}

uint64_t sub_10004BFE8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10004BFF4(a1, a2, a3, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackEncodedSizeTransformed);
}

uint64_t sub_10004BFF4(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  _BYTE v10[24];

  v8 = v4 + *a4;
  result = swift_beginAccess(v8, v10, 1, 0);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*sub_10004C050(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1+ OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackEncodedSizeTransformed, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_10004C094()
{
  return sub_10004C0D8((SEL *)&selRef_secondarySystemBackgroundColor, 1, 0.8);
}

id sub_10004C0AC()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_lightAppearanceDimmingColor));
}

id sub_10004C0BC()
{
  return sub_10004C0D8((SEL *)&selRef_systemBackgroundColor, 2, 0.7);
}

id sub_10004C0D8(SEL *a1, uint64_t a2, double a3)
{
  id v5;
  id v6;
  id v7;
  id v8;

  v5 = objc_msgSend((id)objc_opt_self(UIColor), *a1);
  v6 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", a2);
  v7 = objc_msgSend(v5, "resolvedColorWithTraitCollection:", v6);

  v8 = objc_msgSend(v7, "colorWithAlphaComponent:", a3);
  return v8;
}

id sub_10004C1A4()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_darkAppearanceDimmingColor));
}

void *sub_10004C1B4()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_lightAppearanceComposition);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_lightAppearanceComposition, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_10004C200(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_lightAppearanceComposition);
}

uint64_t (*sub_10004C20C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_lightAppearanceComposition, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *sub_10004C250()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_darkAppearanceComposition);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_darkAppearanceComposition, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_10004C29C(void *a1)
{
  sub_100019ED8(a1, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_darkAppearanceComposition);
}

uint64_t (*sub_10004C2A8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_darkAppearanceComposition, a1, 33, 0);
  return j_j__swift_endAccess;
}

char *sub_10004C2EC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return sub_10004C344(a1, a2, a3, a4);
}

char *sub_10004C344(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  char *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  objc_class *v41;
  char *v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  objc_super v62;

  v58 = a4;
  v59 = a2;
  v60 = a3;
  v57 = a1;
  v5 = sub_10000A66C(&qword_10009BA60);
  __chkstk_darwin(v5);
  v61 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoSticker] = 0;
  v8 = &v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoStickerRecentUUID];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)&v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_asset] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrack] = 0;
  v10 = &v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackPreferredTransform];
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *(_OWORD *)v10 = 0u;
  v10[48] = 1;
  v11 = &v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackNaturalSize];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v12 = &v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackNaturalSizeTransformed];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescription] = 0;
  v13 = &v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescriptionDimensions];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = &v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackEncodedSize];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v15 = &v4[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackEncodedSizeTransformed];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v16 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_lightAppearanceDimmingColor;
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v4;
  v19 = objc_msgSend(v17, "secondarySystemBackgroundColor");
  v20 = (void *)objc_opt_self(UITraitCollection);
  v21 = objc_msgSend(v20, "traitCollectionWithUserInterfaceStyle:", 1);
  v22 = objc_msgSend(v19, "resolvedColorWithTraitCollection:", v21);

  v23 = objc_msgSend(v22, "colorWithAlphaComponent:", 0.8);
  *(_QWORD *)&v4[v16] = v23;
  v24 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_darkAppearanceDimmingColor;
  v25 = objc_msgSend(v17, "systemBackgroundColor");
  v26 = objc_msgSend(v20, "traitCollectionWithUserInterfaceStyle:", 2);
  v27 = objc_msgSend(v25, "resolvedColorWithTraitCollection:", v26);

  v28 = objc_msgSend(v27, "colorWithAlphaComponent:", 0.7);
  *(_QWORD *)&v18[v24] = v28;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_lightAppearanceComposition] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_darkAppearanceComposition] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___livePhotoView] = 0;
  v29 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_activityIndicator;
  v30 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);
  objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v18[v29] = v30;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___cancelButton] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___addStickerButton] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___tapGestureRecognizer] = 0;
  v31 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util;
  *(_QWORD *)&v18[v31] = objc_msgSend(objc_allocWithZone((Class)StickerPhotosUtil), "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___imageAnalysisInteraction] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___imageAnalyzer] = 0;
  v33 = v57;
  v32 = v58;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_image] = v57;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhoto] = v32;
  v34 = &v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_localIdentifier];
  v35 = v60;
  *(_QWORD *)v34 = v59;
  *((_QWORD *)v34 + 1) = v35;
  v36 = objc_allocWithZone((Class)type metadata accessor for LiveButton(0));
  v37 = v33;
  v38 = v32;
  v39 = objc_msgSend(v36, "init");
  *(_QWORD *)&v18[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_liveButton] = v39;
  objc_msgSend(v39, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v40 = v39;
  dispatch thunk of LiveButton.isLive.setter(1);

  v41 = (objc_class *)type metadata accessor for StickerLivePhotoConfirmationController(0);
  v62.receiver = v18;
  v62.super_class = v41;
  v42 = (char *)objc_msgSendSuper2(&v62, "initWithNibName:bundle:", 0, 0);
  v43 = *(void **)&v42[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_liveButton];
  v44 = v42;
  objc_msgSend(v43, "addTarget:action:forControlEvents:", v44, "handleLiveButton", 64);
  sub_10004F964();
  v45 = type metadata accessor for TaskPriority(0);
  v46 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v61, 1, 1, v45);
  type metadata accessor for MainActor(0);
  v47 = v44;
  v48 = static MainActor.shared.getter(v47);
  v49 = (_QWORD *)swift_allocObject(&unk_10008D058, 40, 7);
  v49[2] = v48;
  v49[3] = &protocol witness table for MainActor;
  v49[4] = v47;
  v50 = sub_100039678(v46, (uint64_t)&unk_10009CAD8, (uint64_t)v49);
  swift_release(v50, v51);
  sub_10000D5F4(0, &qword_10009CAE0, UITraitCollection_ptr);
  v52 = v47;
  v53 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v54 = UIViewController.registerForTraitChanges(_:action:)(v53, "updateDimmingColor");
  swift_unknownObjectRelease(v54);
  swift_bridgeObjectRelease(v53);

  return v52;
}

uint64_t type metadata accessor for StickerLivePhotoConfirmationController(uint64_t a1)
{
  return sub_10003D580(a1, (uint64_t *)&unk_10009F450, (uint64_t)&nominal type descriptor for StickerLivePhotoConfirmationController);
}

void sub_10004C8CC()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD *v9;
  void (*v10)(void *, uint64_t *, double);
  id v11;
  uint64_t v12;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  v3 = 672;
  if (v2 == (id)1)
    v3 = 648;
  v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + v3))();
  if (v4)
  {
    v5 = v4;
    v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util);
    v7 = v4;
    v8 = sub_10004E730();
    objc_msgSend(v6, "videoPreviewTimeRangeForImageAnalysisInteraction:", v8);

    v9 = sub_10004D0A4();
    v10 = *(void (**)(void *, uint64_t *, double))((swift_isaMask & *v9) + 0x100);
    v11 = v7;
    v10(v5, &v12, 0.25);

  }
}

uint64_t sub_10004CA20(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = 8 * a1;
  v3 = *(_QWORD *)&aType[v2];
  v4 = *(_QWORD *)&aProgresssticke[v2 + 24];
  v5 = 8 * a2;
  v6 = *(_QWORD *)&aType[v5];
  v7 = *(_QWORD *)&aProgresssticke[v5 + 24];
  if (v3 == v6 && v4 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, *(_QWORD *)&aProgresssticke[8 * a2 + 24], 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v7);
  return v9 & 1;
}

uint64_t sub_10004CAA4(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = a1;
  v3 = *(_QWORD *)&aBegin_0[v2 * 8];
  v4 = qword_100079C40[v2];
  v5 = a2;
  v6 = *(_QWORD *)&aBegin_0[v5 * 8];
  v7 = qword_100079C40[v5];
  if (v3 == v6 && v4 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, qword_100079C40[a2], 0);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v7);
  return v9 & 1;
}

uint64_t sub_10004CB5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  Swift::String v13;
  void *object;
  unint64_t v16;
  unint64_t v17;

  v1 = v0;
  v2 = 0xD000000000000017;
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StickerLivePhotoConfirmationController.AddStickerError(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FDA8(v1, (uint64_t)v9);
  v10 = sub_10000A66C(&qword_10009CAE8);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 2, v10);
  if (v11)
  {
    if (v11 != 1)
      return 0x20676E697373694DLL;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease(v17);
    v16 = 0xD00000000000001ALL;
    v17 = 0x8000000100075190;
    v12 = sub_10002CA50((unint64_t *)&unk_10009CAF0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v3, v12);
    object = v13._object;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(object);
    v2 = v16;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v2;
}

uint64_t sub_10004CD30(char a1)
{
  return *(_QWORD *)&aType[8 * a1];
}

uint64_t sub_10004CD50(char *a1, char *a2)
{
  return sub_10004CA20(*a1, *a2);
}

Swift::Int sub_10004CD5C()
{
  char *v0;

  return sub_10004CD64(*v0);
}

Swift::Int sub_10004CD64(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  v2 = 8 * a1;
  v3 = *(_QWORD *)&aProgresssticke[v2 + 24];
  String.hash(into:)(v5, *(_QWORD *)&aType[v2], v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

Swift::Int sub_10004CDCC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  v2 = a1;
  v3 = qword_100079C40[v2];
  String.hash(into:)(v5, *(_QWORD *)&aBegin_0[v2 * 8], v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10004CE34(uint64_t a1)
{
  char *v1;

  return sub_10004CE3C(a1, *v1);
}

uint64_t sub_10004CE3C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8 * a2;
  v3 = *(_QWORD *)&aProgresssticke[v2 + 24];
  String.hash(into:)(a1, *(_QWORD *)&aType[v2], v3);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_10004CE7C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2;
  v3 = qword_100079C40[v2];
  String.hash(into:)(a1, *(_QWORD *)&aBegin_0[v2 * 8], v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_10004CEBC(uint64_t a1)
{
  char *v1;

  return sub_10004CF28(a1, *v1);
}

Swift::Int sub_10004CEC4(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  v3 = a2;
  v4 = qword_100079C40[v3];
  String.hash(into:)(v6, *(_QWORD *)&aBegin_0[v3 * 8], v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

Swift::Int sub_10004CF28(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  v3 = 8 * a2;
  v4 = *(_QWORD *)&aProgresssticke[v3 + 24];
  String.hash(into:)(v6, *(_QWORD *)&aType[v3], v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

unint64_t sub_10004CF8C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100052BF8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10004CFB8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10004CD30(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10004CFE4(char a1)
{
  return *(_QWORD *)&aBegin_0[8 * a1];
}

uint64_t sub_10004D004(char *a1, char *a2)
{
  return sub_10004CAA4(*a1, *a2);
}

Swift::Int sub_10004D010()
{
  char *v0;

  return sub_10004CDCC(*v0);
}

uint64_t sub_10004D018(uint64_t a1)
{
  char *v1;

  return sub_10004CE7C(a1, *v1);
}

Swift::Int sub_10004D020(uint64_t a1)
{
  char *v1;

  return sub_10004CEC4(a1, *v1);
}

unint64_t sub_10004D028@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100052C40(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10004D054@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_10004CFE4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

_QWORD *sub_10004D0A4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v5)(void);
  id v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___livePhotoView;
  v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___livePhotoView);
  if (v2)
  {
    v3 = *(_QWORD **)((char *)v0
                    + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___livePhotoView);
  }
  else
  {
    v4 = v0;
    type metadata accessor for LivePhotoView();
    v5 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x150);
    v6 = objc_retain(*(id *)((char *)v0
                           + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_image));
    v7 = (void *)v5();
    v8 = sub_100011A64(v6, v7);
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v9 = *(void **)((char *)v4 + v1);
    *(_QWORD *)((char *)v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_10004D168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___cancelButton;
  v7 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___cancelButton);
  if (v7)
  {
    v8 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___cancelButton);
  }
  else
  {
    static UIButton.Configuration.plain()(v3);
    sub_10000D5F4(0, &qword_10009B168, UIButton_ptr);
    sub_10000D5F4(0, (unint64_t *)&unk_10009B170, UIAction_ptr);
    v9 = String.stkLocalized.getter(0x6C65636E6143, 0xE600000000000000);
    v11 = v10;
    v12 = swift_allocObject(&unk_10008D3C8, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v0);
    v13 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v9, v11, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100054D04, v12);
    v14 = (void *)UIButton.init(configuration:primaryAction:)(v5, v13);
    objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v15 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v14;
    v8 = v14;

    v7 = 0;
  }
  v16 = v7;
  return v8;
}

id sub_10004D2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___addStickerButton;
  v7 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___addStickerButton);
  if (v7)
  {
    v8 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___addStickerButton);
  }
  else
  {
    static UIButton.Configuration.plain()(v3);
    sub_10000D5F4(0, &qword_10009B168, UIButton_ptr);
    sub_10000D5F4(0, (unint64_t *)&unk_10009B170, UIAction_ptr);
    v9 = String.stkLocalized.getter(0x6369745320646441, 0xEB0000000072656BLL);
    v11 = v10;
    v12 = swift_allocObject(&unk_10008D3C8, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v0);
    v13 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v9, v11, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100054CB4, v12);
    v14 = (void *)UIButton.init(configuration:primaryAction:)(v5, v13);
    objc_msgSend(v14, "setRole:", 1);
    objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v15 = *(void **)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v14;
    v8 = v14;

    v7 = 0;
  }
  v16 = v7;
  return v8;
}

id sub_10004D490()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___tapGestureRecognizer;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___tapGestureRecognizer);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___tapGestureRecognizer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "didTapLivePhotoView:");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10004D510()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  Class isa;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  _QWORD *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  _QWORD *v31;
  _QWORD *v32;
  id v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  _QWORD *v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  _QWORD *v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  _QWORD *v56;
  id v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  _QWORD *v65;
  id v66;
  id v67;
  id v68;
  _QWORD *v69;
  id v70;
  id v71;
  uint64_t v72;
  Class v73;
  id v74;
  id v75;
  _QWORD *v76;
  objc_super v77;

  v1 = v0;
  v77.receiver = v0;
  v77.super_class = (Class)type metadata accessor for StickerLivePhotoConfirmationController(0);
  objc_msgSendSuper2(&v77, "loadView");
  v2 = objc_msgSend(v0, "navigationItem");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_liveButton]);
  objc_msgSend(v2, "setLeftBarButtonItem:", v3);

  v4 = objc_msgSend(v1, "navigationItem");
  String.stkLocalized.getter(0x636974532077654ELL, 0xEB0000000072656BLL);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v4, "setTitle:", v7);

  v8 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
  v9 = swift_allocObject(v8, 56, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100077F80;
  v10 = sub_10004D168();
  v11 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v10);

  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
  v12 = sub_10004D2EC();
  v13 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v12);

  *(_QWORD *)(v9 + 48) = v13;
  specialized Array._endMutation()(v14);
  sub_10000D5F4(0, (unint64_t *)&unk_10009CB00, UIBarButtonItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v1, "setToolbarItems:", isa);

  v16 = objc_msgSend(v1, "view");
  if (!v16)
  {
    __break(1u);
    goto LABEL_12;
  }
  v17 = v16;
  v18 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v17, "setBackgroundColor:", v18);

  v19 = objc_msgSend(v1, "view");
  if (!v19)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v20 = v19;
  v21 = sub_10004D0A4();
  objc_msgSend(v20, "addSubview:", v21);

  v22 = objc_msgSend(v1, "view");
  if (!v22)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v23 = v22;
  v24 = *(void **)&v1[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_activityIndicator];
  objc_msgSend(v22, "addSubview:", v24);

  v25 = objc_msgSend(v1, "view");
  if (!v25)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v26 = v25;
  v27 = sub_10004D168();
  objc_msgSend(v26, "addSubview:", v27);

  v28 = objc_msgSend(v1, "view");
  if (!v28)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v29 = v28;
  v30 = sub_10004D2EC();
  objc_msgSend(v29, "addSubview:", v30);

  v31 = sub_10004D0A4();
  objc_msgSend(v31, "setUserInteractionEnabled:", 1);

  v32 = sub_10004D0A4();
  v33 = sub_10004D490();
  objc_msgSend(v32, "addGestureRecognizer:", v33);

  v34 = sub_10004D0A4();
  v35 = sub_10004E730();
  objc_msgSend(v34, "addInteraction:", v35);

  v36 = swift_allocObject(v8, 80, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100077F90;
  v37 = sub_10004D0A4();
  v38 = objc_msgSend(v37, "leftAnchor");

  v39 = objc_msgSend(v1, "view");
  if (!v39)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, "leftAnchor");

  v42 = objc_msgSend(v38, "constraintEqualToAnchor:", v41);
  *(_QWORD *)(v36 + 32) = v42;
  v43 = sub_10004D0A4();
  v44 = objc_msgSend(v43, "rightAnchor");

  v45 = objc_msgSend(v1, "view");
  if (!v45)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v46 = v45;
  v47 = objc_msgSend(v45, "rightAnchor");

  v48 = objc_msgSend(v44, "constraintEqualToAnchor:", v47);
  *(_QWORD *)(v36 + 40) = v48;
  v49 = sub_10004D0A4();
  v50 = objc_msgSend(v49, "centerYAnchor");

  v51 = objc_msgSend(v1, "view");
  if (!v51)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v52 = v51;
  v53 = objc_msgSend(v51, "safeAreaLayoutGuide");

  v54 = objc_msgSend(v53, "centerYAnchor");
  v55 = objc_msgSend(v50, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v36 + 48) = v55;
  v56 = sub_10004D0A4();
  v57 = objc_msgSend(v56, "topAnchor");

  v58 = objc_msgSend(v1, "view");
  if (v58)
  {
    v59 = v58;
    v60 = (void *)objc_opt_self(NSLayoutConstraint);
    v61 = objc_msgSend(v59, "safeAreaLayoutGuide");

    v62 = objc_msgSend(v61, "topAnchor");
    v63 = objc_msgSend(v57, "constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:", v62, 1.0);

    *(_QWORD *)(v36 + 56) = v63;
    v64 = objc_msgSend(v24, "centerXAnchor");
    v65 = sub_10004D0A4();
    v66 = objc_msgSend(v65, "centerXAnchor");

    v67 = objc_msgSend(v64, "constraintEqualToAnchor:", v66);
    *(_QWORD *)(v36 + 64) = v67;
    v68 = objc_msgSend(v24, "centerYAnchor");
    v69 = sub_10004D0A4();
    v70 = objc_msgSend(v69, "centerYAnchor");

    v71 = objc_msgSend(v68, "constraintEqualToAnchor:", v70);
    *(_QWORD *)(v36 + 72) = v71;
    specialized Array._endMutation()(v72);
    sub_10000D5F4(0, (unint64_t *)&qword_10009B0D0, NSLayoutConstraint_ptr);
    v73 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v36);
    objc_msgSend(v60, "activateConstraints:", v73);

    v74 = sub_10004D490();
    objc_msgSend(v74, "setEnabled:", 0);

    v75 = sub_10004D2EC();
    objc_msgSend(v75, "setEnabled:", 0);

    v76 = sub_10004D0A4();
    (*(void (**)(uint64_t))((swift_isaMask & *v76) + 0xE0))(1);

    return;
  }
LABEL_19:
  __break(1u);
}

void sub_10004DDA0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;
  id v15;
  NSIndexSet *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void (*v20)(__n128);
  __n128 v21;
  uint64_t v22;
  id v23;
  id v24;
  NSIndexSet *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void (*v29)(__n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for IndexSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004D0A4();
  objc_msgSend(a1, "locationInView:", v8);
  v10 = v9;
  v12 = v11;

  v13 = sub_10004E730();
  v14 = objc_msgSend(v13, "subjectIndexAtPoint:", v10, v12);

  v15 = sub_10004E730();
  if (v14)
  {
    IndexSet.init(integer:)(objc_msgSend(v14, "integerValue"));
    IndexSet._bridgeToObjectiveC()(v16);
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v15, "highlightSubjectAtIndexSet:showCallout:showBurst:burstPoint:animated:", v18, 0, 0, 1, 0.0, 0.0);

    v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache);
    if (v19)
    {
      v20 = *(void (**)(__n128))(*(_QWORD *)v19 + 136);
      v21 = swift_retain(v19);
      v20(v21);
      swift_release(v19, v22);
    }

  }
  else
  {
    v23 = sub_10004E730();
    v24 = objc_msgSend(v23, "allSubjectIndexes");

    static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v24);
    IndexSet._bridgeToObjectiveC()(v25);
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v15, "highlightSubjectAtIndexSet:showCallout:showBurst:burstPoint:animated:", v27, 0, 0, 1, 0.0, 0.0);

    v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache);
    if (v28)
    {
      v29 = *(void (**)(__n128))(*(_QWORD *)v28 + 136);
      v30 = swift_retain(v28);
      v29(v30);
      swift_release(v28, v31);
    }
  }
}

void sub_10004E020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void (*v6)(_BYTE *, _QWORD);
  BOOL *v7;
  id v8;
  id v9;
  uint64_t v10;
  void (*v11)(__n128);
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  id v17;
  id v18;
  NSIndexSet *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void (*v23)(__n128);
  __n128 v24;
  uint64_t v25;
  _BYTE v26[32];

  v1 = v0;
  v2 = type metadata accessor for IndexSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = (void (*)(_BYTE *, _QWORD))dispatch thunk of LiveButton.isLive.modify(v26);
  *v7 = !*v7;
  v6(v26, 0);
  v8 = sub_10004D490();
  objc_msgSend(v8, "setEnabled:", (dispatch thunk of LiveButton.isLive.getter() & 1) == 0);

  if ((dispatch thunk of LiveButton.isLive.getter() & 1) != 0)
  {
    v9 = sub_10004E730();
    objc_msgSend(v9, "highlightSubjectAtIndexSet:showCallout:showBurst:burstPoint:animated:", 0, 0, 0, 1, 0.0, 0.0);

    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache);
    if (v10)
    {
      v11 = *(void (**)(__n128))(*(_QWORD *)v10 + 136);
      v12 = swift_retain(*(_QWORD *)(v1
                                   + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache));
      v11(v12);
      swift_release(v10, v13);
    }
    v14 = sub_10004D0A4();
    (*(void (**)(void))((swift_isaMask & *v14) + 0x110))();

  }
  else
  {
    v15 = sub_10004D0A4();
    (*(void (**)(void))((swift_isaMask & *v15) + 0x120))();

    v16 = sub_10004E730();
    v17 = sub_10004E730();
    v18 = objc_msgSend(v17, "allSubjectIndexes");

    static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v18);
    IndexSet._bridgeToObjectiveC()(v19);
    v21 = v20;
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v16, "highlightSubjectAtIndexSet:showCallout:showBurst:burstPoint:animated:", v21, 0, 0, 1, 0.0, 0.0);

    v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache);
    if (v22)
    {
      v23 = *(void (**)(__n128))(*(_QWORD *)v22 + 136);
      v24 = swift_retain(v22);
      v23(v24);
      swift_release(v22, v25);
    }
  }
}

uint64_t sub_10004E2A8(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  objc_super v46;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v42 = (char *)&v40 - v8;
  v44 = sub_10000A66C(&qword_10009CAB0);
  v9 = *(_QWORD *)(v44 - 8);
  v10 = __chkstk_darwin(v44);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v40 - v13;
  v15 = (objc_class *)type metadata accessor for StickerLivePhotoConfirmationController(0);
  v46.receiver = v2;
  v46.super_class = v15;
  objc_msgSendSuper2(&v46, "viewWillDisappear:", a1 & 1);
  v16 = sub_10000A66C((uint64_t *)&unk_10009CB10);
  v17 = *(_QWORD *)(v9 + 72);
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v16, v19 + 2 * v17, v18 | 7);
  *(_OWORD *)(v20 + 16) = xmmword_100078E10;
  v43 = v20;
  v21 = v20 + v19;
  v22 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x180))();
  if (v22)
  {
    v23 = (void *)v22;
    Sticker.identifier.getter(v22);

    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v21, v24, 1, v4);
  v26 = v21 + v17;
  (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x198))(v25);
  sub_10002E23C(v21, (uint64_t)v14, &qword_10009CAB0);
  sub_10004692C((uint64_t)v14, (uint64_t)v12, &qword_10009CAB0);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v27(v12, 1, v4) == 1)
  {
    sub_10002E2B4((uint64_t)v12, &qword_10009CAB0);
    v28 = (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    v41 = v21;
    v29 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v30 = v42;
    v29(v42, v12, v4);
    v29(v45, v30, v4);
    v28 = (char *)_swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v28 = (char *)sub_1000529F0(0, _swiftEmptyArrayStorage[2] + 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    v32 = *((_QWORD *)v28 + 2);
    v31 = *((_QWORD *)v28 + 3);
    if (v32 >= v31 >> 1)
      v28 = (char *)sub_1000529F0(v31 > 1, v32 + 1, 1, (unint64_t)v28);
    *((_QWORD *)v28 + 2) = v32 + 1;
    v29(&v28[((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v32], v45, v4);
    v21 = v41;
  }
  sub_10002E23C(v26, (uint64_t)v14, &qword_10009CAB0);
  sub_10004692C((uint64_t)v14, (uint64_t)v12, &qword_10009CAB0);
  if (v27(v12, 1, v4) == 1)
  {
    sub_10002E2B4((uint64_t)v12, &qword_10009CAB0);
  }
  else
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v34 = v42;
    v33(v42, v12, v4);
    v33(v45, v34, v4);
    v35 = v21;
    if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
      v28 = (char *)sub_1000529F0(0, *((_QWORD *)v28 + 2) + 1, 1, (unint64_t)v28);
    v37 = *((_QWORD *)v28 + 2);
    v36 = *((_QWORD *)v28 + 3);
    if (v37 >= v36 >> 1)
      v28 = (char *)sub_1000529F0(v36 > 1, v37 + 1, 1, (unint64_t)v28);
    *((_QWORD *)v28 + 2) = v37 + 1;
    v33(&v28[((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v37], v45, v4);
    v21 = v35;
  }
  v38 = v43;
  swift_setDeallocating(v43);
  swift_arrayDestroy(v21, *(_QWORD *)(v38 + 16), v44);
  swift_deallocClassInstance(v38, 32, 7);
  type metadata accessor for Sticker(0);
  static Sticker.removeStickers(_:)((uint64_t)v28);
  return swift_bridgeObjectRelease(v28);
}

id sub_10004E720()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util);
}

id sub_10004E730()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___imageAnalysisInteraction;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___imageAnalysisInteraction);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___imageAnalysisInteraction);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)VKCImageAnalysisInteraction), "init");
    objc_msgSend(v3, "setDelegate:", v0);
    objc_msgSend(v3, "setSubjectViewUserInteractionDisabled:", 1);
    v4 = sub_10004D0A4();
    objc_msgSend(v4, "addInteraction:", v3);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util), "setUsesLightDimmingViewInLightModeForImageAnalysisInteraction:", v3);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10004E7FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___imageAnalyzer;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___imageAnalyzer);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___imageAnalyzer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)VKCImageAnalyzer), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_10004E86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[45] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[46] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[47] = v6;
  v4[48] = v7;
  return swift_task_switch(sub_10004E8D8, v6, v7);
}

uint64_t sub_10004E8D8()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v1 = *(_QWORD **)(v0 + 360);
  v2 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x150))();
  v3 = objc_msgSend(v2, "videoAsset");

  v4 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x1B8))(v3);
  v5 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x1B0))(v4);
  *(_QWORD *)(v0 + 392) = v5;
  if (v5)
  {
    v7 = (void *)v5;
    *(_QWORD *)(v0 + 56) = v0 + 336;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_10004EA1C;
    *(_QWORD *)(v0 + 312) = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 280) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 288) = 0x40000000;
    *(_QWORD *)(v0 + 296) = sub_10004F8BC;
    *(_QWORD *)(v0 + 304) = &unk_10008D520;
    objc_msgSend(v7, "loadTracksWithMediaType:completionHandler:", AVMediaTypeVideo, v0 + 280);
    return swift_continuation_await(v0 + 16);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 368), v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10004EA1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 400) = v2;
  if (v2)
    v3 = sub_10004F128;
  else
    v3 = sub_10004EA78;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 376), *(_QWORD *)(v1 + 384));
}

void sub_10004EA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 336);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v11 = *(_QWORD *)(v0 + 336);
    else
      v11 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 336));
    v2 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      goto LABEL_7;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      goto LABEL_7;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v3 = *(id *)(v1 + 32);
  }
  v2 = (uint64_t)v3;
LABEL_7:
  swift_bridgeObjectRelease(v1);
  v4 = *(_QWORD **)(v0 + 360);
  v5 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x1D0))(v2);
  v6 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x1C8))(v5);
  *(_QWORD *)(v0 + 408) = v6;
  if (v6)
  {
    sub_10000A66C(&qword_10009CC28);
    v8 = static AVPartialAsyncProperty<A>.preferredTransform.getter();
    *(_QWORD *)(v0 + 416) = v8;
    v9 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
    *(_QWORD *)(v0 + 424) = v9;
    *v9 = v0;
    v9[1] = sub_10004EBE8;
    AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 136, v8);
  }
  else
  {
    v10 = *(void **)(v0 + 392);
    swift_release(*(_QWORD *)(v0 + 368), v7);

    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10004EBE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 424);
  *(_QWORD *)(*(_QWORD *)v1 + 432) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v5 = v2[47];
    v6 = v2[48];
    v7 = sub_10004F300;
  }
  else
  {
    swift_release(v2[52], v4);
    v5 = v2[47];
    v6 = v2[48];
    v7 = sub_10004EC54;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_10004EC54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD **)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 440) = v2;
  *(_QWORD *)(v0 + 448) = v3;
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 456) = v4;
  *(_QWORD *)(v0 + 464) = v5;
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 472) = v6;
  *(_QWORD *)(v0 + 480) = v7;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v3;
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = v6;
  *(_QWORD *)(v0 + 120) = v7;
  *(_BYTE *)(v0 + 128) = 0;
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x1E8))(v0 + 80);
  sub_10000A66C(&qword_10009CC30);
  v8 = static AVPartialAsyncProperty<A>.naturalSize.getter();
  *(_QWORD *)(v0 + 488) = v8;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
  *(_QWORD *)(v0 + 496) = v9;
  *v9 = v0;
  v9[1] = sub_10004ED28;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 320, v8);
}

uint64_t sub_10004ED28()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 496);
  *(_QWORD *)(*(_QWORD *)v1 + 504) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v5 = v2[47];
    v6 = v2[48];
    v7 = sub_10004F4E4;
  }
  else
  {
    swift_release(v2[61], v4);
    v5 = v2[47];
    v6 = v2[48];
    v7 = sub_10004ED94;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_10004ED94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  CGFloat v4;
  CGFloat v5;
  CGSize v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;
  __int128 v11;
  CGSize v12;

  v2 = *(_QWORD *)(v0 + 472);
  v1 = *(_QWORD *)(v0 + 480);
  v10 = *(_OWORD *)(v0 + 440);
  v11 = *(_OWORD *)(v0 + 456);
  v3 = *(_QWORD **)(v0 + 360);
  v4 = *(double *)(v0 + 320);
  v5 = *(double *)(v0 + 328);
  (*(void (**)(CGFloat, CGFloat, _QWORD))((swift_isaMask & *v3) + 0x200))(COERCE_CGFLOAT(*(_QWORD *)&v4), COERCE_CGFLOAT(*(_QWORD *)&v5), 0);
  *(_OWORD *)(v0 + 232) = v10;
  *(_OWORD *)(v0 + 248) = v11;
  *(_QWORD *)(v0 + 264) = v2;
  *(_QWORD *)(v0 + 272) = v1;
  v12.width = v4;
  v12.height = v5;
  v6 = CGSizeApplyAffineTransform(v12, (CGAffineTransform *)(v0 + 232));
  (*(void (**)(uint64_t, uint64_t, _QWORD))((swift_isaMask & *v3) + 0x218))(*(_QWORD *)&v6.width & 0x7FFFFFFFFFFFFFFFLL, *(_QWORD *)&v6.height & 0x7FFFFFFFFFFFFFFFLL, 0);
  sub_10000A66C(&qword_10009CC38);
  v7 = static AVPartialAsyncProperty<A>.formatDescriptions.getter();
  *(_QWORD *)(v0 + 512) = v7;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to AVAsynchronousKeyValueLoading.load<A>(_:)[1]);
  *(_QWORD *)(v0 + 520) = v8;
  *v8 = v0;
  v8[1] = sub_10004EEC4;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 352, v7);
}

uint64_t sub_10004EEC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 520);
  *(_QWORD *)(*(_QWORD *)v1 + 528) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v5 = v2[47];
    v6 = v2[48];
    v7 = sub_10004F6CC;
  }
  else
  {
    swift_release(v2[64], v4);
    v5 = v2[47];
    v6 = v2[48];
    v7 = sub_10004EF30;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_10004EF30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  const opaqueCMFormatDescription *v9;
  const opaqueCMFormatDescription *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  CMVideoDimensions Dimensions;
  CGSize v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  CGSize v21;

  result = swift_release(*(_QWORD *)(v2 + 368), a2);
  v4 = *(_QWORD *)(v2 + 352);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v18 = *(_QWORD *)(v2 + 352);
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 352));
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    result = swift_bridgeObjectRelease(v4);
    if (!v5)
      goto LABEL_7;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      goto LABEL_7;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
  }
  else
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v6 = *(id *)(v4 + 32);
  }
  v5 = (uint64_t)v6;
LABEL_7:
  swift_bridgeObjectRelease(v4);
  v7 = *(_QWORD **)(v2 + 360);
  v8 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v7) + 0x230))(v5);
  v9 = (const opaqueCMFormatDescription *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v7) + 0x228))(v8);
  if (v9)
  {
    v10 = v9;
    v12 = *(_QWORD *)(v2 + 472);
    v11 = *(_QWORD *)(v2 + 480);
    v19 = *(_OWORD *)(v2 + 440);
    v20 = *(_OWORD *)(v2 + 456);
    v13 = *(void **)(v2 + 408);
    v14 = *(void **)(v2 + 392);
    v15 = *(_QWORD **)(v2 + 360);
    Dimensions = CMVideoFormatDescriptionGetDimensions(v9);
    (*(void (**)(CMVideoDimensions, _QWORD))((swift_isaMask & *v15) + 0x248))(Dimensions, 0);
    (*(void (**)(double, double, _QWORD))((swift_isaMask & *v15) + 0x260))((double)Dimensions.width, (double)(*(uint64_t *)&Dimensions >> 32), 0);
    *(_OWORD *)(v2 + 184) = v19;
    *(_OWORD *)(v2 + 200) = v20;
    *(_QWORD *)(v2 + 216) = v12;
    *(_QWORD *)(v2 + 224) = v11;
    v21.width = (double)Dimensions.width;
    v21.height = (double)(*(uint64_t *)&Dimensions >> 32);
    v17 = CGSizeApplyAffineTransform(v21, (CGAffineTransform *)(v2 + 184));
    (*(void (**)(uint64_t, uint64_t, _QWORD))((swift_isaMask & *v15) + 0x278))(*(_QWORD *)&v17.width & 0x7FFFFFFFFFFFFFFFLL, *(_QWORD *)&v17.height & 0x7FFFFFFFFFFFFFFFLL, 0);

  }
  else
  {
    v13 = *(void **)(v2 + 408);
    v14 = *(void **)(v2 + 392);
  }

  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004F128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(void **)(v2 + 392);
  v4 = swift_release(*(_QWORD *)(v2 + 368), a2);
  swift_willThrow(v4);

  v5 = *(_QWORD *)(v2 + 400);
  if (qword_10009EFF0 != -1)
    swift_once(&qword_10009EFF0, sub_10004B5B4);
  v6 = type metadata accessor for Logger(0);
  sub_10000D130(v6, (uint64_t)qword_10009EFF8);
  swift_errorRetain(v5);
  v7 = swift_errorRetain(v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v5);
    v12 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v2 + 344) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 344, v2 + 352, v10 + 4, v10 + 12);
    *v11 = v12;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error retrieving asset properties: %@", v10, 0xCu);
    v13 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004F300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(void **)(v2 + 408);
  v4 = *(_QWORD *)(v2 + 416);
  v5 = *(void **)(v2 + 392);
  swift_release(*(_QWORD *)(v2 + 368), a2);
  swift_release(v4, v6);

  v7 = *(_QWORD *)(v2 + 432);
  if (qword_10009EFF0 != -1)
    swift_once(&qword_10009EFF0, sub_10004B5B4);
  v8 = type metadata accessor for Logger(0);
  sub_10000D130(v8, (uint64_t)qword_10009EFF8);
  swift_errorRetain(v7);
  v9 = swift_errorRetain(v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v7);
    v14 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v2 + 344) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 344, v2 + 352, v12 + 4, v12 + 12);
    *v13 = v14;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error retrieving asset properties: %@", v12, 0xCu);
    v15 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004F4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(v2 + 488);
  v4 = *(void **)(v2 + 408);
  v5 = *(void **)(v2 + 392);
  swift_release(*(_QWORD *)(v2 + 368), a2);
  swift_release(v3, v6);

  v7 = *(_QWORD *)(v2 + 504);
  if (qword_10009EFF0 != -1)
    swift_once(&qword_10009EFF0, sub_10004B5B4);
  v8 = type metadata accessor for Logger(0);
  sub_10000D130(v8, (uint64_t)qword_10009EFF8);
  swift_errorRetain(v7);
  v9 = swift_errorRetain(v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v7);
    v14 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v2 + 344) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 344, v2 + 352, v12 + 4, v12 + 12);
    *v13 = v14;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error retrieving asset properties: %@", v12, 0xCu);
    v15 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004F6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(v2 + 512);
  v4 = *(void **)(v2 + 408);
  v5 = *(void **)(v2 + 392);
  swift_release(*(_QWORD *)(v2 + 368), a2);
  swift_release(v3, v6);

  v7 = *(_QWORD *)(v2 + 528);
  if (qword_10009EFF0 != -1)
    swift_once(&qword_10009EFF0, sub_10004B5B4);
  v8 = type metadata accessor for Logger(0);
  sub_10000D130(v8, (uint64_t)qword_10009EFF8);
  swift_errorRetain(v7);
  v9 = swift_errorRetain(v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v7);
    v14 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v2 + 344) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 344, v2 + 352, v12 + 4, v12 + 12);
    *v13 = v14;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error retrieving asset properties: %@", v12, 0xCu);
    v15 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004F8BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_10000A66C(&qword_10009BF88);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v11 = sub_10000D5F4(0, &qword_10009CC40, AVAssetTrack_ptr);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    return swift_continuation_throwingResume(v3);
  }
}

void sub_10004F964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  NSString v31;
  NSURL *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _QWORD aBlock[5];
  uint64_t v44;

  v1 = v0;
  v2 = sub_10000A66C(&qword_10009AFF0);
  __chkstk_darwin(v2);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)aBlock - v10;
  v12 = sub_10004E730();
  objc_msgSend(v12, "setAnalysis:", 0);

  v13 = objc_msgSend((id)objc_opt_self(PHPhotoLibrary), "systemPhotoLibraryURL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v13);

  v15 = URL.absoluteString.getter(v14);
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v5);
  URL.init(string:)(v15, v17);
  swift_bridgeObjectRelease(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10002E2B4((uint64_t)v4, &qword_10009AFF0);
    if (qword_10009EFF0 != -1)
      swift_once(&qword_10009EFF0, sub_10004B5B4);
    v19 = type metadata accessor for Logger(0);
    v20 = sub_10000D130(v19, (uint64_t)qword_10009EFF8);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Cannot create Photo Library URL", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    v24 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_localIdentifier
                    + 8);
    v25 = *(void **)(v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_image);
    swift_bridgeObjectRetain(v24);
    objc_msgSend(v25, "size");
    v27 = v26;
    v29 = v28;
    v30 = objc_allocWithZone((Class)VKCImageAnalyzerRequest);
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    URL._bridgeToObjectiveC()(v32);
    v34 = v33;
    v35 = objc_msgSend(v30, "initWithLocalIdentifier:photoLibraryURL:imageSize:requestType:", v31, v33, 32, v27, v29);

    v36 = sub_10004E7FC();
    if (v35)
    {
      v37 = v36;
      v38 = swift_allocObject(&unk_10008D3C8, 24, 7);
      swift_unknownObjectWeakInit(v38 + 16, v1);
      aBlock[4] = sub_100054D90;
      v44 = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10000C1E0;
      aBlock[3] = &unk_10008D538;
      v39 = _Block_copy(aBlock);
      v40 = v44;
      v41 = v35;
      swift_release(v40, v42);
      objc_msgSend(v37, "processRequest:progressHandler:completionHandler:", v41, 0, v39);
      _Block_release(v39);

      v18(v11, v5);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10004FD1C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10004FD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_10009CAD4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10002D3C8;
  return sub_10004E86C((uint64_t)v3, v4, v5, v2);
}

uint64_t type metadata accessor for StickerLivePhotoConfirmationController.AddStickerError(uint64_t a1)
{
  return sub_10003D580(a1, (uint64_t *)&unk_10009F460, (uint64_t)&nominal type descriptor for StickerLivePhotoConfirmationController.AddStickerError);
}

uint64_t sub_10004FDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StickerLivePhotoConfirmationController.AddStickerError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004FDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  char *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  const void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;
  char v32[24];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v13 = (char *)result;
    v14 = sub_10004E730();
    objc_msgSend(v14, "setAnalysis:", a1);

    v15 = sub_10004E730();
    objc_msgSend(v15, "set_photosImageForRemoveBackground:", *(_QWORD *)&v13[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_image]);

    v16 = sub_10004E730();
    objc_msgSend(v16, "setActiveInteractionTypes:", 8);

    sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
    v17 = (void *)static OS_dispatch_queue.main.getter();
    v18 = swift_allocObject(&unk_10008D570, 24, 7);
    *(_QWORD *)(v18 + 16) = v13;
    aBlock[4] = sub_100054D98;
    v31 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000C1B4;
    aBlock[3] = &unk_10008D588;
    v19 = _Block_copy(aBlock);
    v29 = v8;
    v20 = v5;
    v21 = v19;
    v22 = v31;
    v23 = v13;
    v25 = swift_release(v22, v24);
    static DispatchQoS.unspecified.getter(v25);
    aBlock[0] = _swiftEmptyArrayStorage;
    v26 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v27 = sub_10000A66C(&qword_10009B198);
    v28 = sub_10000D6D4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v4, v26);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  }
  return result;
}

void sub_100050080()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  NSIndexSet *v10;
  void *v11;
  void *v12;
  Class isa;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for IndexSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util];
  v7 = sub_10004E730();
  v8 = sub_10004E730();
  v9 = objc_msgSend(v8, "allSubjectIndexes");

  static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v9);
  IndexSet._bridgeToObjectiveC()(v10);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for UUID(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = swift_allocObject(&unk_10008D080, 24, 7);
  *(_QWORD *)(v14 + 16) = v1;
  aBlock[4] = sub_100053000;
  v20 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000BAF8;
  aBlock[3] = &unk_10008D098;
  v15 = _Block_copy(aBlock);
  v16 = v20;
  v17 = v1;
  swift_release(v16, v18);
  objc_msgSend(v6, "imageAnalysisInteraction:createStickerRepresentationsAtIndexSet:type:stickerIDs:progress:completion:", v7, v12, 5, isa, 0, v15);

  _Block_release(v15);
}

void sub_10005021C(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(void *);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  void **v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjectType;
  id v52;
  uint64_t (*v53)(uint64_t, unint64_t, unint64_t, double, double);
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  NSObject *v59;
  NSIndexSet *v60;
  void *v61;
  void *v62;
  Class isa;
  _QWORD *v64;
  void *v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  void *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  char *v80;
  NSObject *v81;
  void **aBlock;
  uint64_t v83;
  void *v84;
  void *v85;
  void *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD v89[3];
  char v90[16];

  v6 = type metadata accessor for IndexSet(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v81 = ((char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v80 = (char *)&v74 - v14;
  v15 = sub_10000A66C(&qword_10009CAB0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v74 - v19;
  if (a1)
  {
    v75 = v13;
    v76 = v7;
    v77 = v6;
    v21 = *(void (**)(void *))((swift_isaMask & *a3) + 0x188);
    v22 = a1;
    v21(a1);
    Sticker.companionRecentUUID()((uint64_t)v20);
    (*(void (**)(char *))((swift_isaMask & *a3) + 0x1A0))(v20);
    v23 = sub_10000A66C(qword_10009CC10);
    v24 = *(_QWORD *)(v10 + 72);
    v25 = *(unsigned __int8 *)(v10 + 80);
    v26 = (v25 + 32) & ~v25;
    v27 = swift_allocObject(v23, v26 + v24, v25 | 7);
    *(_OWORD *)(v27 + 16) = xmmword_100078550;
    v78 = v22;
    v28 = Sticker.identifier.getter(v27);
    (*(void (**)(uint64_t))((swift_isaMask & *a3) + 0x198))(v28);
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9);
    v79 = v9;
    if (v29 == 1)
    {
      v30 = sub_10002E2B4((uint64_t)v18, &qword_10009CAB0);
    }
    else
    {
      v39 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v40 = v80;
      v39(v80, v18, v9);
      v41 = v75;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v75, v40, v9);
      v43 = *(_QWORD *)(v27 + 16);
      v42 = *(_QWORD *)(v27 + 24);
      if (v43 >= v42 >> 1)
        v27 = sub_1000529F0(v42 > 1, v43 + 1, 1, v27);
      *(_QWORD *)(v27 + 16) = v43 + 1;
      v44 = v79;
      v39((char *)(v27 + v26 + v43 * v24), v41, v79);
      v30 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v80, v44);
    }
    v45 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a3) + 0x138))(v30);
    v48 = v76;
    v47 = v77;
    if (v45)
    {
      v49 = v45;
      v50 = v46;
      ObjectType = swift_getObjectType(v45);
      v52 = sub_10004E730();
      (*(void (**)(_QWORD *, id, uint64_t, uint64_t))(v50 + 16))(a3, v52, ObjectType, v50);

      swift_unknownObjectRelease(v49);
    }
    v53 = *(uint64_t (**)(uint64_t, unint64_t, unint64_t, double, double))((swift_isaMask & *a3)
                                                                                                + 0x390);
    swift_bridgeObjectRetain(v27);
    v54 = v53(0x6E69676562, 0xE500000000000000, v27, 0.0, 1.0);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(uint64_t, double))((swift_isaMask & *a3) + 0x3B0))(v54, 0.0);
    swift_bridgeObjectRelease(v54);
    v55 = *(void **)((char *)a3 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util);
    v56 = sub_10004E730();
    v57 = sub_10004E730();
    v58 = objc_msgSend(v57, "allSubjectIndexes");

    v59 = v81;
    static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v58);

    IndexSet._bridgeToObjectiveC()(v60);
    v62 = v61;
    (*(void (**)(NSObject *, uint64_t))(v48 + 8))(v59, v47);
    swift_bridgeObjectRetain(v27);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v27);
    v64 = (_QWORD *)swift_allocObject(&unk_10008D468, 40, 7);
    v64[2] = a3;
    v64[3] = v27;
    v64[4] = 0x3FF0000000000000;
    v86 = sub_100054B78;
    v87 = v64;
    aBlock = _NSConcreteStackBlock;
    v83 = 1107296256;
    v84 = sub_10005092C;
    v85 = &unk_10008D480;
    v65 = _Block_copy(&aBlock);
    v66 = v87;
    swift_bridgeObjectRetain(v27);
    v67 = a3;
    swift_release(v66, v68);
    v69 = (_QWORD *)swift_allocObject(&unk_10008D4B8, 40, 7);
    v69[2] = v67;
    v69[3] = v27;
    v69[4] = 0x3FF0000000000000;
    v86 = sub_100054C2C;
    v87 = v69;
    aBlock = _NSConcreteStackBlock;
    v83 = 1107296256;
    v84 = sub_10000BAF8;
    v85 = &unk_10008D4D0;
    v70 = _Block_copy(&aBlock);
    v71 = v87;
    v72 = v67;
    swift_release(v71, v73);
    objc_msgSend(v55, "imageAnalysisInteraction:createStickerRepresentationsAtIndexSet:type:stickerIDs:progress:completion:", v56, v62, 2, isa, v65, v70);

    _Block_release(v70);
    _Block_release(v65);

  }
  else if (a2)
  {
    swift_errorRetain(a2);
    if (qword_10009EFF0 != -1)
      swift_once(&qword_10009EFF0, sub_10004B5B4);
    v31 = type metadata accessor for Logger(0);
    sub_10000D130(v31, (uint64_t)qword_10009EFF8);
    swift_errorRetain(a2);
    v32 = swift_errorRetain(a2);
    v81 = Logger.logObject.getter(v32);
    v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v81, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = (void **)swift_slowAlloc(32, -1);
      aBlock = v35;
      *(_DWORD *)v34 = 136315138;
      swift_getErrorValue(a2, v90, v89);
      v36 = Error.localizedDescription.getter(v89[1], v89[2]);
      v38 = v37;
      v88 = sub_10000C99C(v36, v37, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, v89, v34 + 4, v34 + 12);
      swift_bridgeObjectRelease(v38);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v81, v33, "Unable to save sticker to store: %s", v34, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
}

uint64_t sub_10005092C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, double);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(void (**)(uint64_t, double))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = type metadata accessor for UUID(0);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v7);
  swift_retain(v5);
  v6(v8, a3);
  swift_release(v5, v9);
  return swift_bridgeObjectRelease(v8);
}

unint64_t sub_100050998(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t inited;
  float v12;
  uint64_t v14;

  v10 = sub_10000A66C(&qword_10009B860);
  inited = swift_initStackObject(v10, &v14);
  *(_OWORD *)(inited + 16) = xmmword_100078A10;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  strcpy((char *)(inited + 80), "stickerScore");
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  *(double *)(inited + 96) = a5;
  *(_QWORD *)(inited + 120) = &type metadata for Double;
  *(_QWORD *)(inited + 128) = 0x73736572676F7270;
  *(_QWORD *)(inited + 136) = 0xE800000000000000;
  v12 = a4;
  *(float *)(inited + 144) = v12;
  *(_QWORD *)(inited + 168) = &type metadata for Float;
  *(_QWORD *)(inited + 176) = 0x4972656B63697473;
  *(_QWORD *)(inited + 184) = 0xEA00000000007344;
  *(_QWORD *)(inited + 216) = sub_10000A66C((uint64_t *)&unk_10009CB20);
  *(_QWORD *)(inited + 192) = a3;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  return sub_10001BE1C(inited);
}

void sub_100050ACC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  NSIndexSet *v27;
  void *v28;
  void *v29;
  Class isa;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  _QWORD aBlock[5];
  uint64_t v39;

  v1 = v0;
  v2 = type metadata accessor for IndexSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10000A66C(&qword_10009CAB0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x180))(v7);
  if (v10)
  {
    v11 = (void *)v10;
    if ((dispatch thunk of LiveButton.isLive.getter() & 1) != 0)
    {
      (*(void (**)(_QWORD))((swift_isaMask & *v0) + 0x188))(0);
      v12 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
      (*(void (**)(char *))((swift_isaMask & *v0) + 0x1A0))(v9);
      v13 = sub_10004D0A4();
      (*(void (**)(void))((swift_isaMask & *v13) + 0x118))();

      v14 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x138))();
      if (v14)
      {
        v16 = v14;
        v17 = v15;
        ObjectType = swift_getObjectType(v14);
        (*(void (**)(_QWORD *, _UNKNOWN **, void *, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8) + 24))(v1, &off_10008D0C0, v11, 1, ObjectType);

        swift_unknownObjectRelease(v16);
      }
      else
      {

      }
    }
    else
    {
      v23 = *(void **)((char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util);
      v24 = sub_10004E730();
      v25 = sub_10004E730();
      v26 = objc_msgSend(v25, "selectedSubjectIndexes");

      static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v26);
      IndexSet._bridgeToObjectiveC()(v27);
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      type metadata accessor for UUID(0);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v31 = swift_allocObject(&unk_10008D378, 24, 7);
      *(_QWORD *)(v31 + 16) = v1;
      aBlock[4] = sub_10005480C;
      v39 = v31;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10000BAF8;
      aBlock[3] = &unk_10008D390;
      v32 = _Block_copy(aBlock);
      v33 = v39;
      v34 = v1;
      swift_release(v33, v35);
      objc_msgSend(v23, "imageAnalysisInteraction:createStickerRepresentationsAtIndexSet:type:stickerIDs:progress:completion:", v24, v29, 5, isa, 0, v32);

      _Block_release(v32);
    }
  }
  else
  {
    if (qword_10009EFF0 != -1)
      swift_once(&qword_10009EFF0, sub_10004B5B4);
    v19 = type metadata accessor for Logger(0);
    v20 = sub_10000D130(v19, (uint64_t)qword_10009EFF8);
    v37 = Logger.logObject.getter(v20);
    v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v21, "We don't have a live photo sticker to confirm", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

  }
}

uint64_t sub_100050E90()
{
  _QWORD *v0;
  id v1;
  void *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v1 = objc_msgSend(v0, "presentedViewController");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 0, 0);

  }
  result = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x138))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, _UNKNOWN **, uint64_t))(*(_QWORD *)(v6 + 8) + 8))(v0, &off_10008D0C0, ObjectType);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_100050F48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  Class isa;
  _OWORD v12[2];

  v2 = type metadata accessor for Notification(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static NSNotificationName.stickerCreationProgress.getter(v4);
  memset(v12, 0, sizeof(v12));
  sub_100051038(a1);
  Notification.init(name:object:userInfo:)(v7, v12, v8);
  v9 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  isa = Notification._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v9, "postNotification:", isa);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_100051038(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[3];
  _OWORD v40[2];
  __int128 v41;
  _OWORD v42[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10000A66C(&qword_10009CC08);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v30 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v29)
      goto LABEL_37;
    v15 = *(_QWORD *)(v30 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v29)
        goto LABEL_37;
      v15 = *(_QWORD *)(v30 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v29)
          goto LABEL_37;
        v15 = *(_QWORD *)(v30 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v29)
            goto LABEL_37;
          v15 = *(_QWORD *)(v30 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    sub_10000D4C4(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v42);
    *(_QWORD *)&v41 = v20;
    *((_QWORD *)&v41 + 1) = v19;
    v39[2] = v41;
    v40[0] = v42[0];
    v40[1] = v42[1];
    *(_QWORD *)&v39[0] = v20;
    *((_QWORD *)&v39[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_dynamicCast(&v31, v39, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_1000119C8(v40, v34);
    v35 = v31;
    v36 = v32;
    v37 = v33;
    sub_1000119C8(v34, v38);
    v31 = v35;
    v32 = v36;
    v33 = v37;
    sub_1000119C8(v38, v39);
    sub_1000119C8(v39, &v35);
    v21 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v22 = -1 << *((_BYTE *)v3 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)&v7[8 * (v23 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)&v7[8 * (v23 >> 6)])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)&v7[8 * v24];
      }
      while (v28 == -1);
      v10 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v31;
    *(_OWORD *)(v11 + 16) = v32;
    *(_QWORD *)(v11 + 32) = v33;
    sub_1000119C8(&v35, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v29)
  {
LABEL_37:
    swift_release(v3, v8);
    sub_100054B40(a1, v30);
    return;
  }
  v15 = *(_QWORD *)(v30 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v29)
      goto LABEL_37;
    v15 = *(_QWORD *)(v30 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_1000513FC()
{
  _swift_stdlib_reportUnimplementedInitializer("StickersUltraExtension.StickerLivePhotoConfirmationController", 61, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_100051458()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StickerLivePhotoConfirmationController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

double PHLivePhotoView.intrinsicContentSize.getter()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;

  v1 = objc_msgSend(v0, "livePhoto");
  if (!v1)
    return 0.0;
  v2 = v1;
  objc_msgSend(v1, "size");
  v4 = v3;

  return v4;
}

void sub_100051714(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;

  v2 = v1;
  if (qword_10009EFF0 != -1)
    swift_once(&qword_10009EFF0, sub_10004B5B4);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10000D130(v4, (uint64_t)qword_10009EFF8);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "did complete subject analysis", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = objc_msgSend(a1, "isSubjectHighlightAvailable");
  if ((_DWORD)v9)
  {
    v10 = sub_10004D2EC();
    objc_msgSend(v10, "setEnabled:", 1);

    (*(void (**)(void))((swift_isaMask & *v2) + 0x388))();
    type metadata accessor for StickerUIPreviewCache();
    v11 = a1;
    v12 = sub_10000FBFC((uint64_t)a1);
    v13 = *(_QWORD *)((char *)v2
                    + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache);
    *(_QWORD *)((char *)v2
              + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache) = v12;
    swift_release(v13, v14);
  }
  else
  {
    v15 = Logger.logObject.getter(v9);
    v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "no subject highlight available", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    type metadata accessor for PhotoConfirmationTipHostingController(0);
    v18 = sub_10004D2EC();
    v19 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
    v20 = swift_allocObject(v19, 40, 7);
    *(_OWORD *)(v20 + 16) = xmmword_100077FA0;
    v21 = sub_10004D168();
    *(_QWORD *)(v20 + 32) = v21;
    specialized Array._endMutation()(v21);
    v22 = sub_10005D1A8((uint64_t)v18, v20);

    swift_bridgeObjectRelease(v20);
    if (v22)
    {
      objc_msgSend(v2, "presentViewController:animated:completion:", v22, 1, 0);

    }
  }
}

void sub_100051A0C(void *a1, void *a2)
{
  id v4;
  id v5;
  double v6;
  double v7;
  CGFloat v8;
  double v9;
  double v10;
  CGFloat Height;
  id v12;
  CGAffineTransform v13;
  CGRect v14;
  CGRect v15;

  v4 = objc_msgSend(a1, "sourceImage");
  objc_msgSend(a1, "compositionTime");
  v5 = sub_100051B9C(v4, *(uint64_t *)&v13.a, *(unint64_t *)&v13.b, *(uint64_t *)&v13.c, a2);
  objc_msgSend(a1, "renderSize");
  v7 = v6;
  objc_msgSend(v4, "extent");
  v8 = (v7 - CGRectGetWidth(v14)) * 0.5;
  objc_msgSend(a1, "renderSize");
  v10 = v9;
  objc_msgSend(v4, "extent");
  Height = CGRectGetHeight(v15);
  CGAffineTransformMakeTranslation(&v13, v8, (v10 - Height) * 0.5);
  v12 = objc_msgSend(v5, "imageByApplyingTransform:", &v13);
  objc_msgSend(a1, "finishWithImage:context:", v12, 0);

}

id sub_100051B9C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  _QWORD *v5;
  unsigned int v8;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v28;
  CGFloat v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  id v35;
  id v36;
  id v37;
  id v38;
  CGFloat rect;
  CGAffineTransform v41;
  _QWORD v42[7];
  CGAffineTransform v43;
  char v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v8 = a3;
  v11 = HIDWORD(a3);
  v12 = *(void **)((char *)v5 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util);
  v13 = sub_10004E730();
  *(_QWORD *)&v43.a = a2;
  *(_QWORD *)&v43.b = __PAIR64__(v11, v8);
  *(_QWORD *)&v43.c = a4;
  v14 = objc_msgSend(v12, "imageAnalysisInteraction:videoPreviewSubjectMatteAtCompositionTime:", v13, &v43);

  if (!v14)
    return objc_msgSend(objc_allocWithZone((Class)CIImage), "init");
  v15 = v14;
  objc_msgSend(a1, "extent");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  objc_msgSend(v15, "extent");
  x = v45.origin.x;
  y = v45.origin.y;
  width = v45.size.width;
  height = v45.size.height;
  v28 = v15;
  if (!CGRectIsEmpty(v45))
  {
    v46.origin.x = v17;
    v46.origin.y = v19;
    v46.size.width = v21;
    v46.size.height = v23;
    rect = v21;
    v29 = v19;
    v30 = v17;
    v31 = CGRectGetWidth(v46);
    v47.origin.x = x;
    v47.origin.y = y;
    v47.size.width = width;
    v47.size.height = height;
    v32 = v31 / CGRectGetWidth(v47);
    v48.origin.x = v30;
    v48.origin.y = v29;
    v48.size.width = rect;
    v48.size.height = v23;
    v33 = CGRectGetHeight(v48);
    v49.origin.x = x;
    v49.origin.y = y;
    v49.size.width = width;
    v49.size.height = height;
    v34 = CGRectGetHeight(v49);
    CGAffineTransformMakeScale(&v43, v32, v33 / v34);
    v28 = objc_msgSend(v15, "imageByApplyingTransform:", &v43);

  }
  (*(void (**)(_QWORD *__return_ptr))((swift_isaMask & *v5) + 0x1E0))(v42);
  sub_10004692C((uint64_t)v42, (uint64_t)&v43, (uint64_t *)&unk_10009CAB8);
  if ((v44 & 1) == 0)
  {
    v41 = v43;
    if ((vk_imageOrientationFromTransform(&v41) & 0xFFFFFFFFFFFFFFFCLL) == 4)
    {
      v35 = objc_msgSend(v28, "imageByApplyingCGOrientation:", 2);

      v28 = v35;
    }
  }
  v36 = objc_msgSend(a5, "CGColor");
  v37 = objc_msgSend(objc_allocWithZone((Class)CIColor), "initWithCGColor:", v36);

  v38 = sub_100053ADC((uint64_t)v37, a1, (uint64_t)v28);
  return v38;
}

id sub_100051E68(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(_QWORD *__return_ptr, __n128);
  __n128 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  double v9;
  char v10;
  double v11;
  double v12;
  _QWORD *v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  char v19;
  char v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v29;
  CGFloat v30;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  CGAffineTransform v52;
  _QWORD v53[5];
  void *v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;

  v2 = v1;
  v3 = *(_QWORD *)((char *)v1
                 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache);
  if (v3)
  {
    v4 = *(void (**)(_QWORD *__return_ptr, __n128))(*(_QWORD *)v3 + 120);
    v5 = swift_retain(v3);
    v4(v53, v5);
    swift_release(v3, v6);
    a1 = sub_10004692C((uint64_t)v53, (uint64_t)&v54, &qword_10009B0D8);
    v7 = v54;
  }
  else
  {
    v7 = 0;
  }
  if ((dispatch thunk of LiveButton.isLive.getter(a1) & 1) != 0)
  {
    *(double *)&v8 = COERCE_DOUBLE((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x270))());
    if ((v10 & 1) == 0)
    {
      v11 = *(double *)&v8;
      v12 = v9;
      v13 = sub_10004D0A4();
      v14 = COERCE_DOUBLE((*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x128))());
      v16 = v15;
      v18 = v17;
      v20 = v19;

      if ((v20 & 1) == 0)
      {
        v21 = *(void **)((char *)v2
                       + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util);
        v22 = sub_10004E730();
        v52.a = v14;
        v52.b = v16;
        v52.c = v18;
        v23 = objc_msgSend(v21, "imageAnalysisInteraction:videoPreviewSubjectMatteAtCompositionTime:", v22, &v52);

        if (v23)
        {
          v24 = v11;
          objc_msgSend(v23, "extent");
          x = v55.origin.x;
          y = v55.origin.y;
          width = v55.size.width;
          height = v55.size.height;
          v29 = v11 / CGRectGetWidth(v55);
          v56.origin.x = x;
          v56.origin.y = y;
          v56.size.width = width;
          v56.size.height = height;
          v30 = CGRectGetHeight(v56);
          CGAffineTransformMakeScale(&v52, v29, v12 / v30);
          v31 = objc_msgSend(v23, "imageByApplyingTransform:", &v52);
          v32 = sub_10004E730();
          objc_msgSend(v21, "videoPreviewNormalizedCropRectForImageAnalysisInteraction:", v32);
          v34 = v33;
          v36 = v35;
          v38 = v37;
          v40 = v39;

          v58.origin.x = 0.0;
          v58.origin.y = 0.0;
          v58.size.width = 0.0;
          v58.size.height = 0.0;
          v57.origin.x = v34;
          v57.origin.y = v36;
          v57.size.width = v38;
          v57.size.height = v40;
          if (CGRectEqualToRect(v57, v58))
          {
            if (qword_10009EFF0 != -1)
              swift_once(&qword_10009EFF0, sub_10004B5B4);
            v41 = type metadata accessor for Logger(0);
            v42 = sub_10000D130(v41, (uint64_t)qword_10009EFF8);
            v43 = Logger.logObject.getter(v42);
            v44 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v43, v44))
            {
              v45 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v45 = 0;
              _os_log_impl((void *)&_mh_execute_header, v43, v44, "Could not get video preview normalized crop rect.", v45, 2u);
              swift_slowDealloc(v45, -1, -1);
            }

          }
          else
          {
            v46 = objc_msgSend(v31, "imageByCroppingToRect:", v34 * v24, v36 * v12, v38 * v24, v40 * v12);
            v47 = objc_msgSend(objc_allocWithZone((Class)CIContext), "init");
            objc_msgSend(v46, "extent");
            v48 = objc_msgSend(v47, "createCGImage:fromRect:", v46);
            if (v48)
            {
              v49 = v48;
              v50 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v48);

              return v50;
            }
            else
            {

            }
          }
        }
      }
    }
  }
  return v7;
}

uint64_t sub_10005223C()
{
  _QWORD *v0;
  uint64_t v1;

  v0 = sub_10004D0A4();
  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128))();

  return v1;
}

void sub_1000522AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  CGFloat v6;
  void (*v7)(id *__return_ptr, __n128);
  __n128 v8;
  uint64_t v9;
  double v10;
  CGFloat Width;
  CGFloat v12;
  char v13;
  _QWORD *v14;
  char v15;
  char v16;
  uint64_t v17;
  double v18;
  char v19;
  CGFloat v20;
  double v21;
  uint64_t v22;
  double v23;
  char v24;
  double v25;
  double v26;
  _QWORD *v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  id v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  CGFloat v46;
  CGFloat Height;
  CGSize v48;
  CGFloat v49;
  CGFloat v50;
  CGSize v51;
  double v52;
  CGFloat v53;
  CGFloat v54;
  double MinX;
  double MinY;
  double MidY;
  double v58;
  double v59;
  double v60;
  CGFloat v61;
  double v62;
  CGFloat v63;
  CGFloat v64;
  CGAffineTransform v65;
  id v66[5];
  _QWORD v67[5];
  CGSize v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;

  v3 = v2;
  v5 = *(_QWORD *)((char *)v2
                 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache);
  v6 = 0.0;
  if (v5
    && (v7 = *(void (**)(id *__return_ptr, __n128))(*(_QWORD *)v5 + 120),
        v8 = swift_retain(v5),
        v7(v66, v8),
        swift_release(v5, v9),
        a1 = sub_10004692C((uint64_t)v66, (uint64_t)v67, &qword_10009B0D8),
        v67[0]))
  {
    v6 = *(double *)&v67[1];
    v10 = *(double *)&v67[2];
    Width = *(double *)&v67[3];
    v12 = *(double *)&v67[4];
    a1 = (uint64_t)sub_10000D190(v66);
    v13 = 0;
  }
  else
  {
    v13 = 1;
    v10 = 0.0;
    Width = 0.0;
    v12 = 0.0;
  }
  if ((dispatch thunk of LiveButton.isLive.getter(a1) & 1) != 0)
  {
    v14 = sub_10004D0A4();
    (*(void (**)(void))((swift_isaMask & *v14) + 0x128))();
    v16 = v15;

    if ((v16 & 1) == 0)
    {
      *(double *)&v17 = COERCE_DOUBLE((*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x270))());
      if ((v19 & 1) == 0)
      {
        v20 = *(double *)&v17;
        v21 = v18;
        *(double *)&v22 = COERCE_DOUBLE((*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x210))());
        if ((v24 & 1) == 0)
        {
          v25 = *(double *)&v22;
          v26 = v23;
          v27 = sub_10004D0A4();
          v6 = (*(double (**)(void))((swift_isaMask & *v27) + 0x138))();
          v10 = v28;
          Width = v29;
          v12 = v30;

          v31 = *(void **)((char *)v3
                         + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util);
          v32 = sub_10004E730();
          objc_msgSend(v31, "videoPreviewNormalizedCropRectForImageAnalysisInteraction:", v32);
          v34 = v33;
          v36 = v35;
          v38 = v37;
          v40 = v39;

          v82.origin.x = 0.0;
          v82.origin.y = 0.0;
          v82.size.width = 0.0;
          v82.size.height = 0.0;
          v60 = v36;
          v62 = v34;
          v69.origin.x = v34;
          v69.origin.y = v36;
          v58 = v40;
          v59 = v38;
          v69.size.width = v38;
          v69.size.height = v40;
          if (CGRectEqualToRect(v69, v82))
          {
            if (qword_10009EFF0 != -1)
              swift_once(&qword_10009EFF0, sub_10004B5B4);
            v41 = type metadata accessor for Logger(0);
            v42 = sub_10000D130(v41, (uint64_t)qword_10009EFF8);
            v43 = Logger.logObject.getter(v42);
            v44 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v43, v44))
            {
              v45 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v45 = 0;
              _os_log_impl((void *)&_mh_execute_header, v43, v44, "Could not get video preview normalized crop rect.", v45, 2u);
              swift_slowDealloc(v45, -1, -1);
            }

            v13 = 0;
          }
          else
          {
            v70.origin.x = v6;
            v70.origin.y = v10;
            v70.size.width = Width;
            v70.size.height = v12;
            v46 = CGRectGetWidth(v70) / v25;
            v71.origin.x = v6;
            v71.origin.y = v10;
            v71.size.width = Width;
            v71.size.height = v12;
            Height = CGRectGetHeight(v71);
            CGAffineTransformMakeScale(&v65, v46, Height / v26);
            v68.width = v20;
            v68.height = v21;
            v48 = CGSizeApplyAffineTransform(v68, &v65);
            if (qword_10009F010 != -1)
              swift_once(&qword_10009F010, sub_1000528B4);
            v49 = *(double *)&qword_10009FD60;
            v50 = *(double *)algn_10009FD68;
            v51 = (CGSize)xmmword_10009FD70;
            v72.origin.y = v60;
            v72.origin.x = v62;
            v72.size.height = v40;
            v72.size.width = v59;
            MidY = CGRectGetMidY(v72);
            v73.origin.x = v49;
            v73.origin.y = v50;
            v73.size = v51;
            v52 = CGRectGetMidY(v73);
            v13 = 0;
            if (v48.width != 0.0 && v21 != 0.0)
            {
              v53 = v48.height * (v60 - (MidY - v52 + MidY - v52));
              v54 = v62 * v48.width;
              v74.origin.x = v6;
              v74.origin.y = v10;
              v74.size.width = Width;
              v74.size.height = v12;
              v63 = (CGRectGetWidth(v74) - v48.width) * 0.5;
              v75.origin.x = v6;
              v75.origin.y = v10;
              v75.size.width = Width;
              v75.size.height = v12;
              v61 = (CGRectGetHeight(v75) - v48.height) * 0.5;
              v76.origin.x = v6;
              v76.origin.y = v10;
              v76.size.width = Width;
              v76.size.height = v12;
              MinX = CGRectGetMinX(v76);
              v77.origin.x = v54;
              v77.origin.y = v53;
              v77.size.width = v59 * v48.width;
              v77.size.height = v58 * v48.height;
              v64 = v63 + MinX + CGRectGetMinX(v77);
              v78.origin.x = v6;
              v78.origin.y = v10;
              v78.size.width = Width;
              v78.size.height = v12;
              MinY = CGRectGetMinY(v78);
              v79.origin.x = v54;
              v79.origin.y = v53;
              v79.size.width = v59 * v48.width;
              v79.size.height = v58 * v48.height;
              v10 = v61 + MinY + CGRectGetMinY(v79);
              v80.origin.x = v54;
              v80.origin.y = v53;
              v80.size.width = v59 * v48.width;
              v80.size.height = v58 * v48.height;
              Width = CGRectGetWidth(v80);
              v81.origin.x = v54;
              v81.origin.y = v53;
              v81.size.width = v59 * v48.width;
              v81.size.height = v58 * v48.height;
              v12 = CGRectGetHeight(v81);
              v13 = 0;
              v6 = v64;
            }
          }
        }
      }
    }
  }
  *(CGFloat *)a2 = v6;
  *(double *)(a2 + 8) = v10;
  *(CGFloat *)(a2 + 16) = Width;
  *(CGFloat *)(a2 + 24) = v12;
  *(_BYTE *)(a2 + 32) = v13;
}

CGFloat sub_1000527A8(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGFloat v8;
  CGFloat v9;
  CGSize v10;
  CGRect v12;
  CGRect v13;

  if (qword_10009F010 != -1)
    swift_once(&qword_10009F010, sub_1000528B4);
  v8 = *(double *)&qword_10009FD60;
  v9 = *(double *)algn_10009FD68;
  v10 = (CGSize)xmmword_10009FD70;
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.width = a3;
  v12.size.height = a4;
  CGRectGetMidY(v12);
  v13.origin.x = v8;
  v13.origin.y = v9;
  v13.size = v10;
  CGRectGetMidY(v13);
  return a1;
}

uint64_t sub_100052874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[40];

  sub_1000522AC(a1, (uint64_t)v4);
  return sub_10004692C((uint64_t)v4, a2, &qword_10009C000);
}

__n128 sub_1000528B4()
{
  __n128 result;

  qword_10009FD60 = 0;
  *(_QWORD *)algn_10009FD68 = 0;
  __asm { FMOV            V0.2D, #1.0 }
  xmmword_10009FD70 = (__int128)result;
  return result;
}

uint64_t *sub_1000528CC()
{
  if (qword_10009F010 != -1)
    swift_once(&qword_10009F010, sub_1000528B4);
  return &qword_10009FD60;
}

double sub_10005290C()
{
  if (qword_10009F010 != -1)
    swift_once(&qword_10009F010, sub_1000528B4);
  return *(double *)&qword_10009FD60;
}

CGFloat sub_100052954(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  CGRect v14;
  CGRect v15;

  v14.origin.x = a5;
  v14.origin.y = a6;
  v14.size.width = a7;
  v14.size.height = a8;
  CGRectGetMidY(v14);
  v15.origin.x = a1;
  v15.origin.y = a2;
  v15.size.width = a3;
  v15.size.height = a4;
  CGRectGetMidY(v15);
  return a5;
}

uint64_t sub_1000529F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_10000A66C(qword_10009CC10);
  v11 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000533B0(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

unint64_t sub_100052BF8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10008CF60, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_100052C40(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10008CFE0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

void sub_100052C88()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;

  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoSticker] = 0;
  v1 = &v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_livePhotoStickerRecentUUID];
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_asset] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrack] = 0;
  v3 = &v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackPreferredTransform];
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *(_OWORD *)v3 = 0u;
  v3[48] = 1;
  v4 = &v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackNaturalSize];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v5 = &v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackNaturalSizeTransformed];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescription] = 0;
  v6 = &v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackFormatDescriptionDimensions];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v7 = &v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackEncodedSize];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v8 = &v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_assetTrackEncodedSizeTransformed];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v9 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_lightAppearanceDimmingColor;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "secondarySystemBackgroundColor");
  v12 = (void *)objc_opt_self(UITraitCollection);
  v13 = objc_msgSend(v12, "traitCollectionWithUserInterfaceStyle:", 1);
  v14 = objc_msgSend(v11, "resolvedColorWithTraitCollection:", v13);

  v15 = objc_msgSend(v14, "colorWithAlphaComponent:", 0.8);
  *(_QWORD *)&v0[v9] = v15;
  v16 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_darkAppearanceDimmingColor;
  v17 = objc_msgSend(v10, "systemBackgroundColor");
  v18 = objc_msgSend(v12, "traitCollectionWithUserInterfaceStyle:", 2);
  v19 = objc_msgSend(v17, "resolvedColorWithTraitCollection:", v18);

  v20 = objc_msgSend(v19, "colorWithAlphaComponent:", 0.7);
  *(_QWORD *)&v0[v16] = v20;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_lightAppearanceComposition] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_darkAppearanceComposition] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___livePhotoView] = 0;
  v21 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_activityIndicator;
  v22 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v21] = v22;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___cancelButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___addStickerButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___tapGestureRecognizer] = 0;
  v23 = OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util;
  *(_QWORD *)&v0[v23] = objc_msgSend(objc_allocWithZone((Class)StickerPhotosUtil), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___imageAnalysisInteraction] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController____lazy_storage___imageAnalyzer] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100073990, "StickersUltraExtension/StickerLivePhotoConfirmationController.swift", 67, 2, 111, 0);
  __break(1u);
}

void sub_100053000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  if (a1)
  {
    v5 = a1;
    v6 = *(void **)(v3 + 16);
    v36 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v23 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v23 = a1;
      swift_bridgeObjectRetain(a1);
      v7 = _CocoaArrayWrapper.endIndex.getter(v23);
      if (!v7)
        goto LABEL_22;
    }
    else
    {
      v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (!v7)
        goto LABEL_22;
    }
    type metadata accessor for Sticker.Representation(0);
    if (v7 < 1)
    {
      __break(1u);
      goto LABEL_30;
    }
    if ((v5 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v7; ++i)
      {
        v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
        v11 = Sticker.Representation.init(_:)(v10);
        if (v11)
        {
          v13 = v11;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v15 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v14 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v15 >= v14 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
          v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
          specialized Array._endMutation()(v9);
        }
      }
    }
    else
    {
      v16 = (id *)(v5 + 32);
      do
      {
        v18 = Sticker.Representation.init(_:)(*v16);
        if (v18)
        {
          v20 = v18;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
          v22 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v21 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v22 >= v21 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
          v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
          specialized Array._endMutation()(v17);
        }
        ++v16;
        --v7;
      }
      while (v7);
    }
LABEL_22:
    swift_bridgeObjectRelease(v5);
    v5 = v36;
    if (!a3)
    {
LABEL_27:
      type metadata accessor for Sticker(0);
      v32 = (void *)Sticker.init(from:)(v5);
      v33 = swift_allocObject(&unk_10008D440, 24, 7);
      *(_QWORD *)(v33 + 16) = v6;
      v34 = v6;
      Sticker.saveToStore(completionHandler:)((uint64_t)sub_100054B6C, v33);
      swift_release(v33, v35);

      return;
    }
    swift_errorRetain(a3);
    if (qword_10009EFF0 == -1)
    {
LABEL_24:
      v24 = type metadata accessor for Logger(0);
      sub_10000D130(v24, (uint64_t)qword_10009EFF8);
      swift_errorRetain(a3);
      v25 = swift_errorRetain(a3);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(12, -1);
        v29 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v28 = 138412290;
        swift_errorRetain(a3);
        v30 = _swift_stdlib_bridgeErrorToNSError(a3);
        v36 = v30;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v28 + 4, v28 + 12);
        *v29 = v30;
        swift_errorRelease(a3);
        swift_errorRelease(a3);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Error in creating live photo sticker: %@ ", v28, 0xCu);
        v31 = sub_10000A66C((uint64_t *)&unk_10009C0A0);
        swift_arrayDestroy(v29, 1, v31);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v28, -1, -1);

        swift_errorRelease(a3);
      }
      else
      {
        swift_errorRelease(a3);
        swift_errorRelease(a3);
        swift_errorRelease(a3);

      }
      goto LABEL_27;
    }
LABEL_30:
    swift_once(&qword_10009EFF0, sub_10004B5B4);
    goto LABEL_24;
  }
}

uint64_t sub_100053398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000533A8(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

uint64_t sub_1000533B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1000534C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  double v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  _QWORD *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  _QWORD *v47;
  id v48;
  id v49;
  id v50;
  NSIndexSet *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  void (*v56)(__n128);
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void **aBlock;
  uint64_t v62;
  void (*v63)(uint64_t, void *);
  void *v64;
  void (*v65)(void *);
  uint64_t v66;
  _QWORD v67[4];
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;

  v1 = v0;
  v2 = type metadata accessor for IndexSet(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10009EFF0 != -1)
    swift_once(&qword_10009EFF0, sub_10004B5B4);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_10000D130(v6, (uint64_t)qword_10009EFF8);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Live sticker video preview complete", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x150))();
  v12 = objc_msgSend(v11, "videoAsset");

  if (v12)
  {
    v60 = v12;
    v13 = *(void **)((char *)v1 + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_util);
    v14 = sub_10004E730();
    objc_msgSend(v13, "videoPreviewTimeRangeForImageAnalysisInteraction:", v14);
    v15 = v67[3];
    v16 = v70;
    v18 = v68;
    v17 = v69;

    v19 = CMTime.seconds.getter(v15, v18 | (v17 << 32), v16);
    v21 = Logger.logObject.getter(v20);
    if (v19 <= 0.0)
    {
      v44 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v44, "Live sticker video preview did not pass gating, falling back to still sticker.", v45, 2u);
        swift_slowDealloc(v45, -1, -1);
      }

      v46 = *(void **)((char *)v1
                     + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_liveButton);
      dispatch thunk of LiveButton.isLive.setter(0);
      objc_msgSend(v46, "setHidden:", 1);
      v47 = sub_10004D0A4();
      (*(void (**)(void))((swift_isaMask & *v47) + 0x120))();

      v48 = sub_10004E730();
      v49 = sub_10004E730();
      v50 = objc_msgSend(v49, "allSubjectIndexes");

      static IndexSet._unconditionallyBridgeFromObjectiveC(_:)(v50);
      IndexSet._bridgeToObjectiveC()(v51);
      v53 = v52;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      objc_msgSend(v48, "highlightSubjectAtIndexSet:showCallout:showBurst:burstPoint:animated:", v53, 0, 0, 1, 0.0, 0.0);

      v54 = *(_QWORD *)((char *)v1
                      + OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_previewCache);
      v55 = v60;
      if (v54)
      {
        v56 = *(void (**)(__n128))(*(_QWORD *)v54 + 136);
        v57 = swift_retain(v54);
        v56(v57);

        swift_release(v54, v58);
      }
      else
      {

      }
    }
    else
    {
      v22 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Live sticker Video preview available", v23, 2u);
        swift_slowDealloc(v23, -1, -1);
      }

      v24 = swift_allocObject(&unk_10008D3C8, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16, v1);
      v65 = sub_100054AAC;
      v66 = v24;
      aBlock = _NSConcreteStackBlock;
      v62 = 1107296256;
      v63 = sub_1000232C0;
      v64 = &unk_10008D3E0;
      v25 = _Block_copy(&aBlock);
      v26 = (void *)objc_opt_self(AVVideoComposition);
      *(_QWORD *)&v27 = swift_retain(v24).n128_u64[0];
      v28 = v60;
      v29 = objc_msgSend(v26, "videoCompositionWithAsset:applyingCIFiltersWithHandler:", v60, v25, v27);
      _Block_release(v25);
      v30 = v66;
      swift_release(v24, v31);
      swift_release(v30, v32);
      (*(void (**)(id))((swift_isaMask & *v1) + 0x290))(v29);
      v33 = swift_allocObject(&unk_10008D3C8, 24, 7);
      swift_unknownObjectWeakInit(v33 + 16, v1);
      v65 = sub_100054AB8;
      v66 = v33;
      aBlock = _NSConcreteStackBlock;
      v62 = 1107296256;
      v63 = sub_1000232C0;
      v64 = &unk_10008D408;
      v34 = _Block_copy(&aBlock);
      v35 = objc_msgSend(v26, "videoCompositionWithAsset:applyingCIFiltersWithHandler:", v28, v34, swift_retain(v33).n128_f64[0]);
      _Block_release(v34);
      v36 = v66;
      swift_release(v33, v37);
      swift_release(v36, v38);
      (*(void (**)(id))((swift_isaMask & *v1) + 0x2A8))(v35);
      v39 = objc_msgSend(v1, "traitCollection");
      v40 = objc_msgSend(v39, "userInterfaceStyle");

      v41 = 672;
      if (v40 == (id)1)
        v41 = 648;
      v42 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + v41))();
      v43 = sub_10004D0A4();
      (*(void (**)(void *, _QWORD *, double))((swift_isaMask & *v43) + 0x100))(v42, v67, 0.25);

    }
  }
}

id sub_100053ADC(uint64_t a1, void *a2, uint64_t a3)
{
  id v6;
  id v7;
  id v8;
  id v9;
  id result;
  id v11;

  v6 = objc_msgSend((id)objc_opt_self(CIFilter), "blendWithAlphaMaskFilter");
  objc_msgSend(v6, "setInputImage:", a2);
  objc_msgSend(v6, "setMaskImage:", a3);
  v7 = objc_msgSend(objc_allocWithZone((Class)CIImage), "initWithColor:", a1);
  objc_msgSend(a2, "extent");
  v8 = objc_msgSend(v7, "imageByCroppingToRect:");

  v9 = objc_msgSend(v8, "imageByCompositingOverImage:", a2);
  objc_msgSend(v6, "setBackgroundImage:", v9);

  result = objc_msgSend(v6, "outputImage");
  if (result)
  {
    v11 = result;

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100053C08()
{
  return sub_10002CA50(&qword_10009CB30, type metadata accessor for StickerLivePhotoConfirmationController.AddStickerError, (uint64_t)&unk_100079824);
}

unint64_t sub_100053C38()
{
  unint64_t result;

  result = qword_10009CB38;
  if (!qword_10009CB38)
  {
    result = swift_getWitnessTable(&unk_1000798AC, &type metadata for StickerLivePhotoConfirmationController.ProgressDictionaryKeys);
    atomic_store(result, (unint64_t *)&qword_10009CB38);
  }
  return result;
}

unint64_t sub_100053C80()
{
  unint64_t result;

  result = qword_10009CB40;
  if (!qword_10009CB40)
  {
    result = swift_getWitnessTable(&unk_10007994C, &type metadata for StickerLivePhotoConfirmationController.InfoDictionaryKeys);
    atomic_store(result, (unint64_t *)&qword_10009CB40);
  }
  return result;
}

uint64_t sub_100053CC4()
{
  return type metadata accessor for StickerLivePhotoConfirmationController(0);
}

void sub_100053CCC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[29];

  v4[0] = &unk_100079A78;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_100079A90;
  v4[4] = &unk_100079AA8;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = &unk_100079AA8;
  sub_100053DB0(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_100079AA8;
    v4[9] = &unk_100079AA8;
    v4[10] = &unk_100079AC0;
    v4[11] = &unk_100079AD8;
    v4[12] = &unk_100079AD8;
    v4[13] = &unk_100079AA8;
    v4[14] = &unk_100079AF0;
    v4[15] = &unk_100079AD8;
    v4[16] = &unk_100079AD8;
    v4[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[18] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[19] = &unk_100079AA8;
    v4[20] = &unk_100079AA8;
    v4[21] = &unk_100079AA8;
    v4[22] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[23] = &unk_100079AA8;
    v4[24] = &unk_100079AA8;
    v4[25] = &unk_100079AA8;
    v4[26] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[27] = &unk_100079AA8;
    v4[28] = &unk_100079AA8;
    swift_updateClassMetadata2(a1, 256, 29, v4, a1 + 80);
  }
}

void sub_100053DB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10009CB70)
  {
    v2 = type metadata accessor for UUID(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10009CB70);
  }
}

uint64_t *sub_100053E04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = sub_10000A66C(&qword_10009CAE8);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_100053EDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_10000A66C(&qword_10009CAE8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_100053F44(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_10000A66C(&qword_10009CAE8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_100053FF8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_10000A66C(&qword_10009CAE8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_10002E2B4((uint64_t)a1, &qword_10009CAE8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_100054104(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_10000A66C(&qword_10009CAE8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1000541B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_10000A66C(&qword_10009CAE8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_10002E2B4((uint64_t)a1, &qword_10009CAE8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1000542C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000542D0);
}

uint64_t sub_1000542D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_10000A66C(&qword_10009CAE8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_100054320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005432C);
}

uint64_t sub_10005432C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_10000A66C(&qword_10009CAE8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_100054384(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000A66C(&qword_10009CAE8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1000543C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009CAE8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_100054404(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 2);
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StickerLivePhotoConfirmationController.ProgressDictionaryKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerLivePhotoConfirmationController.ProgressDictionaryKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100054534 + 4 * byte_100079815[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100054568 + 4 * byte_100079810[v4]))();
}

uint64_t sub_100054568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100054570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100054578);
  return result;
}

uint64_t sub_100054584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10005458CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100054590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100054598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StickerLivePhotoConfirmationController.ProgressDictionaryKeys()
{
  return &type metadata for StickerLivePhotoConfirmationController.ProgressDictionaryKeys;
}

uint64_t getEnumTagSinglePayload for StickerLivePhotoConfirmationController.InfoDictionaryKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerLivePhotoConfirmationController.InfoDictionaryKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100054690 + 4 * byte_10007981F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000546C4 + 4 * byte_10007981A[v4]))();
}

uint64_t sub_1000546C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000546CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000546D4);
  return result;
}

uint64_t sub_1000546E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000546E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1000546EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000546F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StickerLivePhotoConfirmationController.InfoDictionaryKeys()
{
  return &type metadata for StickerLivePhotoConfirmationController.InfoDictionaryKeys;
}

_QWORD *sub_100054710(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_10005471C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10005473C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for CMVideoDimensions(uint64_t a1)
{
  sub_100011004(a1, &qword_10009CBE8, (uint64_t)&unk_10008D290);
}

void type metadata accessor for CMFormatDescription(uint64_t a1)
{
  sub_100011004(a1, (unint64_t *)&unk_10009CBF0, (uint64_t)&unk_10008D2B8);
}

__n128 initializeWithTake for StickerPackStripSymbolView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1000547A0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1000547C0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_100011004(a1, &qword_10009CC00, (uint64_t)&unk_10008D340);
}

void sub_10005480C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t ObjectType;
  uint64_t v13;
  void (*v14)(_QWORD *, _UNKNOWN **, _QWORD *, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  NSObject *oslog;
  uint64_t v25;
  _QWORD v26[3];
  _BYTE v27[8];
  uint64_t v28;

  v6 = *(_QWORD **)(v3 + 16);
  v7 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x138))();
  if (v7)
  {
    v9 = v7;
    v10 = v8;
    if (a1)
      v11 = a1;
    else
      v11 = _swiftEmptyArrayStorage;
    ObjectType = swift_getObjectType(v7);
    v13 = *(_QWORD *)(v10 + 8);
    v14 = *(void (**)(_QWORD *, _UNKNOWN **, _QWORD *, uint64_t, uint64_t, __n128))(v13 + 16);
    v15 = swift_bridgeObjectRetain(a1);
    v14(v6, &off_10008D0C0, v11, ObjectType, v13, v15);
    swift_unknownObjectRelease(v9);
    swift_bridgeObjectRelease(v11);
  }
  if (a3)
  {
    swift_errorRetain(a3);
    if (qword_10009EFF0 != -1)
      swift_once(&qword_10009EFF0, sub_10004B5B4);
    v16 = type metadata accessor for Logger(0);
    sub_10000D130(v16, (uint64_t)qword_10009EFF8);
    swift_errorRetain(a3);
    v17 = swift_errorRetain(a3);
    oslog = Logger.logObject.getter(v17);
    v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v28 = v20;
      *(_DWORD *)v19 = 136315138;
      swift_getErrorValue(a3, v27, v26);
      v21 = Error.localizedDescription.getter(v26[1], v26[2]);
      v23 = v22;
      v25 = sub_10000C99C(v21, v22, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v19 + 4, v19 + 12);
      swift_bridgeObjectRelease(v23);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl((void *)&_mh_execute_header, oslog, v18, "Failed to create sticker representations. %s", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

      swift_errorRelease(a3);
    }
    else
    {
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      swift_errorRelease(a3);

    }
  }
}

uint64_t sub_100054A88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100054AAC(void *a1)
{
  sub_100054AC4(a1, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_lightAppearanceDimmingColor);
}

void sub_100054AB8(void *a1)
{
  sub_100054AC4(a1, &OBJC_IVAR____TtC22StickersUltraExtension38StickerLivePhotoConfirmationController_darkAppearanceDimmingColor);
}

void sub_100054AC4(void *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  _BYTE v9[24];

  v5 = v2 + 16;
  swift_beginAccess(v5, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(id *)(Strong + *a2);
    sub_100051A0C(a1, v8);

  }
}

uint64_t sub_100054B40(uint64_t a1, uint64_t a2)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL, a2);
}

uint64_t sub_100054B48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100054B6C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10005021C(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_100054B78(__n128 a1)
{
  uint64_t v1;
  double v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = a1.n128_f64[0];
  v3 = *(_QWORD **)(v1 + 16);
  v4 = (*(uint64_t (**)(uint64_t, unint64_t, _QWORD, __n128, double))((swift_isaMask & *v3) + 0x390))(0x657461647075, 0xE600000000000000, *(_QWORD *)(v1 + 24), a1, *(double *)(v1 + 32));
  (*(void (**)(double))((swift_isaMask & *v3) + 0x3B0))(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_100054C00()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100054C2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = (*(uint64_t (**)(uint64_t, unint64_t, _QWORD, double, double))((swift_isaMask & *v1) + 0x390))(6581861, 0xE300000000000000, *(_QWORD *)(v0 + 24), 100.0, *(double *)(v0 + 32));
  (*(void (**)(double))((swift_isaMask & *v1) + 0x3B0))(100.0);
  return swift_bridgeObjectRelease(v2);
}

void sub_100054CB4()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  _BYTE v3[24];

  swift_beginAccess(v0 + 16, v3, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = (void *)Strong;
    sub_100050ACC();

  }
}

void sub_100054D04()
{
  uint64_t v0;
  _QWORD *Strong;
  void *v2;
  _BYTE v3[24];

  swift_beginAccess(v0 + 16, v3, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x3A8))();

  }
}

uint64_t sub_100054D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 24), a2);
  return swift_deallocObject(v2, 32, 7);
}

uint64_t sub_100054D90(uint64_t a1)
{
  uint64_t v1;

  return sub_10004FDEC(a1, v1);
}

void sub_100054D98()
{
  id v0;

  v0 = sub_10004E730();
  objc_msgSend(v0, "beginImageSubjectAnalysisIfNecessary");

}

void *sub_100054E20()
{
  return &unk_10008D670;
}

uint64_t sub_100054E2C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009F478);
  sub_10000D130(v0, (uint64_t)qword_10009F478);
  return Logger.init(subsystem:category:)(0xD000000000000012, 0x8000000100075A00, 0xD000000000000016, 0x8000000100075A20);
}

void *PresentationContexts.messages.unsafeMutableAddressor()
{
  return &static PresentationContexts.messages;
}

void *PresentationContexts.media.unsafeMutableAddressor()
{
  return &static PresentationContexts.media;
}

uint64_t static PresentationContexts.media.getter()
{
  return 2;
}

void *PresentationContexts.all.unsafeMutableAddressor()
{
  return &static PresentationContexts.all;
}

uint64_t sub_100054ED4(_QWORD *a1, char a2)
{
  char v4;

  if ((a2 & 1) != 0)
    return 2;
  if (!a1)
    return 1;
  v4 = sub_100038DFC(0xD000000000000028, 0x80000001000756E0, a1);
  if ((sub_100038DFC(0xD000000000000025, 0x8000000100075710, a1) & 1) != 0)
    return v4 & 1 | 2;
  else
    return v4 & 1;
}

_QWORD *sub_100054F6C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_100054F78(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_100054F80@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_100054F94@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_100054FA8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_100054FBC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_100054FEC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100055018@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_10005503C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_100055050(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_100055064(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_100055078@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10005508C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000550A0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1000550B4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1000550C8()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1000550D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_1000550F0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_100055104@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_100059D48(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

void *sub_100055140()
{
  return &unk_10008D680;
}

unint64_t sub_10005514C()
{
  return 0xD00000000000001ELL;
}

void *sub_100055168()
{
  return &unk_10008D690;
}

unint64_t sub_100055174()
{
  return 0xD000000000000011;
}

void *sub_100055190()
{
  return &unk_10008D6A0;
}

unint64_t sub_10005519C()
{
  return 0xD000000000000015;
}

void *sub_1000551B8()
{
  return &unk_10008D6B0;
}

unint64_t sub_1000551C4()
{
  return 0xD00000000000001ALL;
}

void *sub_1000551E0()
{
  return &unk_10008D6C0;
}

unint64_t sub_1000551EC()
{
  return 0xD000000000000017;
}

void *sub_100055208()
{
  return &unk_10008D6D0;
}

unint64_t sub_100055214()
{
  return 0xD00000000000001FLL;
}

uint64_t iMessageApp.isStickerPackOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t iMessageApp.hideFromBrowser.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t iMessageApp.canSendDataPayloads.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 66);
}

uint64_t iMessageApp.shouldHideAppIcon.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 67);
}

uint64_t iMessageApp.shouldHideAppSwitcher.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 68);
}

uint64_t iMessageApp.presentationContexts.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

unint64_t sub_100055260()
{
  return sub_10005526C((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t sub_10005526C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  __int128 v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A66C(&qword_10009CC08);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10002E23C(v7, (uint64_t)v17, &qword_10009D080);
    result = sub_10002913C((uint64_t)v17);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v17[0];
    v12 = v17[1];
    *(_QWORD *)(v10 + 32) = v18;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_1000119C8(&v19, (_OWORD *)(v4[7] + 32 * result));
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4, v13);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000553AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A66C(&qword_10009D060);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_1000173C4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4, v11);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t iMessageApp.__allocating_init(extensionIdentifier:bundleIdentifier:displayName:infoDictionary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;

  v15 = swift_allocObject(v7, 80, 7);
  iMessageApp.init(extensionIdentifier:bundleIdentifier:displayName:infoDictionary:)(a1, a2, a3, a4, a5, a6, a7);
  return v15;
}

uint64_t iMessageApp.init(extensionIdentifier:bundleIdentifier:displayName:infoDictionary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  char v17;
  char v18;
  unint64_t v19;
  char v20;
  char v21;
  unint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD v33[2];
  _QWORD v34[5];
  __int128 v35;
  __int128 v36;

  v8 = v7;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)&v35 = 0xD00000000000001ELL;
  *((_QWORD *)&v35 + 1) = 0x80000001000755F0;
  AnyHashable.init<A>(_:)(v34, &v35, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a7 + 16) && (v10 = sub_10002913C((uint64_t)v34), (v11 & 1) != 0))
  {
    sub_10000D4C4(*(_QWORD *)(a7 + 56) + 32 * v10, (uint64_t)&v35);
  }
  else
  {
    v35 = 0u;
    v36 = 0u;
  }
  sub_10002E280((uint64_t)v34);
  if (!*((_QWORD *)&v36 + 1))
  {
    sub_100011988((uint64_t)&v35);
    goto LABEL_9;
  }
  if (!swift_dynamicCast(v33, &v35, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_9:
    v12 = 0;
    goto LABEL_10;
  }
  v12 = v33[0];
LABEL_10:
  *(_BYTE *)(v8 + 64) = v12;
  *(_QWORD *)&v35 = 0xD000000000000011;
  *((_QWORD *)&v35 + 1) = 0x8000000100075610;
  AnyHashable.init<A>(_:)(v34, &v35, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a7 + 16) && (v13 = sub_10002913C((uint64_t)v34), (v14 & 1) != 0))
  {
    sub_10000D4C4(*(_QWORD *)(a7 + 56) + 32 * v13, (uint64_t)&v35);
  }
  else
  {
    v35 = 0u;
    v36 = 0u;
  }
  sub_10002E280((uint64_t)v34);
  if (!*((_QWORD *)&v36 + 1))
  {
    sub_100011988((uint64_t)&v35);
    goto LABEL_18;
  }
  if (!swift_dynamicCast(v33, &v35, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_18:
    v15 = 0;
    goto LABEL_19;
  }
  v15 = v33[0];
LABEL_19:
  *(_BYTE *)(v8 + 65) = v15;
  *(_QWORD *)&v35 = 0xD000000000000015;
  *((_QWORD *)&v35 + 1) = 0x8000000100075630;
  AnyHashable.init<A>(_:)(v34, &v35, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a7 + 16) && (v16 = sub_10002913C((uint64_t)v34), (v17 & 1) != 0))
  {
    sub_10000D4C4(*(_QWORD *)(a7 + 56) + 32 * v16, (uint64_t)&v35);
  }
  else
  {
    v35 = 0u;
    v36 = 0u;
  }
  sub_10002E280((uint64_t)v34);
  if (!*((_QWORD *)&v36 + 1))
  {
    sub_100011988((uint64_t)&v35);
    goto LABEL_27;
  }
  if (!swift_dynamicCast(v33, &v35, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_27:
    v18 = 0;
    goto LABEL_28;
  }
  v18 = v33[0];
LABEL_28:
  *(_BYTE *)(v8 + 66) = v18;
  *(_QWORD *)&v35 = 0xD00000000000001ALL;
  *((_QWORD *)&v35 + 1) = 0x8000000100075650;
  AnyHashable.init<A>(_:)(v34, &v35, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a7 + 16) && (v19 = sub_10002913C((uint64_t)v34), (v20 & 1) != 0))
  {
    sub_10000D4C4(*(_QWORD *)(a7 + 56) + 32 * v19, (uint64_t)&v35);
  }
  else
  {
    v35 = 0u;
    v36 = 0u;
  }
  sub_10002E280((uint64_t)v34);
  if (!*((_QWORD *)&v36 + 1))
  {
    sub_100011988((uint64_t)&v35);
    goto LABEL_36;
  }
  if (!swift_dynamicCast(v33, &v35, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_36:
    v21 = 0;
    goto LABEL_37;
  }
  v21 = v33[0];
LABEL_37:
  *(_BYTE *)(v8 + 67) = v21;
  *(_QWORD *)&v35 = 0xD000000000000017;
  *((_QWORD *)&v35 + 1) = 0x8000000100075670;
  AnyHashable.init<A>(_:)(v34, &v35, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a7 + 16) && (v22 = sub_10002913C((uint64_t)v34), (v23 & 1) != 0))
  {
    sub_10000D4C4(*(_QWORD *)(a7 + 56) + 32 * v22, (uint64_t)&v35);
  }
  else
  {
    v35 = 0u;
    v36 = 0u;
  }
  sub_10002E280((uint64_t)v34);
  if (!*((_QWORD *)&v36 + 1))
  {
    sub_100011988((uint64_t)&v35);
    goto LABEL_45;
  }
  if (!swift_dynamicCast(v33, &v35, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_45:
    v24 = 0;
    goto LABEL_46;
  }
  v24 = v33[0];
LABEL_46:
  *(_BYTE *)(v8 + 68) = v24;
  v33[0] = 0xD00000000000001FLL;
  v33[1] = 0x8000000100075690;
  AnyHashable.init<A>(_:)(v34, v33, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a7 + 16) && (v25 = sub_10002913C((uint64_t)v34), (v26 & 1) != 0))
  {
    sub_10000D4C4(*(_QWORD *)(a7 + 56) + 32 * v25, (uint64_t)&v35);
  }
  else
  {
    v35 = 0u;
    v36 = 0u;
  }
  swift_bridgeObjectRelease(a7);
  sub_10002E280((uint64_t)v34);
  if (!*((_QWORD *)&v36 + 1))
  {
    sub_100011988((uint64_t)&v35);
    if (*(_BYTE *)(v8 + 64) != 1)
      goto LABEL_62;
    v28 = 0;
LABEL_61:
    swift_bridgeObjectRelease(v28);
    v31 = 2;
    goto LABEL_63;
  }
  v27 = sub_10000A66C(&qword_10009CC48);
  if (swift_dynamicCast(v33, &v35, (char *)&type metadata for Any + 8, v27, 6))
    v28 = (_QWORD *)v33[0];
  else
    v28 = 0;
  if ((*(_BYTE *)(v8 + 64) & 1) != 0)
    goto LABEL_61;
  if (!v28)
  {
LABEL_62:
    v31 = 1;
    goto LABEL_63;
  }
  v29 = sub_100038DFC(0xD000000000000028, 0x80000001000756E0, v28) & 1;
  v30 = sub_100038DFC(0xD000000000000025, 0x8000000100075710, v28);
  swift_bridgeObjectRelease(v28);
  v31 = v29 | 2;
  if ((v30 & 1) == 0)
    v31 = v29;
LABEL_63:
  *(_QWORD *)(v8 + 72) = v31;
  return v8;
}

uint64_t iMessageApp.__allocating_init(extensionIdentifier:bundleIdentifier:displayName:isStickerPackOnly:hideFromBrowser:canSendDataPayloads:shouldHideAppIcon:shouldHideAppSwitcher:presentationContexts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, char a9, char a10, char a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t result;

  result = swift_allocObject(v12, 80, 7);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a5;
  *(_QWORD *)(result + 56) = a6;
  *(_BYTE *)(result + 64) = a7;
  *(_BYTE *)(result + 65) = a8;
  *(_BYTE *)(result + 66) = a9;
  *(_BYTE *)(result + 67) = a10;
  *(_BYTE *)(result + 68) = a11;
  *(_QWORD *)(result + 72) = a12;
  return result;
}

uint64_t iMessageApp.init(extensionIdentifier:bundleIdentifier:displayName:isStickerPackOnly:hideFromBrowser:canSendDataPayloads:shouldHideAppIcon:shouldHideAppSwitcher:presentationContexts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, char a9, char a10, char a11, uint64_t a12)
{
  uint64_t v12;

  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  *(_QWORD *)(v12 + 56) = a6;
  *(_BYTE *)(v12 + 64) = a7;
  *(_BYTE *)(v12 + 65) = a8;
  *(_BYTE *)(v12 + 66) = a9;
  *(_BYTE *)(v12 + 67) = a10;
  *(_BYTE *)(v12 + 68) = a11;
  *(_QWORD *)(v12 + 72) = a12;
  return v12;
}

_QWORD *iMessageApp.deinit()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  return v0;
}

uint64_t iMessageApp.__deallocating_deinit()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t sub_100055B84@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for iMessageApp();
  result = Identifiable<>.id.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t iMessageApp.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(a1, v4, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int iMessageApp.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v4, v1, v2);
  swift_bridgeObjectRelease(v2);
  return Hasher._finalize()();
}

Swift::Int sub_100055C5C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100055CB8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100055D00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

id sub_100055D58(void *a1)
{
  uint64_t v1;
  id v3;

  swift_allocObject(v1, 88, 7);
  v3 = sub_100059D80(a1);

  return v3;
}

id sub_100055D9C(void *a1)
{
  id v2;

  v2 = sub_100059D80(a1);

  return v2;
}

void sub_100055DC8()
{
  _swift_stdlib_reportUnimplementedInitializer("StickersUltraExtension.iMessageAppExtension", 43, "init(extensionIdentifier:bundleIdentifier:displayName:infoDictionary:)", 70, 0);
  __break(1u);
}

void sub_100055DF4()
{
  _swift_stdlib_reportUnimplementedInitializer("StickersUltraExtension.iMessageAppExtension", 43, "init(extensionIdentifier:bundleIdentifier:displayName:isStickerPackOnly:hideFromBrowser:canSendDataPayloads:shouldHideAppIcon:shouldHideAppSwitcher:presentationContexts:)", 170, 0);
  __break(1u);
}

void sub_100055E20()
{
  uint64_t v0;

}

uint64_t sub_100055E28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return v0;
}

uint64_t sub_100055E5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t sub_100055E98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return v1;
}

uint64_t sub_100055EC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10002E23C(v3, a1, (uint64_t *)&unk_10009BC90);
}

uint64_t sub_100055F18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 16;
  swift_beginAccess(v3, v5, 33, 0);
  sub_1000124D4(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_100055F68(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t iMessageAppsRegistry.apps.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 48, v2, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 48));
}

uint64_t iMessageAppsRegistry.apps.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 48, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = a1;
  swift_bridgeObjectRelease(v3);
  return sub_100056578();
}

uint64_t (*iMessageAppsRegistry.apps.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 48, a1, 33, 0);
  return sub_100056060;
}

uint64_t sub_100056060(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return sub_100056578();
  return result;
}

void *variable initialization expression of iMessageAppsRegistry.lookupMap()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t iMessageAppsRegistry.lookupMap.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 56, v2, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
}

uint64_t iMessageAppsRegistry.lookupMap.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 56, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t (*iMessageAppsRegistry.lookupMap.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 56, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t variable initialization expression of iMessageAppsRegistry.preferences()
{
  uint64_t v0;

  v0 = type metadata accessor for iMessageAppsPreferences();
  return swift_allocObject(v0, 16, 7);
}

uint64_t sub_10005616C()
{
  uint64_t v0;

  return swift_allocObject(v0, 16, 7);
}

uint64_t sub_10005617C()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 64));
}

uint64_t property wrapper backing initializer of iMessageAppsRegistry.stickerApps(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10000A66C(&qword_10009CC50);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t iMessageAppsRegistry.stickerApps.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100079C88);
  v2 = swift_getKeyPath(&unk_100079CB0);
  static Published.subscript.getter(&v6, v0, KeyPath, v2);
  swift_release(v2, v3);
  swift_release(KeyPath, v4);
  return v6;
}

uint64_t sub_100056238@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 192))();
  *a2 = result;
  return result;
}

uint64_t sub_100056268(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 200);
  v3 = swift_bridgeObjectRetain(*a1);
  return v2(v3);
}

uint64_t iMessageAppsRegistry.stickerApps.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100079C88);
  v4 = swift_getKeyPath(&unk_100079CB0);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*iMessageAppsRegistry.stickerApps.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100079C88);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100079CB0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10003021C;
}

uint64_t iMessageAppsRegistry.$stickerApps.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension20iMessageAppsRegistry__stickerApps, v3, 33, 0);
  v1 = sub_10000A66C(&qword_10009CC58);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t iMessageAppsRegistry.$stickerApps.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_10000A66C(&qword_10009CC60);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension20iMessageAppsRegistry__stickerApps, v10, 33, 0);
  v7 = sub_10000A66C(&qword_10009CC58);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*iMessageAppsRegistry.$stickerApps.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10000A66C(&qword_10009CC60);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22StickersUltraExtension20iMessageAppsRegistry__stickerApps;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10000A66C(&qword_10009CC58);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100030464;
}

uint64_t sub_100056578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t result;
  unint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  NSObject *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48[2];
  _BYTE v49[152];

  v1 = v0;
  v2 = sub_10000A66C((uint64_t *)&unk_10009C0B0);
  inited = swift_initStackObject(v2, v49);
  *(_OWORD *)(inited + 16) = xmmword_100079C60;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonPluginIdentifierFunCam);
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonBundleIdentifierCling);
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonPluginIdentifierActivity);
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonPluginIdentifierAnimojiCameraApp);
  *(_QWORD *)(inited + 88) = v7;
  *(_QWORD *)(inited + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonPluginIdentifierFilters);
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonPluginIdentifierText);
  *(_QWORD *)(inited + 120) = v9;
  *(_QWORD *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(IMBalloonPluginIdentifierShapes);
  *(_QWORD *)(inited + 136) = v10;
  v11 = sub_10005A404(inited);
  swift_setDeallocating(inited);
  v12 = swift_arrayDestroy(inited + 32, 7, &type metadata for String);
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 144))(v12);
  v14 = (unint64_t)sub_10005A5A4(v13, v11);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v11);
  if ((v14 & 0x8000000000000000) != 0 || (v14 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v14);
    v15 = (uint64_t)sub_1000574C0(v42);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
  }
  v48[0] = v15;
  sub_100057634(v48);
  swift_bridgeObjectRelease(v14);
  v16 = v48[0];
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 264))(v48[0]);
  swift_release(v16, v18);
  if (qword_10009F470 != -1)
    swift_once(&qword_10009F470, sub_100054E2C);
  v19 = type metadata accessor for Logger(0);
  sub_10000D130(v19, (uint64_t)qword_10009F478);
  v20 = swift_bridgeObjectRetain_n(v17, 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v21, v22))
  {

    swift_bridgeObjectRelease_n(v17, 2, v36);
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 200))(v17);
  }
  v23 = (uint8_t *)swift_slowAlloc(12, -1);
  v24 = swift_slowAlloc(32, -1);
  v48[0] = v24;
  *(_DWORD *)v23 = 136315138;
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v43 = v17;
    else
      v43 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v25 = _CocoaArrayWrapper.endIndex.getter(v43);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v25 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v26 = _swiftEmptyArrayStorage;
  v46 = v24;
  if (!v25)
  {
LABEL_20:
    v37 = Array.description.getter(v26, &type metadata for String);
    v39 = v38;
    swift_bridgeObjectRelease(v26);
    v47 = (_QWORD *)sub_10000C99C(v37, v39, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v23 + 4, v23 + 12);
    swift_bridgeObjectRelease_n(v17, 2, v40);
    swift_bridgeObjectRelease(v39);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Loaded apps %s", v23, 0xCu);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 200))(v17);
  }
  v47 = _swiftEmptyArrayStorage;
  sub_100059288(0, v25 & ~(v25 >> 63), 0);
  if ((v25 & 0x8000000000000000) == 0)
  {
    v44 = v23;
    v45 = v21;
    v28 = 0;
    v26 = v47;
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
      {
        v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v17);
      }
      else
      {
        v29 = *(_QWORD *)(v17 + 8 * v28 + 32);
        swift_retain(v29);
      }
      v30 = *(_QWORD *)(v29 + 32);
      v31 = *(_QWORD *)(v29 + 40);
      swift_bridgeObjectRetain(v31);
      swift_release(v29, v32);
      v47 = v26;
      v34 = v26[2];
      v33 = v26[3];
      if (v34 >= v33 >> 1)
      {
        sub_100059288(v33 > 1, v34 + 1, 1);
        v26 = v47;
      }
      ++v28;
      v26[2] = v34 + 1;
      v35 = &v26[2 * v34];
      v35[4] = v30;
      v35[5] = v31;
    }
    while (v25 != v28);
    v23 = v44;
    v21 = v45;
    goto LABEL_20;
  }
  __break(1u);
  result = swift_release(v48[0], v27);
  __break(1u);
  return result;
}

uint64_t sub_1000569E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  void *v5;

  v0 = type metadata accessor for iMessageAppsRegistry(0);
  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_QWORD *)(v1 + 48) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 56) = &_swiftEmptyDictionarySingleton;
  v2 = type metadata accessor for iMessageAppsPreferences();
  *(_QWORD *)(v1 + 64) = swift_allocObject(v2, 16, 7);
  v5 = &_swiftEmptyArrayStorage;
  v3 = sub_10000A66C(&qword_10009CC50);
  result = Published.init(initialValue:)(&v5, v3);
  static iMessageAppsRegistry.shared = v1;
  return result;
}

uint64_t sub_100056A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_QWORD *)(v1 + 48) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 56) = &_swiftEmptyDictionarySingleton;
  v2 = type metadata accessor for iMessageAppsPreferences();
  *(_QWORD *)(v1 + 64) = swift_allocObject(v2, 16, 7);
  v5 = _swiftEmptyArrayStorage;
  v3 = sub_10000A66C(&qword_10009CC50);
  Published.init(initialValue:)(&v5, v3);
  return v1;
}

uint64_t *iMessageAppsRegistry.shared.unsafeMutableAddressor()
{
  if (qword_10009F490 != -1)
    swift_once(&qword_10009F490, sub_1000569E8);
  return &static iMessageAppsRegistry.shared;
}

double static iMessageAppsRegistry.shared.getter()
{
  double result;

  if (qword_10009F490 != -1)
    swift_once(&qword_10009F490, sub_1000569E8);
  *(_QWORD *)&result = swift_retain(static iMessageAppsRegistry.shared).n128_u64[0];
  return result;
}

uint64_t sub_100056BAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  _QWORD *v57;

  v3 = _swiftEmptyArrayStorage;
  v4 = (_QWORD *)sub_1000553AC((uint64_t)_swiftEmptyArrayStorage);
  v57 = v4;
  v5 = (*(uint64_t (**)(void))(**(_QWORD **)(v1 + 64) + 80))();
  v6 = *(_QWORD *)(v5 + 16);
  v55 = a1;
  if (v6)
  {
    v7 = 0;
    v54 = v5;
    v3 = (uint64_t *)(v5 + 40);
    while (1)
    {
      a1 = *(v3 - 1);
      v8 = *v3;
      swift_bridgeObjectRetain(*v3);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
      v56 = v4;
      v11 = sub_1000173C4(a1, v8);
      v12 = v4[2];
      v13 = (v10 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        if (a1 < 0)
          v35 = a1;
        else
          v35 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v22 = _CocoaArrayWrapper.endIndex.getter(v35);
        if (!v22)
          goto LABEL_41;
        goto LABEL_19;
      }
      v15 = v10;
      if (v4[3] >= v14)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v4 = v56;
          if ((v10 & 1) == 0)
            goto LABEL_12;
        }
        else
        {
          sub_1000598CC();
          v4 = v56;
          if ((v15 & 1) == 0)
            goto LABEL_12;
        }
      }
      else
      {
        sub_1000595C4(v14, isUniquelyReferenced_nonNull_native);
        v16 = sub_1000173C4(a1, v8);
        if ((v15 & 1) != (v17 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
          __break(1u);
          result = swift_release(v56, v53);
          __break(1u);
          return result;
        }
        v11 = v16;
        v4 = v56;
        if ((v15 & 1) == 0)
        {
LABEL_12:
          v4[(v11 >> 6) + 8] |= 1 << v11;
          v18 = (uint64_t *)(v4[6] + 16 * v11);
          *v18 = a1;
          v18[1] = v8;
          *(_QWORD *)(v4[7] + 8 * v11) = v7;
          v19 = v4[2];
          v20 = __OFADD__(v19, 1);
          v21 = v19 + 1;
          if (v20)
            goto LABEL_36;
          v4[2] = v21;
          swift_bridgeObjectRetain(v8);
          goto LABEL_4;
        }
      }
      *(_QWORD *)(v4[7] + 8 * v11) = v7;
LABEL_4:
      ++v7;
      v3 += 2;
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(0x8000000000000000);
      if (v6 == v7)
      {
        v57 = v4;
        v5 = v54;
        a1 = v55;
        v3 = _swiftEmptyArrayStorage;
        break;
      }
    }
  }
  swift_bridgeObjectRelease(v5);
  v56 = _swiftEmptyArrayStorage;
  v11 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
    goto LABEL_37;
  v22 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v22)
  {
LABEL_41:
    v34 = (unint64_t)v3;
    goto LABEL_42;
  }
LABEL_19:
  v23 = 0;
  v24 = a1 & 0xC000000000000001;
  v25 = a1 & 0xFFFFFFFFFFFFFF8;
  while (v24)
  {
    v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(v23, a1);
    v3 = (uint64_t *)(v23 + 1);
    if (__OFADD__(v23, 1))
      goto LABEL_32;
LABEL_25:
    if (v4[2])
    {
      v28 = *(_QWORD *)(v26 + 16);
      v29 = *(_QWORD *)(v26 + 24);
      swift_bridgeObjectRetain(v29);
      sub_1000173C4(v28, v29);
      if ((v30 & 1) != 0)
      {
        v31 = swift_bridgeObjectRelease(v29);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
        v32 = v56[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
        v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v26);
        specialized ContiguousArray._endMutation()(v33);
      }
      else
      {
        swift_release(v26, v30);
        swift_bridgeObjectRelease(v29);
      }
      a1 = v55;
    }
    else
    {
      swift_release(v26, v27);
    }
    ++v23;
    if (v3 == (uint64_t *)v22)
      goto LABEL_33;
  }
  if (v23 >= *(_QWORD *)(v25 + 16))
    goto LABEL_35;
  v26 = *(_QWORD *)(a1 + 8 * v23 + 32);
  swift_retain(v26);
  v3 = (uint64_t *)(v23 + 1);
  if (!__OFADD__(v23, 1))
    goto LABEL_25;
LABEL_32:
  __break(1u);
LABEL_33:
  v34 = (unint64_t)v56;
  v3 = _swiftEmptyArrayStorage;
LABEL_42:
  swift_bridgeObjectRelease(a1);
  v56 = v3;
  if (v11)
  {
    if (a1 < 0)
      v47 = a1;
    else
      v47 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v36 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter(v47);
    if (!v36)
      goto LABEL_62;
LABEL_44:
    v37 = 0;
    v38 = a1 & 0xC000000000000001;
    v39 = a1 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v38)
      {
        v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(v37, a1);
        a1 = v40;
        v43 = (uint64_t *)(v37 + 1);
        if (__OFADD__(v37, 1))
        {
LABEL_56:
          __break(1u);
LABEL_57:
          v36 = v56;
          goto LABEL_63;
        }
      }
      else
      {
        if (v37 >= *(_QWORD *)(v39 + 16))
        {
          __break(1u);
          goto LABEL_67;
        }
        a1 = *(_QWORD *)(a1 + 8 * v37 + 32);
        swift_retain(a1);
        v43 = (uint64_t *)(v37 + 1);
        if (__OFADD__(v37, 1))
          goto LABEL_56;
      }
      if (v4[2])
      {
        v44 = *(_QWORD *)(a1 + 16);
        v45 = *(_QWORD *)(a1 + 24);
        swift_bridgeObjectRetain(v45);
        sub_1000173C4(v44, v45);
        if ((v46 & 1) != 0)
        {
          swift_release(a1, v46);
          swift_bridgeObjectRelease(v45);
          goto LABEL_47;
        }
        v40 = swift_bridgeObjectRelease(v45);
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v40);
      v41 = v56[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v41);
      v42 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, a1);
      specialized ContiguousArray._endMutation()(v42);
LABEL_47:
      ++v37;
      a1 = v55;
      if (v43 == v36)
        goto LABEL_57;
    }
  }
  v36 = *(uint64_t **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v36)
    goto LABEL_44;
LABEL_62:
  v36 = _swiftEmptyArrayStorage;
LABEL_63:
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRetain(v34);
  if ((v34 & 0x8000000000000000) != 0 || (v48 = (uint64_t *)v34, (v34 & 0x4000000000000000) != 0))
  {
LABEL_67:
    v48 = sub_1000574C0(v34);
    swift_release(v34, v52);
  }
  v56 = v48;
  sub_1000575B4((uint64_t *)&v56, (uint64_t *)&v57);
  swift_release(v34, v49);
  sub_10005940C((uint64_t)v36);
  v50 = v56;
  swift_bridgeObjectRelease(v57);
  return (uint64_t)v50;
}

_QWORD *iMessageAppsRegistry.deinit()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  sub_100011988((uint64_t)(v0 + 2));
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8], v1);
  v2 = (char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension20iMessageAppsRegistry__stickerApps;
  v3 = sub_10000A66C(&qword_10009CC58);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t iMessageAppsRegistry.__deallocating_deinit()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  sub_100011988((uint64_t)(v0 + 2));
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8], v1);
  v2 = (char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension20iMessageAppsRegistry__stickerApps;
  v3 = sub_10000A66C(&qword_10009CC58);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10005715C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD *v10;

  v1 = sub_10000A66C(&qword_10009CC58);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + 56) = &_swiftEmptyDictionarySingleton;
  v5 = type metadata accessor for iMessageAppsPreferences();
  *(_QWORD *)(v0 + 64) = swift_allocObject(v5, 16, 7);
  v6 = v0 + OBJC_IVAR____TtC22StickersUltraExtension20iMessageAppsRegistry__stickerApps;
  v10 = _swiftEmptyArrayStorage;
  v7 = sub_10000A66C(&qword_10009CC50);
  Published.init(initialValue:)(&v10, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, v1);
  return v0;
}

uint64_t sub_10005723C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 144))();
}

uint64_t sub_100057264@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for iMessageAppsRegistry(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

_QWORD *iMessageAppsPreferences.preferredOrder.getter()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v6, v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_10005A0F4((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_10000A66C(&qword_10009CC48);
    if ((swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
      return (_QWORD *)v5;
  }
  else
  {
    sub_100011988((uint64_t)v7);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1000573B4()
{
  return &unk_10008D6E0;
}

Swift::Void __swiftcall iMessageAppsPreferences.setPreferredOrder(extensionIdentifiers:)(Swift::OpaquePointer extensionIdentifiers)
{
  id v1;
  Class isa;
  NSString v3;

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  isa = Array._bridgeToObjectiveC()().super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setObject:forKey:", isa, v3);

}

uint64_t iMessageAppsPreferences.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t iMessageAppsPreferences.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

unint64_t sub_100057478()
{
  return 0xD00000000000002BLL;
}

Swift::Void __swiftcall iMessageAppsRegistry.overrideApps(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(*(_QWORD *)v1 + 152);
  v2 = swift_bridgeObjectRetain(with._rawValue);
  v3(v2);
}

_QWORD *sub_1000574C0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = j__malloc_size(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    v7 = sub_100059A78((unint64_t)(v4 + 4), v2, v1);
    v1 = v8;
    swift_bridgeObjectRelease(v7);
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v9 = v1;
    else
      v9 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_1000575B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v9[2];

  v4 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_100059D34(v4);
    *a1 = v4;
  }
  v6 = *(_QWORD *)(v4 + 16);
  v9[0] = v4 + 32;
  v9[1] = v6;
  v7 = sub_1000576AC(v9, a2);
  return specialized ContiguousArray._endMutation()(v7);
}

uint64_t sub_100057634(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  Swift::Int v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100059D34(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  v5 = sub_100058064(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

Swift::Int sub_1000576AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  Swift::Int v5;
  Swift::Int result;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  Swift::Int v55;
  Swift::Int v56;
  uint64_t *v57;
  uint64_t v58;
  Swift::Int v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  char v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  Swift::Int v143;
  uint64_t v144;
  Swift::Int v145;
  Swift::Int v146;
  Swift::Int v147;
  char *__dst;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v154;

  v3 = v2;
  v5 = a1[1];
  result = _minimumMergeRunLength(_:)(v5);
  if (result >= v5)
  {
    if (v5 < 0)
      goto LABEL_165;
    if (v5)
      return sub_100058730(0, v5, 1, a1, a2);
    return result;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_173;
  v8 = result;
  v140 = a1;
  if (v5 < 2)
  {
    v12 = (char *)_swiftEmptyArrayStorage;
    v154 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      v15 = _swiftEmptyArrayStorage[2];
LABEL_131:
      v125 = v12;
      if (v15 >= 2)
      {
        v132 = *v140;
        do
        {
          v133 = v15 - 2;
          if (v15 < 2)
            goto LABEL_160;
          if (!v132)
            goto LABEL_172;
          v134 = *(_QWORD *)&v125[16 * v133 + 32];
          v135 = *(_QWORD *)&v125[16 * v15 + 24];
          sub_1000589A4((char *)(v132 + 8 * v134), (char *)(v132 + 8 * *(_QWORD *)&v125[16 * v15 + 16]), v132 + 8 * v135, __dst, a2);
          if (v3)
            break;
          if (v135 < v134)
            goto LABEL_161;
          if ((swift_isUniquelyReferenced_nonNull_native(v125) & 1) == 0)
            v125 = sub_100059274((uint64_t)v125);
          if (v133 >= *((_QWORD *)v125 + 2))
            goto LABEL_162;
          v136 = &v125[16 * v133 + 32];
          *(_QWORD *)v136 = v134;
          *((_QWORD *)v136 + 1) = v135;
          v137 = *((_QWORD *)v125 + 2);
          if (v15 > v137)
            goto LABEL_163;
          memmove(&v125[16 * v15 + 16], &v125[16 * v15 + 32], 16 * (v137 - v15));
          *((_QWORD *)v125 + 2) = v137 - 1;
          v15 = v137 - 1;
        }
        while (v137 > 2);
      }
LABEL_142:
      v138 = swift_bridgeObjectRelease(v125);
      *(_QWORD *)((v154 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v138);
      return swift_bridgeObjectRelease(v154);
    }
  }
  else
  {
    v9 = v7 >> 1;
    v10 = type metadata accessor for iMessageApp();
    v11 = static Array._allocateBufferUninitialized(minimumCapacity:)(v9, v10);
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    __dst = (char *)((v11 & 0xFFFFFFFFFFFFFF8) + 32);
    v154 = v11;
  }
  v13 = 0;
  v14 = *a1;
  v142 = *a1 + 16;
  v143 = v8;
  v141 = *a1 - 8;
  v12 = (char *)_swiftEmptyArrayStorage;
  v152 = *a1;
  v147 = v5;
  while (2)
  {
    v16 = v13++;
    v146 = v16;
    if (v13 >= v5)
      goto LABEL_54;
    v17 = v3;
    v18 = *(_QWORD *)(v14 + 8 * v13);
    v19 = *(_QWORD *)(v14 + 8 * v16);
    v20 = *a2;
    if (*(_QWORD *)(*a2 + 16))
    {
      v21 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      swift_retain(*(_QWORD *)(v14 + 8 * v13));
      swift_retain(v19);
      swift_bridgeObjectRetain(v22);
      v23 = sub_1000173C4(v21, v22);
      if ((v24 & 1) != 0)
      {
        v149 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v23);
        swift_bridgeObjectRelease(v22);
        goto LABEL_22;
      }
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      swift_retain(*(_QWORD *)(v14 + 8 * v13));
      swift_retain(v19);
    }
    v149 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_22:
    v26 = *a2;
    if (!*(_QWORD *)(*a2 + 16))
    {
      swift_release(v18, v25);
      swift_release(v19, v32);
LABEL_27:
      v144 = 0x7FFFFFFFFFFFFFFFLL;
      goto LABEL_28;
    }
    v27 = *(_QWORD *)(v19 + 16);
    v28 = *(_QWORD *)(v19 + 24);
    swift_bridgeObjectRetain(v28);
    v29 = sub_1000173C4(v27, v28);
    if ((v30 & 1) == 0)
    {
      swift_release(v18, v30);
      swift_release(v19, v33);
      swift_bridgeObjectRelease(v28);
      goto LABEL_27;
    }
    v144 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v29);
    swift_release(v18, v30);
    swift_release(v19, v31);
    swift_bridgeObjectRelease(v28);
LABEL_28:
    v13 = v16 + 2;
    v3 = v17;
    v14 = v152;
    if (v16 + 2 >= v147)
      goto LABEL_46;
    v34 = (_QWORD *)(v142 + 8 * v16);
    do
    {
      v35 = v3;
      v37 = *(v34 - 1);
      v36 = *v34;
      v38 = *a2;
      if (*(_QWORD *)(*a2 + 16))
      {
        v39 = *(_QWORD *)(v36 + 16);
        v40 = *(_QWORD *)(v36 + 24);
        swift_retain(*v34);
        swift_retain(v37);
        swift_bridgeObjectRetain(v40);
        v41 = sub_1000173C4(v39, v40);
        if ((v42 & 1) != 0)
        {
          v43 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 8 * v41);
          swift_bridgeObjectRelease(v40);
          goto LABEL_36;
        }
        swift_bridgeObjectRelease(v40);
      }
      else
      {
        swift_retain(*v34);
        swift_retain(v37);
      }
      v43 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_36:
      v45 = *a2;
      if (*(_QWORD *)(*a2 + 16))
      {
        v46 = *(_QWORD *)(v37 + 16);
        v47 = *(_QWORD *)(v37 + 24);
        swift_bridgeObjectRetain(v47);
        v48 = sub_1000173C4(v46, v47);
        if ((v49 & 1) != 0)
        {
          v50 = *(_QWORD *)(*(_QWORD *)(v45 + 56) + 8 * v48);
          swift_release(v36, v49);
          swift_release(v37, v51);
          swift_bridgeObjectRelease(v47);
          goto LABEL_42;
        }
        swift_release(v36, v49);
        swift_release(v37, v53);
        swift_bridgeObjectRelease(v47);
      }
      else
      {
        swift_release(v36, v44);
        swift_release(v37, v52);
      }
      v50 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_42:
      v3 = v35;
      v14 = v152;
      if (v149 < v144 == v43 >= v50)
        goto LABEL_45;
      ++v13;
      ++v34;
    }
    while (v147 != v13);
    v13 = v147;
LABEL_45:
    v16 = v146;
LABEL_46:
    if (v149 < v144)
    {
      if (v13 < v16)
        goto LABEL_166;
      if (v16 < v13)
      {
        v54 = (uint64_t *)(v141 + 8 * v13);
        v55 = v13;
        v56 = v16;
        v57 = (uint64_t *)(v14 + 8 * v16);
        do
        {
          if (v56 != --v55)
          {
            if (!v14)
              goto LABEL_171;
            v58 = *v57;
            *v57 = *v54;
            *v54 = v58;
          }
          ++v56;
          --v54;
          ++v57;
        }
        while (v56 < v55);
      }
    }
LABEL_54:
    if (v13 >= v147)
      goto LABEL_82;
    if (__OFSUB__(v13, v16))
      goto LABEL_164;
    if (v13 - v16 >= v143)
      goto LABEL_82;
    if (__OFADD__(v16, v143))
      goto LABEL_167;
    v59 = v147;
    if (v16 + v143 < v147)
      v59 = v16 + v143;
    if (v59 >= v16)
    {
      if (v13 == v59)
        goto LABEL_82;
      v139 = v12;
      v150 = v3;
      v60 = (uint64_t *)(v141 + 8 * v13);
      v145 = v59;
      while (2)
      {
        v61 = *(_QWORD *)(v14 + 8 * v13);
        v62 = v60;
        while (2)
        {
          v63 = *v62;
          v64 = *a2;
          if (*(_QWORD *)(*a2 + 16))
          {
            v65 = *(_QWORD *)(v61 + 16);
            v66 = *(_QWORD *)(v61 + 24);
            swift_retain(v61);
            swift_retain(v63);
            swift_bridgeObjectRetain(v66);
            v67 = sub_1000173C4(v65, v66);
            if ((v68 & 1) != 0)
            {
              v69 = *(_QWORD *)(*(_QWORD *)(v64 + 56) + 8 * v67);
              swift_bridgeObjectRelease(v66);
              goto LABEL_71;
            }
            swift_bridgeObjectRelease(v66);
          }
          else
          {
            swift_retain(v61);
            swift_retain(v63);
          }
          v69 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_71:
          v71 = *a2;
          if (*(_QWORD *)(*a2 + 16))
          {
            v72 = *(_QWORD *)(v63 + 16);
            v73 = *(_QWORD *)(v63 + 24);
            swift_bridgeObjectRetain(v73);
            v74 = sub_1000173C4(v72, v73);
            if ((v75 & 1) != 0)
            {
              v76 = *(_QWORD *)(*(_QWORD *)(v71 + 56) + 8 * v74);
              swift_release(v61, v75);
              swift_release(v63, v77);
              swift_bridgeObjectRelease(v73);
              v14 = v152;
              if (v69 >= v76)
                break;
              goto LABEL_78;
            }
            swift_release(v61, v75);
            swift_release(v63, v79);
            swift_bridgeObjectRelease(v73);
          }
          else
          {
            swift_release(v61, v70);
            swift_release(v63, v78);
          }
          v14 = v152;
          if (v69 == 0x7FFFFFFFFFFFFFFFLL)
            break;
LABEL_78:
          if (!v14)
            goto LABEL_169;
          v80 = *v62;
          v61 = v62[1];
          *v62 = v61;
          v62[1] = v80;
          --v62;
          if (v13 != ++v16)
            continue;
          break;
        }
        ++v13;
        ++v60;
        v16 = v146;
        if (v13 != v145)
          continue;
        break;
      }
      v13 = v145;
      v3 = v150;
      v12 = v139;
LABEL_82:
      if (v13 < v16)
        goto LABEL_159;
      if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
        v12 = sub_1000590D4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
      v82 = *((_QWORD *)v12 + 2);
      v81 = *((_QWORD *)v12 + 3);
      v15 = v82 + 1;
      v14 = v152;
      v151 = v3;
      if (v82 >= v81 >> 1)
      {
        v131 = sub_1000590D4((char *)(v81 > 1), v82 + 1, 1, v12);
        v14 = v152;
        v12 = v131;
      }
      *((_QWORD *)v12 + 2) = v15;
      v83 = v12 + 32;
      v84 = &v12[16 * v82 + 32];
      *(_QWORD *)v84 = v146;
      *((_QWORD *)v84 + 1) = v13;
      if (v82)
      {
        while (2)
        {
          v85 = v15 - 1;
          if (v15 >= 4)
          {
            v90 = &v83[16 * v15];
            v91 = *((_QWORD *)v90 - 8);
            v92 = *((_QWORD *)v90 - 7);
            v96 = __OFSUB__(v92, v91);
            v93 = v92 - v91;
            if (v96)
              goto LABEL_148;
            v95 = *((_QWORD *)v90 - 6);
            v94 = *((_QWORD *)v90 - 5);
            v96 = __OFSUB__(v94, v95);
            v88 = v94 - v95;
            v89 = v96;
            if (v96)
              goto LABEL_149;
            v97 = v15 - 2;
            v98 = &v83[16 * v15 - 32];
            v100 = *(_QWORD *)v98;
            v99 = *((_QWORD *)v98 + 1);
            v96 = __OFSUB__(v99, v100);
            v101 = v99 - v100;
            if (v96)
              goto LABEL_151;
            v96 = __OFADD__(v88, v101);
            v102 = v88 + v101;
            if (v96)
              goto LABEL_154;
            if (v102 >= v93)
            {
              v120 = &v83[16 * v85];
              v122 = *(_QWORD *)v120;
              v121 = *((_QWORD *)v120 + 1);
              v96 = __OFSUB__(v121, v122);
              v123 = v121 - v122;
              if (v96)
                goto LABEL_158;
              v113 = v88 < v123;
            }
            else
            {
LABEL_101:
              if ((v89 & 1) != 0)
                goto LABEL_150;
              v97 = v15 - 2;
              v103 = &v83[16 * v15 - 32];
              v105 = *(_QWORD *)v103;
              v104 = *((_QWORD *)v103 + 1);
              v106 = __OFSUB__(v104, v105);
              v107 = v104 - v105;
              v108 = v106;
              if (v106)
                goto LABEL_153;
              v109 = &v83[16 * v85];
              v111 = *(_QWORD *)v109;
              v110 = *((_QWORD *)v109 + 1);
              v96 = __OFSUB__(v110, v111);
              v112 = v110 - v111;
              if (v96)
                goto LABEL_156;
              if (__OFADD__(v107, v112))
                goto LABEL_157;
              if (v107 + v112 < v88)
                goto LABEL_113;
              v113 = v88 < v112;
            }
            if (v113)
              v85 = v97;
          }
          else
          {
            if (v15 == 3)
            {
              v87 = *((_QWORD *)v12 + 4);
              v86 = *((_QWORD *)v12 + 5);
              v96 = __OFSUB__(v86, v87);
              v88 = v86 - v87;
              v89 = v96;
              goto LABEL_101;
            }
            v114 = *((_QWORD *)v12 + 4);
            v115 = *((_QWORD *)v12 + 5);
            v96 = __OFSUB__(v115, v114);
            v107 = v115 - v114;
            v108 = v96;
LABEL_113:
            if ((v108 & 1) != 0)
              goto LABEL_152;
            v116 = &v83[16 * v85];
            v118 = *(_QWORD *)v116;
            v117 = *((_QWORD *)v116 + 1);
            v96 = __OFSUB__(v117, v118);
            v119 = v117 - v118;
            if (v96)
              goto LABEL_155;
            if (v119 < v107)
              goto LABEL_14;
          }
          v124 = v85 - 1;
          if (v85 - 1 >= v15)
          {
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
            goto LABEL_168;
          }
          if (!v14)
            goto LABEL_170;
          v125 = v12;
          v126 = &v83[16 * v124];
          v127 = *(_QWORD *)v126;
          v128 = &v83[16 * v85];
          v129 = *((_QWORD *)v128 + 1);
          sub_1000589A4((char *)(v14 + 8 * *(_QWORD *)v126), (char *)(v14 + 8 * *(_QWORD *)v128), v14 + 8 * v129, __dst, a2);
          if (v151)
            goto LABEL_142;
          if (v129 < v127)
            goto LABEL_145;
          if (v85 > *((_QWORD *)v125 + 2))
            goto LABEL_146;
          *(_QWORD *)v126 = v127;
          *(_QWORD *)&v83[16 * v124 + 8] = v129;
          v130 = *((_QWORD *)v125 + 2);
          if (v85 >= v130)
            goto LABEL_147;
          v12 = v125;
          v15 = v130 - 1;
          memmove(&v83[16 * v85], v128 + 16, 16 * (v130 - 1 - v85));
          *((_QWORD *)v125 + 2) = v130 - 1;
          v14 = v152;
          if (v130 <= 2)
            goto LABEL_14;
          continue;
        }
      }
      v15 = 1;
LABEL_14:
      v5 = v147;
      v3 = v151;
      if (v13 >= v147)
        goto LABEL_131;
      continue;
    }
    break;
  }
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

Swift::Int sub_100058064(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int result;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v23;
  Swift::Int v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v33;
  Swift::Int v34;
  Swift::Int v35;
  uint64_t *v36;
  uint64_t v37;
  Swift::Int v38;
  _QWORD *v39;
  uint64_t v40;
  Swift::Int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  Swift::Int v111;
  Swift::Int v112;
  uint64_t v113;
  char *__dst;
  uint64_t v115;

  v2 = v1;
  v4 = a1[1];
  result = _minimumMergeRunLength(_:)(v4);
  if (result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        return sub_1000588E8(0, v4, 1, a1);
      return result;
    }
    goto LABEL_152;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
  {
LABEL_160:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  v7 = result;
  v109 = a1;
  if (v4 < 2)
  {
    v11 = (char *)_swiftEmptyArrayStorage;
    v115 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
LABEL_118:
      v101 = v11;
      if (v14 < 2)
        goto LABEL_115;
      v103 = *v109;
      while (1)
      {
        v104 = v14 - 2;
        if (v14 < 2)
          goto LABEL_147;
        if (!v103)
          goto LABEL_159;
        v100 = v101;
        v105 = *(_QWORD *)&v101[16 * v104 + 32];
        v106 = *(_QWORD *)&v101[16 * v14 + 24];
        sub_100058E2C((char *)(v103 + 8 * v105), (char *)(v103 + 8 * *(_QWORD *)&v101[16 * v14 + 16]), v103 + 8 * v106, __dst);
        if (v2)
          goto LABEL_114;
        if (v106 < v105)
          goto LABEL_148;
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0)
          v100 = sub_100059274((uint64_t)v100);
        if (v104 >= *((_QWORD *)v100 + 2))
          goto LABEL_149;
        v107 = &v100[16 * v104 + 32];
        *(_QWORD *)v107 = v105;
        *((_QWORD *)v107 + 1) = v106;
        v108 = *((_QWORD *)v100 + 2);
        if (v14 > v108)
          goto LABEL_150;
        memmove(&v100[16 * v14 + 16], &v100[16 * v14 + 32], 16 * (v108 - v14));
        v101 = v100;
        *((_QWORD *)v100 + 2) = v108 - 1;
        v14 = v108 - 1;
        if (v108 <= 2)
          goto LABEL_115;
      }
    }
  }
  else
  {
    v8 = v6 >> 1;
    v9 = type metadata accessor for iMessageApp();
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v115 = v10;
  }
  v12 = 0;
  v13 = *a1;
  v110 = v13 - 8;
  v111 = v7;
  v11 = (char *)_swiftEmptyArrayStorage;
  v112 = v4;
  v113 = v13;
  while (1)
  {
    v15 = v12++;
    if (v12 < v4)
    {
      v16 = *(_QWORD *)(v13 + 8 * v12);
      v17 = *(_QWORD *)(v13 + 8 * v15);
      v18 = *(_QWORD *)(v16 + 48);
      v19 = *(_QWORD *)(v16 + 56);
      v20 = *(_QWORD *)(v17 + 48);
      v21 = *(_QWORD *)(v17 + 56);
      if (v18 == v20 && v19 == v21)
      {
        v24 = v15 + 2;
        if (v15 + 2 >= v4)
          goto LABEL_43;
        v23 = 0;
        do
        {
LABEL_26:
          v26 = *(_QWORD *)(v13 + 8 * v24);
          v27 = *(_QWORD *)(v13 + 8 * v12);
          v28 = *(_QWORD *)(v26 + 48);
          v29 = *(_QWORD *)(v26 + 56);
          v30 = *(_QWORD *)(v27 + 48);
          v31 = *(_QWORD *)(v27 + 56);
          if (v28 == v30 && v29 == v31)
          {
            if ((v23 & 1) != 0)
              goto LABEL_35;
          }
          else if (((v23 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v28, v29, v30, v31, 1)) & 1) != 0)
          {
            goto LABEL_34;
          }
          v25 = v24 + 1;
          v12 = v24;
          v24 = v25;
        }
        while (v25 < v4);
        v24 = v25;
      }
      else
      {
        v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v20, v21, 1);
        v24 = v15 + 2;
        if (v15 + 2 < v4)
          goto LABEL_26;
      }
LABEL_34:
      v12 = v24;
      if ((v23 & 1) != 0)
      {
LABEL_35:
        if (v24 < v15)
          goto LABEL_155;
        if (v15 < v24)
        {
          v33 = (uint64_t *)(v110 + 8 * v24);
          v34 = v24;
          v35 = v15;
          v36 = (uint64_t *)(v13 + 8 * v15);
          do
          {
            if (v35 != --v34)
            {
              if (!v13)
                goto LABEL_158;
              v37 = *v36;
              *v36 = *v33;
              *v33 = v37;
            }
            ++v35;
            --v33;
            ++v36;
          }
          while (v35 < v34);
        }
LABEL_43:
        v12 = v24;
      }
    }
    if (v12 < v4)
    {
      if (__OFSUB__(v12, v15))
        goto LABEL_151;
      if (v12 - v15 < v111)
      {
        if (__OFADD__(v15, v111))
          goto LABEL_153;
        if (v15 + v111 >= v4)
          v38 = v4;
        else
          v38 = v15 + v111;
        if (v38 < v15)
          goto LABEL_154;
        if (v12 != v38)
        {
          v39 = (_QWORD *)(v110 + 8 * v12);
          do
          {
            v40 = *(_QWORD *)(v13 + 8 * v12);
            v41 = v15;
            v42 = v39;
            do
            {
              v43 = *(_QWORD *)(v40 + 48);
              v44 = *(_QWORD *)(v40 + 56);
              v45 = *(_QWORD *)(*v42 + 48);
              v46 = *(_QWORD *)(*v42 + 56);
              v47 = v43 == v45 && v44 == v46;
              if (v47 || (_stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v45, v46, 1) & 1) == 0)
                break;
              if (!v13)
                goto LABEL_156;
              v48 = *v42;
              v40 = v42[1];
              *v42 = v40;
              v42[1] = v48;
              --v42;
              ++v41;
            }
            while (v12 != v41);
            ++v12;
            ++v39;
          }
          while (v12 != v38);
          v12 = v38;
        }
      }
    }
    if (v12 < v15)
    {
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
      goto LABEL_160;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1000590D4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v50 = *((_QWORD *)v11 + 2);
    v49 = *((_QWORD *)v11 + 3);
    v14 = v50 + 1;
    if (v50 >= v49 >> 1)
      v11 = sub_1000590D4((char *)(v49 > 1), v50 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v14;
    v51 = v11 + 32;
    v52 = &v11[16 * v50 + 32];
    *(_QWORD *)v52 = v15;
    *((_QWORD *)v52 + 1) = v12;
    if (v50)
      break;
    v14 = 1;
    v13 = v113;
LABEL_14:
    v4 = v112;
    if (v12 >= v112)
    {
      v2 = v1;
      goto LABEL_118;
    }
  }
  v13 = v113;
  while (1)
  {
    v53 = v14 - 1;
    if (v14 >= 4)
    {
      v58 = &v51[16 * v14];
      v59 = *((_QWORD *)v58 - 8);
      v60 = *((_QWORD *)v58 - 7);
      v64 = __OFSUB__(v60, v59);
      v61 = v60 - v59;
      if (v64)
        goto LABEL_135;
      v63 = *((_QWORD *)v58 - 6);
      v62 = *((_QWORD *)v58 - 5);
      v64 = __OFSUB__(v62, v63);
      v56 = v62 - v63;
      v57 = v64;
      if (v64)
        goto LABEL_136;
      v65 = v14 - 2;
      v66 = &v51[16 * v14 - 32];
      v68 = *(_QWORD *)v66;
      v67 = *((_QWORD *)v66 + 1);
      v64 = __OFSUB__(v67, v68);
      v69 = v67 - v68;
      if (v64)
        goto LABEL_138;
      v64 = __OFADD__(v56, v69);
      v70 = v56 + v69;
      if (v64)
        goto LABEL_141;
      if (v70 >= v61)
      {
        v88 = &v51[16 * v53];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v64 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v64)
          goto LABEL_145;
        v81 = v56 < v91;
        goto LABEL_103;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v82 = *((_QWORD *)v11 + 4);
        v83 = *((_QWORD *)v11 + 5);
        v64 = __OFSUB__(v83, v82);
        v75 = v83 - v82;
        v76 = v64;
        goto LABEL_97;
      }
      v55 = *((_QWORD *)v11 + 4);
      v54 = *((_QWORD *)v11 + 5);
      v64 = __OFSUB__(v54, v55);
      v56 = v54 - v55;
      v57 = v64;
    }
    if ((v57 & 1) != 0)
      goto LABEL_137;
    v65 = v14 - 2;
    v71 = &v51[16 * v14 - 32];
    v73 = *(_QWORD *)v71;
    v72 = *((_QWORD *)v71 + 1);
    v74 = __OFSUB__(v72, v73);
    v75 = v72 - v73;
    v76 = v74;
    if (v74)
      goto LABEL_140;
    v77 = &v51[16 * v53];
    v79 = *(_QWORD *)v77;
    v78 = *((_QWORD *)v77 + 1);
    v64 = __OFSUB__(v78, v79);
    v80 = v78 - v79;
    if (v64)
      goto LABEL_143;
    if (__OFADD__(v75, v80))
      goto LABEL_144;
    if (v75 + v80 >= v56)
    {
      v81 = v56 < v80;
LABEL_103:
      if (v81)
        v53 = v65;
      goto LABEL_105;
    }
LABEL_97:
    if ((v76 & 1) != 0)
      goto LABEL_139;
    v84 = &v51[16 * v53];
    v86 = *(_QWORD *)v84;
    v85 = *((_QWORD *)v84 + 1);
    v64 = __OFSUB__(v85, v86);
    v87 = v85 - v86;
    if (v64)
      goto LABEL_142;
    if (v87 < v75)
      goto LABEL_14;
LABEL_105:
    v92 = v53 - 1;
    if (v53 - 1 >= v14)
    {
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
      goto LABEL_146;
    }
    if (!v13)
      goto LABEL_157;
    v93 = v11;
    v94 = v13;
    v95 = &v51[16 * v92];
    v96 = *(_QWORD *)v95;
    v97 = &v51[16 * v53];
    v98 = *((_QWORD *)v97 + 1);
    sub_100058E2C((char *)(v94 + 8 * *(_QWORD *)v95), (char *)(v94 + 8 * *(_QWORD *)v97), v94 + 8 * v98, __dst);
    if (v1)
      break;
    if (v98 < v96)
      goto LABEL_132;
    if (v53 > *((_QWORD *)v93 + 2))
      goto LABEL_133;
    *(_QWORD *)v95 = v96;
    *(_QWORD *)&v51[16 * v92 + 8] = v98;
    v99 = *((_QWORD *)v93 + 2);
    if (v53 >= v99)
      goto LABEL_134;
    v11 = v93;
    v14 = v99 - 1;
    memmove(&v51[16 * v53], v97 + 16, 16 * (v99 - 1 - v53));
    *((_QWORD *)v93 + 2) = v99 - 1;
    v81 = v99 > 2;
    v13 = v113;
    if (!v81)
      goto LABEL_14;
  }
  v100 = v93;
LABEL_114:
  v101 = v100;
LABEL_115:
  v102 = swift_bridgeObjectRelease(v101);
  *(_QWORD *)((v115 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()(v102);
  return swift_bridgeObjectRelease(v115);
}

uint64_t sub_100058730(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v29 = result;
  if (a3 != a2)
  {
    v6 = a3;
    v31 = *a4;
    v7 = (_QWORD *)(*a4 + 8 * a3 - 8);
LABEL_5:
    v8 = *(_QWORD *)(v31 + 8 * v6);
    v9 = v29;
    v30 = v7;
    while (1)
    {
      v10 = *v7;
      v11 = *a5;
      if (*(_QWORD *)(*a5 + 16))
      {
        v12 = *(_QWORD *)(v8 + 16);
        v13 = *(_QWORD *)(v8 + 24);
        swift_retain(v8);
        swift_retain(v10);
        swift_bridgeObjectRetain(v13);
        v14 = sub_1000173C4(v12, v13);
        if ((v15 & 1) != 0)
        {
          v16 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v14);
          swift_bridgeObjectRelease(v13);
          goto LABEL_12;
        }
        swift_bridgeObjectRelease(v13);
      }
      else
      {
        swift_retain(v8);
        swift_retain(v10);
      }
      v16 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_12:
      v18 = *a5;
      if (*(_QWORD *)(*a5 + 16))
      {
        v19 = *(_QWORD *)(v10 + 16);
        v20 = *(_QWORD *)(v10 + 24);
        swift_bridgeObjectRetain(v20);
        v21 = sub_1000173C4(v19, v20);
        if ((v22 & 1) != 0)
        {
          v23 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v21);
          swift_release(v8, v22);
          swift_release(v10, v24);
          result = swift_bridgeObjectRelease(v20);
          if (v16 >= v23)
            goto LABEL_4;
          goto LABEL_19;
        }
        swift_release(v8, v22);
        swift_release(v10, v26);
        result = swift_bridgeObjectRelease(v20);
      }
      else
      {
        swift_release(v8, v17);
        result = swift_release(v10, v25);
      }
      if (v16 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_4;
LABEL_19:
      if (!v31)
      {
        __break(1u);
        return result;
      }
      v27 = *v7;
      v8 = v7[1];
      *v7 = v8;
      v7[1] = v27;
      --v7;
      if (v6 == ++v9)
      {
LABEL_4:
        ++v6;
        v7 = v30 + 1;
        if (v6 == a2)
          return result;
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1000588E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 8 * a3 - 8;
LABEL_5:
    v9 = *(_QWORD *)(v7 + 8 * v4);
    v10 = v6;
    v11 = (_QWORD *)v8;
    while (1)
    {
      result = *(_QWORD *)(v9 + 48);
      v12 = *(_QWORD *)(v9 + 56);
      v13 = *(_QWORD *)(*v11 + 48);
      v14 = *(_QWORD *)(*v11 + 56);
      v15 = result == v13 && v12 == v14;
      if (v15 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v12, v13, v14, 1), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 8;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v16 = *v11;
      v9 = v11[1];
      *v11 = v9;
      v11[1] = v16;
      --v11;
      if (v4 == ++v10)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000589A4(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t *a5)
{
  char *v5;
  char *v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  char *v61;
  char *v62;
  unint64_t v63;
  char *v64;
  char *v65;
  char *v67;
  char *v68;
  char *v69;

  v5 = __dst;
  v7 = a2;
  v8 = __src;
  v9 = a2 - __src;
  v10 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v10 = a2 - __src;
  v11 = v10 >> 3;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 3;
  v69 = __src;
  v68 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 < -7)
      goto LABEL_65;
    if (__dst != a2 || &a2[8 * v14] <= __dst)
      memmove(__dst, a2, 8 * v14);
    v35 = &v5[8 * v14];
    v67 = v35;
    v69 = v7;
    v62 = v8;
    if (v8 >= v7 || v12 < 8)
    {
LABEL_64:
      sub_1000591CC((void **)&v69, (const void **)&v68, &v67);
      return 1;
    }
    v36 = (char *)(a3 - 8);
    v37 = v7;
    v61 = v5;
    while (1)
    {
      v63 = (unint64_t)v35;
      v65 = v7;
      v38 = v35 - 8;
      v39 = *((_QWORD *)v35 - 1);
      v41 = *((_QWORD *)v37 - 1);
      v37 -= 8;
      v40 = v41;
      v42 = *a5;
      if (*(_QWORD *)(*a5 + 16))
      {
        v44 = *(_QWORD *)(v39 + 16);
        v43 = *(_QWORD *)(v39 + 24);
        swift_retain(*((_QWORD *)v35 - 1));
        swift_retain(v40);
        swift_bridgeObjectRetain(v43);
        v45 = sub_1000173C4(v44, v43);
        if ((v46 & 1) != 0)
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v45);
          swift_bridgeObjectRelease(v43);
          goto LABEL_47;
        }
        swift_bridgeObjectRelease(v43);
      }
      else
      {
        swift_retain(*((_QWORD *)v35 - 1));
        swift_retain(v40);
      }
      v47 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_47:
      v49 = v36 + 8;
      v50 = *a5;
      if (*(_QWORD *)(*a5 + 16))
      {
        v52 = *(_QWORD *)(v40 + 16);
        v51 = *(_QWORD *)(v40 + 24);
        swift_bridgeObjectRetain(v51);
        v53 = sub_1000173C4(v52, v51);
        if ((v54 & 1) != 0)
        {
          v55 = *(_QWORD *)(*(_QWORD *)(v50 + 56) + 8 * v53);
          swift_release(v39, v54);
          swift_release(v40, v56);
          swift_bridgeObjectRelease(v51);
          v57 = v65;
          if (v47 < v55)
            goto LABEL_58;
          goto LABEL_50;
        }
        swift_release(v39, v54);
        swift_release(v40, v59);
        swift_bridgeObjectRelease(v51);
      }
      else
      {
        swift_release(v39, v48);
        swift_release(v40, v58);
      }
      v57 = v65;
      if (v47 != 0x7FFFFFFFFFFFFFFFLL)
      {
LABEL_58:
        v35 = (char *)v63;
        if (v49 != v57 || v36 >= v57)
          *(_QWORD *)v36 = *(_QWORD *)v37;
        v69 = v37;
        goto LABEL_62;
      }
LABEL_50:
      v67 = v38;
      if ((unint64_t)v49 < v63 || (unint64_t)v36 >= v63 || v49 != (char *)v63)
        *(_QWORD *)v36 = *(_QWORD *)v38;
      v37 = v57;
      v35 = v38;
LABEL_62:
      if (v37 > v62)
      {
        v36 -= 8;
        v7 = v37;
        if (v35 > v61)
          continue;
      }
      goto LABEL_64;
    }
  }
  if (v9 >= -7)
  {
    if (__dst != __src || &__src[8 * v11] <= __dst)
      memmove(__dst, __src, 8 * v11);
    v64 = &v5[8 * v11];
    v67 = v64;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        v15 = v7;
        v16 = *(_QWORD *)v7;
        v17 = *(_QWORD *)v5;
        v18 = *a5;
        if (*(_QWORD *)(*a5 + 16))
        {
          v20 = *(_QWORD *)(v16 + 16);
          v19 = *(_QWORD *)(v16 + 24);
          swift_retain(v16);
          swift_retain(v17);
          swift_bridgeObjectRetain(v19);
          v21 = sub_1000173C4(v20, v19);
          if ((v22 & 1) != 0)
          {
            v23 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v21);
            swift_bridgeObjectRelease(v19);
            goto LABEL_18;
          }
          swift_bridgeObjectRelease(v19);
        }
        else
        {
          swift_retain(v16);
          swift_retain(v17);
        }
        v23 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_18:
        v25 = *a5;
        if (*(_QWORD *)(*a5 + 16))
        {
          v27 = *(_QWORD *)(v17 + 16);
          v26 = *(_QWORD *)(v17 + 24);
          swift_bridgeObjectRetain(v26);
          v28 = sub_1000173C4(v27, v26);
          if ((v29 & 1) != 0)
          {
            v30 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v28);
            swift_release(v16, v29);
            swift_release(v17, v31);
            swift_bridgeObjectRelease(v26);
            if (v23 < v30)
              goto LABEL_27;
            goto LABEL_21;
          }
          swift_release(v16, v29);
          swift_release(v17, v34);
          swift_bridgeObjectRelease(v26);
        }
        else
        {
          swift_release(v16, v24);
          swift_release(v17, v33);
        }
        if (v23 != 0x7FFFFFFFFFFFFFFFLL)
        {
LABEL_27:
          v32 = v15 + 8;
          if (v8 < v15 || v8 >= v32 || v8 != v15)
            *(_QWORD *)v8 = *(_QWORD *)v15;
          goto LABEL_31;
        }
LABEL_21:
        if (v8 != v5)
          *(_QWORD *)v8 = *(_QWORD *)v5;
        v5 += 8;
        v68 = v5;
        v32 = v15;
LABEL_31:
        v8 += 8;
        if (v5 < v64)
        {
          v7 = v32;
          if ((unint64_t)v32 < a3)
            continue;
        }
        v69 = v8;
        goto LABEL_64;
      }
    }
    goto LABEL_64;
  }
LABEL_65:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100058E2C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t result;
  char *v33;
  const void *v34;
  char *v35;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v35 = __src;
  v34 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v21 = &v4[8 * v13];
      v33 = v21;
      v35 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v22 = (char *)(a3 - 8);
        v23 = v6;
        while (1)
        {
          v24 = v22 + 8;
          v25 = *((_QWORD *)v21 - 1);
          v26 = *((_QWORD *)v23 - 1);
          v23 -= 8;
          v27 = *(_QWORD *)(v25 + 48);
          v28 = *(_QWORD *)(v25 + 56);
          v29 = *(_QWORD *)(v26 + 48);
          v30 = *(_QWORD *)(v26 + 56);
          v31 = v27 == v29 && v28 == v30;
          if (v31 || (_stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, v29, v30, 1) & 1) == 0)
          {
            v33 = v21 - 8;
            if (v24 < v21 || v22 >= v21 || v24 != v21)
              *(_QWORD *)v22 = *((_QWORD *)v21 - 1);
            v23 = v6;
            v21 -= 8;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v24 != v6 || v22 >= v6)
              *(_QWORD *)v22 = *(_QWORD *)v23;
            v35 = v23;
            if (v23 <= v7)
              goto LABEL_50;
          }
          v22 -= 8;
          v6 = v23;
          if (v21 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v33 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        v15 = *(_QWORD *)(*(_QWORD *)v6 + 48);
        v16 = *(_QWORD *)(*(_QWORD *)v6 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)v4 + 48);
        v18 = *(_QWORD *)(*(_QWORD *)v4 + 56);
        v19 = v15 == v17 && v16 == v18;
        if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v17, v18, 1) & 1) == 0)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v34 = v4;
          v20 = v6;
        }
        else
        {
          v20 = v6 + 8;
          if (v7 < v6 || v7 >= v20 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v20;
      }
      while ((unint64_t)v20 < a3);
      v35 = v7;
    }
LABEL_50:
    sub_1000591CC((void **)&v35, &v34, &v33);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_1000590D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000A66C(&qword_10009D070);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_1000591CC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_100059274(uint64_t a1)
{
  return sub_1000590D4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100059288(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000592A4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000592A4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10000A66C((uint64_t *)&unk_10009C0B0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4, v15);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10005940C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_100059A78(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

void sub_1000595C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  _QWORD v41[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10000A66C(&qword_10009D060);
  v40 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v9 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v5 + 64);
  v37 = v3;
  v38 = (unint64_t)(v10 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v22 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v23 = v22 | (v15 << 6);
      goto LABEL_34;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v38)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v39 + 8 * v24);
    ++v15;
    if (!v26)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v38)
        goto LABEL_36;
      v26 = *(_QWORD *)(v39 + 8 * v15);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v38)
        {
LABEL_36:
          swift_release(v5, v14);
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v39 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v15 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v15 >= v38)
              goto LABEL_36;
            v26 = *(_QWORD *)(v39 + 8 * v15);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v15 = v27;
      }
    }
LABEL_33:
    v12 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_34:
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v23);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v23);
    if ((v40 & 1) == 0)
      swift_bridgeObjectRetain(v32[1]);
    Hasher.init(_seed:)(v41, *(_QWORD *)(v9 + 40));
    String.hash(into:)(v41, v34, v33);
    v16 = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(v9 + 32);
    v18 = v16 & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v13 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v13 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v19 == v29;
        if (v19 == v29)
          v19 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v13 + 8 * v19);
      }
      while (v31 == -1);
      v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(_QWORD *)(v13 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v20);
    *v21 = v34;
    v21[1] = v33;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v20) = v35;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v5, v14);
  v3 = v37;
  v25 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5, v8);
  *v3 = v9;
}

void sub_1000598CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_10000A66C(&qword_10009D060);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2, v4);
    *v1 = v5;
    return;
  }
  v6 = (void *)(v3 + 64);
  v7 = v2 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v2 || (unint64_t)v6 >= v2 + 64 + 8 * v8)
    memmove(v6, (const void *)(v2 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v2 + 16);
  v11 = 1 << *(_BYTE *)(v2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v2 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v14)
        goto LABEL_26;
      v25 = *(_QWORD *)(v7 + 8 * v10);
      if (!v25)
        break;
    }
LABEL_25:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 8 * v16;
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v23 = v20;
    v23[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21) = v22;
    swift_bridgeObjectRetain(v19);
  }
  v26 = v24 + 2;
  if (v26 >= v14)
    goto LABEL_26;
  v25 = *(_QWORD *)(v7 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_100059A78(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10005A3B8();
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000A66C(&qword_10009CC50);
          v13 = sub_100059C6C(v19, i, a3);
          v15 = *v14;
          v16 = swift_retain(*v14);
          ((void (*)(uint64_t **, _QWORD, __n128))v13)(v19, 0, v16);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for iMessageApp();
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void (*sub_100059C6C(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_100059CC0(v6, a2, a3);
  return sub_100014E7C;
}

uint64_t *sub_100059CC0(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    swift_retain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)sub_100059D2C;
  }
  __break(1u);
  return result;
}

uint64_t sub_100059D2C(_QWORD *a1, uint64_t a2)
{
  return swift_release(*a1, a2);
}

uint64_t sub_100059D34(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_100059D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

id sub_100059D80(void *a1)
{
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD v23[2];
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  uint64_t v27;

  *(_QWORD *)(v1 + 80) = a1;
  v2 = a1;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "objectForInfoDictionaryKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(&v24, v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_10005A0F4((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if ((swift_dynamicCast(v23, v26, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      goto LABEL_20;
  }
  else
  {
    sub_100011988((uint64_t)v26);
  }
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v2, "objectForInfoDictionaryKey:", v5);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(&v24, v6);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_10005A0F4((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if ((swift_dynamicCast(v23, v26, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      goto LABEL_20;
  }
  else
  {
    sub_100011988((uint64_t)v26);
  }
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v2, "objectForInfoDictionaryKey:", v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)(&v24, v8);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_10005A0F4((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if ((swift_dynamicCast(v23, v26, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
LABEL_20:
      v9 = v23[0];
      v10 = v23[1];
      goto LABEL_23;
    }
  }
  else
  {
    sub_100011988((uint64_t)v26);
  }
  v9 = 0;
  v10 = 0xE000000000000000;
LABEL_23:
  result = objc_msgSend(v2, "identifier");
  if (!result)
  {
    __break(1u);
    goto LABEL_28;
  }
  v12 = result;
  v13 = objc_msgSend((id)objc_opt_self(SSiMessageAppHelper), "extendedIdentifierFromIdentifier:", result);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  result = objc_msgSend(v2, "identifier");
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v17 = result;
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v20 = v19;

  result = objc_msgSend(v2, "infoDictionary");
  if (result)
  {
    v21 = result;
    v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(result, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    iMessageApp.init(extensionIdentifier:bundleIdentifier:displayName:infoDictionary:)(v14, v16, v18, v20, v9, v10, v22);
    return (id)v1;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for iMessageAppsPreferences()
{
  return objc_opt_self(_TtC22StickersUltraExtension23iMessageAppsPreferences);
}

uint64_t sub_10005A0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C((uint64_t *)&unk_10009BC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10005A140()
{
  unint64_t result;

  result = qword_10009CC68;
  if (!qword_10009CC68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationContexts, &type metadata for PresentationContexts);
    atomic_store(result, (unint64_t *)&qword_10009CC68);
  }
  return result;
}

unint64_t sub_10005A190()
{
  unint64_t result;

  result = qword_10009CC70;
  if (!qword_10009CC70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationContexts, &type metadata for PresentationContexts);
    atomic_store(result, (unint64_t *)&qword_10009CC70);
  }
  return result;
}

void *sub_10005A1D4()
{
  return &protocol witness table for ObjectIdentifier;
}

unint64_t sub_10005A1E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009BFB0;
  if (!qword_10009BFB0)
  {
    v1 = type metadata accessor for iMessageApp();
    result = swift_getWitnessTable(&protocol conformance descriptor for iMessageApp, v1);
    atomic_store(result, (unint64_t *)&qword_10009BFB0);
  }
  return result;
}

uint64_t type metadata accessor for iMessageApp()
{
  return objc_opt_self(_TtC22StickersUltraExtension11iMessageApp);
}

ValueMetadata *type metadata accessor for PresentationContexts()
{
  return &type metadata for PresentationContexts;
}

ValueMetadata *type metadata accessor for iMessageApp.InfoKey()
{
  return &type metadata for iMessageApp.InfoKey;
}

uint64_t type metadata accessor for iMessageAppExtension()
{
  return objc_opt_self(_TtC22StickersUltraExtension20iMessageAppExtension);
}

uint64_t sub_10005A288()
{
  return type metadata accessor for iMessageAppsRegistry(0);
}

uint64_t type metadata accessor for iMessageAppsRegistry(uint64_t a1)
{
  uint64_t result;

  result = qword_10009F9B0;
  if (!qword_10009F9B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for iMessageAppsRegistry);
  return result;
}

void sub_10005A2CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = " ";
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_10005A360(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_10005A360(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10009CE80)
  {
    v2 = sub_10000D720(&qword_10009CC50);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10009CE80);
  }
}

unint64_t sub_10005A3B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009D068;
  if (!qword_10009D068)
  {
    v1 = sub_10000D720(&qword_10009CC50);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10009D068);
  }
  return result;
}

Swift::Int sub_10005A404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_10000A66C(&qword_10009D078);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28, *(_QWORD *)(v3 + 40));
      swift_bridgeObjectRetain(v7);
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

_QWORD *sub_10005A5A4(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v32[9];
  _QWORD *v33;

  v3 = a1;
  v33 = &_swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_34;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v27 = v3;
      v5 = 0;
      v29 = v3 & 0xFFFFFFFFFFFFFF8;
      v30 = v3 & 0xC000000000000001;
      v31 = a2 + 56;
      v28 = v3 + 32;
      while (v30)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v27);
        v7 = __OFADD__(v5++, 1);
        if (v7)
        {
LABEL_31:
          __break(1u);
          return v33;
        }
LABEL_9:
        if (!*(_QWORD *)(a2 + 16))
          goto LABEL_26;
        v8 = *(_QWORD *)(v6 + 32);
        v9 = *(_QWORD *)(v6 + 40);
        Hasher.init(_seed:)(v32, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v9);
        String.hash(into:)(v32, v8, v9);
        v10 = Hasher._finalize()();
        v11 = -1 << *(_BYTE *)(a2 + 32);
        v12 = v10 & ~v11;
        if (((*(_QWORD *)(v31 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          goto LABEL_25;
        v3 = *(_QWORD *)(a2 + 48);
        v13 = (_QWORD *)(v3 + 16 * v12);
        v14 = v13[1];
        v15 = *v13 == v8 && v14 == v9;
        if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v13, v14, v8, v9, 0) & 1) == 0)
        {
          v16 = ~v11;
          while (1)
          {
            v12 = (v12 + 1) & v16;
            if (((*(_QWORD *)(v31 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
              break;
            v17 = (_QWORD *)(v3 + 16 * v12);
            v14 = v17[1];
            v18 = *v17 == v8 && v14 == v9;
            if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v14, v8, v9, 0) & 1) != 0)
              goto LABEL_16;
          }
LABEL_25:
          swift_bridgeObjectRelease(v9);
LABEL_26:
          v19 = *(_QWORD *)(v6 + 40);
          swift_bridgeObjectRetain(v19);
          v20._countAndFlagsBits = 0xD000000000000013;
          v20._object = (void *)0x8000000100075A40;
          v3 = String.hasPrefix(_:)(v20);
          v21 = swift_bridgeObjectRelease(v19);
          if ((v3 & 1) != 0 || (*(_BYTE *)(v6 + 72) & 2) == 0)
          {
            swift_release(v6, v22);
          }
          else
          {
            v3 = (uint64_t)&v33;
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
            v23 = v33[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
            v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v6);
            specialized ContiguousArray._endMutation()(v24);
          }
          goto LABEL_5;
        }
LABEL_16:
        swift_release(v6, v14);
        swift_bridgeObjectRelease(v9);
LABEL_5:
        if (v5 == v4)
          return v33;
      }
      if (v5 < *(_QWORD *)(v29 + 16))
        break;
      __break(1u);
LABEL_34:
      if (v3 < 0)
        v26 = v3;
      else
        v26 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v26);
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    v6 = *(_QWORD *)(v28 + 8 * v5);
    swift_retain(v6);
    v7 = __OFADD__(v5++, 1);
    if (v7)
      goto LABEL_31;
    goto LABEL_9;
  }
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_10005A83C()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 16);
}

uint64_t sub_10005A880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v6[24];

  swift_beginAccess(v2 + 16, v6, 1, 0);
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign(v2 + 16, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_10005A8E0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 16, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_10005A94C;
}

void sub_10005A94C(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 16, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_10005A9BC()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 32);
}

void sub_10005A9FC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + 32;
  swift_beginAccess(v3, v4, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);

}

void (*sub_10005AA48(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess(v1 + 32, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v1 + 32);
  return sub_10005AAB0;
}

void sub_10005AAB0(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign((char *)(*a1)[4] + 32, v4);
  if ((a2 & 1) != 0)
  {

    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);

  }
  free(v3);
}

uint64_t sub_10005AB18()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 40, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 40);
}

void sub_10005AB58(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + 40;
  swift_beginAccess(v3, v4, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);

}

void (*sub_10005ABA4(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess(v1 + 40, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v1 + 40);
  return sub_10005AC0C;
}

void sub_10005AC0C(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign((char *)(*a1)[4] + 40, v4);
  if ((a2 & 1) != 0)
  {

    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);

  }
  free(v3);
}

id sub_10005AC74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  void *v5;
  _BYTE v7[24];

  swift_beginAccess(v1 + 48, v7, 0, 0);
  v3 = *(_QWORD *)(v1 + 80);
  v4 = *(_OWORD *)(v1 + 64);
  v5 = *(void **)(v1 + 48);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v3;
  return v5;
}

void sub_10005ACC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  _BYTE v5[24];

  v3 = v1 + 48;
  swift_beginAccess(v1 + 48, v5, 1, 0);
  v4 = *(void **)(v1 + 48);
  sub_10004692C(a1, v3, &qword_10009B0D8);

}

uint64_t (*sub_10005AD20(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 48, a1, 33, 0);
  return j_j__swift_endAccess;
}

double sub_10005AD5C()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return *(double *)(v0 + 88);
}

uint64_t sub_10005AD90(double a1, double a2, double a3, double a4)
{
  double *v4;
  uint64_t result;
  _BYTE v10[24];

  result = swift_beginAccess(v4 + 11, v10, 1, 0);
  v4[11] = a1;
  v4[12] = a2;
  v4[13] = a3;
  v4[14] = a4;
  return result;
}

uint64_t (*sub_10005ADE4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 88, a1, 33, 0);
  return j_j__swift_endAccess;
}

double sub_10005AE20()
{
  return 1.0;
}

double sub_10005AE28()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 120, v2, 0, 0);
  return *(double *)(v0 + 120);
}

uint64_t sub_10005AE58(double a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 120, v4, 1, 0);
  *(double *)(v1 + 120) = a1;
  return result;
}

uint64_t (*sub_10005AE94(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 120, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10005AED0()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 128, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t sub_10005AF00(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 128, v4, 1, 0);
  *(_BYTE *)(v1 + 128) = a1;
  return result;
}

uint64_t (*sub_10005AF3C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 128, a1, 33, 0);
  return j__swift_endAccess;
}

double sub_10005AF78()
{
  uint64_t v0;
  double (*v1)(void);
  double MidX;
  CGFloat MidY;
  CGRect v5;
  CGRect v6;

  if ((*(_BYTE *)(v0 + 152) & 1) == 0)
    return *(double *)(v0 + 136);
  v1 = *(double (**)(void))(*(_QWORD *)v0 + 280);
  v5.origin.x = v1();
  MidX = CGRectGetMidX(v5);
  v6.origin.x = v1();
  MidY = CGRectGetMidY(v6);
  *(double *)(v0 + 136) = MidX;
  *(CGFloat *)(v0 + 144) = MidY;
  *(_BYTE *)(v0 + 152) = 0;
  return MidX;
}

void *sub_10005AFD4()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 160, v4, 0, 0);
  v1 = *(void **)(v0 + 160);
  v2 = v1;
  return v1;
}

void sub_10005B014(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 160, v4, 1, 0);
  v3 = *(void **)(v1 + 160);
  *(_QWORD *)(v1 + 160) = a1;

}

uint64_t (*sub_10005B058(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 160, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10005B098()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 176, v2, 0, 0);
  return *(_QWORD *)(v0 + 176);
}

uint64_t sub_10005B0D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t result;
  _BYTE v10[24];

  result = swift_beginAccess(v4 + 176, v10, 1, 0);
  *(_QWORD *)(v4 + 176) = a1;
  *(_QWORD *)(v4 + 184) = a2;
  *(_QWORD *)(v4 + 192) = a3;
  *(_BYTE *)(v4 + 200) = a4 & 1;
  return result;
}

uint64_t (*sub_10005B134(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 176, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *sub_10005B170()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 208, v4, 0, 0);
  v1 = *(void **)(v0 + 208);
  v2 = v1;
  return v1;
}

void sub_10005B1B0(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 208, v4, 1, 0);
  v3 = *(void **)(v1 + 208);
  *(_QWORD *)(v1 + 208) = a1;

}

uint64_t (*sub_10005B1F4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 208, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10005B230()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 216, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 216);
}

uint64_t sub_10005B260(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 216, v4, 1, 0);
  *(_BYTE *)(v1 + 216) = a1;
  return result;
}

uint64_t (*sub_10005B29C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 216, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10005B2D8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009F9C8);
  sub_10000D130(v0, (uint64_t)qword_10009F9C8);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0xD00000000000001FLL, 0x800000010007A1A0);
}

uint64_t sub_10005B358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10009F9C0 != -1)
    swift_once(&qword_10009F9C0, sub_10005B2D8);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_10000D130(v2, (uint64_t)qword_10009F9C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void sub_10005B3C8()
{
  _QWORD v0[2];
  uint64_t v1;
  uint64_t v2;

  v0[1] = 0;
  swift_unknownObjectWeakInit(v0, 0);
  swift_unknownObjectWeakInit(&v1, 0);
  swift_unknownObjectWeakInit(&v2, 0);
  dispatch_group_create();
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "StickersUltraExtension/StickerCreateTransitionAnimator.swift", 60, 2, 42, 0);
  __break(1u);
}

void sub_10005B444()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit(v0 + 16, 0);
  swift_unknownObjectWeakInit(v0 + 32, 0);
  swift_unknownObjectWeakInit(v0 + 40, 0);
  *(_QWORD *)(v0 + 80) = 0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_QWORD *)(v0 + 120) = 0x3FF0000000000000;
  *(_BYTE *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  *(_BYTE *)(v0 + 152) = 1;
  *(_QWORD *)(v0 + 160) = 0;
  *(_QWORD *)(v0 + 168) = dispatch_group_create();
  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 184) = 0;
  *(_QWORD *)(v0 + 192) = 0;
  *(_BYTE *)(v0 + 200) = 1;
  *(_QWORD *)(v0 + 208) = 0;
  *(_BYTE *)(v0 + 216) = 0;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "StickersUltraExtension/StickerCreateTransitionAnimator.swift", 60, 2, 42, 0);
  __break(1u);
}

uint64_t sub_10005B4F8(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13, CGFloat a14, CGFloat a15, CGFloat a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  char v33;
  uint64_t v34;

  v33 = a7 & 1;
  v34 = swift_allocObject(v18, 217, 7);
  sub_10005B5FC(a1, a2, a3, a4, a5, a6, v33, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  return v34;
}

void sub_10005B5FC(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13, CGFloat a14, CGFloat a15, CGFloat a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  void **v30;
  void **v31;
  dispatch_group_t v32;
  void **v33;
  _BOOL4 v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  double Height;
  CGFloat Width;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  void *v58;
  id v59;
  void *v60;
  double *v61;
  uint64_t v64;
  __int128 v69;
  char v70[24];
  char v71[24];
  _BYTE v72[24];
  _QWORD v73[6];
  char v74[24];
  char v75[24];
  char v76[24];
  char v77[24];
  char v78[24];
  char v79[24];
  void *v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;

  v19 = v18;
  *(_QWORD *)(v19 + 24) = 0;
  v64 = v19 + 16;
  swift_unknownObjectWeakInit(v19 + 16, 0);
  swift_unknownObjectWeakInit(v19 + 32, 0);
  swift_unknownObjectWeakInit(v19 + 40, 0);
  *(_QWORD *)(v19 + 120) = 0x3FF0000000000000;
  v61 = (double *)(v19 + 120);
  *(_QWORD *)(v19 + 80) = 0;
  *(_OWORD *)(v19 + 64) = 0u;
  *(_OWORD *)(v19 + 48) = 0u;
  v30 = (void **)(v19 + 48);
  *(_BYTE *)(v19 + 128) = 0;
  *(_QWORD *)(v19 + 136) = 0;
  *(_QWORD *)(v19 + 144) = 0;
  *(_BYTE *)(v19 + 152) = 1;
  *(_QWORD *)(v19 + 160) = 0;
  v31 = (void **)(v19 + 160);
  v32 = dispatch_group_create();
  *(_QWORD *)(v19 + 208) = 0;
  v33 = (void **)(v19 + 208);
  *(_QWORD *)(v19 + 168) = v32;
  *(_QWORD *)(v19 + 176) = 0;
  *(_QWORD *)(v19 + 184) = 0;
  *(_QWORD *)(v19 + 192) = 0;
  *(_BYTE *)(v19 + 200) = 1;
  *(_BYTE *)(v19 + 216) = 0;
  swift_beginAccess(v19 + 32, v79, 1, 0);
  swift_unknownObjectWeakAssign(v19 + 32, a1);
  swift_beginAccess(v19 + 40, v78, 1, 0);
  v60 = a2;
  swift_unknownObjectWeakAssign(v19 + 40, a2);
  v89.origin.x = 0.0;
  v89.origin.y = 0.0;
  v89.size.width = 0.0;
  v89.size.height = 0.0;
  v84.origin.x = a9;
  v84.origin.y = a10;
  v84.size.width = a11;
  v84.size.height = a12;
  v34 = CGRectEqualToRect(v84, v89);
  swift_beginAccess(v19 + 216, v77, 1, 0);
  *(_BYTE *)(v19 + 216) = v34;
  if (v34)
  {
    a9 = a13;
    a10 = a14;
    a11 = a15;
    a12 = a16;
  }
  v59 = a3;
  sub_10000F870((uint64_t)v59, (uint64_t)&v80, a9, a10, a11, a12);
  v35 = v80;
  v69 = v81;
  v36 = v82;
  v37 = v83;
  swift_beginAccess(v19 + 48, v76, 1, 0);
  v38 = *v30;
  *v30 = v35;
  *(_OWORD *)(v19 + 56) = v69;
  *(_QWORD *)(v19 + 72) = v36;
  *(_QWORD *)(v19 + 80) = v37;

  if (!*v30)
  {
    __break(1u);
    goto LABEL_12;
  }
  v39 = a1;
  objc_msgSend(a1, "convertRect:toView:", 0, *(double *)(v19 + 56), *(double *)(v19 + 64), *(double *)(v19 + 72), *(double *)(v19 + 80));
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;
  *(CGFloat *)(v19 + 88) = a13;
  *(CGFloat *)(v19 + 96) = a14;
  *(CGFloat *)(v19 + 104) = a15;
  *(CGFloat *)(v19 + 112) = a16;
  swift_beginAccess(v19 + 176, v75, 1, 0);
  *(_QWORD *)(v19 + 176) = a4;
  *(_QWORD *)(v19 + 184) = a5;
  *(_QWORD *)(v19 + 192) = a6;
  *(_BYTE *)(v19 + 200) = a7 & 1;
  swift_beginAccess(v64, v74, 1, 0);
  *(_QWORD *)(v19 + 24) = a18;
  swift_unknownObjectWeakAssign(v64, a17);
  v48 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  if (!*(_QWORD *)(v19 + 48))
  {
LABEL_12:
    __break(1u);
    return;
  }
  v49 = v48;
  objc_msgSend(v48, "setImage:");
  objc_msgSend(v49, "setContentMode:", 1);
  objc_msgSend(v49, "setFrame:", v41, v43, v45, v47);
  objc_msgSend(v49, "setAlpha:", 0.0);
  v73[0] = 0x3FF0000000000000;
  v73[1] = 0;
  v73[2] = 0;
  v73[3] = 0x3FF0000000000000;
  v73[4] = 0;
  v73[5] = 0;
  objc_msgSend(v49, "setTransform:", v73);
  objc_msgSend(v49, "setAnchorPoint:", 0.5, 0.5);
  swift_beginAccess(v19 + 160, v73, 1, 0);
  v50 = *v31;
  *v31 = v49;
  v51 = v49;

  v85.origin.x = v41;
  v85.origin.y = v43;
  v85.size.width = v45;
  v85.size.height = v47;
  Height = CGRectGetHeight(v85);
  v86.origin.x = v41;
  v86.origin.y = v43;
  v86.size.width = v45;
  v86.size.height = v47;
  Width = CGRectGetWidth(v86);
  v54 = v19 + 88;
  if (Width >= Height)
  {
    swift_beginAccess(v54, v72, 0, 0);
    v55 = CGRectGetWidth(*(CGRect *)(v19 + 88));
    v88.origin.x = v41;
    v88.origin.y = v43;
    v88.size.width = v45;
    v88.size.height = v47;
    v56 = CGRectGetWidth(v88);
  }
  else
  {
    swift_beginAccess(v54, v72, 0, 0);
    v55 = CGRectGetHeight(*(CGRect *)(v19 + 88));
    v87.origin.x = v41;
    v87.origin.y = v43;
    v87.size.width = v45;
    v87.size.height = v47;
    v56 = CGRectGetHeight(v87);
  }
  v57 = v56;

  swift_unknownObjectRelease(a17);
  swift_beginAccess(v61, v71, 1, 0);
  *v61 = v55 / v57;
  if ((a8 & 1) != 0)
  {
    swift_beginAccess(v19 + 208, v70, 1, 0);
    v58 = *v33;
    *v33 = a1;
    v39 = v58;
  }

}

id *sub_10005BABC()
{
  id *v0;

  (*((void (**)(void))*v0 + 70))();
  sub_10000D10C((uint64_t)(v0 + 2));
  swift_unknownObjectWeakDestroy(v0 + 4);
  swift_unknownObjectWeakDestroy(v0 + 5);

  return v0;
}

uint64_t sub_10005BB14()
{
  id *v0;

  (*((void (**)(void))*v0 + 70))();
  sub_10000D10C((uint64_t)(v0 + 2));
  swift_unknownObjectWeakDestroy(v0 + 4);
  swift_unknownObjectWeakDestroy(v0 + 5);

  return swift_deallocClassInstance(v0, 217, 7);
}

uint64_t sub_10005BB74()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 336))(1);
  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

void sub_10005BB9C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  id v8;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
  if (v1)
  {
    v8 = (id)v1;
    v2 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, "addSubview:", v8);

    }
    v4 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
    objc_msgSend(v4, "removeFromSuperview");

    v5 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v0 + 456))(0);
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 472))(v5);
    v7 = 544;
    if ((v6 & 1) != 0)
      v7 = 536;
    (*(void (**)(void))(*(_QWORD *)v0 + v7))();

  }
}

uint64_t sub_10005BC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[5];
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v30 - v14;
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 376))(v13);
  if (result)
  {
    v17 = (void *)result;
    sub_100039AF0();
    v30 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)(v12, 0.5);
    v18 = *(void (**)(char *, uint64_t))(v9 + 8);
    v18(v12, v8);
    v19 = swift_allocObject(&unk_10008D8E8, 24, 7);
    swift_weakInit(v19 + 16, v1);
    v20 = swift_allocObject(&unk_10008D910, 32, 7);
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = v17;
    aBlock[4] = sub_10005BF4C;
    v35 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000C1B4;
    aBlock[3] = &unk_10008D928;
    v21 = _Block_copy(aBlock);
    v22 = v35;
    v23 = v17;
    v25 = swift_release(v22, v24);
    static DispatchQoS.unspecified.getter(v25);
    aBlock[0] = _swiftEmptyArrayStorage;
    v26 = sub_10000D68C();
    v27 = sub_10000A66C(&qword_10009B198);
    v28 = sub_10000D6D4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v2, v26);
    v29 = (void *)v30;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v7, v4, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
    return ((uint64_t (*)(char *, uint64_t))v18)(v15, v8);
  }
  return result;
}

uint64_t sub_10005BEFC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005BF20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 16), a2);

  return swift_deallocObject(v2, 32, 7);
}

uint64_t sub_10005BF4C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t (*v34)();
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  char v38[24];
  _QWORD v39[5];
  _OWORD v40[2];
  char v41;

  v1 = *(void **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16) + 16;
  swift_beginAccess(v2, v38, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    *(_QWORD *)&v36 = (*(double (**)(void))(*(_QWORD *)result + 280))();
    *((_QWORD *)&v36 + 1) = v5;
    *(_QWORD *)&v37 = v6;
    *((_QWORD *)&v37 + 1) = v7;
    result = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 184))();
    if (result)
    {
      v9 = result;
      v10 = v8;
      ObjectType = swift_getObjectType(result);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 24))(v39, ObjectType, v10);
      swift_unknownObjectRelease(v9);
      sub_10004692C((uint64_t)v39, (uint64_t)v40, &qword_10009C000);
      if ((v41 & 1) == 0)
      {
        v36 = v40[0];
        v37 = v40[1];
      }
      v12 = (void *)objc_opt_self(UIView);
      v13 = swift_allocObject(&unk_10008DB90, 32, 7);
      *(_QWORD *)(v13 + 16) = v1;
      *(_QWORD *)(v13 + 24) = &v36;
      v14 = swift_allocObject(&unk_10008DBB8, 32, 7);
      *(_QWORD *)(v14 + 16) = sub_10005CFD0;
      *(_QWORD *)(v14 + 24) = v13;
      v34 = sub_10002DE18;
      v35 = v14;
      v30 = _NSConcreteStackBlock;
      v31 = 1107296256;
      v32 = sub_10005C228;
      v33 = &unk_10008DBD0;
      v15 = _Block_copy(&v30);
      v16 = v35;
      v17 = v1;
      swift_retain(v14);
      swift_release(v16, v18);
      objc_msgSend(v12, "performWithoutAnimation:", v15);
      _Block_release(v15);
      LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v14, "", 133, 116, 44, 1);
      result = swift_release(v14, v19);
      if ((v15 & 1) == 0)
      {
        v20 = swift_allocObject(&unk_10008DC08, 32, 7);
        *(_QWORD *)(v20 + 16) = v17;
        *(_QWORD *)(v20 + 24) = v4;
        v34 = sub_10005D098;
        v35 = v20;
        v30 = _NSConcreteStackBlock;
        v31 = 1107296256;
        v32 = sub_10000C1B4;
        v33 = &unk_10008DC20;
        v21 = _Block_copy(&v30);
        v22 = v35;
        v23 = v17;
        swift_retain(v4);
        swift_release(v22, v24);
        v34 = sub_10005D134;
        v35 = v4;
        v30 = _NSConcreteStackBlock;
        v31 = 1107296256;
        v32 = sub_100013408;
        v33 = &unk_10008DC48;
        v25 = _Block_copy(&v30);
        v26 = v35;
        swift_retain(v4);
        swift_release(v26, v27);
        objc_msgSend(v12, "animateWithDuration:animations:completion:", v21, v25, 0.2);
        swift_release(v4, v28);
        _Block_release(v25);
        _Block_release(v21);
        return swift_release(v13, v29);
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10005C228(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_10005C248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C258(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

void *sub_10005C260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void **aBlock;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v61 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v60 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 376))(v7);
  if (result)
  {
    v10 = result;
    objc_msgSend(result, "setAlpha:", 1.0);
    v58 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 322.2728, 29.91993, 0.0, 0.0);
    v11 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v58, 0.5232);
    v12 = swift_allocObject(&unk_10008D8E8, 24, 7);
    v57 = v2;
    v13 = v12;
    swift_weakInit(v12 + 16, v0);
    v66 = sub_10005C914;
    v67 = v13;
    v59 = v5;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_100013410;
    v65 = &unk_10008D950;
    v14 = _Block_copy(&aBlock);
    swift_release(v67, v15);
    v53 = v11;
    objc_msgSend(v11, "addCompletion:", v14);
    _Block_release(v14);
    v16 = swift_allocObject(&unk_10008D988, 32, 7);
    *(_QWORD *)(v16 + 16) = v10;
    *(_QWORD *)(v16 + 24) = v0;
    v66 = sub_10005C91C;
    v67 = v16;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_10000C1B4;
    v65 = &unk_10008D9A0;
    v17 = _Block_copy(&aBlock);
    v56 = v3;
    v18 = v67;
    v19 = v10;
    swift_retain(v0);
    swift_release(v18, v20);
    objc_msgSend(v11, "addAnimations:", v17);
    _Block_release(v17);
    v55 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 3.0, 300.0, 50.0, 2.0, 2.0);
    v21 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v55, 0.9205);
    v22 = swift_allocObject(&unk_10008D8E8, 24, 7);
    swift_weakInit(v22 + 16, v0);
    v66 = sub_10005C914;
    v67 = v22;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_100013410;
    v65 = &unk_10008D9C8;
    v23 = _Block_copy(&aBlock);
    swift_release(v67, v24);
    objc_msgSend(v21, "addCompletion:", v23);
    _Block_release(v23);
    v25 = swift_allocObject(&unk_10008DA00, 32, 7);
    *(_QWORD *)(v25 + 16) = v19;
    *(_QWORD *)(v25 + 24) = v0;
    v66 = sub_10005C9D4;
    v67 = v25;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_10000C1B4;
    v65 = &unk_10008DA18;
    v26 = _Block_copy(&aBlock);
    v27 = v67;
    v28 = v19;
    v54 = v6;
    v29 = v28;
    swift_retain(v0);
    swift_release(v27, v30);
    objc_msgSend(v21, "addAnimations:", v26);
    _Block_release(v26);
    v52 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 118.6, 13.379, 0.0, 0.0);
    v31 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v52, 0.9975);
    v32 = swift_allocObject(&unk_10008D8E8, 24, 7);
    swift_weakInit(v32 + 16, v0);
    v66 = sub_10005CA20;
    v67 = v32;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_100013410;
    v65 = &unk_10008DA40;
    v33 = _Block_copy(&aBlock);
    swift_release(v67, v34);
    objc_msgSend(v31, "addCompletion:", v33);
    _Block_release(v33);
    v35 = swift_allocObject(&unk_10008DA78, 32, 7);
    *(_QWORD *)(v35 + 16) = v29;
    *(_QWORD *)(v35 + 24) = v0;
    v66 = sub_10005CA98;
    v67 = v35;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_10000C1B4;
    v65 = &unk_10008DA90;
    v36 = _Block_copy(&aBlock);
    v37 = v67;
    v51 = v29;
    swift_retain(v1);
    swift_release(v37, v38);
    objc_msgSend(v31, "addAnimations:", v36);
    _Block_release(v36);
    dispatch_group_enter(*(dispatch_group_t *)(v1 + 168));
    v39 = v53;
    objc_msgSend(v53, "startAnimation");
    dispatch_group_enter(*(dispatch_group_t *)(v1 + 168));
    objc_msgSend(v21, "startAnimation");
    dispatch_group_enter(*(dispatch_group_t *)(v1 + 168));
    objc_msgSend(v31, "startAnimationAfterDelay:", 0.12);
    sub_100039AF0();
    v40 = (void *)static OS_dispatch_queue.main.getter();
    v66 = sub_10005CB14;
    v67 = v1;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_10000C1B4;
    v65 = &unk_10008DAB8;
    v41 = _Block_copy(&aBlock);
    v42 = v67;
    swift_retain(v1);
    v44 = swift_release(v42, v43);
    v45 = v60;
    static DispatchQoS.unspecified.getter(v44);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v46 = sub_10000D68C();
    v47 = sub_10000A66C(&qword_10009B198);
    v48 = sub_10000D6D4();
    v49 = v61;
    v50 = v57;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v47, v48, v57, v46);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v45, v49, v41);
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v49, v50);
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v45, v59);
  }
  return result;
}

id sub_10005C91C()
{
  uint64_t v0;
  void *v1;
  double v2;

  v1 = *(void **)(v0 + 16);
  v2 = sub_10005AF78();
  objc_msgSend(v1, "center");
  return objc_msgSend(v1, "setCenter:", v2);
}

void sub_10005C968()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  _BYTE v5[24];

  swift_beginAccess(v0 + 16, v5, 0, 0);
  Strong = swift_weakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    v3 = *(id *)(Strong + 168);
    swift_release(v2, v4);
    dispatch_group_leave(v3);

  }
}

id sub_10005C9D4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "center", sub_10005AF78());
  return objc_msgSend(v1, "setCenter:");
}

uint64_t sub_10005CA20()
{
  uint64_t v0;
  uint64_t result;
  dispatch_group_t *v2;
  uint64_t v3;
  _BYTE v4[24];

  swift_beginAccess(v0 + 16, v4, 0, 0);
  result = swift_weakLoadStrong(v0 + 16);
  if (result)
  {
    v2 = (dispatch_group_t *)result;
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 328))(result) & 1) != 0)
      ((void (*)(void))(*v2)[69].isa)();
    dispatch_group_leave(v2[21]);
    return swift_release(v2, v3);
  }
  return result;
}

id sub_10005CA98()
{
  uint64_t v0;
  void *v1;
  double (*v2)(void);
  CGFloat v3;
  CGFloat v4;
  CGAffineTransform v6;

  v1 = *(void **)(v0 + 16);
  v2 = *(double (**)(void))(**(_QWORD **)(v0 + 24) + 304);
  v3 = v2();
  v4 = v2();
  CGAffineTransformMakeScale(&v6, v3, v4);
  return objc_msgSend(v1, "setTransform:", &v6);
}

uint64_t sub_10005CB14()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
  if (result)
  {
    v3 = result;
    v4 = v2;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, double))(v4 + 16))(ObjectType, v4, 0.43);
    return swift_unknownObjectRelease(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10005CB64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v18 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v0 + 168);
  sub_100039AF0();
  v9 = v8;
  v10 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_10005CD2C;
  v21 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008DAE0;
  v11 = _Block_copy(aBlock);
  swift_retain(v0);
  static DispatchQoS.unspecified.getter(v12);
  v19 = _swiftEmptyArrayStorage;
  v13 = sub_10000D68C();
  v14 = sub_10000A66C(&qword_10009B198);
  v15 = sub_10000D6D4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v14, v15, v1, v13);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v7, v3, v10, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release(v21, v16);
}

uint64_t sub_10005CD2C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
  if (result)
  {
    v3 = result;
    v4 = v2;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    return swift_unknownObjectRelease(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10005CD74()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
  if (v1)
  {
    v2 = (void *)v1;
    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_10008DB18, 24, 7);
    *(_QWORD *)(v4 + 16) = v2;
    v16 = sub_10005CEF8;
    v17 = v4;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_10000C1B4;
    v15 = &unk_10008DB30;
    v5 = _Block_copy(&v12);
    v6 = v17;
    v7 = v2;
    swift_release(v6, v8);
    v9 = swift_allocObject(&unk_10008D8E8, 24, 7);
    swift_weakInit(v9 + 16, v0);
    v16 = sub_10005CF0C;
    v17 = v9;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_100013408;
    v15 = &unk_10008DB58;
    v10 = _Block_copy(&v12);
    swift_release(v17, v11);
    objc_msgSend(v3, "animateWithDuration:animations:completion:", v5, v10, 0.1);
    _Block_release(v10);
    _Block_release(v5);

  }
}

uint64_t sub_10005CED4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10005CEF8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

uint64_t sub_10005CF0C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _BYTE v5[24];

  swift_beginAccess(v0 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v0 + 16);
  if (result)
  {
    v2 = result;
    v3 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 376))(result);
    objc_msgSend(v3, "removeFromSuperview");

    (*(void (**)(_QWORD))(*(_QWORD *)v2 + 384))(0);
    return swift_release(v2, v4);
  }
  return result;
}

uint64_t type metadata accessor for StickerCreateTransitionAnimator()
{
  return objc_opt_self(_TtC22StickersUltraExtension31StickerCreateTransitionAnimator);
}

uint64_t sub_10005CFAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10005CFD0()
{
  uint64_t v0;
  void *v1;
  CGAffineTransform v3;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "setFrame:", **(double **)(v0 + 24), *(double *)(*(_QWORD *)(v0 + 24) + 8), *(double *)(*(_QWORD *)(v0 + 24) + 16), *(double *)(*(_QWORD *)(v0 + 24) + 24));
  objc_msgSend(v1, "setAlpha:", 0.0);
  CGAffineTransformMakeScale(&v3, 0.1, 0.1);
  return objc_msgSend(v1, "setTransform:", &v3);
}

uint64_t sub_10005D058()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005D06C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24), v1);
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005D098()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD v8[6];

  v1 = *(void **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  objc_msgSend(v1, "setAlpha:", 1.0);
  v8[0] = 0x3FF0000000000000;
  v8[1] = 0;
  v8[2] = 0;
  v8[3] = 0x3FF0000000000000;
  v8[4] = 0;
  v8[5] = 0;
  result = (*(uint64_t (**)(id))(*(_QWORD *)v2 + 184))(objc_msgSend(v1, "setTransform:", v8));
  if (result)
  {
    v5 = result;
    v6 = v4;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, double))(v6 + 16))(ObjectType, v6, 0.15);
    return swift_unknownObjectRelease(v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10005D134()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

void *sub_10005D1A8(uint64_t a1, uint64_t a2)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  void *v23;
  id v24;
  void *v25;
  Class isa;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v28 = a2;
  v3 = (int *)type metadata accessor for PhotoConfirmationMiniTipView(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v28 - v8;
  __chkstk_darwin(v7);
  v11 = (uint64_t *)((char *)&v28 - v10);
  v12 = String.stkLocalized.getter(0xD00000000000001BLL, 0x8000000100075C60);
  v14 = v13;
  v15 = String.stkLocalized.getter(0xD00000000000001DLL, 0x8000000100075C80);
  v17 = v16;
  *v11 = swift_getKeyPath(&unk_10007A220);
  v18 = sub_10000A66C((uint64_t *)&unk_10009D300);
  swift_storeEnumTagMultiPayload(v11, v18, 0);
  v19 = (_QWORD *)((char *)v11 + v3[5]);
  v29 = 0;
  State.init(wrappedValue:)(v30, &v29, &type metadata for CGFloat);
  v20 = v30[1];
  *v19 = v30[0];
  v19[1] = v20;
  *(_QWORD *)((char *)v11 + v3[6]) = 0x4046800000000000;
  v21 = (_QWORD *)((char *)v11 + v3[7]);
  *v21 = v12;
  v21[1] = v14;
  v22 = (_QWORD *)((char *)v11 + v3[8]);
  *v22 = v15;
  v22[1] = v17;
  sub_10005DD2C((uint64_t)v11, (uint64_t)v9);
  objc_allocWithZone((Class)type metadata accessor for PhotoConfirmationTipHostingController(0));
  sub_10005DD2C((uint64_t)v9, (uint64_t)v6);
  v23 = (void *)UIHostingController.init(rootView:)(v6);
  sub_10005DD84((uint64_t)v9);
  objc_msgSend(v23, "setModalPresentationStyle:", 7, v28);
  v24 = objc_msgSend(v23, "popoverPresentationController");
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, "setPermittedArrowDirections:", 2);
    objc_msgSend(v25, "setSourceView:", a1);
    sub_10005FEAC();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v25, "setPassthroughViews:", isa);

    objc_msgSend(v25, "setDelegate:", v23);
    sub_10005DD84((uint64_t)v11);
  }
  else
  {
    sub_10005DD84((uint64_t)v11);

    return 0;
  }
  return v23;
}

double sub_10005D434()
{
  return 0.0;
}

double sub_10005D43C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  int *v13;
  _QWORD *v14;
  double result;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  double v19;
  _QWORD v20[2];

  sub_10004692C(a1, a6, &qword_10009D310);
  v13 = (int *)type metadata accessor for PhotoConfirmationMiniTipView(0);
  v14 = (_QWORD *)(a6 + v13[5]);
  v19 = a7;
  State.init(wrappedValue:)(v20, &v19, &type metadata for CGFloat);
  result = *(double *)v20;
  v16 = v20[1];
  *v14 = v20[0];
  v14[1] = v16;
  *(_QWORD *)(a6 + v13[6]) = 0x4046800000000000;
  v17 = (_QWORD *)(a6 + v13[7]);
  *v17 = a2;
  v17[1] = a3;
  v18 = (_QWORD *)(a6 + v13[8]);
  *v18 = a4;
  v18[1] = a5;
  return result;
}

uint64_t sub_10005D508(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v3 = type metadata accessor for PhotoConfirmationMiniTipView(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_allocWithZone(v1);
  sub_10005DD2C(a1, (uint64_t)v5);
  v7 = UIHostingController.init(rootView:)(v5);
  sub_10005DD84(a1);
  return v7;
}

id sub_10005D594()
{
  void *v0;
  id result;
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    result = objc_msgSend(v0, "view");
    if (result)
    {
      v3 = result;
      objc_msgSend(result, "frame");
      v5 = v4;
      v7 = v6;

      LODWORD(v8) = 1148846080;
      LODWORD(v9) = 1112014848;
      objc_msgSend(v2, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", v5, v7, v8, v9);
      v11 = v10;
      v13 = v12;

      return objc_msgSend(v0, "setPreferredContentSize:", v11, v13);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10005D660(char a1)
{
  _QWORD *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PhotoConfirmationTipHostingController(0);
  v3 = objc_msgSendSuper2(&v5, "viewWillAppear:", a1 & 1);
  return (*(uint64_t (**)(id))((swift_isaMask & *v1) + qword_10009FE00))(v3);
}

void sub_10005D6C8(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  id v5;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for PhotoConfirmationTipHostingController(0);
  v4 = v6.receiver;
  v5 = objc_msgSendSuper2(&v6, "viewWillAppear:", a3);
  (*(void (**)(id))((swift_isaMask & *v4) + qword_10009FE00))(v5);

}

uint64_t sub_10005D74C()
{
  return -1;
}

uint64_t sub_10005D754()
{
  return -1;
}

uint64_t sub_10005D75C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for PhotoConfirmationMiniTipView(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005DD2C(a1, (uint64_t)v4);
  v5 = UIHostingController.init(rootView:)(v4);
  sub_10005DD84(a1);
  return v5;
}

uint64_t type metadata accessor for PhotoConfirmationMiniTipView(uint64_t a1)
{
  return sub_10003D580(a1, qword_10009FA80, (uint64_t)&nominal type descriptor for PhotoConfirmationMiniTipView);
}

void *sub_10005D7F0(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v12;

  v5 = type metadata accessor for PhotoConfirmationMiniTipView(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone(v2);
  sub_10005DD2C(a2, (uint64_t)v7);
  v9 = (void *)UIHostingController.init(coder:rootView:)(a1, v7);
  v10 = v9;
  sub_10005DD84(a2);
  if (v9)

  return v9;
}

void *sub_10005D894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  uint64_t v10;

  v4 = type metadata accessor for PhotoConfirmationMiniTipView(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005DD2C(a2, (uint64_t)v6);
  v7 = (void *)UIHostingController.init(coder:rootView:)(a1, v6);
  v8 = v7;
  sub_10005DD84(a2);
  if (v7)

  return v7;
}

id sub_10005D92C(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PhotoConfirmationTipHostingController(0);
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_10005D97C(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for PhotoConfirmationTipHostingController(0);
  return objc_msgSendSuper2(&v5, "initWithCoder:", a3);
}

id sub_10005D9C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PhotoConfirmationTipHostingController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005D9FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000A66C((uint64_t *)&unk_10009D300);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E23C(v2, (uint64_t)v10, (uint64_t *)&unk_10009D300);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = *v10;
    v14 = static os_log_type_t.fault.getter();
    v15 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v15, v14))
    {
      v16 = swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v20 = v17;
      *(_DWORD *)v16 = 136315138;
      *(_QWORD *)(v16 + 4) = sub_10000C99C(0x5463696D616E7944, 0xEF657A6953657079, &v20);
      _os_log_impl((void *)&_mh_execute_header, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, v13);
    swift_release(v13, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_10005DC14@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  *a1 = swift_getKeyPath(&unk_10007A220);
  v2 = sub_10000A66C((uint64_t *)&unk_10009D300);
  return swift_storeEnumTagMultiPayload(a1, v2, 0);
}

uint64_t sub_10005DC58()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_10005DC78(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for DynamicTypeSize(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return EnvironmentValues.dynamicTypeSize.setter(v3);
}

uint64_t sub_10005DCF4(double a1)
{
  double v2;
  _QWORD v3[2];

  v2 = a1;
  State.init(wrappedValue:)(v3, &v2, &type metadata for CGFloat);
  return v3[1];
}

uint64_t sub_10005DD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotoConfirmationMiniTipView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PhotoConfirmationTipHostingController(uint64_t a1)
{
  return sub_10003D580(a1, (uint64_t *)&unk_10009FA70, (uint64_t)&nominal type descriptor for PhotoConfirmationTipHostingController);
}

uint64_t sub_10005DD84(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PhotoConfirmationMiniTipView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_10005DDC0()
{
  uint64_t v0;
  double v2;

  type metadata accessor for PhotoConfirmationMiniTipView(0);
  v0 = sub_10000A66C(&qword_10009D318);
  State.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t sub_10005DE1C(double a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PhotoConfirmationMiniTipView(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  *(double *)v8 = a1;
  v8[1] = v4;
  v8[2] = v5;
  v6 = sub_10000A66C(&qword_10009D318);
  return State.wrappedValue.setter(v8, v6);
}

void (*sub_10005DE84(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PhotoConfirmationMiniTipView(0) + 20));
  v5 = *v4;
  v3[4] = *v4;
  v6 = v4[1];
  v3[5] = v6;
  *v3 = v5;
  v3[1] = v6;
  swift_retain(v6);
  v7 = sub_10000A66C(&qword_10009D318);
  v3[6] = v7;
  State.wrappedValue.getter(v3 + 2, v7);
  return sub_10005DF10;
}

void sub_10005DF10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  *v1 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v1[1] = v4;
  v1[3] = v2;
  State.wrappedValue.setter(v1 + 3, v3);
  swift_release(v4, v5);
  free(v1);
}

double sub_10005DF58()
{
  uint64_t v0;
  _QWORD v2[3];

  type metadata accessor for PhotoConfirmationMiniTipView(0);
  v0 = sub_10000A66C(&qword_10009D318);
  State.projectedValue.getter(v2, v0);
  return *(double *)&v2[2];
}

double sub_10005DFB8()
{
  return 45.0;
}

double sub_10005DFC8()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for PhotoConfirmationMiniTipView(0) + 24));
}

uint64_t sub_10005DFE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PhotoConfirmationMiniTipView(0) + 28));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_10005E024()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PhotoConfirmationMiniTipView(0) + 32));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_10005E060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v61 = a1;
  v2 = type metadata accessor for PhotoConfirmationMiniTipView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  v57 = v3;
  __chkstk_darwin(v2);
  v58 = v4;
  v60 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  __chkstk_darwin(v5);
  v53 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v48 - v12;
  v48 = sub_10000A66C(&qword_10009D320);
  __chkstk_darwin(v48);
  v15 = (uint64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = sub_10000A66C(&qword_10009D328);
  v50 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_10000A66C(&qword_10009D330);
  __chkstk_darwin(v49);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_10000A66C(&qword_10009D338);
  v20 = __chkstk_darwin(v51);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = static HorizontalAlignment.trailing.getter(v20);
  v59 = v1;
  sub_10005D9FC((uint64_t)v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for DynamicTypeSize.large(_:), v7);
  v24 = sub_10005FEE8();
  v25 = dispatch thunk of static Comparable.< infix(_:_:)(v11, v13, v7, v24);
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v11, v7);
  v27 = ((uint64_t (*)(char *, uint64_t))v26)(v13, v7);
  if ((v25 & 1) != 0)
    v28 = static VerticalAlignment.top.getter(v27);
  else
    v28 = static VerticalAlignment.firstTextLineCenter.getter(v27);
  *v15 = v23;
  v15[1] = v28;
  v29 = sub_10000A66C(&qword_10009D348);
  v30 = v59;
  v31 = sub_10005E47C(v59, (uint64_t)v15 + *(int *)(v29 + 44));
  v32 = v53;
  static AccessibilityChildBehavior.contain.getter(v31);
  v33 = sub_10000F6DC(&qword_10009D350, &qword_10009D320, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.accessibilityElement(children:)(v32, v48, v33);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v55);
  sub_10002E2B4((uint64_t)v15, &qword_10009D320);
  v34 = (uint64_t *)(v30 + *(int *)(v56 + 20));
  v35 = *v34;
  v36 = v34[1];
  v62 = v35;
  v63 = v36;
  v37 = sub_10000A66C(&qword_10009D318);
  State.wrappedValue.getter(&v64, v37);
  v38 = v64;
  v39 = v50;
  v40 = v52;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v19, v17, v52);
  *(_QWORD *)&v19[*(int *)(v49 + 36)] = v38;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v40);
  v41 = v30;
  v42 = v60;
  sub_10005DD2C(v41, v60);
  v43 = *(unsigned __int8 *)(v57 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = swift_allocObject(&unk_10008DC80, v44 + v58, v43 | 7);
  sub_100060008(v42, v45 + v44);
  sub_10002E23C((uint64_t)v19, (uint64_t)v22, &qword_10009D330);
  v46 = (uint64_t (**)())&v22[*(int *)(v51 + 36)];
  *v46 = sub_10006004C;
  v46[1] = (uint64_t (*)())v45;
  v46[2] = 0;
  v46[3] = 0;
  sub_10002E2B4((uint64_t)v19, &qword_10009D330);
  return sub_10004692C((uint64_t)v22, v61, &qword_10009D338);
}

uint64_t sub_10005E47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v65 = a1;
  v68 = a2;
  v2 = sub_10000A66C(&qword_10009D4A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000A66C(&qword_10009D4A8);
  __chkstk_darwin(v5);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000A66C(&qword_10009D4B0);
  __chkstk_darwin(v8);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10000A66C(&qword_10009D4B8);
  __chkstk_darwin(v11);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_10000A66C(&qword_10009D4C0);
  __chkstk_darwin(v66);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_10000A66C(&qword_10009D4C8);
  v16 = __chkstk_darwin(v67);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = static HorizontalAlignment.center.getter(v16);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v19 = sub_10000A66C(&qword_10009D4D0);
  v20 = (uint64_t)&v13[*(int *)(v19 + 44)];
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v19);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v21 = sub_10000A66C(&qword_10009D4D8);
  v22 = sub_10005E8D0(v65, (uint64_t)&v4[*(int *)(v21 + 44)]);
  v23 = static Alignment.leading.getter(v22);
  sub_10005FB10(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v7, 0.0, 1, 0.0, 1, v23, v24, &qword_10009D4A0, &qword_10009D4A8);
  v25 = sub_10002E2B4((uint64_t)v4, &qword_10009D4A0);
  LOBYTE(v4) = static Edge.Set.horizontal.getter(v25);
  v26 = EdgeInsets.init(_all:)(13.0);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  sub_10002E23C((uint64_t)v7, (uint64_t)v10, &qword_10009D4A8);
  v33 = &v10[*(int *)(v8 + 36)];
  *v33 = (char)v4;
  *((double *)v33 + 1) = v26;
  *((_QWORD *)v33 + 2) = v28;
  *((_QWORD *)v33 + 3) = v30;
  *((_QWORD *)v33 + 4) = v32;
  v33[40] = 0;
  v34 = sub_10002E2B4((uint64_t)v7, &qword_10009D4A8);
  LOBYTE(v4) = static Edge.Set.bottom.getter(v34);
  v35 = EdgeInsets.init(_all:)(9.0);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  sub_10002E23C((uint64_t)v10, v20, &qword_10009D4B0);
  v42 = v20 + *(int *)(sub_10000A66C(&qword_10009D4E0) + 36);
  *(_BYTE *)v42 = (_BYTE)v4;
  *(double *)(v42 + 8) = v35;
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v39;
  *(_QWORD *)(v42 + 32) = v41;
  *(_BYTE *)(v42 + 40) = 0;
  v43 = sub_10002E2B4((uint64_t)v10, &qword_10009D4B0);
  LOBYTE(v10) = static Edge.Set.top.getter(v43);
  v44 = EdgeInsets.init(_all:)(14.0);
  v46 = v45;
  v48 = v47;
  v50 = v49;
  sub_10002E23C((uint64_t)v13, (uint64_t)v15, &qword_10009D4B8);
  v51 = &v15[*(int *)(v66 + 36)];
  *v51 = (char)v10;
  *((double *)v51 + 1) = v44;
  *((_QWORD *)v51 + 2) = v46;
  *((_QWORD *)v51 + 3) = v48;
  *((_QWORD *)v51 + 4) = v50;
  v51[40] = 0;
  v52 = sub_10002E2B4((uint64_t)v13, &qword_10009D4B8);
  LOBYTE(v10) = static Edge.Set.bottom.getter(v52);
  v53 = EdgeInsets.init(_all:)(7.0);
  v55 = v54;
  v57 = v56;
  v59 = v58;
  sub_10002E23C((uint64_t)v15, (uint64_t)v18, &qword_10009D4C0);
  v60 = &v18[*(int *)(v67 + 36)];
  *v60 = (char)v10;
  *((double *)v60 + 1) = v53;
  *((_QWORD *)v60 + 2) = v55;
  *((_QWORD *)v60 + 3) = v57;
  *((_QWORD *)v60 + 4) = v59;
  v60[40] = 0;
  v61 = sub_10002E2B4((uint64_t)v15, &qword_10009D4C0);
  v62 = static Alignment.center.getter(v61);
  sub_10005FB10(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v68, 0.0, 1, 0.0, 1, v62, v63, &qword_10009D4C8, &qword_10009D4E8);
  return sub_10002E2B4((uint64_t)v18, &qword_10009D4C8);
}

uint64_t sub_10005E8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int16 v80;
  int v81;
  __int16 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  _BYTE v88[7];
  uint64_t v89;
  char v90;
  _BYTE v91[7];
  uint64_t v92;
  uint64_t v93;
  char v94;
  _BYTE v95[7];
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  _BYTE v108[7];
  _BYTE v109[7];
  char v110;
  _BYTE v111[7];
  char v112;
  int v113;
  __int16 v114;
  char v115;

  v72 = a1;
  v77 = a2;
  v3 = sub_10000A66C(&qword_10009D4F0);
  __chkstk_darwin(v3);
  v71 = (uint64_t *)((char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10000A66C(&qword_10009D4F8);
  v6 = __chkstk_darwin(v5);
  v75 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v76 = (uint64_t)&v70 - v8;
  v9 = sub_10000A66C(&qword_10009D500);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Font.TextStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Image.ResizingMode(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10000A66C(&qword_10009D508);
  v21 = __chkstk_darwin(v20);
  v74 = (uint64_t)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v73 = (char *)&v70 - v23;
  v24 = Image.init(_internalSystemName:)(0x72656B63697473, 0xE700000000000000);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for Image.ResizingMode.stretch(_:), v16);
  v25 = Image.resizable(capInsets:resizingMode:)(v19, v24, 0.0, 0.0, 0.0, 0.0);
  swift_release(v24, v26);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for Font.TextStyle.largeTitle(_:), v12);
  v27 = type metadata accessor for Font.Design(0);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v11, 1, 1, v27);
  v29 = static Font.Weight.regular.getter(v28);
  v70 = static Font.system(_:design:weight:)(v15, v11, *(_QWORD *)&v29, 0);
  sub_10002E2B4((uint64_t)v11, &qword_10009D500);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  KeyPath = swift_getKeyPath(&unk_10007A350);
  v31 = static Color.secondary.getter(KeyPath);
  v32 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PhotoConfirmationMiniTipView(0) + 24));
  v33 = static Alignment.top.getter();
  v35 = _FrameLayout.init(width:height:alignment:)(&v101, v32, 0, v32, 0, v33, v34);
  v36 = v101;
  LOBYTE(v19) = v102;
  v37 = v103;
  LOBYTE(v24) = v104;
  v39 = v105;
  v38 = v106;
  LOBYTE(v32) = static Edge.Set.top.getter(v35);
  v40 = EdgeInsets.init(_all:)(4.0);
  v115 = 1;
  v112 = (char)v19;
  v110 = v24;
  v107 = 0;
  v41 = v25;
  v78 = v25;
  v79 = 0;
  v80 = 1;
  v81 = v113;
  v82 = v114;
  v83 = KeyPath;
  v42 = v70;
  v84 = v70;
  v85 = v31;
  v86 = v36;
  v87 = (char)v19;
  *(_DWORD *)&v88[3] = *(_DWORD *)&v111[3];
  *(_DWORD *)v88 = *(_DWORD *)v111;
  v89 = v37;
  v90 = v110;
  *(_DWORD *)&v91[3] = *(_DWORD *)&v109[3];
  *(_DWORD *)v91 = *(_DWORD *)v109;
  v92 = v39;
  v93 = v38;
  v94 = v32;
  *(_DWORD *)&v95[3] = *(_DWORD *)&v108[3];
  *(_DWORD *)v95 = *(_DWORD *)v108;
  v96 = v40;
  v97 = v43;
  v98 = v44;
  v99 = v45;
  v100 = 0;
  v46 = sub_10000A66C(&qword_10009D510);
  v47 = sub_100042C94(&qword_10009D518, &qword_10009D510, (void (*)(void))sub_100060A38);
  v48 = v73;
  View.accessibilityHidden(_:)(1, v46, v47);
  swift_release(v31, v49);
  swift_release(v42, v50);
  swift_release(KeyPath, v51);
  v53 = swift_release(v41, v52);
  v54 = static HorizontalAlignment.leading.getter(v53);
  v55 = (uint64_t)v71;
  *v71 = v54;
  *(_QWORD *)(v55 + 8) = 0x4010000000000000;
  *(_BYTE *)(v55 + 16) = 0;
  v56 = sub_10000A66C(&qword_10009D580);
  v57 = sub_10005EEF4(v72, v55 + *(int *)(v56 + 44));
  v58 = static Alignment.topLeading.getter(v57);
  v59 = v75;
  sub_10005FB10(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v75, 0.0, 1, 0.0, 1, v58, v60, &qword_10009D4F0, &qword_10009D4F8);
  sub_10002E2B4(v55, &qword_10009D4F0);
  v61 = v59;
  v62 = v59;
  v63 = v76;
  sub_10004692C(v62, v76, &qword_10009D4F8);
  v64 = (uint64_t)v48;
  v65 = (uint64_t)v48;
  v66 = v74;
  sub_10002E23C(v64, v74, &qword_10009D508);
  sub_10002E23C(v63, v61, &qword_10009D4F8);
  v67 = v77;
  sub_10002E23C(v66, v77, &qword_10009D508);
  v68 = sub_10000A66C(&qword_10009D588);
  sub_10002E23C(v61, v67 + *(int *)(v68 + 48), &qword_10009D4F8);
  sub_10002E2B4(v63, &qword_10009D4F8);
  sub_10002E2B4(v65, &qword_10009D508);
  sub_10002E2B4(v61, &qword_10009D4F8);
  return sub_10002E2B4(v66, &qword_10009D508);
}

uint64_t sub_10005EEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unsigned int v48;
  void (*v49)(char *, _QWORD, uint64_t);
  char *v50;
  unsigned int v51;
  char *v52;
  unint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  void (*v121)(char *, _QWORD, uint64_t);
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  void (*v130)(char *, uint64_t);
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __n128 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  void (*v156)(char *, uint64_t);
  unsigned int v157;
  void (*v158)(char *, _QWORD, uint64_t);
  unsigned int v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  _QWORD *v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  __int16 v193;
  uint64_t v194;
  uint64_t v195;

  v162 = a2;
  v3 = sub_10000A66C(&qword_10009D500);
  __chkstk_darwin(v3);
  v171 = (char *)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for Font.TextStyle(0);
  v169 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v168 = (char *)&v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_10000A66C(&qword_10009D590);
  v6 = __chkstk_darwin(v177);
  v178 = (char *)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v175 = (char *)&v152 - v8;
  v9 = type metadata accessor for DynamicTypeSize(0);
  v172 = *(_QWORD **)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v185 = (char *)&v152 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v184 = (char *)&v152 - v12;
  v176 = sub_10000A66C(&qword_10009D598);
  v13 = __chkstk_darwin(v176);
  v173 = (char *)&v152 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v174 = (uint64_t)&v152 - v15;
  v181 = sub_10000A66C(&qword_10009D5A0);
  v166 = *(_QWORD *)(v181 - 8);
  __chkstk_darwin(v181);
  v179 = (char *)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10000A66C(&qword_10009D5A8);
  v18 = __chkstk_darwin(v17);
  v161 = (uint64_t)&v152 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v183 = (uint64_t)&v152 - v20;
  v164 = sub_10000A66C((uint64_t *)&unk_10009D5B0);
  v21 = __chkstk_darwin(v164);
  v182 = (uint64_t)&v152 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v180 = (uint64_t)&v152 - v23;
  v163 = type metadata accessor for PhotoConfirmationMiniTipView(0);
  v24 = *(int *)(v163 + 28);
  v167 = a1;
  v25 = (uint64_t *)(a1 + v24);
  v26 = v25[1];
  v186 = *v25;
  v187 = v26;
  v27 = sub_100033158();
  v28 = swift_bridgeObjectRetain(v26);
  v165 = v27;
  v29 = Text.init<A>(_:)(&v186, &type metadata for String, v27, v28);
  v31 = v30;
  v33 = v32;
  v35 = v34 & 1;
  v36 = static Color.primary.getter();
  v37 = Text.foregroundColor(_:)(v36, v29, v31, v35, v33);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  swift_release(v36, v38);
  sub_100042A14(v29, v31, v35);
  swift_bridgeObjectRelease(v33);
  KeyPath = swift_getKeyPath(&unk_10007A380);
  v45 = static Font.headline.getter();
  v46 = swift_getKeyPath(&unk_10007A350);
  v186 = v37;
  v187 = v39;
  v188 = v41 & 1;
  v189 = v43;
  v190 = KeyPath;
  v47 = v172;
  v191 = 0;
  v192 = 1;
  v193 = 256;
  v194 = v46;
  v195 = v45;
  v48 = enum case for DynamicTypeSize.medium(_:);
  v49 = (void (*)(char *, _QWORD, uint64_t))v172[13];
  v50 = v184;
  v49(v184, enum case for DynamicTypeSize.medium(_:), v9);
  v51 = enum case for DynamicTypeSize.accessibility3(_:);
  v52 = v185;
  v49(v185, enum case for DynamicTypeSize.accessibility3(_:), v9);
  v53 = sub_10005FEE8();
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v50, v52, v9, v53);
  if ((result & 1) != 0)
  {
    v159 = v51;
    v55 = v177;
    v56 = *(int *)(v177 + 48);
    v160 = v53;
    v57 = v175;
    v158 = v49;
    v58 = &v175[v56];
    v59 = (void (*)(char *, char *, uint64_t))v47[4];
    v59(v175, v184, v9);
    v59(v58, v185, v9);
    v60 = *(int *)(v55 + 48);
    v157 = v48;
    v61 = v178;
    v62 = &v178[v60];
    v63 = (void (*)(char *, char *, uint64_t))v47[2];
    v63(v178, v57, v9);
    v155 = v63;
    v63(v62, v58, v9);
    v64 = (uint64_t)v173;
    v59(v173, v61, v9);
    v65 = (void (*)(char *, uint64_t))v47[1];
    v65(v62, v9);
    v66 = &v61[*(int *)(v55 + 48)];
    v59(v61, v57, v9);
    v59(v66, v58, v9);
    v67 = v176;
    v59((char *)(v64 + *(int *)(v176 + 36)), v66, v9);
    v156 = v65;
    v65(v61, v9);
    v68 = v174;
    sub_10004692C(v64, v174, &qword_10009D598);
    v69 = sub_10000A66C(&qword_10009D5C0);
    v70 = sub_100060AF8(&qword_10009D5C8, &qword_10009D5C0, (void (*)(void))sub_100060C3C);
    v71 = sub_10000F6DC(&qword_10009D600, &qword_10009D598, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v72 = v179;
    v154 = v69;
    v153 = v70;
    v152 = v71;
    View.dynamicTypeSize<A>(_:)(v68, v69, v67, v70, v71);
    sub_10002E2B4(v68, &qword_10009D598);
    v73 = v189;
    v74 = v190;
    v75 = v194;
    v76 = v195;
    sub_100042A14(v186, v187, v188);
    swift_release(v75, v77);
    swift_release(v74, v78);
    swift_bridgeObjectRelease(v73);
    v80 = swift_release(v76, v79);
    v81 = static Alignment.topLeading.getter(v80);
    v82 = v183;
    v84 = sub_10005FCDC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v183, 0.0, 1, 0.0, 1, v81, v83);
    v166 = *(_QWORD *)(v166 + 8);
    v85 = ((uint64_t (*)(char *, uint64_t, __n128))v166)(v72, v181, v84);
    LOBYTE(v73) = static Edge.Set.trailing.getter(v85);
    v86 = EdgeInsets.init(_all:)(26.0);
    v88 = v87;
    v90 = v89;
    v92 = v91;
    v93 = v182;
    sub_10002E23C(v82, v182, &qword_10009D5A8);
    v94 = v93 + *(int *)(v164 + 36);
    *(_BYTE *)v94 = (_BYTE)v73;
    *(double *)(v94 + 8) = v86;
    *(_QWORD *)(v94 + 16) = v88;
    *(_QWORD *)(v94 + 24) = v90;
    *(_QWORD *)(v94 + 32) = v92;
    *(_BYTE *)(v94 + 40) = 0;
    sub_10002E2B4(v82, &qword_10009D5A8);
    sub_10004692C(v93, v180, (uint64_t *)&unk_10009D5B0);
    v95 = (uint64_t *)(v167 + *(int *)(v163 + 32));
    v96 = v95[1];
    v186 = *v95;
    v187 = v96;
    v97 = swift_bridgeObjectRetain(v96);
    v98 = Text.init<A>(_:)(&v186, &type metadata for String, v165, v97);
    v100 = v99;
    v102 = v101;
    v104 = v103 & 1;
    v105 = static Color.secondary.getter(v98);
    v106 = Text.foregroundColor(_:)(v105, v98, v100, v104, v102);
    v167 = v107;
    LOBYTE(v74) = v108;
    v172 = v109;
    swift_release(v105, v107);
    sub_100042A14(v98, v100, v104);
    swift_bridgeObjectRelease(v102);
    v110 = swift_getKeyPath(&unk_10007A380);
    v111 = v169;
    v112 = v168;
    v113 = v170;
    (*(void (**)(char *, _QWORD, uint64_t))(v169 + 104))(v168, enum case for Font.TextStyle.subheadline(_:), v170);
    v114 = type metadata accessor for Font.Design(0);
    v115 = (uint64_t)v171;
    v116 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v171, 1, 1, v114);
    v117 = static Font.Weight.regular.getter(v116);
    v118 = static Font.system(_:design:weight:)(v112, v115, *(_QWORD *)&v117, 0);
    sub_10002E2B4(v115, &qword_10009D500);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v113);
    v119 = swift_getKeyPath(&unk_10007A350);
    v186 = v106;
    v187 = v167;
    v188 = v74 & 1;
    v189 = v172;
    v190 = v110;
    v191 = 0;
    v192 = 1;
    v193 = 256;
    v194 = v119;
    v195 = v118;
    v120 = v184;
    v121 = v158;
    v158(v184, v157, v9);
    v122 = v185;
    v121(v185, v159, v9);
    result = dispatch thunk of static Comparable.<= infix(_:_:)(v120, v122, v9, v160);
    if ((result & 1) != 0)
    {
      v123 = v177;
      v124 = v175;
      v125 = &v175[*(int *)(v177 + 48)];
      v59(v175, v184, v9);
      v59(v125, v185, v9);
      v126 = v178;
      v127 = &v178[*(int *)(v123 + 48)];
      v128 = v155;
      v155(v178, v124, v9);
      v128(v127, v125, v9);
      v129 = (uint64_t)v173;
      v59(v173, v126, v9);
      v130 = v156;
      v156(v127, v9);
      v131 = &v126[*(int *)(v123 + 48)];
      v59(v126, v124, v9);
      v59(v131, v125, v9);
      v132 = v176;
      v59((char *)(v129 + *(int *)(v176 + 36)), v131, v9);
      v130(v126, v9);
      v133 = v174;
      sub_10004692C(v129, v174, &qword_10009D598);
      v134 = v179;
      View.dynamicTypeSize<A>(_:)(v133, v154, v132, v153, v152);
      sub_10002E2B4(v133, &qword_10009D598);
      v135 = v189;
      v136 = v190;
      v137 = v194;
      v138 = v195;
      sub_100042A14(v186, v187, v188);
      swift_release(v137, v139);
      swift_release(v136, v140);
      swift_bridgeObjectRelease(v135);
      v142 = swift_release(v138, v141);
      v143 = static Alignment.topLeading.getter(v142);
      v144 = v161;
      v146 = sub_10005FCDC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v161, 0.0, 1, 0.0, 1, v143, v145);
      ((void (*)(char *, uint64_t, __n128))v166)(v134, v181, v146);
      v147 = v183;
      sub_10004692C(v144, v183, &qword_10009D5A8);
      v148 = v180;
      v149 = v182;
      sub_10002E23C(v180, v182, (uint64_t *)&unk_10009D5B0);
      sub_10002E23C(v147, v144, &qword_10009D5A8);
      v150 = v162;
      sub_10002E23C(v149, v162, (uint64_t *)&unk_10009D5B0);
      v151 = sub_10000A66C(&qword_10009D608);
      sub_10002E23C(v144, v150 + *(int *)(v151 + 48), &qword_10009D5A8);
      sub_10002E2B4(v147, &qword_10009D5A8);
      sub_10002E2B4(v148, (uint64_t *)&unk_10009D5B0);
      sub_10002E2B4(v144, &qword_10009D5A8);
      return sub_10002E2B4(v149, (uint64_t *)&unk_10009D5B0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

__n128 sub_10005FB10@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter();
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_10002E23C(v18, v19, a16);
  v41 = v19 + *(int *)(sub_10000A66C(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

__n128 sub_10005FCDC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __n128 result;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter();
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v40;
    a1 = v41;
    v20 = a10;
    a3 = v42;
    v19 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  v35 = sub_10000A66C(&qword_10009D5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a9, v16, v35);
  v36 = a9 + *(int *)(sub_10000A66C(&qword_10009D5A8) + 36);
  v37 = v45[5];
  *(_OWORD *)(v36 + 64) = v45[4];
  *(_OWORD *)(v36 + 80) = v37;
  *(_OWORD *)(v36 + 96) = v45[6];
  v38 = v45[1];
  *(_OWORD *)v36 = v45[0];
  *(_OWORD *)(v36 + 16) = v38;
  result = (__n128)v45[3];
  *(_OWORD *)(v36 + 32) = v45[2];
  *(__n128 *)(v36 + 48) = result;
  return result;
}

unint64_t sub_10005FEAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009C868;
  if (!qword_10009C868)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10009C868);
  }
  return result;
}

unint64_t sub_10005FEE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009D340;
  if (!qword_10009D340)
  {
    v1 = type metadata accessor for DynamicTypeSize(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DynamicTypeSize, v1);
    atomic_store(result, (unint64_t *)&qword_10009D340);
  }
  return result;
}

uint64_t sub_10005FF30()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for PhotoConfirmationMiniTipView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_10000A66C((uint64_t *)&unk_10009D300);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
  }
  else
  {
    swift_release(*v6, v8);
  }
  swift_release(*(_QWORD *)((char *)v6 + v1[5] + 8), v10);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[8] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100060008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotoConfirmationMiniTipView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006004C()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for PhotoConfirmationMiniTipView(0);
  v0 = static Animation.default.getter();
  withAnimation<A>(_:_:)(v0, sub_1000609C8);
  return swift_release(v0, v1);
}

uint64_t sub_1000600C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100083428, 1);
}

uint64_t sub_1000600D4(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_10009FE00);
}

uint64_t sub_100060110()
{
  return type metadata accessor for PhotoConfirmationTipHostingController(0);
}

uint64_t *sub_100060118(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_10000A66C((uint64_t *)&unk_10009D300);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
    v19 = a3[7];
    v20 = a3[8];
    v21 = (uint64_t *)((char *)a1 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (uint64_t *)((char *)a1 + v20);
    v25 = (uint64_t *)((char *)a2 + v20);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_retain(v18);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v26);
  }
  return a1;
}

uint64_t sub_100060238(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_10000A66C((uint64_t *)&unk_10009D300);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  else
  {
    swift_release(*a1, v5);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[5] + 8), v7);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[7] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[8] + 8));
}

uint64_t *sub_1000602CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = sub_10000A66C((uint64_t *)&unk_10009D300);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = (uint64_t *)((char *)a1 + v12);
  v15 = (uint64_t *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
  v17 = a3[7];
  v18 = a3[8];
  v19 = (uint64_t *)((char *)a1 + v17);
  v20 = (uint64_t *)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (uint64_t *)((char *)a1 + v18);
  v23 = (uint64_t *)((char *)a2 + v18);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain(v16);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v24);
  return a1;
}

uint64_t *sub_1000603C0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_10002E2B4((uint64_t)a1, (uint64_t *)&unk_10009D300);
    v6 = sub_10000A66C((uint64_t *)&unk_10009D300);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v13[1];
  v16 = v14[1];
  v13[1] = v16;
  swift_retain(v16);
  swift_release(v15, v17);
  *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  v18 = a3[7];
  v19 = (uint64_t *)((char *)a1 + v18);
  v20 = (uint64_t *)((char *)a2 + v18);
  *v19 = *v20;
  v21 = v20[1];
  v22 = v19[1];
  v19[1] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  v24 = (uint64_t *)((char *)a1 + v23);
  v25 = (uint64_t *)((char *)a2 + v23);
  *v24 = *v25;
  v26 = v25[1];
  v27 = v24[1];
  v24[1] = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  return a1;
}

char *sub_100060508(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_10000A66C((uint64_t *)&unk_10009D300);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_1000605CC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_10002E2B4((uint64_t)a1, (uint64_t *)&unk_10009D300);
    v6 = sub_10000A66C((uint64_t *)&unk_10009D300);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v9 + 1);
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release(v11, a2);
  v12 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  v23 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease(v23);
  return a1;
}

uint64_t sub_1000606E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000606F0);
}

uint64_t sub_1000606F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10000A66C(&qword_10009D310);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100060774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100060780);
}

uint64_t sub_100060780(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10000A66C(&qword_10009D310);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

void sub_100060800(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_10006088C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_10007A320;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = &unk_10007A338;
    v4[4] = &unk_10007A338;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_10006088C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10009D450)
  {
    v2 = type metadata accessor for DynamicTypeSize(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10009D450);
  }
}

uint64_t sub_1000608E0()
{
  return sub_100042C94(&qword_10009D490, &qword_10009D338, (void (*)(void))sub_100060914);
}

unint64_t sub_100060914()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10009D498;
  if (!qword_10009D498)
  {
    v1 = sub_10000D720(&qword_10009D330);
    v2[0] = sub_10000D720(&qword_10009D320);
    v2[1] = sub_10000F6DC(&qword_10009D350, &qword_10009D320, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009D498);
  }
  return result;
}

uint64_t sub_1000609C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PhotoConfirmationMiniTipView(0) + 20));
  v3 = *v2;
  v4 = v2[1];
  v7[1] = v3;
  v7[2] = v4;
  v7[0] = 0x3FF0000000000000;
  v5 = sub_10000A66C(&qword_10009D318);
  return State.wrappedValue.setter(v7, v5);
}

uint64_t sub_100060A38()
{
  return sub_100042C94(&qword_10009D520, &qword_10009D528, (void (*)(void))sub_100060A5C);
}

unint64_t sub_100060A5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009D530;
  if (!qword_10009D530)
  {
    v1 = sub_10000D720(&qword_10009D538);
    sub_100060AF8(&qword_10009D540, &qword_10009D548, (void (*)(void))sub_100060B7C);
    sub_10000F6DC(&qword_10009D570, &qword_10009D578, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009D530);
  }
  return result;
}

uint64_t sub_100060AF8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10000D720(a2);
    a3();
    sub_10000F6DC((unint64_t *)&unk_10009D560, &qword_10009C270, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100060B7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009D550;
  if (!qword_10009D550)
  {
    v1 = sub_10000D720(&qword_10009D558);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009D550);
  }
  return result;
}

uint64_t sub_100060BE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100060C10(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_100060C3C()
{
  return sub_100042C94(&qword_10009D5D0, &qword_10009D5D8, (void (*)(void))sub_100060C60);
}

unint64_t sub_100060C60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009D5E0;
  if (!qword_10009D5E0)
  {
    v1 = sub_10000D720(&qword_10009D5E8);
    sub_10000F6DC(&qword_10009D5F0, &qword_10009D5F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009D5E0);
  }
  return result;
}

uint64_t sub_100060CE4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_100060D10()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100060D18()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_100060D20(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*sub_100060D28())()
{
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_100060D38()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t sub_100060D40(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = result;
  return result;
}

uint64_t (*sub_100060D48())()
{
  return PresentationContexts.rawValue.getter;
}

uint64_t sub_100060D58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 40;
  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
    v1 = 32;
  return swift_retain(*(_QWORD *)(v0 + v1));
}

uint64_t sub_100060D74()
{
  return sub_1000616BC((SEL *)&selRef_secondaryLabelColor);
}

uint64_t sub_100060D80()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 32));
}

uint64_t sub_100060D88()
{
  return sub_1000616BC((SEL *)&selRef_labelColor);
}

uint64_t sub_100060D94()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 40));
}

double sub_100060D9C()
{
  uint64_t v0;
  double result;

  result = 36.0;
  if ((*(_BYTE *)(v0 + 25) & 1) == 0)
    return 22.0;
  return result;
}

uint64_t sub_100060DB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;

  v2 = v1;
  v41 = a1;
  v3 = type metadata accessor for AccessibilityTraits(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v38 - v8;
  v10 = sub_10000A66C(&qword_10009D610);
  __chkstk_darwin(v10);
  v12 = (void (**)(char *, uint64_t))((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = sub_10000A66C(&qword_10009D618);
  v13 = __chkstk_darwin(v40);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v38 - v17;
  v19 = __chkstk_darwin(v16);
  v39 = (char *)&v38 - v20;
  *v12 = static Alignment.center.getter(v19);
  v12[1] = v21;
  v22 = sub_10000A66C(&qword_10009D620);
  v23 = sub_1000610F4(v2, (uint64_t)v12 + *(int *)(v22 + 44));
  static AccessibilityTraits.isImage.getter(v23);
  v24 = sub_10000F6DC(&qword_10009D628, &qword_10009D610, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  View.accessibilityRemoveTraits(_:)(v9, v10, v24);
  v38 = *(void (**)(char *, uint64_t))(v4 + 8);
  v38(v9, v3);
  sub_10002E2B4((uint64_t)v12, &qword_10009D610);
  LOBYTE(v9) = *(_BYTE *)(v2 + 24);
  v25 = sub_10000A66C(&qword_10009C188);
  v26 = *(_QWORD *)(v4 + 72);
  v27 = *(unsigned __int8 *)(v4 + 80);
  v28 = (v27 + 32) & ~v27;
  if ((v9 & 1) != 0)
  {
    v30 = swift_allocObject(v25, v28 + 2 * v26, v27 | 7);
    *(_OWORD *)(v30 + 16) = xmmword_100078E10;
    v29 = static AccessibilityTraits.isSelected.getter();
  }
  else
  {
    v29 = swift_allocObject(v25, v28 + v26, v27 | 7);
    v30 = v29;
    *(_OWORD *)(v29 + 16) = xmmword_100078550;
  }
  static AccessibilityTraits.isButton.getter(v29);
  *(_QWORD *)&v42 = v30;
  v31 = sub_10002CA50(&qword_10009C190, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
  v32 = sub_10000A66C(&qword_10009C198);
  v33 = sub_10000F6DC(&qword_10009C1A0, &qword_10009C198, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v42, v32, v33, v3, v31);
  v34 = v40;
  ModifiedContent<>.accessibilityAddTraits(_:)(v7, v40);
  v38(v7, v3);
  sub_10002E2B4((uint64_t)v15, &qword_10009D618);
  v42 = *(_OWORD *)v2;
  v35 = sub_100033158();
  v36 = (uint64_t)v39;
  ModifiedContent<>.accessibilityLabel<A>(_:)(&v42, v34, &type metadata for String, v35);
  sub_10002E2B4((uint64_t)v18, &qword_10009D618);
  return sub_10004692C(v36, v41, &qword_10009D618);
}

uint64_t sub_1000610F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;

  v73 = a2;
  v3 = type metadata accessor for ContentShapeKinds(0);
  v71 = *(_QWORD *)(v3 - 8);
  v72 = v3;
  __chkstk_darwin(v3);
  v70 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Image.ResizingMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000A66C(&qword_10009D660);
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10000A66C(&qword_10009D698);
  __chkstk_darwin(v61);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_10000A66C(&qword_10009D6A0);
  __chkstk_darwin(v66);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_10000A66C(&qword_10009D6A8);
  v16 = __chkstk_darwin(v65);
  v69 = (uint64_t)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v61 - v19;
  __chkstk_darwin(v18);
  v68 = (uint64_t)&v61 - v21;
  v22 = type metadata accessor for StickerPackStripSelectionBackground(0);
  v23 = __chkstk_darwin(v22);
  v67 = (uint64_t)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v62 = (uint64_t)&v61 - v25;
  v26 = *(unsigned __int8 *)(a1 + 24);
  v27 = sub_100047A78(*(_BYTE *)(a1 + 24), (_BYTE *)&v61 - v25);
  v28 = *(_QWORD *)(a1 + 16);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v5, v27);
  v29 = Image.resizable(capInsets:resizingMode:)(v8, v28, 0.0, 0.0, 0.0, 0.0);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v74 = (unint64_t)v29;
  LOWORD(v75) = 1;
  v31 = static Font.Weight.medium.getter(v30);
  v32 = sub_10000A66C(&qword_10009D558);
  v33 = sub_100060B7C();
  View.fontWeight(_:)(*(_QWORD *)&v31, 0, v32, v33);
  v35 = swift_release(v29, v34);
  if ((*(_BYTE *)(a1 + 25) & 1) != 0)
    v36 = 0x4042000000000000;
  else
    v36 = 0x4036000000000000;
  v37 = static Alignment.center.getter(v35);
  _FrameLayout.init(width:height:alignment:)(&v74, v36, 0, 0, 1, v37, v38);
  v40 = v63;
  v39 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v13, v11, v64);
  v41 = &v13[*(int *)(v61 + 36)];
  v42 = v75;
  *(_OWORD *)v41 = v74;
  *((_OWORD *)v41 + 1) = v42;
  *((_OWORD *)v41 + 2) = v76;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v39);
  v43 = 32;
  if (v26)
    v43 = 40;
  v44 = *(_QWORD *)(a1 + v43);
  KeyPath = swift_getKeyPath(&unk_10007A4C8);
  sub_10002E23C((uint64_t)v13, (uint64_t)v15, &qword_10009D698);
  v46 = (uint64_t *)&v15[*(int *)(v66 + 36)];
  *v46 = KeyPath;
  v46[1] = v44;
  swift_retain(v44);
  v47 = sub_10002E2B4((uint64_t)v13, &qword_10009D698);
  v48 = v70;
  static ContentShapeKinds.accessibility.getter(v47);
  v49 = &v20[*(int *)(v65 + 36)];
  v50 = sub_10000A66C(&qword_10009D6B0);
  v52 = v71;
  v51 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(&v49[*(int *)(v50 + 40)], v48, v72);
  *v49 = 0;
  sub_10002E23C((uint64_t)v15, (uint64_t)v20, &qword_10009D6A0);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v51);
  sub_10002E2B4((uint64_t)v15, &qword_10009D6A0);
  v53 = (uint64_t)v20;
  v54 = v68;
  sub_10004692C(v53, v68, &qword_10009D6A8);
  v55 = v62;
  v56 = v67;
  sub_100041CC8(v62, v67, type metadata accessor for StickerPackStripSelectionBackground);
  v57 = v69;
  sub_10002E23C(v54, v69, &qword_10009D6A8);
  v58 = v73;
  sub_100041CC8(v56, v73, type metadata accessor for StickerPackStripSelectionBackground);
  v59 = sub_10000A66C(&qword_10009D6B8);
  sub_10002E23C(v57, v58 + *(int *)(v59 + 48), &qword_10009D6A8);
  sub_10002E2B4(v54, &qword_10009D6A8);
  sub_100045678(v55, type metadata accessor for StickerPackStripSelectionBackground);
  sub_10002E2B4(v57, &qword_10009D6A8);
  return sub_100045678(v56, type metadata accessor for StickerPackStripSelectionBackground);
}

uint64_t sub_1000615F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  void *v12;
  uint64_t v13;
  uint64_t result;

  v12 = (void *)objc_opt_self(UIColor);
  v13 = Color.init(uiColor:)(objc_msgSend(v12, "secondaryLabelColor"));
  result = Color.init(uiColor:)(objc_msgSend(v12, "labelColor"));
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 25) = a5;
  *(_QWORD *)(a6 + 32) = v13;
  *(_QWORD *)(a6 + 40) = result;
  return result;
}

void *sub_100061698()
{
  return &unk_10007A3B0;
}

double sub_1000616A4()
{
  return 10.0;
}

uint64_t sub_1000616B0()
{
  return sub_1000616BC((SEL *)&selRef_tertiarySystemFillColor);
}

uint64_t sub_1000616BC(SEL *a1)
{
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(UIColor), *a1);
  return Color.init(uiColor:)(v1);
}

uint64_t sub_1000616F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_retain(a3);
}

double sub_1000616FC()
{
  return *(double *)sub_10004728C() + -10.0;
}

uint64_t sub_10006171C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  _OWORD v22[3];

  v10 = sub_10000A66C(&qword_10009D630);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v11);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v14 = sub_10000A66C(&qword_10009D638);
  sub_100061848(a1, a2, a3, (uint64_t)&v13[*(int *)(v14 + 44)], a5);
  v15 = (uint64_t *)sub_1000472A4();
  v16 = *v15;
  v17 = static Alignment.center.getter(v15);
  _FrameLayout.init(width:height:alignment:)(v22, 0, 1, v16, 0, v17, v18);
  sub_10002E23C((uint64_t)v13, a4, &qword_10009D630);
  v19 = (_OWORD *)(a4 + *(int *)(sub_10000A66C(&qword_10009D640) + 36));
  v20 = v22[1];
  *v19 = v22[0];
  v19[1] = v20;
  v19[2] = v22[2];
  return sub_10002E2B4((uint64_t)v13, &qword_10009D630);
}

uint64_t sub_100061848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __int128 v44;
  uint64_t KeyPath;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;

  v63 = a2;
  v64 = a3;
  v66 = a4;
  v7 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v7);
  v65 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Image.ResizingMode(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_10000A66C(&qword_10009D660);
  v13 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_10000A66C(&qword_10009D668);
  __chkstk_darwin(v58);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10000A66C(&qword_10009D670);
  __chkstk_darwin(v60);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10000A66C(&qword_10009D678);
  __chkstk_darwin(v61);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_10000A66C(&qword_10009D680);
  __chkstk_darwin(v62);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for Image.ResizingMode.stretch(_:), v9);
  v24 = Image.resizable(capInsets:resizingMode:)(v12, a1, 0.0, 0.0, 0.0, 0.0);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v67 = (unint64_t)v24;
  LOWORD(v68) = 1;
  v26 = static Font.Weight.semibold.getter(v25);
  v27 = sub_10000A66C(&qword_10009D558);
  v28 = sub_100060B7C();
  View.fontWeight(_:)(*(_QWORD *)&v26, 0, v27, v28);
  v30 = swift_release(v24, v29);
  LOBYTE(v9) = static Edge.Set.all.getter(v30);
  v31 = EdgeInsets.init(_all:)(10.0);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v38 = v59;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v59);
  v39 = &v17[*(int *)(v58 + 36)];
  *v39 = v9;
  *((double *)v39 + 1) = v31;
  *((_QWORD *)v39 + 2) = v33;
  *((_QWORD *)v39 + 3) = v35;
  *((_QWORD *)v39 + 4) = v37;
  v39[40] = 0;
  v40 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v38);
  v41 = static Alignment.center.getter(v40);
  _FrameLayout.init(width:height:alignment:)(&v67, *(_QWORD *)&a5, 0, *(_QWORD *)&a5, 0, v41, v42);
  sub_10002E23C((uint64_t)v17, (uint64_t)v19, &qword_10009D668);
  v43 = &v19[*(int *)(v60 + 36)];
  v44 = v68;
  *(_OWORD *)v43 = v67;
  *((_OWORD *)v43 + 1) = v44;
  *((_OWORD *)v43 + 2) = v69;
  sub_10002E2B4((uint64_t)v17, &qword_10009D668);
  KeyPath = swift_getKeyPath(&unk_10007A4C8);
  sub_10002E23C((uint64_t)v19, (uint64_t)v21, &qword_10009D670);
  v46 = (uint64_t *)&v21[*(int *)(v61 + 36)];
  v47 = v63;
  *v46 = KeyPath;
  v46[1] = v47;
  swift_retain(v47);
  sub_10002E2B4((uint64_t)v19, &qword_10009D670);
  v48 = v64;
  swift_retain(v64);
  LOBYTE(v19) = static Edge.Set.all.getter(v49);
  sub_10002E23C((uint64_t)v21, (uint64_t)v23, &qword_10009D678);
  v50 = &v23[*(int *)(v62 + 36)];
  *(_QWORD *)v50 = v48;
  v50[8] = (char)v19;
  sub_10002E2B4((uint64_t)v21, &qword_10009D678);
  v51 = enum case for RoundedCornerStyle.continuous(_:);
  v52 = type metadata accessor for RoundedCornerStyle(0);
  v53 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v65, v51, v52);
  v54 = sub_10000A66C(&qword_10009D688);
  v55 = v66;
  v56 = v66 + *(int *)(v54 + 36);
  sub_100041CC8(v53, v56, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
  *(_WORD *)(v56 + *(int *)(sub_10000A66C(&qword_10009D690) + 36)) = 256;
  sub_10002E23C((uint64_t)v23, v55, &qword_10009D680);
  sub_100045678(v53, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
  return sub_10002E2B4((uint64_t)v23, &qword_10009D680);
}

uint64_t sub_100061CF4(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_opt_self(UIColor);
  Color.init(uiColor:)(objc_msgSend(v2, "secondaryLabelColor"));
  Color.init(uiColor:)(objc_msgSend(v2, "tertiarySystemFillColor"));
  sub_10004728C();
  return a1;
}

uint64_t sub_100061D80(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100083488, 1);
}

uint64_t sub_100061D90(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1000834B0, 1);
}

uint64_t sub_100061DA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  _OWORD v19[3];

  v3 = sub_10000A66C(&qword_10009D630);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = v1[2];
  v10 = *((double *)v1 + 3);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v4);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v11 = sub_10000A66C(&qword_10009D638);
  sub_100061848(v7, v8, v9, (uint64_t)&v6[*(int *)(v11 + 44)], v10);
  v12 = (uint64_t *)sub_1000472A4();
  v13 = *v12;
  v14 = static Alignment.center.getter(v12);
  _FrameLayout.init(width:height:alignment:)(v19, 0, 1, v13, 0, v14, v15);
  sub_10002E23C((uint64_t)v6, a1, &qword_10009D630);
  v16 = (_OWORD *)(a1 + *(int *)(sub_10000A66C(&qword_10009D640) + 36));
  v17 = v19[1];
  *v16 = v19[0];
  v16[1] = v17;
  v16[2] = v19[2];
  return sub_10002E2B4((uint64_t)v6, &qword_10009D630);
}

uint64_t destroy for StickerPackStripSymbolView(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[2], v2);
  swift_release(a1[4], v3);
  return swift_release(a1[5], v4);
}

uint64_t initializeWithCopy for StickerPackStripSymbolView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for StickerPackStripSymbolView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_release(v7, v8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain(v9);
  swift_release(v10, v11);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  swift_retain(v12);
  swift_release(v13, v14);
  return a1;
}

uint64_t assignWithTake for StickerPackStripSymbolView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4, v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  swift_release(*(_QWORD *)(a1 + 32), v6);
  v7 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerPackStripSymbolView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerPackStripSymbolView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerPackStripSymbolView()
{
  return &type metadata for StickerPackStripSymbolView;
}

uint64_t destroy for StickerPackStripDrillDownSymbolView(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  swift_release(*a1, a2);
  swift_release(a1[1], v3);
  return swift_release(a1[2], v4);
}

uint64_t *initializeWithCopy for StickerPackStripDrillDownSymbolView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2[2];
  v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for StickerPackStripDrillDownSymbolView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5, v6);
  v7 = a2[1];
  v8 = a1[1];
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v8, v9);
  v10 = a2[2];
  v11 = a1[2];
  a1[2] = v10;
  swift_retain(v10);
  swift_release(v11, v12);
  a1[3] = a2[3];
  return a1;
}

_QWORD *assignWithTake for StickerPackStripDrillDownSymbolView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*a1, a2);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4, v5);
  v6 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v6, v7);
  a1[3] = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for StickerPackStripDrillDownSymbolView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StickerPackStripDrillDownSymbolView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StickerPackStripDrillDownSymbolView()
{
  return &type metadata for StickerPackStripDrillDownSymbolView;
}

unint64_t sub_100062308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009D648;
  if (!qword_10009D648)
  {
    v1 = sub_10000D720(&qword_10009D618);
    sub_10000F6DC(&qword_10009D628, &qword_10009D610, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_10002CA50(&qword_10009C178, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009D648);
  }
  return result;
}

unint64_t sub_1000623A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009D650;
  if (!qword_10009D650)
  {
    v1 = sub_10000D720(&qword_10009D640);
    sub_10000F6DC(&qword_10009D658, &qword_10009D630, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10009D650);
  }
  return result;
}

unint64_t sub_100062430()
{
  return 0xD000000000000010;
}

uint64_t sub_10006244C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_name);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_name, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_1000624A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_name);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*sub_1000624FC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_name, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_100062540()
{
  return objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
}

id sub_10006256C()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_backgroundColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_backgroundColor, v3, 0, 0);
  return *v1;
}

void sub_1000625B0(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_backgroundColor);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_100062600(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_backgroundColor, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100062644()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_delegate);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_delegate, v3, 0, 0);
  return swift_unknownObjectRetain(*v1);
}

uint64_t sub_10006268C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_delegate);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_unknownObjectRelease(v4);
}

uint64_t (*sub_1000626DC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_delegate, a1, 33, 0);
  return j_j__swift_endAccess;
}

void sub_100062720()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void (*v6)(void);
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  void *v24;
  uint64_t (*v25)(void);
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  Class isa;

  v1 = OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_textView;
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_textView);
  if (v2)
    objc_msgSend(v2, "removeFromSuperview");
  v3 = objc_msgSend(objc_allocWithZone((Class)UITextView), "init");
  v4 = *(void **)((char *)v0 + v1);
  *(_QWORD *)((char *)v0 + v1) = v3;

  v5 = *(void **)((char *)v0 + v1);
  if (v5)
  {
    v6 = *(void (**)(void))((swift_isaMask & *v0) + 0x90);
    v7 = v5;
    v6();
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    objc_msgSend(v7, "setText:", v10);

    v11 = *(void **)((char *)v0 + v1);
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v0, "view");
      if (!v13)
      {
        __break(1u);
        goto LABEL_19;
      }
      v14 = v13;
      objc_msgSend(v13, "bounds");
      v16 = v15;
      v18 = v17;
      v20 = v19;
      v22 = v21;

      objc_msgSend(v12, "setFrame:", v16, v18, v20, v22);
      v23 = *(void **)((char *)v0 + v1);
      if (v23)
      {
        objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v24 = *(void **)((char *)v0 + v1);
        if (v24)
        {
          v25 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xA8);
          v26 = v24;
          v27 = (void *)v25();
          objc_msgSend(v26, "setBackgroundColor:", v27);

          v28 = *(void **)((char *)v0 + v1);
          if (v28)
          {
            objc_msgSend(v28, "setTextAlignment:", 1);
            v29 = *(void **)((char *)v0 + v1);
            if (v29)
            {
              v30 = (void *)objc_opt_self(UIFont);
              v31 = v29;
              v32 = objc_msgSend(v30, "boldSystemFontOfSize:", 20.0);
              objc_msgSend(v31, "setFont:", v32);

              v33 = *(void **)((char *)v0 + v1);
              if (v33)
              {
                v34 = v33;
                v35 = objc_msgSend(v0, "view");
                if (v35)
                {
                  v36 = v35;
                  objc_msgSend(v35, "addSubview:", v34);

                  v37 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
                  v38 = swift_allocObject(v37, 64, 7);
                  *(_OWORD *)(v38 + 16) = xmmword_100078360;
                  v39 = objc_msgSend(v34, "leftAnchor");
                  v40 = objc_msgSend(v0, "view");
                  if (v40)
                  {
                    v41 = v40;
                    v42 = objc_msgSend(v40, "safeAreaLayoutGuide");

                    v43 = objc_msgSend(v42, "leftAnchor");
                    v44 = objc_msgSend(v39, "constraintEqualToAnchor:", v43);

                    *(_QWORD *)(v38 + 32) = v44;
                    v45 = objc_msgSend(v34, "rightAnchor");
                    v46 = objc_msgSend(v0, "view");
                    if (v46)
                    {
                      v47 = v46;
                      v48 = objc_msgSend(v46, "safeAreaLayoutGuide");

                      v49 = objc_msgSend(v48, "rightAnchor");
                      v50 = objc_msgSend(v45, "constraintEqualToAnchor:", v49);

                      *(_QWORD *)(v38 + 40) = v50;
                      v51 = objc_msgSend(v34, "topAnchor");
                      v52 = objc_msgSend(v0, "view");
                      if (v52)
                      {
                        v53 = v52;
                        v54 = objc_msgSend(v52, "safeAreaLayoutGuide");

                        v55 = objc_msgSend(v54, "topAnchor");
                        v56 = objc_msgSend(v51, "constraintEqualToAnchor:", v55);

                        *(_QWORD *)(v38 + 48) = v56;
                        v57 = objc_msgSend(v34, "bottomAnchor");
                        v58 = objc_msgSend(v0, "view");
                        if (v58)
                        {
                          v59 = v58;
                          v60 = (void *)objc_opt_self(NSLayoutConstraint);
                          v61 = objc_msgSend(v59, "safeAreaLayoutGuide");

                          v62 = objc_msgSend(v61, "bottomAnchor");
                          v63 = objc_msgSend(v57, "constraintEqualToAnchor:", v62);

                          *(_QWORD *)(v38 + 56) = v63;
                          specialized Array._endMutation()(v64);
                          sub_100062CB0();
                          isa = Array._bridgeToObjectiveC()().super.isa;
                          swift_bridgeObjectRelease(v38);
                          objc_msgSend(v60, "activateConstraints:", isa);

                          return;
                        }
                        goto LABEL_23;
                      }
LABEL_22:
                      __break(1u);
LABEL_23:
                      __break(1u);
                      return;
                    }
LABEL_21:
                    __break(1u);
                    goto LABEL_22;
                  }
LABEL_20:
                  __break(1u);
                  goto LABEL_21;
                }
LABEL_19:
                __break(1u);
                goto LABEL_20;
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_100062CB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10009B0D0;
  if (!qword_10009B0D0)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10009B0D0);
  }
  return result;
}

id sub_100062D20(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  NSString v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v3[OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_textView] = 0;
  v6 = &v3[OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_name];
  *(_QWORD *)v6 = 0xD000000000000010;
  *((_QWORD *)v6 + 1) = 0x8000000100075D30;
  v7 = OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_backgroundColor;
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, "clearColor");
  *(_QWORD *)&v9[OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_delegate] = 0;

  if (a2)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for PlaceholderViewController();
  v11 = objc_msgSendSuper2(&v13, "initWithNibName:bundle:", v10, a3);

  return v11;
}

uint64_t type metadata accessor for PlaceholderViewController()
{
  return objc_opt_self(_TtC22StickersUltraExtension25PlaceholderViewController);
}

id sub_100062EB4(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_textView] = 0;
  v3 = &v1[OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_name];
  *(_QWORD *)v3 = 0xD000000000000010;
  *((_QWORD *)v3 + 1) = 0x8000000100075D30;
  v4 = OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_backgroundColor;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "clearColor");
  *(_QWORD *)&v6[OBJC_IVAR____TtC22StickersUltraExtension25PlaceholderViewController_delegate] = 0;

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for PlaceholderViewController();
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_100062FB4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100063040()
{
  qword_10009FE10 = 1701667182;
  *(_QWORD *)algn_10009FE18 = 0xE400000000000000;
}

uint64_t *sub_10006305C()
{
  if (qword_10009FBA8 != -1)
    swift_once(&qword_10009FBA8, sub_100063040);
  return &qword_10009FE10;
}

void sub_10006309C()
{
  qword_10009FE20 = 0x692D656C646E7562;
  *(_QWORD *)algn_10009FE28 = 0xE900000000000064;
}

uint64_t *sub_1000630C4()
{
  if (qword_10009FBB0 != -1)
    swift_once(&qword_10009FBB0, sub_10006309C);
  return &qword_10009FE20;
}

void sub_100063104()
{
  qword_10009FE30 = 0x64692D6D616461;
  *(_QWORD *)algn_10009FE38 = 0xE700000000000000;
}

uint64_t *sub_100063128()
{
  if (qword_10009FBB8 != -1)
    swift_once(&qword_10009FBB8, sub_100063104);
  return &qword_10009FE30;
}

uint64_t sub_100063168()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009FBC8);
  sub_10000D130(v0, (uint64_t)qword_10009FBC8);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0x2D72656B63697473, 0xEF737265706C6568);
}

id _UIStickerRepresentation.init(representation:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v20;

  v3 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "init");
  v8 = dispatch thunk of Sticker.Representation.data.getter();
  v10 = v9;
  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100037034(v8, v10);
  objc_msgSend(v7, "setData:", isa);

  v12 = Sticker.Representation.uti.getter();
  UTType.identifier.getter(v12);
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v7, "setType:", v15);

  Sticker.Representation.size.getter();
  dispatch thunk of Sticker.Representation.role.getter(objc_msgSend(v7, "setSize:"));
  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  objc_msgSend(v7, "setRole:", v18);

  return v7;
}

uint64_t Sticker.init(from:)(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for Sticker.StickerType(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v4 + 104))(v3, enum case for Sticker.StickerType.userContent(_:));
  return dispatch thunk of Sticker.__allocating_init(type:representations:name:metadata:externalURI:)(v3, a1, 0, 0xE000000000000000, 0, 0xF000000000000000, 0, 0);
}

_QWORD *Sticker.UIRepresentations()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v0 = type metadata accessor for UTType(0);
  v35 = *(_QWORD *)(v0 - 8);
  v36 = v0;
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = dispatch thunk of Sticker.representations.getter(v1);
  v5 = v4;
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    v31 = swift_bridgeObjectRetain(v4);
    v6 = (uint64_t)sub_1000666C0(v31);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
  }
  v37 = v6;
  sub_100066648(&v37);
  swift_bridgeObjectRelease(v5);
  v8 = v37;
  if ((v37 & 0x8000000000000000) == 0 && (v37 & 0x4000000000000000) == 0)
  {
    v9 = *(_QWORD *)(v37 + 16);
    if (v9)
      goto LABEL_7;
LABEL_16:
    swift_release(v8, v7);
    return _swiftEmptyArrayStorage;
  }
  v32 = swift_bridgeObjectRetain(v37);
  v9 = _CocoaArrayWrapper.endIndex.getter(v32);
  swift_release(v8, v33);
  if (!v9)
    goto LABEL_16;
LABEL_7:
  v37 = (uint64_t)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v9);
  if ((v9 & 0x8000000000000000) == 0)
  {
    v11 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v8);
      else
        v12 = *(id *)(v8 + 8 * v11 + 32);
      v13 = v12;
      ++v11;
      v14 = objc_msgSend(objc_allocWithZone((Class)_UIStickerRepresentation), "init");
      v15 = dispatch thunk of Sticker.Representation.data.getter();
      v17 = v16;
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100037034(v15, v17);
      objc_msgSend(v14, "setData:", isa);

      v19 = Sticker.Representation.uti.getter();
      UTType.identifier.getter(v19);
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v3, v36);
      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v21);
      objc_msgSend(v14, "setType:", v22);

      Sticker.Representation.size.getter();
      dispatch thunk of Sticker.Representation.role.getter(objc_msgSend(v14, "setSize:"));
      v24 = v23;
      v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v24);
      objc_msgSend(v14, "setRole:", v25);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v26);
      v27 = *(_QWORD *)(v37 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v27);
      v28 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v14);
      specialized ContiguousArray._endMutation()(v28);
    }
    while (v9 != v11);
    v30 = v37;
    swift_release(v8, v29);
    return (_QWORD *)v30;
  }
  __break(1u);
  result = (_QWORD *)swift_release(v37, v10);
  __break(1u);
  return result;
}

void Sticker.asMSSticker(completionHandler:)(void (*a1)(id, _QWORD), uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *ObjCClassFromMetadata;
  id v15;
  void *v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSUUID v26;
  NSArray v27;
  NSString v28;
  NSString v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSUUID v36;
  NSArray v37;
  NSString v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  void (*v56)(id, _QWORD);
  unint64_t v57;
  char v58;
  uint64_t v59;
  NSString v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  NSString v69;
  id v70;
  _QWORD *v71;
  id v72;
  NSString v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  void (*v78)(id, _QWORD);
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[5];
  __int128 v82;
  __int128 v83;

  v3 = v2;
  v77 = a2;
  v78 = a1;
  v76 = (_QWORD *)type metadata accessor for UUID(0);
  v4 = *(v76 - 1);
  v5 = __chkstk_darwin(v76);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v74 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v74 - v11;
  v13 = sub_10000D5F4(0, &qword_10009B990, MSSticker_ptr);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v13);
  if (objc_msgSend(ObjCClassFromMetadata, "instancesRespondToSelector:", "initWithStickerIdentifier:representations:stickerName:effectType:externalURI:localizedDescription:metadata:attributionInfo:"))
  {
    v15 = objc_msgSend((id)objc_opt_self(STKStickerHelper), "ckAttributionInfoFromSticker:", v2);
    if (v15)
    {
      v16 = v15;
      v17 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    }
    else
    {
      v17 = sub_10001BE1C((uint64_t)_swiftEmptyArrayStorage);
    }
    sub_100051038(v17);
    v40 = v39;
    v41 = swift_bridgeObjectRelease(v17);
    Sticker.identifier.getter(v41);
    v76 = Sticker.UIRepresentations()();
    v42 = dispatch thunk of Sticker.name.getter(v76);
    v74 = v43;
    v75 = v42;
    v44 = dispatch thunk of Sticker.effect.getter(v42);
    v45 = Sticker.Effect.rawValue.getter(v44);
    v46 = dispatch thunk of Sticker.externalURI.getter();
    v48 = v47;
    v49 = dispatch thunk of Sticker.name.getter(v46);
    v51 = v50;
    v52 = dispatch thunk of Sticker.metadata.getter();
    v54 = v53;
    objc_allocWithZone((Class)MSSticker);
    swift_bridgeObjectRetain(v40);
    v55 = sub_100066440((uint64_t)v12, (uint64_t)v76, v75, v74, v45, v46, v48, v49, v51, v52, v54, v40);
    if (qword_10009FBB0 != -1)
      swift_once(&qword_10009FBB0, sub_10006309C);
    v79 = qword_10009FE20;
    v80 = *(_QWORD *)algn_10009FE28;
    swift_bridgeObjectRetain(*(_QWORD *)algn_10009FE28);
    AnyHashable.init<A>(_:)(v81, &v79, &type metadata for String, &protocol witness table for String);
    v56 = v78;
    if (*(_QWORD *)(v40 + 16) && (v57 = sub_10002913C((uint64_t)v81), (v58 & 1) != 0))
    {
      sub_10000D4C4(*(_QWORD *)(v40 + 56) + 32 * v57, (uint64_t)&v82);
    }
    else
    {
      v82 = 0u;
      v83 = 0u;
    }
    swift_bridgeObjectRelease(v40);
    sub_10002E280((uint64_t)v81);
    if (*((_QWORD *)&v83 + 1))
    {
      if ((swift_dynamicCast(&v79, &v82, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v59 = v80;
        v60 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v59);
        objc_msgSend(v55, "setStickerPackGUID:", v60);

      }
    }
    else
    {
      sub_10002E2B4((uint64_t)&v82, (uint64_t *)&unk_10009BC90);
    }
    v61 = v55;
    v56(v55, 0);

  }
  else
  {
    if (objc_msgSend(ObjCClassFromMetadata, "instancesRespondToSelector:", "initWithStickerIdentifier:representations:stickerName:externalURI:localizedDescription:"))
    {
      ((void (*)(void))Sticker.identifier.getter)();
      v18 = Sticker.UIRepresentations()();
      dispatch thunk of Sticker.name.getter(v18);
      v20 = v19;
      v21 = dispatch thunk of Sticker.externalURI.getter();
      v23 = v22;
      v75 = dispatch thunk of Sticker.name.getter(v21);
      v25 = v24;
      v26.super.isa = UUID._bridgeToObjectiveC()().super.isa;
      sub_10000D5F4(0, &qword_10009B880, _UIStickerRepresentation_ptr);
      v27.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v18);
      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20);
      if (v23)
      {
        v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v23);
      }
      else
      {
        v29 = 0;
      }
      v68 = objc_allocWithZone((Class)MSSticker);
      v69 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
      v70 = objc_msgSend(v68, "initWithStickerIdentifier:representations:stickerName:externalURI:localizedDescription:", v26.super.isa, v27.super.isa, v28, v29, v69);

      (*(void (**)(char *, _QWORD *))(v4 + 8))(v10, v76);
    }
    else
    {
      if (!objc_msgSend(ObjCClassFromMetadata, "instancesRespondToSelector:", "initWithStickerIdentifier:representations:externalURI:localizedDescription:"))
      {
        type metadata accessor for StickerFileCache(0);
        v62 = static StickerFileCache.cache.getter();
        v63 = (_QWORD *)swift_allocObject(&unk_10008DE68, 48, 7);
        v63[2] = "initWithFileURL:identifier:localizedDescription:";
        v63[3] = v3;
        v64 = v77;
        v63[4] = v78;
        v63[5] = v64;
        v65 = v3;
        swift_retain(v64);
        dispatch thunk of StickerFileCache.url(for:completion:)(v65, sub_100067224, v63);
        swift_release(v62, v66);
        swift_release(v63, v67);
        return;
      }
      ((void (*)(void))Sticker.identifier.getter)();
      v30 = Sticker.UIRepresentations()();
      v31 = dispatch thunk of Sticker.externalURI.getter();
      v33 = v32;
      dispatch thunk of Sticker.name.getter(v31);
      v35 = v34;
      v36.super.isa = UUID._bridgeToObjectiveC()().super.isa;
      sub_10000D5F4(0, &qword_10009B880, _UIStickerRepresentation_ptr);
      v37.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v30);
      if (v33)
      {
        v38 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v33);
      }
      else
      {
        v38 = 0;
      }
      v71 = v76;
      v72 = objc_allocWithZone((Class)MSSticker);
      v73 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v35);
      v70 = objc_msgSend(v72, "initWithStickerIdentifier:representations:externalURI:localizedDescription:", v36.super.isa, v37.super.isa, v38, v73);

      (*(void (**)(char *, _QWORD *))(v4 + 8))(v7, v71);
    }
    v78(v70, 0);

  }
}

uint64_t Sticker.asDisplaySticker(completionHandler:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v2;
  type metadata accessor for StickerFileCache(0);
  v6 = static StickerFileCache.cache.getter();
  v7 = (_QWORD *)swift_allocObject(&unk_10008DE90, 48, 7);
  v7[2] = "initWithFileURL:identifier:localizedDescription:";
  v7[3] = v3;
  v7[4] = a1;
  v7[5] = a2;
  v8 = v3;
  swift_retain(a2);
  dispatch thunk of StickerFileCache.url(for:completion:)(v8, sub_1000675D0, v7);
  swift_release(v6, v9);
  return swift_release(v7, v10);
}

void sub_100063E18(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void (*v20)(_QWORD, _QWORD);
  id v21;
  NSURL *v22;
  void *v23;
  void *v24;
  Class isa;
  NSString v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char v41;
  _QWORD v42[2];
  uint64_t v43;

  v43 = a1;
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000D5F4(0, &qword_10009B990, MSSticker_ptr);
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(v15), "instancesRespondToSelector:", a2))
  {
    v16 = Sticker.identifier.getter();
    dispatch thunk of Sticker.name.getter(v16);
    v18 = v17;
    v19 = objc_allocWithZone((Class)MSSticker);
    v42[1] = a3;
    v20 = a4;
    v21 = v19;
    URL._bridgeToObjectiveC()(v22);
    v24 = v23;
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
    v27 = v21;
    a4 = v20;
    v28 = objc_msgSend(v27, "initWithFileURL:identifier:localizedDescription:", v24, isa, v26);

    v29 = (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v43, v7);
    v31 = dispatch thunk of Sticker.name.getter(v30);
    v33 = v32;
    v34 = objc_allocWithZone((Class)MSSticker);
    v29 = sub_100028CC8((uint64_t)v10, v31, v33);
    v28 = v29;
  }
  v35 = dispatch thunk of Sticker.effect.getter(v29);
  v36 = Sticker.Effect.rawValue.getter(v35);
  v37 = Sticker.Effect.rawValue.getter(-1);
  if (v36 == v37)
    goto LABEL_7;
  v38 = dispatch thunk of Sticker.effect.getter(v37);
  v39 = Sticker.Effect.rawValue.getter(v38);
  if ((v39 & 0x8000000000000000) == 0)
  {
    objc_msgSend(v28, "setStickerEffectType:", v39);
LABEL_7:
    v40 = v28;
    a4(v28, 0);

    return;
  }
  v41 = 2;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v41, 3451, 0);
  __break(1u);
}

uint64_t Sticker.saveToStore(completionHandler:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD aBlock[5];
  _QWORD *v32;

  v26 = a1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS.QoSClass(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchQoS.QoSClass.default(_:), v10);
  v14 = (void *)static OS_dispatch_queue.global(qos:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v15 = (_QWORD *)swift_allocObject(&unk_10008DEB8, 40, 7);
  v16 = v26;
  v15[2] = v2;
  v15[3] = v16;
  v15[4] = a2;
  aBlock[4] = sub_10006728C;
  v32 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001340C;
  aBlock[3] = &unk_10008DED0;
  v17 = _Block_copy(aBlock);
  v18 = v2;
  swift_retain(a2);
  static DispatchQoS.unspecified.getter(v19);
  v30 = _swiftEmptyArrayStorage;
  v20 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_10000A66C(&qword_10009B198);
  v22 = sub_10000F6DC((unint64_t *)&qword_10009B1A0, &qword_10009B198, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v30, v21, v22, v4, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  return swift_release(v32, v23);
}

uint64_t sub_100064378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  id v39;
  void *v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD aBlock[5];
  _QWORD *v66;

  v55 = a3;
  v58 = a2;
  v56 = type metadata accessor for DispatchWorkItemFlags(0);
  v63 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v62 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  __chkstk_darwin(v5);
  v59 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Sticker.StickerType(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10000A66C(&qword_10009CAB0);
  __chkstk_darwin(v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for StickerStore.PersistenceType(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v21 + 104))(v20, enum case for StickerStore.PersistenceType.remote(_:));
  v22 = type metadata accessor for StickerStore(0);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v64 = StickerStore.init(persistence:)(v20);
  v57 = (id)dispatch thunk of StickerStore.addSticker(_:)(a1);
  v23 = v57;
  Sticker.companionRecentUUID()((uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v17, 1, v7) == 1)
  {
    sub_10002E2B4((uint64_t)v17, &qword_10009CAB0);
    v24 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for Sticker.StickerType.recent(_:), v11);
    v25 = dispatch thunk of Sticker.representations.getter(v24);
    v54 = dispatch thunk of Sticker.name.getter(v25);
    v53 = v26;
    v52 = dispatch thunk of Sticker.metadata.getter();
    v28 = v27;
    Sticker.identifier.getter(v52);
    v29 = static TempStickerURIHelpers_Staging107211449.uri(identifier:)(v10);
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v32 = objc_allocWithZone((Class)type metadata accessor for Sticker(0));
    v33 = (void *)Sticker.init(type:representations:name:metadata:externalURI:)(v14, v25, v54, v53, v52, v28, v29, v31);
    v34 = (void *)dispatch thunk of StickerStore.addSticker(_:)(v33);

  }
  else
  {

    sub_10002E2B4((uint64_t)v17, &qword_10009CAB0);
  }
  v35 = v56;
  v36 = v55;
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v37 = (void *)static OS_dispatch_queue.main.getter();
  v38 = (_QWORD *)swift_allocObject(&unk_10008DF58, 48, 7);
  v39 = v57;
  v38[2] = v58;
  v38[3] = v36;
  v38[4] = v39;
  v38[5] = 0;
  aBlock[4] = sub_100067354;
  v66 = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008DF70;
  v40 = _Block_copy(aBlock);
  v41 = v66;
  swift_retain(v36);
  v42 = v39;
  swift_errorRetain(0);
  v44 = swift_release(v41, v43);
  v45 = v59;
  static DispatchQoS.unspecified.getter(v44);
  aBlock[0] = _swiftEmptyArrayStorage;
  v46 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v47 = sub_10000A66C(&qword_10009B198);
  v48 = sub_10000F6DC((unint64_t *)&qword_10009B1A0, &qword_10009B198, (uint64_t)&protocol conformance descriptor for [A]);
  v49 = v62;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v47, v48, v35, v46);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v45, v49, v40);
  _Block_release(v40);

  swift_release(v64, v50);
  swift_errorRelease(0);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v49, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v45, v61);
}

uint64_t Sticker.companionRecentUUID()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Request;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  void (*v41)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  uint64_t v91;
  id v92;
  NSObject *v93;
  os_log_type_t v94;
  _BOOL4 v95;
  char *v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142[3];

  v2 = v1;
  v131 = a1;
  v3 = type metadata accessor for Sticker.StickerType(0);
  v136 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v139 = (char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v138 = (char *)&v113 - v6;
  v121 = type metadata accessor for StickerSequenceIterator(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v140 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000A66C(&qword_10009D708);
  __chkstk_darwin(v8);
  v128 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StickerSequence(0);
  v134 = *(_QWORD *)(v10 - 8);
  v135 = v10;
  __chkstk_darwin(v10);
  v122 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for Sticker.FetchRequest.RepresentationSpecifier(0);
  v130 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v127 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000A66C((uint64_t *)&unk_10009CA60);
  __chkstk_darwin(v13);
  v129 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  Request = type metadata accessor for Sticker.FetchRequest(0);
  v124 = *(_QWORD *)(Request - 8);
  v125 = Request;
  __chkstk_darwin(Request);
  v17 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for StickerStore.PersistenceType(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10000A66C(&qword_10009CAB0);
  __chkstk_darwin(v22);
  v119 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for UUID(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v26);
  v117 = (char *)&v113 - v30;
  __chkstk_darwin(v29);
  v118 = (char *)&v113 - v31;
  v32 = Selector.init(_:)(0xD000000000000014, 0x8000000100075DD0);
  v137 = v2;
  v33 = objc_msgSend(v2, "respondsToSelector:", v32);
  v34 = v24;
  v132 = v25;
  v133 = v24;
  if ((_DWORD)v33)
  {
    v114 = v19;
    v115 = v18;
    v116 = v21;
    v123 = v28;
    v35 = Selector.init(_:)(0xD000000000000014, 0x8000000100075DD0);
    v36 = objc_msgSend(objc_retainAutorelease(v137), "performSelector:", v35);
    if (v36)
    {
      v142[0] = swift_unknownObjectRetain(v36);
      v37 = (uint64_t)v119;
      v38 = v133;
      v39 = swift_dynamicCast(v119, v142, (char *)&type metadata for Swift.AnyObject + 8, v133, 6);
      v40 = v132;
      v41 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v132 + 56);
      if (v39)
      {
        v41(v37, 0, 1, v38);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v37, 1, v38) != 1)
        {
          v42 = v132;
          v43 = v133;
          v44 = *(char **)(v132 + 32);
          v45 = v118;
          ((void (*)(char *, uint64_t, uint64_t))v44)(v118, v37, v133);
          if (qword_10009FBC0 != -1)
            swift_once(&qword_10009FBC0, sub_100063168);
          v46 = type metadata accessor for Logger(0);
          sub_10000D130(v46, (uint64_t)qword_10009FBC8);
          v47 = v117;
          v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v42 + 16))(v117, v45, v43);
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v49, v50))
          {
            v51 = (uint8_t *)swift_slowAlloc(12, -1);
            v52 = swift_slowAlloc(32, -1);
            v142[0] = v52;
            v140 = v44;
            *(_DWORD *)v51 = 136315138;
            v139 = (char *)(v51 + 4);
            v53 = UUID.uuidString.getter();
            v55 = v54;
            v141 = sub_10000C99C(v53, v54, v142);
            v44 = v140;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, v142, v139, v51 + 12);
            swift_bridgeObjectRelease(v55);
            (*(void (**)(char *, uint64_t))(v42 + 8))(v47, v43);
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Found companion identifier %s", v51, 0xCu);
            swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
            v56 = v131;
            swift_slowDealloc(v52, -1, -1);
            v57 = v51;
            v45 = v118;
            swift_slowDealloc(v57, -1, -1);

          }
          else
          {
            (*(void (**)(char *, uint64_t))(v42 + 8))(v47, v43);

            v56 = v131;
          }
          ((void (*)(uint64_t, char *, uint64_t))v44)(v56, v45, v43);
          return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v41)(v56, 0, 1, v43);
        }
      }
      else
      {
        v41(v37, 1, 1, v38);
      }
      sub_10002E2B4(v37, &qword_10009CAB0);
    }
    if (qword_10009FBC0 != -1)
      swift_once(&qword_10009FBC0, sub_100063168);
    v58 = type metadata accessor for Logger(0);
    v59 = sub_10000D130(v58, (uint64_t)qword_10009FBC8);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v62 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Unable to get _companionRecentUUID despite responding to selector", v62, 2u);
      swift_slowDealloc(v62, -1, -1);
    }

    v25 = v132;
    v34 = v133;
    v28 = v123;
    v21 = v116;
    v18 = v115;
    v19 = v114;
  }
  Sticker.identifier.getter(v33);
  v137 = (id)static TempStickerURIHelpers_Staging107211449.uri(identifier:)(v28);
  v123 = v63;
  v119 = *(char **)(v25 + 8);
  ((void (*)(char *, uint64_t))v119)(v28, v34);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for StickerStore.PersistenceType.remote(_:), v18);
  v64 = type metadata accessor for StickerStore(0);
  swift_allocObject(v64, *(unsigned int *)(v64 + 48), *(unsigned __int16 *)(v64 + 52));
  v65 = StickerStore.init(persistence:)(v21);
  v66 = v129;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v136 + 56))(v129, 1, 1, v3);
  v67 = v127;
  (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v127, enum case for Sticker.FetchRequest.RepresentationSpecifier.preferred(_:), v126);
  Sticker.FetchRequest.init(type:predicate:representations:sortDescriptors:offset:limit:batchSize:)(v66, 0, v67, 0, 0, 0, 1, 8, 0);
  v68 = sub_10000A66C(&qword_10009D710);
  v69 = swift_allocObject(v68, 112, 7);
  *(_OWORD *)(v69 + 16) = xmmword_100078E10;
  sub_10000D5F4(0, &qword_10009D718, NSPredicate_ptr);
  *(_QWORD *)(v69 + 56) = &type metadata for String;
  v70 = sub_1000672B0();
  *(_QWORD *)(v69 + 32) = 0x6C616E7265747865;
  *(_QWORD *)(v69 + 40) = 0xEB00000000495255;
  *(_QWORD *)(v69 + 96) = &type metadata for String;
  *(_QWORD *)(v69 + 104) = v70;
  v71 = v137;
  *(_QWORD *)(v69 + 64) = v70;
  *(_QWORD *)(v69 + 72) = v71;
  *(_QWORD *)(v69 + 80) = v123;
  v72 = NSPredicate.init(format:_:)(0x4025203D3D204B25, 0xE800000000000000, v69);
  Sticker.FetchRequest.predicate.setter(v72);
  v73 = v128;
  dispatch thunk of StickerStore.stickers(_:)(v17);
  v130 = v65;
  v123 = v28;
  v74 = v135;
  v75 = v136;
  v137 = v17;
  v76 = v134;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v73, 0, 1, v135);
  v77 = (*(uint64_t (**)(char *, char *, uint64_t))(v76 + 32))(v122, v73, v74);
  v78 = StickerSequence.makeIterator()(v77);
  v79 = StickerSequenceIterator.next()(v78);
  if (v79)
  {
    v81 = (void *)v79;
    v82 = enum case for Sticker.StickerType.recent(_:);
    v84 = v138;
    v83 = v139;
    while (1)
    {
      Sticker.type.getter();
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 104))(v83, v82, v3);
      v85 = sub_10002CA50((unint64_t *)&qword_10009C9B8, (uint64_t (*)(uint64_t))&type metadata accessor for Sticker.StickerType, (uint64_t)&protocol conformance descriptor for Sticker.StickerType);
      dispatch thunk of RawRepresentable.rawValue.getter(v142, v3, v85);
      dispatch thunk of RawRepresentable.rawValue.getter(&v141, v3, v85);
      v87 = v141;
      v86 = v142[0];
      v88 = *(void (**)(char *, uint64_t))(v75 + 8);
      v88(v83, v3);
      v88(v84, v3);
      if (v86 == v87)
        break;

      v81 = (void *)StickerSequenceIterator.next()(v89);
      if (!v81)
        goto LABEL_20;
    }
    if (qword_10009FBC0 != -1)
      swift_once(&qword_10009FBC0, sub_100063168);
    v91 = type metadata accessor for Logger(0);
    sub_10000D130(v91, (uint64_t)qword_10009FBC8);
    v92 = v81;
    v93 = Logger.logObject.getter(v92);
    v94 = static os_log_type_t.info.getter();
    v95 = os_log_type_enabled(v93, v94);
    v96 = v123;
    if (v95)
    {
      v97 = (uint8_t *)swift_slowAlloc(12, -1);
      v98 = swift_slowAlloc(32, -1);
      v142[0] = v98;
      *(_DWORD *)v97 = 136315138;
      Sticker.identifier.getter(v98);
      v99 = sub_10002CA50((unint64_t *)&unk_10009CAF0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v100 = v133;
      v101 = dispatch thunk of CustomStringConvertible.description.getter(v133, v99);
      v102 = v96;
      v104 = v103;
      ((void (*)(char *, uint64_t))v119)(v102, v100);
      v141 = sub_10000C99C(v101, v104, v142);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, v142, v97 + 4, v97 + 12);

      swift_bridgeObjectRelease(v104);
      _os_log_impl((void *)&_mh_execute_header, v93, v94, "Found companion identifier %s", v97, 0xCu);
      swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1, -1);
      swift_slowDealloc(v97, -1, -1);

    }
    else
    {

      v100 = v133;
    }
    v106 = v131;
    v107 = v132;
    v108 = v121;
    v109 = v120;
    v111 = v124;
    v110 = v125;
    Sticker.identifier.getter(v105);

    swift_release(v130, v112);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v140, v108);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v122, v135);
    (*(void (**)(id, uint64_t))(v111 + 8))(v137, v110);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v107 + 56))(v106, 0, 1, v100);
  }
  else
  {
LABEL_20:
    swift_release(v130, v80);
    (*(void (**)(char *, uint64_t))(v120 + 8))(v140, v121);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v122, v135);
    (*(void (**)(id, uint64_t))(v124 + 8))(v137, v125);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v132 + 56))(v131, 1, 1, v133);
  }
}

uint64_t static Sticker.isUserContentSupported()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for Sticker.StickerType(0);
  v0[7] = v1;
  v2 = *(_QWORD *)(v1 - 8);
  v0[8] = v2;
  v0[9] = swift_task_alloc((*(_QWORD *)(v2 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for StickerStore.PersistenceType(0);
  v0[10] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v0[11] = v4;
  v0[12] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006570C, 0, 0);
}

uint64_t sub_10006570C()
{
  uint64_t v0;
  _BOOL8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((objc_msgSend((id)objc_opt_self(STKDeviceInfo), "hasANE") & 1) != 0)
  {
    v1 = 1;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 104))(v3, enum case for StickerStore.PersistenceType.remote(_:), *(_QWORD *)(v0 + 80));
    v6 = type metadata accessor for StickerStore(0);
    swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    v7 = StickerStore.init(persistence:)(v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, enum case for Sticker.StickerType.userContent(_:), v2);
    v8 = dispatch thunk of StickerStore.count(type:)(v4);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
    swift_release(v7, v9);
    v1 = v8 > 0;
  }
  v10 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v1);
}

uint64_t static Sticker.removeStickers(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS.QoSClass(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchQoS.QoSClass.default(_:), v8);
  v12 = (void *)static OS_dispatch_queue.global(qos:)(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13 = swift_allocObject(&unk_10008DF08, 24, 7);
  *(_QWORD *)(v13 + 16) = a1;
  aBlock[4] = sub_100067318;
  v26 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001340C;
  aBlock[3] = &unk_10008DF20;
  v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v15);
  v24 = _swiftEmptyArrayStorage;
  v16 = sub_10002CA50((unint64_t *)&qword_10009B190, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_10000A66C(&qword_10009B198);
  v18 = sub_10000F6DC((unint64_t *)&qword_10009B1A0, &qword_10009B198, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
  return swift_release(v26, v19);
}

uint64_t sub_100065C68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for StickerStore.PersistenceType(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v5 + 104))(v4, enum case for StickerStore.PersistenceType.remote(_:));
  v6 = type metadata accessor for StickerStore(0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = StickerStore.init(persistence:)(v4);
  dispatch thunk of StickerStore.removeStickers(identifiers:)(a1);
  return swift_release(v7, v8);
}

uint64_t Sticker.Representation.init(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];

  v3 = sub_10000A66C(&qword_10009B888);
  __chkstk_darwin(v3);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UTType(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v33 - v11;
  v13 = objc_msgSend(a1, "type");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  UTType.init(_:)(v14, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {

    sub_10002E2B4((uint64_t)v5, &qword_10009B888);
    return 0;
  }
  else
  {
    v33[1] = v1;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    v18 = objc_msgSend(a1, "data");
    v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    v22 = v10;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    objc_msgSend(a1, "size");
    v24 = v23;
    v26 = v25;
    v27 = objc_msgSend(a1, "role");
    if (v27)
    {
      v28 = v27;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0xE000000000000000;
    }
    v17 = dispatch thunk of Sticker.Representation.__allocating_init(data:uti:size:role:isPreferred:)(v19, v21, v22, v29, v31, 0, v24, v26);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  return v17;
}

id MSSticker.init(fileURL:externalURI:localizedDescription:extensionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  NSURL *v14;
  void *v15;
  void *v16;
  NSString v17;
  id v18;
  NSURL *v19;
  void *v20;
  void *v21;
  NSString v22;
  id v23;
  id v24;
  id v25;
  id v26;
  NSString v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v35;

  v8 = v7;
  v13 = sub_10000D5F4(0, &qword_10009B990, MSSticker_ptr);
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(v13), "instancesRespondToSelector:", "initWithContentsOfURL:externalURI:localizedDescription:error:"))
  {
    URL._bridgeToObjectiveC()(v14);
    v16 = v15;
    if (a3)
    {
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a3);
    }
    else
    {
      v17 = 0;
    }
    v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5);
    v23 = objc_msgSend(v26, "initWithContentsOfURL:externalURI:localizedDescription:error:", v16, v17, v27, 0);

  }
  else
  {
    swift_bridgeObjectRelease(a3);
    v18 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    URL._bridgeToObjectiveC()(v19);
    v21 = v20;
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5);
    v35 = 0;
    v23 = objc_msgSend(v18, "initWithContentsOfFileURL:localizedDescription:error:", v21, v22, &v35);

    v24 = v35;
    if (!v23)
    {
      v31 = v35;
      swift_bridgeObjectRelease(a7);
      v32 = _convertNSErrorToError(_:)(v24);

      swift_willThrow();
      v33 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a1, v33);
      swift_errorRelease(v32);
      return v23;
    }
    v25 = v35;
  }
  if (objc_msgSend(v23, "respondsToSelector:", "setStickerPackGUID:"))
  {
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a7);
    objc_msgSend(v23, "setStickerPackGUID:", v28);

    v29 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(a1, v29);
  }
  else
  {
    v30 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(a1, v30);
    swift_bridgeObjectRelease(a7);
  }
  return v23;
}

id sub_100066440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12)
{
  NSUUID v16;
  NSArray v17;
  NSString v18;
  uint64_t v19;
  NSString v20;
  unint64_t v21;
  NSString v22;
  Class isa;
  uint64_t v24;
  NSDictionary v25;
  id v26;
  uint64_t v27;
  id v30;

  v16.super.isa = UUID._bridgeToObjectiveC()().super.isa;
  sub_10000D5F4(0, &qword_10009B880, _UIStickerRepresentation_ptr);
  v17.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a2);
  if (a4)
  {
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
    v19 = a9;
    if (a7)
      goto LABEL_3;
LABEL_6:
    v20 = 0;
    v21 = a11;
    if (v19)
      goto LABEL_4;
    goto LABEL_7;
  }
  v18 = 0;
  v19 = a9;
  if (!a7)
    goto LABEL_6;
LABEL_3:
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a7);
  v21 = a11;
  if (v19)
  {
LABEL_4:
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    goto LABEL_8;
  }
LABEL_7:
  v22 = 0;
LABEL_8:
  if (v21 >> 60 != 15)
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100037F6C(a10, v21);
    v24 = a1;
    if (a12)
      goto LABEL_10;
LABEL_12:
    v25.super.isa = 0;
    goto LABEL_13;
  }
  isa = 0;
  v24 = a1;
  if (!a12)
    goto LABEL_12;
LABEL_10:
  v25.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a12);
LABEL_13:
  v26 = objc_msgSend(v30, "initWithStickerIdentifier:representations:stickerName:effectType:externalURI:localizedDescription:metadata:attributionInfo:", v16.super.isa, v17.super.isa, v18, a5, v20, v22, isa, v25.super.isa);

  v27 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v24, v27);
  return v26;
}

uint64_t sub_100066648(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100059D34(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_1000667B4(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

_QWORD *sub_1000666C0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = sub_10000A66C((uint64_t *)&unk_10009B0C0);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = j__malloc_size(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    v7 = sub_1000673C4((unint64_t)(v4 + 4), v2, v1);
    v1 = v8;
    swift_bridgeObjectRelease(v7);
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v9 = v1;
    else
      v9 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

void sub_1000667B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  Swift::Int v15;
  char *v16;
  void *v17;
  id v18;
  id v19;
  int v20;
  id *v21;
  void *v22;
  id v23;
  id v24;
  int v25;
  uint64_t *v26;
  Swift::Int v27;
  Swift::Int v28;
  uint64_t *v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  void *v33;
  Swift::Int v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  char v39;
  void *v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  Swift::Int v106;
  Swift::Int v107;
  Swift::Int v108;
  Swift::Int v109;
  Swift::Int v110;
  char *v111;
  uint64_t v112;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      sub_100066EA4(0, v3, 1, v2);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v6 = v4;
  v103 = v2;
  if (v3 < 2)
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
    v112 = (uint64_t)&_swiftEmptyArrayStorage;
    v111 = (char *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v14 = *((_QWORD *)&_swiftEmptyArrayStorage + 2);
LABEL_98:
      if (v14 >= 2)
      {
        v95 = *v103;
        do
        {
          v96 = v14 - 2;
          if (v14 < 2)
            goto LABEL_127;
          if (!v95)
            goto LABEL_139;
          v97 = *(_QWORD *)&v11[16 * v96 + 32];
          v98 = *(_QWORD *)&v11[16 * v14 + 24];
          sub_100066F6C((id *)(v95 + 8 * v97), (id *)(v95 + 8 * *(_QWORD *)&v11[16 * v14 + 16]), v95 + 8 * v98, v111);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
            v11 = sub_100059274((uint64_t)v11);
          if (v96 >= *((_QWORD *)v11 + 2))
            goto LABEL_129;
          v99 = &v11[16 * v96 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v11 + 2);
          if (v14 > v100)
            goto LABEL_130;
          memmove(&v11[16 * v14 + 16], &v11[16 * v14 + 32], 16 * (v100 - v14));
          *((_QWORD *)v11 + 2) = v100 - 1;
          v14 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_109:
      v101 = swift_bridgeObjectRelease(v11);
      *(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v101);
      swift_bridgeObjectRelease(v112);
      return;
    }
  }
  else
  {
    v7 = v2;
    v8 = v5 >> 1;
    v9 = type metadata accessor for Sticker.Representation(0);
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v2 = v7;
    v111 = (char *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v112 = v10;
  }
  v12 = 0;
  v13 = *v2;
  v105 = *v2 + 16;
  v106 = v6;
  v104 = *v2 - 8;
  v11 = (char *)&_swiftEmptyArrayStorage;
  v108 = v3;
  while (1)
  {
    v15 = v12++;
    v109 = v15;
    if (v12 < v3)
    {
      v16 = v11;
      v17 = *(void **)(v13 + 8 * v15);
      v18 = *(id *)(v13 + 8 * v12);
      v19 = v17;
      v20 = dispatch thunk of Sticker.Representation.isPreferred.getter();

      v12 = v15 + 2;
      if (v15 + 2 < v3)
      {
        v21 = (id *)(v105 + 8 * v15);
        while (1)
        {
          v22 = *(v21 - 1);
          v23 = *v21;
          v24 = v22;
          v25 = dispatch thunk of Sticker.Representation.isPreferred.getter();

          if (((v20 ^ v25) & 1) != 0)
            break;
          ++v12;
          ++v21;
          v3 = v108;
          if (v108 == v12)
          {
            v12 = v108;
            goto LABEL_22;
          }
        }
        v3 = v108;
LABEL_22:
        v15 = v109;
      }
      v11 = v16;
      if ((v20 & 1) != 0)
      {
        if (v12 < v15)
          goto LABEL_133;
        if (v15 < v12)
        {
          v26 = (uint64_t *)(v104 + 8 * v12);
          v27 = v12;
          v28 = v15;
          v29 = (uint64_t *)(v13 + 8 * v15);
          do
          {
            if (v28 != --v27)
            {
              if (!v13)
                goto LABEL_138;
              v30 = *v29;
              *v29 = *v26;
              *v26 = v30;
            }
            ++v28;
            --v26;
            ++v29;
          }
          while (v28 < v27);
        }
      }
    }
    if (v12 < v3)
    {
      if (__OFSUB__(v12, v15))
        goto LABEL_131;
      if (v12 - v15 < v106)
        break;
    }
LABEL_48:
    if (v12 < v15)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1000590D4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v42 = *((_QWORD *)v11 + 2);
    v41 = *((_QWORD *)v11 + 3);
    v14 = v42 + 1;
    if (v42 >= v41 >> 1)
      v11 = sub_1000590D4((char *)(v41 > 1), v42 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v14;
    v43 = v11 + 32;
    v44 = &v11[16 * v42 + 32];
    *(_QWORD *)v44 = v15;
    *((_QWORD *)v44 + 1) = v12;
    if (v42)
    {
      v110 = v12;
      while (1)
      {
        v45 = v14 - 1;
        if (v14 >= 4)
        {
          v50 = &v43[16 * v14];
          v51 = *((_QWORD *)v50 - 8);
          v52 = *((_QWORD *)v50 - 7);
          v56 = __OFSUB__(v52, v51);
          v53 = v52 - v51;
          if (v56)
            goto LABEL_115;
          v55 = *((_QWORD *)v50 - 6);
          v54 = *((_QWORD *)v50 - 5);
          v56 = __OFSUB__(v54, v55);
          v48 = v54 - v55;
          v49 = v56;
          if (v56)
            goto LABEL_116;
          v57 = v14 - 2;
          v58 = &v43[16 * v14 - 32];
          v60 = *(_QWORD *)v58;
          v59 = *((_QWORD *)v58 + 1);
          v56 = __OFSUB__(v59, v60);
          v61 = v59 - v60;
          if (v56)
            goto LABEL_118;
          v56 = __OFADD__(v48, v61);
          v62 = v48 + v61;
          if (v56)
            goto LABEL_121;
          if (v62 >= v53)
          {
            v80 = &v43[16 * v45];
            v82 = *(_QWORD *)v80;
            v81 = *((_QWORD *)v80 + 1);
            v56 = __OFSUB__(v81, v82);
            v83 = v81 - v82;
            if (v56)
              goto LABEL_125;
            v73 = v48 < v83;
            goto LABEL_86;
          }
        }
        else
        {
          if (v14 != 3)
          {
            v74 = *((_QWORD *)v11 + 4);
            v75 = *((_QWORD *)v11 + 5);
            v56 = __OFSUB__(v75, v74);
            v67 = v75 - v74;
            v68 = v56;
            goto LABEL_80;
          }
          v47 = *((_QWORD *)v11 + 4);
          v46 = *((_QWORD *)v11 + 5);
          v56 = __OFSUB__(v46, v47);
          v48 = v46 - v47;
          v49 = v56;
        }
        if ((v49 & 1) != 0)
          goto LABEL_117;
        v57 = v14 - 2;
        v63 = &v43[16 * v14 - 32];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v66 = __OFSUB__(v64, v65);
        v67 = v64 - v65;
        v68 = v66;
        if (v66)
          goto LABEL_120;
        v69 = &v43[16 * v45];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v56 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v56)
          goto LABEL_123;
        if (__OFADD__(v67, v72))
          goto LABEL_124;
        if (v67 + v72 >= v48)
        {
          v73 = v48 < v72;
LABEL_86:
          if (v73)
            v45 = v57;
          goto LABEL_88;
        }
LABEL_80:
        if ((v68 & 1) != 0)
          goto LABEL_119;
        v76 = &v43[16 * v45];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v56 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v56)
          goto LABEL_122;
        if (v79 < v67)
          goto LABEL_14;
LABEL_88:
        v84 = v45 - 1;
        if (v45 - 1 >= v14)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v85 = v13;
        if (!v13)
          goto LABEL_137;
        v86 = v11;
        v87 = &v43[16 * v84];
        v88 = *(_QWORD *)v87;
        v89 = v43;
        v90 = v45;
        v91 = &v43[16 * v45];
        v92 = *((_QWORD *)v91 + 1);
        v93 = v85;
        sub_100066F6C((id *)(v85 + 8 * *(_QWORD *)v87), (id *)(v85 + 8 * *(_QWORD *)v91), v85 + 8 * v92, v111);
        if (v1)
        {
          v11 = v86;
          goto LABEL_109;
        }
        if (v92 < v88)
          goto LABEL_112;
        if (v90 > *((_QWORD *)v86 + 2))
          goto LABEL_113;
        *(_QWORD *)v87 = v88;
        *(_QWORD *)&v89[16 * v84 + 8] = v92;
        v94 = *((_QWORD *)v86 + 2);
        if (v90 >= v94)
          goto LABEL_114;
        v11 = v86;
        v14 = v94 - 1;
        memmove(v91, v91 + 16, 16 * (v94 - 1 - v90));
        v43 = v89;
        *((_QWORD *)v86 + 2) = v94 - 1;
        v13 = v93;
        v12 = v110;
        if (v94 <= 2)
          goto LABEL_14;
      }
    }
    v14 = 1;
LABEL_14:
    v3 = v108;
    if (v12 >= v108)
      goto LABEL_98;
  }
  if (__OFADD__(v15, v106))
    goto LABEL_134;
  if (v15 + v106 >= v3)
    v31 = v3;
  else
    v31 = v15 + v106;
  if (v31 >= v15)
  {
    if (v12 != v31)
    {
      v102 = v11;
      v32 = v104 + 8 * v12;
      v107 = v31;
      do
      {
        v33 = *(void **)(v13 + 8 * v12);
        v34 = v15;
        v35 = v32;
        do
        {
          v36 = *(void **)v35;
          v37 = v33;
          v38 = v36;
          v39 = dispatch thunk of Sticker.Representation.isPreferred.getter();

          if ((v39 & 1) == 0)
            break;
          if (!v13)
            goto LABEL_136;
          v40 = *(void **)v35;
          v33 = *(void **)(v35 + 8);
          *(_QWORD *)v35 = v33;
          *(_QWORD *)(v35 + 8) = v40;
          v35 -= 8;
          ++v34;
        }
        while (v12 != v34);
        ++v12;
        v32 += 8;
        v15 = v109;
      }
      while (v12 != v107);
      v12 = v107;
      v11 = v102;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100066EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void *v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    v8 = *(void **)(v6 + 8 * v4);
    v9 = a1;
    v10 = v7;
    while (1)
    {
      v11 = *(void **)v10;
      v12 = v8;
      v13 = v11;
      v14 = dispatch thunk of Sticker.Representation.isPreferred.getter();

      if ((v14 & 1) == 0)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v15 = *(void **)v10;
      v8 = *(void **)(v10 + 8);
      *(_QWORD *)v10 = v8;
      *(_QWORD *)(v10 + 8) = v15;
      v10 -= 8;
      if (v4 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_100066F6C(id *a1, id *__src, unint64_t a3, char *a4)
{
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  id *v19;
  char *v20;
  id *v21;
  id *v22;
  id *v23;
  void *v24;
  id v25;
  id v26;
  char v27;
  uint64_t result;
  char *v31;
  void **v32;
  id *v33;

  v33 = a1;
  v5 = __src;
  v6 = (char *)__src - (char *)a1;
  v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0)
    v7 = (char *)__src - (char *)a1;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)__src;
  v10 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v10 = a3 - (_QWORD)__src;
  v11 = v10 >> 3;
  v32 = (void **)a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != (char *)__src || &__src[v11] <= (id *)a4)
        memmove(a4, __src, 8 * v11);
      v20 = &a4[8 * v11];
      v31 = v20;
      v33 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        v21 = (id *)(a3 - 8);
        v22 = v5;
        do
        {
          v23 = v21 + 1;
          v24 = *--v22;
          v25 = *((id *)v20 - 1);
          v26 = v24;
          v27 = dispatch thunk of Sticker.Representation.isPreferred.getter();

          if ((v27 & 1) != 0)
          {
            if (v23 != v5 || v21 >= v5)
              *v21 = *v22;
            v33 = v22;
          }
          else
          {
            v31 = v20 - 8;
            if (v23 < (id *)v20 || v21 >= (id *)v20 || v23 != (id *)v20)
              *v21 = (id)*((_QWORD *)v20 - 1);
            v22 = v5;
            v20 -= 8;
          }
          if (v22 <= a1)
            break;
          --v21;
          v5 = v22;
        }
        while (v20 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != (char *)a1 || &a1[v8] <= (id *)a4)
      memmove(a4, a1, 8 * v8);
    v12 = (void **)&a4[8 * v8];
    v31 = (char *)v12;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      v13 = (void **)a4;
      v14 = a1;
      do
      {
        v15 = *v13;
        v16 = *v5;
        v17 = v15;
        v18 = dispatch thunk of Sticker.Representation.isPreferred.getter();

        if ((v18 & 1) != 0)
        {
          v19 = v5 + 1;
          if (v14 < v5 || v14 >= v19 || v14 != v5)
            *v14 = *v5;
        }
        else
        {
          if (v14 != v13)
            *v14 = *v13;
          v32 = ++v13;
          v19 = v5;
        }
        ++v14;
        if (v13 >= v12)
          break;
        v5 = v19;
      }
      while ((unint64_t)v19 < a3);
      v33 = v14;
    }
LABEL_43:
    sub_1000591CC((void **)&v33, (const void **)&v32, &v31);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100067224(uint64_t a1)
{
  uint64_t v1;

  sub_100063E18(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD, _QWORD))(v1 + 32));
}

uint64_t sub_100067234()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 40), v1);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100067260()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10006728C()
{
  uint64_t *v0;

  return sub_100064378(v0[2], v0[3], v0[4]);
}

uint64_t sub_100067298(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000672A8(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

unint64_t sub_1000672B0()
{
  unint64_t result;

  result = qword_10009D720;
  if (!qword_10009D720)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10009D720);
  }
  return result;
}

uint64_t sub_1000672F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100067318()
{
  uint64_t v0;

  return sub_100065C68(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100067320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 24), a2);

  swift_errorRelease(*(_QWORD *)(v2 + 40));
  return swift_deallocObject(v2, 48, 7);
}

uint64_t sub_100067354()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10006737C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10000A66C(&qword_10009BB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000673C4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10000F6DC(&qword_10009D738, &qword_10009D730, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10000A66C(&qword_10009D730);
          v13 = sub_100014E28(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for Sticker.Representation(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000675E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

uint64_t sub_100067600@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 88);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_100067670(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 88);
  swift_beginAccess(v4, v7, 33, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
  return swift_endAccess(v7);
}

uint64_t (*sub_1000676E8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10006772C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_1000181E0(*v1, v1[1]);
  return v2;
}

uint64_t sub_100067784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100029324(v6, v7);
}

uint64_t (*sub_1000677E0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100067824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  sub_100067860(a1);
  return v3;
}

uint64_t sub_100067860(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v4, 1, 1, v3);
  v5 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
  *v5 = 0;
  v5[1] = 0;
  swift_beginAccess(v4, v8, 33, 0);
  v6 = type metadata accessor for Optional(0, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(v4, a1, v6);
  swift_endAccess(v8);
  return v1;
}

uint64_t sub_100067908(void (*a1)(uint64_t (*)(uint64_t a1), uint64_t, __n128))
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  sub_100067954(a1);
  return v3;
}

uint64_t sub_100067954(void (*a1)(uint64_t (*)(uint64_t a1), uint64_t, __n128))
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  __n128 v5;
  uint64_t v6;

  v2 = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 56))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 88), 1, 1);
  v4 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
  *v4 = 0;
  v4[1] = 0;
  v5 = swift_retain(v1);
  a1(sub_100067A84, v1, v5);
  swift_release(v1, v6);
  return v1;
}

uint64_t sub_1000679D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  type metadata accessor for Optional(0, v4);
  __chkstk_darwin();
  v6 = (char *)&v9 - v5;
  v7 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v9 - v5, a1, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v6, 0, 1, v4);
  return (*(uint64_t (**)(char *))(*(_QWORD *)a2 + 112))(v6);
}

uint64_t sub_100067A84(uint64_t a1)
{
  uint64_t v1;

  return sub_1000679D4(a1, v1);
}

uint64_t sub_100067A8C(void (*a1)(char *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t);
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t (*v22)(void (*)(_QWORD), uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *);

  v28 = a2;
  v29 = a1;
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 80);
  v27 = type metadata accessor for Optional(0, v4);
  v5 = *(_QWORD *)(v27 - 8);
  v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(v4 - 8);
  v13 = __chkstk_darwin(v9);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v26 - v17;
  v19 = *(void (**)(uint64_t))(v3 + 104);
  v19(v16);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v20(v11, 1, v4) == 1)
  {
    v21 = *(void (**)(char *, uint64_t))(v5 + 8);
    v21(v11, v27);
    v22 = *(uint64_t (**)(void (*)(_QWORD), uint64_t))(*v2 + 136);
    v23 = v28;
    swift_retain(v28);
    v24 = v22((void (*)(_QWORD))v29, v23);
    v19(v24);
    if (v20(v8, 1, v4) == 1)
    {
      return ((uint64_t (*)(char *, uint64_t))v21)(v8, v27);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v8, v4);
      v22(0, 0);
      v29(v15);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v4);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v11, v4);
    v29(v18);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v4);
  }
}

uint64_t sub_100067C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = type metadata accessor for Optional(0, *(_QWORD *)(*(_QWORD *)v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_100029324(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96)), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96) + 8));
  return v0;
}

uint64_t sub_100067CC0()
{
  uint64_t v0;

  sub_100067C68();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100067CE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10007A5A0;
    result = swift_initClassMetadata2(a1, 0, 2, v4, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Future(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100046C70(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Future);
}

void *sub_100067D6C()
{
  return &unk_10008E050;
}

uint64_t sub_100067D78()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000D1B8(v0, qword_10009FC68);
  sub_10000D130(v0, (uint64_t)qword_10009FC68);
  return Logger.init(subsystem:category:)(0xD000000000000015, 0x80000001000736A0, 0x6B63697473747661, 0xEB00000000737265);
}

id sub_100067DF4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)AVTStickerSheetControllerSwiftProvider), "init");
  qword_10009FC88 = (uint64_t)result;
  return result;
}

void *sub_100067E24()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_keyline);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_keyline, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_100067E70(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_keyline);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_100067EC0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_keyline, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100067F04()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_delegate);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_delegate, v3, 0, 0);
  return swift_unknownObjectRetain(*v1);
}

uint64_t sub_100067F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_delegate);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_unknownObjectRelease(v4);
}

uint64_t (*sub_100067F9C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_delegate, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_100067FE0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetIdentifier);
  swift_beginAccess(v0 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetIdentifier, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_100068034(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v5 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetIdentifier);
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetIdentifier, v10, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  v7 = swift_bridgeObjectRelease(v6);
  v8 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x100))(v7);
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x108))(v8);
}

uint64_t (*sub_1000680C0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetIdentifier, a1, 33, 0);
  return sub_100068108;
}

uint64_t sub_100068108(uint64_t a1, char a2)
{
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD **)(a1 + 24);
    v6 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x100))(result);
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x108))(v6);
  }
  return result;
}

_QWORD *sub_100068164(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(void);
  _QWORD *v10;
  objc_super v12;
  char v13[24];

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_stickerSheetView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_keyline] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetRecord] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_delegate] = 0;
  v6 = &v5[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetIdentifier];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  swift_beginAccess(v6, v13, 1, 0);
  v7 = *((_QWORD *)v6 + 1);
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  swift_bridgeObjectRelease(v7);
  v12.receiver = v5;
  v12.super_class = v2;
  v8 = objc_msgSendSuper2(&v12, "initWithNibName:bundle:", 0, 0);
  v9 = *(void (**)(void))((swift_isaMask & *v8) + 0x100);
  v10 = v8;
  v9();

  return v10;
}

_QWORD *sub_100068250(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;
  objc_super v11;
  char v12[24];

  *(_QWORD *)&v2[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_stickerSheetView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_keyline] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetRecord] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_delegate] = 0;
  v5 = &v2[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetIdentifier];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  swift_beginAccess(v5, v12, 1, 0);
  v6 = *((_QWORD *)v5 + 1);
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  swift_bridgeObjectRelease(v6);
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for AvatarStickersViewController();
  v7 = objc_msgSendSuper2(&v11, "initWithNibName:bundle:", 0, 0);
  v8 = *(void (**)(void))((swift_isaMask & *v7) + 0x100);
  v9 = v7;
  v8();

  return v9;
}

uint64_t type metadata accessor for AvatarStickersViewController()
{
  return objc_opt_self(_TtC22StickersUltraExtension28AvatarStickersViewController);
}

uint64_t sub_100068374()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, unint64_t, _QWORD, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[3];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v0) + 0xE0);
  v9 = ((uint64_t (*)(uint64_t))v7)(v4);
  v10 = v8;
  v56 = OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetRecord;
  v11 = *(void **)&v1[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetRecord];
  if (!v11)
  {
    if (v8)
      goto LABEL_11;
LABEL_27:
    if (qword_10009FC60 != -1)
      swift_once(&qword_10009FC60, sub_100067D78);
    v45 = sub_10000D130(v2, (uint64_t)qword_10009FC68);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v45, v2);
    v46 = v1;
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      v50 = swift_slowAlloc(32, -1);
      v56 = v3;
      v51 = v50;
      v58[0] = v50;
      *(_DWORD *)v49 = 136315138;
      v52 = v7();
      if (v53)
      {
        v54 = v53;
      }
      else
      {
        v52 = 7104878;
        v54 = 0xE300000000000000;
      }
      v57 = sub_10000C99C(v52, v54, v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v49 + 4, v49 + 12);

      swift_bridgeObjectRelease(v54);
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Puppet and ID match. Nothing to do: %s", v49, 0xCu);
      swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v49, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v6, v2);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
  v12 = v2;
  v13 = v3;
  v14 = objc_msgSend(v11, "identifier");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v3 = v13;
  v2 = v12;
  if (!v10)
  {
    if (v17)
      goto LABEL_13;
    goto LABEL_27;
  }
  if (!v17)
  {
LABEL_11:
    v17 = v10;
LABEL_13:
    v20 = swift_bridgeObjectRelease(v17);
    goto LABEL_14;
  }
  if (v9 == v15 && v10 == v17)
  {
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v17);
    goto LABEL_27;
  }
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, v15, v17, 0);
  swift_bridgeObjectRelease(v10);
  v20 = swift_bridgeObjectRelease(v17);
  if ((v19 & 1) != 0)
    goto LABEL_27;
LABEL_14:
  v21 = ((uint64_t (*)(uint64_t))v7)(v20);
  if (v22)
  {
    v23 = v21;
    v24 = v22;
    if (qword_10009FC60 != -1)
      swift_once(&qword_10009FC60, sub_100067D78);
    sub_10000D130(v2, (uint64_t)qword_10009FC68);
    v25 = swift_bridgeObjectRetain_n(v24, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v58[0] = v29;
      *(_DWORD *)v28 = 136315138;
      swift_bridgeObjectRetain(v24);
      v57 = sub_10000C99C(v23, v24, v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, v58, v28 + 4, v28 + 12);
      swift_bridgeObjectRelease_n(v24, 3, v30);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Will attempt to load puppet identified by %s", v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v24, 2, v37);
    }
    v38 = sub_1000153B0();
    swift_beginAccess(v38, v58, 0, 0);
    v39 = *v38;
    v40 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, __n128))(*(_QWORD *)v39 + 376);
    v41 = swift_retain(v39);
    v42 = v40(v23, v24, 0, v41);
    swift_release(v39, v43);
    swift_bridgeObjectRelease(v24);
    v44 = *(_QWORD *)&v1[v56];
    *(_QWORD *)&v1[v56] = v42;
    return swift_unknownObjectRelease(v44);
  }
  else
  {
    if (qword_10009FC60 != -1)
      swift_once(&qword_10009FC60, sub_100067D78);
    v31 = sub_10000D130(v2, (uint64_t)qword_10009FC68);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Removing puppet record because of nil value", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    v35 = *(_QWORD *)&v1[v56];
    *(_QWORD *)&v1[v56] = 0;
    return swift_unknownObjectRelease(v35);
  }
}

void sub_100068910()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *oslog;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetRecord];
  if (v1)
  {
    v2 = OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_stickerSheetView;
    v3 = *(void **)&v0[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_stickerSheetView];
    swift_unknownObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetRecord]);
    objc_msgSend(v3, "removeFromSuperview");
    if (qword_10009FC80 != -1)
      swift_once(&qword_10009FC80, sub_100067DF4);
    objc_msgSend((id)qword_10009FC88, "setDelegate:", v0);
    v4 = objc_msgSend((id)qword_10009FC88, "stickerSheetViewForAvatarRecord:", v1);
    v5 = *(void **)&v0[v2];
    *(_QWORD *)&v0[v2] = v4;

    v6 = *(void **)&v0[v2];
    if (!v6)
      goto LABEL_10;
    v7 = v6;
    v8 = objc_msgSend(v0, "view");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "bounds");
      v11 = v10;
      v13 = v12;
      v15 = v14;
      v17 = v16;

      objc_msgSend(v7, "setFrame:", v11, v13, v15, v17);
      v18 = *(void **)&v0[v2];
      if (!v18)
        goto LABEL_10;
      objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
      v19 = *(void **)&v0[v2];
      if (!v19)
        goto LABEL_10;
      v20 = v19;
      v21 = objc_msgSend(v0, "view");
      if (v21)
      {
        v22 = v21;
        objc_msgSend(v21, "addSubview:", v20);

LABEL_10:
        swift_unknownObjectRelease(v1);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    if (qword_10009FC60 != -1)
      swift_once(&qword_10009FC60, sub_100067D78);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_10000D130(v23, (uint64_t)qword_10009FC68);
    oslog = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v25, "Asked to load stickers without an avatar", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
}

id sub_100068B94()
{
  _QWORD *v0;
  _QWORD *v1;
  id result;
  void *v3;
  _QWORD *v4;

  v1 = v0;
  (*(void (**)(void))((swift_isaMask & *v0) + 0x108))();
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v3 = result;
    type metadata accessor for KeylineView();
    v4 = sub_100046D0C(v3);
    return (id)(*(uint64_t (**)(_QWORD *))((swift_isaMask & *v1) + 0xA0))(v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100068CC8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for AvatarStickersViewController();
  objc_msgSendSuper2(&v13, "viewDidLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_stickerSheetView];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "bounds");
      v6 = v5;
      v8 = v7;
      v10 = v9;
      v12 = v11;

      objc_msgSend(v2, "setFrame:", v6, v8, v10, v12);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100068DC4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[5];
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetRecord);
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetRecord) = 0;
  v11 = swift_unknownObjectRelease(v10);
  (*(void (**)(uint64_t))((swift_isaMask & *v0) + 0x100))(v11);
  sub_10000D5F4(0, (unint64_t *)&qword_10009B188, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = swift_allocObject(&unk_10008E070, 24, 7);
  *(_QWORD *)(v13 + 16) = v0;
  aBlock[4] = sub_100069428;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C1B4;
  aBlock[3] = &unk_10008E088;
  v14 = _Block_copy(aBlock);
  v15 = v24;
  v16 = v1;
  v18 = swift_release(v15, v17);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_10000D68C();
  v20 = sub_10000A66C(&qword_10009B198);
  v21 = sub_10000D6D4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v2, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_100068FCC()
{
  _swift_stdlib_reportUnimplementedInitializer("StickersUltraExtension.AvatarStickersViewController", 51, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id sub_100069028()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AvatarStickersViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1000690C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100069478(a2, a3, a4, a5, a6);
}

void sub_1000691EC(double a1, double a2)
{
  _QWORD *v2;
  _QWORD *v4;
  id v5;

  v4 = (_QWORD *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x98))();
  if (v4)
  {
    v5 = v4;
    (*(void (**)(double))((swift_isaMask & *v4) + 0x58))(a2);

  }
}

uint64_t sub_100069300()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))();
}

void sub_100069368()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_stickerSheetView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_keyline] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetRecord] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_delegate] = 0;
  v1 = &v0[OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetIdentifier];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100073990, "StickersUltraExtension/AvatarStickersViewController.swift", 57, 2, 44, 0);
  __break(1u);
}

uint64_t sub_100069404()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100069428()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **(_QWORD **)(v0 + 16)) + 0x108))();
}

uint64_t sub_100069460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100069470(uint64_t a1, uint64_t a2)
{
  return swift_release(*(_QWORD *)(a1 + 40), a2);
}

id sub_100069478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v5 + OBJC_IVAR____TtC22StickersUltraExtension28AvatarStickersViewController_puppetRecord);
  if (!v16)
    return 0;
  v43 = v13;
  v44 = a1;
  v17 = objc_msgSend((id)swift_unknownObjectRetain(v16), "identifier");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21 = static TempStickerURIHelpers_Staging107211449.memojiURI(avatarRecordIdentifier:stickerConfigurationIdentifier:)(v18, v20, a4, a5);
  v23 = v22;
  swift_bridgeObjectRelease(v20);
  if (qword_10009FC60 != -1)
    swift_once(&qword_10009FC60, sub_100067D78);
  v24 = type metadata accessor for Logger(0);
  sub_10000D130(v24, (uint64_t)qword_10009FC68);
  v25 = swift_bridgeObjectRetain_n(v23, 2);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v41 = a3;
    v28 = swift_slowAlloc(12, -1);
    v42 = v21;
    v29 = (uint8_t *)v28;
    v30 = swift_slowAlloc(32, -1);
    v40 = a2;
    v31 = v30;
    v46 = v30;
    *(_DWORD *)v29 = 136315138;
    swift_bridgeObjectRetain(v23);
    v45 = sub_10000C99C(v42, v23, &v46);
    a3 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v29 + 4, v29 + 12);
    swift_bridgeObjectRelease_n(v23, 3, v32);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Loaded sticker for puppet with externalURI %s", v29, 0xCu);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    v33 = v31;
    a2 = v40;
    swift_slowDealloc(v33, -1, -1);
    v34 = v29;
    v21 = v42;
    swift_slowDealloc(v34, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v23, 2, v36);
  }
  v37 = v44;
  sub_10000D5F4(0, &qword_10009B990, MSSticker_ptr);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v37, v43);
  swift_bridgeObjectRetain(a3);
  v35 = MSSticker.init(fileURL:externalURI:localizedDescription:extensionIdentifier:)((uint64_t)v15, v21, v23, a2, a3, 0xD00000000000006DLL, 0x8000000100075E50);
  swift_unknownObjectRelease(v16);
  return v35;
}

id sub_100069760()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id result;

  v0 = type metadata accessor for ResourceBundleClass();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  result = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  qword_10009FC98 = (uint64_t)result;
  return result;
}

uint64_t sub_1000697B0()
{
  uint64_t v0;

  v0 = type metadata accessor for ImageResource(0);
  sub_10000D1B8(v0, qword_10009FE40);
  sub_10000D130(v0, (uint64_t)qword_10009FE40);
  if (qword_10009FC90 != -1)
    swift_once(&qword_10009FC90, sub_100069760);
  return ImageResource.init(name:bundle:)(0x6349696A6F6D654DLL, 0xEA00000000006E6FLL, (id)qword_10009FC98);
}

uint64_t sub_10006984C()
{
  uint64_t v0;

  if (qword_10009FCA0 != -1)
    swift_once(&qword_10009FCA0, sub_1000697B0);
  v0 = type metadata accessor for ImageResource(0);
  return sub_10000D130(v0, (uint64_t)qword_10009FE40);
}

uint64_t sub_100069894@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10009FCA0 != -1)
    swift_once(&qword_10009FCA0, sub_1000697B0);
  v2 = type metadata accessor for ImageResource(0);
  v3 = sub_10000D130(v2, (uint64_t)qword_10009FE40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC22StickersUltraExtensionP33_40850A2406BF5519CD94A3C89228AC3619ResourceBundleClass);
}

void sub_100069924()
{
  abort_report_np("Unable to find class %s", "LSPlugInKitProxy");
  Notification._bridgeToObjectiveC()();
}

id objc_msgSend__configure(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configure");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activeExtensionContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeExtensionContext");
}

id objc_msgSend_adamID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adamID");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraints:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_appBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appBackgroundColor");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_attributionInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributionInfo");
}

id objc_msgSend_automaticallyDisplaysLandscapeRotationOverlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "automaticallyDisplaysLandscapeRotationOverlay");
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColor");
}

id objc_msgSend_balloonHostAuditToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "balloonHostAuditToken");
}

id objc_msgSend_baseMessagesViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseMessagesViewController");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bringSubviewToFront:");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerXAnchor");
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerYAnchor");
}

id objc_msgSend_childConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childConstraints");
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childViewControllers");
}

id objc_msgSend_configurationForDefaultMainDisplayMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationForDefaultMainDisplayMonitor");
}

id objc_msgSend_configureNewTrapOverlayView_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureNewTrapOverlayView:constraints:");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:multiplier:constant:");
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraints");
}

id objc_msgSend_containingBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containingBundle");
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createStickerRepresentationsAtIndexSet_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createStickerRepresentationsAtIndexSet:completion:");
}

id objc_msgSend_createStickerRepresentationsAtIndexSet_type_stickerIDs_progress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createStickerRepresentationsAtIndexSet:type:stickerIDs:progress:completion:");
}

id objc_msgSend_currentControllerPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentControllerPresentation");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentOrientation");
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateConstraints:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultMessagesChildViewControllerForPresentationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultMessagesChildViewControllerForPresentationContext:");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didBecomeActiveWithConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didBecomeActiveWithConversation:");
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeValueForKey:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didResignActiveWithConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didResignActiveWithConversation:");
}

id objc_msgSend_didTransitionToPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTransitionToPresentationStyle:");
}

id objc_msgSend_displayLayoutMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayLayoutMonitor");
}

id objc_msgSend_elements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elements");
}

id objc_msgSend_emptySnapshotImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emptySnapshotImage");
}

id objc_msgSend_entitlementValueForBalloonHost_expectedClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entitlementValueForBalloonHost:expectedClass:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_fontDescriptorByAddingAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorByAddingAttributes:");
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithDescriptor:size:");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightAnchor");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithShouldBeSheetPresentationControllerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithShouldBeSheetPresentationControllerDelegate:");
}

id objc_msgSend_instancesRespondToSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instancesRespondToSelector:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isLandscapeMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLandscapeMode");
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLoaded");
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMainThread");
}

id objc_msgSend_isOverlayShown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOverlayShown");
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "label");
}

id objc_msgSend_landscapeOverlayMessage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "landscapeOverlayMessage");
}

id objc_msgSend_landscapeTrapOverlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "landscapeTrapOverlay");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutIfNeeded");
}

id objc_msgSend_layoutMonitorDidUpdateDisplayLayout_withContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutMonitorDidUpdateDisplayLayout:withContext:");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingAnchor");
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftAnchor");
}

id objc_msgSend_loadObjectOfClass_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadObjectOfClass:completionHandler:");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_modalBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modalBackgroundColor");
}

id objc_msgSend_monitorWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorWithConfiguration:");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_needsLandscapeOverlayUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsLandscapeOverlayUpdate");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_overlayMessageBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overlayMessageBackgroundColor");
}

id objc_msgSend_overlayMessageTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overlayMessageTextColor");
}

id objc_msgSend_overridenTraitFromTrait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overridenTraitFromTrait:");
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parentViewController");
}

id objc_msgSend_pendingChildViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingChildViewController");
}

id objc_msgSend_pendingGlobalPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingGlobalPresentation");
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithoutAnimation:");
}

id objc_msgSend_pluginKitProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pluginKitProxyForIdentifier:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontDescriptorWithTextStyle:");
}

id objc_msgSend_presentationContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationContext");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_resolvedColorWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvedColorWithTraitCollection:");
}

id objc_msgSend_rightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightAnchor");
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaLayoutGuide");
}

id objc_msgSend_scheduleSnapshotEnabledUpdateAfter_currentValue_futureValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleSnapshotEnabledUpdateAfter:currentValue:futureValue:");
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryLabelColor");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBaseMessagesViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseMessagesViewController:");
}

id objc_msgSend_setChildConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChildConstraints:");
}

id objc_msgSend_setConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstraints:");
}

id objc_msgSend_setCurrentControllerPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentControllerPresentation:");
}

id objc_msgSend_setDisplayLayoutMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayLayoutMonitor:");
}

id objc_msgSend_setFill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFill");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setIsLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLoaded:");
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabel:");
}

id objc_msgSend_setModalMessagesController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalMessagesController:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setOverlayShown_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverlayShown:");
}

id objc_msgSend_setPendingChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingChildViewController:");
}

id objc_msgSend_setSnapshottingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnapshottingEnabled:");
}

id objc_msgSend_setStrongPopoverCurrentlyPresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrongPopoverCurrentlyPresented:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTransitionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionHandler:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setUsesLightDimmingViewInLightMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesLightDimmingViewInLightMode:");
}

id objc_msgSend_setupDisplayLayoutMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupDisplayLayoutMonitor");
}

id objc_msgSend_snapshottingEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshottingEnabled");
}

id objc_msgSend_snapshottingEnabledUpdateIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshottingEnabledUpdateIdentifier");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_strongPopoverCurrentlyPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strongPopoverCurrentlyPresented");
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subviews");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBackgroundColor");
}

id objc_msgSend_teamID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teamID");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topAnchor");
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingAnchor");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_updateHiddenSubviewsForAnyOverlays(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHiddenSubviewsForAnyOverlays");
}

id objc_msgSend_updateLandscapeOverlayIfNecessaryWithCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLandscapeOverlayIfNecessaryWithCoordinator:");
}

id objc_msgSend_updateLandscapeOverlayImmediately(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLandscapeOverlayImmediately");
}

id objc_msgSend_updateSnapshotWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSnapshotWithCompletionBlock:");
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceIdiom");
}

id objc_msgSend_videoPreviewNormalizedCropRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoPreviewNormalizedCropRect");
}

id objc_msgSend_videoPreviewSubjectMatteAtCompositionTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoPreviewSubjectMatteAtCompositionTime:");
}

id objc_msgSend_videoPreviewTimeRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoPreviewTimeRange");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "view");
}

id objc_msgSend_viewWillBeObstructed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewWillBeObstructed");
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthAnchor");
}

id objc_msgSend_willBecomeActiveWithConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willBecomeActiveWithConversation:");
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willChangeValueForKey:");
}

id objc_msgSend_willResignActiveWithConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willResignActiveWithConversation:");
}

id objc_msgSend_willTransitionToPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willTransitionToPresentationStyle:");
}
