void sub_100005D14(uint64_t a1)
{
  void (**v2)(_QWORD, _QWORD);
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ams_dictionaryByAddingEntriesFromDictionary:"));
  v2 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoryAttached"));
  ((void (**)(_QWORD, id))v2)[2](v2, v3);

}

void sub_100005ED0(uint64_t a1)
{
  void (**v2)(_QWORD, _QWORD);
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ams_dictionaryByAddingEntriesFromDictionary:"));
  v2 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "accessoryAttached"));
  ((void (**)(_QWORD, id))v2)[2](v2, v3);

}

id sub_1000069C0()
{
  if (qword_1000BA298 != -1)
    dispatch_once(&qword_1000BA298, &stru_1000A56C0);
  return (id)qword_1000BA290;
}

void sub_100006A00(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.HeadphoneProxService", "Headphone");
  v2 = (void *)qword_1000BA290;
  qword_1000BA290 = (uint64_t)v1;

}

Class sub_1000075D4()
{
  Class result;

  if (qword_1000BA2A8 != -1)
    dispatch_once(&qword_1000BA2A8, &stru_1000A56E0);
  result = objc_getClass("AFPreferences");
  qword_1000BA2A0 = (uint64_t)result;
  off_1000B7950 = (uint64_t (*)())sub_100007630;
  return result;
}

id sub_100007630()
{
  return (id)qword_1000BA2A0;
}

void sub_10000763C(id a1)
{
  qword_1000BA2B0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices", 2);
}

Class sub_100007664()
{
  Class result;

  if (qword_1000BA2C0 != -1)
    dispatch_once(&qword_1000BA2C0, &stru_1000A5700);
  result = objc_getClass("VTPreferences");
  qword_1000BA2B8 = (uint64_t)result;
  off_1000B7958 = (uint64_t (*)())sub_1000076C0;
  return result;
}

id sub_1000076C0()
{
  return (id)qword_1000BA2B8;
}

void sub_1000076CC(id a1)
{
  qword_1000BA2C8 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/VoiceTrigger.framework/VoiceTrigger", 2);
}

Class sub_1000076F4()
{
  Class result;

  if (qword_1000BA2D8 != -1)
    dispatch_once(&qword_1000BA2D8, &stru_1000A5720);
  result = objc_getClass("UNNotificationSettingsCenter");
  qword_1000BA2D0 = (uint64_t)result;
  off_1000B7960 = (uint64_t (*)())sub_100007750;
  return result;
}

id sub_100007750()
{
  return (id)qword_1000BA2D0;
}

void sub_10000775C(id a1)
{
  qword_1000BA2E0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/UserNotificationsSettings.framework/UserNotificationsSettings", 2);
}

Class sub_100007784()
{
  Class result;

  if (qword_1000BA2D8 != -1)
    dispatch_once(&qword_1000BA2D8, &stru_1000A5720);
  result = objc_getClass("UNMutableNotificationSystemSettings");
  qword_1000BA2E8 = (uint64_t)result;
  off_1000B7968 = (uint64_t (*)())sub_1000077E0;
  return result;
}

id sub_1000077E0()
{
  return (id)qword_1000BA2E8;
}

Class sub_1000077EC()
{
  Class result;

  if (qword_1000BA2F8 != -1)
    dispatch_once(&qword_1000BA2F8, &stru_1000A5740);
  result = objc_getClass("TUUserConfiguration");
  qword_1000BA2F0 = (uint64_t)result;
  off_1000B7970 = (uint64_t (*)())sub_100007848;
  return result;
}

id sub_100007848()
{
  return (id)qword_1000BA2F0;
}

void sub_100007854(id a1)
{
  qword_1000BA300 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 2);
}

void sub_10000787C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

Class sub_100007960()
{
  Class result;

  if (qword_1000BA310 != -1)
    dispatch_once(&qword_1000BA310, &stru_1000A5780);
  result = objc_getClass("HPSSpatialProfileManager");
  qword_1000BA308 = (uint64_t)result;
  off_1000B7A38 = (uint64_t (*)())sub_1000079BC;
  return result;
}

id sub_1000079BC()
{
  return (id)qword_1000BA308;
}

void sub_1000079C8(id a1)
{
  qword_1000BA318 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/HeadphoneConfigs.framework/HeadphoneConfigs", 2);
}

__CFString *sub_100007F40()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  __CFString *v4;
  uint64_t v6;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UTType _typeOfCurrentDevice](UTType, "_typeOfCurrentDevice"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "identifier"));

  v6 = 0;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[ISSymbol symbolForTypeIdentifier:error:](ISSymbol, "symbolForTypeIdentifier:error:", v1, &v6));
  v3 = v2;
  if (v6)
    v4 = CFSTR("iphone");
  else
    v4 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "name"));

  return v4;
}

void sub_100007FDC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  Swift::String v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  Swift::String v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  Swift::String v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  Class isa;
  void *v54;
  objc_super v55;

  v3 = v2;
  v55.receiver = v2;
  v55.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v55, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 1);
  v4 = objc_msgSend(v2, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceStyle");

  if (v5 == (id)1)
    v6 = 0x746867694CLL;
  else
    v6 = 1802658116;
  if (v5 == (id)1)
    v7 = (void *)0xE500000000000000;
  else
    v7 = (void *)0xE400000000000000;
  v8 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v8, "setAxis:", 1);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(0xE000000000000000);
  v9._countAndFlagsBits = v6;
  v9._object = v7;
  String.append(_:)(v9);
  v10 = (void *)sub_10001FF98(0x45u);
  v12 = v11;
  v13 = sub_10001FF98(0x46u);
  v15 = v14;
  v16 = (void *)sub_10000944C(0xD000000000000013, 0x800000010008BB30, v10, v12, v13, v14);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(0x800000010008BB30);
  v54 = v16;
  objc_msgSend(v8, "addArrangedSubview:", v16);
  objc_msgSend(v16, "setFrame:", 0.0, 0.0, 320.0, 90.0);
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  v17._countAndFlagsBits = v6;
  v17._object = v7;
  String.append(_:)(v17);
  v18 = (void *)sub_10001FF98(0x47u);
  v20 = v19;
  v21 = sub_10001FF98(0x48u);
  v23 = v22;
  v24 = (void *)sub_10000944C(0xD000000000000019, 0x800000010008BB50, v18, v20, v21, v22);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(0x800000010008BB50);
  objc_msgSend(v8, "addArrangedSubview:", v24);
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease(0xE000000000000000);
  v25._countAndFlagsBits = v6;
  v25._object = v7;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v7);
  v26 = (void *)sub_10001FF98(0x49u);
  v28 = v27;
  v29 = sub_10001FF98(0x4Au);
  v31 = v30;
  v32 = (void *)sub_10000944C(0xD00000000000001CLL, 0x800000010008BB70, v26, v28, v29, v30);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(0x800000010008BB70);
  objc_msgSend(v8, "addArrangedSubview:", v32);
  v33 = objc_msgSend(v3, "contentView");
  objc_msgSend(v33, "addSubview:", v8);

  v34 = objc_msgSend(v3, "contentView");
  v35 = objc_msgSend(v34, "mainContentGuide");

  v36 = (void *)objc_opt_self(NSLayoutConstraint);
  v37 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v38 = swift_allocObject(v37, 72, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100087700;
  v39 = objc_msgSend(v8, "topAnchor");
  v40 = objc_msgSend(v35, "topAnchor");
  v41 = objc_msgSend(v39, "constraintGreaterThanOrEqualToAnchor:", v40);

  *(_QWORD *)(v38 + 32) = v41;
  v42 = objc_msgSend(v8, "bottomAnchor");
  v43 = objc_msgSend(v35, "bottomAnchor");
  v44 = objc_msgSend(v42, "constraintLessThanOrEqualToAnchor:", v43);

  *(_QWORD *)(v38 + 40) = v44;
  v45 = objc_msgSend(v8, "widthAnchor");
  v46 = objc_msgSend(v45, "constraintEqualToConstant:", 320.0);

  *(_QWORD *)(v38 + 48) = v46;
  v47 = objc_msgSend(v8, "centerYAnchor");
  v48 = objc_msgSend(v35, "centerYAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v38 + 56) = v49;
  v50 = objc_msgSend(v8, "centerXAnchor");
  v51 = objc_msgSend(v35, "centerXAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v38 + 64) = v52;
  specialized Array._endMutation()();
  sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v38);
  objc_msgSend(v36, "activateConstraints:", isa);

}

void sub_1000086E0(uint64_t a1)
{
  void *v1;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void **v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *);
  void *v21;
  void (*v22)(uint64_t);
  uint64_t v23;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = *(_QWORD *)(a1 + 40);
  v5 = swift_allocObject(&unk_1000A5BD8, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v1);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v22 = sub_1000093D0;
  v23 = v5;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_100011720;
  v21 = &unk_1000A5BF0;
  v7 = _Block_copy(&v18);
  v8 = (void *)objc_opt_self(PRXAction);
  v9 = objc_msgSend(v8, "actionWithTitle:style:handler:", v6, 0, v7);

  _Block_release(v7);
  v10 = v23;
  swift_release(v5);

  v11 = *(_QWORD *)(a1 + 56);
  v12 = swift_allocObject(&unk_1000A5BD8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  swift_bridgeObjectRetain(v11);
  swift_retain(v12);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v22 = sub_1000093F0;
  v23 = v12;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_100011720;
  v21 = &unk_1000A5C18;
  v14 = _Block_copy(&v18);
  v15 = objc_msgSend(v8, "actionWithTitle:style:handler:", v13, 1, v14);

  _Block_release(v14);
  v16 = v23;
  swift_release(v12);
  v17 = objc_msgSend(v1, "addAction:", v15, swift_release(v16).n128_f64[0]);

}

void sub_10000894C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneAdaptiveControlsUpsellViewController_presenter);

    if (v5)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_1000093F8(v6, (uint64_t)qword_1000B9F80);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Requested Separate Cards For Adaptive Controls", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

      v11 = swift_unknownObjectWeakLoadStrong(v5 + 56);
      if (v11)
      {
        v12 = v11;
        sub_10002F96C();
        swift_unknownObjectRelease(v5);
        v5 = v12;
      }
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_100008A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneAdaptiveControlsUpsellViewController_presenter);

    if (v5)
    {
      sub_100073884();
      swift_unknownObjectRelease(v5);
    }
  }
}

id sub_100008B98(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for HeadphoneAdaptiveControlsUpsellViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService45HeadphoneAdaptiveControlsUpsellViewController);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7CB8, (uint64_t)&unk_1000A5AE8);
}

__n128 sub_100008C14(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100008C20(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100008C40(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_10000A43C(a1, (unint64_t *)&unk_1000B7CC0, (uint64_t)&unk_1000A5B70);
}

uint64_t sub_100008C80()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneAdaptiveControlsUpsellViewController_type);
}

uint64_t sub_100008C90(uint64_t a1, uint64_t a2)
{
  return sub_100008DFC(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100008CA8(uint64_t a1, uint64_t a2)
{
  return sub_100008DFC(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

void sub_100008CBC(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_100008CC4(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_100008CCC(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_100008D40(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_100008DBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

uint64_t sub_100008DFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100008E38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100008E78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

BOOL sub_100008EE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_100008EFC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_100008F10(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_100008F40(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_100008F54(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_100008F68@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_100008F78(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_DWORD *sub_100008F84@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int8 *sub_100008F90@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_100008FA0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100008FB8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

void sub_100009040(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_QWORD *sub_10000904C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_100009058(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_DWORD *sub_100009064@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_100009078(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_10000908C(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000090A0(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1000090B4(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000090C8(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

_DWORD *sub_1000090DC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

_DWORD *sub_1000090EC@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_100009100@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_100009114(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_100009144@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_100009170@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_100009194(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_1000091A8(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_1000091BC@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1000091D0(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1000091E4()
{
  _DWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1000091F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_DWORD *sub_10000920C(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_100009224@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10000924C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000A1B0((unint64_t *)&qword_1000B7CF0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100087DB8);
  v3 = sub_10000A1B0(&qword_1000B7DA0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100087BA8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000092D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_100009314(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_10000A1B0((unint64_t *)&qword_1000B7D90, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100087D74);
  v3 = sub_10000A1B0(&qword_1000B7D98, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100087CC8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

BOOL sub_100009398(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1000093AC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000093D0(uint64_t a1)
{
  uint64_t v1;

  sub_10000894C(a1, v1);
}

uint64_t sub_1000093D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000093E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000093F0(uint64_t a1)
{
  uint64_t v1;

  sub_100008A8C(a1, v1);
}

uint64_t sub_1000093F8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_100009410@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4;
  uint64_t result;

  v4 = sub_10000A37C(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_10000944C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  id v17;
  id v18;
  _QWORD *v19;
  id v20;
  id v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t inited;
  uint64_t v36;
  NSString *v37;
  unint64_t v38;
  NSString v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSString *v44;
  unint64_t v45;
  id v46;
  NSString v47;
  Class isa;
  id v49;
  Class v50;
  id v51;
  id v52;
  void *object;
  uint64_t v54;
  uint64_t v55;
  void *countAndFlagsBits;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  Class v82;
  uint64_t result;
  id v84;
  id v85;
  __int128 v86;
  id v87;
  id v88;
  id v89;
  Swift::String v90;
  char v91[72];
  char v92[72];
  uint64_t v93;
  uint64_t v94;

  v90._object = a6;
  v90._countAndFlagsBits = a5;
  v89 = a3;
  v8 = type metadata accessor for CharacterSet(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "bounds");
  objc_msgSend(v13, "setBounds:");
  v14 = type metadata accessor for HeadphoneAdaptiveControlsUpsellViewController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v14);
  v16 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v17 = objc_allocWithZone((Class)BSUICAPackageView);
  v18 = v16;
  swift_bridgeObjectRetain(a2);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v20 = objc_msgSend(v17, "initWithPackageName:inBundle:", v19, v18);

  v88 = v18;
  if (!v20)
  {
    __break(1u);
    goto LABEL_7;
  }
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v20, "setFrame:", 0.0, 6.0, 78.0, 78.0);
  objc_msgSend(v13, "addSubview:", v20);
  v21 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v93 = (uint64_t)v89;
  v94 = a4;
  swift_bridgeObjectRetain(a4);
  v22._countAndFlagsBits = 10;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  v23 = v94;
  swift_bridgeObjectRetain(v94);
  String.append(_:)(v90);
  v24 = swift_bridgeObjectRelease(v23);
  v25 = v94;
  static CharacterSet.newlines.getter(v24);
  v26 = sub_100009F40();
  v19 = (_QWORD *)StringProtocol.components(separatedBy:)(v12, &type metadata for String, v26);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (!v19[2])
  {
LABEL_7:
    swift_bridgeObjectRelease(v19);
    __break(1u);
    goto LABEL_8;
  }
  v27 = v19[5];
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v19);
  v28 = (void *)objc_opt_self(UIFont);
  v29 = objc_msgSend(v28, "_preferredFontForTextStyle:variant:", UIFontTextStyleSubheadline, 256);
  if (!v29)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v30 = v29;
  v89 = v21;
  v90._countAndFlagsBits = (uint64_t)v20;
  v90._object = v13;
  v31 = objc_msgSend(v29, "fontDescriptor");
  v32 = objc_msgSend(v31, "fontDescriptorWithSymbolicTraits:", 2);

  if (v32)
  {
    objc_msgSend(v30, "pointSize");
    v33 = objc_msgSend(v28, "fontWithDescriptor:size:", v32);

    v34 = sub_100009F00(&qword_1000B7CE0);
    inited = swift_initStackObject(v34, v92);
    v86 = xmmword_100087710;
    *(_OWORD *)(inited + 16) = xmmword_100087710;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v36 = sub_100009F84(0, &qword_1000B7CE8, UIFont_ptr);
    *(_QWORD *)(inited + 64) = v36;
    *(_QWORD *)(inited + 40) = v33;
    v37 = NSFontAttributeName;
    v87 = v33;
    v38 = sub_100070AA4(inited);
    v39 = String._bridgeToObjectiveC()();
    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v84 = objc_msgSend(v39, "rangeOfString:", v40);
    v42 = v41;

    v43 = swift_initStackObject(v34, v91);
    *(_OWORD *)(v43 + 16) = v86;
    *(_QWORD *)(v43 + 64) = v36;
    *(_QWORD *)(v43 + 32) = v37;
    *(_QWORD *)(v43 + 40) = v30;
    v44 = v37;
    *(_QWORD *)&v86 = v30;
    v45 = sub_100070AA4(v43);
    v46 = objc_allocWithZone((Class)NSMutableAttributedString);
    v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    type metadata accessor for Key(0);
    sub_10000A1B0((unint64_t *)&qword_1000B7CF0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100087DB8);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v45);
    v49 = objc_msgSend(v46, "initWithString:attributes:", v47, isa);

    v50 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v38);
    v85 = v49;
    objc_msgSend(v49, "addAttributes:range:", v50, v84, v42);

    v51 = v89;
    objc_msgSend(v89, "setAttributedText:", v49);
    objc_msgSend(v51, "setFrame:", 90.0, 6.0, 230.0, 84.0);
    v52 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    objc_msgSend(v51, "setTextColor:", v52);

    objc_msgSend(v51, "setNumberOfLines:", 0);
    objc_msgSend(v51, "sizeToFit");
    object = v90._object;
    objc_msgSend(v90._object, "addSubview:", v51);
    v84 = (id)objc_opt_self(NSLayoutConstraint);
    v54 = sub_100009F00((uint64_t *)&unk_1000B8730);
    v55 = swift_allocObject(v54, 104, 7);
    *(_OWORD *)(v55 + 16) = xmmword_100087720;
    countAndFlagsBits = (void *)v90._countAndFlagsBits;
    v57 = objc_msgSend((id)v90._countAndFlagsBits, "leadingAnchor");
    v58 = objc_msgSend(object, "leadingAnchor");
    v59 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v58, 6.0);

    *(_QWORD *)(v55 + 32) = v59;
    v60 = objc_msgSend(countAndFlagsBits, "topAnchor");
    v61 = objc_msgSend(object, "topAnchor");
    v62 = objc_msgSend(v60, "constraintEqualToAnchor:constant:", v61, 6.0);

    *(_QWORD *)(v55 + 40) = v62;
    v63 = objc_msgSend(countAndFlagsBits, "widthAnchor");
    v64 = objc_msgSend(v63, "constraintEqualToConstant:", 78.0);

    *(_QWORD *)(v55 + 48) = v64;
    v65 = objc_msgSend(countAndFlagsBits, "heightAnchor");
    v66 = objc_msgSend(v65, "constraintEqualToConstant:", 78.0);

    *(_QWORD *)(v55 + 56) = v66;
    v67 = objc_msgSend(countAndFlagsBits, "bottomAnchor");
    v68 = objc_msgSend(object, "bottomAnchor");
    v69 = objc_msgSend(v67, "constraintLessThanOrEqualToAnchor:", v68);

    *(_QWORD *)(v55 + 64) = v69;
    v70 = objc_msgSend(v51, "leadingAnchor");
    v71 = objc_msgSend(countAndFlagsBits, "trailingAnchor");
    v72 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v71, 6.0);

    *(_QWORD *)(v55 + 72) = v72;
    v73 = objc_msgSend(v51, "topAnchor");
    v74 = objc_msgSend(object, "topAnchor");
    v75 = objc_msgSend(v73, "constraintEqualToAnchor:constant:", v74, 6.0);

    *(_QWORD *)(v55 + 80) = v75;
    v76 = objc_msgSend(v51, "widthAnchor");
    v77 = objc_msgSend(v76, "constraintEqualToConstant:", 230.0);

    *(_QWORD *)(v55 + 88) = v77;
    v78 = objc_msgSend(v51, "bottomAnchor");
    v79 = objc_msgSend(object, "bottomAnchor");
    v80 = objc_msgSend(v78, "constraintLessThanOrEqualToAnchor:", v79);

    *(_QWORD *)(v55 + 96) = v80;
    v93 = v55;
    specialized Array._endMutation()();
    v81 = v93;
    sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
    v82 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v81);
    objc_msgSend(v84, "activateConstraints:", v82);

    return (uint64_t)object;
  }
LABEL_9:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000018, 0x800000010008BBE0, "HeadphoneProxService/HeadphoneAdaptiveControlsUpsellViewController.swift", 72, 2, 164, 0);
  __break(1u);
  return result;
}

uint64_t sub_100009F00(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_100009F40()
{
  unint64_t result;

  result = qword_1000B7CD8;
  if (!qword_1000B7CD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000B7CD8);
  }
  return result;
}

uint64_t sub_100009F84(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7D00, (uint64_t)&unk_1000A5C78);
}

uint64_t sub_100009FD0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7CF8, (uint64_t)&unk_1000A5C50);
}

uint64_t initializeBufferWithCopyOfBuffer for HeadphoneLayoutMetrics(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 sub_10000A038(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_10000A04C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10000A06C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CMTimeRange(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7D08, (uint64_t)&unk_1000A5CF8);
}

__n128 initializeWithTake for LabelledBatteryView.Position(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneLayoutMetrics.VideoMetric(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HeadphoneLayoutMetrics.VideoMetric(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7D10, (uint64_t)&unk_1000A5D78);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7D18, (uint64_t)&unk_1000A5DF8);
}

void type metadata accessor for SFAnnounceCallsState(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7D20, (uint64_t)&unk_1000A5E20);
}

void type metadata accessor for SFBluetoothHeadsetStatus(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7D28, (uint64_t)&unk_1000A5E40);
}

void type metadata accessor for SFBluetoothCaseLEDVersion(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7D30, (uint64_t)&unk_1000A5E68);
}

void type metadata accessor for SFBluetoothCaseLEDColor(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7D38, (uint64_t)&unk_1000A5E88);
}

uint64_t sub_10000A184()
{
  return sub_10000A1B0(&qword_1000B7D40, (uint64_t (*)(uint64_t))type metadata accessor for SFBluetoothHeadsetStatus, (uint64_t)&unk_10008798C);
}

uint64_t sub_10000A1B0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000A1F0()
{
  return sub_10000A1B0(&qword_1000B7D48, (uint64_t (*)(uint64_t))type metadata accessor for SFBluetoothHeadsetStatus, (uint64_t)&unk_100087958);
}

uint64_t sub_10000A21C()
{
  return sub_10000A1B0(&qword_1000B7D50, (uint64_t (*)(uint64_t))type metadata accessor for SFBluetoothHeadsetStatus, (uint64_t)&unk_1000879B8);
}

uint64_t sub_10000A248()
{
  return sub_10000A1B0(&qword_1000B7D58, (uint64_t (*)(uint64_t))type metadata accessor for SFBluetoothHeadsetStatus, (uint64_t)&unk_1000879F4);
}

uint64_t sub_10000A274()
{
  return sub_10000A1B0(&qword_1000B7D60, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100087B6C);
}

uint64_t sub_10000A2A0()
{
  return sub_10000A1B0(&qword_1000B7D68, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100087B40);
}

uint64_t sub_10000A2CC()
{
  return sub_10000A1B0(&qword_1000B7D70, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100087C8C);
}

uint64_t sub_10000A2F8()
{
  return sub_10000A1B0(&qword_1000B7D78, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100087C60);
}

uint64_t sub_10000A324()
{
  return sub_10000A1B0(&qword_1000B7D80, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100087CFC);
}

uint64_t sub_10000A350()
{
  return sub_10000A1B0(&qword_1000B7D88, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100087BDC);
}

uint64_t sub_10000A37C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

__n128 sub_10000A3B4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneLayoutMetrics.Mismatch(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HeadphoneLayoutMetrics.Mismatch(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_10000A43C(a1, &qword_1000B7DA8, (uint64_t)&unk_1000A5F00);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_10000A43C(a1, (unint64_t *)&unk_1000B7DB0, (uint64_t)&unk_1000A5F30);
}

void sub_10000A43C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_10000A4E4(id a1, uint64_t a2, double *a3, char *a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t ObjectType;
  objc_class *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _QWORD *v18;
  char **v19;
  uint64_t v20;
  objc_class *v21;
  _BYTE *v22;
  id v23;
  char *v24;
  double v25;
  char v26;
  id v27;
  char *v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  char **v40;
  uint64_t i;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  double v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char **v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  double v76;
  double v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char **v82;
  uint64_t v83;
  id v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  id v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  id v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char **v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  char **v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double *v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id *v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  id v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  Class isa;
  uint64_t v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  id v139;
  id v140;
  id v141;
  char *v142;
  objc_class *v143;
  id v144;
  id v145;
  uint64_t v146;
  _BYTE __src[264];
  objc_super v148;
  uint64_t v149;
  _BYTE __dst[264];
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  uint64_t v164;

  v5 = v4;
  ObjectType = swift_getObjectType(v5, a2);
  v11 = (objc_class *)ObjectType;
  v12 = *((_OWORD *)a3 + 11);
  v161 = *((_OWORD *)a3 + 10);
  v162 = v12;
  v163 = *((_OWORD *)a3 + 12);
  v164 = *((_QWORD *)a3 + 26);
  v13 = *((_OWORD *)a3 + 7);
  v157 = *((_OWORD *)a3 + 6);
  v158 = v13;
  v14 = *((_OWORD *)a3 + 9);
  v159 = *((_OWORD *)a3 + 8);
  v160 = v14;
  v15 = *((_OWORD *)a3 + 3);
  v153 = *((_OWORD *)a3 + 2);
  v154 = v15;
  v16 = *((_OWORD *)a3 + 5);
  v155 = *((_OWORD *)a3 + 4);
  v156 = v16;
  v17 = *((_OWORD *)a3 + 1);
  v151 = *(_OWORD *)a3;
  v152 = v17;
  v5[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_batteryType] = 3;
  v18 = &v5[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView];
  *v18 = a1;
  v18[1] = a2;
  v149 = (uint64_t)&_swiftEmptyArrayStorage;
  v19 = &selRef_configureWithContext_completion_;
  v20 = *((_QWORD *)a4 + 2);
  if (v20)
  {
    v143 = (objc_class *)ObjectType;
    v21 = (objc_class *)type metadata accessor for LabelledBatteryView();
    v22 = v5;
    v144 = a1;
    v23 = a1;
    v24 = a4 + 40;
    do
    {
      v25 = *((double *)v24 - 1);
      v26 = *v24;
      v27 = objc_allocWithZone(v21);
      v28 = sub_1000254A8(0, 3, v26, v25);
      objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v29 = v28;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v30 = *(_QWORD *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
      specialized Array._endMutation()(v32);

      v24 += 16;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease(a4);
    v33 = v149;
    v11 = v143;
    a1 = v144;
  }
  else
  {
    v34 = v5;
    v35 = a1;
    swift_bridgeObjectRelease(a4);
    v33 = (uint64_t)&_swiftEmptyArrayStorage;
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_batteryViews] = v33;
  swift_bridgeObjectRetain(v33);

  v148.receiver = v5;
  v148.super_class = v11;
  v36 = objc_msgSendSuper2(&v148, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v37 = v36;
  v145 = (id)((unint64_t)v33 >> 62);
  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v44 = v33;
    else
      v44 = v33 & 0xFFFFFFFFFFFFFF8;
    v45 = v36;
    swift_bridgeObjectRetain(v33);
    v38 = _CocoaArrayWrapper.endIndex.getter(v44);
    v40 = &selRef_configureWithContext_completion_;
    if (!v38)
      goto LABEL_20;
  }
  else
  {
    v38 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    v39 = v36;
    swift_bridgeObjectRetain(v33);
    v40 = &selRef_configureWithContext_completion_;
    if (!v38)
      goto LABEL_20;
  }
  if (v38 < 1)
  {
    __break(1u);
    goto LABEL_69;
  }
  for (i = 0; i != v38; ++i)
  {
    if ((v33 & 0xC000000000000001) != 0)
      v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v33);
    else
      v42 = *(id *)(v33 + 8 * i + 32);
    v43 = v42;
    objc_msgSend(v37, "addSubview:", v42);

  }
LABEL_20:
  a4 = __src;
  swift_bridgeObjectRelease(v33);
  v46 = objc_allocWithZone((Class)UILayoutGuide);
  v11 = (objc_class *)a1;
  sub_10000B75C((uint64_t)a3);
  v47 = objc_msgSend(v46, "init");
  a1 = v47;
  v48 = 4;
  if (*((_BYTE *)a3 + 48))
    v48 = 0;
  v49 = a3[v48];
  v50 = objc_msgSend(v47, "heightAnchor");
  v51 = objc_msgSend(v50, "constraintEqualToConstant:", v49);

  *(_OWORD *)&__src[192] = v162;
  *(_OWORD *)&__src[208] = v163;
  *(_OWORD *)&__src[112] = v157;
  *(_OWORD *)&__src[128] = v158;
  *(_OWORD *)&__src[144] = v159;
  *(_QWORD *)__src = v11;
  *(_QWORD *)&__src[8] = a1;
  *(_QWORD *)&__src[224] = v164;
  *(_OWORD *)&__src[160] = v160;
  *(_OWORD *)&__src[176] = v161;
  *(_OWORD *)&__src[48] = v153;
  *(_OWORD *)&__src[64] = v154;
  *(_OWORD *)&__src[80] = v155;
  *(_OWORD *)&__src[96] = v156;
  *(_OWORD *)&__src[16] = v151;
  *(_OWORD *)&__src[32] = v152;
  __src[232] = 2;
  *(_QWORD *)&__src[240] = v51;
  *(_QWORD *)&__src[248] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&__src[256] = &_swiftEmptyArrayStorage;
  memcpy(__dst, __src, sizeof(__dst));
  v52 = v37;
  -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v52, "addLayoutGuide:", a1);
  objc_msgSend(v52, "addSubview:", v11);
  objc_msgSend(v52, "sendSubviewToBack:", v11);

  v38 = (uint64_t)v52;
  sub_10006B044();
  v20 = v53;

  v19 = (char **)((unint64_t)v33 >> 62);
  if (!v145)
  {
    v54 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v33);
    if (v54)
      goto LABEL_24;
LABEL_54:
    swift_bridgeObjectRelease(v33);
    sub_10000B84C((uint64_t)a3);
    if (v145)
      goto LABEL_76;
    goto LABEL_55;
  }
  if (v33 < 0)
    v105 = v33;
  else
    v105 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v33);
  if (!_CocoaArrayWrapper.endIndex.getter(v105))
    goto LABEL_54;
LABEL_24:
  a4 = (char *)(v33 & 0xC000000000000001);
  if ((v33 & 0xC000000000000001) != 0)
  {
LABEL_69:
    v55 = (char **)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
    goto LABEL_27;
  }
  if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_71;
  }
  v55 = (char **)*(id *)(v33 + 32);
LABEL_27:
  v40 = v55;
  swift_bridgeObjectRelease(v33);
  if (!v19)
  {
    if (*(uint64_t *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2)
      goto LABEL_29;
LABEL_75:
    sub_10000B84C((uint64_t)a3);

    if (v19)
    {
LABEL_76:
      if (v33 < 0)
        v128 = v33;
      else
        v128 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v33);
      if (!_CocoaArrayWrapper.endIndex.getter(v128))
        goto LABEL_80;
      goto LABEL_56;
    }
LABEL_55:
    v106 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v33);
    if (!v106)
    {
LABEL_80:
      swift_bridgeObjectRelease(v33);
      goto LABEL_81;
    }
LABEL_56:
    if ((v33 & 0xC000000000000001) != 0)
    {
      v107 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
    }
    else
    {
      if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_84;
      }
      v107 = (double *)*(id *)(v33 + 32);
    }
    a3 = v107;
    swift_bridgeObjectRelease(v33);
    v108 = objc_msgSend(a3, "topAnchor");
    v109 = objc_msgSend(a1, "bottomAnchor");
    a4 = (char *)objc_msgSend(v108, "constraintEqualToAnchor:constant:", v109, 20.0);

    v110 = objc_msgSend(a3, "bottomAnchor");
    v111 = objc_msgSend((id)v38, "bottomAnchor");
    v33 = (uint64_t)objc_msgSend(v110, "constraintEqualToAnchor:", v111);

    v112 = objc_msgSend(a3, "centerXAnchor");
    v40 = (char **)-[objc_class centerXAnchor](v11, "centerXAnchor");
    a1 = objc_msgSend(v112, "constraintEqualToAnchor:", v40);

    v146 = v20;
    if (!((unint64_t)v20 >> 62))
    {
      v113 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v20);
      v115 = v113 + 3;
      if (!__OFADD__(v113, 3))
        goto LABEL_61;
      goto LABEL_89;
    }
LABEL_84:
    if (v20 < 0)
      v132 = v20;
    else
      v132 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v133 = _CocoaArrayWrapper.endIndex.getter(v132);
    v134 = __OFADD__(v133, 3);
    v115 = v133 + 3;
    if (!v134)
    {
LABEL_61:
      v116 = sub_10000B790(v115, 1);
      specialized Array._endMutation()(v116);
      a4 = a4;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a4);
      v40 = *(char ***)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v114 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v40 < v114 >> 1)
      {
LABEL_62:
        v117 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, a4);
        specialized Array._endMutation()(v117);
        v118 = (id *)(id)v33;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v118);
        v120 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v119 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v120 >= v119 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v119 > 1, v120 + 1, 1);
        v121 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v120, v118);
        specialized Array._endMutation()(v121);
        v122 = a1;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v122);
        v124 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v123 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v124 >= v123 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v123 > 1, v124 + 1, 1);
        v125 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v124, v122);
        specialized Array._endMutation()(v125);
        v104 = v146;
        swift_bridgeObjectRelease(v20);

        goto LABEL_67;
      }
LABEL_90:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v114 > 1, (char *)v40 + 1, 1);
      goto LABEL_62;
    }
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
LABEL_71:
  if (v33 < 0)
    v126 = v33;
  else
    v126 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v33);
  v127 = _CocoaArrayWrapper.endIndex.getter(v126);
  swift_bridgeObjectRelease(v33);
  if (v127 < 2)
    goto LABEL_75;
LABEL_29:
  if (a4)
  {
    v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v33);
  }
  else
  {
    if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      goto LABEL_93;
    }
    v56 = *(id *)(v33 + 40);
  }
  v145 = v56;
  v57 = objc_msgSend(v40, "topAnchor");
  v58 = objc_msgSend(a1, "bottomAnchor");
  v141 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v58, 20.0);

  v59 = objc_msgSend(v40, "bottomAnchor");
  v60 = objc_msgSend((id)v38, "bottomAnchor");
  v140 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  v143 = (objc_class *)v40;
  v61 = objc_msgSend(v40, "centerXAnchor");
  v62 = -[objc_class leftAnchor](v11, "leftAnchor");
  v63 = (void *)objc_opt_self(UIScreen);
  v64 = objc_msgSend(v63, "mainScreen");
  objc_msgSend(v64, "bounds");
  v66 = v65;

  v67 = 1.0;
  v68 = 1.0;
  if (v66 < 375.0)
    v68 = 298.0 / a3[16];
  v69 = a3[11];
  v139 = objc_msgSend(v61, "constraintEqualToAnchor:constant:", v62, v68 * a3[10]);

  v70 = objc_msgSend(v145, "topAnchor");
  v71 = objc_msgSend(v145, "topAnchor");
  v138 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  a4 = (char *)objc_msgSend(v145, "bottomAnchor");
  v72 = objc_msgSend((id)v38, "bottomAnchor");
  v40 = (char **)objc_msgSend(a4, "constraintEqualToAnchor:", v72);

  v73 = objc_msgSend(v145, "centerXAnchor");
  v74 = -[objc_class leftAnchor](v11, "leftAnchor");
  v75 = objc_msgSend(v63, "mainScreen");
  objc_msgSend(v75, "bounds");
  v77 = v76;

  sub_10000B84C((uint64_t)a3);
  if (v77 < 375.0)
    v67 = 298.0 / a3[16];
  v19 = (char **)objc_msgSend(v73, "constraintEqualToAnchor:constant:", v74, v69 * v67, v138);

  v146 = v20;
  if (!((unint64_t)v20 >> 62))
  {
    v78 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v20);
    v80 = v78 + 6;
    if (!__OFADD__(v78, 6))
      goto LABEL_38;
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
LABEL_93:
  if (v20 < 0)
    v135 = v20;
  else
    v135 = v20 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v20);
  v136 = _CocoaArrayWrapper.endIndex.getter(v135);
  v134 = __OFADD__(v136, 6);
  v80 = v136 + 6;
  if (v134)
    goto LABEL_98;
LABEL_38:
  v81 = sub_10000B790(v80, 1);
  specialized Array._endMutation()(v81);
  a4 = (char *)v141;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(a4);
  a3 = *(double **)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v79 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if ((unint64_t)a3 >= v79 >> 1)
LABEL_99:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v79 > 1, (char *)a3 + 1, 1);
  v82 = v40;
  v83 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a3, a4);
  specialized Array._endMutation()(v83);
  v84 = v140;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v84);
  v86 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v85 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v86 >= v85 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v85 > 1, v86 + 1, 1);
  v142 = a4;
  v87 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v86, v84);
  specialized Array._endMutation()(v87);
  v88 = v139;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v88);
  v90 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v89 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v90 >= v89 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v89 > 1, v90 + 1, 1);
  v91 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v90, v88);
  specialized Array._endMutation()(v91);
  v92 = v137;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v92);
  v94 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v93 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v94 >= v93 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v93 > 1, v94 + 1, 1);
  v95 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v94, v92);
  specialized Array._endMutation()(v95);
  v96 = v82;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
  v98 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v97 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v98 >= v97 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v98 + 1, 1);
  v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v96);
  specialized Array._endMutation()(v99);
  v100 = v19;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v100);
  v102 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v101 = *(_QWORD *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v102 >= v101 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v101 > 1, v102 + 1, 1);
  v103 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v102, v100);
  specialized Array._endMutation()(v103);
  v104 = v146;
  swift_bridgeObjectRelease(v20);

LABEL_67:
  v20 = v104;
LABEL_81:
  v129 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_10000B880();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v129, "activateConstraints:", isa);

  sub_10000B8BC((uint64_t)__src);
  swift_bridgeObjectRelease(v149);
  return v38;
}

uint64_t sub_10000B408(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  double v10;
  char v11;
  uint64_t v12;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = result;
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_batteryViews);
    if ((unint64_t)v4 >> 62)
    {
LABEL_17:
      if (v4 < 0)
        v12 = v4;
      else
        v12 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      swift_bridgeObjectRetain(v4);
      v5 = _CocoaArrayWrapper.endIndex.getter(v12);
      swift_bridgeObjectRelease(v4);
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(result);
    }
    v6 = 0;
    v7 = (char *)(v3 + 40);
    do
    {
      if (v6 < v5)
      {
        v10 = *((double *)v7 - 1);
        v11 = *v7;
        if ((v4 & 0xC000000000000001) != 0)
        {
          v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
        }
        else
        {
          if (v6 < 0)
          {
            __break(1u);
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
          if ((unint64_t)v6 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_16;
          v8 = *(id *)(v4 + 8 * v6 + 32);
        }
        v9 = v8;
        sub_100025104(v11, v10);

      }
      ++v6;
      v7 += 16;
    }
    while (v2 != v6);
    return swift_bridgeObjectRelease(v3);
  }
  return result;
}

uint64_t sub_10000B54C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v1 = v0;
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000BC740);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Playing movie", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView), v8);
  return dispatch thunk of VideoPlaybackControllable.play()(ObjectType, v7);
}

uint64_t type metadata accessor for HeadphoneMovieBatteryView()
{
  return objc_opt_self(_TtC20HeadphoneProxService25HeadphoneMovieBatteryView);
}

id sub_10000B6D0()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView), "centerXAnchor");
}

id sub_10000B700()
{
  id *v0;

  return objc_msgSend(*v0, "leftAnchor");
}

id sub_10000B724()
{
  id *v0;

  return objc_msgSend(*v0, "rightAnchor");
}

uint64_t sub_10000B748()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_batteryType);
}

uint64_t sub_10000B75C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 168);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 152));
  swift_bridgeObjectRetain(v2);
  return a1;
}

uint64_t sub_10000B790(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_10000B84C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 152);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 168));
  swift_bridgeObjectRelease(v2);
  return a1;
}

unint64_t sub_10000B880()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7CD0;
  if (!qword_1000B7CD0)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B7CD0);
  }
  return result;
}

uint64_t sub_10000B8BC(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 168);
  v5 = *(_QWORD *)(a1 + 184);
  v7 = *(void **)(a1 + 240);
  v6 = *(_QWORD *)(a1 + 248);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 256));
  swift_bridgeObjectRelease(v6);

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);

  return a1;
}

uint64_t sub_10000B930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B7E60);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B7E60);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10000BA28(uint64_t a1)
{
  void *v1;
  void *v2;
  NSString v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  void **aBlock;
  uint64_t v47;
  void (*v48)(uint64_t, void *);
  void *v49;
  void (*v50)(uint64_t);
  uint64_t v51;

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v4);

  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setSubtitle:", v5);

  v6 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v45 = sub_10000C468();
  objc_msgSend(v6, "setImage:", v45);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = objc_msgSend(v2, "contentView");
  objc_msgSend(v7, "addSubview:", v6);

  v8 = objc_msgSend(v2, "contentView");
  v9 = objc_msgSend(v8, "mainContentGuide");

  v10 = (void *)objc_opt_self(NSLayoutConstraint);
  v11 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v12 = swift_allocObject(v11, 80, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100087E70;
  v13 = objc_msgSend(v6, "centerXAnchor");
  v14 = objc_msgSend(v9, "centerXAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(v6, "centerYAnchor");
  v17 = objc_msgSend(v9, "centerYAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v12 + 40) = v18;
  v19 = objc_msgSend(v6, "widthAnchor");
  v20 = objc_msgSend(v19, "constraintEqualToConstant:", 76.0);

  *(_QWORD *)(v12 + 48) = v20;
  v21 = objc_msgSend(v6, "heightAnchor");
  v22 = objc_msgSend(v21, "constraintEqualToConstant:", 76.0);

  *(_QWORD *)(v12 + 56) = v22;
  v23 = objc_msgSend(v6, "topAnchor");
  v24 = objc_msgSend(v9, "topAnchor");
  v25 = objc_msgSend(v23, "constraintGreaterThanOrEqualToAnchor:", v24);

  *(_QWORD *)(v12 + 64) = v25;
  v26 = objc_msgSend(v6, "bottomAnchor");
  v27 = objc_msgSend(v9, "bottomAnchor");
  v28 = objc_msgSend(v26, "constraintLessThanOrEqualToAnchor:", v27);

  *(_QWORD *)(v12 + 72) = v28;
  aBlock = (void **)v12;
  specialized Array._endMutation()(v29);
  sub_10000B880();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v10, "activateConstraints:", isa);

  v31 = *(_QWORD *)(a1 + 40);
  v32 = swift_allocObject(&unk_1000A6170, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, v2);
  swift_bridgeObjectRetain(v31);
  swift_retain(v32);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  v50 = sub_10000C5CC;
  v51 = v32;
  aBlock = _NSConcreteStackBlock;
  v47 = 1107296256;
  v48 = sub_100011720;
  v49 = &unk_1000A6188;
  v34 = _Block_copy(&aBlock);
  v35 = (void *)objc_opt_self(PRXAction);
  v36 = objc_msgSend(v35, "actionWithTitle:style:handler:", v33, 0, v34);

  _Block_release(v34);
  v37 = v51;
  swift_release(v32);

  v38 = *(_QWORD *)(a1 + 56);
  v39 = swift_allocObject(&unk_1000A6170, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16, v2);
  swift_bridgeObjectRetain(v38);
  swift_retain(v39);
  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v38);
  v50 = sub_10000C5EC;
  v51 = v39;
  aBlock = _NSConcreteStackBlock;
  v47 = 1107296256;
  v48 = sub_100011720;
  v49 = &unk_1000A61B0;
  v41 = _Block_copy(&aBlock);
  v42 = objc_msgSend(v35, "actionWithTitle:style:handler:", v40, 1, v41);

  _Block_release(v41);
  v43 = v51;
  swift_release(v39);
  v44 = objc_msgSend(v2, "addAction:", v42, swift_release(v43).n128_f64[0]);

}

void sub_10000C004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = a2 + 16;
  if (qword_1000B7AB0 != -1)
    swift_once(&qword_1000B7AB0, sub_10000B930);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_1000093F8(v3, (uint64_t)qword_1000B7E60);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v7 = 134217984;
    v11 = 72;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Install FindMy App pressed in %ld", v7, 0xCu);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, &v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneInstallFindMyViewController_presenter);

    if (v10)
    {
      sub_100075520();
      swift_unknownObjectRelease(v10);
    }
  }
}

void sub_10000C15C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = a2 + 16;
  if (qword_1000B7AB0 != -1)
    swift_once(&qword_1000B7AB0, sub_10000B930);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_1000093F8(v3, (uint64_t)qword_1000B7E60);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v7 = 134217984;
    v16 = 80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Skip on Install FindMy view pressed in %ld", v7, 0xCu);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, &v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneInstallFindMyViewController_presenter);

    if (v10)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v11 = sub_1000093F8(v3, (uint64_t)qword_1000B9F80);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Requested skip Find My install", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }

      v15 = *(_QWORD *)(v10 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(_BYTE *)(v15
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 88)) = 1;
      sub_100072410(0);
      swift_unknownObjectRelease(v10);
    }
  }
}

id sub_10000C3F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneInstallFindMyViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HeadphoneInstallFindMyViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService36HeadphoneInstallFindMyViewController);
}

uint64_t sub_10000C458()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneInstallFindMyViewController_type);
}

id sub_10000C468()
{
  id v0;
  NSString v1;
  id v2;
  id v3;
  id v4;
  id result;
  void *v6;
  double v7;
  id v8;

  v0 = objc_allocWithZone((Class)ISIcon);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithBundleIdentifier:", v1);

  v3 = objc_msgSend((id)objc_opt_self(ISImageDescriptor), "imageDescriptorNamed:", kISImageDescriptorHomeScreen);
  v4 = objc_msgSend(v2, "imageForImageDescriptor:", v3);
  result = objc_msgSend(v4, "CGImage");
  if (result)
  {
    v6 = result;
    objc_msgSend(v4, "scale");
    v8 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v6, 0, v7);

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000C5A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10000C5CC(uint64_t a1)
{
  uint64_t v1;

  sub_10000C004(a1, v1);
}

uint64_t sub_10000C5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10000C5E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10000C5EC(uint64_t a1)
{
  uint64_t v1;

  sub_10000C15C(a1, v1);
}

uint64_t *sub_10000C5F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t Optional.description.getter(uint64_t a1)
{
  uint64_t v1;

  return sub_10000C648(v1, a1);
}

uint64_t sub_10000C648(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  __chkstk_darwin(a1, a1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v4);
  return String.init<A>(reflecting:)(v4, a2);
}

uint64_t sub_10000C6B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B7EB0);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B7EB0);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10000C748(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  Class isa;
  NSString v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  Class v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  objc_super v46;

  v3 = v2;
  v46.receiver = v2;
  v46.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v46, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 1);
  v4 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v44 = objc_msgSend(v4, "configurationWithPointSize:weight:", 4, 56.0);
  v5 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100087F40;
  v7 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v6 + 32) = objc_msgSend(v7, "redColor");
  v8 = objc_msgSend(v7, "tertiaryLabelColor");
  *(_QWORD *)(v6 + 40) = v8;
  specialized Array._endMutation()(v8);
  sub_100009F84(0, (unint64_t *)&qword_1000B7F00, UIColor_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v45 = objc_msgSend(v4, "configurationWithPaletteColors:", isa);

  v43 = objc_msgSend(v44, "configurationByApplyingConfiguration:", v45);
  v10 = String._bridgeToObjectiveC()();
  v42 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v10, v43);

  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v42);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = objc_msgSend(v3, "contentView");
  objc_msgSend(v12, "addSubview:", v11);

  v41 = (id)objc_opt_self(NSLayoutConstraint);
  v13 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100087700;
  v14 = objc_msgSend(v11, "topAnchor");
  v15 = objc_msgSend(v3, "contentView");
  v16 = objc_msgSend(v15, "mainContentGuide");

  v17 = objc_msgSend(v16, "topAnchor");
  v18 = objc_msgSend(v14, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v13 + 32) = v18;
  v19 = objc_msgSend(v11, "centerXAnchor");
  v20 = objc_msgSend(v3, "contentView");
  v21 = objc_msgSend(v20, "mainContentGuide");

  v22 = objc_msgSend(v21, "centerXAnchor");
  v23 = objc_msgSend(v19, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v13 + 40) = v23;
  v24 = objc_msgSend(v11, "leadingAnchor");
  v25 = objc_msgSend(v3, "contentView");
  v26 = objc_msgSend(v25, "mainContentGuide");

  v27 = objc_msgSend(v26, "leadingAnchor");
  v28 = objc_msgSend(v24, "constraintGreaterThanOrEqualToAnchor:", v27);

  *(_QWORD *)(v13 + 48) = v28;
  v29 = objc_msgSend(v11, "trailingAnchor");
  v30 = objc_msgSend(v3, "contentView");
  v31 = objc_msgSend(v30, "mainContentGuide");

  v32 = objc_msgSend(v31, "trailingAnchor");
  v33 = objc_msgSend(v29, "constraintLessThanOrEqualToAnchor:", v32);

  *(_QWORD *)(v13 + 56) = v33;
  v34 = objc_msgSend(v11, "bottomAnchor");
  v35 = objc_msgSend(v3, "contentView");
  v36 = objc_msgSend(v35, "mainContentGuide");

  v37 = objc_msgSend(v36, "bottomAnchor");
  v38 = objc_msgSend(v34, "constraintLessThanOrEqualToAnchor:", v37);

  *(_QWORD *)(v13 + 64) = v38;
  specialized Array._endMutation()(v39);
  sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
  v40 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v41, "activateConstraints:", v40);

}

id sub_10000CD70(char a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v10, "viewDidAppear:", a1 & 1);
  if (qword_1000B7AB8 != -1)
    swift_once(&qword_1000B7AB8, sub_10000C6B8);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000093F8(v4, (uint64_t)qword_1000B7EB0);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Headphone Announce Notifications intro card appeared", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  return objc_msgSend((id)objc_opt_self(SFDefaults), "setHasSeenAnnounceNotifications:", 1);
}

void sub_10000CECC(_QWORD *a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  void **v21;
  uint64_t v22;
  void (*v23)(uint64_t, void *);
  void *v24;
  void (*v25)(uint64_t);
  uint64_t v26;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v4);

  if (a1[11])
    v5 = String._bridgeToObjectiveC()();
  else
    v5 = 0;
  objc_msgSend(v1, "setBottomTrayTitle:", v5);

  v6 = a1[5];
  v7 = swift_allocObject(&unk_1000A6240, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v1);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v25 = sub_10000D3A8;
  v26 = v7;
  v21 = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_100011720;
  v24 = &unk_1000A6258;
  v9 = _Block_copy(&v21);
  v10 = (void *)objc_opt_self(PRXAction);
  v11 = objc_msgSend(v10, "actionWithTitle:style:handler:", v8, 0, v9);

  _Block_release(v9);
  v12 = v26;
  swift_release(v7);

  v13 = a1[7];
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = a1[6] & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    v15 = swift_allocObject(&unk_1000A6240, 24, 7);
    swift_unknownObjectWeakInit(v15 + 16, v1);
    swift_bridgeObjectRetain(v13);
    swift_retain(v15);
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    v25 = sub_10000D3E8;
    v26 = v15;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100011720;
    v24 = &unk_1000A6280;
    v17 = _Block_copy(&v21);
    v18 = objc_msgSend(v10, "actionWithTitle:style:handler:", v16, 1, v17);

    _Block_release(v17);
    v19 = v26;
    swift_release(v15);
    v20 = objc_msgSend(v1, "addAction:", v18, swift_release(v19).n128_f64[0]);

  }
}

void sub_10000D19C(uint64_t a1, uint64_t a2, const char *a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  _BYTE v15[24];

  v6 = a2 + 16;
  if (qword_1000B7AB8 != -1)
    swift_once(&qword_1000B7AB8, sub_10000C6B8);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_1000093F8(v7, (uint64_t)qword_1000B7EB0);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, a3, v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  swift_beginAccess(v6, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneAnnounceIntroViewController_presenter);

    if (v14)
    {
      a4();
      swift_unknownObjectRelease(v14);
    }
  }
}

uint64_t type metadata accessor for HeadphoneAnnounceIntroViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService36HeadphoneAnnounceIntroViewController);
}

uint64_t sub_10000D374()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneAnnounceIntroViewController_type);
}

uint64_t sub_10000D384()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10000D3A8(uint64_t a1)
{
  uint64_t v1;

  sub_10000D19C(a1, v1, "User selected continue button for Announce Notifications", sub_100071D78);
}

uint64_t sub_10000D3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10000D3E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10000D3E8(uint64_t a1)
{
  uint64_t v1;

  sub_10000D19C(a1, v1, "User selected customize button for Announce Notifications", sub_100072BF8);
}

_QWORD *sub_10000D418(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  int *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, int *);
  id v42;
  id v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  __int128 v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  id v86;
  id v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  void *v92;
  id v93;
  uint64_t v95;
  char *v96;
  __int128 v97;
  unsigned int (*v98)(char *, uint64_t, int *);
  int *v99;
  char *__dst;
  void *__dsta;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    v11 = a2[11];
    a1[10] = a2[10];
    a1[11] = v11;
    v12 = (void *)a2[12];
    v13 = a3[11];
    __dst = (char *)a1 + v13;
    v96 = (char *)a2 + v13;
    a1[12] = v12;
    v14 = (int *)type metadata accessor for HeadphoneAssets(0);
    v95 = *((_QWORD *)v14 - 1);
    v98 = *(unsigned int (**)(char *, uint64_t, int *))(v95 + 48);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    v15 = v12;
    if (v98(v96, 1, v14))
    {
      v16 = sub_100009F00(&qword_1000B7F18);
      memcpy(__dst, v96, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v20(__dst, v96, v18);
      v20(&__dst[v14[5]], &v96[v14[5]], v18);
      v21 = v14[6];
      v22 = &__dst[v21];
      v23 = &v96[v21];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(&v96[v21], 1, v18))
      {
        v24 = sub_100009F00(&qword_1000B7F08);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v20(v22, v23, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
      }
      v99 = v14;
      v25 = v14[7];
      v26 = &__dst[v25];
      v27 = &v96[v25];
      v28 = type metadata accessor for HeadphoneAssets.Feature(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_100009F00(&qword_1000B7F10);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v20(v26, v27, v18);
        v31 = *(int *)(v28 + 20);
        v32 = *(_QWORD *)&v27[v31];
        *(_QWORD *)&v26[v31] = v32;
        v33 = *(int *)(v28 + 24);
        v34 = *(_QWORD *)&v27[v33];
        *(_QWORD *)&v26[v33] = v34;
        v35 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
        swift_bridgeObjectRetain(v32);
        swift_bridgeObjectRetain(v34);
        v35(v26, 0, 1, v28);
      }
      v36 = v99[8];
      v37 = *(_QWORD *)&v96[v36];
      *(_QWORD *)&__dst[v36] = v37;
      v38 = v99[9];
      v39 = *(void **)&v96[v38];
      *(_QWORD *)&__dst[v38] = v39;
      v40 = v99[10];
      v97 = *(_OWORD *)&v96[v40];
      *(_OWORD *)&__dst[v40] = v97;
      v41 = *(void (**)(char *, _QWORD, uint64_t, int *))(v95 + 56);
      swift_bridgeObjectRetain(v37);
      v42 = v39;
      v43 = (id)v97;
      v41(__dst, 0, 1, v99);
    }
    v44 = a3;
    v45 = a3[12];
    v46 = a3[13];
    v47 = (_OWORD *)((char *)v4 + v45);
    v48 = (_OWORD *)((char *)a2 + v45);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    *(_OWORD *)((char *)v47 + 26) = *(_OWORD *)((char *)v48 + 26);
    v50 = (_QWORD *)((char *)v4 + v46);
    v51 = (_QWORD *)((char *)a2 + v46);
    v52 = v51[1];
    if (v52)
    {
      *v50 = *v51;
      v50[1] = v52;
      v53 = v51[3];
      v50[2] = v51[2];
      v50[3] = v53;
      swift_bridgeObjectRetain(v52);
      swift_bridgeObjectRetain(v53);
    }
    else
    {
      v54 = *((_OWORD *)v51 + 1);
      *(_OWORD *)v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v54;
    }
    v55 = a3[14];
    v56 = (char *)v4 + v55;
    v57 = (char *)a2 + v55;
    v58 = *((_QWORD *)v57 + 19);
    if (v58)
    {
      v59 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v59;
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      v56[48] = v57[48];
      *(_OWORD *)(v56 + 56) = *(_OWORD *)(v57 + 56);
      v56[72] = v57[72];
      *((_OWORD *)v56 + 5) = *((_OWORD *)v57 + 5);
      *((_QWORD *)v56 + 12) = *((_QWORD *)v57 + 12);
      v56[104] = v57[104];
      v60 = *((_OWORD *)v57 + 8);
      *((_OWORD *)v56 + 7) = *((_OWORD *)v57 + 7);
      *((_OWORD *)v56 + 8) = v60;
      *((_QWORD *)v56 + 18) = *((_QWORD *)v57 + 18);
      *((_QWORD *)v56 + 19) = v58;
      v61 = *((_QWORD *)v57 + 21);
      *((_QWORD *)v56 + 20) = *((_QWORD *)v57 + 20);
      *((_QWORD *)v56 + 21) = v61;
      v62 = *((_OWORD *)v57 + 12);
      *((_OWORD *)v56 + 11) = *((_OWORD *)v57 + 11);
      *((_OWORD *)v56 + 12) = v62;
      *((_QWORD *)v56 + 26) = *((_QWORD *)v57 + 26);
      swift_bridgeObjectRetain(v58);
      swift_bridgeObjectRetain(v61);
    }
    else
    {
      v63 = *((_OWORD *)v57 + 11);
      *((_OWORD *)v56 + 10) = *((_OWORD *)v57 + 10);
      *((_OWORD *)v56 + 11) = v63;
      *((_OWORD *)v56 + 12) = *((_OWORD *)v57 + 12);
      *((_QWORD *)v56 + 26) = *((_QWORD *)v57 + 26);
      v64 = *((_OWORD *)v57 + 7);
      *((_OWORD *)v56 + 6) = *((_OWORD *)v57 + 6);
      *((_OWORD *)v56 + 7) = v64;
      v65 = *((_OWORD *)v57 + 9);
      *((_OWORD *)v56 + 8) = *((_OWORD *)v57 + 8);
      *((_OWORD *)v56 + 9) = v65;
      v66 = *((_OWORD *)v57 + 3);
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      *((_OWORD *)v56 + 3) = v66;
      v67 = *((_OWORD *)v57 + 5);
      *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
      *((_OWORD *)v56 + 5) = v67;
      v68 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v68;
    }
    v69 = a3[16];
    *((_BYTE *)v4 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *((_BYTE *)v4 + v69) = *((_BYTE *)a2 + v69);
    v70 = a3[17];
    v71 = a3[18];
    v72 = *(_QWORD *)((char *)a2 + v70);
    *(_QWORD *)((char *)v4 + v70) = v72;
    v73 = *(_QWORD *)((char *)a2 + v71);
    *(_QWORD *)((char *)v4 + v71) = v73;
    v74 = a3[19];
    v75 = (char *)v4 + v74;
    v76 = (char *)a2 + v74;
    v77 = *(_QWORD *)((char *)a2 + v74 + 8);
    swift_bridgeObjectRetain(v72);
    swift_bridgeObjectRetain(v73);
    if (v77)
    {
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = v77;
      v78 = *((_QWORD *)v76 + 3);
      *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
      *((_QWORD *)v75 + 3) = v78;
      v75[32] = v76[32];
      v80 = (void *)*((_QWORD *)v76 + 5);
      v79 = *((_QWORD *)v76 + 6);
      *((_QWORD *)v75 + 5) = v80;
      *((_QWORD *)v75 + 6) = v79;
      v82 = *((_QWORD *)v76 + 7);
      v81 = *((_QWORD *)v76 + 8);
      *((_QWORD *)v75 + 7) = v82;
      *((_QWORD *)v75 + 8) = v81;
      v83 = *((_QWORD *)v76 + 9);
      *((_QWORD *)v75 + 9) = v83;
      v75[80] = v76[80];
      v84 = (void *)*((_QWORD *)v76 + 11);
      __dsta = (void *)*((_QWORD *)v76 + 12);
      *((_QWORD *)v75 + 11) = v84;
      *((_QWORD *)v75 + 12) = __dsta;
      v85 = *((_QWORD *)v76 + 13);
      *((_QWORD *)v75 + 13) = v85;
      swift_bridgeObjectRetain(v77);
      swift_bridgeObjectRetain(v78);
      v86 = v80;
      v44 = a3;
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRetain(v83);
      v87 = v84;
      swift_bridgeObjectRetain(__dsta);
      swift_bridgeObjectRetain(v85);
    }
    else
    {
      v88 = *((_OWORD *)v76 + 5);
      *((_OWORD *)v75 + 4) = *((_OWORD *)v76 + 4);
      *((_OWORD *)v75 + 5) = v88;
      *((_OWORD *)v75 + 6) = *((_OWORD *)v76 + 6);
      v89 = *((_OWORD *)v76 + 1);
      *(_OWORD *)v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v89;
      v90 = *((_OWORD *)v76 + 3);
      *((_OWORD *)v75 + 2) = *((_OWORD *)v76 + 2);
      *((_OWORD *)v75 + 3) = v90;
    }
    v91 = v44[21];
    *(_QWORD *)((char *)v4 + v44[20]) = *(_QWORD *)((char *)a2 + v44[20]);
    v92 = *(void **)((char *)a2 + v91);
    *(_QWORD *)((char *)v4 + v91) = v92;
    *((_BYTE *)v4 + v44[22]) = *((_BYTE *)a2 + v44[22]);
    v93 = v92;
  }
  return v4;
}

uint64_t type metadata accessor for HeadphoneAssets(uint64_t a1)
{
  return sub_10000F9AC(a1, (uint64_t *)&unk_1000B80F8, (uint64_t)&nominal type descriptor for HeadphoneAssets);
}

uint64_t type metadata accessor for HeadphoneAssets.Feature(uint64_t a1)
{
  return sub_10000F9AC(a1, qword_1000B8060, (uint64_t)&nominal type descriptor for HeadphoneAssets.Feature);
}

void sub_10000D984(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));

  v4 = a1 + a2[11];
  v5 = (int *)type metadata accessor for HeadphoneAssets(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for URL(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v8(v4, v6);
    v8(v4 + v5[5], v6);
    v9 = v4 + v5[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
      v8(v9, v6);
    v10 = v4 + v5[7];
    v11 = type metadata accessor for HeadphoneAssets.Feature(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      v8(v10, v6);
      swift_bridgeObjectRelease(*(_QWORD *)(v10 + *(int *)(v11 + 20)));
      swift_bridgeObjectRelease(*(_QWORD *)(v10 + *(int *)(v11 + 24)));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + v5[8]));

  }
  v12 = a1 + a2[13];
  v13 = *(_QWORD *)(v12 + 8);
  if (v13)
  {
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
  }
  v14 = a1 + a2[14];
  v15 = *(_QWORD *)(v14 + 152);
  if (v15)
  {
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + 168));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[17]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[18]));
  v16 = a1 + a2[19];
  v17 = *(_QWORD *)(v16 + 8);
  if (v17)
  {
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(*(_QWORD *)(v16 + 24));

    swift_bridgeObjectRelease(*(_QWORD *)(v16 + 56));
    swift_bridgeObjectRelease(*(_QWORD *)(v16 + 72));

    swift_bridgeObjectRelease(*(_QWORD *)(v16 + 96));
    swift_bridgeObjectRelease(*(_QWORD *)(v16 + 104));
  }

}

_QWORD *sub_10000DB9C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  int *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, int *);
  id v40;
  id v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  _OWORD *v46;
  __int128 v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  id v84;
  id v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v93;
  char *v94;
  __int128 v95;
  unsigned int (*v96)(char *, uint64_t, int *);
  int *v97;
  char *__dst;
  void *__dsta;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  v11 = (void *)a2[12];
  v12 = a3[11];
  __dst = (char *)a1 + v12;
  v94 = (char *)a2 + v12;
  a1[12] = v11;
  v13 = (int *)type metadata accessor for HeadphoneAssets(0);
  v93 = *((_QWORD *)v13 - 1);
  v96 = *(unsigned int (**)(char *, uint64_t, int *))(v93 + 48);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  v14 = v11;
  if (v96(v94, 1, v13))
  {
    v15 = sub_100009F00(&qword_1000B7F18);
    memcpy(__dst, v94, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for URL(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v18(__dst, v94, v16);
    v18(&__dst[v13[5]], &v94[v13[5]], v16);
    v19 = v13[6];
    v20 = &__dst[v19];
    v21 = &v94[v19];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&v94[v19], 1, v16))
    {
      v22 = sub_100009F00(&qword_1000B7F08);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v18(v20, v21, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
    }
    v97 = v13;
    v23 = v13[7];
    v24 = &__dst[v23];
    v25 = &v94[v23];
    v26 = type metadata accessor for HeadphoneAssets.Feature(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100009F00(&qword_1000B7F10);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v18(v24, v25, v16);
      v29 = *(int *)(v26 + 20);
      v30 = *(_QWORD *)&v25[v29];
      *(_QWORD *)&v24[v29] = v30;
      v31 = *(int *)(v26 + 24);
      v32 = *(_QWORD *)&v25[v31];
      *(_QWORD *)&v24[v31] = v32;
      v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRetain(v32);
      v33(v24, 0, 1, v26);
    }
    v34 = v97[8];
    v35 = *(_QWORD *)&v94[v34];
    *(_QWORD *)&__dst[v34] = v35;
    v36 = v97[9];
    v37 = *(void **)&v94[v36];
    *(_QWORD *)&__dst[v36] = v37;
    v38 = v97[10];
    v95 = *(_OWORD *)&v94[v38];
    *(_OWORD *)&__dst[v38] = v95;
    v39 = *(void (**)(char *, _QWORD, uint64_t, int *))(v93 + 56);
    swift_bridgeObjectRetain(v35);
    v40 = v37;
    v41 = (id)v95;
    v39(__dst, 0, 1, v97);
  }
  v42 = a3;
  v43 = a3[12];
  v44 = a3[13];
  v45 = (_OWORD *)((char *)a1 + v43);
  v46 = (_OWORD *)((char *)a2 + v43);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  *(_OWORD *)((char *)v45 + 26) = *(_OWORD *)((char *)v46 + 26);
  v48 = (_QWORD *)((char *)a1 + v44);
  v49 = (_QWORD *)((char *)a2 + v44);
  v50 = v49[1];
  if (v50)
  {
    *v48 = *v49;
    v48[1] = v50;
    v51 = v49[3];
    v48[2] = v49[2];
    v48[3] = v51;
    swift_bridgeObjectRetain(v50);
    swift_bridgeObjectRetain(v51);
  }
  else
  {
    v52 = *((_OWORD *)v49 + 1);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v52;
  }
  v53 = a3[14];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = *((_QWORD *)v55 + 19);
  if (v56)
  {
    v57 = *((_OWORD *)v55 + 1);
    *(_OWORD *)v54 = *(_OWORD *)v55;
    *((_OWORD *)v54 + 1) = v57;
    *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
    v54[48] = v55[48];
    *(_OWORD *)(v54 + 56) = *(_OWORD *)(v55 + 56);
    v54[72] = v55[72];
    *((_OWORD *)v54 + 5) = *((_OWORD *)v55 + 5);
    *((_QWORD *)v54 + 12) = *((_QWORD *)v55 + 12);
    v54[104] = v55[104];
    v58 = *((_OWORD *)v55 + 8);
    *((_OWORD *)v54 + 7) = *((_OWORD *)v55 + 7);
    *((_OWORD *)v54 + 8) = v58;
    *((_QWORD *)v54 + 18) = *((_QWORD *)v55 + 18);
    *((_QWORD *)v54 + 19) = v56;
    v59 = *((_QWORD *)v55 + 21);
    *((_QWORD *)v54 + 20) = *((_QWORD *)v55 + 20);
    *((_QWORD *)v54 + 21) = v59;
    v60 = *((_OWORD *)v55 + 12);
    *((_OWORD *)v54 + 11) = *((_OWORD *)v55 + 11);
    *((_OWORD *)v54 + 12) = v60;
    *((_QWORD *)v54 + 26) = *((_QWORD *)v55 + 26);
    swift_bridgeObjectRetain(v56);
    swift_bridgeObjectRetain(v59);
  }
  else
  {
    v61 = *((_OWORD *)v55 + 11);
    *((_OWORD *)v54 + 10) = *((_OWORD *)v55 + 10);
    *((_OWORD *)v54 + 11) = v61;
    *((_OWORD *)v54 + 12) = *((_OWORD *)v55 + 12);
    *((_QWORD *)v54 + 26) = *((_QWORD *)v55 + 26);
    v62 = *((_OWORD *)v55 + 7);
    *((_OWORD *)v54 + 6) = *((_OWORD *)v55 + 6);
    *((_OWORD *)v54 + 7) = v62;
    v63 = *((_OWORD *)v55 + 9);
    *((_OWORD *)v54 + 8) = *((_OWORD *)v55 + 8);
    *((_OWORD *)v54 + 9) = v63;
    v64 = *((_OWORD *)v55 + 3);
    *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
    *((_OWORD *)v54 + 3) = v64;
    v65 = *((_OWORD *)v55 + 5);
    *((_OWORD *)v54 + 4) = *((_OWORD *)v55 + 4);
    *((_OWORD *)v54 + 5) = v65;
    v66 = *((_OWORD *)v55 + 1);
    *(_OWORD *)v54 = *(_OWORD *)v55;
    *((_OWORD *)v54 + 1) = v66;
  }
  v67 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v67) = *((_BYTE *)a2 + v67);
  v68 = a3[17];
  v69 = a3[18];
  v70 = *(_QWORD *)((char *)a2 + v68);
  *(_QWORD *)((char *)a1 + v68) = v70;
  v71 = *(_QWORD *)((char *)a2 + v69);
  *(_QWORD *)((char *)a1 + v69) = v71;
  v72 = a3[19];
  v73 = (char *)a1 + v72;
  v74 = (char *)a2 + v72;
  v75 = *(_QWORD *)((char *)a2 + v72 + 8);
  swift_bridgeObjectRetain(v70);
  swift_bridgeObjectRetain(v71);
  if (v75)
  {
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *((_QWORD *)v73 + 1) = v75;
    v76 = *((_QWORD *)v74 + 3);
    *((_QWORD *)v73 + 2) = *((_QWORD *)v74 + 2);
    *((_QWORD *)v73 + 3) = v76;
    v73[32] = v74[32];
    v78 = (void *)*((_QWORD *)v74 + 5);
    v77 = *((_QWORD *)v74 + 6);
    *((_QWORD *)v73 + 5) = v78;
    *((_QWORD *)v73 + 6) = v77;
    v80 = *((_QWORD *)v74 + 7);
    v79 = *((_QWORD *)v74 + 8);
    *((_QWORD *)v73 + 7) = v80;
    *((_QWORD *)v73 + 8) = v79;
    v81 = *((_QWORD *)v74 + 9);
    *((_QWORD *)v73 + 9) = v81;
    v73[80] = v74[80];
    v82 = (void *)*((_QWORD *)v74 + 11);
    __dsta = (void *)*((_QWORD *)v74 + 12);
    *((_QWORD *)v73 + 11) = v82;
    *((_QWORD *)v73 + 12) = __dsta;
    v83 = *((_QWORD *)v74 + 13);
    *((_QWORD *)v73 + 13) = v83;
    swift_bridgeObjectRetain(v75);
    swift_bridgeObjectRetain(v76);
    v84 = v78;
    v42 = a3;
    swift_bridgeObjectRetain(v80);
    swift_bridgeObjectRetain(v81);
    v85 = v82;
    swift_bridgeObjectRetain(__dsta);
    swift_bridgeObjectRetain(v83);
  }
  else
  {
    v86 = *((_OWORD *)v74 + 5);
    *((_OWORD *)v73 + 4) = *((_OWORD *)v74 + 4);
    *((_OWORD *)v73 + 5) = v86;
    *((_OWORD *)v73 + 6) = *((_OWORD *)v74 + 6);
    v87 = *((_OWORD *)v74 + 1);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *((_OWORD *)v73 + 1) = v87;
    v88 = *((_OWORD *)v74 + 3);
    *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
    *((_OWORD *)v73 + 3) = v88;
  }
  v89 = v42[21];
  *(_QWORD *)((char *)a1 + v42[20]) = *(_QWORD *)((char *)a2 + v42[20]);
  v90 = *(void **)((char *)a2 + v89);
  *(_QWORD *)((char *)a1 + v89) = v90;
  *((_BYTE *)a1 + v42[22]) = *((_BYTE *)a2 + v42[22]);
  v91 = v90;
  return a1;
}

_QWORD *sub_10000E0B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, int *);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void (*v62)(char *, _QWORD, uint64_t, int *);
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t, uint64_t);
  int v72;
  size_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  uint64_t v93;
  char *v94;
  char *v95;
  void *v96;
  uint64_t v97;
  void *v98;
  id v99;
  uint64_t v100;
  _OWORD *v101;
  __int128 *v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  void *v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  void *v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  id v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  uint64_t v200;
  void *v201;
  void *v202;
  id v203;
  void (*v205)(uint64_t, char *, uint64_t);
  uint64_t v206;
  uint64_t v207;
  void (*__src)(char *, char *, uint64_t);
  char *v209;
  char *v210;
  int *v211;
  int *v212;
  __int128 v213;
  int *v214;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[4] = a2[4];
  v10 = a2[5];
  v11 = a1[5];
  a1[5] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[6] = a2[6];
  v12 = a2[7];
  v13 = a1[7];
  a1[7] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[8] = a2[8];
  v14 = a2[9];
  v15 = a1[9];
  a1[9] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  a1[10] = a2[10];
  v16 = a2[11];
  v17 = a1[11];
  a1[11] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = (void *)a1[12];
  v19 = (void *)a2[12];
  a1[12] = v19;
  v20 = v19;

  v21 = a3[11];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = (int *)type metadata accessor for HeadphoneAssets(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(char *, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_10000EC60((uint64_t)v22, type metadata accessor for HeadphoneAssets);
      goto LABEL_7;
    }
    v212 = a3;
    v37 = type metadata accessor for URL(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(void (**)(char *, char *, uint64_t))(v38 + 24);
    v39(v22, v23, v37);
    v205 = (void (*)(uint64_t, char *, uint64_t))v39;
    v39(&v22[v24[5]], &v23[v24[5]], v37);
    v40 = v24[6];
    v41 = &v22[v40];
    v210 = v23;
    v42 = &v23[v40];
    v206 = v38;
    v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    v44 = v43(&v22[v40], 1, v37);
    v45 = v43(v42, 1, v37);
    if (v44)
    {
      if (!v45)
      {
        (*(void (**)(char *, char *, uint64_t))(v206 + 16))(v41, v42, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v41, 0, 1, v37);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v45)
      {
        v39(v41, v42, v37);
LABEL_19:
        v66 = v24[7];
        v67 = &v22[v66];
        v68 = &v210[v66];
        v69 = type metadata accessor for HeadphoneAssets.Feature(0);
        v70 = *(_QWORD *)(v69 - 8);
        v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
        v207 = (uint64_t)v67;
        LODWORD(v67) = v71(v67, 1, v69);
        v72 = v71(v68, 1, v69);
        if ((_DWORD)v67)
        {
          if (!v72)
          {
            (*(void (**)(uint64_t, char *, uint64_t))(v206 + 16))(v207, v68, v37);
            v75 = *(int *)(v69 + 20);
            v76 = *(_QWORD *)&v68[v75];
            *(_QWORD *)(v207 + v75) = v76;
            v77 = *(int *)(v69 + 24);
            v78 = *(_QWORD *)&v68[v77];
            *(_QWORD *)(v207 + v77) = v78;
            v79 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56);
            swift_bridgeObjectRetain(v76);
            swift_bridgeObjectRetain(v78);
            v79(v207, 0, 1, v69);
            goto LABEL_28;
          }
          v73 = *(_QWORD *)(*(_QWORD *)(sub_100009F00(&qword_1000B7F10) - 8) + 64);
          v74 = (void *)v207;
        }
        else
        {
          if (!v72)
          {
            v205(v207, v68, v37);
            v80 = *(int *)(v69 + 20);
            v81 = *(_QWORD *)&v68[v80];
            v82 = *(_QWORD *)(v207 + v80);
            *(_QWORD *)(v207 + v80) = v81;
            swift_bridgeObjectRetain(v81);
            swift_bridgeObjectRelease(v82);
            v83 = *(int *)(v69 + 24);
            v84 = *(_QWORD *)&v68[v83];
            v85 = *(_QWORD *)(v207 + v83);
            *(_QWORD *)(v207 + v83) = v84;
            swift_bridgeObjectRetain(v84);
            swift_bridgeObjectRelease(v85);
            goto LABEL_28;
          }
          sub_10000EC60(v207, type metadata accessor for HeadphoneAssets.Feature);
          v73 = *(_QWORD *)(*(_QWORD *)(sub_100009F00(&qword_1000B7F10) - 8) + 64);
          v74 = (void *)v207;
        }
        memcpy(v74, v68, v73);
LABEL_28:
        a3 = v212;
        v86 = v24[8];
        v87 = *(_QWORD *)&v210[v86];
        v88 = *(_QWORD *)&v22[v86];
        *(_QWORD *)&v22[v86] = v87;
        swift_bridgeObjectRetain(v87);
        swift_bridgeObjectRelease(v88);
        v89 = v24[9];
        v90 = *(void **)&v22[v89];
        v91 = *(void **)&v210[v89];
        *(_QWORD *)&v22[v89] = v91;
        v92 = v91;

        v93 = v24[10];
        v94 = &v22[v93];
        v95 = &v210[v93];
        v96 = *(void **)v95;
        v97 = *((_QWORD *)v95 + 1);
        v98 = *(void **)v94;
        *(_QWORD *)v94 = *(_QWORD *)v95;
        v99 = v96;

        *((_QWORD *)v94 + 1) = v97;
        goto LABEL_29;
      }
      (*(void (**)(char *, uint64_t))(v206 + 8))(v41, v37);
    }
    v65 = sub_100009F00(&qword_1000B7F08);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_19;
  }
  if (v28)
  {
LABEL_7:
    v36 = sub_100009F00(&qword_1000B7F18);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_29;
  }
  v211 = a3;
  v29 = type metadata accessor for URL(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v31(v22, v23, v29);
  v31(&v22[v24[5]], &v23[v24[5]], v29);
  v32 = v24[6];
  v33 = &v22[v32];
  v209 = v23;
  v34 = &v23[v32];
  __src = v31;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v34, 1, v29))
  {
    v35 = sub_100009F00(&qword_1000B7F08);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v31(v33, v34, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
  }
  v46 = v24[7];
  v47 = &v22[v46];
  v48 = &v209[v46];
  v49 = type metadata accessor for HeadphoneAssets.Feature(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = sub_100009F00(&qword_1000B7F10);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    __src(v47, v48, v29);
    v52 = *(int *)(v49 + 20);
    v53 = *(_QWORD *)&v48[v52];
    *(_QWORD *)&v47[v52] = v53;
    v54 = *(int *)(v49 + 24);
    v55 = *(_QWORD *)&v48[v54];
    *(_QWORD *)&v47[v54] = v55;
    v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56);
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRetain(v55);
    v56(v47, 0, 1, v49);
  }
  a3 = v211;
  v57 = v24[8];
  v58 = *(_QWORD *)&v209[v57];
  *(_QWORD *)&v22[v57] = v58;
  v59 = v24[9];
  v60 = *(void **)&v209[v59];
  *(_QWORD *)&v22[v59] = v60;
  v61 = v24[10];
  v213 = *(_OWORD *)&v209[v61];
  *(_OWORD *)&v22[v61] = v213;
  v62 = *(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56);
  swift_bridgeObjectRetain(v58);
  v63 = v60;
  v64 = (id)v213;
  v62(v22, 0, 1, v24);
LABEL_29:
  v100 = a3[12];
  v101 = (_OWORD *)((char *)a1 + v100);
  v102 = (__int128 *)((char *)a2 + v100);
  v103 = *v102;
  v104 = v102[1];
  *(_OWORD *)((char *)v101 + 26) = *(__int128 *)((char *)v102 + 26);
  *v101 = v103;
  v101[1] = v104;
  v105 = a3[13];
  v106 = (_QWORD *)((char *)a1 + v105);
  v107 = (_QWORD *)((char *)a2 + v105);
  v108 = *(_QWORD *)((char *)a1 + v105 + 8);
  v109 = *(_QWORD *)((char *)a2 + v105 + 8);
  if (v108)
  {
    if (v109)
    {
      *v106 = *v107;
      v110 = v107[1];
      v106[1] = v110;
      swift_bridgeObjectRetain(v110);
      swift_bridgeObjectRelease(v108);
      v106[2] = v107[2];
      v111 = v107[3];
      v112 = v106[3];
      v106[3] = v111;
      swift_bridgeObjectRetain(v111);
      swift_bridgeObjectRelease(v112);
    }
    else
    {
      sub_10000EC9C((uint64_t)v106);
      v115 = *((_OWORD *)v107 + 1);
      *(_OWORD *)v106 = *(_OWORD *)v107;
      *((_OWORD *)v106 + 1) = v115;
    }
  }
  else if (v109)
  {
    *v106 = *v107;
    v113 = v107[1];
    v106[1] = v113;
    v106[2] = v107[2];
    v114 = v107[3];
    v106[3] = v114;
    swift_bridgeObjectRetain(v113);
    swift_bridgeObjectRetain(v114);
  }
  else
  {
    v116 = *((_OWORD *)v107 + 1);
    *(_OWORD *)v106 = *(_OWORD *)v107;
    *((_OWORD *)v106 + 1) = v116;
  }
  v117 = a3[14];
  v118 = (uint64_t)a1 + v117;
  v119 = (char *)a2 + v117;
  v120 = *(_QWORD *)((char *)a1 + v117 + 152);
  v121 = *(_QWORD *)((char *)a2 + v117 + 152);
  if (v120)
  {
    if (v121)
    {
      *(_QWORD *)v118 = *(_QWORD *)v119;
      *(_QWORD *)(v118 + 8) = *((_QWORD *)v119 + 1);
      *(_QWORD *)(v118 + 16) = *((_QWORD *)v119 + 2);
      *(_QWORD *)(v118 + 24) = *((_QWORD *)v119 + 3);
      v122 = *((_OWORD *)v119 + 2);
      *(_BYTE *)(v118 + 48) = v119[48];
      *(_OWORD *)(v118 + 32) = v122;
      v123 = *(_OWORD *)(v119 + 56);
      *(_BYTE *)(v118 + 72) = v119[72];
      *(_OWORD *)(v118 + 56) = v123;
      *(_QWORD *)(v118 + 80) = *((_QWORD *)v119 + 10);
      *(_QWORD *)(v118 + 88) = *((_QWORD *)v119 + 11);
      *(_QWORD *)(v118 + 96) = *((_QWORD *)v119 + 12);
      *(_BYTE *)(v118 + 104) = v119[104];
      *(_QWORD *)(v118 + 112) = *((_QWORD *)v119 + 14);
      *(_QWORD *)(v118 + 120) = *((_QWORD *)v119 + 15);
      *(_QWORD *)(v118 + 128) = *((_QWORD *)v119 + 16);
      *(_QWORD *)(v118 + 136) = *((_QWORD *)v119 + 17);
      *(_QWORD *)(v118 + 144) = *((_QWORD *)v119 + 18);
      v124 = *((_QWORD *)v119 + 19);
      *(_QWORD *)(v118 + 152) = v124;
      swift_bridgeObjectRetain(v124);
      swift_bridgeObjectRelease(v120);
      *(_QWORD *)(v118 + 160) = *((_QWORD *)v119 + 20);
      v125 = *((_QWORD *)v119 + 21);
      v126 = *(_QWORD *)(v118 + 168);
      *(_QWORD *)(v118 + 168) = v125;
      swift_bridgeObjectRetain(v125);
      swift_bridgeObjectRelease(v126);
      *(_QWORD *)(v118 + 176) = *((_QWORD *)v119 + 22);
      *(_QWORD *)(v118 + 184) = *((_QWORD *)v119 + 23);
      *(_QWORD *)(v118 + 192) = *((_QWORD *)v119 + 24);
      *(_QWORD *)(v118 + 200) = *((_QWORD *)v119 + 25);
      *(_QWORD *)(v118 + 208) = *((_QWORD *)v119 + 26);
    }
    else
    {
      sub_10000ECDC(v118);
      v132 = *((_OWORD *)v119 + 1);
      *(_OWORD *)v118 = *(_OWORD *)v119;
      *(_OWORD *)(v118 + 16) = v132;
      v133 = *((_OWORD *)v119 + 5);
      v135 = *((_OWORD *)v119 + 2);
      v134 = *((_OWORD *)v119 + 3);
      *(_OWORD *)(v118 + 64) = *((_OWORD *)v119 + 4);
      *(_OWORD *)(v118 + 80) = v133;
      *(_OWORD *)(v118 + 32) = v135;
      *(_OWORD *)(v118 + 48) = v134;
      v136 = *((_OWORD *)v119 + 9);
      v138 = *((_OWORD *)v119 + 6);
      v137 = *((_OWORD *)v119 + 7);
      *(_OWORD *)(v118 + 128) = *((_OWORD *)v119 + 8);
      *(_OWORD *)(v118 + 144) = v136;
      *(_OWORD *)(v118 + 96) = v138;
      *(_OWORD *)(v118 + 112) = v137;
      v140 = *((_OWORD *)v119 + 11);
      v139 = *((_OWORD *)v119 + 12);
      v141 = *((_OWORD *)v119 + 10);
      *(_QWORD *)(v118 + 208) = *((_QWORD *)v119 + 26);
      *(_OWORD *)(v118 + 176) = v140;
      *(_OWORD *)(v118 + 192) = v139;
      *(_OWORD *)(v118 + 160) = v141;
    }
  }
  else if (v121)
  {
    *(_OWORD *)v118 = *(_OWORD *)v119;
    *(_OWORD *)(v118 + 16) = *((_OWORD *)v119 + 1);
    v127 = *((_OWORD *)v119 + 2);
    *(_BYTE *)(v118 + 48) = v119[48];
    *(_OWORD *)(v118 + 32) = v127;
    v128 = *(_OWORD *)(v119 + 56);
    *(_BYTE *)(v118 + 72) = v119[72];
    *(_OWORD *)(v118 + 56) = v128;
    *(_OWORD *)(v118 + 80) = *((_OWORD *)v119 + 5);
    *(_QWORD *)(v118 + 96) = *((_QWORD *)v119 + 12);
    *(_BYTE *)(v118 + 104) = v119[104];
    *(_OWORD *)(v118 + 112) = *((_OWORD *)v119 + 7);
    *(_OWORD *)(v118 + 128) = *((_OWORD *)v119 + 8);
    *(_QWORD *)(v118 + 144) = *((_QWORD *)v119 + 18);
    v129 = *((_QWORD *)v119 + 19);
    *(_QWORD *)(v118 + 152) = v129;
    *(_QWORD *)(v118 + 160) = *((_QWORD *)v119 + 20);
    v130 = *((_QWORD *)v119 + 21);
    *(_QWORD *)(v118 + 168) = v130;
    *(_QWORD *)(v118 + 176) = *((_QWORD *)v119 + 22);
    *(_QWORD *)(v118 + 184) = *((_QWORD *)v119 + 23);
    v131 = *((_OWORD *)v119 + 12);
    *(_QWORD *)(v118 + 208) = *((_QWORD *)v119 + 26);
    *(_OWORD *)(v118 + 192) = v131;
    swift_bridgeObjectRetain(v129);
    swift_bridgeObjectRetain(v130);
  }
  else
  {
    v142 = *((_OWORD *)v119 + 1);
    *(_OWORD *)v118 = *(_OWORD *)v119;
    *(_OWORD *)(v118 + 16) = v142;
    v143 = *((_OWORD *)v119 + 2);
    v144 = *((_OWORD *)v119 + 3);
    v145 = *((_OWORD *)v119 + 5);
    *(_OWORD *)(v118 + 64) = *((_OWORD *)v119 + 4);
    *(_OWORD *)(v118 + 80) = v145;
    *(_OWORD *)(v118 + 32) = v143;
    *(_OWORD *)(v118 + 48) = v144;
    v146 = *((_OWORD *)v119 + 6);
    v147 = *((_OWORD *)v119 + 7);
    v148 = *((_OWORD *)v119 + 9);
    *(_OWORD *)(v118 + 128) = *((_OWORD *)v119 + 8);
    *(_OWORD *)(v118 + 144) = v148;
    *(_OWORD *)(v118 + 96) = v146;
    *(_OWORD *)(v118 + 112) = v147;
    v149 = *((_OWORD *)v119 + 10);
    v150 = *((_OWORD *)v119 + 11);
    v151 = *((_OWORD *)v119 + 12);
    *(_QWORD *)(v118 + 208) = *((_QWORD *)v119 + 26);
    *(_OWORD *)(v118 + 176) = v150;
    *(_OWORD *)(v118 + 192) = v151;
    *(_OWORD *)(v118 + 160) = v149;
  }
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  v152 = a3[17];
  v153 = *(_QWORD *)((char *)a2 + v152);
  v154 = *(_QWORD *)((char *)a1 + v152);
  *(_QWORD *)((char *)a1 + v152) = v153;
  swift_bridgeObjectRetain(v153);
  swift_bridgeObjectRelease(v154);
  v155 = a3[18];
  v156 = *(_QWORD *)((char *)a2 + v155);
  v157 = *(_QWORD *)((char *)a1 + v155);
  *(_QWORD *)((char *)a1 + v155) = v156;
  swift_bridgeObjectRetain(v156);
  swift_bridgeObjectRelease(v157);
  v158 = a3[19];
  v159 = (uint64_t)a1 + v158;
  v160 = (char *)a2 + v158;
  v161 = *(_QWORD *)((char *)a1 + v158 + 8);
  v162 = *(_QWORD *)((char *)a2 + v158 + 8);
  if (v161)
  {
    if (v162)
    {
      *(_QWORD *)v159 = *(_QWORD *)v160;
      v163 = *((_QWORD *)v160 + 1);
      *(_QWORD *)(v159 + 8) = v163;
      swift_bridgeObjectRetain(v163);
      swift_bridgeObjectRelease(v161);
      *(_QWORD *)(v159 + 16) = *((_QWORD *)v160 + 2);
      v164 = *((_QWORD *)v160 + 3);
      v165 = *(_QWORD *)(v159 + 24);
      *(_QWORD *)(v159 + 24) = v164;
      swift_bridgeObjectRetain(v164);
      swift_bridgeObjectRelease(v165);
      *(_BYTE *)(v159 + 32) = v160[32];
      v166 = *(void **)(v159 + 40);
      v167 = (void *)*((_QWORD *)v160 + 5);
      *(_QWORD *)(v159 + 40) = v167;
      v168 = v167;

      *(_QWORD *)(v159 + 48) = *((_QWORD *)v160 + 6);
      v169 = *((_QWORD *)v160 + 7);
      v170 = *(_QWORD *)(v159 + 56);
      *(_QWORD *)(v159 + 56) = v169;
      swift_bridgeObjectRetain(v169);
      swift_bridgeObjectRelease(v170);
      *(_QWORD *)(v159 + 64) = *((_QWORD *)v160 + 8);
      v171 = *((_QWORD *)v160 + 9);
      v172 = *(_QWORD *)(v159 + 72);
      *(_QWORD *)(v159 + 72) = v171;
      swift_bridgeObjectRetain(v171);
      swift_bridgeObjectRelease(v172);
      *(_BYTE *)(v159 + 80) = v160[80];
      v173 = *(void **)(v159 + 88);
      v174 = (void *)*((_QWORD *)v160 + 11);
      *(_QWORD *)(v159 + 88) = v174;
      v175 = v174;

      v176 = *((_QWORD *)v160 + 12);
      v177 = *(_QWORD *)(v159 + 96);
      *(_QWORD *)(v159 + 96) = v176;
      swift_bridgeObjectRetain(v176);
      swift_bridgeObjectRelease(v177);
      v178 = *((_QWORD *)v160 + 13);
      v179 = *(_QWORD *)(v159 + 104);
      *(_QWORD *)(v159 + 104) = v178;
      swift_bridgeObjectRetain(v178);
      swift_bridgeObjectRelease(v179);
    }
    else
    {
      sub_10000ED10(v159);
      v191 = *((_OWORD *)v160 + 1);
      v190 = *((_OWORD *)v160 + 2);
      *(_OWORD *)v159 = *(_OWORD *)v160;
      *(_OWORD *)(v159 + 16) = v191;
      *(_OWORD *)(v159 + 32) = v190;
      v192 = *((_OWORD *)v160 + 6);
      v194 = *((_OWORD *)v160 + 3);
      v193 = *((_OWORD *)v160 + 4);
      *(_OWORD *)(v159 + 80) = *((_OWORD *)v160 + 5);
      *(_OWORD *)(v159 + 96) = v192;
      *(_OWORD *)(v159 + 48) = v194;
      *(_OWORD *)(v159 + 64) = v193;
    }
  }
  else if (v162)
  {
    *(_QWORD *)v159 = *(_QWORD *)v160;
    v180 = *((_QWORD *)v160 + 1);
    *(_QWORD *)(v159 + 8) = v180;
    *(_QWORD *)(v159 + 16) = *((_QWORD *)v160 + 2);
    v181 = *((_QWORD *)v160 + 3);
    *(_QWORD *)(v159 + 24) = v181;
    *(_BYTE *)(v159 + 32) = v160[32];
    v214 = a3;
    v182 = (void *)*((_QWORD *)v160 + 5);
    *(_QWORD *)(v159 + 40) = v182;
    *(_QWORD *)(v159 + 48) = *((_QWORD *)v160 + 6);
    v183 = *((_QWORD *)v160 + 7);
    *(_QWORD *)(v159 + 56) = v183;
    *(_QWORD *)(v159 + 64) = *((_QWORD *)v160 + 8);
    v184 = *((_QWORD *)v160 + 9);
    *(_QWORD *)(v159 + 72) = v184;
    *(_BYTE *)(v159 + 80) = v160[80];
    v185 = (void *)*((_QWORD *)v160 + 11);
    *(_QWORD *)(v159 + 88) = v185;
    v186 = *((_QWORD *)v160 + 12);
    *(_QWORD *)(v159 + 96) = v186;
    v187 = *((_QWORD *)v160 + 13);
    *(_QWORD *)(v159 + 104) = v187;
    swift_bridgeObjectRetain(v180);
    swift_bridgeObjectRetain(v181);
    v188 = v182;
    a3 = v214;
    swift_bridgeObjectRetain(v183);
    swift_bridgeObjectRetain(v184);
    v189 = v185;
    swift_bridgeObjectRetain(v186);
    swift_bridgeObjectRetain(v187);
  }
  else
  {
    v195 = *(_OWORD *)v160;
    v196 = *((_OWORD *)v160 + 2);
    *(_OWORD *)(v159 + 16) = *((_OWORD *)v160 + 1);
    *(_OWORD *)(v159 + 32) = v196;
    *(_OWORD *)v159 = v195;
    v197 = *((_OWORD *)v160 + 3);
    v198 = *((_OWORD *)v160 + 4);
    v199 = *((_OWORD *)v160 + 6);
    *(_OWORD *)(v159 + 80) = *((_OWORD *)v160 + 5);
    *(_OWORD *)(v159 + 96) = v199;
    *(_OWORD *)(v159 + 48) = v197;
    *(_OWORD *)(v159 + 64) = v198;
  }
  *(_QWORD *)((char *)a1 + a3[20]) = *(_QWORD *)((char *)a2 + a3[20]);
  v200 = a3[21];
  v201 = *(void **)((char *)a1 + v200);
  v202 = *(void **)((char *)a2 + v200);
  *(_QWORD *)((char *)a1 + v200) = v202;
  v203 = v202;

  *((_BYTE *)a1 + a3[22]) = *((_BYTE *)a2 + a3[22]);
  return a1;
}

uint64_t sub_10000EC60(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000EC9C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100009F00(&qword_1000B7F20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000ECDC(uint64_t a1)
{
  destroy for HeadphoneLayoutMetrics(a1);
  return a1;
}

uint64_t sub_10000ED10(uint64_t a1)
{
  destroy for HeadphoneModel.AnnounceNotificationSources(a1);
  return a1;
}

uint64_t sub_10000ED44(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *__dst;
  char *__dsta;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = a3[11];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v9;
  v13 = (int *)type metadata accessor for HeadphoneAssets(0);
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100009F00(&qword_1000B7F18);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v57 = v14;
    v16 = type metadata accessor for URL(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v18(v11, v12, v16);
    v18(&v11[v13[5]], &v12[v13[5]], v16);
    v19 = v13[6];
    __dst = &v11[v19];
    v20 = &v12[v19];
    v56 = v18;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&v12[v19], 1, v16))
    {
      v21 = sub_100009F00(&qword_1000B7F08);
      memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v18(__dst, v20, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    v22 = v13[7];
    __dsta = &v11[v22];
    v23 = &v12[v22];
    v24 = type metadata accessor for HeadphoneAssets.Feature(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_100009F00(&qword_1000B7F10);
      memcpy(__dsta, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v56(__dsta, v23, v16);
      *(_QWORD *)&__dsta[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
      *(_QWORD *)&__dsta[*(int *)(v24 + 24)] = *(_QWORD *)&v23[*(int *)(v24 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dsta, 0, 1, v24);
    }
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    *(_QWORD *)&v11[v13[9]] = *(_QWORD *)&v12[v13[9]];
    *(_OWORD *)&v11[v13[10]] = *(_OWORD *)&v12[v13[10]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v57 + 56))(v11, 0, 1, v13);
  }
  v27 = a3[12];
  v28 = a3[13];
  v29 = (_OWORD *)(a1 + v27);
  v30 = (_OWORD *)(a2 + v27);
  *(_OWORD *)((char *)v29 + 26) = *(_OWORD *)((char *)v30 + 26);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = (_OWORD *)(a1 + v28);
  v33 = (_OWORD *)(a2 + v28);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = a3[14];
  v36 = a3[15];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_QWORD *)(v37 + 208) = *(_QWORD *)(v38 + 208);
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  v40 = *(_OWORD *)(v38 + 80);
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(_OWORD *)(v37 + 80) = v40;
  v41 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v41;
  v42 = *(_OWORD *)(v38 + 144);
  *(_OWORD *)(v37 + 128) = *(_OWORD *)(v38 + 128);
  *(_OWORD *)(v37 + 144) = v42;
  v43 = *(_OWORD *)(v38 + 112);
  *(_OWORD *)(v37 + 96) = *(_OWORD *)(v38 + 96);
  *(_OWORD *)(v37 + 112) = v43;
  v44 = *(_OWORD *)(v38 + 192);
  v45 = *(_OWORD *)(v38 + 160);
  *(_OWORD *)(v37 + 176) = *(_OWORD *)(v38 + 176);
  *(_OWORD *)(v37 + 192) = v44;
  *(_OWORD *)(v37 + 160) = v45;
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  v46 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(a2 + v46);
  v47 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  v48 = (_OWORD *)(a1 + v47);
  v49 = (_OWORD *)(a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = v49[6];
  v52 = v49[4];
  v48[5] = v49[5];
  v48[6] = v51;
  v53 = v49[3];
  v48[2] = v49[2];
  v48[3] = v53;
  v48[4] = v52;
  v54 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  return a1;
}

_QWORD *sub_10000F094(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  size_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  __int128 v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  void *v122;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  void (*v127)(char *, char *, uint64_t);
  uint64_t v128;
  char *__dst;
  char *__dsta;
  char *v131;
  char *v132;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[9];
  v15 = a1[9];
  a1[8] = a2[8];
  a1[9] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = a2[11];
  v17 = a1[11];
  a1[10] = a2[10];
  a1[11] = v16;
  swift_bridgeObjectRelease(v17);
  v18 = (void *)a1[12];
  a1[12] = a2[12];

  v19 = a3[11];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = (int *)type metadata accessor for HeadphoneAssets(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (v26)
    {
      sub_10000EC60((uint64_t)v20, type metadata accessor for HeadphoneAssets);
      goto LABEL_7;
    }
    v34 = type metadata accessor for URL(0);
    v35 = *(_QWORD *)(v34 - 8);
    v36 = *(void (**)(char *, char *, uint64_t))(v35 + 40);
    v36(v20, v21, v34);
    v125 = v36;
    v36(&v20[v22[5]], &v21[v22[5]], v34);
    v37 = v22[6];
    v38 = &v20[v37];
    v132 = v21;
    v39 = &v21[v37];
    v126 = v35;
    v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
    LODWORD(v35) = v40(&v20[v37], 1, v34);
    v41 = v40(v39, 1, v34);
    if ((_DWORD)v35)
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v38, v39, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v38, 0, 1, v34);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v41)
      {
        v125(v38, v39, v34);
LABEL_19:
        v48 = v22[7];
        v49 = &v20[v48];
        v50 = &v132[v48];
        v51 = type metadata accessor for HeadphoneAssets.Feature(0);
        v124 = *(_QWORD *)(v51 - 8);
        v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 48);
        v128 = (uint64_t)v49;
        LODWORD(v49) = v52(v49, 1, v51);
        v53 = v52(v50, 1, v51);
        if ((_DWORD)v49)
        {
          if (!v53)
          {
            (*(void (**)(uint64_t, char *, uint64_t))(v126 + 32))(v128, v50, v34);
            *(_QWORD *)(v128 + *(int *)(v51 + 20)) = *(_QWORD *)&v50[*(int *)(v51 + 20)];
            *(_QWORD *)(v128 + *(int *)(v51 + 24)) = *(_QWORD *)&v50[*(int *)(v51 + 24)];
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v124 + 56))(v128, 0, 1, v51);
            goto LABEL_28;
          }
          v54 = *(_QWORD *)(*(_QWORD *)(sub_100009F00(&qword_1000B7F10) - 8) + 64);
          v55 = (void *)v128;
        }
        else
        {
          if (!v53)
          {
            v125((char *)v128, v50, v34);
            v56 = *(int *)(v51 + 20);
            v57 = *(_QWORD *)(v128 + v56);
            *(_QWORD *)(v128 + v56) = *(_QWORD *)&v50[v56];
            swift_bridgeObjectRelease(v57);
            v58 = *(int *)(v51 + 24);
            v59 = *(_QWORD *)(v128 + v58);
            *(_QWORD *)(v128 + v58) = *(_QWORD *)&v50[v58];
            swift_bridgeObjectRelease(v59);
            goto LABEL_28;
          }
          sub_10000EC60(v128, type metadata accessor for HeadphoneAssets.Feature);
          v54 = *(_QWORD *)(*(_QWORD *)(sub_100009F00(&qword_1000B7F10) - 8) + 64);
          v55 = (void *)v128;
        }
        memcpy(v55, v50, v54);
LABEL_28:
        v60 = v22[8];
        v61 = *(_QWORD *)&v20[v60];
        *(_QWORD *)&v20[v60] = *(_QWORD *)&v132[v60];
        swift_bridgeObjectRelease(v61);
        v62 = v22[9];
        v63 = *(void **)&v20[v62];
        *(_QWORD *)&v20[v62] = *(_QWORD *)&v132[v62];

        v64 = v22[10];
        v65 = &v20[v64];
        v66 = &v132[v64];
        v67 = *(_QWORD *)v66;
        v68 = *((_QWORD *)v66 + 1);
        v69 = *(void **)v65;
        *(_QWORD *)v65 = v67;

        *((_QWORD *)v65 + 1) = v68;
        goto LABEL_29;
      }
      (*(void (**)(char *, uint64_t))(v126 + 8))(v38, v34);
    }
    v47 = sub_100009F00(&qword_1000B7F08);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_19;
  }
  if (v26)
  {
LABEL_7:
    v33 = sub_100009F00(&qword_1000B7F18);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_29;
  }
  v27 = type metadata accessor for URL(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v29(v20, v21, v27);
  v29(&v20[v22[5]], &v21[v22[5]], v27);
  v30 = v22[6];
  __dst = &v20[v30];
  v131 = v21;
  v31 = &v21[v30];
  v127 = v29;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v31, 1, v27))
  {
    v32 = sub_100009F00(&qword_1000B7F08);
    memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v29(__dst, v31, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
  }
  v42 = v22[7];
  __dsta = &v20[v42];
  v43 = &v131[v42];
  v44 = type metadata accessor for HeadphoneAssets.Feature(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = sub_100009F00(&qword_1000B7F10);
    memcpy(__dsta, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v127(__dsta, v43, v27);
    *(_QWORD *)&__dsta[*(int *)(v44 + 20)] = *(_QWORD *)&v43[*(int *)(v44 + 20)];
    *(_QWORD *)&__dsta[*(int *)(v44 + 24)] = *(_QWORD *)&v43[*(int *)(v44 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dsta, 0, 1, v44);
  }
  *(_QWORD *)&v20[v22[8]] = *(_QWORD *)&v131[v22[8]];
  *(_QWORD *)&v20[v22[9]] = *(_QWORD *)&v131[v22[9]];
  *(_OWORD *)&v20[v22[10]] = *(_OWORD *)&v131[v22[10]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
LABEL_29:
  v70 = a3[12];
  v71 = a3[13];
  v72 = (_OWORD *)((char *)a1 + v70);
  v73 = (_OWORD *)((char *)a2 + v70);
  v74 = v73[1];
  *v72 = *v73;
  v72[1] = v74;
  *(_OWORD *)((char *)v72 + 26) = *(_OWORD *)((char *)v73 + 26);
  v75 = (_QWORD *)((char *)a1 + v71);
  v76 = (_QWORD *)((char *)a2 + v71);
  v77 = *(_QWORD *)((char *)a1 + v71 + 8);
  if (v77)
  {
    v78 = v76[1];
    if (v78)
    {
      *v75 = *v76;
      v75[1] = v78;
      swift_bridgeObjectRelease(v77);
      v79 = v76[3];
      v80 = v75[3];
      v75[2] = v76[2];
      v75[3] = v79;
      swift_bridgeObjectRelease(v80);
      goto LABEL_34;
    }
    sub_10000EC9C((uint64_t)a1 + v71);
  }
  v81 = *((_OWORD *)v76 + 1);
  *(_OWORD *)v75 = *(_OWORD *)v76;
  *((_OWORD *)v75 + 1) = v81;
LABEL_34:
  v82 = a3[14];
  v83 = (uint64_t)a1 + v82;
  v84 = (char *)a2 + v82;
  v85 = *(_QWORD *)((char *)a1 + v82 + 152);
  if (v85)
  {
    v86 = *((_QWORD *)v84 + 19);
    if (v86)
    {
      v87 = *((_OWORD *)v84 + 1);
      *(_OWORD *)v83 = *(_OWORD *)v84;
      *(_OWORD *)(v83 + 16) = v87;
      *(_OWORD *)(v83 + 32) = *((_OWORD *)v84 + 2);
      *(_BYTE *)(v83 + 48) = v84[48];
      *(_OWORD *)(v83 + 56) = *(_OWORD *)(v84 + 56);
      *(_BYTE *)(v83 + 72) = v84[72];
      *(_OWORD *)(v83 + 80) = *((_OWORD *)v84 + 5);
      *(_QWORD *)(v83 + 96) = *((_QWORD *)v84 + 12);
      *(_BYTE *)(v83 + 104) = v84[104];
      v88 = *((_OWORD *)v84 + 8);
      *(_OWORD *)(v83 + 112) = *((_OWORD *)v84 + 7);
      *(_OWORD *)(v83 + 128) = v88;
      *(_QWORD *)(v83 + 144) = *((_QWORD *)v84 + 18);
      *(_QWORD *)(v83 + 152) = v86;
      swift_bridgeObjectRelease(v85);
      v89 = *((_QWORD *)v84 + 21);
      v90 = *(_QWORD *)(v83 + 168);
      *(_QWORD *)(v83 + 160) = *((_QWORD *)v84 + 20);
      *(_QWORD *)(v83 + 168) = v89;
      swift_bridgeObjectRelease(v90);
      v91 = *((_OWORD *)v84 + 12);
      *(_OWORD *)(v83 + 176) = *((_OWORD *)v84 + 11);
      *(_OWORD *)(v83 + 192) = v91;
      *(_QWORD *)(v83 + 208) = *((_QWORD *)v84 + 26);
      goto LABEL_39;
    }
    sub_10000ECDC(v83);
  }
  v92 = *((_OWORD *)v84 + 11);
  *(_OWORD *)(v83 + 160) = *((_OWORD *)v84 + 10);
  *(_OWORD *)(v83 + 176) = v92;
  *(_OWORD *)(v83 + 192) = *((_OWORD *)v84 + 12);
  *(_QWORD *)(v83 + 208) = *((_QWORD *)v84 + 26);
  v93 = *((_OWORD *)v84 + 7);
  *(_OWORD *)(v83 + 96) = *((_OWORD *)v84 + 6);
  *(_OWORD *)(v83 + 112) = v93;
  v94 = *((_OWORD *)v84 + 9);
  *(_OWORD *)(v83 + 128) = *((_OWORD *)v84 + 8);
  *(_OWORD *)(v83 + 144) = v94;
  v95 = *((_OWORD *)v84 + 3);
  *(_OWORD *)(v83 + 32) = *((_OWORD *)v84 + 2);
  *(_OWORD *)(v83 + 48) = v95;
  v96 = *((_OWORD *)v84 + 5);
  *(_OWORD *)(v83 + 64) = *((_OWORD *)v84 + 4);
  *(_OWORD *)(v83 + 80) = v96;
  v97 = *((_OWORD *)v84 + 1);
  *(_OWORD *)v83 = *(_OWORD *)v84;
  *(_OWORD *)(v83 + 16) = v97;
LABEL_39:
  v98 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v98) = *((_BYTE *)a2 + v98);
  v99 = a3[17];
  v100 = *(_QWORD *)((char *)a1 + v99);
  *(_QWORD *)((char *)a1 + v99) = *(_QWORD *)((char *)a2 + v99);
  swift_bridgeObjectRelease(v100);
  v101 = a3[18];
  v102 = *(_QWORD *)((char *)a1 + v101);
  *(_QWORD *)((char *)a1 + v101) = *(_QWORD *)((char *)a2 + v101);
  swift_bridgeObjectRelease(v102);
  v103 = a3[19];
  v104 = (uint64_t)a1 + v103;
  v105 = (char *)a2 + v103;
  v106 = *(_QWORD *)((char *)a1 + v103 + 8);
  if (!v106)
  {
LABEL_43:
    v118 = *((_OWORD *)v105 + 5);
    *(_OWORD *)(v104 + 64) = *((_OWORD *)v105 + 4);
    *(_OWORD *)(v104 + 80) = v118;
    *(_OWORD *)(v104 + 96) = *((_OWORD *)v105 + 6);
    v119 = *((_OWORD *)v105 + 1);
    *(_OWORD *)v104 = *(_OWORD *)v105;
    *(_OWORD *)(v104 + 16) = v119;
    v120 = *((_OWORD *)v105 + 3);
    *(_OWORD *)(v104 + 32) = *((_OWORD *)v105 + 2);
    *(_OWORD *)(v104 + 48) = v120;
    goto LABEL_44;
  }
  v107 = *((_QWORD *)v105 + 1);
  if (!v107)
  {
    sub_10000ED10(v104);
    goto LABEL_43;
  }
  *(_QWORD *)v104 = *(_QWORD *)v105;
  *(_QWORD *)(v104 + 8) = v107;
  swift_bridgeObjectRelease(v106);
  v108 = *((_QWORD *)v105 + 3);
  v109 = *(_QWORD *)(v104 + 24);
  *(_QWORD *)(v104 + 16) = *((_QWORD *)v105 + 2);
  *(_QWORD *)(v104 + 24) = v108;
  swift_bridgeObjectRelease(v109);
  *(_BYTE *)(v104 + 32) = v105[32];
  v110 = *(void **)(v104 + 40);
  *(_QWORD *)(v104 + 40) = *((_QWORD *)v105 + 5);

  v111 = *((_QWORD *)v105 + 7);
  v112 = *(_QWORD *)(v104 + 56);
  *(_QWORD *)(v104 + 48) = *((_QWORD *)v105 + 6);
  *(_QWORD *)(v104 + 56) = v111;
  swift_bridgeObjectRelease(v112);
  v113 = *((_QWORD *)v105 + 9);
  v114 = *(_QWORD *)(v104 + 72);
  *(_QWORD *)(v104 + 64) = *((_QWORD *)v105 + 8);
  *(_QWORD *)(v104 + 72) = v113;
  swift_bridgeObjectRelease(v114);
  *(_BYTE *)(v104 + 80) = v105[80];
  v115 = *(void **)(v104 + 88);
  *(_QWORD *)(v104 + 88) = *((_QWORD *)v105 + 11);

  v116 = *(_QWORD *)(v104 + 96);
  *(_QWORD *)(v104 + 96) = *((_QWORD *)v105 + 12);
  swift_bridgeObjectRelease(v116);
  v117 = *(_QWORD *)(v104 + 104);
  *(_QWORD *)(v104 + 104) = *((_QWORD *)v105 + 13);
  swift_bridgeObjectRelease(v117);
LABEL_44:
  v121 = a3[21];
  *(_QWORD *)((char *)a1 + a3[20]) = *(_QWORD *)((char *)a2 + a3[20]);
  v122 = *(void **)((char *)a1 + v121);
  *(_QWORD *)((char *)a1 + v121) = *(_QWORD *)((char *)a2 + v121);

  *((_BYTE *)a1 + a3[22]) = *((_BYTE *)a2 + a3[22]);
  return a1;
}

uint64_t sub_10000F888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000F894);
}

uint64_t sub_10000F894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100009F00(&qword_1000B7F18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_10000F914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000F920);
}

uint64_t sub_10000F920(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100009F00(&qword_1000B7F18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneViewModel(uint64_t a1)
{
  return sub_10000F9AC(a1, (uint64_t *)&unk_1000B7F80, (uint64_t)&nominal type descriptor for HeadphoneViewModel);
}

uint64_t sub_10000F9AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

void sub_10000F9E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[19];

  v4[0] = &unk_100087FF8;
  v4[1] = &unk_100087FF8;
  v4[2] = &unk_100087FF8;
  v4[3] = &unk_100087FF8;
  v4[4] = &unk_100088010;
  v4[5] = &unk_100088010;
  v4[6] = &unk_100088028;
  sub_100010D84(319, (unint64_t *)&unk_1000B7F90, type metadata accessor for HeadphoneAssets);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_100088040;
    v4[9] = &unk_100088058;
    v4[10] = &unk_100088070;
    v4[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = &unk_100088088;
    v4[12] = &unk_100088088;
    v4[15] = &unk_1000880A0;
    v4[16] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[17] = &unk_100088028;
    v4[18] = &unk_100088088;
    swift_initStructMetadata(a1, 256, 19, v4, a1 + 16);
  }
}

uint64_t *sub_10000FAD4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v10;
    v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v11;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
  }
  return a1;
}

uint64_t sub_10000FB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t sub_10000FBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t sub_10000FC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(_QWORD *)(a2 + v10);
  v12 = *(_QWORD *)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t sub_10000FCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_10000FD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(int *)(a3 + 24);
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t sub_10000FD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000FDA0);
}

uint64_t sub_10000FDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10000FE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000FE28);
}

uint64_t sub_10000FE28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_10000FEA0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_10000FF18(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  __int128 v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9(&a1[a3[5]], &a2[a3[5]], v7);
    v10 = a3[6];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      v13 = sub_100009F00(&qword_1000B7F08);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = a3[7];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = type metadata accessor for HeadphoneAssets.Feature(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100009F00(&qword_1000B7F10);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v9(v16, v17, v7);
      v21 = *(int *)(v18 + 20);
      v22 = *(_QWORD *)&v17[v21];
      *(_QWORD *)&v16[v21] = v22;
      v23 = *(int *)(v18 + 24);
      v24 = *(_QWORD *)&v17[v23];
      *(_QWORD *)&v16[v23] = v24;
      v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRetain(v24);
      v25(v16, 0, 1, v18);
    }
    v26 = a3[8];
    v27 = a3[9];
    v28 = *(_QWORD *)&a2[v26];
    *(_QWORD *)&a1[v26] = v28;
    v29 = *(void **)&a2[v27];
    *(_QWORD *)&a1[v27] = v29;
    v30 = a3[10];
    v34 = *(_OWORD *)&a2[v30];
    *(_OWORD *)&a1[v30] = v34;
    swift_bridgeObjectRetain(v28);
    v31 = v29;
    v32 = (id)v34;
  }
  return a1;
}

void sub_100010118(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v6(a1 + a2[5], v4);
  v7 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  v8 = a1 + a2[7];
  v9 = type metadata accessor for HeadphoneAssets.Feature(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v6(v8, v4);
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + *(int *)(v9 + 20)));
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + *(int *)(v9 + 24)));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));

}

uint64_t sub_100010218(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  __int128 v32;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    v12 = sub_100009F00(&qword_1000B7F08);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for HeadphoneAssets.Feature(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100009F00(&qword_1000B7F10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    v19 = *(int *)(v16 + 20);
    v20 = *(_QWORD *)&v15[v19];
    *(_QWORD *)&v14[v19] = v20;
    v21 = *(int *)(v16 + 24);
    v22 = *(_QWORD *)&v15[v21];
    *(_QWORD *)&v14[v21] = v22;
    v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v22);
    v23(v14, 0, 1, v16);
  }
  v24 = a3[8];
  v25 = a3[9];
  v26 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v26;
  v27 = *(void **)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v27;
  v28 = a3[10];
  v32 = *(_OWORD *)(a2 + v28);
  *(_OWORD *)(a1 + v28) = v32;
  swift_bridgeObjectRetain(v26);
  v29 = v27;
  v30 = (id)v32;
  return a1;
}

uint64_t sub_1000103EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  v51 = (void (*)(char *, char *, uint64_t))v8;
  v52 = v7;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = sub_100009F00(&qword_1000B7F08);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[7];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = type metadata accessor for HeadphoneAssets.Feature(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      v51(v17, v18, v6);
      v45 = *(int *)(v19 + 20);
      v46 = *(_QWORD *)&v18[v45];
      v47 = *(_QWORD *)&v17[v45];
      *(_QWORD *)&v17[v45] = v46;
      swift_bridgeObjectRetain(v46);
      swift_bridgeObjectRelease(v47);
      v48 = *(int *)(v19 + 24);
      v49 = *(_QWORD *)&v18[v48];
      v50 = *(_QWORD *)&v17[v48];
      *(_QWORD *)&v17[v48] = v49;
      swift_bridgeObjectRetain(v49);
      swift_bridgeObjectRelease(v50);
      goto LABEL_13;
    }
    sub_10000EC60((uint64_t)v17, type metadata accessor for HeadphoneAssets.Feature);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v29 = sub_100009F00(&qword_1000B7F10);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v17, v18, v6);
  v24 = *(int *)(v19 + 20);
  v25 = *(_QWORD *)&v18[v24];
  *(_QWORD *)&v17[v24] = v25;
  v26 = *(int *)(v19 + 24);
  v27 = *(_QWORD *)&v18[v26];
  *(_QWORD *)&v17[v26] = v27;
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v27);
  v28(v17, 0, 1, v19);
LABEL_13:
  v30 = a3[8];
  v31 = *(_QWORD *)(a2 + v30);
  v32 = *(_QWORD *)(a1 + v30);
  *(_QWORD *)(a1 + v30) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  v33 = a3[9];
  v34 = *(void **)(a1 + v33);
  v35 = *(void **)(a2 + v33);
  *(_QWORD *)(a1 + v33) = v35;
  v36 = v35;

  v37 = a3[10];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(void **)v39;
  v41 = *(_QWORD *)(v39 + 8);
  v42 = *(void **)v38;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  v43 = v40;

  *(_QWORD *)(v38 + 8) = v41;
  return a1;
}

uint64_t sub_1000106AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    v12 = sub_100009F00(&qword_1000B7F08);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for HeadphoneAssets.Feature(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_100009F00(&qword_1000B7F10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
    *(_QWORD *)&v14[*(int *)(v16 + 24)] = *(_QWORD *)&v15[*(int *)(v16 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100010854(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  v40 = (void (*)(char *, char *, uint64_t))v8;
  v41 = v7;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = sub_100009F00(&qword_1000B7F08);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[7];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = type metadata accessor for HeadphoneAssets.Feature(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      v40(v17, v18, v6);
      v36 = *(int *)(v19 + 20);
      v37 = *(_QWORD *)&v17[v36];
      *(_QWORD *)&v17[v36] = *(_QWORD *)&v18[v36];
      swift_bridgeObjectRelease(v37);
      v38 = *(int *)(v19 + 24);
      v39 = *(_QWORD *)&v17[v38];
      *(_QWORD *)&v17[v38] = *(_QWORD *)&v18[v38];
      swift_bridgeObjectRelease(v39);
      goto LABEL_13;
    }
    sub_10000EC60((uint64_t)v17, type metadata accessor for HeadphoneAssets.Feature);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = sub_100009F00(&qword_1000B7F10);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v17, v18, v6);
  *(_QWORD *)&v17[*(int *)(v19 + 20)] = *(_QWORD *)&v18[*(int *)(v19 + 20)];
  *(_QWORD *)&v17[*(int *)(v19 + 24)] = *(_QWORD *)&v18[*(int *)(v19 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  v25 = a3[8];
  v26 = *(_QWORD *)(a1 + v25);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  swift_bridgeObjectRelease(v26);
  v27 = a3[9];
  v28 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);

  v29 = a3[10];
  v30 = a1 + v29;
  v31 = (uint64_t *)(a2 + v29);
  v32 = *v31;
  v33 = v31[1];
  v34 = *(void **)v30;
  *(_QWORD *)v30 = v32;

  *(_QWORD *)(v30 + 8) = v33;
  return a1;
}

uint64_t sub_100010AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100010AF4);
}

uint64_t sub_100010AF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100009F00(&qword_1000B7F08);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[6];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_100009F00(&qword_1000B7F10);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[7];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[8]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_100010BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100010BD4);
}

uint64_t sub_100010BD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_100009F00(&qword_1000B7F08);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[6];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = sub_100009F00(&qword_1000B7F10);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[7];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
  return result;
}

void sub_100010CA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[7];

  v2 = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = v8[0];
    sub_100010D84(319, &qword_1000B8108, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_100010D84(319, (unint64_t *)&unk_1000B8110, type metadata accessor for HeadphoneAssets.Feature);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v8[5] = &unk_100088028;
        v8[6] = &unk_100088010;
        swift_initStructMetadata(a1, 256, 7, v8, a1 + 16);
      }
    }
  }
}

void sub_100010D84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_100010DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  Swift::String v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  uint64_t v11;
  Swift::String v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;
  void *v20;
  Swift::String v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v1 = sub_100009F00(&qword_1000B7F08);
  __chkstk_darwin(v1, v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = 0;
  v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(84);
  v5._countAndFlagsBits = 0xD000000000000021;
  v5._object = (void *)0x800000010008BE90;
  String.append(_:)(v5);
  v6 = type metadata accessor for URL(0);
  v7 = sub_1000112D8();
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 0x72616D697270202CLL;
  v10._object = (void *)0xEF203D204C525579;
  String.append(_:)(v10);
  v11 = type metadata accessor for HeadphoneAssets(0);
  v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  v13 = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v13);
  v14._object = (void *)0x800000010008BEC0;
  v14._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v14);
  sub_100011320(v0 + *(int *)(v11 + 24), (uint64_t)v4);
  v15._countAndFlagsBits = String.init<A>(reflecting:)(v4, v1);
  v16 = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v16);
  v17._countAndFlagsBits = 0x20736567616D6920;
  v17._object = (void *)0xEA0000000000203DLL;
  String.append(_:)(v17);
  v24 = *(_QWORD *)(v0 + *(int *)(v11 + 32));
  swift_bridgeObjectRetain(v24);
  v18 = sub_100009F00(&qword_1000B8160);
  v19._countAndFlagsBits = String.init<A>(reflecting:)(&v24, v18);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  v21._countAndFlagsBits = 62;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  return v25;
}

uint64_t sub_100010FC4(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_100010FF4 + 4 * byte_100087FB0[*(unsigned __int16 *)(a1 + 40) >> 13]))();
}

BOOL sub_100010FF4@<W0>(unsigned int a1@<W8>)
{
  return a1 < 0x2000;
}

uint64_t sub_100011078(uint64_t a1, uint64_t a2)
{
  return sub_1000111A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

void sub_10001109C()
{
  __int128 *v0;
  __int128 v1;

  sub_1000112C0(v0, &v1);
  __asm { BR              X10 }
}

unint64_t sub_1000110E0()
{
  return 0xD000000000000012;
}

void sub_100011174()
{
  __int128 *v0;
  _OWORD v1[3];

  sub_1000112C0(v0, v1);
  sub_10001109C();
}

uint64_t sub_1000111A8(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, unint64_t a7, char a8)
{
  char v10;
  id v11;
  id v12;

  if (a4)
  {
    if (a4 == 1)
    {
      if (a8 == 1)
        goto LABEL_4;
LABEL_11:
      v10 = 0;
      return v10 & 1;
    }
    if (a8 != 2)
      goto LABEL_11;
  }
  else if (a8)
  {
    goto LABEL_11;
  }
LABEL_4:
  if (a1 == a5 && a2 == a6 || (v10 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0) & 1) != 0))
  {
    v10 = (a3 | a7) == 0;
    if (a3 && a7)
    {
      sub_100011284();
      v11 = (id)a3;
      v12 = (id)a7;
      v10 = static NSObject.== infix(_:_:)(v11, v12);

    }
  }
  return v10 & 1;
}

unint64_t sub_100011284()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7F00;
  if (!qword_1000B7F00)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B7F00);
  }
  return result;
}

_OWORD *sub_1000112C0(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 26) = *(__int128 *)((char *)a1 + 26);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

unint64_t sub_1000112D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B8158;
  if (!qword_1000B8158)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_1000B8158);
  }
  return result;
}

uint64_t sub_100011320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B7F08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100011368(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  id v5;
  uint64_t result;

  if (a4 <= 2u)
  {
    v5 = a3;
    return swift_bridgeObjectRetain(a2);
  }
  return result;
}

void destroy for HeadphoneViewModel.MismatchLabel(uint64_t a1)
{
  sub_1000113B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1000113B0(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    swift_bridgeObjectRelease(a2);

  }
}

uint64_t initializeWithCopy for HeadphoneViewModel.MismatchLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_100011368(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for HeadphoneViewModel.MismatchLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_100011368(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1000113B0(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for HeadphoneViewModel.MismatchLabel(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HeadphoneViewModel.MismatchLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1000113B0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneViewModel.MismatchLabel(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneViewModel.MismatchLabel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1000115A0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1000115AC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneViewModel.MismatchLabel()
{
  return &type metadata for HeadphoneViewModel.MismatchLabel;
}

__n128 initializeWithCopy for HeadphoneViewModel.BatteryConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneViewModel.BatteryConfiguration(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 42))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 8) >> 3) & 0xFFFFFF80 | (*(_QWORD *)(a1 + 8) >> 1);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneViewModel.BatteryConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (8 * -a2) & 0x7FFFFFC00 | (2 * (-a2 & 0x7FLL));
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_WORD *)(result + 40) = 0;
      return result;
    }
    *(_BYTE *)(result + 42) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_100011690(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int16 *)(a1 + 40) >> 13;
  if (v1 <= 4)
    return v1;
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1000116AC(uint64_t result)
{
  *(_WORD *)(result + 40) &= 0x1FFFu;
  return result;
}

uint64_t sub_1000116BC(uint64_t result, unsigned int a2)
{
  __int16 v2;
  uint64_t v3;

  if (a2 < 5)
  {
    v2 = *(_WORD *)(result + 40);
    v3 = *(_QWORD *)(result + 24) & 0x301;
    *(_QWORD *)(result + 8) &= 0x301uLL;
    *(_QWORD *)(result + 24) = v3;
    *(_WORD *)(result + 40) = v2 & 0x301 | ((_WORD)a2 << 13);
  }
  else
  {
    *(_QWORD *)result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_WORD *)(result + 40) = -24576;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneViewModel.BatteryConfiguration()
{
  return &type metadata for HeadphoneViewModel.BatteryConfiguration;
}

void sub_100011720(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_100011770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B8168);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B8168);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void *sub_100011800()
{
  char *v0;
  uint64_t v1;
  uint64_t inited;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE v30[64];

  v1 = sub_100009F00(&qword_1000B81D8);
  inited = swift_initStackObject(v1, v30);
  *(_OWORD *)(inited + 16) = xmmword_1000881A0;
  *(_QWORD *)(inited + 32) = objc_msgSend(v0, "titleView");
  v3 = objc_msgSend(v0, "bodyView");
  *(_QWORD *)(inited + 40) = v3;
  v4 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_imageView];
  *(_QWORD *)(inited + 48) = v4;
  v5 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_doublePressMicaView];
  *(_QWORD *)(inited + 56) = v5;
  specialized Array._endMutation()(v3);
  v6 = *(void **)(inited + 32);
  if (!v6)
  {
    v13 = v5;
    v14 = v4;
    v12 = *(void **)(inited + 40);
    if (!v12)
      goto LABEL_10;
    goto LABEL_7;
  }
  v7 = v6;
  v8 = v4;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v5);
  v10 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v9 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v7);
  specialized Array._endMutation()(v11);
  v12 = *(void **)(inited + 40);
  if (v12)
  {
LABEL_7:
    v15 = v12;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    v17 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v16 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v17 >= v16 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
    v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
    specialized Array._endMutation()(v18);
  }
LABEL_10:
  v19 = *(void **)(inited + 48);
  if (v19)
  {
    v20 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    v22 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v22 >= v21 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
    v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
    specialized Array._endMutation()(v23);
  }
  v24 = *(void **)(inited + 56);
  if (v24)
  {
    v25 = v24;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
    v27 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v26 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v27 >= v26 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
    v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
    specialized Array._endMutation()(v28);
  }
  swift_bridgeObjectRelease(inited);
  return &_swiftEmptyArrayStorage;
}

void sub_100011A74(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  Swift::String v23;
  void *object;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  unint64_t v28;
  NSString v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  id v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  NSString v47;
  id v48;
  uint64_t ObjCClassFromMetadata;
  id v50;
  Swift::String v51;
  void *v52;
  Swift::String v53;
  unint64_t v54;
  id v55;
  id v56;
  NSString v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  Class isa;
  void *v98;
  void *v99;
  void *v100;
  id v101;
  void *v102;
  id v103;
  void *v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t i;
  id v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  id v115;
  char *v116;
  id v117;
  id v118;
  id v119;
  int v120;
  char v121[24];
  char v122[24];
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  objc_super v126;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for HeadphoneModel(0);
  v7 = __chkstk_darwin(v5, v6);
  v9 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  v12 = (char *)&v113 - v11;
  v126.receiver = v3;
  v126.super_class = ObjectType;
  objc_msgSendSuper2(&v126, "viewDidLoad");
  objc_msgSend(v3, "setDismissalType:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_presenter]);
  if (Strong)
  {
    v14 = Strong;
    v15 = Strong + 16;
    swift_beginAccess(Strong + 16, v122, 0, 0);
    sub_100013528(v15, (uint64_t)&v123);
    swift_unknownObjectRelease(v14);
    v16 = v125;
    if (v125)
    {
      v17 = sub_100013410(&v123, v125);
      v18 = *(_QWORD *)(v16 - 8);
      __chkstk_darwin(v17, v17);
      v20 = (uint64_t *)((char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_QWORD *))(v18 + 16))(v20);
      sub_100013570((uint64_t)&v123);
      v21 = *v20 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v21, v121, 0, 0);
      sub_1000135B0(v21, (uint64_t)v9);
      (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v16);
      sub_1000135F4((uint64_t)v9, (uint64_t)v12);
      v123 = 0;
      v124 = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease(v124);
      v123 = 0x5F6C6C6143646E45;
      v124 = 0xE800000000000000;
      v22 = *(_DWORD *)&v12[*(int *)(v5 + 124)];
      v120 = v22;
      v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
      object = v23._object;
      String.append(_:)(v23);
      swift_bridgeObjectRelease(object);
      v25._countAndFlagsBits = 1598833453;
      v25._object = (void *)0xE400000000000000;
      String.append(_:)(v25);
      v116 = v12;
      LOBYTE(v120) = v12[144];
      v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
      v27 = v26._object;
      String.append(_:)(v26);
      swift_bridgeObjectRelease(v27);
      v28 = v124;
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
      v30 = (void *)objc_opt_self(UIImage);
      v31 = objc_msgSend(v30, "imageNamed:", v29);

      v115 = v31;
      if (v31)
      {
        v32 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v31);
      }
      else
      {
        v38 = objc_msgSend((id)objc_opt_self(SFHeadphoneProduct), "b607");
        v39 = objc_msgSend(v38, "productID");

        v123 = 0x5F6C6C6143646E45;
        v124 = 0xE800000000000000;
        v120 = v22;
        v40 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
        if (v22 == v39)
        {
          v42 = v41;
          String.append(_:)(*(Swift::String *)&v40);
          swift_bridgeObjectRelease(v42);
          v43 = 0x305F4C432DLL;
        }
        else
        {
          v44 = v41;
          String.append(_:)(*(Swift::String *)&v40);
          swift_bridgeObjectRelease(v44);
          v43 = 0x315F4C432DLL;
        }
        v45 = 0xE500000000000000;
        String.append(_:)(*(Swift::String *)&v43);
        v46 = v124;
        v47 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v46);
        v48 = objc_msgSend(v30, "imageNamed:", v47);

        v32 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v48);
      }
      objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjectType);
      v50 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v123 = 0;
      v124 = 0xE000000000000000;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease(v124);
      v123 = 0x5F6C6C6143646E45;
      v124 = 0xE800000000000000;
      v120 = v22;
      v51._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
      v52 = v51._object;
      String.append(_:)(v51);
      swift_bridgeObjectRelease(v52);
      v53._countAndFlagsBits = 0x50656C62756F445FLL;
      v53._object = (void *)0xEC00000073736572;
      String.append(_:)(v53);
      v54 = v124;
      v55 = objc_allocWithZone((Class)BSUICAPackageView);
      v56 = v50;
      v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v54);
      v58 = objc_msgSend(v55, "initWithPackageName:inBundle:", v57, v56);

      v114 = v56;
      if (!v58)
      {
LABEL_30:
        __break(1u);
        return;
      }
      objc_msgSend(v58, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v59 = objc_msgSend(v3, "contentView");
      objc_msgSend(v59, "addSubview:", v32);

      v60 = objc_msgSend(v3, "contentView");
      objc_msgSend(v60, "addSubview:", v58);

      v61 = objc_msgSend(v3, "contentView");
      v62 = objc_msgSend(v61, "mainContentGuide");

      v63 = objc_msgSend(v32, "centerXAnchor");
      v64 = objc_msgSend(v62, "centerXAnchor");
      v117 = objc_msgSend(v63, "constraintEqualToAnchor:constant:", v64, 195.0);

      v65 = objc_msgSend(v58, "centerXAnchor");
      v66 = objc_msgSend(v62, "centerXAnchor");
      v118 = objc_msgSend(v65, "constraintEqualToAnchor:constant:", v66, 195.0);

      v119 = (id)objc_opt_self(NSLayoutConstraint);
      v67 = sub_100009F00((uint64_t *)&unk_1000B8730);
      v68 = swift_allocObject(v67, 112, 7);
      *(_OWORD *)(v68 + 16) = xmmword_1000881B0;
      v69 = objc_msgSend(v32, "topAnchor");
      v70 = v32;
      v71 = objc_msgSend(v62, "topAnchor");
      v72 = objc_msgSend(v69, "constraintGreaterThanOrEqualToAnchor:", v71);

      *(_QWORD *)(v68 + 32) = v72;
      v73 = objc_msgSend(v70, "bottomAnchor");
      v74 = objc_msgSend(v62, "bottomAnchor");
      v75 = objc_msgSend(v73, "constraintLessThanOrEqualToAnchor:", v74);

      *(_QWORD *)(v68 + 40) = v75;
      v76 = objc_msgSend(v70, "centerYAnchor");
      v77 = objc_msgSend(v62, "centerYAnchor");
      v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

      v79 = v117;
      *(_QWORD *)(v68 + 48) = v78;
      *(_QWORD *)(v68 + 56) = v79;
      v117 = v79;
      v80 = objc_msgSend(v58, "topAnchor");
      v81 = objc_msgSend(v62, "topAnchor");
      v82 = objc_msgSend(v80, "constraintGreaterThanOrEqualToAnchor:", v81);

      *(_QWORD *)(v68 + 64) = v82;
      v83 = objc_msgSend(v58, "bottomAnchor");
      v84 = objc_msgSend(v62, "bottomAnchor");
      v85 = objc_msgSend(v83, "constraintLessThanOrEqualToAnchor:", v84);

      *(_QWORD *)(v68 + 72) = v85;
      v86 = objc_msgSend(v58, "heightAnchor");
      v87 = objc_msgSend(v86, "constraintEqualToConstant:", 180.0);

      *(_QWORD *)(v68 + 80) = v87;
      v88 = objc_msgSend(v58, "widthAnchor");
      v89 = objc_msgSend(v88, "constraintEqualToConstant:", 180.0);

      *(_QWORD *)(v68 + 88) = v89;
      v90 = objc_msgSend(v58, "centerYAnchor");
      v91 = objc_msgSend(v62, "centerYAnchor");
      v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

      v93 = v118;
      *(_QWORD *)(v68 + 96) = v92;
      *(_QWORD *)(v68 + 104) = v93;
      v123 = v68;
      specialized Array._endMutation()(v94);
      v95 = v123;
      sub_10000B880();
      v96 = v93;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v95);
      objc_msgSend(v119, "activateConstraints:", isa);

      v98 = *(void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_imageView];
      *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_imageView] = v70;
      v119 = v70;

      v99 = *(void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalImageConstraint];
      v100 = v117;
      *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalImageConstraint] = v117;
      v101 = v100;

      v102 = *(void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_doublePressMicaView];
      *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_doublePressMicaView] = v58;
      v103 = v58;

      v104 = *(void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalMicaConstraint];
      *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalMicaConstraint] = v96;
      v105 = v96;

      v106 = (uint64_t)sub_100011800();
      v107 = v106;
      if ((unint64_t)v106 >> 62)
      {
        if (v106 < 0)
          v112 = v106;
        else
          v112 = v106 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v106);
        v108 = _CocoaArrayWrapper.endIndex.getter(v112);
        if (v108)
          goto LABEL_18;
      }
      else
      {
        v108 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v106);
        if (v108)
        {
LABEL_18:
          if (v108 >= 1)
          {
            for (i = 0; i != v108; ++i)
            {
              if ((v107 & 0xC000000000000001) != 0)
                v110 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v107);
              else
                v110 = *(id *)(v107 + 8 * i + 32);
              v111 = v110;
              objc_msgSend(v110, "setAlpha:", 0.0);

            }
            goto LABEL_28;
          }
          __break(1u);
          goto LABEL_30;
        }
      }
LABEL_28:

      swift_bridgeObjectRelease_n(v107, 2);
      sub_100013638((uint64_t)v116);
      return;
    }
    sub_100013570((uint64_t)&v123);
  }
  if (qword_1000B7AC0 != -1)
    swift_once(&qword_1000B7AC0, sub_100011770);
  v33 = type metadata accessor for Logger(0);
  v34 = sub_1000093F8(v33, (uint64_t)qword_1000B8168);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Headphone Model is nil, exiting", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
  }

}

uint64_t sub_1000126C4(char a1, uint64_t a2)
{
  char *v2;
  uint64_t result;
  uint64_t v5;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v6, "viewDidAppear:", a1 & 1);
  sub_100012740();
  result = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_presenter]);
  if (result)
  {
    v5 = result;
    sub_1000761A4(v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_type]);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

void sub_100012740()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1000A6440, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v18 = (uint64_t (*)(_QWORD))sub_100013504;
  v19 = v2;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100012FBC;
  v17 = &unk_1000A64F8;
  v3 = _Block_copy(&v14);
  swift_release(v19);
  objc_msgSend(v1, "animateWithDuration:delay:options:animations:completion:", 0, v3, 0, 0.5, 0.0);
  _Block_release(v3);
  v4 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v5) = 1041865114;
  LODWORD(v6) = 0.75;
  LODWORD(v7) = 1.0;
  LODWORD(v8) = 1041865114;
  v9 = objc_msgSend(v4, "initWithControlPoints::::", v5, v6, v8, v7);
  v10 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v10, "begin");
  objc_msgSend(v10, "setAnimationTimingFunction:", v9);
  v11 = swift_allocObject(&unk_1000A6440, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v0);
  v18 = (uint64_t (*)(_QWORD))sub_100013520;
  v19 = v11;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100012FBC;
  v17 = &unk_1000A6520;
  v12 = _Block_copy(&v14);
  swift_release(v19);
  v18 = nullsub_1;
  v19 = 0;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100013120;
  v17 = &unk_1000A6548;
  v13 = _Block_copy(&v14);
  objc_msgSend(v1, "animateWithDuration:animations:completion:", v12, v13, 0.5);
  _Block_release(v13);
  _Block_release(v12);
  objc_msgSend(v10, "commit");

}

void sub_1000129A4(uint64_t a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void **v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  void *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitleText:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setBodyText:", v4);

  objc_msgSend(v1, "setShouldCenterAlignText:", 1);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = swift_allocObject(&unk_1000A6440, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v23 = sub_100013374;
  v24 = v6;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A6458;
  v8 = _Block_copy(&v19);
  v9 = (void *)objc_opt_self(PRXAction);
  v10 = objc_msgSend(v9, "actionWithTitle:style:handler:", v7, 0, v8);

  _Block_release(v8);
  v11 = v24;
  swift_release(v6);

  v12 = *(_QWORD *)(a1 + 56);
  v13 = swift_allocObject(&unk_1000A6440, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v23 = sub_1000133AC;
  v24 = v13;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A6480;
  v15 = _Block_copy(&v19);
  v16 = objc_msgSend(v9, "actionWithTitle:style:handler:", v14, 1, v15);

  _Block_release(v15);
  v17 = v24;
  swift_release(v13);
  v18 = objc_msgSend(v1, "addAction:", v16, swift_release(v17).n128_f64[0]);

}

void sub_100012C48(uint64_t (*a1)(), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t (*v15)();
  uint64_t v16;

  v3 = v2;
  v6 = (void *)objc_opt_self(UIView);
  v7 = swift_allocObject(&unk_1000A6440, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v3);
  v15 = sub_1000133F4;
  v16 = v7;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_100012FBC;
  v14 = &unk_1000A64A8;
  v8 = _Block_copy(&v11);
  swift_release(v16);
  v15 = a1;
  v16 = a2;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_100013120;
  v14 = &unk_1000A64D0;
  v9 = _Block_copy(&v11);
  v10 = v16;
  swift_retain(a2);
  swift_release(v10);
  objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 0, v8, v9, 0.166666667, 0.0);
  _Block_release(v9);
  _Block_release(v8);
}

uint64_t sub_100012D88(uint64_t a1, uint64_t a2, uint64_t (*a3)())
{
  uint64_t v4;
  uint64_t result;
  void *v6;
  uint64_t v7;
  void *Strong;
  uint64_t v9;
  _BYTE v10[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v6 = (void *)result;
    v7 = swift_allocObject(&unk_1000A6440, 24, 7);
    swift_beginAccess(v4, &v9, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
    swift_unknownObjectWeakInit(v7 + 16, Strong);

    swift_retain(v7);
    sub_100012C48(a3, v7);

    return swift_release_n(v7, 2);
  }
  return result;
}

void sub_100012E54(uint64_t a1, uint64_t a2, const char *a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_presenter);

    if (v9)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v10 = type metadata accessor for Logger(0);
      v11 = sub_1000093F8(v10, (uint64_t)qword_1000B9F80);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, a3, v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }

      swift_beginAccess(v9 + 16, &v16, 0, 0);
      v15 = *(_QWORD *)(v9 + 40);
      if (v15)
      {
        sub_100013410((_QWORD *)(v9 + 16), v15);
        a4();
      }
      sub_100072410(0);
      swift_unknownObjectRelease(v9);
    }
  }
}

uint64_t sub_100012FBC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_100012FE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong
                  + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalImageConstraint);
    if (v4)
    {
      v5 = v4;

      objc_msgSend(v5, "setConstant:", 0.0);
      v3 = v5;
    }

  }
  swift_beginAccess(v1, v14, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v1);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = *(void **)(v6 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalMicaConstraint);
    if (v8)
    {
      v9 = v8;

      objc_msgSend(v9, "setConstant:", 0.0);
      v7 = v9;
    }

  }
  swift_beginAccess(v1, v13, 0, 0);
  v10 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "contentView");

    objc_msgSend(v12, "layoutIfNeeded");
  }
}

uint64_t sub_100013120(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

uint64_t sub_10001315C(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = (uint64_t)sub_100011800();

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v11 = v6;
      else
        v11 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      result = _CocoaArrayWrapper.endIndex.getter(v11);
      v7 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(v6);
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
          else
            v9 = *(id *)(v6 + 8 * i + 32);
          v10 = v9;
          objc_msgSend(v9, "setAlpha:", a2);

        }
      }
    }
    return swift_bridgeObjectRelease_n(v6, 2);
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneEndCallViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService30HeadphoneEndCallViewController);
}

uint64_t sub_100013340()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_type);
}

uint64_t sub_100013350()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100013374(uint64_t a1)
{
  uint64_t v1;

  return sub_100012D88(a1, v1, (uint64_t (*)())sub_100013434);
}

uint64_t sub_100013394(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000133A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000133AC(uint64_t a1)
{
  uint64_t v1;

  return sub_100012D88(a1, v1, (uint64_t (*)())sub_1000133CC);
}

void sub_1000133CC(uint64_t a1)
{
  uint64_t v1;

  sub_100012E54(a1, v1, "Requested Press Once for end call gesture", sub_100042BAC);
}

uint64_t sub_1000133F4()
{
  uint64_t v0;

  return sub_10001315C(v0, 0.0);
}

_QWORD *sub_100013410(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

void sub_100013434(uint64_t a1)
{
  uint64_t v1;

  sub_100012E54(a1, v1, "Requested Press Twice for end call gesture", sub_100042BD0);
}

id sub_10001345C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_imageView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_doublePressMicaView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalImageConstraint] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalMicaConstraint] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_type] = 5;
  v6.receiver = v2;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "initWithContentView:", a1);
}

uint64_t sub_100013504()
{
  uint64_t v0;

  return sub_10001315C(v0, 1.0);
}

void sub_100013520()
{
  uint64_t v0;

  sub_100012FE8(v0);
}

uint64_t sub_100013528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B81E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100013570(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100009F00(&qword_1000B81E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000135B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeadphoneModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000135F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeadphoneModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100013638(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeadphoneModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000136A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B81E8);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B81E8);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL sub_100013734(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10001374C()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100013790()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1000137B8(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

double sub_100013808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  double result;

  v16 = swift_allocObject(&unk_1000A6598, 24, 7);
  swift_weakInit(v16 + 16, v8);
  v17 = (_QWORD *)swift_allocObject(&unk_1000A65C0, 88, 7);
  v17[2] = v16;
  v17[3] = a7;
  v17[4] = a8;
  v17[5] = a1;
  v17[6] = a2;
  v17[7] = a5;
  v17[8] = a6;
  v17[9] = a3;
  v17[10] = a4;
  v18 = swift_allocObject(&unk_1000A6598, 24, 7);
  swift_weakInit(v18 + 16, v8);
  v19 = (_QWORD *)swift_allocObject(&unk_1000A65E8, 40, 7);
  v19[2] = v18;
  v19[3] = sub_100015768;
  v19[4] = v17;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a6);
  swift_bridgeObjectRetain(a4);
  swift_retain(v18);
  swift_retain(v17);
  swift_retain(v16);
  swift_retain(a8);
  sub_100014774((uint64_t)sub_1000157D0, (uint64_t)v19);
  swift_release(v16);
  swift_release(v17);
  swift_release(v18);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

double sub_10001396C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  double result;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  _QWORD aBlock[5];
  uint64_t v55;
  char v56[32];

  v49 = a8;
  v50 = a7;
  v47 = a4;
  v48 = a6;
  v51 = a5;
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  v52 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19, v20);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a3 + 16, v56, 0, 0);
  Strong = swift_weakLoadStrong(a3 + 16);
  if (Strong)
  {
    v25 = Strong;
    v45 = v15;
    v46 = v19;
    v42 = a10;
    v43 = a11;
    v44 = *(id *)(Strong + 96);
    swift_release(v25);
    v26 = swift_allocObject(&unk_1000A6728, 104, 7);
    *(_QWORD *)(v26 + 16) = a1;
    v27 = a2 & 1;
    *(_BYTE *)(v26 + 24) = v27;
    v28 = v47;
    v47 = v14;
    v29 = v18;
    v31 = v50;
    v30 = v51;
    *(_QWORD *)(v26 + 32) = v28;
    *(_QWORD *)(v26 + 40) = v30;
    *(_QWORD *)(v26 + 48) = v48;
    *(_QWORD *)(v26 + 56) = v31;
    v32 = v49;
    *(_QWORD *)(v26 + 64) = a3;
    *(_QWORD *)(v26 + 72) = v32;
    v33 = v42;
    v34 = v43;
    *(_QWORD *)(v26 + 80) = a9;
    *(_QWORD *)(v26 + 88) = v33;
    *(_QWORD *)(v26 + 96) = v34;
    aBlock[4] = sub_100015E64;
    v55 = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100012FBC;
    aBlock[3] = &unk_1000A6740;
    v35 = _Block_copy(aBlock);
    sub_100015EA4(a1, v27);
    swift_bridgeObjectRetain(v31);
    swift_retain(a3);
    swift_bridgeObjectRetain(a9);
    swift_bridgeObjectRetain(v34);
    v36 = swift_retain(v30);
    static DispatchQoS.unspecified.getter(v36);
    v53 = &_swiftEmptyArrayStorage;
    v37 = sub_100015EB0();
    v38 = sub_100009F00(&qword_1000B8338);
    v39 = sub_100015EF8((unint64_t *)&qword_1000B8340, &qword_1000B8338, (uint64_t)&protocol conformance descriptor for [A]);
    v40 = v47;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v53, v38, v39, v47, v37);
    v41 = v44;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v22, v29, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v40);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v22, v46);
    *(_QWORD *)&result = swift_release(v55).n128_u64[0];
  }
  return result;
}

uint64_t sub_100013C0C(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[5];
  uint64_t v40;
  uint64_t v41;

  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_1000B7AC8 != -1)
      swift_once(&qword_1000B7AC8, sub_1000136A4);
    v23 = type metadata accessor for Logger(0);
    sub_1000093F8(v23, (uint64_t)qword_1000B81E8);
    swift_errorRetain(a1);
    v24 = swift_errorRetain(a1);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v39[0] = v28;
      *(_DWORD *)v27 = 136315138;
      v40 = a1;
      swift_errorRetain(a1);
      v29 = sub_100009F00((uint64_t *)&unk_1000B8740);
      v30 = String.init<A>(describing:)(&v40, v29);
      v32 = v31;
      v40 = sub_10004B4F0(v30, v31, v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);
      swift_bridgeObjectRelease(v32);
      sub_100015E08(a1, 1);
      sub_100015E08(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "HeadphoneUpsellClient: Failed to determine fetch eligibility %s", v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      sub_100015E08(a1, 1);
      sub_100015E08(a1, 1);
    }

    swift_errorRetain(a1);
    a3(a1, 1);
    sub_100015E08(a1, 1);
    return sub_100015E08(a1, 1);
  }
  else if ((a1 & 1) != 0)
  {
    v36 = a7 + 16;
    swift_beginAccess(a7 + 16, &v40, 0, 0);
    result = swift_weakLoadStrong(v36);
    if (result)
    {
      v37 = result;
      sub_100015D34(result + 56, (uint64_t)v39);
      swift_release(v37);
      sub_100013410(v39, v39[3]);
      v38 = swift_allocObject(&unk_1000A6778, 32, 7);
      *(_QWORD *)(v38 + 16) = a3;
      *(_QWORD *)(v38 + 24) = a4;
      swift_retain(a4);
      sub_10005EDB0(a8, a9, a10, a11, a5, a6, (uint64_t)sub_100015F7C, v38);
      swift_release(v38);
      return sub_100015D14(v39);
    }
  }
  else
  {
    if (qword_1000B7AC8 != -1)
      swift_once(&qword_1000B7AC8, sub_1000136A4);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_1000093F8(v14, (uint64_t)qword_1000B81E8);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "HeadphoneUpsellClient: Registration yielded no offers", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    v19 = sub_100015F38();
    v20 = swift_allocError(&type metadata for HeadphoneUpsellClient.MarketingUpsellError, v19, 0, 0);
    *v21 = 0;
    a3(v20, 1);
    return swift_errorRelease(v20);
  }
  return result;
}

uint64_t sub_100013FF4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t **v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  Class isa;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD);
  void **aBlock;
  uint64_t v46;
  void (*v47)(uint64_t, void *);
  void *v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[4];
  char v53[32];

  v7 = a2 + 16;
  if (qword_1000B7AC8 != -1)
    swift_once(&qword_1000B7AC8, sub_1000136A4);
  v8 = type metadata accessor for Logger(0);
  sub_1000093F8(v8, (uint64_t)qword_1000B81E8);
  v9 = swift_bridgeObjectRetain_n(a1, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v43 = v7;
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (void **)swift_slowAlloc(32, -1);
    *(_DWORD *)v12 = 136315138;
    aBlock = v13;
    v44 = a3;
    v14 = sub_100009F84(0, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr);
    v15 = sub_100015CD4(&qword_1000B8310, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v16 = swift_bridgeObjectRetain(a1);
    v17 = Set.description.getter(v16, v14, v15);
    v19 = v18;
    swift_bridgeObjectRelease(a1);
    v20 = v17;
    v7 = v43;
    v51 = sub_10004B4F0(v20, v19, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52);
    swift_bridgeObjectRelease_n(a1, 2);
    v21 = v19;
    a3 = v44;
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HeadphoneUpsellClient: Groups - %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  swift_beginAccess(v7, v53, 0, 0);
  result = swift_weakLoadStrong(v7);
  if (result)
  {
    v23 = result;
    sub_100015D34(result + 56, (uint64_t)&v51);
    swift_release(v23);
    sub_100013410(&v51, v52[2]);
    v24 = swift_bridgeObjectRetain(a1);
    v25 = sub_1000672BC(v24);
    swift_bridgeObjectRelease(a1);
    v26 = swift_allocObject(&unk_1000A6660, 32, 7);
    *(_QWORD *)(v26 + 16) = a3;
    *(_QWORD *)(v26 + 24) = a4;
    v27 = (void *)objc_opt_self(ACAccountStore);
    swift_retain_n(a4, 2);
    v28 = objc_msgSend(v27, "ams_sharedAccountStore");
    v29 = objc_msgSend(v28, "ams_activeiTunesAccount");

    if (v29)
    {
      v30 = v29;
      v31 = sub_10005EC54();
      v32 = objc_msgSend(objc_allocWithZone((Class)AMSDeviceOfferRegistrationTask), "initWithAccount:bag:", v30, v31);

      swift_unknownObjectRelease(v31);
      sub_100009F84(0, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v32, "setRegistrationGroups:", isa);

      v34 = objc_msgSend(v32, "perform");
      v35 = swift_allocObject(&unk_1000A6688, 32, 7);
      *(_QWORD *)(v35 + 16) = sub_100015D78;
      *(_QWORD *)(v35 + 24) = v26;
      v49 = sub_100015DC8;
      v50 = v35;
      aBlock = _NSConcreteStackBlock;
      v46 = 1107296256;
      v47 = sub_100015974;
      v48 = &unk_1000A66A0;
      v36 = _Block_copy(&aBlock);
      v37 = v50;
      swift_retain(v26);
      objc_msgSend(v34, "addSuccessBlock:", v36, swift_release(v37).n128_f64[0]);
      _Block_release(v36);
      v38 = swift_allocObject(&unk_1000A66D8, 32, 7);
      *(_QWORD *)(v38 + 16) = sub_100015D78;
      *(_QWORD *)(v38 + 24) = v26;
      v49 = sub_100015DE8;
      v50 = v38;
      aBlock = _NSConcreteStackBlock;
      v46 = 1107296256;
      v47 = sub_100015974;
      v48 = &unk_1000A66F0;
      v39 = _Block_copy(&aBlock);
      v40 = v50;
      swift_retain(v26);
      objc_msgSend(v34, "addErrorBlock:", v39, swift_release(v40).n128_f64[0]);
      _Block_release(v39);
      swift_release(v25);
      swift_release(a4);
      swift_release(v26);

    }
    else
    {
      v41 = sub_100015D84();
      v42 = swift_allocError(&type metadata for AMSMarketingOffersClient.RegistrationError, v41, 0, 0);
      sub_100014528(v42, 1, a3);
      swift_errorRelease(v42);
      swift_release(v25);
      swift_release(a4);
      swift_release(v26);
    }
    return sub_100015D14(&v51);
  }
  return result;
}

uint64_t sub_100014528(_BOOL8 a1, char a2, void (*a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void (*v18)(_QWORD, _QWORD);
  uint64_t v19;
  BOOL v20[8];
  uint64_t v21;

  v5 = a2 & 1;
  if (qword_1000B7AC8 != -1)
    swift_once(&qword_1000B7AC8, sub_1000136A4);
  v6 = type metadata accessor for Logger(0);
  sub_1000093F8(v6, (uint64_t)qword_1000B81E8);
  sub_100015DF0((void *)a1, v5);
  v7 = sub_100015DF0((void *)a1, v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v8, v9))
  {
    sub_100015DFC((void *)a1, v5);
    sub_100015DFC((void *)a1, v5);

    if (!(_DWORD)v5)
      goto LABEL_5;
LABEL_7:
    swift_errorRetain(a1);
    goto LABEL_8;
  }
  v18 = a3;
  v10 = (uint8_t *)swift_slowAlloc(12, -1);
  v11 = swift_slowAlloc(32, -1);
  v21 = v11;
  *(_DWORD *)v10 = 136315138;
  v19 = a1;
  v20[0] = (_DWORD)v5 != 0;
  sub_100015DF0((void *)a1, v5);
  v12 = sub_100009F00(&qword_1000B8328);
  v13 = String.init<A>(describing:)(&v19, v12);
  v15 = v14;
  v19 = sub_10004B4F0(v13, v14, &v21);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20);
  v16 = v15;
  a3 = v18;
  swift_bridgeObjectRelease(v16);
  sub_100015DFC((void *)a1, v5);
  sub_100015DFC((void *)a1, v5);
  _os_log_impl((void *)&_mh_execute_header, v8, v9, "HeadphoneUpsellTask: Registration offers %s", v10, 0xCu);
  swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v11, -1, -1);
  swift_slowDealloc(v10, -1, -1);

  if ((_DWORD)v5)
    goto LABEL_7;
LABEL_5:
  a1 = (uint64_t)objc_msgSend((id)a1, "count", v18) > 0;
LABEL_8:
  a3(a1, v5);
  return sub_100015E08(a1, v5);
}

double sub_100014774(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void (*)(uint64_t), void *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  double result;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;

  v3 = v2;
  v6 = sub_100009F00(&qword_1000B82B8);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v53 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100009F00(&qword_1000B82C0);
  v51 = *(_QWORD *)(v14 - 8);
  v52 = v14;
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100009F00(&qword_1000B82C8);
  v19 = *(_QWORD *)(v18 - 8);
  v21 = __chkstk_darwin(v18, v20);
  v58 = a1;
  v59 = a2;
  v56 = v19;
  v57 = v21;
  v54 = v10;
  v55 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(&_swiftEmptyArrayStorage))
  {
    sub_100015978((uint64_t)&_swiftEmptyArrayStorage);
  }
  else
  {
    v23 = &_swiftEmptySetSingleton;
  }
  v60 = v23;
  v24 = sub_100009F00(&qword_1000B82D0);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v25 = (void *)CurrentValueSubject.init(_:)(&v60);
  v27 = v3[5];
  v26 = v3[6];
  sub_100013410(v3 + 2, v27);
  v50 = v3;
  v28 = *(void (**)(void (*)(uint64_t), void *, uint64_t, uint64_t))(v26 + 8);
  swift_retain(v25);
  v28(sub_1000157DC, v25, v27, v26);
  swift_release(v25);
  v60 = v25;
  v29 = sub_100015EF8(&qword_1000B82D8, &qword_1000B82D0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v30 = Publisher.first(where:)(sub_100015154, 0, v24, v29);
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(v30, 5.0);
  v31 = sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  v60 = (id)static OS_dispatch_queue.main.getter();
  v32 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 1, 1, v32);
  v33 = sub_100015EF8(&qword_1000B82E8, &qword_1000B82C0, (uint64_t)&protocol conformance descriptor for Publishers.FirstWhere<A>);
  v34 = sub_100015CD4(&qword_1000B82F0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v35 = v55;
  v36 = v52;
  Publisher.timeout<A>(_:scheduler:options:customError:)(v13, &v60, v9, nullsub_1, 0, v52, v31, v33, v34);
  sub_100015828((uint64_t)v9);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v54);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v36);
  v37 = swift_allocObject(&unk_1000A6598, 24, 7);
  v38 = v50;
  swift_weakInit(v37 + 16, v50);
  v39 = (_QWORD *)swift_allocObject(&unk_1000A6610, 40, 7);
  v41 = v58;
  v40 = v59;
  v39[2] = v58;
  v39[3] = v40;
  v39[4] = v37;
  v42 = swift_allocObject(&unk_1000A6638, 32, 7);
  *(_QWORD *)(v42 + 16) = v41;
  *(_QWORD *)(v42 + 24) = v40;
  v43 = sub_100015EF8(&qword_1000B82F8, &qword_1000B82C8, (uint64_t)&protocol conformance descriptor for Publishers.Timeout<A, B>);
  swift_retain_n(v40, 2);
  v44 = v57;
  v45 = Publisher.sink(receiveCompletion:receiveValue:)(sub_100015894, v39, sub_1000158C4, v42, v57, v43);
  swift_release(v25);
  swift_release(v39);
  v46 = swift_release(v42);
  (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v35, v44, v46);
  v47 = v38[13];
  v38[13] = v45;
  *(_QWORD *)&result = swift_release(v47).n128_u64[0];
  return result;
}

void sub_100014BAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  Class isa;
  id v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[16];
  uint64_t v43;
  id v44[3];
  uint64_t v45;

  if (qword_1000B7AC8 != -1)
    swift_once(&qword_1000B7AC8, sub_1000136A4);
  v2 = type metadata accessor for Logger(0);
  sub_1000093F8(v2, (uint64_t)qword_1000B81E8);
  v3 = swift_bridgeObjectRetain_n(a1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (void *)swift_slowAlloc(32, -1);
    v44[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = swift_bridgeObjectRetain(a1);
    v9 = Dictionary.description.getter(v8, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v11 = v10;
    swift_bridgeObjectRelease(a1);
    v41 = sub_10004B4F0(v9, v11, (uint64_t *)v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "HeadphoneUpsellClient: Accessory received: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  v12 = sub_10005F164(a1);
  if (v12)
  {
    v13 = v12;
    v14 = swift_bridgeObjectRetain_n(v12, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = (void *)swift_slowAlloc(32, -1);
      v44[0] = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = sub_100009F84(0, &qword_1000B8318, AMSDeviceOfferRegistrationItem_ptr);
      v20 = swift_bridgeObjectRetain(v13);
      v21 = Array.description.getter(v20, v19);
      v23 = v22;
      swift_bridgeObjectRelease(v13);
      v41 = sub_10004B4F0(v21, v23, (uint64_t *)v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
      swift_bridgeObjectRelease_n(v13, 2);
      swift_bridgeObjectRelease(v23);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HeadphoneUpsellClient: Items generated: %s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v13, 2);
    }
    v24 = objc_allocWithZone((Class)AMSDeviceOfferRegistrationGroup);
    sub_100009F84(0, &qword_1000B8318, AMSDeviceOfferRegistrationItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v13);
    v26 = objc_msgSend(v24, "initWithRegistrationItems:", isa);

    CurrentValueSubject.value.getter(&v45, objc_msgSend(v26, "setValidationOptions:", 5));
    v27 = v26;
    sub_100065CCC((Swift::Int *)v44, v27);

    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = (void *)swift_slowAlloc(32, -1);
      v44[0] = v32;
      *(_DWORD *)v31 = 136315138;
      swift_beginAccess(&v45, &v41, 0, 0);
      v33 = v45;
      v34 = sub_100009F84(0, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr);
      v35 = sub_100015CD4(&qword_1000B8310, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
      v36 = swift_bridgeObjectRetain(v33);
      v37 = Set.description.getter(v36, v34, v35);
      v39 = v38;
      swift_bridgeObjectRelease(v33);
      v43 = sub_10004B4F0(v37, v39, (uint64_t *)v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44);
      swift_bridgeObjectRelease(v39);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "HeadphoneUpsellClient: Adding group new: %s", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }

    swift_beginAccess(&v45, v44, 0, 0);
    v40 = v45;
    v43 = v45;
    swift_bridgeObjectRetain(v45);
    CurrentValueSubject.value.setter(&v43);
    swift_bridgeObjectRelease(v40);

  }
}

BOOL sub_100015154(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  if ((*a1 & 0xC000000000000001) != 0)
  {
    if (v1 < 0)
      v2 = *a1;
    else
      v2 = v1 & 0xFFFFFFFFFFFFFF8;
    v3 = __CocoaSet.count.getter(v2);
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 16);
  }
  return v3 != 0;
}

double sub_100015190(_BYTE *a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  uint64_t v27;
  void *v28;
  void (*v29)(_QWORD);
  uint64_t v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = a4 + 16;
  if ((*a1 & 1) == 0)
  {
    if (qword_1000B7AC8 != -1)
      swift_once(&qword_1000B7AC8, sub_1000136A4);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_1000093F8(v6, (uint64_t)qword_1000B81E8);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v29 = a2;
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v30[0] = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = String.init<A>(describing:)(v11, &type metadata for HeadphoneUpsellClient.AccessoryRetreivalError);
      v14 = v13;
      v33 = sub_10004B4F0(v12, v13, v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
      swift_bridgeObjectRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "HeadphoneUpsellClient: Device detection error - %s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      v15 = v10;
      a2 = v29;
      swift_slowDealloc(v15, -1, -1);
    }

    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "HeadphoneUpsellClient: Proceeding with empty groups", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter(&_swiftEmptyArrayStorage))
    {
      sub_100015978((uint64_t)&_swiftEmptyArrayStorage);
      v20 = v28;
    }
    else
    {
      v20 = &_swiftEmptySetSingleton;
    }
    a2(v20);
    swift_bridgeObjectRelease(v20);
  }
  swift_beginAccess(v4, &v33, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v22 = Strong;
    sub_100015D34(Strong + 16, (uint64_t)v30);
    swift_release(v22);
    v23 = v31;
    v24 = v32;
    sub_100013410(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
    sub_100015D14(v30);
  }
  swift_beginAccess(v4, v30, 0, 0);
  v25 = swift_weakLoadStrong(v4);
  if (v25)
  {
    v27 = *(_QWORD *)(v25 + 104);
    *(_QWORD *)(v25 + 104) = 0;
    swift_release(v25);
    *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  }
  return result;
}

uint64_t sub_100015478(uint64_t *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t v20;

  v3 = *a1;
  if (qword_1000B7AC8 != -1)
    swift_once(&qword_1000B7AC8, sub_1000136A4);
  v4 = type metadata accessor for Logger(0);
  sub_1000093F8(v4, (uint64_t)qword_1000B81E8);
  v5 = swift_bridgeObjectRetain_n(v3, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v18 = a2;
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v20 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = sub_100009F84(0, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr);
    v11 = sub_100015CD4(&qword_1000B8310, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v12 = swift_bridgeObjectRetain(v3);
    v13 = Set.description.getter(v12, v10, v11);
    v15 = v14;
    swift_bridgeObjectRelease(v3);
    v16 = v13;
    a2 = v18;
    v19 = sub_10004B4F0(v16, v15, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_bridgeObjectRelease_n(v3, 2);
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "HeadphoneUpsellClient: Sink: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v3, 2);
  }
  return a2(v3);
}

uint64_t sub_1000156A4()
{
  uint64_t v0;

  sub_100015D14((_QWORD *)(v0 + 16));
  sub_100015D14((_QWORD *)(v0 + 56));

  swift_release(*(_QWORD *)(v0 + 104));
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for HeadphoneUpsellClient()
{
  return objc_opt_self(_TtC20HeadphoneProxService21HeadphoneUpsellClient);
}

uint64_t sub_100015700()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100015724()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

double sub_100015768(uint64_t a1, char a2)
{
  uint64_t *v2;

  return sub_10001396C(a1, a2 & 1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10]);
}

uint64_t sub_1000157A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000157D0(uint64_t a1)
{
  uint64_t v1;

  return sub_100013FF4(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1000157DC(uint64_t a1)
{
  sub_100014BAC(a1);
}

uint64_t sub_1000157E4(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_100015828(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100009F00(&qword_1000B82B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100015868()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_100015894(_BYTE *a1)
{
  uint64_t v1;

  return sub_100015190(a1, *(void (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1000158A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000158C4(uint64_t *a1)
{
  uint64_t v1;

  return sub_100015478(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_1000158CC()
{
  return 1;
}

Swift::Int sub_1000158D4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_100015914()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_100015938(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_100015978(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_100009F00(&qword_1000B8300);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v45 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    v43 = v1;
    while (1)
    {
      while (1)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
        v11 = __OFADD__(v9++, 1);
        if (v11)
        {
          __break(1u);
          goto LABEL_42;
        }
        v12 = v10;
        v13 = NSObject._rawHashValue(seed:)(v4[5]);
        v14 = -1 << *((_BYTE *)v4 + 32);
        v15 = v13 & ~v14;
        v16 = v15 >> 6;
        v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
        v18 = 1 << v15;
        if (((1 << v15) & v17) != 0)
          break;
LABEL_26:
        *(_QWORD *)&v8[8 * v16] = v18 | v17;
        *(_QWORD *)(v4[6] + 8 * v15) = v12;
        v24 = v4[2];
        v11 = __OFADD__(v24, 1);
        v25 = v24 + 1;
        if (v11)
          goto LABEL_43;
        v4[2] = v25;
        if (v9 == v5)
          return;
      }
      sub_100009F84(0, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr);
      v19 = *(id *)(v4[6] + 8 * v15);
      v20 = static NSObject.== infix(_:_:)(v19, v12);

      if ((v20 & 1) == 0)
      {
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22, v12);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
        v1 = v43;
        v5 = v45;
        goto LABEL_26;
      }
LABEL_17:
      swift_unknownObjectRelease(v12);
      v1 = v43;
      v5 = v45;
      if (v9 == v45)
        return;
    }
  }
  v26 = 0;
  v42 = v1 + 32;
  v44 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v44)
  {
    v27 = v4[5];
    v28 = *(id *)(v42 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      sub_100009F84(0, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr);
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35, v28);

      if ((v36 & 1) != 0)
      {
LABEL_30:

        goto LABEL_31;
      }
      v37 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v37;
        v32 = v31 >> 6;
        v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
        v34 = 1 << v31;
        if ((v33 & (1 << v31)) == 0)
          break;
        v38 = *(id *)(v4[6] + 8 * v31);
        v39 = static NSObject.== infix(_:_:)(v38, v28);

        if ((v39 & 1) != 0)
          goto LABEL_30;
      }
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_44;
    v4[2] = v41;
LABEL_31:
    if (++v26 == v45)
      return;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

uint64_t sub_100015CD4(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100009F84(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100015D14(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100015D34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100015D78(_BOOL8 a1, char a2)
{
  uint64_t v2;

  return sub_100014528(a1, a2 & 1, *(void (**)(_QWORD, _QWORD))(v2 + 16));
}

unint64_t sub_100015D84()
{
  unint64_t result;

  result = qword_1000B8320;
  if (!qword_1000B8320)
  {
    result = swift_getWitnessTable(&unk_10008A3CC, &type metadata for AMSMarketingOffersClient.RegistrationError);
    atomic_store(result, (unint64_t *)&qword_1000B8320);
  }
  return result;
}

uint64_t sub_100015DC8(uint64_t a1)
{
  uint64_t v1;

  return sub_10005ED60(a1, *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16));
}

uint64_t sub_100015DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100015DE0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100015DE8(uint64_t a1)
{
  uint64_t v1;

  return sub_10005ED88(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
}

id sub_100015DF0(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_errorRetain();
  else
    return a1;
}

void sub_100015DFC(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_errorRelease();
  else

}

uint64_t sub_100015E08(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_errorRelease();
  return result;
}

uint64_t sub_100015E14()
{
  uint64_t v0;

  sub_100015E08(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100015E64()
{
  uint64_t v0;

  return sub_100013C0C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_100015EA4(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_errorRetain();
  return result;
}

unint64_t sub_100015EB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B8330;
  if (!qword_1000B8330)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1000B8330);
  }
  return result;
}

uint64_t sub_100015EF8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1000157E4(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100015F38()
{
  unint64_t result;

  result = qword_1000B8348;
  if (!qword_1000B8348)
  {
    result = swift_getWitnessTable(&unk_100088418, &type metadata for HeadphoneUpsellClient.MarketingUpsellError);
    atomic_store(result, (unint64_t *)&qword_1000B8348);
  }
  return result;
}

uint64_t sub_100015F7C(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 16))(a1, a2 & 1);
}

_BYTE *initializeBufferWithCopyOfBuffer for HeadphoneViewType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneUpsellClient.MarketingUpsellError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneUpsellClient.MarketingUpsellError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100016088 + 4 * byte_100088225[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000160BC + 4 * byte_100088220[v4]))();
}

uint64_t sub_1000160BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000160C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000160CCLL);
  return result;
}

uint64_t sub_1000160D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000160E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000160E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000160EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000160F8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100016100(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneUpsellClient.MarketingUpsellError()
{
  return &type metadata for HeadphoneUpsellClient.MarketingUpsellError;
}

uint64_t getEnumTagSinglePayload for HeadphoneUpsellClient.AccessoryRetreivalError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for HeadphoneUpsellClient.AccessoryRetreivalError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1000161B0 + 4 * byte_10008822A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1000161D0 + 4 * byte_10008822F[v4]))();
}

_BYTE *sub_1000161B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1000161D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1000161D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1000161E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1000161E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1000161F0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1000161FC()
{
  return 0;
}

ValueMetadata *type metadata accessor for HeadphoneUpsellClient.AccessoryRetreivalError()
{
  return &type metadata for HeadphoneUpsellClient.AccessoryRetreivalError;
}

unint64_t sub_100016218()
{
  unint64_t result;

  result = qword_1000B8350;
  if (!qword_1000B8350)
  {
    result = swift_getWitnessTable(&unk_100088388, &type metadata for HeadphoneUpsellClient.AccessoryRetreivalError);
    atomic_store(result, (unint64_t *)&qword_1000B8350);
  }
  return result;
}

unint64_t sub_100016260()
{
  unint64_t result;

  result = qword_1000B8358;
  if (!qword_1000B8358)
  {
    result = swift_getWitnessTable(&unk_1000883F0, &type metadata for HeadphoneUpsellClient.MarketingUpsellError);
    atomic_store(result, (unint64_t *)&qword_1000B8358);
  }
  return result;
}

uint64_t sub_1000162C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B8360);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B8360);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_100016354(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  id v30;
  NSString v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  Class isa;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  char *v61;
  _BYTE v62[24];
  _BYTE v63[24];
  _QWORD v64[3];
  uint64_t v65;
  objc_super v66;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = sub_100009F00(&qword_1000B83E8);
  __chkstk_darwin(v4, v5);
  v7 = &v62[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for HeadphoneModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  v11 = __chkstk_darwin(v8, v10);
  v13 = &v62[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11, v14);
  v16 = &v62[-v15 - 8];
  v66.receiver = v2;
  v66.super_class = ObjectType;
  objc_msgSendSuper2(&v66, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_presenter]);
  if (Strong)
  {
    v18 = Strong;
    v19 = Strong + 16;
    swift_beginAccess(Strong + 16, v63, 0, 0);
    sub_100013528(v19, (uint64_t)v64);
    swift_unknownObjectRelease(v18);
    v20 = v65;
    if (v65)
    {
      v21 = sub_100013410(v64, v65);
      v61 = v16;
      v22 = *(_QWORD *)(v20 - 8);
      __chkstk_darwin(v21, v21);
      v24 = &v62[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(_QWORD *))(v22 + 16))(v24);
      sub_100017E48((uint64_t)v64, &qword_1000B81E0);
      v25 = *v24 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v25, v62, 0, 0);
      sub_1000135B0(v25, (uint64_t)v13);
      (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v24, v20);
      v26 = (uint64_t)v61;
      sub_1000135F4((uint64_t)v13, (uint64_t)v61);
      sub_1000135B0(v26, (uint64_t)v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
      v27 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_headphoneModel];
      swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_headphoneModel], v64, 33, 0);
      sub_100017E00((uint64_t)v7, v27);
      swift_endAccess(v64);
      v28 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:", 88.0);
      if (*(_DWORD *)(v26 + *(int *)(v8 + 124)) == 8221)
        v29 = 0x800000010008C130;
      else
        v29 = 0xEA00000000007365;
      v30 = v28;
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v29);
      v32 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v31, v30);

      v33 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v32);
      objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v34 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray2Color");
      objc_msgSend(v33, "setTintColor:", v34);

      v35 = objc_msgSend(v2, "contentView");
      objc_msgSend(v35, "addSubview:", v33);

      v36 = objc_msgSend(v2, "contentView");
      v37 = objc_msgSend(v36, "mainContentGuide");

      v38 = (void *)objc_opt_self(NSLayoutConstraint);
      v39 = sub_100009F00((uint64_t *)&unk_1000B8730);
      v40 = swift_allocObject(v39, 64, 7);
      *(_OWORD *)(v40 + 16) = xmmword_100088460;
      v41 = objc_msgSend(v33, "topAnchor");
      v42 = objc_msgSend(v37, "topAnchor");
      v43 = objc_msgSend(v41, "constraintGreaterThanOrEqualToAnchor:", v42);

      *(_QWORD *)(v40 + 32) = v43;
      v44 = objc_msgSend(v33, "bottomAnchor");
      v45 = objc_msgSend(v37, "bottomAnchor");
      v46 = objc_msgSend(v44, "constraintLessThanOrEqualToAnchor:", v45);

      *(_QWORD *)(v40 + 40) = v46;
      v47 = objc_msgSend(v33, "centerYAnchor");
      v48 = objc_msgSend(v37, "centerYAnchor");
      v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

      *(_QWORD *)(v40 + 48) = v49;
      v50 = objc_msgSend(v33, "centerXAnchor");
      v51 = objc_msgSend(v37, "centerXAnchor");
      v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

      *(_QWORD *)(v40 + 56) = v52;
      v64[0] = v40;
      specialized Array._endMutation()(v53);
      v54 = v64[0];
      sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v54);
      objc_msgSend(v38, "activateConstraints:", isa);

      sub_100013638((uint64_t)v61);
      return;
    }
    sub_100017E48((uint64_t)v64, &qword_1000B81E0);
  }
  if (qword_1000B7AD0 != -1)
    swift_once(&qword_1000B7AD0, sub_1000162C4);
  v56 = type metadata accessor for Logger(0);
  v57 = sub_1000093F8(v56, (uint64_t)qword_1000B8360);
  v58 = Logger.logObject.getter(v57);
  v59 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v60 = 0;
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "HeadphoneNotGenuineViewController: Headphone Model is nil, exiting", v60, 2u);
    swift_slowDealloc(v60, -1, -1);
  }

}

void sub_100016B00(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  void *v10;
  NSString *v11;
  id v12;
  uint64_t v13;
  NSString *v14;
  unint64_t v15;
  id v16;
  NSString v17;
  Class isa;
  id v19;
  id v20;
  id v21;
  void *v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  id v32;
  NSString v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  void *v52;
  id v53;
  uint64_t v54;
  id v55;
  void **aBlock;
  uint64_t v57;
  void (*v58)(uint64_t, void *);
  void *v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  char v62[24];
  char v63[120];

  v2 = v1;
  v4 = a1[1];
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v5);

  sub_10001FF98(0x5Eu);
  v7 = v6;
  v8 = sub_100009F00(&qword_1000B7CE0);
  inited = swift_initStackObject(v8, v63);
  *(_OWORD *)(inited + 16) = xmmword_100088470;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = NSForegroundColorAttributeName;
  v12 = objc_msgSend(v10, "systemBlueColor");
  v13 = sub_100009F84(0, (unint64_t *)&qword_1000B7F00, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v12;
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = NSUnderlineStyleAttributeName;
  *(_QWORD *)(inited + 104) = &type metadata for Int;
  *(_QWORD *)(inited + 80) = 0;
  v14 = NSUnderlineStyleAttributeName;
  v15 = sub_100070AA4(inited);
  v16 = objc_allocWithZone((Class)NSAttributedString);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  type metadata accessor for Key(0);
  sub_10000A1B0((unint64_t *)&qword_1000B7CF0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100087DB8);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v15);
  v19 = objc_msgSend(v16, "initWithString:attributes:", v17, isa);

  v20 = objc_msgSend(v2, "contentView");
  v21 = objc_msgSend(v20, "subtitleLabel");

  if (v21)
  {
    v22 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel];
    *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel] = v21;

  }
  v23 = &v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_headphoneModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_headphoneModel], v62, 0, 0);
  v24 = type metadata accessor for HeadphoneModel(0);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48);
  if (v25(v23, 1, v24) || *(_DWORD *)&v23[*(int *)(v24 + 124)] != 8221)
  {
    swift_bridgeObjectRetain(v4);
  }
  else
  {
    sub_10001FF98(0x5Fu);
    v4 = v26;
  }
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "setTitle:", v27);

  if (v25(v23, 1, v24) || *(_DWORD *)&v23[*(int *)(v24 + 124)] != 8221)
  {
    v28 = a1[2];
    v30 = a1[3];
    swift_bridgeObjectRetain(v30);
  }
  else
  {
    v28 = sub_10001FF98(0x60u);
    v30 = v29;
  }
  aBlock = (void **)v28;
  v57 = v30;
  swift_bridgeObjectRetain(v30);
  v31._countAndFlagsBits = 32;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  swift_bridgeObjectRelease(v30);
  v32 = objc_allocWithZone((Class)NSMutableAttributedString);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  v34 = objc_msgSend(v32, "initWithString:", v33);

  objc_msgSend(v34, "appendAttributedString:", v19);
  v35 = OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel], "setAttributedText:", v34);
  objc_msgSend(*(id *)&v2[v35], "setUserInteractionEnabled:", 1);
  v36 = *(void **)&v2[v35];
  v37 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v38 = v36;
  v39 = objc_msgSend(v37, "initWithTarget:action:", v2, "handleTapOnLabel:");
  objc_msgSend(v38, "addGestureRecognizer:", v39);

  v40 = objc_msgSend(v2, "contentView");
  objc_msgSend(v40, "setSubtitleLabel:", *(_QWORD *)&v2[v35]);

  v41 = a1[5];
  v42 = swift_allocObject(&unk_1000A6960, 24, 7);
  swift_unknownObjectWeakInit(v42 + 16, v2);
  swift_bridgeObjectRetain(v41);
  swift_retain(v42);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41);
  v60 = sub_100017C44;
  v61 = v42;
  aBlock = _NSConcreteStackBlock;
  v57 = 1107296256;
  v58 = sub_100011720;
  v59 = &unk_1000A6978;
  v44 = _Block_copy(&aBlock);
  v45 = (void *)objc_opt_self(PRXAction);
  v46 = objc_msgSend(v45, "actionWithTitle:style:handler:", v43, 0, v44);

  _Block_release(v44);
  v47 = v61;
  swift_release(v42);

  v48 = a1[7];
  v49 = HIBYTE(v48) & 0xF;
  if ((v48 & 0x2000000000000000) == 0)
    v49 = a1[6] & 0xFFFFFFFFFFFFLL;
  if (v49)
  {
    v50 = swift_allocObject(&unk_1000A6960, 24, 7);
    swift_unknownObjectWeakInit(v50 + 16, v2);
    swift_bridgeObjectRetain(v48);
    swift_retain(v50);
    v51 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v48);
    v60 = sub_100017C7C;
    v61 = v50;
    aBlock = _NSConcreteStackBlock;
    v57 = 1107296256;
    v58 = sub_100011720;
    v59 = &unk_1000A69A0;
    v52 = _Block_copy(&aBlock);
    v53 = objc_msgSend(v45, "actionWithTitle:style:handler:", v51, 1, v52);

    _Block_release(v52);
    v54 = v61;
    swift_release(v50);
    v55 = objc_msgSend(v2, "addAction:", v53, swift_release(v54).n128_f64[0]);

  }
}

void sub_100017168(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_presenter);

    if (v7)
    {
      a3();
      swift_unknownObjectRelease(v7);
    }
  }
}

void sub_1000171E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  _QWORD *v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t Strong;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  id v59;
  NSURL *v60;
  void *v61;
  void *v62;
  unint64_t v63;
  Class isa;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v1 = v0;
  v2 = sub_100009F00(&qword_1000B7F08);
  __chkstk_darwin(v2, v3);
  v68 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v67 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100009F00(&qword_1000B83D0);
  __chkstk_darwin(v9, v10);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel;
  v14 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel], "attributedText");
  if (v14)
  {
    v15 = v14;
    v65 = v6;
    v66 = v5;
    v16 = objc_msgSend(v14, "string");

    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    v71 = v17;
    v72 = v19;
    v69 = sub_10001FF98(0x5Eu);
    v70 = v20;
    v21 = type metadata accessor for Locale(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v12, 1, 1, v21);
    v22 = sub_100009F40();
    v23 = StringProtocol.range<A>(of:options:range:locale:)(&v69, 0, 0, 0, 1, v12, &type metadata for String, &type metadata for String, v22, v22);
    v25 = v24;
    v27 = v26;
    sub_100017E48((uint64_t)v12, &qword_1000B83D0);
    swift_bridgeObjectRelease(v70);
    if ((v27 & 1) != 0)
    {
      swift_bridgeObjectRelease(v19);
    }
    else
    {
      v28 = *(void **)&v1[v13];
      v71 = v23;
      v72 = v25;
      v69 = v17;
      v70 = v19;
      v29 = v28;
      v30 = sub_100009F00(&qword_1000B83D8);
      v31 = sub_100017DB4();
      v32 = _NSRange.init<A, B>(_:in:)(&v71, &v69, v30, &type metadata for String, v31, v22);
      LOBYTE(v30) = sub_1000177DC(v29, v32, v33);

      v35 = v65;
      v34 = v66;
      if ((v30 & 1) != 0)
      {
        if (qword_1000B7AD0 != -1)
          swift_once(&qword_1000B7AD0, sub_1000162C4);
        v36 = type metadata accessor for Logger(0);
        sub_1000093F8(v36, (uint64_t)qword_1000B8360);
        v37 = v1;
        v38 = Logger.logObject.getter(v37);
        v39 = static os_log_type_t.default.getter();
        v40 = &unk_1000B8000;
        if (os_log_type_enabled(v38, v39))
        {
          v41 = (uint8_t *)swift_slowAlloc(12, -1);
          v42 = swift_slowAlloc(32, -1);
          *(_DWORD *)v41 = 136315138;
          v71 = v42;
          v44 = *(_QWORD *)&v37[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_learnMoreLink];
          v43 = *(_QWORD *)&v37[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_learnMoreLink
                              + 8];
          swift_bridgeObjectRetain(v43);
          v45 = v44;
          v35 = v65;
          v69 = sub_10004B4F0(v45, v43, &v71);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);

          v46 = v43;
          v40 = (_QWORD *)&unk_1000B8000;
          swift_bridgeObjectRelease(v46);
          _os_log_impl((void *)&_mh_execute_header, v38, v39, "User tapped learn more, presenting support link %s", v41, 0xCu);
          swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
          v47 = v42;
          v34 = v66;
          swift_slowDealloc(v47, -1, -1);
          swift_slowDealloc(v41, -1, -1);

        }
        else
        {

        }
        v48 = (uint64_t)v68;
        Strong = swift_unknownObjectWeakLoadStrong(&v37[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_presenter]);
        if (Strong)
        {
          v50 = Strong;
          v51 = v40;
          if (qword_1000B7C00 != -1)
            swift_once(&qword_1000B7C00, sub_1000713FC);
          v52 = sub_1000093F8(v36, (uint64_t)qword_1000B9F80);
          v53 = Logger.logObject.getter(v52);
          v54 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v53, v54))
          {
            v55 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v55 = 0;
            _os_log_impl((void *)&_mh_execute_header, v53, v54, "Requested dismiss", v55, 2u);
            swift_slowDealloc(v55, -1, -1);
          }

          v56 = swift_unknownObjectWeakLoadStrong(v50 + 56);
          if (v56)
          {
            v57 = v56;
            sub_10002ECCC();
            swift_unknownObjectRelease(v50);
            v50 = v57;
          }
          v40 = v51;
          swift_unknownObjectRelease(v50);
        }
        URL.init(string:)(*(_QWORD *)&v37[v40[112]], *(_QWORD *)&v37[v40[112] + 8]);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v48, 1, v34) == 1)
        {
          sub_100017E48(v48, &qword_1000B7F08);
        }
        else
        {
          v58 = v67;
          (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v67, v48, v34);
          v59 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
          URL._bridgeToObjectiveC()(v60);
          v62 = v61;
          v63 = sub_100070CE0((uint64_t)&_swiftEmptyArrayStorage);
          type metadata accessor for OpenExternalURLOptionsKey(0);
          sub_10000A1B0((unint64_t *)&qword_1000B7D90, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100087D74);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v63);
          objc_msgSend(v59, "openURL:options:completionHandler:", v62, isa, 0);

          (*(void (**)(char *, uint64_t))(v35 + 8))(v58, v34);
        }
      }
    }
  }
}

id sub_1000177DC(void *a1, unint64_t a2, char *a3)
{
  void *v3;
  id result;
  void *v8;
  id v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  char *v24;

  result = objc_msgSend(a1, "attributedText");
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend(objc_allocWithZone((Class)NSLayoutManager), "init");
    v10 = objc_msgSend(objc_allocWithZone((Class)NSTextContainer), "initWithSize:", 0.0, 0.0);
    v11 = objc_msgSend(objc_allocWithZone((Class)NSTextStorage), "initWithAttributedString:", v8);
    objc_msgSend(v9, "addTextContainer:", v10);
    objc_msgSend(v11, "addLayoutManager:", v9);
    objc_msgSend(v10, "setLineFragmentPadding:", 0.0);
    objc_msgSend(v10, "setLineBreakMode:", objc_msgSend(a1, "lineBreakMode"));
    objc_msgSend(v10, "setMaximumNumberOfLines:", objc_msgSend(a1, "numberOfLines"));
    objc_msgSend(a1, "bounds");
    v13 = v12;
    v15 = v14;
    objc_msgSend(v10, "setSize:", v12, v14);
    objc_msgSend(v3, "locationInView:", a1);
    v17 = v16;
    v19 = v18;
    objc_msgSend(v9, "usedRectForTextContainer:", v10);
    v24 = (char *)objc_msgSend(v9, "characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:", v10, 0, v17 - ((v13 - v20) * 0.5 - v21), v19 - ((v15 - v22) * 0.5 - v23));

    return (id)((unint64_t)v24 >= a2 && &v24[-a2] < a3);
  }
  return result;
}

uint64_t sub_100017AE0()
{
  return type metadata accessor for HeadphoneNotGenuineViewController(0);
}

uint64_t type metadata accessor for HeadphoneNotGenuineViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B83B8;
  if (!qword_1000B83B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphoneNotGenuineViewController);
  return result;
}

void sub_100017B24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_1000884C8;
  sub_100017BBC(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_1000884E0;
    v4[4] = &unk_1000884F8;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_100017BBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000B83C8)
  {
    v2 = type metadata accessor for HeadphoneModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000B83C8);
  }
}

uint64_t sub_100017C10()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_type);
}

uint64_t sub_100017C20()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100017C44(uint64_t a1)
{
  uint64_t v1;

  sub_100017168(a1, v1, (void (*)(void))sub_100073618);
}

uint64_t sub_100017C64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100017C74(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100017C7C(uint64_t a1)
{
  uint64_t v1;

  sub_100017168(a1, v1, (void (*)(void))sub_1000734FC);
}

id sub_100017C9C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_super v14;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel;
  v7 = objc_allocWithZone((Class)PRXLabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "initWithStyle:", 1);
  v9 = &v8[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_learnMoreLink];
  *(_QWORD *)v9 = 0xD000000000000025;
  *((_QWORD *)v9 + 1) = 0x800000010008C100;
  v10 = &v8[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_headphoneModel];
  v11 = type metadata accessor for HeadphoneModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = &v8[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_presenter];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  v8[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_type] = 17;

  v14.receiver = v8;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, "initWithContentView:", a1);
}

unint64_t sub_100017DB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B83E0;
  if (!qword_1000B83E0)
  {
    v1 = sub_1000157E4(&qword_1000B83D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1000B83E0);
  }
  return result;
}

uint64_t sub_100017E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B83E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100017E48(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100009F00(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100017E8C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t ObjCClassFromMetadata;
  id v6;
  id v7;
  id v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  Class isa;
  objc_super v42;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v42.receiver = v2;
  v42.super_class = ObjectType;
  objc_msgSendSuper2(&v42, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 1);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjectType);
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v7, "userInterfaceStyle");

  v9 = v8 == (id)1;
  if (v8 == (id)1)
    v10 = 0x746867694CLL;
  else
    v10 = 1802658116;
  if (v9)
    v11 = (void *)0xE500000000000000;
  else
    v11 = (void *)0xE400000000000000;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v11);
  v13 = objc_allocWithZone((Class)BSUICAPackageView);
  v14 = v6;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x800000010008C1B0);
  v16 = objc_msgSend(v13, "initWithPackageName:inBundle:", v15, v14, 0xD00000000000001FLL);

  if (v16)
  {
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setState:animated:", v17, 1);

    objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v18 = objc_msgSend(v3, "contentView");
    objc_msgSend(v18, "addSubview:", v16);

    v19 = objc_msgSend(v3, "contentView");
    v20 = objc_msgSend(v19, "mainContentGuide");

    v21 = (void *)objc_opt_self(NSLayoutConstraint);
    v22 = sub_100009F00((uint64_t *)&unk_1000B8730);
    v23 = swift_allocObject(v22, 80, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100087E70;
    v24 = objc_msgSend(v16, "topAnchor");
    v25 = objc_msgSend(v20, "topAnchor");
    v26 = objc_msgSend(v24, "constraintGreaterThanOrEqualToAnchor:", v25);

    *(_QWORD *)(v23 + 32) = v26;
    v27 = objc_msgSend(v16, "bottomAnchor");
    v28 = objc_msgSend(v20, "bottomAnchor");
    v29 = objc_msgSend(v27, "constraintLessThanOrEqualToAnchor:", v28);

    *(_QWORD *)(v23 + 40) = v29;
    v30 = objc_msgSend(v16, "heightAnchor");
    v31 = objc_msgSend(v30, "constraintEqualToConstant:", 240.0);

    *(_QWORD *)(v23 + 48) = v31;
    v32 = objc_msgSend(v16, "widthAnchor");
    v33 = objc_msgSend(v32, "constraintEqualToConstant:", 120.0);

    *(_QWORD *)(v23 + 56) = v33;
    v34 = objc_msgSend(v16, "centerYAnchor");
    v35 = objc_msgSend(v20, "centerYAnchor");
    v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

    *(_QWORD *)(v23 + 64) = v36;
    v37 = objc_msgSend(v16, "centerXAnchor");
    v38 = objc_msgSend(v20, "centerXAnchor");
    v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

    *(_QWORD *)(v23 + 72) = v39;
    specialized Array._endMutation()(v40);
    sub_10000B880();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v23);
    objc_msgSend(v21, "activateConstraints:", isa);

  }
  else
  {
    __break(1u);
  }
}

void sub_100018450(uint64_t a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void **v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  void *v22;
  void (*v23)(uint64_t);
  uint64_t v24;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v4);

  v5 = *(_QWORD *)(a1 + 40);
  v6 = swift_allocObject(&unk_1000A6A20, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v23 = sub_10001883C;
  v24 = v6;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A6A38;
  v8 = _Block_copy(&v19);
  v9 = (void *)objc_opt_self(PRXAction);
  v10 = objc_msgSend(v9, "actionWithTitle:style:handler:", v7, 0, v8);

  _Block_release(v8);
  v11 = v24;
  swift_release(v6);

  v12 = *(_QWORD *)(a1 + 56);
  v13 = swift_allocObject(&unk_1000A6A20, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v23 = sub_100018870;
  v24 = v13;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A6A60;
  v15 = _Block_copy(&v19);
  v16 = objc_msgSend(v9, "actionWithTitle:style:handler:", v14, 1, v15);

  _Block_release(v15);
  v17 = v24;
  swift_release(v13);
  v18 = objc_msgSend(v1, "addAction:", v16, swift_release(v17).n128_f64[0]);

}

void sub_1000186E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong+ OBJC_IVAR____TtC20HeadphoneProxService60HeadphoneAdaptiveControlsConversationAwarenessViewController_presenter);

    if (v7)
    {
      sub_100073E34(a3 & 1);
      swift_unknownObjectRelease(v7);
    }
  }
}

uint64_t type metadata accessor for HeadphoneAdaptiveControlsConversationAwarenessViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService60HeadphoneAdaptiveControlsConversationAwarenessViewController);
}

uint64_t sub_100018808()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService60HeadphoneAdaptiveControlsConversationAwarenessViewController_type);
}

uint64_t sub_100018818()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10001883C(uint64_t a1)
{
  uint64_t v1;

  sub_1000186E0(a1, v1, 1);
}

uint64_t sub_100018858(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100018868(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100018870(uint64_t a1)
{
  uint64_t v1;

  sub_1000186E0(a1, v1, 0);
}

uint64_t sub_100018894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B8428);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B8428);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_100018924()
{
  qword_1000B8440 = 0x4024000000000000;
}

void sub_100018934()
{
  qword_1000B8448 = 0x4014000000000000;
}

void sub_100018944()
{
  qword_1000B8450 = 0x3FF0000000000000;
}

void sub_100018954()
{
  qword_1000B8458 = 0x401C000000000000;
}

void sub_100018964(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int *v37;
  unsigned int (*v38)(char *, uint64_t, int *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  char *v46;
  uint64_t v47;
  NSString v48;
  uint64_t v49;
  NSString v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  NSString v94;
  uint64_t v95;
  uint64_t v96;
  NSString v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  NSString v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  int *v107;
  void *v108;
  char *v109;
  int *v110;
  void *v111;
  uint64_t v112;
  id v113;
  id v114;
  id v115;
  id v116;
  uint64_t v117;
  void *v118;
  id v119;
  double v120;
  char *v121;
  id v122;
  uint64_t inited;
  void *v124;
  void *v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  void *v130;
  id v131;
  id v132;
  id v133;
  id v134;
  void *v135;
  void *v136;
  int *v137;
  id v138;
  id v139;
  id v140;
  id v141;
  char *v142;
  id v143;
  id v144;
  int *v145;
  id v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  _BYTE *v154;
  id v155;
  NSString v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  id v163;
  NSString v164;
  id v165;
  id v166;
  NSString v167;
  id v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  id v173;
  char *v174;
  uint64_t v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  id v188;
  id v189;
  id v190;
  id v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  id v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  id v210;
  id v211;
  id v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  char *v221;
  id v222;
  id v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  id v231;
  id v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  id v240;
  double v241;
  double v242;
  double v243;
  id v244;
  id v245;
  id v246;
  id v247;
  int *v248;
  id v249;
  id v250;
  id v251;
  id v252;
  id v253;
  id v254;
  id v255;
  id v256;
  id v257;
  id v258;
  id v259;
  unsigned int (*v260)(char *, uint64_t, int *);
  id v261;
  id v262;
  id v263;
  id v264;
  id v265;
  id v266;
  id v267;
  id v268;
  id v269;
  id v270;
  id v271;
  id v272;
  id v273;
  id v274;
  id v275;
  id v276;
  id v277;
  id v278;
  id v279;
  id v280;
  id v281;
  id v282;
  id v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  id v287;
  id v288;
  id v289;
  id v290;
  id v291;
  id v292;
  id v293;
  id v294;
  id v295;
  id v296;
  id v297;
  id v298;
  id v299;
  id v300;
  id v301;
  id v302;
  id v303;
  id v304;
  id v305;
  id v306;
  id v307;
  id v308;
  id v309;
  id v310;
  id v311;
  id v312;
  id v313;
  id v314;
  id v315;
  id v316;
  id v317;
  id v318;
  id v319;
  id v320;
  id v321;
  id v322;
  int *v323;
  id v324;
  void *v325;
  char *v326;
  char *v327;
  id v328;
  id v329;
  id v330;
  id v331;
  id v332;
  id v333;
  id v334;
  id v335;
  id v336;
  id v337;
  id v338;
  uint64_t v339;
  uint64_t v340;
  void *v341;
  Class isa;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  id v346;
  int *v347;
  id v348;
  uint64_t v349;
  id v350;
  uint64_t v351;
  uint64_t v352;
  id v353;
  char *v354;
  id v355;
  unsigned int (*v356)(char *, uint64_t, int *);
  int *v357;
  id v358;
  id v359;
  char *v360;
  char *v361;
  char *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  _BYTE v370[216];
  uint64_t v371[27];
  _BYTE v372[192];
  double v373;
  double v374;
  double v375;
  char v376[24];
  objc_super v377;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_100009F00(&qword_1000B7F18);
  v7 = __chkstk_darwin(v5, v6);
  v360 = (char *)&v345 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7, v9);
  v361 = (char *)&v345 - v11;
  __chkstk_darwin(v10, v12);
  v14 = (char *)&v345 - v13;
  v15 = sub_100009F00(&qword_1000B7F08);
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v345 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  v363 = v19;
  v364 = v20;
  __chkstk_darwin(v19, v21);
  v362 = (char *)&v345 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v23, v24);
  v26 = (char *)&v345 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for HeadphoneViewModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27, v29);
  v31 = (char *)&v345 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v377.receiver = v3;
  v377.super_class = ObjectType;
  objc_msgSendSuper2(&v377, "viewDidLoad");
  v366 = v3;
  v32 = (uint64_t)&v3[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_viewModel];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_viewModel], v376, 0, 0);
  sub_10001B868(v32, (uint64_t)v26, &qword_1000B8C40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    v33 = &qword_1000B8C40;
    v34 = (uint64_t)v26;
LABEL_9:
    sub_100017E48(v34, v33);
LABEL_10:
    if (qword_1000B7AD8 == -1)
    {
LABEL_11:
      v41 = type metadata accessor for Logger(0);
      v42 = sub_1000093F8(v41, (uint64_t)qword_1000B8428);
      v43 = Logger.logObject.getter(v42);
      v44 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "No view model present", v45, 2u);
        swift_slowDealloc(v45, -1, -1);
      }

      return;
    }
LABEL_76:
    swift_once(&qword_1000B7AD8, sub_100018894);
    goto LABEL_11;
  }
  sub_10001B7C4((uint64_t)v26, (uint64_t)v31);
  sub_10001B808((uint64_t)&v31[*(int *)(v27 + 56)], (uint64_t)v371);
  sub_10001B808((uint64_t)v371, (uint64_t)v372);
  v35 = (uint64_t)v31;
  if (sub_10001B850((uint64_t)v372) == 1)
  {
    sub_10000EC60((uint64_t)v31, type metadata accessor for HeadphoneViewModel);
    goto LABEL_10;
  }
  v36 = &v31[*(int *)(v27 + 44)];
  sub_10001B868((uint64_t)v36, (uint64_t)v14, &qword_1000B7F18);
  v37 = (int *)type metadata accessor for HeadphoneAssets(0);
  v38 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v37 - 1) + 48);
  if (v38(v14, 1, v37) == 1)
  {
    sub_10001B808((uint64_t)v371, (uint64_t)v370);
    sub_10000B75C((uint64_t)v370);
    sub_100017E48((uint64_t)v14, &qword_1000B7F18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v364 + 56))(v18, 1, 1, v363);
LABEL_8:
    sub_10001B8AC(v371);
    sub_10000EC60(v35, type metadata accessor for HeadphoneViewModel);
    v33 = &qword_1000B7F08;
    v34 = (uint64_t)v18;
    goto LABEL_9;
  }
  v40 = v363;
  v39 = v364;
  (*(void (**)(char *, char *, uint64_t))(v364 + 16))(v18, v14, v363);
  sub_10001B808((uint64_t)v371, (uint64_t)v370);
  sub_10000B75C((uint64_t)v370);
  sub_10000EC60((uint64_t)v14, type metadata accessor for HeadphoneAssets);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v18, 0, 1, v40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v18, 1, v40) == 1)
    goto LABEL_8;
  v354 = v36;
  v356 = v38;
  v357 = v37;
  v349 = v27;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v362, v18, v40);
  v46 = v366;
  objc_msgSend(v366, "setDismissalType:", 1);
  v47 = *(_QWORD *)(v35 + 8);
  swift_bridgeObjectRetain(v47);
  v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v47);
  objc_msgSend(v46, "setTitle:", v48);

  v49 = *(_QWORD *)(v35 + 24);
  v352 = v35;
  swift_bridgeObjectRetain(v49);
  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49);
  objc_msgSend(v46, "setSubtitle:", v50);

  v51 = *(void **)&v46[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftLabel];
  v52 = *(void **)&v46[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightLabel];
  v53 = *(void **)&v46[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseLabel];
  v54 = (void *)objc_opt_self(UIFont);
  v55 = (void *)objc_opt_self(UIColor);
  v56 = v51;
  v353 = v56;
  v358 = v52;
  v359 = v53;
  objc_msgSend(v56, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v56, "setAdjustsFontForContentSizeCategory:", 1);
  v57 = objc_msgSend(v54, "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  objc_msgSend(v56, "setFont:", v57);

  v58 = v55;
  v59 = objc_msgSend(v55, "labelColor");
  objc_msgSend(v56, "setTextColor:", v59);

  objc_msgSend(v56, "setNumberOfLines:", 0);
  v60 = objc_msgSend(v46, "contentView");
  objc_msgSend(v60, "addSubview:", v56);

  v61 = v358;
  objc_msgSend(v61, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v61, "setAdjustsFontForContentSizeCategory:", 1);
  v351 = (uint64_t)UIFontTextStyleCaption1;
  v62 = objc_msgSend(v54, "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  objc_msgSend(v61, "setFont:", v62);

  v365 = (uint64_t)v55;
  v63 = objc_msgSend(v55, "labelColor");
  objc_msgSend(v61, "setTextColor:", v63);

  objc_msgSend(v61, "setNumberOfLines:", 0);
  v64 = objc_msgSend(v46, "contentView");
  objc_msgSend(v64, "addSubview:", v61);

  v65 = v61;
  v355 = v61;

  v66 = v359;
  objc_msgSend(v66, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v66, "setAdjustsFontForContentSizeCategory:", 1);
  v67 = objc_msgSend(v54, "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  objc_msgSend(v66, "setFont:", v67);

  v68 = objc_msgSend(v58, "labelColor");
  objc_msgSend(v66, "setTextColor:", v68);

  objc_msgSend(v66, "setNumberOfLines:", 0);
  v69 = objc_msgSend(v46, "contentView");
  objc_msgSend(v69, "addSubview:", v66);

  v70 = *(void **)&v46[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightGenerationLabel];
  v71 = *(void **)&v46[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseGenerationLabel];
  v72 = *(id *)&v46[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftGenerationLabel];
  v73 = v70;
  v359 = v71;
  objc_msgSend(v72, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v72, "setAdjustsFontForContentSizeCategory:", 1);
  v74 = v54;
  v75 = v351;
  v76 = objc_msgSend(v54, "preferredFontForTextStyle:", v351);
  objc_msgSend(v72, "setFont:", v76);

  v77 = (id)v365;
  v78 = objc_msgSend((id)v365, "secondaryLabelColor");
  objc_msgSend(v72, "setTextColor:", v78);

  objc_msgSend(v72, "setNumberOfLines:", 0);
  v79 = objc_msgSend(v46, "contentView");
  objc_msgSend(v79, "addSubview:", v72);

  v80 = v73;
  v358 = v80;
  objc_msgSend(v80, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v80, "setAdjustsFontForContentSizeCategory:", 1);
  v81 = v74;
  v82 = objc_msgSend(v74, "preferredFontForTextStyle:", v75);
  objc_msgSend(v80, "setFont:", v82);

  v83 = v77;
  v84 = objc_msgSend(v77, "secondaryLabelColor");
  objc_msgSend(v80, "setTextColor:", v84);

  objc_msgSend(v80, "setNumberOfLines:", 0);
  v85 = objc_msgSend(v46, "contentView");
  objc_msgSend(v85, "addSubview:", v80);

  v86 = v359;
  v350 = v86;
  objc_msgSend(v86, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v86, "setAdjustsFontForContentSizeCategory:", 1);
  v87 = v81;
  v88 = v353;
  v89 = objc_msgSend(v87, "preferredFontForTextStyle:", v75);
  objc_msgSend(v86, "setFont:", v89);

  v90 = objc_msgSend(v83, "secondaryLabelColor");
  objc_msgSend(v86, "setTextColor:", v90);

  objc_msgSend(v86, "setNumberOfLines:", 0);
  v91 = objc_msgSend(v46, "contentView");
  objc_msgSend(v91, "addSubview:", v86);

  sub_10001FF98(0x1Cu);
  v93 = v92;
  v94 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v93);
  objc_msgSend(v88, "setText:", v94);

  objc_msgSend(v88, "setTextAlignment:", 2);
  v359 = v72;
  objc_msgSend(v72, "setTextAlignment:", 2);
  sub_10001FF98(0x1Du);
  v96 = v95;
  v97 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v96);
  v98 = v355;
  objc_msgSend(v355, "setText:", v97);

  objc_msgSend(v98, "setTextAlignment:", 0);
  objc_msgSend(v80, "setTextAlignment:", 0);
  sub_10001FF98(0x1Eu);
  v100 = v99;
  v101 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v100);
  objc_msgSend(v66, "setText:", v101);

  v346 = v66;
  objc_msgSend(v66, "setTextAlignment:", 1);
  v102 = URL.path.getter(objc_msgSend(v86, "setTextAlignment:", 1));
  v104 = v103;
  v105 = String.count.getter(v102);
  swift_bridgeObjectRelease(v104);
  if (v105 >= 1)
  {
    v106 = v361;
    sub_10001B868((uint64_t)v354, (uint64_t)v361, &qword_1000B7F18);
    v107 = v357;
    if (v356(v106, 1, v357) == 1)
    {
      sub_100017E48((uint64_t)v106, &qword_1000B7F18);
      v108 = 0;
LABEL_26:
      v114 = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "initWithImage:", v108);

      v115 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
      v116 = objc_msgSend(v115, "userInterfaceStyle");

      if (v116 == (id)2)
        v117 = 1;
      else
        v117 = 2;
      URL._bridgeToObjectiveC()((NSURL *)1);
      v111 = v118;
      objc_msgSend(v114, "updateViewForAssetType:adjustmentsURL:", v117, v118);
      goto LABEL_38;
    }
    v112 = *(_QWORD *)&v106[v107[8]];
    swift_bridgeObjectRetain(v112);
    sub_10000EC60((uint64_t)v106, type metadata accessor for HeadphoneAssets);
    if ((unint64_t)v112 >> 62)
    {
      if (v112 < 0)
        v343 = v112;
      else
        v343 = v112 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v112);
      v108 = (void *)_CocoaArrayWrapper.endIndex.getter(v343);
      swift_bridgeObjectRelease(v112);
      if (!v108)
        goto LABEL_25;
    }
    else
    {
      v108 = *(void **)((v112 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v108)
      {
LABEL_25:
        swift_bridgeObjectRelease(v112);
        goto LABEL_26;
      }
    }
    if ((v112 & 0xC000000000000001) != 0)
    {
      v113 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v112);
      goto LABEL_24;
    }
    if (*(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v113 = *(id *)(v112 + 32);
LABEL_24:
      v108 = v113;
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_84;
  }
  v109 = v360;
  sub_10001B868((uint64_t)v354, (uint64_t)v360, &qword_1000B7F18);
  v110 = v357;
  if (v356(v109, 1, v357) != 1)
  {
    v112 = *(_QWORD *)&v109[v110[8]];
    swift_bridgeObjectRetain(v112);
    sub_10000EC60((uint64_t)v109, type metadata accessor for HeadphoneAssets);
    if (!((unint64_t)v112 >> 62))
    {
      v111 = *(void **)((v112 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v111)
      {
LABEL_36:
        swift_bridgeObjectRelease(v112);
        goto LABEL_37;
      }
LABEL_32:
      if ((v112 & 0xC000000000000001) != 0)
      {
        v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v112);
      }
      else
      {
        if (!*(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v119 = *(id *)(v112 + 32);
      }
      v111 = v119;
      goto LABEL_36;
    }
LABEL_84:
    if (v112 < 0)
      v344 = v112;
    else
      v344 = v112 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v112);
    v111 = (void *)_CocoaArrayWrapper.endIndex.getter(v344);
    swift_bridgeObjectRelease(v112);
    if (!v111)
      goto LABEL_36;
    goto LABEL_32;
  }
  sub_100017E48((uint64_t)v109, &qword_1000B7F18);
  v111 = 0;
LABEL_37:
  v114 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v111);
LABEL_38:

  objc_msgSend(v114, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v120) = 1148846080;
  objc_msgSend(v114, "setContentCompressionResistancePriority:forAxis:", 0, v120);
  v121 = v366;
  v122 = objc_msgSend(v366, "contentView");
  v354 = (char *)v114;
  objc_msgSend(v122, "addSubview:", v114);

  v351 = sub_100009F00((uint64_t *)&unk_1000B8730);
  inited = swift_initStackObject(v351, &v369);
  *(_OWORD *)(inited + 16) = xmmword_100088590;
  v124 = *(void **)&v121[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftCircle];
  *(_QWORD *)(inited + 32) = v124;
  v125 = *(void **)&v121[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightCircle];
  *(_QWORD *)(inited + 40) = v125;
  v126 = *(void **)&v121[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseCircle];
  *(_QWORD *)(inited + 48) = v126;
  v368 = inited;
  specialized Array._endMutation()(inited);
  v127 = v368;
  v361 = v124;
  v356 = v125;
  v348 = v126;
  v128 = 0;
  do
  {
    if ((v127 & 0xC000000000000001) != 0)
      v129 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v128, v127);
    else
      v129 = *(id *)(v127 + 8 * v128 + 32);
    v130 = v129;
    objc_msgSend(v129, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v131 = objc_msgSend(v130, "layer");
    if (qword_1000B7AF8 != -1)
      swift_once(&qword_1000B7AF8, sub_100018954);
    ++v128;
    objc_msgSend(v131, "setCornerRadius:", *(double *)&qword_1000B8458 * 0.5);

    v132 = objc_msgSend((id)v365, "systemGrayColor");
    objc_msgSend(v130, "setBackgroundColor:", v132);

    v133 = objc_msgSend(v366, "contentView");
    objc_msgSend(v133, "addSubview:", v130);

  }
  while (v128 != 3);
  swift_bridgeObjectRelease(v127);
  v134 = v366;
  v135 = *(void **)&v366[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightArm];
  v136 = *(void **)&v366[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseArm];
  v137 = (int *)*(id *)&v366[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftArm];
  v138 = v135;
  v357 = v136;
  objc_msgSend(v137, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v139 = (id)v365;
  v140 = objc_msgSend((id)v365, "systemGrayColor");
  objc_msgSend(v137, "setBackgroundColor:", v140);

  v141 = objc_msgSend(v134, "contentView");
  objc_msgSend(v141, "addSubview:", v137);

  v142 = (char *)v138;
  v360 = v142;
  objc_msgSend(v142, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v143 = objc_msgSend(v139, "systemGrayColor");
  objc_msgSend(v142, "setBackgroundColor:", v143);

  v144 = objc_msgSend(v134, "contentView");
  objc_msgSend(v144, "addSubview:", v142);

  v145 = v357;
  objc_msgSend(v145, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v146 = objc_msgSend(v139, "systemGrayColor");
  objc_msgSend(v145, "setBackgroundColor:", v146);

  v147 = objc_msgSend(v134, "contentView");
  objc_msgSend(v147, "addSubview:", v145);
  v357 = v137;

  v347 = v145;
  v148 = *(int *)(v349 + 68);
  v149 = *(_QWORD *)(v352 + v148);
  v150 = *(_QWORD *)(v149 + 16);
  if (v150)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v352 + v148));
    LODWORD(v349) = 0;
    v151 = 0;
    v365 = -v150;
    v152 = v149 + 56;
    v153 = v359;
    v345 = v149 + 56;
LABEL_47:
    v154 = (_BYTE *)(v152 + 32 * v151++);
    while ((unint64_t)(v151 - 1) < *(_QWORD *)(v149 + 16))
    {
      v158 = *((_QWORD *)v154 - 3);
      v157 = *((_QWORD *)v154 - 2);
      v159 = (void *)*((_QWORD *)v154 - 1);
      if (*v154)
      {
        v160 = *((_QWORD *)v154 - 3);
        v161 = *((_QWORD *)v154 - 2);
        v162 = (void *)*((_QWORD *)v154 - 1);
        if (*v154 != 1)
        {
          sub_100011368(v160, v161, v162, 2u);
          v166 = v159;
          v167 = String._bridgeToObjectiveC()();
          v168 = v350;
          objc_msgSend(v350, "setText:", v167);

          v169 = (char *)(v365 + v151);
          if (v159)
          {
            objc_msgSend(v168, "setTextColor:", v166);
            objc_msgSend(v348, "setBackgroundColor:", v166);
            objc_msgSend(v347, "setBackgroundColor:", v166);

            v170 = v158;
            v171 = v157;
            v172 = v159;
          }
          else
          {
            v170 = v158;
            v171 = v157;
            v172 = 0;
          }
          sub_1000113B0(v170, v171, v172, 2u);
          LODWORD(v349) = 1;
          v152 = v345;
          if (!v169)
          {
LABEL_63:
            swift_bridgeObjectRelease(v149);
            goto LABEL_65;
          }
          goto LABEL_47;
        }
        sub_100011368(v160, v161, v162, 1u);
        v163 = v159;
        swift_bridgeObjectRetain(v157);
        v164 = String._bridgeToObjectiveC()();
        v165 = v358;
        objc_msgSend(v358, "setText:", v164);

        if (v159)
        {
          objc_msgSend(v165, "setTextColor:", v163);
          objc_msgSend(v356, "setBackgroundColor:", v163);
          objc_msgSend(v360, "setBackgroundColor:", v163);
          sub_1000113B0(v158, v157, v159, 1u);
          swift_bridgeObjectRelease(v157);

        }
        else
        {
          sub_1000113B0(v158, v157, 0, 1u);
          swift_bridgeObjectRelease(v157);
        }
        v153 = v359;
      }
      else
      {
        swift_bridgeObjectRetain(*((_QWORD *)v154 - 2));
        sub_100011368(v158, v157, v159, 0);
        v155 = v159;
        v156 = String._bridgeToObjectiveC()();
        objc_msgSend(v153, "setText:", v156);

        if (v159)
        {
          objc_msgSend(v153, "setTextColor:", v155);
          objc_msgSend(v361, "setBackgroundColor:", v155);
          objc_msgSend(v357, "setBackgroundColor:", v155);
          sub_1000113B0(v158, v157, v159, 0);
          swift_bridgeObjectRelease(v157);

        }
        else
        {
          sub_1000113B0(v158, v157, 0, 0);
          swift_bridgeObjectRelease(v157);
        }
      }
      ++v151;
      v154 += 32;
      if (v365 + v151 == 1)
        goto LABEL_63;
    }
    __break(1u);
    goto LABEL_76;
  }
  LODWORD(v349) = 0;
LABEL_65:
  v173 = objc_msgSend(v366, "contentView", v345);
  v174 = (char *)objc_msgSend(v173, "mainContentGuide");

  v175 = swift_allocObject(v351, 296, 7);
  *(_OWORD *)(v175 + 16) = xmmword_1000885A0;
  v176 = v353;
  v177 = objc_msgSend(v353, "topAnchor");
  v178 = objc_msgSend(v174, "topAnchor");
  v179 = objc_msgSend(v177, "constraintGreaterThanOrEqualToAnchor:", v178);

  *(_QWORD *)(v175 + 32) = v179;
  v180 = objc_msgSend(v176, "leftAnchor");
  v366 = v174;
  v181 = objc_msgSend(v174, "leftAnchor");
  v182 = objc_msgSend(v180, "constraintGreaterThanOrEqualToAnchor:", v181);

  *(_QWORD *)(v175 + 40) = v182;
  v183 = objc_msgSend(v176, "rightAnchor");
  v184 = objc_msgSend(v357, "leftAnchor");
  if (qword_1000B7AE0 != -1)
    swift_once(&qword_1000B7AE0, sub_100018924);
  v185 = objc_msgSend(v183, "constraintEqualToAnchor:constant:", v184, -*(double *)&qword_1000B8440);

  *(_QWORD *)(v175 + 48) = v185;
  v186 = v359;
  v187 = objc_msgSend(v359, "trailingAnchor");
  v188 = objc_msgSend(v176, "trailingAnchor");
  v189 = objc_msgSend(v187, "constraintEqualToAnchor:", v188);

  *(_QWORD *)(v175 + 56) = v189;
  v190 = objc_msgSend(v186, "leftAnchor");
  v191 = objc_msgSend(v366, "leftAnchor");
  v192 = objc_msgSend(v190, "constraintGreaterThanOrEqualToAnchor:", v191);

  *(_QWORD *)(v175 + 64) = v192;
  v193 = objc_msgSend(v186, "topAnchor");
  v194 = objc_msgSend(v176, "bottomAnchor");
  v195 = objc_msgSend(v193, "constraintEqualToAnchor:", v194);

  *(_QWORD *)(v175 + 72) = v195;
  v196 = objc_msgSend(v186, "bottomAnchor");
  v197 = objc_msgSend(v354, "topAnchor");
  if (qword_1000B7AE8 != -1)
    swift_once(&qword_1000B7AE8, sub_100018934);
  v198 = objc_msgSend(v196, "constraintLessThanOrEqualToAnchor:constant:", v197, -*(double *)&qword_1000B8448);

  *(_QWORD *)(v175 + 80) = v198;
  v199 = v355;
  v200 = objc_msgSend(v355, "topAnchor");
  v201 = objc_msgSend(v176, "topAnchor");
  v202 = objc_msgSend(v200, "constraintEqualToAnchor:", v201);

  *(_QWORD *)(v175 + 88) = v202;
  v203 = objc_msgSend(v199, "rightAnchor");
  v204 = v366;
  v205 = objc_msgSend(v366, "rightAnchor");
  v206 = objc_msgSend(v203, "constraintLessThanOrEqualToAnchor:", v205);

  *(_QWORD *)(v175 + 96) = v206;
  v207 = objc_msgSend(v355, "leftAnchor");
  v208 = objc_msgSend(v360, "rightAnchor");
  v209 = objc_msgSend(v207, "constraintEqualToAnchor:constant:", v208, *(double *)&qword_1000B8440);

  *(_QWORD *)(v175 + 104) = v209;
  v210 = v358;
  v211 = objc_msgSend(v358, "leftAnchor");
  v212 = objc_msgSend(v355, "leftAnchor");
  v213 = objc_msgSend(v211, "constraintEqualToAnchor:", v212);

  *(_QWORD *)(v175 + 112) = v213;
  v214 = objc_msgSend(v210, "rightAnchor");
  v215 = objc_msgSend(v204, "rightAnchor");
  v216 = objc_msgSend(v214, "constraintLessThanOrEqualToAnchor:", v215);

  *(_QWORD *)(v175 + 120) = v216;
  v217 = objc_msgSend(v210, "topAnchor");
  v218 = objc_msgSend(v355, "bottomAnchor");
  v219 = objc_msgSend(v217, "constraintEqualToAnchor:", v218);

  *(_QWORD *)(v175 + 128) = v219;
  v220 = objc_msgSend(v210, "bottomAnchor");
  v221 = v354;
  v222 = objc_msgSend(v354, "topAnchor");
  v223 = objc_msgSend(v220, "constraintLessThanOrEqualToAnchor:constant:", v222, -*(double *)&qword_1000B8448);

  *(_QWORD *)(v175 + 136) = v223;
  v224 = objc_msgSend(v221, "centerXAnchor");
  v225 = objc_msgSend(v204, "centerXAnchor");
  v226 = objc_msgSend(v224, "constraintEqualToAnchor:", v225);

  *(_QWORD *)(v175 + 144) = v226;
  v227 = objc_msgSend(v221, "topAnchor");
  v228 = objc_msgSend(v204, "topAnchor");
  v229 = objc_msgSend(v227, "constraintGreaterThanOrEqualToAnchor:", v228);

  *(_QWORD *)(v175 + 152) = v229;
  v230 = objc_msgSend(v221, "bottomAnchor");
  v231 = objc_msgSend(v204, "bottomAnchor");
  v232 = objc_msgSend(v230, "constraintEqualToAnchor:", v231);

  *(_QWORD *)(v175 + 160) = v232;
  v233 = v361;
  v234 = objc_msgSend(v361, "widthAnchor");
  v235 = objc_msgSend(v234, "constraintEqualToConstant:", *(double *)&qword_1000B8458);

  *(_QWORD *)(v175 + 168) = v235;
  v236 = objc_msgSend(v233, "heightAnchor");
  v237 = objc_msgSend(v233, "widthAnchor");
  v238 = objc_msgSend(v236, "constraintEqualToAnchor:", v237);

  *(_QWORD *)(v175 + 176) = v238;
  v239 = objc_msgSend(v233, "centerXAnchor");
  v240 = objc_msgSend(v221, "leftAnchor");
  v241 = v373;
  v242 = v374;
  v243 = v375;
  v244 = objc_msgSend(v239, "constraintEqualToAnchor:constant:", v240, v373);

  *(_QWORD *)(v175 + 184) = v244;
  v245 = objc_msgSend(v233, "centerYAnchor");
  v246 = objc_msgSend(v221, "topAnchor");
  v247 = objc_msgSend(v245, "constraintEqualToAnchor:constant:", v246, v242);

  *(_QWORD *)(v175 + 192) = v247;
  v248 = v357;
  v249 = objc_msgSend(v357, "topAnchor");
  v250 = objc_msgSend(v353, "centerYAnchor");
  v251 = objc_msgSend(v249, "constraintEqualToAnchor:", v250);

  *(_QWORD *)(v175 + 200) = v251;
  v252 = objc_msgSend(v248, "bottomAnchor");
  v253 = objc_msgSend(v233, "centerYAnchor");
  v254 = objc_msgSend(v252, "constraintEqualToAnchor:", v253);

  *(_QWORD *)(v175 + 208) = v254;
  v255 = objc_msgSend(v248, "centerXAnchor");
  v256 = objc_msgSend(v233, "centerXAnchor");
  v257 = objc_msgSend(v255, "constraintEqualToAnchor:", v256);

  *(_QWORD *)(v175 + 216) = v257;
  v258 = objc_msgSend(v248, "widthAnchor");
  if (qword_1000B7AF0 != -1)
    swift_once(&qword_1000B7AF0, sub_100018944);
  v259 = objc_msgSend(v258, "constraintEqualToConstant:", *(double *)&qword_1000B8450);

  *(_QWORD *)(v175 + 224) = v259;
  v260 = v356;
  v261 = objc_msgSend(v356, "widthAnchor");
  v262 = objc_msgSend(v261, "constraintEqualToConstant:", *(double *)&qword_1000B8458);

  *(_QWORD *)(v175 + 232) = v262;
  v263 = objc_msgSend(v260, "heightAnchor");
  v264 = objc_msgSend(v260, "widthAnchor");
  v265 = objc_msgSend(v263, "constraintEqualToAnchor:", v264);

  *(_QWORD *)(v175 + 240) = v265;
  v266 = objc_msgSend(v260, "centerXAnchor");
  v267 = objc_msgSend(v221, "rightAnchor");
  v268 = objc_msgSend(v266, "constraintEqualToAnchor:constant:", v267, -v241);

  *(_QWORD *)(v175 + 248) = v268;
  v269 = objc_msgSend(v260, "centerYAnchor");
  v270 = objc_msgSend(v361, "centerYAnchor");
  v271 = objc_msgSend(v269, "constraintEqualToAnchor:", v270);

  *(_QWORD *)(v175 + 256) = v271;
  v272 = v360;
  v273 = objc_msgSend(v360, "topAnchor");
  v274 = objc_msgSend(v355, "centerYAnchor");
  v275 = objc_msgSend(v273, "constraintEqualToAnchor:", v274);

  *(_QWORD *)(v175 + 264) = v275;
  v276 = objc_msgSend(v272, "bottomAnchor");
  v277 = objc_msgSend(v260, "centerYAnchor");
  v278 = objc_msgSend(v276, "constraintEqualToAnchor:", v277);

  *(_QWORD *)(v175 + 272) = v278;
  v279 = objc_msgSend(v272, "centerXAnchor");
  v280 = objc_msgSend(v260, "centerXAnchor");
  v281 = objc_msgSend(v279, "constraintEqualToAnchor:", v280);

  *(_QWORD *)(v175 + 280) = v281;
  v282 = objc_msgSend(v272, "widthAnchor");
  v283 = objc_msgSend(v282, "constraintEqualToConstant:", *(double *)&qword_1000B8450);

  *(_QWORD *)(v175 + 288) = v283;
  v368 = v175;
  specialized Array._endMutation()(v284);
  v285 = v368;
  if ((v349 & 1) != 0)
  {
    v286 = swift_allocObject(v351, 152, 7);
    *(_OWORD *)(v286 + 16) = xmmword_1000885B0;
    v287 = v346;
    v288 = objc_msgSend(v346, "topAnchor");
    v289 = v366;
    v290 = objc_msgSend(v366, "topAnchor");
    v291 = objc_msgSend(v288, "constraintEqualToAnchor:", v290);

    *(_QWORD *)(v286 + 32) = v291;
    v292 = objc_msgSend(v287, "leadingAnchor");
    v293 = objc_msgSend(v289, "leadingAnchor");
    v294 = objc_msgSend(v292, "constraintEqualToAnchor:", v293);

    *(_QWORD *)(v286 + 40) = v294;
    v295 = objc_msgSend(v287, "trailingAnchor");
    v296 = objc_msgSend(v289, "trailingAnchor");
    v297 = objc_msgSend(v295, "constraintEqualToAnchor:", v296);

    *(_QWORD *)(v286 + 48) = v297;
    v298 = v350;
    v299 = objc_msgSend(v350, "trailingAnchor");
    v300 = objc_msgSend(v287, "trailingAnchor");
    v301 = objc_msgSend(v299, "constraintEqualToAnchor:", v300);

    *(_QWORD *)(v286 + 56) = v301;
    v302 = objc_msgSend(v298, "leadingAnchor");
    v303 = objc_msgSend(v287, "leadingAnchor");
    v304 = objc_msgSend(v302, "constraintEqualToAnchor:", v303);

    *(_QWORD *)(v286 + 64) = v304;
    v305 = objc_msgSend(v298, "topAnchor");
    v306 = objc_msgSend(v287, "bottomAnchor");
    v307 = objc_msgSend(v305, "constraintEqualToAnchor:", v306);

    *(_QWORD *)(v286 + 72) = v307;
    v308 = objc_msgSend(v298, "bottomAnchor");
    v309 = objc_msgSend(v353, "topAnchor");
    v310 = objc_msgSend(v308, "constraintEqualToAnchor:constant:", v309, -*(double *)&qword_1000B8448);

    *(_QWORD *)(v286 + 80) = v310;
    v311 = v348;
    v312 = objc_msgSend(v348, "widthAnchor");
    v313 = objc_msgSend(v312, "constraintEqualToConstant:", *(double *)&qword_1000B8458);

    *(_QWORD *)(v286 + 88) = v313;
    v314 = objc_msgSend(v311, "heightAnchor");
    v315 = objc_msgSend(v311, "widthAnchor");
    v316 = objc_msgSend(v314, "constraintEqualToAnchor:", v315);

    *(_QWORD *)(v286 + 96) = v316;
    v317 = objc_msgSend(v311, "centerXAnchor");
    v318 = objc_msgSend(v354, "centerXAnchor");
    v319 = objc_msgSend(v317, "constraintEqualToAnchor:", v318);

    *(_QWORD *)(v286 + 104) = v319;
    v320 = objc_msgSend(v311, "centerYAnchor");
    v321 = objc_msgSend(v354, "topAnchor");
    v322 = objc_msgSend(v320, "constraintEqualToAnchor:constant:", v321, v243);
    sub_10001B8AC(v371);

    *(_QWORD *)(v286 + 112) = v322;
    v323 = v347;
    v324 = objc_msgSend(v347, "topAnchor");
    v325 = v298;
    v326 = v366;
    v327 = v354;
    v328 = objc_msgSend(v325, "bottomAnchor");
    v329 = v326;
    v330 = objc_msgSend(v324, "constraintEqualToAnchor:constant:", v328, *(double *)&qword_1000B8448);

    *(_QWORD *)(v286 + 120) = v330;
    v331 = objc_msgSend(v323, "bottomAnchor");
    v332 = objc_msgSend(v311, "centerYAnchor");
    v333 = objc_msgSend(v331, "constraintEqualToAnchor:", v332);

    *(_QWORD *)(v286 + 128) = v333;
    v334 = objc_msgSend(v323, "centerXAnchor");
    v335 = objc_msgSend(v311, "centerXAnchor");
    v336 = objc_msgSend(v334, "constraintEqualToAnchor:", v335);

    *(_QWORD *)(v286 + 136) = v336;
    v337 = objc_msgSend(v323, "widthAnchor");
    v338 = objc_msgSend(v337, "constraintEqualToConstant:", *(double *)&qword_1000B8450);

    *(_QWORD *)(v286 + 144) = v338;
    v367 = v286;
    specialized Array._endMutation()(v339);
    sub_100069394(v367);
    v285 = v368;
    v340 = v363;
  }
  else
  {
    sub_10001B8AC(v371);
    objc_msgSend(v346, "setHidden:", 1);
    objc_msgSend(v350, "setHidden:", 1);
    objc_msgSend(v348, "setHidden:", 1);
    objc_msgSend(v347, "setHidden:", 1);
    v340 = v363;
    v329 = v366;
    v327 = v354;
  }
  v341 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_10000B880();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v285);
  objc_msgSend(v341, "activateConstraints:", isa);

  (*(void (**)(char *, uint64_t))(v364 + 8))(v362, v340);
  sub_10000EC60(v352, type metadata accessor for HeadphoneViewModel);
}

uint64_t sub_10001B450()
{
  return type metadata accessor for HeadphoneMismatchViewController(0);
}

uint64_t type metadata accessor for HeadphoneMismatchViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B84F0;
  if (!qword_1000B84F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphoneMismatchViewController);
  return result;
}

void sub_10001B494(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[15];

  sub_10001B534(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = &unk_100088600;
    v4[14] = &unk_100088618;
    swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
}

void sub_10001B534(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000B8500)
  {
    v2 = type metadata accessor for HeadphoneViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000B8500);
  }
}

uint64_t sub_10001B588()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_type);
}

id sub_10001B598(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  objc_super v24;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = &v3[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_viewModel];
  v7 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftLabel;
  v9 = objc_allocWithZone((Class)UILabel);
  v10 = v3;
  *(_QWORD *)&v3[v8] = objc_msgSend(v9, "init");
  v11 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightLabel;
  *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseLabel;
  *(_QWORD *)&v10[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftGenerationLabel;
  *(_QWORD *)&v10[v13] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v14 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightGenerationLabel;
  *(_QWORD *)&v10[v14] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v15 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseGenerationLabel;
  *(_QWORD *)&v10[v15] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v16 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftCircle;
  *(_QWORD *)&v10[v16] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v17 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftArm;
  *(_QWORD *)&v10[v17] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v18 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightCircle;
  *(_QWORD *)&v10[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v19 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightArm;
  *(_QWORD *)&v10[v19] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v20 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseCircle;
  *(_QWORD *)&v10[v20] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v21 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseArm;
  *(_QWORD *)&v10[v21] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v22 = &v10[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_presenter];
  *((_QWORD *)v22 + 1) = 0;
  swift_unknownObjectWeakInit(v22, 0);
  v10[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_type] = 16;

  v24.receiver = v10;
  v24.super_class = ObjectType;
  return objc_msgSendSuper2(&v24, "initWithContentView:", a1);
}

uint64_t sub_10001B7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001B808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B8508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001B850(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 152);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_10001B868(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100009F00(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_10001B8AC(uint64_t *a1)
{
  sub_10001B91C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_10001B91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result;

  result = a20;
  if (a20)
  {
    swift_bridgeObjectRelease(a20);
    return swift_bridgeObjectRelease(a22);
  }
  return result;
}

id sub_10001B954()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews];
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews]);
    if (v2)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease(v1);
    return objc_msgSend(v0, "leftAnchor");
  }
  if (v1 < 0)
    v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews];
  else
    v7 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews]);
  result = (id)_CocoaArrayWrapper.endIndex.getter(v7);
  if (!result)
    goto LABEL_12;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease(v1);
    v6 = objc_msgSend(v5, "leftAnchor");

    if (v6)
      return v6;
    return objc_msgSend(v0, "leftAnchor");
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v1 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_10001BA50()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t result;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews];
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews]);
    if (v2)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(v1);
    return (unint64_t)objc_msgSend(v0, "rightAnchor");
  }
  if (v1 < 0)
    v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews];
  else
    v7 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews]);
  v2 = _CocoaArrayWrapper.endIndex.getter(v7);
  if (!v2)
    goto LABEL_14;
LABEL_3:
  result = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_17:
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v1);
LABEL_8:
    v5 = v4;
    swift_bridgeObjectRelease(v1);
    v6 = objc_msgSend(v5, "rightAnchor");

    if (v6)
      return (unint64_t)v6;
    return (unint64_t)objc_msgSend(v0, "rightAnchor");
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v1 + 8 * result + 32);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

char *sub_10001BB64(uint64_t a1, uint64_t a2, __int16 a3, double a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  _BYTE *v7;
  objc_class *ObjectType;
  uint64_t v14;
  _BYTE *v15;
  id v16;
  id v17;
  id v18;
  char *v19;
  Class isa;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  uint64_t v136;
  objc_super v137;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType(v7, a2);
  *(_QWORD *)&v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_AXConstraints] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_nonAXConstraints] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews] = a1;
  v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_batteryType] = HIBYTE(a3);
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v133 = a2;
    else
      v133 = a2 & 0xFFFFFFFFFFFFFF8;
    v134 = v7;
    v14 = _CocoaArrayWrapper.endIndex.getter(v133);
  }
  else
  {
    v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v7;
  }
  if (v14 <= 1)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(a6);
  v16 = objc_allocWithZone((Class)type metadata accessor for LabelledBatteryView());
  *(_QWORD *)&v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_batteryView] = sub_1000254A8(0, 3, a3 & 1, a4);

  v137.receiver = v7;
  v137.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v137, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = objc_allocWithZone((Class)UIStackView);
  sub_100009F84(0, &qword_1000B8598, UIView_ptr);
  v19 = (char *)v17;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a2);
  v21 = objc_msgSend(v18, "initWithArrangedSubviews:", isa);

  v22 = *(void **)&v19[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView];
  *(_QWORD *)&v19[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView] = v21;
  v23 = v21;

  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v136 = OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_batteryView;
  v24 = *(void **)&v19[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_batteryView];
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v19, "addSubview:", v23);
  objc_msgSend(v19, "addSubview:", v24);
  v25 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v26 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  objc_msgSend(v19, "addLayoutGuide:", v25);
  objc_msgSend(v19, "addLayoutGuide:", v26);
  v135 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v27 = swift_allocObject(v135, 128, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100088640;
  v28 = objc_msgSend(v25, "topAnchor");
  v29 = objc_msgSend(v19, "topAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v27 + 32) = v30;
  v31 = objc_msgSend(v23, "topAnchor");
  v32 = objc_msgSend(v25, "bottomAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v27 + 40) = v33;
  v34 = objc_msgSend(v23, "leadingAnchor");
  v35 = objc_msgSend(v19, "leadingAnchor");
  v36 = objc_msgSend(v34, "constraintGreaterThanOrEqualToAnchor:", v35);

  *(_QWORD *)(v27 + 48) = v36;
  v37 = objc_msgSend(v23, "trailingAnchor");
  v38 = objc_msgSend(v19, "trailingAnchor");
  v39 = objc_msgSend(v37, "constraintLessThanOrEqualToAnchor:", v38);

  *(_QWORD *)(v27 + 56) = v39;
  v40 = objc_msgSend(v23, "centerXAnchor");
  v41 = objc_msgSend(v19, "centerXAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v27 + 64) = v42;
  v43 = objc_msgSend(v26, "topAnchor");
  v44 = objc_msgSend(v23, "bottomAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  *(_QWORD *)(v27 + 72) = v45;
  v46 = objc_msgSend(*(id *)&v19[v136], "topAnchor");
  v47 = objc_msgSend(v26, "bottomAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v47, 20.0);

  *(_QWORD *)(v27 + 80) = v48;
  v49 = objc_msgSend(*(id *)&v19[v136], "bottomAnchor");
  v50 = objc_msgSend(v19, "bottomAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v27 + 88) = v51;
  v52 = objc_msgSend(*(id *)&v19[v136], "leadingAnchor");
  v53 = objc_msgSend(v19, "leadingAnchor");
  v54 = objc_msgSend(v52, "constraintGreaterThanOrEqualToAnchor:", v53);

  *(_QWORD *)(v27 + 96) = v54;
  v55 = objc_msgSend(*(id *)&v19[v136], "trailingAnchor");
  v56 = objc_msgSend(v19, "trailingAnchor");
  v57 = objc_msgSend(v55, "constraintLessThanOrEqualToAnchor:", v56);

  *(_QWORD *)(v27 + 104) = v57;
  v58 = objc_msgSend(*(id *)&v19[v136], "centerXAnchor");
  v59 = objc_msgSend(v19, "centerXAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

  *(_QWORD *)(v27 + 112) = v60;
  v61 = objc_msgSend(v25, "heightAnchor");
  v62 = objc_msgSend(v26, "heightAnchor");
  v63 = objc_msgSend(v61, "constraintEqualToAnchor:", v62);

  *(_QWORD *)(v27 + 120) = v63;
  specialized Array._endMutation()(v64);
  v65 = *(_QWORD *)&v19[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_nonAXConstraints];
  *(_QWORD *)&v19[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_nonAXConstraints] = v27;
  swift_bridgeObjectRelease(v65);
  v66 = swift_allocObject(v135, 200, 7);
  *(_OWORD *)(v66 + 16) = xmmword_100088650;
  v67 = objc_msgSend(v25, "leadingAnchor");
  v68 = objc_msgSend(v19, "leadingAnchor");
  v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

  *(_QWORD *)(v66 + 32) = v69;
  v70 = objc_msgSend(v25, "topAnchor");
  v71 = objc_msgSend(v19, "topAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v66 + 40) = v72;
  v73 = objc_msgSend(v25, "bottomAnchor");
  v74 = objc_msgSend(v19, "bottomAnchor");
  v75 = objc_msgSend(v73, "constraintEqualToAnchor:", v74);

  *(_QWORD *)(v66 + 48) = v75;
  v76 = objc_msgSend(v25, "widthAnchor");
  v77 = objc_msgSend(v26, "widthAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v66 + 56) = v78;
  v79 = objc_msgSend(v25, "heightAnchor");
  v80 = objc_msgSend(v26, "heightAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

  *(_QWORD *)(v66 + 64) = v81;
  v82 = objc_msgSend(v26, "topAnchor");
  v83 = objc_msgSend(v19, "topAnchor");
  v84 = objc_msgSend(v82, "constraintEqualToAnchor:", v83);

  *(_QWORD *)(v66 + 72) = v84;
  v85 = objc_msgSend(v26, "bottomAnchor");
  v86 = objc_msgSend(v19, "bottomAnchor");
  v87 = objc_msgSend(v85, "constraintEqualToAnchor:", v86);

  *(_QWORD *)(v66 + 80) = v87;
  v88 = objc_msgSend(v26, "leadingAnchor");
  v89 = objc_msgSend(v25, "trailingAnchor");
  v90 = objc_msgSend(v88, "constraintEqualToAnchor:", v89);

  *(_QWORD *)(v66 + 88) = v90;
  v91 = objc_msgSend(v26, "trailingAnchor");
  v92 = objc_msgSend(v19, "trailingAnchor");
  v93 = objc_msgSend(v91, "constraintEqualToAnchor:", v92);

  *(_QWORD *)(v66 + 96) = v93;
  v94 = objc_msgSend(v23, "topAnchor");
  v95 = objc_msgSend(v25, "topAnchor");
  v96 = objc_msgSend(v94, "constraintGreaterThanOrEqualToAnchor:", v95);

  *(_QWORD *)(v66 + 104) = v96;
  v97 = objc_msgSend(v23, "bottomAnchor");
  v98 = objc_msgSend(v25, "bottomAnchor");
  v99 = objc_msgSend(v97, "constraintLessThanOrEqualToAnchor:", v98);

  *(_QWORD *)(v66 + 112) = v99;
  v100 = objc_msgSend(v23, "leadingAnchor");
  v101 = objc_msgSend(v25, "leadingAnchor");
  v102 = objc_msgSend(v100, "constraintGreaterThanOrEqualToAnchor:", v101);

  *(_QWORD *)(v66 + 120) = v102;
  v103 = objc_msgSend(v23, "trailingAnchor");
  v104 = objc_msgSend(v25, "trailingAnchor");
  v105 = objc_msgSend(v103, "constraintLessThanOrEqualToAnchor:", v104);

  *(_QWORD *)(v66 + 128) = v105;
  v106 = objc_msgSend(v23, "centerXAnchor");
  v107 = objc_msgSend(v25, "centerXAnchor");
  v108 = objc_msgSend(v106, "constraintEqualToAnchor:", v107);

  *(_QWORD *)(v66 + 136) = v108;
  v109 = objc_msgSend(v23, "centerYAnchor");
  v110 = objc_msgSend(v25, "centerYAnchor");
  v111 = objc_msgSend(v109, "constraintEqualToAnchor:", v110);

  *(_QWORD *)(v66 + 144) = v111;
  v112 = objc_msgSend(*(id *)&v19[v136], "topAnchor");
  v113 = objc_msgSend(v26, "topAnchor");
  v114 = objc_msgSend(v112, "constraintGreaterThanOrEqualToAnchor:", v113);

  *(_QWORD *)(v66 + 152) = v114;
  v115 = objc_msgSend(*(id *)&v19[v136], "bottomAnchor");
  v116 = objc_msgSend(v26, "bottomAnchor");
  v117 = objc_msgSend(v115, "constraintLessThanOrEqualToAnchor:", v116);

  *(_QWORD *)(v66 + 160) = v117;
  v118 = objc_msgSend(*(id *)&v19[v136], "leadingAnchor");
  v119 = objc_msgSend(v26, "leadingAnchor");
  v120 = objc_msgSend(v118, "constraintGreaterThanOrEqualToAnchor:", v119);

  *(_QWORD *)(v66 + 168) = v120;
  v121 = objc_msgSend(*(id *)&v19[v136], "trailingAnchor");
  v122 = objc_msgSend(v26, "trailingAnchor");
  v123 = objc_msgSend(v121, "constraintLessThanOrEqualToAnchor:", v122);

  *(_QWORD *)(v66 + 176) = v123;
  v124 = objc_msgSend(*(id *)&v19[v136], "centerXAnchor");
  v125 = objc_msgSend(v26, "centerXAnchor");
  v126 = objc_msgSend(v124, "constraintEqualToAnchor:", v125);

  *(_QWORD *)(v66 + 184) = v126;
  v127 = objc_msgSend(*(id *)&v19[v136], "centerYAnchor");
  v128 = objc_msgSend(v26, "centerYAnchor");
  v129 = objc_msgSend(v127, "constraintEqualToAnchor:", v128);

  *(_QWORD *)(v66 + 192) = v129;
  specialized Array._endMutation()(v130);
  v131 = *(_QWORD *)&v19[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_AXConstraints];
  *(_QWORD *)&v19[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_AXConstraints] = v66;
  swift_bridgeObjectRelease(v131);
  sub_10001CB1C();

  return v19;
}

void sub_10001CB1C()
{
  uint64_t v0;
  id v1;
  id v2;
  char v3;
  void *v4;
  BOOL v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  Class isa;
  uint64_t v11;
  Class v12;

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
  v5 = (v3 & 1) == 0;
  if ((v3 & 1) != 0)
    v6 = &OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_nonAXConstraints;
  else
    v6 = &OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_AXConstraints;
  v7 = *v6;
  v8 = *(_QWORD *)(v0 + v7);
  if (v5)
    v9 = &OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_nonAXConstraints;
  else
    v9 = &OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_AXConstraints;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + v7));
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v8);
  objc_msgSend(v4, "deactivateConstraints:", isa);

  v11 = *(_QWORD *)(v0 + *v9);
  swift_bridgeObjectRetain(v11);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v4, "activateConstraints:", v12);

}

uint64_t sub_10001CCF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v1);
  }
  if (v1 < 0)
    v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  else
    v13 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v2)
    return swift_bridgeObjectRelease(v1);
LABEL_3:
  result = objc_opt_self(UITraitCollection);
  if (v2 >= 1)
  {
    v4 = (void *)result;
    v5 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1);
      else
        v6 = *(id *)(v1 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      v8 = objc_msgSend(v4, "currentTraitCollection");
      v9 = objc_msgSend(v8, "userInterfaceStyle");

      if (v9 == (id)2)
        v10 = 1;
      else
        v10 = 2;
      URL._bridgeToObjectiveC()((NSURL *)1);
      v12 = v11;
      objc_msgSend(v7, "updateViewForAssetType:adjustmentsURL:", v10, v11);

    }
    while (v2 != v5);
    return swift_bridgeObjectRelease(v1);
  }
  __break(1u);
  return result;
}

void sub_10001CE3C(void *a1, uint64_t a2)
{
  void *v2;
  id v4;
  char v5;
  int v6;
  id v7;
  id v8;
  int v9;
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", a1);
  if (a1)
  {
    v4 = objc_msgSend(a1, "preferredContentSizeCategory");
    v5 = UIContentSizeCategory.isAccessibilityCategory.getter(v4);

    v6 = v5 & 1;
  }
  else
  {
    v6 = 2;
  }
  v7 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v8 = objc_msgSend(v7, "preferredContentSizeCategory");

  v9 = UIContentSizeCategory.isAccessibilityCategory.getter(v8);
  if (v6 == 2 || ((v9 ^ (v6 != 0)) & 1) != 0)
    sub_10001CB1C();
}

uint64_t type metadata accessor for HeadphoneImageBatteryView()
{
  return objc_opt_self(_TtC20HeadphoneProxService25HeadphoneImageBatteryView);
}

id sub_10001D024()
{
  void **v0;
  void *v1;
  void *v2;
  id result;

  v1 = *v0;
  v2 = *(void **)((char *)*v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView);
  if (!v2)
    return objc_msgSend(v1, "centerXAnchor");
  result = objc_msgSend(v2, "centerXAnchor");
  if (!result)
    return objc_msgSend(v1, "centerXAnchor");
  return result;
}

id sub_10001D084()
{
  return sub_10001B954();
}

unint64_t sub_10001D0A4()
{
  return sub_10001BA50();
}

uint64_t sub_10001D0C4()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_batteryType);
}

void sub_10001D140(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _swift_stdlib_reportUnimplementedInitializer(a7, a8, "init(frame:)", 12, 0, a1, a2, a3, a4);
  __break(1u);
}

uint64_t type metadata accessor for HeadphoneBudView()
{
  return objc_opt_self(_TtC20HeadphoneProxService16HeadphoneBudView);
}

uint64_t sub_10001D198(uint64_t result, __int16 a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;

  v9 = result;
  if (!((unint64_t)result >> 62))
  {
    v10 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v9);
    if (!((unint64_t)&_swiftEmptyArrayStorage >> 62))
    {
LABEL_12:
      v19 = swift_bridgeObjectRetain_n(&_swiftEmptyArrayStorage, 2);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
      sub_100009F84(0, &qword_1000B8598, UIView_ptr);
      v20 = &_swiftEmptyArrayStorage;
LABEL_13:
      swift_bridgeObjectRelease(&_swiftEmptyArrayStorage);
      v21 = objc_allocWithZone((Class)type metadata accessor for HeadphoneImageBatteryView());
      return (uint64_t)sub_10001BB64((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v20, a2 & 0xFF01, a5, a3, a4);
    }
LABEL_18:
    if ((uint64_t)&_swiftEmptyArrayStorage < 0)
      v22 = &_swiftEmptyArrayStorage;
    else
      v22 = (void *)((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v23 = sub_100009F84(0, &qword_1000B8598, UIView_ptr);
    swift_bridgeObjectRetain(&_swiftEmptyArrayStorage);
    v20 = (void *)_bridgeCocoaArray<A>(_:)(v22, v23);
    goto LABEL_13;
  }
  if (result >= 0)
    result &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(result);
  v10 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v10 >= 1)
  {
    v11 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
      else
        v12 = *(id *)(v9 + 8 * v11 + 32);
      v13 = v12;
      v14 = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "initWithImage:", v12);
      objc_msgSend(v14, "setContentMode:", 4);
      v15 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      ++v11;
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized Array._endMutation()(v18);

    }
    while (v10 != v11);
    swift_bridgeObjectRelease(v9);
    if (!((unint64_t)&_swiftEmptyArrayStorage >> 62))
      goto LABEL_12;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

void sub_10001D3E8()
{
  qword_1000B85A0 = 0x405B800000000000;
}

void sub_10001D464(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  NSString v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  __CFString *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  NSString v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  Class isa;
  id v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  id v86;
  _QWORD aBlock[5];
  uint64_t v88;
  _BYTE v89[216];
  _BYTE v90[144];
  uint64_t v91;

  v3 = type metadata accessor for HeadphoneViewModel(0);
  sub_10001B808(a1 + *(int *)(v3 + 56), (uint64_t)v89);
  sub_10001B808((uint64_t)v89, (uint64_t)v90);
  if (sub_10001B850((uint64_t)v90) != 1)
  {
    v4 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setTitle:", v4);

    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setSubtitle:", v5);

    v6 = *(_QWORD *)(a1 + 40);
    v7 = swift_allocObject(&unk_1000A6B60, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16, v1);
    swift_bridgeObjectRetain(v6);
    swift_retain(v7);
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
    aBlock[4] = sub_10001E034;
    v88 = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100011720;
    aBlock[3] = &unk_1000A6B78;
    v9 = _Block_copy(aBlock);
    v10 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v8, 0, v9);

    _Block_release(v9);
    v11 = v88;
    swift_release(v7);
    v85 = v10;

    v12 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v13 = objc_msgSend(v12, "configurationWithPointSize:weight:", 2, 88.0);
    v14 = (void *)objc_opt_self(UIColor);
    v15 = objc_msgSend(v14, "systemBlueColor");
    v16 = objc_msgSend(v12, "configurationWithHierarchicalColor:", v15);

    v83 = v13;
    v84 = v16;
    v17 = objc_msgSend(v13, "configurationByApplyingConfiguration:", v16);
    v18 = sub_100007F40();
    static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v20 = v19;

    v21 = v17;
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    v23 = (void *)objc_opt_self(UIImage);
    v86 = objc_msgSend(v23, "systemImageNamed:withConfiguration:", v22, v21);

    v82 = v21;
    v24 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v86);
    objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v25 = objc_msgSend(v1, "contentView");
    objc_msgSend(v25, "addSubview:", v24);

    v26 = objc_msgSend(v12, "configurationWithPointSize:weight:", 4, 34.0);
    v27 = objc_msgSend(v14, "systemGrayColor");
    v28 = objc_msgSend(v12, "configurationWithHierarchicalColor:", v27);

    v80 = v28;
    v81 = v26;
    v29 = objc_msgSend(v26, "configurationByApplyingConfiguration:", v28);
    v30 = v91;
    swift_bridgeObjectRetain(v91);
    v31 = v29;
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v33 = objc_msgSend(v23, "systemImageNamed:withConfiguration:", v32, v31);

    v79 = v31;
    v34 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v33);
    objc_msgSend(v34, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v35 = objc_msgSend(v1, "contentView");
    objc_msgSend(v35, "addSubview:", v34);

    v78 = v33;
    v36 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v33);
    objc_msgSend(v36, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v37 = objc_msgSend(v1, "contentView");
    objc_msgSend(v37, "addSubview:", v36);

    if (v86)
    {
      v38 = v86;
      objc_msgSend(v38, "size");
      v40 = v39;
      objc_msgSend(v38, "size");
      v42 = v41;

      v43 = v40 / v42;
    }
    else
    {
      v43 = 1.0;
    }
    v44 = objc_msgSend(v1, "contentView");
    v45 = objc_msgSend(v44, "mainContentGuide");

    v77 = (id)objc_opt_self(NSLayoutConstraint);
    v46 = sub_100009F00((uint64_t *)&unk_1000B8730);
    v47 = swift_allocObject(v46, 104, 7);
    *(_OWORD *)(v47 + 16) = xmmword_100087720;
    v48 = objc_msgSend(v24, "topAnchor");
    v49 = objc_msgSend(v45, "topAnchor");
    v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

    *(_QWORD *)(v47 + 32) = v50;
    v51 = objc_msgSend(v24, "bottomAnchor");
    v52 = objc_msgSend(v45, "bottomAnchor");
    v53 = objc_msgSend(v51, "constraintLessThanOrEqualToAnchor:", v52);

    *(_QWORD *)(v47 + 40) = v53;
    v54 = objc_msgSend(v24, "centerXAnchor");
    v55 = objc_msgSend(v45, "centerXAnchor");
    v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

    *(_QWORD *)(v47 + 48) = v56;
    v57 = objc_msgSend(v24, "heightAnchor");
    if (qword_1000B7B00 != -1)
      swift_once(&qword_1000B7B00, sub_10001D3E8);
    v58 = objc_msgSend(v57, "constraintEqualToConstant:", *(double *)&qword_1000B85A0);

    *(_QWORD *)(v47 + 56) = v58;
    v59 = objc_msgSend(v24, "widthAnchor");
    v60 = objc_msgSend(v24, "heightAnchor");
    v61 = objc_msgSend(v59, "constraintEqualToAnchor:multiplier:", v60, v43);

    *(_QWORD *)(v47 + 64) = v61;
    v62 = objc_msgSend(v34, "centerYAnchor");
    v63 = objc_msgSend(v24, "centerYAnchor");
    v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

    *(_QWORD *)(v47 + 72) = v64;
    v65 = objc_msgSend(v34, "trailingAnchor");
    v66 = objc_msgSend(v24, "leadingAnchor");
    v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

    *(_QWORD *)(v47 + 80) = v67;
    v68 = objc_msgSend(v36, "centerYAnchor");
    v69 = objc_msgSend(v24, "centerYAnchor");
    v70 = objc_msgSend(v68, "constraintEqualToAnchor:", v69);

    *(_QWORD *)(v47 + 88) = v70;
    v71 = objc_msgSend(v36, "leadingAnchor");
    v72 = objc_msgSend(v24, "trailingAnchor");
    v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

    *(_QWORD *)(v47 + 96) = v73;
    aBlock[0] = v47;
    specialized Array._endMutation()(v74);
    v75 = aBlock[0];
    sub_10000B880();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v75);
    objc_msgSend(v77, "activateConstraints:", isa);

  }
}

void sub_10001DE18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneShareAudioDoneViewController_presenter);

    if (v5)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_1000093F8(v6, (uint64_t)qword_1000B9F80);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Requested dismiss", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

      v11 = swift_unknownObjectWeakLoadStrong(v5 + 56);
      if (v11)
      {
        v12 = v11;
        sub_10002ECCC();
        swift_unknownObjectRelease(v5);
        v5 = v12;
      }
      swift_unknownObjectRelease(v5);
    }
  }
}

uint64_t type metadata accessor for HeadphoneShareAudioDoneViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService37HeadphoneShareAudioDoneViewController);
}

uint64_t sub_10001E000()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneShareAudioDoneViewController_type);
}

uint64_t sub_10001E010()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10001E034(uint64_t a1)
{
  uint64_t v1;

  sub_10001DE18(a1, v1);
}

uint64_t sub_10001E03C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001E04C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t destroy for HeadphoneLayoutMetrics(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 152));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 168));
}

uint64_t initializeWithCopy for HeadphoneLayoutMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  v5 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v5;
  v6 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v6;
  v7 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v7;
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for HeadphoneLayoutMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v6 = *(_QWORD *)(a2 + 152);
  v7 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v8 = *(_QWORD *)(a2 + 168);
  v9 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  return a1;
}

__n128 initializeWithTake for HeadphoneLayoutMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for HeadphoneLayoutMetrics(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  v6 = *(_QWORD *)(a2 + 152);
  v7 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 168);
  v9 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneLayoutMetrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 216))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 152);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneLayoutMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 216) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 152) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 216) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneLayoutMetrics()
{
  return &type metadata for HeadphoneLayoutMetrics;
}

uint64_t sub_10001E3D0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  void *v4;
  id v5;
  unsigned int v6;
  __int128 v7;
  unint64_t v8;
  double v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v24;
  id v25;
  unsigned int v26;
  id v31;
  unsigned int v32;
  id v33;
  unsigned int v34;
  id v36;
  unsigned int v37;
  id v38;
  unsigned int v39;
  id v40;
  unsigned int v41;
  id v42;
  unsigned int v43;
  id v44;
  unsigned int v45;
  id v46;
  unsigned int v47;
  id v48;
  unsigned int v49;
  id v50;
  unsigned int v51;
  id v52;
  unsigned int v53;
  id v54;
  unsigned int v55;
  id v56;
  unsigned int v57;
  id v58;
  unsigned int v59;
  id v60;
  unsigned int v61;
  id v62;
  unsigned int v63;
  id v64;
  unsigned int v65;
  id v66;
  unsigned int v67;
  id v68;
  unsigned int v69;
  id v70;
  unsigned int v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _OWORD v77[3];
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  __int128 v82;
  uint64_t v83;
  char v84;
  __int128 v85;
  __int128 v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  __int128 v91;
  __int128 v92;
  double v93;
  _BYTE v94[224];

  v3 = 0xD000000000000011;
  v4 = (void *)objc_opt_self(SFHeadphoneProduct);
  v5 = objc_msgSend(v4, "beatsSoloPro");
  v6 = objc_msgSend(v5, "productID");

  v7 = xmmword_100088730;
  v8 = 0xD000000000000010;
  v9 = 0.0;
  if (v6 == a1)
  {
    v10 = 0;
    v11 = 0;
    v12 = xmmword_100088740;
    v13 = xmmword_100088750;
    v14 = 0x800000010008C470;
    v15 = 0x800000010008C490;
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 1;
    v19 = 1;
    v20 = 0;
LABEL_3:
    v21 = v7;
    _Q2 = 0uLL;
LABEL_4:
    _Q7 = 0uLL;
    v24 = a2;
    goto LABEL_11;
  }
  v8 = 0x73646F70726961;
  v25 = objc_msgSend(v4, "airPods");
  v26 = objc_msgSend(v25, "productID");

  v16 = xmmword_100088760;
  v12 = xmmword_100088770;
  v13 = xmmword_100088780;
  v17 = xmmword_100088790;
  __asm
  {
    FMOV            V7.2D, #25.0
    FMOV            V2.2D, #24.0
  }
  if (v26 == a1)
  {
    v18 = 0;
    v10 = 0;
    v11 = 0;
    v3 = 0xD000000000000019;
    v14 = 0x800000010008C5F0;
    v15 = 0xE700000000000000;
    v19 = 1;
    v20 = 0;
    v7 = xmmword_100088730;
    v21 = xmmword_100088730;
    v24 = a2;
    goto LABEL_11;
  }
  v73 = _Q2;
  v75 = _Q7;
  v31 = objc_msgSend(v4, "airPodsSecondGeneration");
  v32 = objc_msgSend(v31, "productID");

  if (v32 == a1)
  {
    v18 = 0;
    v10 = 0;
    v11 = 0;
    v3 = 0xD000000000000022;
    v14 = 0x800000010008C610;
    v15 = 0xE700000000000000;
    v19 = 1;
    v20 = 0;
    v7 = xmmword_100088730;
    v21 = xmmword_100088730;
    v24 = a2;
    v12 = xmmword_100088770;
    v17 = xmmword_100088790;
    v16 = xmmword_100088760;
    v13 = xmmword_100088780;
    _Q2 = v73;
    _Q7 = v75;
    goto LABEL_11;
  }
  v8 = 0x7073646F70726961;
  v33 = objc_msgSend(v4, "airPodsPro");
  v34 = objc_msgSend(v33, "productID");

  _Q7 = xmmword_1000887A0;
  v21 = xmmword_1000887B0;
  v16 = xmmword_1000887C0;
  v12 = xmmword_1000887D0;
  v13 = xmmword_1000887E0;
  v17 = xmmword_1000887F0;
  __asm { FMOV            V2.2D, #21.0 }
  if (v34 == a1)
  {
    v18 = 0;
    v19 = 0;
    v11 = 0;
    v3 = 0xD000000000000025;
    v20 = 0;
    v14 = 0x800000010008C500;
    v9 = 10.0;
    v10 = 0x406FF55810624DD3;
    v24 = a2;
    v7 = xmmword_100088730;
    v15 = 0xEA00000000006F72;
    goto LABEL_11;
  }
  v74 = _Q2;
  v36 = objc_msgSend(v4, "beatsX");
  v37 = objc_msgSend(v36, "productID");

  v14 = 0x800000010008C470;
  if (v37 == a1)
  {
    v10 = 0;
    v11 = 0;
    v12 = xmmword_100088800;
    v13 = xmmword_100088810;
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 1;
    v19 = 1;
    v20 = 0;
    v8 = 0x61652E7374616562;
    v15 = 0xEF73656E6F687072;
LABEL_22:
    v7 = xmmword_100088730;
    goto LABEL_3;
  }
  v38 = objc_msgSend(v4, "powerBeats3");
  v39 = objc_msgSend(v38, "productID");

  v12 = xmmword_100088820;
  if (v39 == a1)
  {
    v10 = 0;
    v11 = 0;
    v13 = xmmword_100088830;
    v15 = 0x800000010008C5D0;
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 1;
    v19 = 1;
    v20 = 0;
    v8 = 0xD000000000000011;
    goto LABEL_22;
  }
  v40 = objc_msgSend(v4, "beatsSolo");
  v41 = objc_msgSend(v40, "productID");

  v14 = 0x800000010008C470;
  v15 = 0x800000010008C490;
  if (v41 == a1)
  {
    v10 = 0;
    v11 = 0;
    v12 = xmmword_100088840;
    v13 = xmmword_100088850;
LABEL_19:
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 1;
    v19 = 1;
    v20 = 0;
    v8 = 0xD000000000000010;
    goto LABEL_22;
  }
  v42 = objc_msgSend(v4, "beatsStudio");
  v43 = objc_msgSend(v42, "productID");

  if (v43 == a1)
  {
    v10 = 0;
    v11 = 0;
    v12 = xmmword_100088860;
    v13 = xmmword_100088870;
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 1;
    v19 = 1;
    v20 = 0;
    v8 = 0xD000000000000010;
    v15 = 0x800000010008C490;
    goto LABEL_22;
  }
  v44 = objc_msgSend(v4, "powerBeatsPro");
  v45 = objc_msgSend(v44, "productID");

  v14 = 0x800000010008C5A0;
  v15 = 0x800000010008C130;
  if (v45 == a1)
  {
    v18 = 0;
    v10 = 0;
    v11 = 0;
    v16 = xmmword_100088880;
    v12 = xmmword_100088890;
    v13 = xmmword_1000888A0;
    v17 = xmmword_1000888B0;
    __asm { FMOV            V2.2D, #11.0 }
    v19 = 1;
LABEL_27:
    v20 = 0;
    v8 = 0xD000000000000013;
    v3 = 0xD000000000000025;
    v7 = xmmword_100088730;
LABEL_28:
    v21 = v7;
    goto LABEL_4;
  }
  v16 = xmmword_1000888C0;
  v12 = xmmword_1000888D0;
  v13 = xmmword_1000888E0;
  v17 = xmmword_1000888F0;
  __asm { FMOV            V2.2D, #23.0 }
  if (a1 == 8221)
  {
    v18 = 0;
    v19 = 0;
    v11 = 0;
    v10 = 0x4069EAA7EF9DB22DLL;
    goto LABEL_27;
  }
  v72 = _Q2;
  v46 = objc_msgSend(v4, "powerBeats4");
  v47 = objc_msgSend(v46, "productID");

  v14 = 0x800000010008C470;
  if (v47 == a1)
  {
    v10 = 0;
    v11 = 0;
    v12 = xmmword_100088900;
    v13 = xmmword_100088910;
    v15 = 0x800000010008C580;
    goto LABEL_19;
  }
  v48 = objc_msgSend(v4, "airPodsMax");
  v49 = objc_msgSend(v48, "productID");

  v15 = 0xEA00000000007861;
  v7 = xmmword_100088920;
  v13 = xmmword_100088930;
  if (v49 == a1)
  {
    v10 = 0;
    v12 = 0uLL;
    v18 = 1;
    v17 = 0uLL;
    v20 = 0x4059000000000000;
    v19 = 1;
    v11 = 1;
    v8 = 0x6D73646F70726961;
    v16 = 0uLL;
    _Q2 = 0uLL;
    goto LABEL_28;
  }
  v50 = objc_msgSend(v4, "airPodsMax");
  v51 = objc_msgSend(v50, "altProductID");

  v14 = 0x800000010008C470;
  if (v51 == a1)
  {
    v10 = 0;
    v12 = 0uLL;
    v18 = 1;
    v17 = 0uLL;
    v20 = 0x4059000000000000;
    v19 = 1;
    v11 = 1;
    v8 = 0x6D73646F70726961;
    v15 = 0xEA00000000007861;
    v16 = 0uLL;
    v13 = xmmword_100088930;
    v7 = xmmword_100088920;
    _Q2 = 0uLL;
    goto LABEL_28;
  }
  v52 = objc_msgSend(v4, "beatsFlex");
  v53 = objc_msgSend(v52, "productID");

  if (v53 == a1)
  {
    v10 = 0;
    v11 = 0;
    v13 = xmmword_100088940;
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 1;
    v19 = 1;
    v20 = 0;
    v8 = 0x61652E7374616562;
    v15 = 0xEF73656E6F687072;
    v12 = xmmword_100088820;
    goto LABEL_22;
  }
  v54 = objc_msgSend(v4, "b688");
  v55 = objc_msgSend(v54, "productID");

  v13 = xmmword_100088970;
  v17 = xmmword_100088980;
  v14 = 0x800000010008C550;
  __asm { FMOV            V2.2D, #28.0 }
  if (v55 == a1)
  {
    v18 = 0;
    v19 = 0;
    v11 = 0;
    v12 = xmmword_100088960;
    v10 = 0x406C6AA7EF9DB22DLL;
    v20 = 0;
    v8 = 0x2E73646F70726961;
    v15 = 0xEC000000336E6567;
    v3 = 0xD000000000000027;
    v16 = xmmword_100088950;
    _Q7 = 0uLL;
LABEL_42:
    v24 = a2;
    v7 = xmmword_100088730;
    v21 = xmmword_1000887B0;
    goto LABEL_11;
  }
  if ((a1 - 8217) <= 7 && ((1 << (a1 - 25)) & 0xA5) != 0)
  {
    v18 = 0;
    v19 = 0;
    v11 = 0;
    _Q7 = xmmword_100088990;
    v12 = xmmword_1000889A0;
    v9 = 7.0;
    v10 = 0x406C6AA7EF9DB22DLL;
    v8 = 0x2E73646F70726961;
    v15 = 0xEC000000336E6567;
    v20 = 0;
    v3 = 0xD000000000000027;
    v16 = xmmword_100088950;
    goto LABEL_42;
  }
  v56 = objc_msgSend(v4, "b507");
  v57 = objc_msgSend(v56, "productID");

  if (v57 == a1)
  {
    v18 = 0;
    v10 = 0;
    v11 = 0;
    v17 = xmmword_1000889F0;
    v3 = 0xD000000000000022;
    v14 = 0x800000010008C4D0;
    v15 = 0x800000010008C4B0;
    v19 = 1;
    v20 = 0;
    v8 = 0xD000000000000010;
    v13 = xmmword_1000889E0;
    v12 = xmmword_1000889D0;
    v16 = xmmword_1000889C0;
    v7 = xmmword_100088730;
    v21 = xmmword_100088730;
    _Q7 = 0uLL;
    _Q2 = xmmword_1000889B0;
    v24 = a2;
    goto LABEL_11;
  }
  v58 = objc_msgSend(v4, "b494");
  v59 = objc_msgSend(v58, "productID");

  if (v59 == a1)
  {
    v18 = 0;
    v19 = 0;
    v11 = 0;
    v3 = 0xD00000000000001FLL;
    v14 = 0x800000010008C530;
    v15 = 0xED00006F72702E74;
    v8 = 0x69662E7374616562;
    v10 = 0x4069EAA7EF9DB22DLL;
    v20 = 0;
    v17 = xmmword_1000888F0;
    v13 = xmmword_1000888E0;
    v12 = xmmword_1000888D0;
    v16 = xmmword_1000888C0;
    v7 = xmmword_100088730;
    v21 = xmmword_100088730;
    _Q7 = 0uLL;
    _Q2 = v72;
    v24 = a2;
    goto LABEL_11;
  }
  v60 = objc_msgSend(v4, "b698");
  v61 = objc_msgSend(v60, "productID");

  v14 = 0x800000010008C500;
  if (v61 == a1
    || (v62 = objc_msgSend(v4, "b698"),
        v63 = objc_msgSend(v62, "altProductID"),
        v62,
        v63 == a1))
  {
    v18 = 0;
    v19 = 0;
    v11 = 0;
    v10 = 0x406FF55810624DD3;
    v20 = 0;
    v9 = 10.0;
    v3 = 0xD000000000000025;
    v24 = a2;
    v7 = xmmword_100088730;
    v12 = xmmword_1000887D0;
    v17 = xmmword_1000887F0;
    v16 = xmmword_1000887C0;
    v13 = xmmword_1000887E0;
    v15 = 0xEA00000000006F72;
    _Q2 = v74;
    _Q7 = xmmword_1000887A0;
    v21 = xmmword_100088A00;
    goto LABEL_11;
  }
  v64 = objc_msgSend(v4, "b607");
  v65 = objc_msgSend(v64, "productID");

  if (v65 == a1)
  {
    v18 = 0;
    v19 = 0;
    v11 = 0;
    v3 = 0xD000000000000022;
    v14 = 0x800000010008C4D0;
    v15 = 0x800000010008C4B0;
    v10 = 0x406FF55810624DD3;
    v20 = 0;
    v8 = 0xD000000000000010;
    v13 = xmmword_1000889E0;
    v12 = xmmword_1000889D0;
    v16 = xmmword_1000889C0;
    v7 = xmmword_100088730;
    v21 = xmmword_100088730;
    _Q7 = 0uLL;
LABEL_52:
    _Q2 = xmmword_1000889B0;
    v24 = a2;
    v17 = xmmword_100088A10;
    goto LABEL_11;
  }
  v66 = objc_msgSend(v4, "b453");
  v67 = objc_msgSend(v66, "productID");

  if (v67 == a1)
  {
    v10 = 0;
    v11 = 0;
    v14 = 0x800000010008C470;
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 1;
    v19 = 1;
    v20 = 0;
    v8 = 0xD000000000000010;
    v7 = xmmword_100088730;
    v21 = xmmword_100088730;
    _Q2 = 0uLL;
    _Q7 = 0uLL;
    v24 = a2;
    v13 = xmmword_100088A30;
    v12 = xmmword_100088A20;
    v15 = 0x800000010008C490;
    goto LABEL_11;
  }
  v68 = objc_msgSend(v4, "b463");
  v69 = objc_msgSend(v68, "productID");

  if (v69 == a1)
  {
    v18 = 0;
    v19 = 0;
    v11 = 0;
    _Q7 = 0uLL;
    v10 = 0x406FF55810624DD3;
    v20 = 0;
    v3 = 0xD000000000000010;
    v8 = 0xD000000000000010;
    v15 = 0x800000010008C490;
    v14 = 0x800000010008C490;
    v13 = xmmword_1000889E0;
    v12 = xmmword_1000889D0;
    v16 = xmmword_1000889C0;
    v7 = xmmword_100088730;
    v21 = xmmword_100088730;
    goto LABEL_52;
  }
  v70 = objc_msgSend(v4, "b487");
  v71 = objc_msgSend(v70, "productID");

  if (v71 != a1)
  {
    sub_10001F208((uint64_t)v77);
    sub_10001B808((uint64_t)v77, (uint64_t)v94);
    v24 = a2;
    return sub_10001B808((uint64_t)v94, v24);
  }
  v10 = 0;
  v11 = 0;
  v14 = 0x800000010008C470;
  v15 = 0x800000010008C490;
  v16 = 0uLL;
  v17 = 0uLL;
  v18 = 1;
  v19 = 1;
  v20 = 0;
  v8 = 0xD000000000000010;
  v7 = xmmword_100088730;
  v21 = xmmword_100088730;
  _Q2 = 0uLL;
  _Q7 = 0uLL;
  v24 = a2;
  v13 = xmmword_100088A30;
  v12 = xmmword_100088A20;
LABEL_11:
  v77[0] = v13;
  v77[1] = v12;
  v77[2] = v17;
  v78 = v18;
  v79 = v10;
  v80 = 0;
  v81 = v19;
  v82 = v16;
  v83 = v20;
  v84 = v11;
  v85 = v21;
  v86 = v7;
  v87 = v8;
  v88 = v15;
  v89 = v3;
  v90 = v14;
  v91 = _Q2;
  v92 = _Q7;
  v93 = v9;
  nullsub_1(v77);
  sub_10001B808((uint64_t)v77, (uint64_t)v94);
  return sub_10001B808((uint64_t)v94, v24);
}

double sub_10001F208(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 208) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for HeadphoneLayoutMetrics.Mismatch(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneLayoutMetrics.Mismatch()
{
  return &type metadata for HeadphoneLayoutMetrics.Mismatch;
}

ValueMetadata *type metadata accessor for HeadphoneLayoutMetrics.VideoMetric()
{
  return &type metadata for HeadphoneLayoutMetrics.VideoMetric;
}

uint64_t getEnumTagSinglePayload for HeadphoneBatteryType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneLayoutMetrics.VideoIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10001F340 + 4 * byte_100088A45[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10001F374 + 4 * byte_100088A40[v4]))();
}

uint64_t sub_10001F374(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001F37C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10001F384);
  return result;
}

uint64_t sub_10001F390(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10001F398);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10001F39C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001F3A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10001F3B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneLayoutMetrics.VideoIdentifier()
{
  return &type metadata for HeadphoneLayoutMetrics.VideoIdentifier;
}

unint64_t sub_10001F3CC()
{
  unint64_t result;

  result = qword_1000B85E0;
  if (!qword_1000B85E0)
  {
    result = swift_getWitnessTable(&unk_100088AEC, &type metadata for HeadphoneLayoutMetrics.VideoIdentifier);
    atomic_store(result, (unint64_t *)&qword_1000B85E0);
  }
  return result;
}

uint64_t sub_10001F410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  swift_retain(v2);
  v3(v4);
  swift_release(v2);
  return swift_bridgeObjectRelease(v4);
}

id sub_10001F47C(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD v8[5];
  uint64_t v9;

  v4 = *v2;
  v8[4] = a1;
  v9 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10001F410;
  v8[3] = &unk_1000A6E38;
  v5 = _Block_copy(v8);
  v6 = v9;
  swift_retain(a2);
  objc_msgSend(v4, "setAccessoryAttached:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  return objc_msgSend(v4, "start");
}

id sub_10001F528()
{
  id *v0;
  id v1;

  v1 = *v0;
  objc_msgSend(*v0, "setAccessoryAttached:", 0);
  return objc_msgSend(v1, "stop");
}

uint64_t sub_10001F564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001F574(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

char *sub_10001F57C(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  char *v9;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  id v23;
  double v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  id v31;
  unsigned int v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  NSURL *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  objc_class *v45;
  char *v46;
  void *v47;
  CMTimeEpoch epoch;
  char *v49;
  id v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  id value;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  void *v60;
  id (*v61)(double);
  uint64_t v62;
  objc_super v63;

  v19 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_player;
  v20 = objc_allocWithZone((Class)AVPlayer);
  v21 = v9;
  *(_QWORD *)&v9[v19] = objc_msgSend(v20, "initWithPlayerItem:", 0);
  v22 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer;
  v23 = objc_msgSend((id)objc_opt_self(AVPlayerLayer), "playerLayerWithPlayer:", 0);
  LODWORD(v24) = 0;
  objc_msgSend(v23, "setOpacity:", v24);
  *(_QWORD *)&v21[v22] = v23;
  v25 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_videoPlayer;
  v26 = objc_msgSend(objc_allocWithZone((Class)AVQueuePlayer), "init");
  objc_msgSend(v26, "setMuted:", 1);
  objc_msgSend(v26, "setAllowsExternalPlayback:", 0);
  *(_QWORD *)&v21[v25] = v26;
  v27 = &v21[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_url];
  v28 = type metadata accessor for URL(0);
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v27, a1, v28);
  v30 = (double *)&v21[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_desiredBounds];
  *v30 = a6;
  v30[1] = a7;
  v30[2] = a8;
  v30[3] = a9;
  v31 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
  value = 0;
  v32 = objc_msgSend(v31, "setCategory:withOptions:error:", AVAudioSessionCategoryAmbient, 1, &value);

  v33 = value;
  if (v32)
  {
    v34 = value;
  }
  else
  {
    v35 = value;
    v36 = _convertNSErrorToError(_:)(v33);

    swift_willThrow();
    swift_errorRelease(v36);
  }
  objc_msgSend(*(id *)&v21[v22], "setPlayer:", *(_QWORD *)&v21[v25]);
  v37 = *(void **)&v21[v25];
  v38 = objc_allocWithZone((Class)AVPlayerItem);
  v39 = v37;
  URL._bridgeToObjectiveC()(v40);
  v42 = v41;
  v43 = objc_msgSend(v38, "initWithURL:", v41);

  v44 = objc_msgSend((id)objc_opt_self(AVPlayerLooper), "playerLooperWithPlayer:templateItem:", v39, v43);
  *(_QWORD *)&v21[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLooper] = v44;

  v45 = (objc_class *)type metadata accessor for ProxMovieLoopPlayer(0);
  v63.receiver = v21;
  v63.super_class = v45;
  v46 = (char *)objc_msgSendSuper2(&v63, "initWithFrame:", a2, a3, a4, a5);
  v47 = *(void **)&v46[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_videoPlayer];
  epoch = kCMTimeZero.epoch;
  v49 = v46;
  value = (id)kCMTimeZero.value;
  v58 = *(_QWORD *)&kCMTimeZero.timescale;
  v59 = (uint64_t (*)(uint64_t))epoch;
  objc_msgSend(v47, "seekToTime:", &value);
  v50 = objc_msgSend(v49, "layer");
  objc_msgSend(v50, "addSublayer:", *(_QWORD *)&v49[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer]);

  v51 = (void *)objc_opt_self(UIView);
  v52 = swift_allocObject(&unk_1000A6E70, 24, 7);
  *(_QWORD *)(v52 + 16) = v49;
  v61 = sub_10001FD90;
  v62 = v52;
  value = _NSConcreteStackBlock;
  v58 = 1107296256;
  v59 = sub_100012FBC;
  v60 = &unk_1000A6E88;
  v53 = _Block_copy(&value);
  v54 = v62;
  v55 = v49;
  swift_release(v54);
  objc_msgSend(v51, "animateWithDuration:animations:", v53, 0.15);
  _Block_release(v53);

  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(a1, v28);
  return v55;
}

id sub_10001F9DC()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ProxMovieLoopPlayer(0);
  objc_msgSendSuper2(&v9, "layoutSubviews");
  v1 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer], "setBounds:", *(double *)&v0[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_desiredBounds], *(double *)&v0[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_desiredBounds + 8], *(double *)&v0[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_desiredBounds + 16], *(double *)&v0[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_desiredBounds + 24]);
  v2 = objc_msgSend(v0, "layer");
  objc_msgSend(v2, "setMasksToBounds:", 0);

  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setCornerRadius:", 0.0);

  v4 = *(id *)&v0[v1];
  v5 = objc_msgSend(v0, "layer");
  objc_msgSend(v5, "bounds");

  v6 = objc_msgSend(v0, "layer");
  objc_msgSend(v6, "bounds");

  nullsub_1(v7);
  objc_msgSend(v4, "setPosition:");

  return objc_msgSend(*(id *)&v0[v1], "setVideoGravity:", AVLayerVideoGravityResizeAspectFill);
}

id sub_10001FBE8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProxMovieLoopPlayer(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10001FC9C()
{
  return type metadata accessor for ProxMovieLoopPlayer(0);
}

uint64_t type metadata accessor for ProxMovieLoopPlayer(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B8640;
  if (!qword_1000B8640)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProxMovieLoopPlayer);
  return result;
}

uint64_t sub_10001FCE0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = " ";
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10001FD6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10001FD90(double a1)
{
  uint64_t v1;

  LODWORD(a1) = 1.0;
  return objc_msgSend(*(id *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer), "setOpacity:", a1);
}

uint64_t sub_10001FDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001FDC0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10001FDC8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  double v4;
  uint64_t v5;
  id v6;

  v1 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_player;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)AVPlayer), "initWithPlayerItem:", 0);
  v2 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer;
  v3 = objc_msgSend((id)objc_opt_self(AVPlayerLayer), "playerLayerWithPlayer:", 0);
  LODWORD(v4) = 0;
  objc_msgSend(v3, "setOpacity:", v4);
  *(_QWORD *)&v0[v2] = v3;
  v5 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_videoPlayer;
  v6 = objc_msgSend(objc_allocWithZone((Class)AVQueuePlayer), "init");
  objc_msgSend(v6, "setMuted:", 1);
  objc_msgSend(v6, "setAllowsExternalPlayback:", 0);
  *(_QWORD *)&v0[v5] = v6;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BD10, "HeadphoneProxService/ProxMovieLoopPlayer.swift", 46, 2, 82, 0);
  __break(1u);
}

unint64_t sub_10001FEE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B8650;
  if (!qword_1000B8650)
  {
    v1 = objc_opt_self(AVPlayerLayer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B8650);
  }
  return result;
}

uint64_t sub_10001FF20()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000BC740);
  sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return Logger.init(subsystem:category:)(0xD00000000000001ELL, 0x800000010008C750, 0x6E6F687064616548, 0xE900000000000065);
}

uint64_t sub_10001FF98(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  id v8;
  unint64_t v9;
  const char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t countAndFlagsBits;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  unint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  unint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  unint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  unint64_t v58;
  char v59;
  char v60;
  char v61;
  unint64_t v62;
  char v63;
  char v64;
  char v65;
  char v66;
  unsigned int v67;
  unint64_t v68;

  v2 = sub_100020FD0(a1);
  v4 = v2;
  v5 = v3;
  v6 = 0x800000010008CC40;
  if (v2 != 0xD00000000000001BLL || v3 != 0x800000010008CC40)
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, 0xD00000000000001BLL, 0x800000010008CC40, 0);
    swift_bridgeObjectRelease(v5);
    if ((v7 & 1) != 0)
      goto LABEL_5;
    v6 = 0x800000010008CC20;
    if (v4 != 0xD00000000000001ELL || v5 != 0x800000010008CC20)
    {
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000001ELL, 0x800000010008CC20, 0);
      swift_bridgeObjectRelease(v5);
      if ((v18 & 1) != 0)
        goto LABEL_5;
      v6 = 0x800000010008CBF0;
      if (v4 != 0xD000000000000023 || v5 != 0x800000010008CBF0)
      {
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000023, 0x800000010008CBF0, 0);
        swift_bridgeObjectRelease(v5);
        if ((v19 & 1) != 0)
          goto LABEL_5;
        v6 = 0x800000010008CB70;
        if (v4 != 0xD000000000000013 || v5 != 0x800000010008CB70)
        {
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000013, 0x800000010008CB70, 0);
          swift_bridgeObjectRelease(v5);
          if ((v20 & 1) != 0)
            goto LABEL_5;
          v6 = 0x800000010008CB50;
          if (v4 != 0xD000000000000016 || v5 != 0x800000010008CB50)
          {
            v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000016, 0x800000010008CB50, 0);
            swift_bridgeObjectRelease(v5);
            if ((v21 & 1) != 0)
              goto LABEL_5;
            v6 = 0x800000010008CBC0;
            if (v4 != 0xD000000000000023 || v5 != 0x800000010008CBC0)
            {
              v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000023, 0x800000010008CBC0, 0);
              swift_bridgeObjectRelease(v5);
              if ((v22 & 1) != 0)
                goto LABEL_5;
              v6 = 0x800000010008CB90;
              if (v4 != 0xD000000000000026 || v5 != 0x800000010008CB90)
              {
                v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000026, 0x800000010008CB90, 0);
                swift_bridgeObjectRelease(v5);
                if ((v23 & 1) != 0)
                  goto LABEL_5;
                v24 = 0xEE00454C5449545FLL;
                if (v4 == 0x4C4C41435F444E45 && v5 == 0xEE00454C5449545FLL)
                  goto LABEL_28;
                v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0x4C4C41435F444E45, 0xEE00454C5449545FLL, 0);
                swift_bridgeObjectRelease(v5);
                if ((v25 & 1) != 0)
                  goto LABEL_30;
                v24 = 0x800000010008D260;
                if (v4 == 0xD000000000000011 && v5 == 0x800000010008D260)
                  goto LABEL_28;
                v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000011, 0x800000010008D260, 0);
                swift_bridgeObjectRelease(v5);
                if ((v26 & 1) != 0)
                  goto LABEL_30;
                v24 = 0x800000010008D230;
                if (v4 == 0xD000000000000020 && v5 == 0x800000010008D230)
                  goto LABEL_28;
                v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000020, 0x800000010008D230, 0);
                swift_bridgeObjectRelease(v5);
                if ((v27 & 1) != 0)
                  goto LABEL_30;
                v24 = 0x800000010008D200;
                if (v4 == 0xD000000000000021 && v5 == 0x800000010008D200)
                {
LABEL_28:
                  swift_bridgeObjectRelease(v24);
LABEL_30:
                  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                  v68 = 0xE000000000000000;
                  v11 = 0x800000010008D7A0;
                  v12 = v4;
                  v13 = v5;
                  v9 = 0xD000000000000013;
                  goto LABEL_7;
                }
                v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000021, 0x800000010008D200, 0);
                swift_bridgeObjectRelease(v5);
                if ((v28 & 1) != 0)
                  goto LABEL_30;
                v29 = 0xEF454C5449545F4CLL;
                if (v4 == 0x4C41435F4554554DLL && v5 == 0xEF454C5449545F4CLL)
                  goto LABEL_42;
                v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0x4C41435F4554554DLL, 0xEF454C5449545F4CLL, 0);
                swift_bridgeObjectRelease(v5);
                if ((v30 & 1) != 0)
                  goto LABEL_44;
                v29 = 0x800000010008D1E0;
                if (v4 == 0xD000000000000012 && v5 == 0x800000010008D1E0)
                  goto LABEL_42;
                v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000012, 0x800000010008D1E0, 0);
                swift_bridgeObjectRelease(v5);
                if ((v31 & 1) != 0)
                  goto LABEL_44;
                v29 = 0x800000010008D1C0;
                if (v4 == 0xD00000000000001BLL && v5 == 0x800000010008D1C0)
                  goto LABEL_42;
                v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000001BLL, 0x800000010008D1C0, 0);
                swift_bridgeObjectRelease(v5);
                if ((v32 & 1) != 0)
                  goto LABEL_44;
                v29 = 0x800000010008D1A0;
                if (v4 == 0xD00000000000001BLL && v5 == 0x800000010008D1A0)
                  goto LABEL_42;
                v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000001BLL, 0x800000010008D1A0, 0);
                swift_bridgeObjectRelease(v5);
                if ((v33 & 1) != 0)
                  goto LABEL_44;
                v29 = 0x800000010008D180;
                if (v4 == 0xD00000000000001BLL && v5 == 0x800000010008D180)
                  goto LABEL_42;
                v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000001BLL, 0x800000010008D180, 0);
                swift_bridgeObjectRelease(v5);
                if ((v34 & 1) != 0)
                  goto LABEL_44;
                v29 = 0x800000010008D160;
                if (v4 == 0xD00000000000001BLL && v5 == 0x800000010008D160)
                  goto LABEL_42;
                v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000001BLL, 0x800000010008D160, 0);
                swift_bridgeObjectRelease(v5);
                if ((v35 & 1) != 0)
                  goto LABEL_44;
                v29 = 0x800000010008D120;
                if (v4 == 0xD000000000000012 && v5 == 0x800000010008D120)
                  goto LABEL_42;
                v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000012, 0x800000010008D120, 0);
                swift_bridgeObjectRelease(v5);
                if ((v36 & 1) != 0)
                  goto LABEL_44;
                v29 = 0xEE00454E4F445F4CLL;
                if (v4 == 0x4C41435F4554554DLL && v5 == 0xEE00454E4F445F4CLL)
                {
LABEL_42:
                  swift_bridgeObjectRelease(v29);
LABEL_44:
                  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                  v9 = 0xD000000000000014;
                  v68 = 0xE000000000000000;
                  v10 = "Localizable-MuteCall";
                  goto LABEL_6;
                }
                v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0x4C41435F4554554DLL, 0xEE00454E4F445F4CLL, 0);
                swift_bridgeObjectRelease(v5);
                if ((v37 & 1) != 0)
                  goto LABEL_44;
                v38 = 0x800000010008D100;
                if (v4 == 0xD000000000000017 && v5 == 0x800000010008D100)
                  goto LABEL_122;
                v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000017, 0x800000010008D100, 0);
                swift_bridgeObjectRelease(v5);
                if ((v39 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008D0E0;
                if (v4 == 0xD00000000000001ALL && v5 == 0x800000010008D0E0)
                  goto LABEL_122;
                v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000001ALL, 0x800000010008D0E0, 0);
                swift_bridgeObjectRelease(v5);
                if ((v40 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008D0C0;
                if (v4 == 0xD000000000000019 && v5 == 0x800000010008D0C0)
                  goto LABEL_122;
                v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000019, 0x800000010008D0C0, 0);
                swift_bridgeObjectRelease(v5);
                if ((v41 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008D090;
                if (v4 == 0xD000000000000020 && v5 == 0x800000010008D090)
                  goto LABEL_122;
                v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000020, 0x800000010008D090, 0);
                swift_bridgeObjectRelease(v5);
                if ((v42 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008D060;
                if (v4 == 0xD000000000000023 && v5 == 0x800000010008D060)
                  goto LABEL_122;
                v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000023, 0x800000010008D060, 0);
                swift_bridgeObjectRelease(v5);
                if ((v43 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008D030;
                if (v4 == 0xD000000000000023 && v5 == 0x800000010008D030)
                  goto LABEL_122;
                v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000023, 0x800000010008D030, 0);
                swift_bridgeObjectRelease(v5);
                if ((v44 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008D000;
                if (v4 == 0xD000000000000026 && v5 == 0x800000010008D000)
                  goto LABEL_122;
                v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000026, 0x800000010008D000, 0);
                swift_bridgeObjectRelease(v5);
                if ((v45 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CFD0;
                if (v4 == 0xD00000000000002ELL && v5 == 0x800000010008CFD0)
                  goto LABEL_122;
                v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000002ELL, 0x800000010008CFD0, 0);
                swift_bridgeObjectRelease(v5);
                if ((v46 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CF90;
                if (v4 == 0xD000000000000031 && v5 == 0x800000010008CF90)
                  goto LABEL_122;
                v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000031, 0x800000010008CF90, 0);
                swift_bridgeObjectRelease(v5);
                if ((v47 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CF60;
                if (v4 == 0xD00000000000002ALL && v5 == 0x800000010008CF60)
                  goto LABEL_122;
                v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000002ALL, 0x800000010008CF60, 0);
                swift_bridgeObjectRelease(v5);
                if ((v48 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CF30;
                if (v4 == 0xD00000000000002DLL && v5 == 0x800000010008CF30)
                  goto LABEL_122;
                v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000002DLL, 0x800000010008CF30, 0);
                swift_bridgeObjectRelease(v5);
                if ((v49 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CF00;
                if (v4 == 0xD00000000000002CLL && v5 == 0x800000010008CF00)
                  goto LABEL_122;
                v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000002CLL, 0x800000010008CF00, 0);
                swift_bridgeObjectRelease(v5);
                if ((v50 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CEC0;
                if (v4 == 0xD000000000000030 && v5 == 0x800000010008CEC0)
                  goto LABEL_122;
                v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000030, 0x800000010008CEC0, 0);
                swift_bridgeObjectRelease(v5);
                if ((v51 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CE80;
                if (v4 == 0xD000000000000033 && v5 == 0x800000010008CE80)
                  goto LABEL_122;
                v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000033, 0x800000010008CE80, 0);
                swift_bridgeObjectRelease(v5);
                if ((v52 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CE40;
                if (v4 == 0xD000000000000032 && v5 == 0x800000010008CE40)
                  goto LABEL_122;
                v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000032, 0x800000010008CE40, 0);
                swift_bridgeObjectRelease(v5);
                if ((v53 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CE00;
                if (v4 == 0xD000000000000033 && v5 == 0x800000010008CE00)
                  goto LABEL_122;
                v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000033, 0x800000010008CE00, 0);
                swift_bridgeObjectRelease(v5);
                if ((v54 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CDC0;
                if (v4 == 0xD000000000000036 && v5 == 0x800000010008CDC0)
                  goto LABEL_122;
                v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000036, 0x800000010008CDC0, 0);
                swift_bridgeObjectRelease(v5);
                if ((v55 & 1) != 0)
                  goto LABEL_123;
                v38 = 0x800000010008CD80;
                if (v4 == 0xD00000000000003ELL && v5 == 0x800000010008CD80)
                  goto LABEL_122;
                v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD00000000000003ELL, 0x800000010008CD80, 0);
                swift_bridgeObjectRelease(v5);
                if ((v56 & 1) != 0)
                {
LABEL_123:
                  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                  v9 = 0xD00000000000001CLL;
                  v68 = 0xE000000000000000;
                  v10 = "Localizable-AdaptiveControls";
                  goto LABEL_6;
                }
                v38 = 0x800000010008CD40;
                if (v4 == 0xD000000000000035 && v5 == 0x800000010008CD40)
                {
LABEL_122:
                  swift_bridgeObjectRelease(v38);
                  goto LABEL_123;
                }
                v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000035, 0x800000010008CD40, 0);
                swift_bridgeObjectRelease(v5);
                if ((v57 & 1) != 0)
                  goto LABEL_123;
                v58 = 0x800000010008CD20;
                if (v4 == 0xD000000000000017 && v5 == 0x800000010008CD20)
                  goto LABEL_133;
                v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000017, 0x800000010008CD20, 0);
                swift_bridgeObjectRelease(v5);
                if ((v59 & 1) != 0)
                  goto LABEL_135;
                v58 = 0x800000010008CD00;
                if (v4 == 0xD000000000000012 && v5 == 0x800000010008CD00)
                  goto LABEL_133;
                v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000012, 0x800000010008CD00, 0);
                swift_bridgeObjectRelease(v5);
                if ((v60 & 1) != 0)
                {
LABEL_135:
                  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                  v9 = 0xD000000000000014;
                  v68 = 0xE000000000000000;
                  v10 = "Localizable-WhatsNew";
                  goto LABEL_6;
                }
                v58 = 0x800000010008CCE0;
                if (v4 == 0xD000000000000011 && v5 == 0x800000010008CCE0)
                {
LABEL_133:
                  swift_bridgeObjectRelease(v58);
                  goto LABEL_135;
                }
                v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000011, 0x800000010008CCE0, 0);
                swift_bridgeObjectRelease(v5);
                if ((v61 & 1) != 0)
                  goto LABEL_135;
                v62 = 0x800000010008CCC0;
                if (v4 != 0xD000000000000013 || v5 != 0x800000010008CCC0)
                {
                  v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000013, 0x800000010008CCC0, 0);
                  swift_bridgeObjectRelease(v5);
                  if ((v63 & 1) != 0)
                    goto LABEL_149;
                  v62 = 0x800000010008CCA0;
                  if (v4 != 0xD000000000000016 || v5 != 0x800000010008CCA0)
                  {
                    v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000016, 0x800000010008CCA0, 0);
                    swift_bridgeObjectRelease(v5);
                    if ((v64 & 1) != 0)
                      goto LABEL_149;
                    v62 = 0x800000010008CC80;
                    if (v4 != 0xD000000000000015 || v5 != 0x800000010008CC80)
                    {
                      v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000015, 0x800000010008CC80, 0);
                      swift_bridgeObjectRelease(v5);
                      if ((v65 & 1) == 0)
                      {
                        v62 = 0x800000010008CC60;
                        if (v4 != 0xD000000000000015 || v5 != 0x800000010008CC60)
                        {
                          v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000015, 0x800000010008CC60, 0);
                          swift_bridgeObjectRelease(v5);
                          if ((v66 & 1) == 0)
                          {
                            v67 = (a1 - 106);
                            v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                            if (v67 > 0xF)
                            {
                              v68 = 0xE000000000000000;
                              v12 = v4;
                              v13 = v5;
                              v9 = 0x617A696C61636F4CLL;
                              v11 = 0xEB00000000656C62;
                              goto LABEL_7;
                            }
                            v9 = 0xD00000000000001CLL;
                            v68 = 0xE000000000000000;
                            v10 = "Localizable-HeartRateMonitor";
                            goto LABEL_6;
                          }
                          goto LABEL_149;
                        }
                        goto LABEL_147;
                      }
LABEL_149:
                      v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                      v9 = 0xD000000000000018;
                      v68 = 0xE000000000000000;
                      v10 = "Localizable-HeadGestures";
                      goto LABEL_6;
                    }
                  }
                }
LABEL_147:
                swift_bridgeObjectRelease(v62);
                goto LABEL_149;
              }
            }
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease(v6);
LABEL_5:
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = 0xD000000000000017;
  v68 = 0xE000000000000000;
  v10 = "Localizable-Counterfeit";
LABEL_6:
  v11 = (unint64_t)(v10 - 32) | 0x8000000000000000;
  v12 = v4;
  v13 = v5;
LABEL_7:
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v15 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, *(Swift::String_optional *)&v9, (NSBundle)v8, v14, *(Swift::String *)(&v68 - 1))._countAndFlagsBits;
  swift_bridgeObjectRelease(v5);

  return countAndFlagsBits;
}

uint64_t sub_100020F00(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  switch(SFDeviceClassCodeGet())
  {
    case 1u:
      v8 = a1;
      swift_bridgeObjectRetain(a2);
      v4 = 0x454E4F4850495FLL;
      v5 = 0xE700000000000000;
      goto LABEL_7;
    case 2u:
      v8 = a1;
      swift_bridgeObjectRetain(a2);
      v6 = 1330661727;
      goto LABEL_6;
    case 3u:
      v8 = a1;
      swift_bridgeObjectRetain(a2);
      v6 = 1095780703;
LABEL_6:
      v4 = v6 & 0xFFFF0000FFFFFFFFLL | 0x4400000000;
      v5 = 0xE500000000000000;
LABEL_7:
      String.append(_:)(*(Swift::String *)&v4);
      a1 = v8;
      break;
    default:
      swift_bridgeObjectRetain(a2);
      break;
  }
  return a1;
}

uint64_t sub_100020FD0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100021004 + 4 * word_100088BEA[a1]))(0x45554E49544E4F43, 0xE800000000000000);
}

uint64_t sub_100021004()
{
  return 0x574F4E5F544F4ELL;
}

uint64_t sub_10002101C()
{
  return 1162760004;
}

uint64_t sub_10002102C()
{
  return 1346980691;
}

uint64_t sub_10002103C()
{
  return 0x4C5F50555F544553;
}

uint64_t sub_10002105C()
{
  return 0x494147415F595254;
}

uint64_t sub_10002107C()
{
  return 0x5455425F444C4F48;
}

uint64_t sub_10002109C()
{
  return 0x455341435F504154;
}

uint64_t sub_1000210B0()
{
  return 0x5443454E4E4F43;
}

unint64_t sub_1000210C8()
{
  return 0xD000000000000011;
}

uint64_t sub_100021B70(uint64_t a1, unsigned __int8 a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  int v8;
  Swift::String v9;
  void *object;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  NSString v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  uint64_t countAndFlagsBits;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t result;
  int v28;
  unint64_t v29;
  unint64_t v30;
  Swift::String v31;
  Swift::String v32;

  v4 = sub_100020FD0(a2);
  v5 = v3;
  if (v4 == 0xD000000000000013 && v3 == (void *)0x800000010008C770)
  {
    swift_bridgeObjectRelease(0x800000010008C770);
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v3, 0xD000000000000013, 0x800000010008C770, 0);
    swift_bridgeObjectRelease(v5);
    if ((v6 & 1) == 0)
    {
LABEL_9:
      v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v32._object = (void *)0xE000000000000000;
      v23._countAndFlagsBits = v4;
      v23._object = v5;
      v24.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v24.value._object = (void *)0xEB00000000656C62;
      v25._countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      v32._countAndFlagsBits = 0;
      v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v32);
      swift_bridgeObjectRelease(v5);

      countAndFlagsBits = String.init(format:arguments:)(v26._countAndFlagsBits, v26._object, a1);
      swift_bridgeObjectRelease(v26._object);
      return countAndFlagsBits;
    }
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_9;
  sub_100015D34(a1 + 32, (uint64_t)&v29);
  v7 = sub_100009F00(&qword_1000B8658);
  if ((swift_dynamicCast(&v28, &v29, v7, &type metadata for UInt32, 6) & 1) == 0)
    goto LABEL_9;
  v8 = v28;
  v29 = 0;
  v30 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v30);
  v29 = 0xD000000000000010;
  v30 = 0x800000010008C790;
  v28 = v8;
  v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
  object = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(object);
  v12 = v29;
  v11 = (void *)v30;
  v13 = String.init(format:arguments:)(v4, v5, a1);
  v15 = v14;
  swift_bridgeObjectRelease(v5);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleWithIdentifier:", v16);

  if (v17)
  {
    v31._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = v13;
    v18._object = v15;
    v19.value._countAndFlagsBits = v12;
    v19.value._object = v11;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    v31._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v31)._countAndFlagsBits;
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v15);

    return countAndFlagsBits;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x800000010008C800, "HeadphoneProxService/HPString.swift", 35, 2, 320, 0);
  __break(1u);
  return result;
}

uint64_t sub_100021E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B8660);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B8660);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100021EF4(void *a1)
{
  _BYTE *v1;
  char *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v1[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingController] = 0;
  v3 = &v1[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_presenter];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v1[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_type] = 15;
  *(_QWORD *)&v1[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingItem] = a1;
  v4 = objc_allocWithZone((Class)PRXCardContentView);
  v5 = a1;
  v6 = objc_msgSend(v4, "init");
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for HeadphoneMarketingUpsellViewController();
  v7 = objc_msgSendSuper2(&v10, "initWithContentView:", v6);

  v8 = v7;
  sub_100022030();

  return v8;
}

void sub_100022030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t aBlock[6];
  _BYTE v29[24];

  v1 = v0;
  v2 = type metadata accessor for AMSMarketingOffersClient();
  inited = swift_initStackObject(v2, v29);
  *(_QWORD *)(inited + 16) = 0;
  v4 = sub_10005EC54();
  swift_setDeallocating(inited);
  swift_unknownObjectRelease(*(_QWORD *)(inited + 16));
  v5 = objc_msgSend(objc_allocWithZone((Class)AMSUIMarketingItemViewController), "initWithMarketingItem:bag:", *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingItem), v4);
  objc_msgSend(v5, "setDelegate:", v1);
  objc_msgSend(v5, "setAnonymousMetrics:", 1);
  v6 = (void *)objc_opt_self(ACAccountStore);
  v7 = v5;
  v8 = objc_msgSend(v6, "ams_sharedAccountStore");
  v9 = objc_msgSend(v8, "ams_activeiTunesAccount");

  objc_msgSend(v7, "setAccount:", v9);
  if (qword_1000B7B10 != -1)
    swift_once(&qword_1000B7B10, sub_100021E64);
  v10 = type metadata accessor for Logger(0);
  sub_1000093F8(v10, (uint64_t)qword_1000B8660);
  v11 = v7;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    aBlock[0] = v15;
    *(_DWORD *)v14 = 136315138;
    v16 = objc_msgSend(v11, "metricsOverlay");
    v26 = v4;
    if (v16)
    {
      v17 = v16;
      v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    }
    else
    {
      v18 = 0;
    }
    v27 = v18;
    v19 = sub_100009F00(&qword_1000B8728);
    v20 = String.init<A>(reflecting:)(&v27, v19);
    v22 = v21;
    v27 = sub_10004B4F0(v20, v21, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, aBlock);

    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "HeadphoneMarketingUpsellViewController: Creating AMSUIMarketingItemViewController with metrics= %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    v4 = v26;
  }
  else
  {

  }
  v23 = objc_msgSend(v11, "preload");
  aBlock[4] = (uint64_t)sub_1000223B8;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002267C;
  aBlock[3] = (uint64_t)&unk_1000A6EF0;
  v24 = _Block_copy(aBlock);
  objc_msgSend(v23, "addFinishBlock:", v24);
  _Block_release(v24);

  v25 = *(void **)(v1
                 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingController) = v11;
  swift_unknownObjectRelease(v4);

}

void sub_1000223B8(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1000B7B10 != -1)
      swift_once(&qword_1000B7B10, sub_100021E64);
    v4 = type metadata accessor for Logger(0);
    sub_1000093F8(v4, (uint64_t)qword_1000B8660);
    swift_errorRetain(a2);
    v5 = swift_errorRetain(a2);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = a1;
      v9 = swift_slowAlloc(32, -1);
      v21 = a2;
      v22 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_errorRetain(a2);
      v10 = sub_100009F00((uint64_t *)&unk_1000B8740);
      v11 = String.init<A>(describing:)(&v21, v10);
      v13 = v12;
      v21 = sub_10004B4F0(v11, v12, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "HeadphoneMarketingUpsellViewController: view controller preload error: %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      v14 = v9;
      a1 = v20;
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
  if (qword_1000B7B10 != -1)
    swift_once(&qword_1000B7B10, sub_100021E64);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_1000093F8(v15, (uint64_t)qword_1000B8660);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v19 = 67109120;
    LODWORD(v22) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, (char *)&v22 + 4);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "HeadphoneMarketingUpsellViewController: view controller preload complete: %{BOOL}d", v19, 8u);
    swift_slowDealloc(v19, -1, -1);
  }

}

void sub_10002267C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_1000226DC()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  double v11;
  double v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  Class isa;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  NSObject *v41;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingController];
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    v41 = objc_msgSend(v3, "view");
    objc_msgSend(v0, "addChildViewController:", v3);
    -[NSObject setTranslatesAutoresizingMaskIntoConstraints:](v41, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v4 = objc_msgSend(v0, "contentView");
    objc_msgSend(v4, "addSubview:", v41);

    v5 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v6 = objc_msgSend(v5, "userInterfaceIdiom");

    v7 = objc_msgSend(v2, "contentView");
    v8 = objc_msgSend(v7, "cardStyle");

    v9 = objc_msgSend(v2, "traitCollection");
    v10 = objc_msgSend(v9, "prx_cardSizeClass");

    PRXCardPreferredSize(v8, v10);
    if (v6 == (id)1)
      v12 = v11;
    else
      v12 = v11 * 1.1;
    v13 = objc_msgSend(v2, "contentView");
    v14 = objc_msgSend(v13, "mainContentGuide");

    v15 = (void *)objc_opt_self(NSLayoutConstraint);
    v16 = sub_100009F00((uint64_t *)&unk_1000B8730);
    v17 = swift_allocObject(v16, 80, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100087E70;
    v18 = objc_msgSend(v2, "contentView");
    v19 = objc_msgSend(v18, "heightAnchor");

    v20 = objc_msgSend(v19, "constraintEqualToConstant:", v12);
    *(_QWORD *)(v17 + 32) = v20;
    v21 = -[NSObject heightAnchor](v41, "heightAnchor");
    v22 = objc_msgSend(v21, "constraintEqualToConstant:", v12);

    *(_QWORD *)(v17 + 40) = v22;
    v23 = -[NSObject topAnchor](v41, "topAnchor");
    v24 = objc_msgSend(v14, "topAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

    *(_QWORD *)(v17 + 48) = v25;
    v26 = -[NSObject leadingAnchor](v41, "leadingAnchor");
    v27 = objc_msgSend(v14, "leadingAnchor");
    v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

    *(_QWORD *)(v17 + 56) = v28;
    v29 = -[NSObject trailingAnchor](v41, "trailingAnchor");
    v30 = objc_msgSend(v14, "trailingAnchor");
    v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

    *(_QWORD *)(v17 + 64) = v31;
    v32 = -[NSObject bottomAnchor](v41, "bottomAnchor");
    v33 = objc_msgSend(v14, "bottomAnchor");
    v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

    *(_QWORD *)(v17 + 72) = v34;
    specialized Array._endMutation()(v35);
    sub_10000B880();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v15, "activateConstraints:", isa);

    objc_msgSend(v3, "didMoveToParentViewController:", v2);
  }
  else
  {
    if (qword_1000B7B10 != -1)
      swift_once(&qword_1000B7B10, sub_100021E64);
    v37 = type metadata accessor for Logger(0);
    v38 = sub_1000093F8(v37, (uint64_t)qword_1000B8660);
    v41 = Logger.logObject.getter(v38);
    v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v39, "HeadphoneMarketingUpsellViewController: Marketing controller was not initilized properly", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }
  }

}

id sub_100022C1C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneMarketingUpsellViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HeadphoneMarketingUpsellViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController);
}

uint64_t sub_100022CB4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_type);
}

uint64_t sub_100022CC4(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = v3;
  v34 = a3;
  swift_errorRetain(a3);
  v7 = sub_100009F00(&qword_1000B8720);
  v8 = String.init<A>(reflecting:)(&v34, v7);
  v10 = v9;
  if (qword_1000B7B10 != -1)
    swift_once(&qword_1000B7B10, sub_100021E64);
  v11 = type metadata accessor for Logger(0);
  sub_1000093F8(v11, (uint64_t)qword_1000B8660);
  swift_bridgeObjectRetain_n(a2, 2);
  v12 = swift_bridgeObjectRetain(v10);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v33 = a2;
    v34 = v16;
    *(_DWORD *)v15 = 136315394;
    swift_bridgeObjectRetain(a2);
    v17 = sub_100009F00(&qword_1000B8728);
    v18 = String.init<A>(reflecting:)(&v33, v17);
    v32 = v8;
    v19 = v11;
    v21 = v20;
    v33 = sub_10004B4F0(v18, v20, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    swift_bridgeObjectRelease_n(a2, 2);
    v22 = v21;
    v11 = v19;
    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain(v10);
    v33 = sub_10004B4F0(v32, v10, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
    swift_bridgeObjectRelease_n(v10, 3);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "HeadphoneMarketingUpsellViewController: delegate didResolveWith called %s with error:%s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v10, 2);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  objc_msgSend(a1, "willMoveToParentViewController:", 0);
  v23 = objc_msgSend(a1, "view");
  objc_msgSend(v23, "removeFromSuperview");

  v24 = objc_msgSend(v4, "presentingViewController");
  objc_msgSend(v24, "removeFromParentViewController");

  result = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_presenter]);
  if (result)
  {
    v26 = result;
    if (qword_1000B7C00 != -1)
      swift_once(&qword_1000B7C00, sub_1000713FC);
    v27 = sub_1000093F8(v11, (uint64_t)qword_1000B9F80);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Requested marketing upsell finished", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    v31 = *(_QWORD *)(v26 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
    *(_BYTE *)(v31
             + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 112)) = 0;
    sub_100072410(0);
    return swift_unknownObjectRelease(v26);
  }
  return result;
}

uint64_t sub_10002312C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002313C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t getEnumTagSinglePayload for HeadphoneViewType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE3)
    goto LABEL_17;
  if (a2 + 29 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 29) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 29;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 29;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 29;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1E;
  v8 = v6 - 30;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneViewType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 29 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 29) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE2)
    return ((uint64_t (*)(void))((char *)&loc_100023220 + 4 * byte_100088D55[v4]))();
  *a1 = a2 + 29;
  return ((uint64_t (*)(void))((char *)sub_100023254 + 4 * byte_100088D50[v4]))();
}

uint64_t sub_100023254(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002325C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100023264);
  return result;
}

uint64_t sub_100023270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100023278);
  *(_BYTE *)result = a2 + 29;
  return result;
}

uint64_t sub_10002327C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100023284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneViewType()
{
  return &type metadata for HeadphoneViewType;
}

unint64_t sub_1000232A4()
{
  unint64_t result;

  result = qword_1000B8750;
  if (!qword_1000B8750)
  {
    result = swift_getWitnessTable(&unk_100088DE4, &type metadata for HeadphoneViewType);
    atomic_store(result, (unint64_t *)&qword_1000B8750);
  }
  return result;
}

uint64_t sub_1000232E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B8758);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B8758);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1000233E0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  id v24;
  uint64_t *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  NSString v31;
  id v32;
  unint64_t v33;
  NSString v34;
  id v35;
  id v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  void *v51;
  id v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  id v87;
  unint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  void *v98;
  void *v99;
  _BYTE *v100;
  void *v101;
  id v102;
  void *v103;
  unint64_t v104;
  id v105[2];
  __int128 v106;
  __int128 v107;
  __int128 v108;

  v1 = v0;
  v102 = objc_msgSend(objc_allocWithZone((Class)ACAccountStore), "init");
  v2 = objc_msgSend(v102, "aa_primaryAppleAccount");
  if (!v2)
  {
    if (qword_1000B7B18 != -1)
      swift_once(&qword_1000B7B18, sub_1000232E8);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_1000093F8(v11, (uint64_t)qword_1000B8758);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "No iCloud account.", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_presenter);
    if (Strong)
    {
      v17 = Strong;
      v18 = swift_unknownObjectWeakLoadStrong(Strong + 56);
      swift_unknownObjectRelease(v17);
      if (v18)
      {
        if (qword_1000B7B60 != -1)
          swift_once(&qword_1000B7B60, sub_10002EC3C);
        v19 = sub_1000093F8(v11, (uint64_t)qword_1000B8BC0);
        v20 = Logger.logObject.getter(v19);
        v21 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v22 = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "Showing battery view", v22, 2u);
          swift_slowDealloc(v22, -1, -1);
        }

        v23 = *(void **)(v18 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
        if (v23)
        {
          v24 = v23;
          v100 = sub_10007129C();
          objc_msgSend(v24, "pushViewController:animated:", v100, 1);
          swift_unknownObjectRelease(v18);

          return;
        }
        swift_unknownObjectRelease(v18);
      }
    }

    return;
  }
  v3 = v2;
  v4 = objc_msgSend(objc_allocWithZone((Class)AAUIProfilePictureStore), "initWithAppleAccount:grandSlamAccount:accountStore:", v2, 0, v102);
  v5 = objc_msgSend(v4, "profilePictureForAccountOwner");
  v6 = objc_msgSend(v3, "username");
  if (v6)
  {
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v25 = (uint64_t *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_appleIDInfo);
  v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_appleIDInfo + 8);
  v27 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_appleIDInfo + 16);
  *v25 = v8;
  v25[1] = v10;
  v28 = v25[4];
  v25[2] = (uint64_t)v5;
  v25[3] = 0;
  v25[4] = 0;
  v29 = v5;
  swift_bridgeObjectRelease(v26);

  swift_bridgeObjectRelease(v28);
  v30 = objc_msgSend((id)objc_opt_self(AKAccountManager), "sharedInstance");
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v3, "accountPropertyForKey:", v31);

  if (v32)
  {
    _bridgeAnyObjectToAny(_:)(v105, v32);
    swift_unknownObjectRelease(v32);
  }
  else
  {
    *(_OWORD *)v105 = 0u;
    v106 = 0u;
  }
  sub_100025040((uint64_t)v105, (uint64_t)&v107);
  if (!*((_QWORD *)&v108 + 1))
  {
    sub_100025088((uint64_t)&v107);
LABEL_26:
    if (qword_1000B7B18 != -1)
      swift_once(&qword_1000B7B18, sub_1000232E8);
    v39 = type metadata accessor for Logger(0);
    v40 = sub_1000093F8(v39, (uint64_t)qword_1000B8758);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "altDSID not available", v43, 2u);
      swift_slowDealloc(v43, -1, -1);
    }

    v44 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_presenter);
    if (v44)
    {
      v45 = v44;
      v46 = swift_unknownObjectWeakLoadStrong(v44 + 56);
      swift_unknownObjectRelease(v45);
      if (v46)
      {
        if (qword_1000B7B60 != -1)
          swift_once(&qword_1000B7B60, sub_10002EC3C);
        v47 = sub_1000093F8(v39, (uint64_t)qword_1000B8BC0);
        v48 = Logger.logObject.getter(v47);
        v49 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v50 = 0;
          _os_log_impl((void *)&_mh_execute_header, v48, v49, "Showing battery view", v50, 2u);
          swift_slowDealloc(v50, -1, -1);
        }

        v51 = *(void **)(v46 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
        if (v51)
        {
          v52 = v51;
          v53 = sub_10007129C();
          objc_msgSend(v52, "pushViewController:animated:", v53, 1);
          swift_unknownObjectRelease(v46);

          return;
        }
        swift_unknownObjectRelease(v46);
      }
    }
LABEL_61:

LABEL_62:
    return;
  }
  if ((swift_dynamicCast(&v103, &v107, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_26;
  v33 = v104;
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  v35 = objc_msgSend(v30, "authKitAccountWithAltDSID:", v34);

  if (!v35)
  {
    if (qword_1000B7B18 != -1)
      swift_once(&qword_1000B7B18, sub_1000232E8);
    v54 = type metadata accessor for Logger(0);
    v55 = sub_1000093F8(v54, (uint64_t)qword_1000B8758);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "No AppleID account", v58, 2u);
      swift_slowDealloc(v58, -1, -1);

      return;
    }

    goto LABEL_61;
  }
  v36 = objc_msgSend(v30, "additionalInfoForAccount:", v35);
  if (v36)
  {
    v37 = v36;
    v38 = (_QWORD *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v36, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v38 = 0;
  }
  v99 = v4;
  v96 = objc_msgSend(v30, "phoneAsAppleIDForAccount:", v35);
  if (qword_1000B7B18 != -1)
    swift_once(&qword_1000B7B18, sub_1000232E8);
  v59 = type metadata accessor for Logger(0);
  sub_1000093F8(v59, (uint64_t)qword_1000B8758);
  v60 = swift_bridgeObjectRetain_n(v38, 2);
  v61 = Logger.logObject.getter(v60);
  v62 = static os_log_type_t.default.getter();
  v101 = v29;
  v98 = v30;
  if (os_log_type_enabled(v61, v62))
  {
    v63 = swift_slowAlloc(18, -1);
    v64 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v107 = v64;
    *(_DWORD *)v63 = 136315394;
    v105[0] = v38;
    swift_bridgeObjectRetain(v38);
    v65 = sub_100009F00(&qword_1000B87B8);
    v66 = String.init<A>(reflecting:)(v105, v65);
    v68 = v67;
    v105[0] = (id)sub_10004B4F0(v66, v67, (uint64_t *)&v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v105, &v105[1]);
    swift_bridgeObjectRelease_n(v38, 2);
    swift_bridgeObjectRelease(v68);
    *(_WORD *)(v63 + 12) = 1024;
    LODWORD(v105[0]) = v96;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v105, (char *)v105 + 4);
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "Additional account info: %s, MAKO: %{BOOL}d", (uint8_t *)v63, 0x12u);
    swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v64, -1, -1);
    swift_slowDealloc(v63, -1, -1);

    if (!v38)
      goto LABEL_55;
  }
  else
  {

    swift_bridgeObjectRelease_n(v38, 2);
    if (!v38)
    {
LABEL_55:
      v107 = 0u;
      v108 = 0u;
LABEL_56:
      sub_100025088((uint64_t)&v107);
LABEL_57:
      v71 = swift_bridgeObjectRetain(v38);
      v72 = Logger.logObject.getter(v71);
      v73 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = (uint8_t *)swift_slowAlloc(12, -1);
        v75 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v107 = v75;
        *(_DWORD *)v74 = 136315138;
        v105[0] = v38;
        swift_bridgeObjectRetain(v38);
        v76 = sub_100009F00(&qword_1000B87B8);
        v77 = String.init<A>(reflecting:)(v105, v76);
        v79 = v78;
        v105[0] = (id)sub_10004B4F0(v77, v78, (uint64_t *)&v107);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v105, &v105[1]);
        swift_bridgeObjectRelease_n(v38, 2);
        swift_bridgeObjectRelease(v79);
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "Failed to decode phone number from: %s", v74, 0xCu);
        swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v75, -1, -1);
        swift_slowDealloc(v74, -1, -1);

        return;
      }

      swift_bridgeObjectRelease_n(v38, 2);
      goto LABEL_62;
    }
  }
  if (!v38[2])
    goto LABEL_55;
  swift_bridgeObjectRetain(v38);
  v69 = sub_100034B60(0x6D754E656E6F6870, 0xEC00000073726562);
  if ((v70 & 1) != 0)
  {
    sub_1000250C8(v38[7] + 32 * v69, (uint64_t)&v107);
  }
  else
  {
    v107 = 0u;
    v108 = 0u;
  }
  swift_bridgeObjectRelease(v38);
  if (!*((_QWORD *)&v108 + 1))
    goto LABEL_56;
  v80 = sub_100009F84(0, &qword_1000B87C0, NSArray_ptr);
  if ((swift_dynamicCast(v105, &v107, (char *)&type metadata for Any + 8, v80, 6) & 1) == 0)
    goto LABEL_57;
  v81 = v105[0];
  v82 = objc_msgSend(v105[0], "firstObject");
  if (v82)
  {
    v83 = v82;
    _bridgeAnyObjectToAny(_:)(v105, v82);
    swift_unknownObjectRelease(v83);
  }
  else
  {
    *(_OWORD *)v105 = 0u;
    v106 = 0u;
  }
  sub_100025040((uint64_t)v105, (uint64_t)&v107);
  if (!*((_QWORD *)&v108 + 1))
  {

    goto LABEL_56;
  }
  v84 = sub_100009F84(0, &qword_1000B87C8, NSDictionary_ptr);
  if ((swift_dynamicCast(&v103, &v107, (char *)&type metadata for Any + 8, v84, 6) & 1) == 0)
  {

    goto LABEL_57;
  }
  v85 = v103;
  v105[0] = (id)0x6D754E656E6F6870;
  v105[1] = (id)0xEB00000000726562;
  v86 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v105, &type metadata for String);
  v87 = objc_msgSend(v85, "__swift_objectForKeyedSubscript:", v86);
  swift_unknownObjectRelease(v86);
  if (v87)
  {
    _bridgeAnyObjectToAny(_:)(v105, v87);
    swift_unknownObjectRelease(v87);
  }
  else
  {
    *(_OWORD *)v105 = 0u;
    v106 = 0u;
  }
  sub_100025040((uint64_t)v105, (uint64_t)&v107);
  if (!*((_QWORD *)&v108 + 1))
  {

    sub_100025088((uint64_t)&v107);
    goto LABEL_57;
  }
  if ((swift_dynamicCast(&v103, &v107, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {

    goto LABEL_57;
  }
  v88 = v104;
  if ((v96 & 1) != 0)
  {

    swift_bridgeObjectRelease(v88);
    goto LABEL_57;
  }
  v97 = (uint64_t)v103;
  swift_bridgeObjectRelease(v38);
  v89 = swift_bridgeObjectRetain_n(v88, 2);
  v90 = Logger.logObject.getter(v89);
  v91 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v90, v91))
  {
    v92 = (uint8_t *)swift_slowAlloc(12, -1);
    v95 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v107 = v95;
    *(_DWORD *)v92 = 136315138;
    swift_bridgeObjectRetain(v88);
    v105[0] = (id)sub_10004B4F0(v97, v88, (uint64_t *)&v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v105, &v105[1]);
    v93 = v88;
    swift_bridgeObjectRelease_n(v88, 3);
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "Phone number: %s", v92, 0xCu);
    swift_arrayDestroy(v95, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v95, -1, -1);
    swift_slowDealloc(v92, -1, -1);

  }
  else
  {

    v93 = v88;
    swift_bridgeObjectRelease_n(v88, 2);
  }
  v94 = v25[4];
  v25[3] = v97;
  v25[4] = v93;

  swift_bridgeObjectRelease(v94);
}

void sub_100024280(uint64_t a1)
{
  char *v1;
  char *v2;
  NSString v4;
  NSString v5;
  id v6;
  char *v7;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t inited;
  void *v16;
  NSString *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  NSString v22;
  Class isa;
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  NSString *v28;
  id v29;
  unint64_t v30;
  id v31;
  NSString v32;
  Class v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  Class v67;
  uint64_t v68;
  uint64_t v69;
  NSString v70;
  void *v71;
  id v72;
  uint64_t v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  void *v79;
  id v80;
  id v81;
  _QWORD aBlock[5];
  uint64_t v83;
  char v84[72];
  char v85[80];

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v4);

  v78 = a1;
  if (*(_QWORD *)(a1 + 88))
    v5 = String._bridgeToObjectiveC()();
  else
    v5 = 0;
  objc_msgSend(v2, "setBottomTrayTitle:", v5);

  sub_1000233E0();
  v6 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v80 = v2;
  v7 = &v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_appleIDInfo];
  v8 = (void *)*((_QWORD *)v7 + 2);
  if (v8)
  {
    v9 = (id)*((_QWORD *)v7 + 2);
  }
  else
  {
    v10 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

    v8 = 0;
  }
  v11 = v8;
  objc_msgSend(v6, "setImage:", v9);

  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = *((_QWORD *)v7 + 1);
  v13 = *((_QWORD *)v7 + 4);
  v79 = v6;
  if (v12)
    v14 = *((_QWORD *)v7 + 1);
  else
    v14 = 0xE000000000000000;
  v76 = sub_100009F00(&qword_1000B7CE0);
  inited = swift_initStackObject(v76, v85);
  *(_OWORD *)(inited + 16) = xmmword_100087710;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v16 = (void *)objc_opt_self(UIColor);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain_n(v12, 2);
  v17 = NSForegroundColorAttributeName;
  v75 = v16;
  v18 = objc_msgSend(v16, "labelColor");
  v19 = sub_100009F84(0, (unint64_t *)&qword_1000B7F00, UIColor_ptr);
  *(_QWORD *)(inited + 64) = v19;
  *(_QWORD *)(inited + 40) = v18;
  v20 = sub_100070AA4(inited);
  v21 = objc_allocWithZone((Class)NSMutableAttributedString);
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  type metadata accessor for Key(0);
  sub_100024FB4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  v81 = objc_msgSend(v21, "initWithString:attributes:", v22, isa);

  if (!v12)
  {
    if (v13)
      goto LABEL_15;
LABEL_14:
    v13 = 0xE000000000000000;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease(v12);
  if (!v13)
    goto LABEL_14;
  v24 = objc_allocWithZone((Class)NSAttributedString);
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v24, "initWithString:", v25);

  objc_msgSend(v81, "appendAttributedString:", v26);
LABEL_15:
  v27 = swift_initStackObject(v76, v84);
  *(_OWORD *)(v27 + 16) = xmmword_100087710;
  *(_QWORD *)(v27 + 32) = v17;
  v28 = v17;
  v29 = objc_msgSend(v75, "secondaryLabelColor");
  *(_QWORD *)(v27 + 64) = v19;
  *(_QWORD *)(v27 + 40) = v29;
  v30 = sub_100070AA4(v27);
  v31 = objc_allocWithZone((Class)NSAttributedString);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v33 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v30);
  v34 = objc_msgSend(v31, "initWithString:attributes:", v32, v33);

  objc_msgSend(v81, "appendAttributedString:", v34);
  v35 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v35, "setAttributedText:", v81);
  v36 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v35, "setFont:", v36);

  objc_msgSend(v35, "setTextAlignment:", 1);
  objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v37 = objc_msgSend(v80, "contentView");
  objc_msgSend(v37, "addSubview:", v79);

  v38 = objc_msgSend(v80, "contentView");
  objc_msgSend(v38, "addSubview:", v35);

  v39 = objc_msgSend(v80, "contentView");
  v40 = objc_msgSend(v39, "mainContentGuide");

  v77 = (id)objc_opt_self(NSLayoutConstraint);
  v41 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v42 = swift_allocObject(v41, 96, 7);
  *(_OWORD *)(v42 + 16) = xmmword_100088E10;
  v43 = objc_msgSend(v79, "widthAnchor");
  v44 = objc_msgSend(v43, "constraintEqualToConstant:", 80.0);

  *(_QWORD *)(v42 + 32) = v44;
  v45 = objc_msgSend(v79, "heightAnchor");
  v46 = objc_msgSend(v45, "constraintEqualToConstant:", 80.0);

  *(_QWORD *)(v42 + 40) = v46;
  v47 = objc_msgSend(v79, "topAnchor");
  v48 = objc_msgSend(v40, "topAnchor");
  v49 = objc_msgSend(v47, "constraintGreaterThanOrEqualToAnchor:", v48);

  *(_QWORD *)(v42 + 48) = v49;
  v50 = objc_msgSend(v79, "centerXAnchor");
  v51 = objc_msgSend(v40, "centerXAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v42 + 56) = v52;
  v53 = objc_msgSend(v35, "topAnchor");
  v54 = objc_msgSend(v79, "bottomAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:constant:", v54, 10.0);

  *(_QWORD *)(v42 + 64) = v55;
  v56 = objc_msgSend(v35, "leadingAnchor");
  v57 = objc_msgSend(v40, "leadingAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v42 + 72) = v58;
  v59 = objc_msgSend(v35, "trailingAnchor");
  v60 = objc_msgSend(v40, "trailingAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  *(_QWORD *)(v42 + 80) = v61;
  v62 = objc_msgSend(v35, "bottomAnchor");
  v63 = objc_msgSend(v40, "bottomAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v42 + 88) = v64;
  aBlock[0] = v42;
  specialized Array._endMutation()(v65);
  v66 = v42;
  sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
  v67 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v66);
  objc_msgSend(v77, "activateConstraints:", v67);

  v68 = *(_QWORD *)(v78 + 40);
  v69 = swift_allocObject(&unk_1000A7038, 24, 7);
  swift_unknownObjectWeakInit(v69 + 16, v80);
  swift_bridgeObjectRetain(v68);
  swift_retain(v69);
  v70 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v68);
  aBlock[4] = sub_100025020;
  v83 = v69;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100011720;
  aBlock[3] = &unk_1000A7050;
  v71 = _Block_copy(aBlock);
  v72 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v70, 0, v71);

  _Block_release(v71);
  v73 = v83;
  swift_release(v69);
  v74 = objc_msgSend(v80, "addAction:", v72, swift_release(v73).n128_f64[0]);

}

void sub_100024C50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = a2 + 16;
  if (qword_1000B7B18 != -1)
    swift_once(&qword_1000B7B18, sub_1000232E8);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_1000093F8(v3, (uint64_t)qword_1000B8758);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v7 = 134217984;
    v16 = 128;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Continue Linking pressed in %ld", v7, 0xCu);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, &v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_presenter);

    if (v10)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v11 = sub_1000093F8(v3, (uint64_t)qword_1000B9F80);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Requested to continue from Linking", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }

      v15 = *(_QWORD *)(v10 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(_BYTE *)(v15
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 92)) = 0;
      sub_100072410(0);
      swift_unknownObjectRelease(v10);
    }
  }
}

id sub_100024F00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneLinkingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HeadphoneLinkingViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService30HeadphoneLinkingViewController);
}

uint64_t sub_100024FA4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_type);
}

unint64_t sub_100024FB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7CF0;
  if (!qword_1000B7CF0)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_100087DB8, v1);
    atomic_store(result, (unint64_t *)&qword_1000B7CF0);
  }
  return result;
}

uint64_t sub_100024FFC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100025020(uint64_t a1)
{
  uint64_t v1;

  sub_100024C50(a1, v1);
}

uint64_t sub_100025028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100025038(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100025040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B87B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100025088(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100009F00(&qword_1000B87B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000250C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_100025104(char a1, double a2)
{
  char *v2;
  id v5;
  Class isa;
  id v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;

  v5 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v5, "setNumberStyle:", 3);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v7 = objc_msgSend(v5, "stringForObjectValue:", isa);

  if (v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v9 = v8;

  }
  else
  {
    v9 = 0xE000000000000000;
  }
  v10 = objc_allocWithZone((Class)NSMutableAttributedString);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v28 = objc_msgSend(v10, "initWithString:", v11);

  v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_position];
  v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_position + 8];
  v14 = 0xED00006C6C69662ELL;
  switch(v13)
  {
    case 0:
    case 3:
      break;
    case 1:
    case 2:
      goto LABEL_6;
    default:
      v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_position + 8];
LABEL_6:
      v15 = (void *)objc_opt_self(UIImageSymbolConfiguration);
      sub_100025F6C(v12, v13);
      v16 = objc_msgSend(v15, "configurationWithScale:", 1);
      v17 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
      v18 = v16;
      v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
      v20 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v19, v18);

      if (v20)
      {
        v21 = objc_msgSend(v20, "imageWithRenderingMode:", 2);

      }
      else
      {
        v21 = 0;
      }
      objc_msgSend(v17, "setImage:", v21);

      v22 = objc_allocWithZone((Class)NSAttributedString);
      v23 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend(v22, "initWithString:", v23);

      objc_msgSend(v28, "insertAttributedString:atIndex:", v24, 0);
      v25 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v17);
      objc_msgSend(v28, "insertAttributedString:atIndex:", v25, 0);

      break;
  }
  v26 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryPercentageLabel];
  objc_msgSend(v26, "setAttributedText:", v28);
  v27 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryView];
  objc_msgSend(v27, "setChargePercent:", a2);
  objc_msgSend(v27, "setChargingState:", a1 & 1);
  objc_msgSend(v27, "setHidden:", a2 == 0.0);
  objc_msgSend(v26, "setHidden:", a2 == 0.0);
  objc_msgSend(v2, "setNeedsLayout");

}

char *sub_1000254A8(uint64_t a1, uint64_t a2, char a3, double a4)
{
  void *v4;
  objc_class *ObjectType;
  id v9;
  char *v10;
  id v11;
  id v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  Class isa;
  id v67;
  objc_super v69;

  ObjectType = (objc_class *)swift_getObjectType(v4, a2);
  v9 = objc_allocWithZone((Class)UILabel);
  v10 = v4;
  v11 = objc_msgSend(v9, "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryPercentageLabel] = v11;
  v12 = objc_msgSend(objc_allocWithZone((Class)_UIBatteryView), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryView] = v12;
  v13 = &v10[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_position];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;

  v69.receiver = v10;
  v69.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v69, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryPercentageLabel;
  v16 = *(void **)&v14[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryPercentageLabel];
  v17 = v14;
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "setAdjustsFontForContentSizeCategory:", 1);
  v18 = (void *)objc_opt_self(UIFont);
  v19 = v16;
  v20 = objc_msgSend(v18, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v19, "setFont:", v20);

  v21 = *(void **)&v14[v15];
  objc_msgSend(v21, "setNumberOfLines:", 0);
  v22 = (void *)objc_opt_self(UIColor);
  v23 = v21;
  v24 = objc_msgSend(v22, "labelColor");
  objc_msgSend(v23, "setTextColor:", v24);

  v25 = *(void **)&v14[v15];
  objc_msgSend(v25, "setTextAlignment:", 1);
  objc_msgSend(v17, "addSubview:", v25);
  v26 = OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryView;
  v27 = *(void **)&v17[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryView];
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v27, "setSizeCategory:", 1);
  v28 = v27;
  v29 = objc_msgSend(v22, "systemGreenColor");
  objc_msgSend(v28, "setFillColor:", v29);

  v30 = *(void **)&v17[v26];
  objc_msgSend(v30, "setChargePercent:", a4);
  v31 = v30;
  v32 = objc_msgSend(v22, "tertiaryLabelColor");
  objc_msgSend(v31, "setBodyColor:", v32);

  v33 = *(void **)&v17[v26];
  objc_msgSend(v33, "setChargingState:", a3 & 1);
  objc_msgSend(v33, "setShowsInlineChargingIndicator:", 1);
  objc_msgSend(v17, "addSubview:", v33);
  v67 = (id)objc_opt_self(NSLayoutConstraint);
  v34 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v35 = swift_allocObject(v34, 104, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100087720;
  v36 = objc_msgSend(v33, "topAnchor");
  v37 = objc_msgSend(v17, "topAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v35 + 32) = v38;
  v39 = objc_msgSend(*(id *)&v17[v26], "leadingAnchor");
  v40 = objc_msgSend(v17, "leadingAnchor");
  v41 = objc_msgSend(v39, "constraintGreaterThanOrEqualToAnchor:", v40);

  *(_QWORD *)(v35 + 40) = v41;
  v42 = objc_msgSend(*(id *)&v17[v26], "trailingAnchor");
  v43 = objc_msgSend(v17, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintLessThanOrEqualToAnchor:", v43);

  *(_QWORD *)(v35 + 48) = v44;
  v45 = objc_msgSend(*(id *)&v17[v26], "centerXAnchor");
  v46 = objc_msgSend(v17, "centerXAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v35 + 56) = v47;
  v48 = objc_msgSend(*(id *)&v14[v15], "topAnchor");
  v49 = objc_msgSend(*(id *)&v17[v26], "bottomAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, 5.0);

  *(_QWORD *)(v35 + 64) = v50;
  v51 = objc_msgSend(*(id *)&v14[v15], "leadingAnchor");
  v52 = objc_msgSend(v17, "leadingAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

  *(_QWORD *)(v35 + 72) = v53;
  v54 = objc_msgSend(*(id *)&v14[v15], "trailingAnchor");
  v55 = objc_msgSend(v17, "trailingAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v35 + 80) = v56;
  v57 = objc_msgSend(*(id *)&v14[v15], "centerXAnchor");
  v58 = objc_msgSend(*(id *)&v17[v26], "centerXAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v35 + 88) = v59;
  v60 = objc_msgSend(*(id *)&v14[v15], "bottomAnchor");
  v61 = objc_msgSend(v17, "bottomAnchor");
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

  *(_QWORD *)(v35 + 96) = v62;
  specialized Array._endMutation()(v63);
  v64 = v35;
  sub_10000B880();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v64);
  objc_msgSend(v67, "activateConstraints:", isa);

  sub_100025104(a3, a4);
  return v17;
}

uint64_t type metadata accessor for LabelledBatteryView()
{
  return objc_opt_self(_TtC20HeadphoneProxService19LabelledBatteryView);
}

unint64_t destroy for LabelledBatteryView.Position(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s20HeadphoneProxService19LabelledBatteryViewC8PositionOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for LabelledBatteryView.Position(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1[1];
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = a1[1];
  v7 = v6 + 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v5 = a2[1];
  v8 = v5 + 1;
  if (v7 > 1)
  {
    if (v8 <= 1)
    {
      *a1 = *a2;
      v10 = a2[1];
      a1[1] = v10;
      swift_bridgeObjectRetain(v10);
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v8 > 1)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_12;
  }
  *a1 = *a2;
  v9 = a2[1];
  a1[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for LabelledBatteryView.Position(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if ((v5 + 1) > 1)
    goto LABEL_9;
  v6 = *(_QWORD *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(a2 + 8);
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease(v4);
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for LabelledBatteryView.Position(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 3)
    return (v3 - 2);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LabelledBatteryView.Position(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t sub_100025F0C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_100025F2C(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    result[1] = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LabelledBatteryView.Position()
{
  return &type metadata for LabelledBatteryView.Position;
}

uint64_t sub_100025F6C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 2)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_100025F84(uint64_t a1, uint64_t a2)
{
  if (a2 != 3)
    return sub_100025F94(a1, a2);
  return a1;
}

uint64_t sub_100025F94(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 2)
    return swift_bridgeObjectRelease(a2);
  return result;
}

void sub_100025FAC(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  Class isa;
  objc_super v28;

  v28.receiver = v2;
  v28.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v28, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 1);
  v3 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 4, 72.0);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v4, v3);

  v6 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v5);
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
  objc_msgSend(v6, "setTintColor:", v7);

  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v8 = objc_msgSend(v2, "contentView");
  objc_msgSend(v8, "addSubview:", v6);

  v9 = objc_msgSend(v2, "contentView");
  v10 = objc_msgSend(v9, "mainContentGuide");

  v11 = (void *)objc_opt_self(NSLayoutConstraint);
  v12 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100088460;
  v14 = objc_msgSend(v6, "topAnchor");
  v15 = objc_msgSend(v10, "topAnchor");
  v16 = objc_msgSend(v14, "constraintGreaterThanOrEqualToAnchor:", v15);

  *(_QWORD *)(v13 + 32) = v16;
  v17 = objc_msgSend(v6, "bottomAnchor");
  v18 = objc_msgSend(v10, "bottomAnchor");
  v19 = objc_msgSend(v17, "constraintLessThanOrEqualToAnchor:", v18);

  *(_QWORD *)(v13 + 40) = v19;
  v20 = objc_msgSend(v6, "centerXAnchor");
  v21 = objc_msgSend(v10, "centerXAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v13 + 48) = v22;
  v23 = objc_msgSend(v6, "centerYAnchor");
  v24 = objc_msgSend(v10, "centerYAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v13 + 56) = v25;
  specialized Array._endMutation()(v26);
  sub_10000B880();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v11, "activateConstraints:", isa);

}

void sub_1000263C0(uint64_t a1)
{
  void *v1;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = *(_QWORD *)(a1 + 40);
  v5 = swift_allocObject(&unk_1000A7160, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v1);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v11[4] = sub_100026698;
  v12 = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100011720;
  v11[3] = &unk_1000A7178;
  v7 = _Block_copy(v11);
  v8 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v6, 0, v7);

  _Block_release(v7);
  v9 = v12;
  swift_release(v5);
  v10 = objc_msgSend(v1, "addAction:", v8, swift_release(v9).n128_f64[0]);

}

void sub_100026528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneErrorViewController_presenter);

    if (v5)
    {
      sub_100072870();
      v6 = swift_unknownObjectWeakLoadStrong(v5 + 56);
      if (v6)
      {
        v7 = v6;
        sub_10002F37C();
        swift_unknownObjectRelease(v5);
        v5 = v7;
      }
      swift_unknownObjectRelease(v5);
    }
  }
}

uint64_t type metadata accessor for HeadphoneErrorViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService28HeadphoneErrorViewController);
}

uint64_t sub_100026664()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneErrorViewController_type);
}

uint64_t sub_100026674()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100026698(uint64_t a1)
{
  uint64_t v1;

  sub_100026528(a1, v1);
}

uint64_t sub_1000266A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000266B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000266B8()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = objc_msgSend(v0, "_remoteViewControllerProxy");
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v6, v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100025040((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_100009F00((uint64_t *)&unk_1000B89B0);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_100017E48((uint64_t)v7, &qword_1000B87B0);
    return 0;
  }
}

void sub_1000267E8(char a1, uint64_t a2)
{
  void *v2;
  void *v4;
  void *v5;
  uint64_t updated;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = v2;
  v9.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v9, "viewDidAppear:", a1 & 1);
  v4 = (void *)sub_1000266B8();
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setStatusBarHidden:withDuration:", 1, 0.3);
    swift_unknownObjectRelease(v5);
  }
  updated = type metadata accessor for SoftwareUpdateRequiredViewController();
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(updated)), "init");
  v8 = objc_msgSend(v2, "presentProxCardFlowWithDelegate:initialViewController:", v2, v7);

}

uint64_t type metadata accessor for SoftwareUpdateRequiredFlow()
{
  return objc_opt_self(_TtC20HeadphoneProxService26SoftwareUpdateRequiredFlow);
}

double sub_100026A60()
{
  double result;

  result = 30.0 - PRXMainContentMargin;
  *(double *)&qword_1000B8850 = 30.0 - PRXMainContentMargin;
  return result;
}

void sub_100026A80()
{
  qword_1000B8858 = 0x405A000000000000;
}

void sub_100026A90()
{
  qword_1000B8860 = 0x4043000000000000;
}

void sub_100026AA0()
{
  qword_1000B8868 = 0x4026000000000000;
}

void sub_100026AB0()
{
  qword_1000B8870 = 0x4039000000000000;
}

void sub_100026AC0()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  void *object;
  NSString v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  Swift::String_optional v12;
  Swift::String v13;
  void *v14;
  NSString v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  void *v20;
  uint64_t v21;
  NSString v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v29._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0x4552415754464F53;
  v4._object = (void *)0xEF4554414450555FLL;
  v5.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v5.value._object = (void *)0xEB00000000656C62;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 0;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v29)._object;

  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v1, "setTitle:", v8);

  v28._countAndFlagsBits = 0xD000000000000018;
  v28._object = (void *)0x800000010008DB90;
  if (PRXIsPad())
  {
    v9 = 0x534F444150495FLL;
    v10 = 0xE700000000000000;
  }
  else
  {
    v9 = 1397705055;
    v10 = 0xE400000000000000;
  }
  String.append(_:)(*(Swift::String *)&v9);
  v11 = objc_msgSend(v2, "mainBundle");
  v30._object = (void *)0xE000000000000000;
  v12.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v12.value._object = (void *)0xEB00000000656C62;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v12, (NSBundle)v11, v13, v30)._object;
  swift_bridgeObjectRelease(v28._object);

  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v1, "setSubtitle:", v15);

  objc_msgSend(v1, "setDismissalType:", 3);
  v16 = objc_msgSend(v2, "mainBundle");
  v31._object = (void *)0xE000000000000000;
  v17._object = (void *)0x800000010008DBB0;
  v17._countAndFlagsBits = 0xD000000000000010;
  v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v18.value._object = (void *)0xEB00000000656C62;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v31)._object;

  v21 = swift_allocObject(&unk_1000A71B8, 24, 7);
  swift_unknownObjectUnownedInit(v21 + 16, v1);
  swift_retain(v21);
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  aBlock[4] = sub_100027F18;
  v27 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100011720;
  aBlock[3] = &unk_1000A71D0;
  v23 = _Block_copy(aBlock);
  v24 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v22, 0, v23);

  _Block_release(v23);
  v25 = v27;
  swift_release(v21);

  sub_100027278();
}

void sub_100026E34(uint64_t a1, uint64_t a2)
{
  void *Strong;
  void *v3;
  _QWORD v4[6];

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v4[4] = sub_100026EC8;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_100012FBC;
  v4[3] = &unk_1000A71F8;
  v3 = _Block_copy(v4);
  objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, v3);
  _Block_release(v3);

}

uint64_t sub_100026EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  NSURL *v16;
  void *v17;
  void *v18;
  void *v19;
  unint64_t v20;
  Class isa;
  id v22;
  uint64_t (*v23)(char *, uint64_t);
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  _BYTE v37[80];

  v0 = sub_100009F00(&qword_1000B7F08);
  __chkstk_darwin(v0, v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000048, 0x800000010008DBD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_100017E48((uint64_t)v3, &qword_1000B7F08);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  v10 = sub_100009F00(&qword_1000B8940);
  inited = swift_initStackObject(v10, v37);
  *(_OWORD *)(inited + 16) = xmmword_100088470;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyUnlockDevice);
  *(_QWORD *)(inited + 40) = v12;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyPromptUnlockDevice);
  *(_QWORD *)(inited + 64) = v13;
  *(_BYTE *)(inited + 72) = 1;
  v14 = sub_100070BD0(inited);
  v15 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v15)
  {
    v17 = v15;
    URL._bridgeToObjectiveC()(v16);
    v19 = v18;
    v20 = sub_10002E8E4(v14);
    swift_bridgeObjectRelease(v14);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v20);
    v35 = 0;
    LOBYTE(v20) = objc_msgSend(v17, "openSensitiveURL:withOptions:error:", v19, isa, &v35);

    v22 = v35;
    if ((v20 & 1) != 0)
    {
      v23 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
      v24 = v35;
      return v23(v8, v4);
    }
    else
    {
      v25 = v35;
      v26 = _convertNSErrorToError(_:)(v22);

      swift_willThrow();
      v27 = sub_100009F00(&qword_1000B8948);
      v28 = swift_allocObject(v27, 64, 7);
      *(_OWORD *)(v28 + 16) = xmmword_100087710;
      v35 = 0;
      v36 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      v29._object = (void *)0x800000010008DC20;
      v29._countAndFlagsBits = 0xD000000000000019;
      String.append(_:)(v29);
      v34 = v26;
      v30 = sub_100009F00((uint64_t *)&unk_1000B8740);
      _print_unlocked<A, B>(_:_:)(&v34, &v35, v30, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v31 = v35;
      v32 = v36;
      *(_QWORD *)(v28 + 56) = &type metadata for String;
      *(_QWORD *)(v28 + 32) = v31;
      *(_QWORD *)(v28 + 40) = v32;
      print(_:separator:terminator:)(v28, 32, 0xE100000000000000, 10, 0xE100000000000000);
      swift_bridgeObjectRelease(v28);
      swift_errorRelease(v26);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return swift_bridgeObjectRelease(v14);
  }
}

void sub_100027278()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  Class isa;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  double v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  void *v82;
  Class v83;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v3 = objc_msgSend(v0, "contentView");
  objc_msgSend(v3, "addLayoutGuide:", v2);

  v4 = (void *)objc_opt_self(UIImage);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "imageNamed:", v5);

  v82 = v6;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v6);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v8 = objc_msgSend(v1, "contentView");
  objc_msgSend(v8, "addSubview:", v7);

  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "systemRedColor");
  objc_msgSend(v9, "setBackgroundColor:", v11);

  v12 = objc_msgSend(v9, "layer");
  if (qword_1000B7B30 != -1)
    swift_once(&qword_1000B7B30, sub_100026A90);
  objc_msgSend(v12, "setCornerRadius:", *(double *)&qword_1000B8860 * 0.5);

  v13 = objc_msgSend(v1, "contentView");
  objc_msgSend(v13, "addSubview:", v9);

  v14 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v15 = (void *)objc_opt_self(NSNumberFormatter);
  sub_100009F84(0, (unint64_t *)&qword_1000B8930, NSNumber_ptr);
  isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  v17 = objc_msgSend(v15, "localizedStringFromNumber:numberStyle:", isa, 0);

  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v19 = v18;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
  }
  objc_msgSend(v14, "setText:", v17);

  v20 = objc_msgSend(v10, "whiteColor");
  objc_msgSend(v14, "setTextColor:", v20);

  objc_msgSend(v14, "setTextAlignment:", 1);
  v21 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleCaption1);
  v22 = objc_msgSend(v21, "fontDescriptorWithSymbolicTraits:", 2);

  if (v22)
  {
    v23 = qword_1000B7B40;
    v24 = v22;
    if (v23 != -1)
      swift_once(&qword_1000B7B40, sub_100026AB0);
    v25 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v24, *(double *)&qword_1000B8870);

    objc_msgSend(v14, "setFont:", v25);
  }
  objc_msgSend(v9, "addSubview:", v14);
  v26 = 0.0;
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC20HeadphoneProxService36SoftwareUpdateRequiredViewController_offsetIcon) == 1)
  {
    if (qword_1000B7B20 != -1)
      swift_once(&qword_1000B7B20, sub_100026A60);
    v26 = *(double *)&qword_1000B8850;
  }
  v27 = objc_msgSend(v1, "contentView");
  v28 = objc_msgSend(v27, "mainContentGuide");

  v81 = (id)objc_opt_self(NSLayoutConstraint);
  v29 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v30 = swift_allocObject(v29, 168, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100088F00;
  v31 = objc_msgSend(v2, "centerXAnchor");
  v32 = objc_msgSend(v28, "centerXAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v30 + 32) = v33;
  v34 = objc_msgSend(v2, "topAnchor");
  v35 = objc_msgSend(v28, "topAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v35, v26);

  *(_QWORD *)(v30 + 40) = v36;
  v37 = objc_msgSend(v2, "bottomAnchor");
  v38 = objc_msgSend(v28, "bottomAnchor");
  v39 = objc_msgSend(v37, "constraintLessThanOrEqualToAnchor:", v38);

  *(_QWORD *)(v30 + 48) = v39;
  v40 = objc_msgSend(v7, "leadingAnchor");
  v41 = objc_msgSend(v2, "leadingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v30 + 56) = v42;
  v43 = objc_msgSend(v7, "trailingAnchor");
  v44 = objc_msgSend(v2, "trailingAnchor");
  if (qword_1000B7B38 != -1)
    swift_once(&qword_1000B7B38, sub_100026AA0);
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v44, -*(double *)&qword_1000B8868);

  *(_QWORD *)(v30 + 64) = v45;
  v46 = objc_msgSend(v7, "topAnchor");
  v47 = objc_msgSend(v2, "topAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v47, *(double *)&qword_1000B8868);

  *(_QWORD *)(v30 + 72) = v48;
  v49 = objc_msgSend(v7, "bottomAnchor");
  v50 = objc_msgSend(v2, "bottomAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v30 + 80) = v51;
  v52 = objc_msgSend(v7, "widthAnchor");
  if (qword_1000B7B28 != -1)
    swift_once(&qword_1000B7B28, sub_100026A80);
  v53 = objc_msgSend(v52, "constraintEqualToConstant:", *(double *)&qword_1000B8858);

  *(_QWORD *)(v30 + 88) = v53;
  v54 = objc_msgSend(v7, "heightAnchor");
  v55 = objc_msgSend(v7, "widthAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v30 + 96) = v56;
  v57 = objc_msgSend(v9, "topAnchor");
  v58 = objc_msgSend(v2, "topAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v30 + 104) = v59;
  v60 = objc_msgSend(v9, "trailingAnchor");
  v61 = objc_msgSend(v2, "trailingAnchor");
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

  *(_QWORD *)(v30 + 112) = v62;
  v63 = objc_msgSend(v9, "widthAnchor");
  v64 = objc_msgSend(v63, "constraintEqualToConstant:", *(double *)&qword_1000B8860);

  *(_QWORD *)(v30 + 120) = v64;
  v65 = objc_msgSend(v9, "heightAnchor");
  v66 = objc_msgSend(v9, "widthAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  *(_QWORD *)(v30 + 128) = v67;
  v68 = objc_msgSend(v14, "leadingAnchor");
  v69 = objc_msgSend(v9, "leadingAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:", v69);

  *(_QWORD *)(v30 + 136) = v70;
  v71 = objc_msgSend(v14, "topAnchor");
  v72 = objc_msgSend(v9, "topAnchor");
  v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

  *(_QWORD *)(v30 + 144) = v73;
  v74 = objc_msgSend(v14, "bottomAnchor");
  v75 = objc_msgSend(v9, "bottomAnchor");
  v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

  *(_QWORD *)(v30 + 152) = v76;
  v77 = objc_msgSend(v14, "trailingAnchor");
  v78 = objc_msgSend(v9, "trailingAnchor");
  v79 = objc_msgSend(v77, "constraintEqualToAnchor:", v78);

  *(_QWORD *)(v30 + 160) = v79;
  specialized Array._endMutation()(v80);
  sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
  v83 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v30);
  objc_msgSend(v81, "activateConstraints:", v83);

}

id sub_100027EA4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SoftwareUpdateRequiredViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SoftwareUpdateRequiredViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService36SoftwareUpdateRequiredViewController);
}

uint64_t sub_100027EF4()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100027F18(uint64_t a1)
{
  uint64_t v1;

  sub_100026E34(a1, v1);
}

uint64_t sub_100027F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100027F30(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100027F40(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t ObjCClassFromMetadata;
  id v6;
  id v7;
  id v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  id v13;
  id v14;
  NSString v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  Class isa;
  objc_super v42;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v42.receiver = v2;
  v42.super_class = ObjectType;
  objc_msgSendSuper2(&v42, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 1);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjectType);
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v7, "userInterfaceStyle");

  v9 = v8 == (id)1;
  if (v8 == (id)1)
    v10 = 0x746867694CLL;
  else
    v10 = 1802658116;
  if (v9)
    v11 = (void *)0xE500000000000000;
  else
    v11 = (void *)0xE400000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(0xE000000000000000);
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v11);
  v13 = objc_allocWithZone((Class)BSUICAPackageView);
  v14 = v6;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x800000010008DCC0);
  v16 = objc_msgSend(v13, "initWithPackageName:inBundle:", v15, v14, 0xD000000000000016);

  if (v16)
  {
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setState:animated:", v17, 1);

    objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v18 = objc_msgSend(v3, "contentView");
    objc_msgSend(v18, "addSubview:", v16);

    v19 = objc_msgSend(v3, "contentView");
    v20 = objc_msgSend(v19, "mainContentGuide");

    v21 = (void *)objc_opt_self(NSLayoutConstraint);
    v22 = sub_100009F00((uint64_t *)&unk_1000B8730);
    v23 = swift_allocObject(v22, 80, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100087E70;
    v24 = objc_msgSend(v16, "topAnchor");
    v25 = objc_msgSend(v20, "topAnchor");
    v26 = objc_msgSend(v24, "constraintGreaterThanOrEqualToAnchor:", v25);

    *(_QWORD *)(v23 + 32) = v26;
    v27 = objc_msgSend(v16, "bottomAnchor");
    v28 = objc_msgSend(v20, "bottomAnchor");
    v29 = objc_msgSend(v27, "constraintLessThanOrEqualToAnchor:", v28);

    *(_QWORD *)(v23 + 40) = v29;
    v30 = objc_msgSend(v16, "heightAnchor");
    v31 = objc_msgSend(v30, "constraintEqualToConstant:", 160.0);

    *(_QWORD *)(v23 + 48) = v31;
    v32 = objc_msgSend(v16, "widthAnchor");
    v33 = objc_msgSend(v32, "constraintEqualToConstant:", 320.0);

    *(_QWORD *)(v23 + 56) = v33;
    v34 = objc_msgSend(v16, "centerYAnchor");
    v35 = objc_msgSend(v20, "centerYAnchor");
    v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

    *(_QWORD *)(v23 + 64) = v36;
    v37 = objc_msgSend(v16, "centerXAnchor");
    v38 = objc_msgSend(v20, "centerXAnchor");
    v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

    *(_QWORD *)(v23 + 72) = v39;
    specialized Array._endMutation()(v40);
    sub_10000B880();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v23);
    objc_msgSend(v21, "activateConstraints:", isa);

  }
  else
  {
    __break(1u);
  }
}

void sub_100028504(uint64_t a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void **v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  void *v22;
  void (*v23)(uint64_t);
  uint64_t v24;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v4);

  v5 = *(_QWORD *)(a1 + 40);
  v6 = swift_allocObject(&unk_1000A7270, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v23 = sub_1000288F0;
  v24 = v6;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A7288;
  v8 = _Block_copy(&v19);
  v9 = (void *)objc_opt_self(PRXAction);
  v10 = objc_msgSend(v9, "actionWithTitle:style:handler:", v7, 0, v8);

  _Block_release(v8);
  v11 = v24;
  swift_release(v6);

  v12 = *(_QWORD *)(a1 + 56);
  v13 = swift_allocObject(&unk_1000A7270, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v23 = sub_100028924;
  v24 = v13;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A72B0;
  v15 = _Block_copy(&v19);
  v16 = objc_msgSend(v9, "actionWithTitle:style:handler:", v14, 1, v15);

  _Block_release(v15);
  v17 = v24;
  swift_release(v13);
  v18 = objc_msgSend(v1, "addAction:", v16, swift_release(v17).n128_f64[0]);

}

void sub_100028794(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong+ OBJC_IVAR____TtC20HeadphoneProxService51HeadphoneAdaptiveControlsAdaptiveModeViewController_presenter);

    if (v7)
    {
      sub_1000739B8(a3 & 1);
      swift_unknownObjectRelease(v7);
    }
  }
}

uint64_t type metadata accessor for HeadphoneAdaptiveControlsAdaptiveModeViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService51HeadphoneAdaptiveControlsAdaptiveModeViewController);
}

uint64_t sub_1000288BC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService51HeadphoneAdaptiveControlsAdaptiveModeViewController_type);
}

uint64_t sub_1000288CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000288F0(uint64_t a1)
{
  uint64_t v1;

  sub_100028794(a1, v1, 1);
}

uint64_t sub_10002890C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002891C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100028924(uint64_t a1)
{
  uint64_t v1;

  sub_100028794(a1, v1, 0);
}

uint64_t destroy for HeadphoneModel.AnnounceNotificationSources(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
}

uint64_t initializeWithCopy for HeadphoneModel.AnnounceNotificationSources(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v5;
  v8 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v11 = *(void **)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v11;
  *(_QWORD *)(a1 + 96) = v10;
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v12;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v13 = v6;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  v14 = v11;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t assignWithCopy for HeadphoneModel.AnnounceNotificationSources(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(void **)(a1 + 40);
  v9 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = v9;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v15 = *(void **)(a1 + 88);
  v16 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v16;
  v17 = v16;

  v18 = *(_QWORD *)(a2 + 96);
  v19 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)(a2 + 104);
  v21 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  return a1;
}

__n128 initializeWithTake for HeadphoneModel.AnnounceNotificationSources(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for HeadphoneModel.AnnounceNotificationSources(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v11;
  swift_bridgeObjectRelease(v12);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);

  v13 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneModel.AnnounceNotificationSources(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneModel.AnnounceNotificationSources(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneModel.AnnounceNotificationSources()
{
  return &type metadata for HeadphoneModel.AnnounceNotificationSources;
}

uint64_t sub_100028CEC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(const void *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(const void *, uint64_t, uint64_t);
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  int v74;
  char v75;
  uint64_t v76;
  void *__dst;
  uint64_t v79;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v19);
  }
  else
  {
    v7 = a2[1];
    if (v7)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      v8 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v8;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v10 = (void *)a2[5];
      v9 = a2[6];
      *(_QWORD *)(a1 + 40) = v10;
      *(_QWORD *)(a1 + 48) = v9;
      v12 = a2[7];
      v11 = a2[8];
      *(_QWORD *)(a1 + 56) = v12;
      *(_QWORD *)(a1 + 64) = v11;
      v13 = a2[9];
      *(_QWORD *)(a1 + 72) = v13;
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
      v15 = (void *)a2[11];
      v14 = a2[12];
      *(_QWORD *)(a1 + 88) = v15;
      *(_QWORD *)(a1 + 96) = v14;
      v16 = a2[13];
      *(_QWORD *)(a1 + 104) = v16;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v8);
      v17 = v10;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v13);
      v18 = v15;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRetain(v16);
    }
    else
    {
      v20 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v20;
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      v21 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v21;
      v22 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v22;
    }
    v23 = a2[14];
    *(_QWORD *)(a1 + 112) = v23;
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    v24 = a2[16];
    v25 = a2[17];
    *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
    *(_WORD *)(a1 + 145) = *(_WORD *)((char *)a2 + 145);
    v26 = a3[11];
    v27 = (void *)(a1 + v26);
    v28 = (char *)a2 + v26;
    *(_QWORD *)(a1 + 128) = v24;
    *(_QWORD *)(a1 + 136) = v25;
    v29 = type metadata accessor for UUID(0);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v25);
    if (v31(v28, 1, v29))
    {
      v32 = sub_100009F00(&qword_1000B8A30);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v33 = a3[13];
    *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)((char *)a2 + a3[12]);
    v34 = (_QWORD *)(a1 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = a3[14];
    v38 = a1 + v37;
    v39 = (_OWORD *)((char *)a2 + v37);
    v40 = *(uint64_t *)((char *)a2 + v37 + 8);
    swift_bridgeObjectRetain(v36);
    if (v40 >> 60 == 15)
    {
      *(_OWORD *)v38 = *v39;
    }
    else
    {
      v41 = *(_QWORD *)v39;
      sub_10002913C(v41, v40);
      *(_QWORD *)v38 = v41;
      *(_QWORD *)(v38 + 8) = v40;
    }
    v42 = a3[16];
    *(_QWORD *)(a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(_BYTE *)(a1 + v42) = *((_BYTE *)a2 + v42);
    v43 = a3[17];
    v44 = a3[18];
    v45 = (_QWORD *)(a1 + v43);
    v46 = (uint64_t *)((char *)a2 + v43);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = (_QWORD *)(a1 + v44);
    v49 = (uint64_t *)((char *)a2 + v44);
    v79 = v49[1];
    *v48 = *v49;
    v48[1] = v79;
    v50 = a3[20];
    *(_BYTE *)(a1 + a3[19]) = *((_BYTE *)a2 + a3[19]);
    *(_BYTE *)(a1 + v50) = *((_BYTE *)a2 + v50);
    v51 = a3[22];
    *(_BYTE *)(a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
    *(_BYTE *)(a1 + v51) = *((_BYTE *)a2 + v51);
    v52 = a3[24];
    *(_DWORD *)(a1 + a3[23]) = *(_DWORD *)((char *)a2 + a3[23]);
    *(_BYTE *)(a1 + v52) = *((_BYTE *)a2 + v52);
    v53 = a3[26];
    *(_BYTE *)(a1 + a3[25]) = *((_BYTE *)a2 + a3[25]);
    *(_BYTE *)(a1 + v53) = *((_BYTE *)a2 + v53);
    v54 = a3[28];
    *(_BYTE *)(a1 + a3[27]) = *((_BYTE *)a2 + a3[27]);
    *(_DWORD *)(a1 + v54) = *(_DWORD *)((char *)a2 + v54);
    v55 = a3[30];
    *(_DWORD *)(a1 + a3[29]) = *(_DWORD *)((char *)a2 + a3[29]);
    *(_BYTE *)(a1 + v55) = *((_BYTE *)a2 + v55);
    v56 = a3[32];
    *(_DWORD *)(a1 + a3[31]) = *(_DWORD *)((char *)a2 + a3[31]);
    *(_BYTE *)(a1 + v56) = *((_BYTE *)a2 + v56);
    v57 = a3[33];
    v58 = a3[34];
    v59 = *(void **)((char *)a2 + v57);
    *(_QWORD *)(a1 + v57) = v59;
    v60 = *(uint64_t *)((char *)a2 + v58);
    *(_QWORD *)(a1 + v58) = v60;
    v61 = a3[35];
    __dst = (void *)(a1 + v61);
    v62 = (char *)a2 + v61;
    v63 = type metadata accessor for Date(0);
    v64 = *(_QWORD *)(v63 - 8);
    v65 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v79);
    v66 = v59;
    swift_retain(v60);
    if (v65(v62, 1, v63))
    {
      v67 = sub_100009F00(&qword_1000B8A38);
      memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v64 + 16))(__dst, v62, v63);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(__dst, 0, 1, v63);
    }
    v68 = a3[37];
    *(_QWORD *)(a1 + a3[36]) = *(uint64_t *)((char *)a2 + a3[36]);
    *(_BYTE *)(a1 + v68) = *((_BYTE *)a2 + v68);
    v69 = a3[39];
    *(_QWORD *)(a1 + a3[38]) = *(uint64_t *)((char *)a2 + a3[38]);
    *(_BYTE *)(a1 + v69) = *((_BYTE *)a2 + v69);
    v70 = a3[41];
    *(_BYTE *)(a1 + a3[40]) = *((_BYTE *)a2 + a3[40]);
    *(_BYTE *)(a1 + v70) = *((_BYTE *)a2 + v70);
    v71 = a3[42];
    v72 = a1 + v71;
    v73 = (uint64_t *)((char *)a2 + v71);
    v74 = *((unsigned __int8 *)v73 + 8);
    if (v74 == 255)
    {
      *(_QWORD *)v72 = *v73;
      *(_BYTE *)(v72 + 8) = *((_BYTE *)v73 + 8);
    }
    else
    {
      v75 = v74 & 1;
      v76 = *v73;
      sub_100015DF0((void *)*v73, v74 & 1);
      *(_QWORD *)v72 = v76;
      *(_BYTE *)(v72 + 8) = v75;
    }
    *(_QWORD *)(a1 + a3[43]) = *(uint64_t *)((char *)a2 + a3[43]);
  }
  return a1;
}

uint64_t sub_10002913C(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

void sub_100029180(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 112));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 136));
  v5 = a1 + a2[11];
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[13] + 8));
  v8 = (uint64_t *)(a1 + a2[14]);
  v9 = v8[1];
  if (v9 >> 60 != 15)
    sub_10002931C(*v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[17] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[18] + 8));

  swift_release(*(_QWORD *)(a1 + a2[34]));
  v10 = a1 + a2[35];
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = a1 + a2[42];
  v14 = *(unsigned __int8 *)(v13 + 8);
  if (v14 != 255)
    sub_100015DFC(*(void **)v13, v14 & 1);
}

uint64_t sub_10002931C(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_100029360(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  const void *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(const void *, uint64_t, uint64_t);
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  int v72;
  char v73;
  uint64_t v74;
  void *__dst;
  uint64_t v77;

  v6 = *(_QWORD *)(a2 + 8);
  if (v6)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v9 = *(void **)(a2 + 40);
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v8;
    v11 = *(_QWORD *)(a2 + 56);
    v10 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v10;
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v12;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    v14 = *(void **)(a2 + 88);
    v13 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v14;
    *(_QWORD *)(a1 + 96) = v13;
    v15 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 104) = v15;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    v16 = v9;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    v17 = v14;
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v15);
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v18;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    v19 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v19;
    v20 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v20;
  }
  v21 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v21;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v22 = *(_QWORD *)(a2 + 128);
  v23 = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  v24 = a3[11];
  v25 = (void *)(a1 + v24);
  v26 = (const void *)(a2 + v24);
  *(_QWORD *)(a1 + 128) = v22;
  *(_QWORD *)(a1 + 136) = v23;
  v27 = type metadata accessor for UUID(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRetain(v23);
  if (v29(v26, 1, v27))
  {
    v30 = sub_100009F00(&qword_1000B8A30);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v31 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = a3[14];
  v36 = a1 + v35;
  v37 = (_OWORD *)(a2 + v35);
  v38 = *(_QWORD *)(a2 + v35 + 8);
  swift_bridgeObjectRetain(v34);
  if (v38 >> 60 == 15)
  {
    *(_OWORD *)v36 = *v37;
  }
  else
  {
    v39 = *(_QWORD *)v37;
    sub_10002913C(v39, v38);
    *(_QWORD *)v36 = v39;
    *(_QWORD *)(v36 + 8) = v38;
  }
  v40 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  v41 = a3[17];
  v42 = a3[18];
  v43 = (_QWORD *)(a1 + v41);
  v44 = (_QWORD *)(a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = (_QWORD *)(a1 + v42);
  v47 = (_QWORD *)(a2 + v42);
  v77 = v47[1];
  *v46 = *v47;
  v46[1] = v77;
  v48 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v48) = *(_BYTE *)(a2 + v48);
  v49 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + v49) = *(_BYTE *)(a2 + v49);
  v50 = a3[24];
  *(_DWORD *)(a1 + a3[23]) = *(_DWORD *)(a2 + a3[23]);
  *(_BYTE *)(a1 + v50) = *(_BYTE *)(a2 + v50);
  v51 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + v51) = *(_BYTE *)(a2 + v51);
  v52 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_DWORD *)(a1 + v52) = *(_DWORD *)(a2 + v52);
  v53 = a3[30];
  *(_DWORD *)(a1 + a3[29]) = *(_DWORD *)(a2 + a3[29]);
  *(_BYTE *)(a1 + v53) = *(_BYTE *)(a2 + v53);
  v54 = a3[32];
  *(_DWORD *)(a1 + a3[31]) = *(_DWORD *)(a2 + a3[31]);
  *(_BYTE *)(a1 + v54) = *(_BYTE *)(a2 + v54);
  v55 = a3[33];
  v56 = a3[34];
  v57 = *(void **)(a2 + v55);
  *(_QWORD *)(a1 + v55) = v57;
  v58 = *(_QWORD *)(a2 + v56);
  *(_QWORD *)(a1 + v56) = v58;
  v59 = a3[35];
  __dst = (void *)(a1 + v59);
  v60 = (const void *)(a2 + v59);
  v61 = type metadata accessor for Date(0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v62 + 48);
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRetain(v77);
  v64 = v57;
  swift_retain(v58);
  if (v63(v60, 1, v61))
  {
    v65 = sub_100009F00(&qword_1000B8A38);
    memcpy(__dst, v60, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v62 + 16))(__dst, v60, v61);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(__dst, 0, 1, v61);
  }
  v66 = a3[37];
  *(_QWORD *)(a1 + a3[36]) = *(_QWORD *)(a2 + a3[36]);
  *(_BYTE *)(a1 + v66) = *(_BYTE *)(a2 + v66);
  v67 = a3[39];
  *(_QWORD *)(a1 + a3[38]) = *(_QWORD *)(a2 + a3[38]);
  *(_BYTE *)(a1 + v67) = *(_BYTE *)(a2 + v67);
  v68 = a3[41];
  *(_BYTE *)(a1 + a3[40]) = *(_BYTE *)(a2 + a3[40]);
  *(_BYTE *)(a1 + v68) = *(_BYTE *)(a2 + v68);
  v69 = a3[42];
  v70 = a1 + v69;
  v71 = (uint64_t *)(a2 + v69);
  v72 = *((unsigned __int8 *)v71 + 8);
  if (v72 == 255)
  {
    *(_QWORD *)v70 = *v71;
    *(_BYTE *)(v70 + 8) = *((_BYTE *)v71 + 8);
  }
  else
  {
    v73 = v72 & 1;
    v74 = *v71;
    sub_100015DF0((void *)*v71, v72 & 1);
    *(_QWORD *)v70 = v74;
    *(_BYTE *)(v70 + 8) = v73;
  }
  *(_QWORD *)(a1 + a3[43]) = *(_QWORD *)(a2 + a3[43]);
  return a1;
}

uint64_t sub_100029784(uint64_t a1, __int128 *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(void *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(void *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  char v105;
  void *v106;
  char v107;
  void *v108;
  void *v109;
  char v110;
  char v111;
  void *v112;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *((_QWORD *)a2 + 1);
  if (v6)
  {
    if (v7)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v8 = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 8) = v8;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRelease(v6);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      v9 = *((_QWORD *)a2 + 3);
      v10 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v9;
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRelease(v10);
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v11 = *(void **)(a1 + 40);
      v12 = (void *)*((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 40) = v12;
      v13 = v12;

      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      v14 = *((_QWORD *)a2 + 7);
      v15 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 56) = v14;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease(v15);
      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      v16 = *((_QWORD *)a2 + 9);
      v17 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 72) = v16;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRelease(v17);
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
      v18 = *(void **)(a1 + 88);
      v19 = (void *)*((_QWORD *)a2 + 11);
      *(_QWORD *)(a1 + 88) = v19;
      v20 = v19;

      v21 = *((_QWORD *)a2 + 12);
      v22 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 96) = v21;
      swift_bridgeObjectRetain(v21);
      swift_bridgeObjectRelease(v22);
      v23 = *((_QWORD *)a2 + 13);
      v24 = *(_QWORD *)(a1 + 104);
      *(_QWORD *)(a1 + 104) = v23;
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRelease(v24);
    }
    else
    {
      sub_10000ED10(a1);
      v36 = a2[1];
      v35 = a2[2];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v36;
      *(_OWORD *)(a1 + 32) = v35;
      v37 = a2[6];
      v39 = a2[3];
      v38 = a2[4];
      *(_OWORD *)(a1 + 80) = a2[5];
      *(_OWORD *)(a1 + 96) = v37;
      *(_OWORD *)(a1 + 48) = v39;
      *(_OWORD *)(a1 + 64) = v38;
    }
  }
  else if (v7)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v25 = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 8) = v25;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    v26 = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 24) = v26;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v27 = (void *)*((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 40) = v27;
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    v28 = *((_QWORD *)a2 + 7);
    *(_QWORD *)(a1 + 56) = v28;
    *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
    v29 = *((_QWORD *)a2 + 9);
    *(_QWORD *)(a1 + 72) = v29;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v30 = (void *)*((_QWORD *)a2 + 11);
    *(_QWORD *)(a1 + 88) = v30;
    v31 = *((_QWORD *)a2 + 12);
    *(_QWORD *)(a1 + 96) = v31;
    v32 = *((_QWORD *)a2 + 13);
    *(_QWORD *)(a1 + 104) = v32;
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v26);
    v33 = v27;
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v29);
    v34 = v30;
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v32);
  }
  else
  {
    v40 = *a2;
    v41 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v41;
    *(_OWORD *)a1 = v40;
    v42 = a2[3];
    v43 = a2[4];
    v44 = a2[6];
    *(_OWORD *)(a1 + 80) = a2[5];
    *(_OWORD *)(a1 + 96) = v44;
    *(_OWORD *)(a1 + 48) = v42;
    *(_OWORD *)(a1 + 64) = v43;
  }
  v45 = *((_QWORD *)a2 + 14);
  v46 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v45;
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRelease(v46);
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
  v47 = *((_QWORD *)a2 + 17);
  v48 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v47;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRelease(v48);
  *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
  *(_BYTE *)(a1 + 145) = *((_BYTE *)a2 + 145);
  *(_BYTE *)(a1 + 146) = *((_BYTE *)a2 + 146);
  v49 = a3[11];
  v50 = (void *)(a1 + v49);
  v51 = (char *)a2 + v49;
  v52 = type metadata accessor for UUID(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(void *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v56)
  {
    (*(void (**)(void *, uint64_t))(v53 + 8))(v50, v52);
LABEL_13:
    v57 = sub_100009F00(&qword_1000B8A30);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v53 + 24))(v50, v51, v52);
LABEL_14:
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)((char *)a2 + a3[12]);
  v58 = a3[13];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (_QWORD *)((char *)a2 + v58);
  *v59 = *v60;
  v61 = v60[1];
  v62 = v59[1];
  v59[1] = v61;
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRelease(v62);
  v63 = a3[14];
  v64 = (uint64_t *)(a1 + v63);
  v65 = (uint64_t *)((char *)a2 + v63);
  v66 = *(_QWORD *)((char *)a2 + v63 + 8);
  if (*(_QWORD *)(a1 + v63 + 8) >> 60 == 15)
  {
    if (v66 >> 60 != 15)
    {
      v67 = *v65;
      sub_10002913C(v67, v66);
      *v64 = v67;
      v64[1] = v66;
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  if (v66 >> 60 == 15)
  {
    sub_100029EC8((uint64_t)v64);
LABEL_19:
    *(_OWORD *)v64 = *(_OWORD *)v65;
    goto LABEL_21;
  }
  v68 = *v65;
  sub_10002913C(v68, v66);
  v69 = *v64;
  v70 = v64[1];
  *v64 = v68;
  v64[1] = v66;
  sub_10002931C(v69, v70);
LABEL_21:
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_BYTE *)(a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  v71 = a3[17];
  v72 = (_QWORD *)(a1 + v71);
  v73 = (_QWORD *)((char *)a2 + v71);
  *v72 = *v73;
  v74 = v73[1];
  v75 = v72[1];
  v72[1] = v74;
  swift_bridgeObjectRetain(v74);
  swift_bridgeObjectRelease(v75);
  v76 = a3[18];
  v77 = (_QWORD *)(a1 + v76);
  v78 = (_QWORD *)((char *)a2 + v76);
  *v77 = *v78;
  v79 = v78[1];
  v80 = v77[1];
  v77[1] = v79;
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRelease(v80);
  *(_BYTE *)(a1 + a3[19]) = *((_BYTE *)a2 + a3[19]);
  *(_BYTE *)(a1 + a3[20]) = *((_BYTE *)a2 + a3[20]);
  *(_BYTE *)(a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  *(_BYTE *)(a1 + a3[22]) = *((_BYTE *)a2 + a3[22]);
  v81 = a3[23];
  v82 = (_BYTE *)(a1 + v81);
  v83 = (char *)a2 + v81;
  *v82 = *v83;
  v82[1] = v83[1];
  v82[2] = v83[2];
  v82[3] = v83[3];
  *(_BYTE *)(a1 + a3[24]) = *((_BYTE *)a2 + a3[24]);
  *(_BYTE *)(a1 + a3[25]) = *((_BYTE *)a2 + a3[25]);
  *(_BYTE *)(a1 + a3[26]) = *((_BYTE *)a2 + a3[26]);
  *(_BYTE *)(a1 + a3[27]) = *((_BYTE *)a2 + a3[27]);
  *(_DWORD *)(a1 + a3[28]) = *(_DWORD *)((char *)a2 + a3[28]);
  *(_DWORD *)(a1 + a3[29]) = *(_DWORD *)((char *)a2 + a3[29]);
  *(_BYTE *)(a1 + a3[30]) = *((_BYTE *)a2 + a3[30]);
  *(_DWORD *)(a1 + a3[31]) = *(_DWORD *)((char *)a2 + a3[31]);
  *(_BYTE *)(a1 + a3[32]) = *((_BYTE *)a2 + a3[32]);
  v84 = a3[33];
  v85 = *(void **)(a1 + v84);
  v86 = *(void **)((char *)a2 + v84);
  *(_QWORD *)(a1 + v84) = v86;
  v87 = v86;

  v88 = a3[34];
  v89 = *(_QWORD *)(a1 + v88);
  v90 = *(_QWORD *)((char *)a2 + v88);
  *(_QWORD *)(a1 + v88) = v90;
  swift_retain(v90);
  swift_release(v89);
  v91 = a3[35];
  v92 = (void *)(a1 + v91);
  v93 = (char *)a2 + v91;
  v94 = type metadata accessor for Date(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (v97)
  {
    if (!v98)
    {
      (*(void (**)(void *, char *, uint64_t))(v95 + 16))(v92, v93, v94);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v98)
  {
    (*(void (**)(void *, uint64_t))(v95 + 8))(v92, v94);
LABEL_26:
    v99 = sub_100009F00(&qword_1000B8A38);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(void *, char *, uint64_t))(v95 + 24))(v92, v93, v94);
LABEL_27:
  *(_QWORD *)(a1 + a3[36]) = *(_QWORD *)((char *)a2 + a3[36]);
  *(_BYTE *)(a1 + a3[37]) = *((_BYTE *)a2 + a3[37]);
  *(_QWORD *)(a1 + a3[38]) = *(_QWORD *)((char *)a2 + a3[38]);
  *(_BYTE *)(a1 + a3[39]) = *((_BYTE *)a2 + a3[39]);
  *(_BYTE *)(a1 + a3[40]) = *((_BYTE *)a2 + a3[40]);
  *(_BYTE *)(a1 + a3[41]) = *((_BYTE *)a2 + a3[41]);
  v100 = a3[42];
  v101 = a1 + v100;
  v102 = (uint64_t)a2 + v100;
  v103 = *(unsigned __int8 *)(a1 + v100 + 8);
  v104 = *((unsigned __int8 *)a2 + v100 + 8);
  if (v103 == 255)
  {
    if (v104 == 255)
    {
      v106 = *(void **)v102;
      *(_BYTE *)(v101 + 8) = *(_BYTE *)(v102 + 8);
      *(_QWORD *)v101 = v106;
    }
    else
    {
      v111 = v104 & 1;
      v112 = *(void **)v102;
      sub_100015DF0(v112, v104 & 1);
      *(_QWORD *)v101 = v112;
      *(_BYTE *)(v101 + 8) = v111;
    }
  }
  else if (v104 == 255)
  {
    sub_100017E48(v101, &qword_1000B8A40);
    v105 = *(_BYTE *)(v102 + 8);
    *(_QWORD *)v101 = *(_QWORD *)v102;
    *(_BYTE *)(v101 + 8) = v105;
  }
  else
  {
    v107 = v104 & 1;
    v108 = *(void **)v102;
    sub_100015DF0(v108, v104 & 1);
    v109 = *(void **)v101;
    v110 = *(_BYTE *)(v101 + 8);
    *(_QWORD *)v101 = v108;
    *(_BYTE *)(v101 + 8) = v107;
    sub_100015DFC(v109, v110);
  }
  *(_QWORD *)(a1 + a3[43]) = *(_QWORD *)((char *)a2 + a3[43]);
  return a1;
}

uint64_t sub_100029EC8(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for Data - 1) + 8))();
  return a1;
}

uint64_t sub_100029EFC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v9 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  v10 = a3[11];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 128) = v9;
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_100009F00(&qword_1000B8A30);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  v17 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_DWORD *)(a1 + v21) = *(_DWORD *)(a2 + v21);
  v22 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[27];
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[29];
  *(_DWORD *)(a1 + a3[28]) = *(_DWORD *)(a2 + a3[28]);
  *(_DWORD *)(a1 + v24) = *(_DWORD *)(a2 + v24);
  v25 = a3[31];
  *(_BYTE *)(a1 + a3[30]) = *(_BYTE *)(a2 + a3[30]);
  *(_DWORD *)(a1 + v25) = *(_DWORD *)(a2 + v25);
  v26 = a3[33];
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v27 = a3[35];
  *(_QWORD *)(a1 + a3[34]) = *(_QWORD *)(a2 + a3[34]);
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = type metadata accessor for Date(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_100009F00(&qword_1000B8A38);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v28, v29, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v33 = a3[37];
  *(_QWORD *)(a1 + a3[36]) = *(_QWORD *)(a2 + a3[36]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = a3[39];
  *(_QWORD *)(a1 + a3[38]) = *(_QWORD *)(a2 + a3[38]);
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  v35 = a3[41];
  *(_BYTE *)(a1 + a3[40]) = *(_BYTE *)(a2 + a3[40]);
  *(_BYTE *)(a1 + v35) = *(_BYTE *)(a2 + v35);
  v36 = a3[42];
  v37 = a3[43];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  *(_QWORD *)(a1 + v37) = *(_QWORD *)(a2 + v37);
  return a1;
}

uint64_t sub_10002A1D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(void *, uint64_t, uint64_t);
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int v88;
  void *v89;

  v6 = *(_QWORD *)(a1 + 8);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 8);
    if (v7)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v7;
      swift_bridgeObjectRelease(v6);
      v8 = *(_QWORD *)(a2 + 24);
      v9 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v8;
      swift_bridgeObjectRelease(v9);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v10 = *(void **)(a1 + 40);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

      v11 = *(_QWORD *)(a2 + 56);
      v12 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v11;
      swift_bridgeObjectRelease(v12);
      v13 = *(_QWORD *)(a2 + 72);
      v14 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v13;
      swift_bridgeObjectRelease(v14);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      v15 = *(void **)(a1 + 88);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);

      v16 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRelease(v16);
      v17 = *(_QWORD *)(a1 + 104);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRelease(v17);
      goto LABEL_6;
    }
    sub_10000ED10(a1);
  }
  v18 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v18;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v19;
  v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
LABEL_6:
  v21 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease(v21);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v22 = *(_QWORD *)(a2 + 136);
  v23 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v22;
  swift_bridgeObjectRelease(v23);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  v24 = a3[11];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = type metadata accessor for UUID(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
LABEL_11:
    v32 = sub_100009F00(&qword_1000B8A30);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
LABEL_12:
  v33 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  v38 = v34[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease(v38);
  v39 = a3[14];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(a1 + v39 + 8);
  if (v42 >> 60 == 15)
  {
LABEL_15:
    *(_OWORD *)v40 = *(_OWORD *)v41;
    goto LABEL_17;
  }
  v43 = *(_QWORD *)(v41 + 8);
  if (v43 >> 60 == 15)
  {
    sub_100029EC8(v40);
    goto LABEL_15;
  }
  v44 = *(_QWORD *)v40;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_QWORD *)(v40 + 8) = v43;
  sub_10002931C(v44, v42);
LABEL_17:
  v45 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v45) = *(_BYTE *)(a2 + v45);
  v46 = a3[17];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (uint64_t *)(a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  v51 = v47[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease(v51);
  v52 = a3[18];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (uint64_t *)(a2 + v52);
  v56 = *v54;
  v55 = v54[1];
  v57 = v53[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease(v57);
  v58 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v58) = *(_BYTE *)(a2 + v58);
  v59 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + v59) = *(_BYTE *)(a2 + v59);
  v60 = a3[23];
  v61 = a3[24];
  v62 = (_BYTE *)(a1 + v60);
  v63 = (_BYTE *)(a2 + v60);
  *v62 = *v63;
  v62[1] = v63[1];
  v62[2] = v63[2];
  v62[3] = v63[3];
  *(_BYTE *)(a1 + v61) = *(_BYTE *)(a2 + v61);
  v64 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + v64) = *(_BYTE *)(a2 + v64);
  v65 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_DWORD *)(a1 + v65) = *(_DWORD *)(a2 + v65);
  v66 = a3[30];
  *(_DWORD *)(a1 + a3[29]) = *(_DWORD *)(a2 + a3[29]);
  *(_BYTE *)(a1 + v66) = *(_BYTE *)(a2 + v66);
  v67 = a3[32];
  *(_DWORD *)(a1 + a3[31]) = *(_DWORD *)(a2 + a3[31]);
  *(_BYTE *)(a1 + v67) = *(_BYTE *)(a2 + v67);
  v68 = a3[33];
  v69 = *(void **)(a1 + v68);
  *(_QWORD *)(a1 + v68) = *(_QWORD *)(a2 + v68);

  v70 = a3[34];
  v71 = *(_QWORD *)(a1 + v70);
  *(_QWORD *)(a1 + v70) = *(_QWORD *)(a2 + v70);
  swift_release(v71);
  v72 = a3[35];
  v73 = (void *)(a1 + v72);
  v74 = (void *)(a2 + v72);
  v75 = type metadata accessor for Date(0);
  v76 = *(_QWORD *)(v75 - 8);
  v77 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v76 + 48);
  v78 = v77(v73, 1, v75);
  v79 = v77(v74, 1, v75);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(void *, void *, uint64_t))(v76 + 32))(v73, v74, v75);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v79)
  {
    (*(void (**)(void *, uint64_t))(v76 + 8))(v73, v75);
LABEL_22:
    v80 = sub_100009F00(&qword_1000B8A38);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, void *, uint64_t))(v76 + 40))(v73, v74, v75);
LABEL_23:
  v81 = a3[37];
  *(_QWORD *)(a1 + a3[36]) = *(_QWORD *)(a2 + a3[36]);
  *(_BYTE *)(a1 + v81) = *(_BYTE *)(a2 + v81);
  v82 = a3[39];
  *(_QWORD *)(a1 + a3[38]) = *(_QWORD *)(a2 + a3[38]);
  *(_BYTE *)(a1 + v82) = *(_BYTE *)(a2 + v82);
  v83 = a3[41];
  *(_BYTE *)(a1 + a3[40]) = *(_BYTE *)(a2 + a3[40]);
  *(_BYTE *)(a1 + v83) = *(_BYTE *)(a2 + v83);
  v84 = a3[42];
  v85 = a1 + v84;
  v86 = a2 + v84;
  v87 = *(unsigned __int8 *)(a1 + v84 + 8);
  if (v87 != 255)
  {
    v88 = *(unsigned __int8 *)(v86 + 8);
    if (v88 != 255)
    {
      v89 = *(void **)v85;
      *(_QWORD *)v85 = *(_QWORD *)v86;
      *(_BYTE *)(v85 + 8) = v88 & 1;
      sub_100015DFC(v89, v87 & 1);
      goto LABEL_28;
    }
    sub_100017E48(v85, &qword_1000B8A40);
  }
  *(_QWORD *)v85 = *(_QWORD *)v86;
  *(_BYTE *)(v85 + 8) = *(_BYTE *)(v86 + 8);
LABEL_28:
  *(_QWORD *)(a1 + a3[43]) = *(_QWORD *)(a2 + a3[43]);
  return a1;
}

uint64_t sub_10002A6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002A6F4);
}

uint64_t sub_10002A6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 112);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100009F00(&qword_1000B8A30);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 44);
    }
    else
    {
      v10 = sub_100009F00(&qword_1000B8A38);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 140);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_10002A79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002A7A8);
}

uint64_t sub_10002A7A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 112) = (a2 - 1);
  }
  else
  {
    v8 = sub_100009F00(&qword_1000B8A30);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 44);
    }
    else
    {
      v10 = sub_100009F00(&qword_1000B8A38);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 140);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B8AA0;
  if (!qword_1000B8AA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphoneModel);
  return result;
}

void sub_10002A888(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[40];

  v6[0] = "p";
  v6[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[2] = &unk_100089090;
  v6[3] = &unk_1000890A8;
  v6[4] = (char *)&value witness table for Builtin.Int8 + 64;
  v6[5] = (char *)&value witness table for Builtin.Int8 + 64;
  v6[6] = (char *)&value witness table for Builtin.Int8 + 64;
  sub_100010D84(319, &qword_1000B8AB0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
  if (v3 <= 0x3F)
  {
    v6[7] = *(_QWORD *)(v2 - 8) + 64;
    v6[8] = (char *)&value witness table for Builtin.Int32 + 64;
    v6[9] = &unk_1000890C0;
    v6[10] = &unk_1000890D8;
    v6[11] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[12] = &unk_1000890F0;
    v6[13] = &unk_1000890A8;
    v6[14] = &unk_1000890C0;
    v6[15] = &unk_1000890F0;
    v6[16] = &unk_1000890F0;
    v6[17] = &unk_1000890F0;
    v6[18] = &unk_1000890F0;
    v6[19] = &unk_100089108;
    v6[20] = &unk_1000890F0;
    v6[21] = &unk_1000890F0;
    v6[22] = &unk_1000890F0;
    v6[23] = &unk_1000890F0;
    v6[24] = (char *)&value witness table for Builtin.Int32 + 64;
    v6[25] = (char *)&value witness table for Builtin.Int32 + 64;
    v6[26] = &unk_100089120;
    v6[27] = (char *)&value witness table for Builtin.Int32 + 64;
    v6[28] = &unk_1000890F0;
    v6[29] = &unk_100089138;
    v6[30] = &unk_100089138;
    sub_100010D84(319, (unint64_t *)&unk_1000B8AB8, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v6[31] = *(_QWORD *)(v4 - 8) + 64;
      v6[32] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[33] = &unk_1000890F0;
      v6[34] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[35] = &unk_1000890F0;
      v6[36] = &unk_1000890F0;
      v6[37] = &unk_1000890F0;
      v6[38] = &unk_100089150;
      v6[39] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_initStructMetadata(a1, 256, 40, v6, a1 + 16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for HeadphoneBatteryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10002AA54 + 4 * byte_100088FF5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10002AA88 + 4 * byte_100088FF0[v4]))();
}

uint64_t sub_10002AA88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002AA90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002AA98);
  return result;
}

uint64_t sub_10002AAA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002AAACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10002AAB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002AAB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneBatteryType()
{
  return &type metadata for HeadphoneBatteryType;
}

unint64_t sub_10002AAD8()
{
  unint64_t result;

  result = qword_1000B8B80;
  if (!qword_1000B8B80)
  {
    result = swift_getWitnessTable(&unk_1000891C8, &type metadata for HeadphoneBatteryType);
    atomic_store(result, (unint64_t *)&qword_1000B8B80);
  }
  return result;
}

uint64_t sub_10002AB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B89F8);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B89F8);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10002ABAC()
{
  uint64_t v0;

  v0 = type metadata accessor for URL(0);
  sub_10000C5F4(v0, qword_1000B8A10);
  sub_1000093F8(v0, (uint64_t)qword_1000B8A10);
  return URL.init(fileURLWithPath:)(0xD00000000000002ALL, 0x800000010008DD70);
}

void *sub_10002AC0C()
{
  void *result;

  result = (void *)sub_100070E24((uint64_t)&off_1000A57F0);
  off_1000B8A28 = result;
  return result;
}

Swift::Int sub_10002AC30(int a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1 & 1);
  Hasher._combine(_:)(BYTE1(a1) & 1);
  Hasher._combine(_:)(BYTE2(a1) & 1);
  Hasher._combine(_:)(HIBYTE(a1) & 1);
  return Hasher._finalize()();
}

Swift::Int sub_10002ACA0()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  int v3;

  if (v0[3])
    v1 = 0x1000000;
  else
    v1 = 0;
  if (v0[2])
    v2 = 0x10000;
  else
    v2 = 0;
  if (v0[1])
    v3 = 256;
  else
    v3 = 0;
  return sub_10002AC30(v3 | *v0 | v2 | v1);
}

void sub_10002ACE4()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;
  Swift::UInt8 v2;
  Swift::UInt8 v3;

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
}

Swift::Int sub_10002AD40(uint64_t a1)
{
  Swift::UInt8 *v1;
  Swift::UInt8 v2;
  Swift::UInt8 v3;
  Swift::UInt8 v4;
  Swift::UInt8 v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  Hasher.init(_seed:)(v7, a1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

BOOL sub_10002ADC0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a1[2] ^ a2[2] | a2[3] ^ a1[3]) & 1) == 0;
}

uint64_t sub_10002AE08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  void *v19;
  Swift::String v20;
  uint64_t v21;
  void *v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  void *v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  void *v38;
  Swift::String v39;
  uint64_t v40;
  void *v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  void *v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  void *v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  Swift::String v58;
  uint64_t v59;
  void *v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  Swift::String v67;
  uint64_t v68;
  void *v69;
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  void *v76;
  Swift::String v77;
  uint64_t v78;
  uint64_t v79;
  Swift::String v80;
  void *v81;
  Swift::String v82;
  uint64_t v83;
  void *v84;
  Swift::String v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  Swift::String v91;
  uint64_t v92;
  void *v93;
  Swift::String v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  Swift::String v99;
  void *v100;
  Swift::String v101;
  uint64_t v102;
  void *v103;
  Swift::String v104;
  uint64_t v105;
  Swift::String v106;
  id v108[2];
  _QWORD v109[2];

  v1 = sub_100009F00(&qword_1000B8A30);
  v3 = __chkstk_darwin(v1, v2);
  v5 = (char *)v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v6);
  v8 = (char *)v108 - v7;
  v109[0] = 0;
  v109[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v109[1]);
  v109[0] = 0xD000000000000011;
  v109[1] = 0x800000010008DD00;
  v9 = *(void **)(v0 + 136);
  v108[0] = *(id *)(v0 + 128);
  v108[1] = v9;
  swift_bridgeObjectRetain(v9);
  v10 = sub_100009F00(&qword_1000B8B88);
  v11._countAndFlagsBits = String.init<A>(reflecting:)(v108, v10);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._countAndFlagsBits = 32;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = v109[0];
  v15 = (void *)v109[1];
  v109[0] = 0xD000000000000010;
  v109[1] = 0x800000010008DCE0;
  v14._object = v15;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v17 = v109[0];
  v16 = v109[1];
  strcpy((char *)v109, "colorCode=");
  BYTE3(v109[1]) = 0;
  HIDWORD(v109[1]) = -369098752;
  LOBYTE(v108[0]) = *(_BYTE *)(v0 + 144);
  v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
  v19 = v18._object;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v19);
  v20._countAndFlagsBits = 32;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  v21 = v109[0];
  v22 = (void *)v109[1];
  v109[0] = v17;
  v109[1] = v16;
  swift_bridgeObjectRetain(v16);
  v23._countAndFlagsBits = v21;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v22);
  v25 = v109[0];
  v24 = v109[1];
  strcpy((char *)v109, "deviceID=");
  WORD1(v109[1]) = 0;
  HIDWORD(v109[1]) = -385875968;
  v26 = (int *)type metadata accessor for HeadphoneModel(0);
  sub_10002D824(v0 + v26[11], (uint64_t)v8);
  sub_10002D824((uint64_t)v8, (uint64_t)v5);
  v27 = String.init<A>(reflecting:)(v5, v1);
  v29 = v28;
  sub_100017E48((uint64_t)v8, &qword_1000B8A30);
  v30._countAndFlagsBits = v27;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v29);
  v31._countAndFlagsBits = 32;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  v32 = v109[0];
  v33 = (void *)v109[1];
  v109[0] = v25;
  v109[1] = v24;
  swift_bridgeObjectRetain(v24);
  v34._countAndFlagsBits = v32;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v33);
  v36 = v109[0];
  v35 = v109[1];
  v109[0] = 0;
  v109[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v109[1]);
  strcpy((char *)v109, "deviceVersion=");
  HIBYTE(v109[1]) = -18;
  LODWORD(v108[0]) = *(_DWORD *)(v0 + v26[12]);
  v37._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
  v38 = v37._object;
  String.append(_:)(v37);
  swift_bridgeObjectRelease(v38);
  v39._countAndFlagsBits = 32;
  v39._object = (void *)0xE100000000000000;
  String.append(_:)(v39);
  v40 = v109[0];
  v41 = (void *)v109[1];
  v109[0] = v36;
  v109[1] = v35;
  swift_bridgeObjectRetain(v35);
  v42._countAndFlagsBits = v40;
  v42._object = v41;
  String.append(_:)(v42);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v41);
  v44 = v109[0];
  v43 = v109[1];
  strcpy((char *)v109, "deviceName=");
  HIDWORD(v109[1]) = -352321536;
  v45 = (uint64_t *)(v0 + v26[13]);
  v46 = *v45;
  v47 = (void *)v45[1];
  swift_bridgeObjectRetain(v47);
  v48._countAndFlagsBits = v46;
  v48._object = v47;
  String.append(_:)(v48);
  swift_bridgeObjectRelease(v47);
  v49._countAndFlagsBits = 32;
  v49._object = (void *)0xE100000000000000;
  String.append(_:)(v49);
  v50 = v109[0];
  v51 = (void *)v109[1];
  v109[0] = v44;
  v109[1] = v43;
  swift_bridgeObjectRetain(v43);
  v52._countAndFlagsBits = v50;
  v52._object = v51;
  String.append(_:)(v52);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v51);
  v53 = v109[0];
  v54 = v109[1];
  v109[0] = 0;
  v109[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(v109[1]);
  v109[0] = 0xD000000000000012;
  v109[1] = 0x800000010008DD20;
  if (*(_BYTE *)(v0 + v26[19]))
    v55 = 1702195828;
  else
    v55 = 0x65736C6166;
  if (*(_BYTE *)(v0 + v26[19]))
    v56 = 0xE400000000000000;
  else
    v56 = 0xE500000000000000;
  v57 = v56;
  String.append(_:)(*(Swift::String *)&v55);
  swift_bridgeObjectRelease(v56);
  v58._countAndFlagsBits = 32;
  v58._object = (void *)0xE100000000000000;
  String.append(_:)(v58);
  v59 = v109[0];
  v60 = (void *)v109[1];
  v109[0] = v53;
  v109[1] = v54;
  swift_bridgeObjectRetain(v54);
  v61._countAndFlagsBits = v59;
  v61._object = v60;
  String.append(_:)(v61);
  swift_bridgeObjectRelease(v54);
  swift_bridgeObjectRelease(v60);
  v62 = v109[0];
  v63 = v109[1];
  v109[0] = 0;
  v109[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease(v109[1]);
  v109[0] = 0xD000000000000022;
  v109[1] = 0x800000010008DD40;
  if (*(_BYTE *)(v0 + v26[20]))
    v64 = 1702195828;
  else
    v64 = 0x65736C6166;
  if (*(_BYTE *)(v0 + v26[20]))
    v65 = 0xE400000000000000;
  else
    v65 = 0xE500000000000000;
  v66 = v65;
  String.append(_:)(*(Swift::String *)&v64);
  swift_bridgeObjectRelease(v65);
  v67._countAndFlagsBits = 32;
  v67._object = (void *)0xE100000000000000;
  String.append(_:)(v67);
  v68 = v109[0];
  v69 = (void *)v109[1];
  v109[0] = v62;
  v109[1] = v63;
  swift_bridgeObjectRetain(v63);
  v70._countAndFlagsBits = v68;
  v70._object = v69;
  String.append(_:)(v70);
  swift_bridgeObjectRelease(v63);
  swift_bridgeObjectRelease(v69);
  v71 = v109[0];
  v72 = v109[1];
  v109[0] = 0;
  v109[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  v73._countAndFlagsBits = 0x65646F4D74736574;
  v73._object = (void *)0xEE003D6574617453;
  String.append(_:)(v73);
  LOBYTE(v108[0]) = *(_BYTE *)(v0 + v26[30]);
  _print_unlocked<A, B>(_:_:)(v108, v109, &type metadata for HeadphoneModel.TestMode, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v74._countAndFlagsBits = 32;
  v74._object = (void *)0xE100000000000000;
  String.append(_:)(v74);
  v75 = v109[0];
  v76 = (void *)v109[1];
  v109[0] = v71;
  v109[1] = v72;
  swift_bridgeObjectRetain(v72);
  v77._countAndFlagsBits = v75;
  v77._object = v76;
  String.append(_:)(v77);
  swift_bridgeObjectRelease(v72);
  swift_bridgeObjectRelease(v76);
  v79 = v109[0];
  v78 = v109[1];
  strcpy((char *)v109, "productID=");
  BYTE3(v109[1]) = 0;
  HIDWORD(v109[1]) = -369098752;
  LODWORD(v108[0]) = *(_DWORD *)(v0 + v26[31]);
  v80._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
  v81 = v80._object;
  String.append(_:)(v80);
  swift_bridgeObjectRelease(v81);
  v82._countAndFlagsBits = 32;
  v82._object = (void *)0xE100000000000000;
  String.append(_:)(v82);
  v83 = v109[0];
  v84 = (void *)v109[1];
  v109[0] = v79;
  v109[1] = v78;
  swift_bridgeObjectRetain(v78);
  v85._countAndFlagsBits = v83;
  v85._object = v84;
  String.append(_:)(v85);
  swift_bridgeObjectRelease(v78);
  swift_bridgeObjectRelease(v84);
  v87 = v109[0];
  v86 = v109[1];
  v109[0] = 0;
  v109[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v109[1]);
  v109[0] = 0x6572617774666F73;
  v109[1] = 0xEF3D656D756C6F56;
  if (*(_BYTE *)(v0 + v26[32]))
    v88 = 1702195828;
  else
    v88 = 0x65736C6166;
  if (*(_BYTE *)(v0 + v26[32]))
    v89 = 0xE400000000000000;
  else
    v89 = 0xE500000000000000;
  v90 = v89;
  String.append(_:)(*(Swift::String *)&v88);
  swift_bridgeObjectRelease(v89);
  v91._countAndFlagsBits = 32;
  v91._object = (void *)0xE100000000000000;
  String.append(_:)(v91);
  v92 = v109[0];
  v93 = (void *)v109[1];
  v109[0] = v87;
  v109[1] = v86;
  swift_bridgeObjectRetain(v86);
  v94._countAndFlagsBits = v92;
  v94._object = v93;
  String.append(_:)(v94);
  swift_bridgeObjectRelease(v86);
  swift_bridgeObjectRelease(v93);
  v96 = v109[0];
  v95 = v109[1];
  strcpy((char *)v109, "assetBundle=");
  BYTE5(v109[1]) = 0;
  HIWORD(v109[1]) = -5120;
  v108[0] = *(id *)(v0 + v26[33]);
  v97 = v108[0];
  v98 = sub_100009F00(&qword_1000B8B90);
  v99._countAndFlagsBits = String.init<A>(reflecting:)(v108, v98);
  v100 = v99._object;
  String.append(_:)(v99);
  swift_bridgeObjectRelease(v100);
  v101._countAndFlagsBits = 32;
  v101._object = (void *)0xE100000000000000;
  String.append(_:)(v101);
  v102 = v109[0];
  v103 = (void *)v109[1];
  v109[0] = v96;
  v109[1] = v95;
  swift_bridgeObjectRetain(v95);
  v104._countAndFlagsBits = v102;
  v104._object = v103;
  String.append(_:)(v104);
  swift_bridgeObjectRelease(v95);
  swift_bridgeObjectRelease(v103);
  v105 = v109[1];
  swift_bridgeObjectRetain(v109[1]);
  v106._countAndFlagsBits = 62;
  v106._object = (void *)0xE100000000000000;
  String.append(_:)(v106);
  swift_bridgeObjectRelease(v105);
  return v109[0];
}

uint64_t sub_10002B5D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10002B618 + 4 * byte_100088FFA[a1]))(0x6441656369766564, 0xED00007373657264);
}

uint64_t sub_10002B618()
{
  return 0x646F43726F6C6F63;
}

unint64_t sub_10002B7FC()
{
  return 0xD000000000000010;
}

id sub_10002B970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void (*v13)(void);
  double *v14;
  _OWORD *v15;
  double *v16;
  double *v17;
  uint64_t v18;
  id result;
  void *v20;
  uint64_t v21;
  char greenTeaDeviceCapability;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  double *v33;
  _OWORD *v34;
  double *v35;
  int v36;
  double v37;
  double v38;
  unint64_t v39;
  char v40;
  double *v41;
  _OWORD *v42;
  double *v43;
  char v44;
  unint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  char v49;
  char v50;
  unint64_t v51;
  char v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  double v57;
  unint64_t v58;
  char v59;
  double v60;
  double v61;
  double *v62;
  int v63;
  char v64;
  char v65;
  int v66;
  double v67;
  int v68;
  uint64_t v69;
  void *v70;
  double v71;
  double v72;
  double v73;
  int v74;
  double v75;
  double v76;
  int v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  int v81;
  double v82;
  double v83;
  id v84;
  void *v85;
  unsigned __int8 v86;
  uint64_t v87;
  unsigned __int8 v88;
  unsigned __int8 v89;
  unsigned __int8 v90;
  unsigned __int8 *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  void *v96;
  char deviceSupportsWirelessSplitting;
  char v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char v103;
  double v104;
  double v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  double *v109;
  double v110;
  double v111;
  unint64_t v112;
  unint64_t v113;
  double *v114;
  double v115;
  double v116;
  unint64_t v117;
  unint64_t v118;
  double *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(void);
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  double *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  double v137[2];
  _QWORD v138[5];
  __int128 v139;
  __int128 v140;

  v4 = sub_100009F00(&qword_1000B8A30);
  __chkstk_darwin(v4, v5);
  v132 = (char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v124 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_QWORD *)(a2 + 112) = _swiftEmptyArrayStorage;
  *(_BYTE *)(a2 + 120) = 7;
  v11 = (int *)type metadata accessor for HeadphoneModel(0);
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 136) = 0;
  v12 = a2 + v11[11];
  v133 = v8;
  v13 = *(void (**)(void))(v8 + 56);
  v122 = v12;
  v134 = v7;
  v123 = v13;
  v13();
  *(_DWORD *)(a2 + v11[12]) = 0;
  v14 = (double *)(a2 + v11[13]);
  *v14 = 0.0;
  v14[1] = -2.68156159e154;
  v15 = (_OWORD *)(a2 + v11[14]);
  *v15 = xmmword_1000893A0;
  v131 = v11[16];
  *(_BYTE *)(a2 + v131) = 0;
  v16 = (double *)(a2 + v11[17]);
  *v16 = 0.0;
  v16[1] = 0.0;
  v17 = (double *)(a2 + v11[18]);
  *v17 = 0.0;
  v17[1] = -2.68156159e154;
  v129 = v17;
  v136 = v11[19];
  *(_BYTE *)(a2 + v136) = 0;
  v18 = v11[20];
  *(_BYTE *)(a2 + v18) = 0;
  *(_BYTE *)(a2 + v11[21]) = 0;
  *(_BYTE *)(a2 + v11[22]) = 0;
  *(_BYTE *)(a2 + v11[24]) = 0;
  v130 = v11[25];
  *(_BYTE *)(a2 + v130) = 0;
  *(_BYTE *)(a2 + v11[26]) = MKBGetDeviceLockState(0) - 1 < 2;
  result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    goto LABEL_237;
  }
  v20 = result;
  v21 = v11[27];
  greenTeaDeviceCapability = MobileGestalt_get_greenTeaDeviceCapability();

  *(_BYTE *)(a2 + v21) = greenTeaDeviceCapability;
  v23 = v11[30];
  *(_BYTE *)(a2 + v23) = 0;
  v126 = v11[32];
  *(_BYTE *)(a2 + v126) = 0;
  *(_QWORD *)(a2 + v11[33]) = 0;
  *(_QWORD *)(a2 + v11[34]) = 0;
  v24 = a2 + v11[35];
  v25 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v127 = v11[36];
  *(_QWORD *)(a2 + v127) = 0;
  *(_BYTE *)(a2 + v11[37]) = 0;
  *(_BYTE *)(a2 + v11[39]) = 0;
  *(_BYTE *)(a2 + v11[40]) = 0;
  *(_BYTE *)(a2 + v11[41]) = 0;
  v26 = a2 + v11[42];
  *(_QWORD *)v26 = 0;
  *(_BYTE *)(v26 + 8) = -1;

  *(_QWORD *)&v139 = 0x6C46656369766564;
  *((_QWORD *)&v139 + 1) = 0xEB00000000736761;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  v27 = *(_QWORD *)(a1 + 16);
  v121 = v23;
  if (v27 && (v28 = sub_100034BC4((uint64_t)v138), (v29 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(a1 + 56) + 32 * v28, (uint64_t)&v139);
  }
  else
  {
    v139 = 0u;
    v140 = 0u;
  }
  sub_10002E16C((uint64_t)v138);
  if (!*((_QWORD *)&v140 + 1))
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    goto LABEL_10;
  }
  if (!swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt32, 6))
  {
LABEL_10:
    v135 = 0;
    goto LABEL_11;
  }
  v135 = LODWORD(v137[0]);
LABEL_11:
  strcpy((char *)&v139, "deviceAddress");
  HIWORD(v139) = -4864;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  v30 = *(_QWORD *)(a1 + 16);
  v128 = v18;
  if (v30 && (v31 = sub_100034BC4((uint64_t)v138), (v32 & 1) != 0))
  {
    v33 = v14;
    sub_1000250C8(*(_QWORD *)(a1 + 56) + 32 * v31, (uint64_t)&v139);
  }
  else
  {
    v33 = v14;
    v139 = 0u;
    v140 = 0u;
  }
  v34 = v15;
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    v35 = v16;
    v36 = swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v36)
      v37 = v137[0];
    else
      v37 = 0.0;
    if (v36)
      v38 = v137[1];
    else
      v38 = 0.0;
  }
  else
  {
    v35 = v16;
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    v37 = 0.0;
    v38 = 0.0;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a2 + 136));
  *(double *)(a2 + 128) = v37;
  *(double *)(a2 + 136) = v38;
  *(_QWORD *)&v139 = 0x646F43726F6C6F63;
  *((_QWORD *)&v139 + 1) = 0xE900000000000065;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v39 = sub_100034BC4((uint64_t)v138), (v40 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(a1 + 56) + 32 * v39, (uint64_t)&v139);
  }
  else
  {
    v139 = 0u;
    v140 = 0u;
  }
  v41 = v35;
  sub_10002E16C((uint64_t)v138);
  v42 = v34;
  if (*((_QWORD *)&v140 + 1))
  {
    v43 = v33;
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
      v44 = LOBYTE(v137[0]);
    else
      v44 = 0;
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    v44 = 0;
    v43 = v33;
  }
  *(_BYTE *)(a2 + 144) = v44;
  strcpy((char *)&v139, "caseLEDColor");
  BYTE13(v139) = 0;
  HIWORD(v139) = -5120;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v45 = sub_100034BC4((uint64_t)v138), (v46 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(a1 + 56) + 32 * v45, (uint64_t)&v139);
  }
  else
  {
    v139 = 0u;
    v140 = 0u;
  }
  sub_10002E16C((uint64_t)v138);
  if (!*((_QWORD *)&v140 + 1))
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    goto LABEL_40;
  }
  if (!swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
  {
LABEL_40:
    v47 = 0;
    goto LABEL_41;
  }
  v47 = LOBYTE(v137[0]);
LABEL_41:
  *(_BYTE *)(a2 + 145) = v47;
  *(_QWORD *)&v139 = 0x7372655665736163;
  *((_QWORD *)&v139 + 1) = 0xE800000000000000;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v48 = sub_100034BC4((uint64_t)v138), (v49 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(a1 + 56) + 32 * v48, (uint64_t)&v139);
  }
  else
  {
    v139 = 0u;
    v140 = 0u;
  }
  sub_10002E16C((uint64_t)v138);
  if (!*((_QWORD *)&v140 + 1))
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    goto LABEL_49;
  }
  if (!swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
  {
LABEL_49:
    v50 = 0;
    goto LABEL_50;
  }
  v50 = LOBYTE(v137[0]);
LABEL_50:
  *(_BYTE *)(a2 + 146) = v50;
  *(_QWORD *)&v139 = 6580592;
  *((_QWORD *)&v139 + 1) = 0xE300000000000000;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v51 = sub_100034BC4((uint64_t)v138), (v52 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(a1 + 56) + 32 * v51, (uint64_t)&v139);
  }
  else
  {
    v139 = 0u;
    v140 = 0u;
  }
  sub_10002E16C((uint64_t)v138);
  if (!*((_QWORD *)&v140 + 1))
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    goto LABEL_58;
  }
  if (!swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt32, 6))
  {
LABEL_58:
    v53 = 0;
    goto LABEL_59;
  }
  v53 = LODWORD(v137[0]);
LABEL_59:
  v54 = v11[31];
  *(_DWORD *)(a2 + v54) = v53;
  *(_QWORD *)&v139 = 0x636954646E756F66;
  *((_QWORD *)&v139 + 1) = 0xEA0000000000736BLL;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v55 = sub_100034BC4((uint64_t)v138), (v56 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(a1 + 56) + 32 * v55, (uint64_t)&v139);
  }
  else
  {
    v139 = 0u;
    v140 = 0u;
  }
  sub_10002E16C((uint64_t)v138);
  if (!*((_QWORD *)&v140 + 1))
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    goto LABEL_67;
  }
  if (!swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt64, 6))
  {
LABEL_67:
    v57 = 0.0;
    goto LABEL_68;
  }
  v57 = v137[0];
LABEL_68:
  *(double *)(a2 + v11[15]) = v57;
  *(_QWORD *)&v139 = 0x6C65646F6DLL;
  *((_QWORD *)&v139 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v58 = sub_100034BC4((uint64_t)v138), (v59 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(a1 + 56) + 32 * v58, (uint64_t)&v139);
  }
  else
  {
    v139 = 0u;
    v140 = 0u;
  }
  sub_10002E16C((uint64_t)v138);
  v125 = v54;
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    {
      v60 = v137[0];
      v61 = v137[1];
      goto LABEL_77;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v60 = 0.0;
  v61 = -2.68156159e154;
LABEL_77:
  v62 = v129;
  swift_bridgeObjectRelease(*((_QWORD *)v129 + 1));
  *v62 = v60;
  v62[1] = v61;
  *(_QWORD *)&v139 = 845441392;
  *((_QWORD *)&v139 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt32, 6))
    {
      v63 = LODWORD(v137[0]);
      goto LABEL_82;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v63 = 0;
LABEL_82:
  *(_DWORD *)(a2 + v11[29]) = v63;
  *(_QWORD *)&v139 = 0x6574726F70707573;
  *((_QWORD *)&v139 + 1) = 0xEF65636976654464;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    {
      v64 = LOBYTE(v137[0]);
      goto LABEL_87;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v64 = 0;
LABEL_87:
  *(_BYTE *)(a2 + v136) = v64;
  strcpy((char *)&v139, "softwareVolume");
  HIBYTE(v139) = -18;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    {
      v65 = LOBYTE(v137[0]);
      goto LABEL_92;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v65 = 0;
LABEL_92:
  *(_BYTE *)(a2 + v126) = v65;
  *(_QWORD *)&v139 = 0x657461745363626FLL;
  *((_QWORD *)&v139 + 1) = 0xE800000000000000;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
    {
      v66 = LOBYTE(v137[0]);
      goto LABEL_97;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v66 = 0;
LABEL_97:
  *(_BYTE *)(a2 + v128) = v66 == 2;
  *(_QWORD *)&v139 = 0x5352726961706572;
  *((_QWORD *)&v139 + 1) = 0xEA00000000004953;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
    {
      v67 = v137[0];
      goto LABEL_102;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v67 = 0.0;
LABEL_102:
  *(double *)(a2 + v127) = v67;
  strcpy((char *)&v139, "headsetStatus");
  HIWORD(v139) = -4864;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt32, 6))
    {
      v68 = LODWORD(v137[0]);
      goto LABEL_107;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v68 = 0;
LABEL_107:
  v69 = v130;
  *(_DWORD *)(a2 + v11[28]) = v68;
  *(_BYTE *)(a2 + v69) = (v135 & 0x1000) != 0;
  v70 = (void *)objc_opt_self(HPSiriController);
  *(_QWORD *)(a2 + v11[38]) = objc_msgSend(v70, "announceCallsState");
  *(_QWORD *)&v139 = 1701667182;
  *((_QWORD *)&v139 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    {
      v72 = v137[0];
      v71 = v137[1];
      goto LABEL_112;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v72 = 0.0;
  v71 = -2.68156159e154;
LABEL_112:
  swift_bridgeObjectRelease(*((_QWORD *)v43 + 1));
  *v43 = v72;
  v43[1] = v71;
  strcpy((char *)&v139, "triggerTicks");
  BYTE13(v139) = 0;
  HIWORD(v139) = -5120;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt64, 6))v73 = v137[0];
    else
      v73 = 0.0;
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    v73 = 0.0;
  }
  *(double *)(a2 + v11[43]) = v73;
  strcpy((char *)&v139, "engravingData");
  HIWORD(v139) = -4864;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    v74 = swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Data, 6);
    if (v74)
      v75 = v137[0];
    else
      v75 = 0.0;
    if (v74)
      v76 = v137[1];
    else
      v76 = -3.10503618e231;
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    v75 = 0.0;
    v76 = -3.10503618e231;
  }
  sub_10002E1A0(*(_QWORD *)v42, *((_QWORD *)v42 + 1));
  *(double *)v42 = v75;
  *((double *)v42 + 1) = v76;
  *(_QWORD *)&v139 = 0x736143794D746F6ELL;
  *((_QWORD *)&v139 + 1) = 0xE900000000000065;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    v77 = swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    v78 = v125;
    if (v77)
      v79 = LOBYTE(v137[0]);
    else
      v79 = 0;
    v80 = v131;
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    v79 = 0;
    v80 = v131;
    v78 = v125;
  }
  *(_BYTE *)(a2 + v80) = v79;
  strcpy((char *)&v139, "deviceAddress2");
  HIBYTE(v139) = -18;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    v81 = swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v81)
      v82 = v137[0];
    else
      v82 = 0.0;
    if (v81)
      v83 = v137[1];
    else
      v83 = 0.0;
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    v82 = 0.0;
    v83 = 0.0;
  }
  swift_bridgeObjectRelease(*((_QWORD *)v41 + 1));
  *v41 = v82;
  v41[1] = v83;
  v84 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", *(unsigned int *)(a2 + v78));
  if (v84)
  {
    v85 = v84;
    v86 = objc_msgSend(v84, "supportsSiri");

  }
  else
  {
    v86 = 0;
  }
  v87 = v134;
  v88 = objc_msgSend(v70, "isSiriAllowedWhileLocked");
  v89 = objc_msgSend(v70, "isHeySiriEnabled");
  v90 = objc_msgSend(v70, "isCurrentLocaleSupported");
  v91 = (unsigned __int8 *)(a2 + v11[23]);
  *v91 = v88;
  v91[1] = v89;
  v91[2] = v90;
  v91[3] = v86;
  *(_QWORD *)&v139 = 0x65707954627573;
  *((_QWORD *)&v139 + 1) = 0xE700000000000000;
  AnyHashable.init<A>(_:)(v138, &v139, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    v92 = swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6);
    v94 = (uint64_t)v132;
    v93 = v133;
    if (v92)
      v95 = LOBYTE(v137[0]);
    else
      v95 = 0;
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    v95 = 0;
    v94 = (uint64_t)v132;
    v93 = v133;
  }
  strcpy((char *)v137, "repairMode");
  BYTE3(v137[1]) = 0;
  HIDWORD(v137[1]) = -369098752;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)
      && (LOBYTE(v137[0]) & 1) != 0)
    {
      if ((v135 & 0x800) == 0)
        goto LABEL_171;
      result = (id)MobileGestalt_get_current_device();
      if (result)
      {
        v96 = result;
        deviceSupportsWirelessSplitting = MobileGestalt_get_deviceSupportsWirelessSplitting();

        if ((deviceSupportsWirelessSplitting & 1) != 0)
        {
          v98 = 12;
LABEL_172:
          *(_BYTE *)(a2 + 120) = v98;
          goto LABEL_173;
        }
LABEL_171:
        v98 = 8;
        goto LABEL_172;
      }
LABEL_237:
      __break(1u);
      return result;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  strcpy((char *)v137, "siriNote");
  BYTE1(v137[1]) = 0;
  WORD1(v137[1]) = 0;
  HIDWORD(v137[1]) = -402653184;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)
      && (LOBYTE(v137[0]) & 1) != 0)
    {
      v98 = 9;
      goto LABEL_172;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  if (v95 == 4)
  {
    v98 = 6;
    goto LABEL_172;
  }
  strcpy((char *)v137, "statusOnly");
  BYTE3(v137[1]) = 0;
  HIDWORD(v137[1]) = -369098752;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)
      && (LOBYTE(v137[0]) & 1) != 0)
    {
      v98 = 11;
      goto LABEL_172;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v137[0] = -2.31584178e77;
  *(_QWORD *)&v137[1] = 0x800000010008DDA0;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)
      && (LOBYTE(v137[0]) & 1) != 0)
    {
      v98 = 10;
      goto LABEL_172;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
LABEL_173:
  strcpy((char *)v137, "endCallProx");
  HIDWORD(v137[1]) = -352321536;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)
      && (LOBYTE(v137[0]) & 1) != 0)
    {
      *(_BYTE *)(a2 + 120) = 1;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  strcpy((char *)v137, "muteCallProx");
  BYTE5(v137[1]) = 0;
  HIWORD(v137[1]) = -5120;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)
      && (LOBYTE(v137[0]) & 1) != 0)
    {
      *(_BYTE *)(a2 + 120) = 2;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v137[0] = -2.31584178e77;
  *(_QWORD *)&v137[1] = 0x800000010008DDC0;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)
      && (LOBYTE(v137[0]) & 1) != 0)
    {
      *(_BYTE *)(a2 + 120) = 3;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  strcpy((char *)v137, "whatsNew");
  BYTE1(v137[1]) = 0;
  WORD1(v137[1]) = 0;
  HIDWORD(v137[1]) = -402653184;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)
      && (LOBYTE(v137[0]) & 1) != 0)
    {
      NSLog(_:_:)(0xD000000000000038, 0x800000010008DEC0, _swiftEmptyArrayStorage);
      *(_BYTE *)(a2 + 120) = 4;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  strcpy((char *)v137, "headGestures");
  BYTE5(v137[1]) = 0;
  HIWORD(v137[1]) = -5120;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if (swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)
      && (LOBYTE(v137[0]) & 1) != 0)
    {
      NSLog(_:_:)(0xD00000000000003CLL, 0x800000010008DE80, _swiftEmptyArrayStorage);
      *(_BYTE *)(a2 + 120) = 5;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v137[0] = -2.31584178e77;
  *(_QWORD *)&v137[1] = 0x800000010008DDE0;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (!*((_QWORD *)&v140 + 1))
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
    goto LABEL_203;
  }
  if (!swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Bool, 6)
    || (LOBYTE(v137[0]) & 1) == 0)
  {
LABEL_203:
    if (*(_BYTE *)(a2 + 120) == 7)
      goto LABEL_205;
    goto LABEL_204;
  }
  *(_BYTE *)(a2 + 120) = 0;
LABEL_204:
  *(_BYTE *)(a2 + v136) = 1;
LABEL_205:
  v137[0] = -2.31584178e77;
  *(_QWORD *)&v137[1] = 0x800000010008DE00;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if ((swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v99 = *(_QWORD *)&v137[0];
      v100 = *(_QWORD *)&v137[1];
      UUID.init(uuidString:)(*(_QWORD *)&v137[0], *(_QWORD *)&v137[1]);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v94, 1, v87) == 1)
      {
        swift_bridgeObjectRelease(v100);
        sub_100017E48(v94, &qword_1000B8A30);
      }
      else
      {
        v101 = v124;
        (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v124, v94, v87);
        v102 = v122;
        sub_100017E48(v122, &qword_1000B8A30);
        (*(void (**)(uint64_t, char *, uint64_t))(v93 + 16))(v102, v101, v87);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v123)(v102, 0, 1, v87);
        v103 = sub_10002D674(v99, v100);
        swift_bridgeObjectRelease(v100);
        (*(void (**)(char *, uint64_t))(v93 + 8))(v101, v87);
        *(_BYTE *)(a2 + v121) = v103;
      }
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v137[0] = -2.31584178e77;
  *(_QWORD *)&v137[1] = 0x800000010008DE20;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if ((swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
    {
      v104 = v137[0];
      v105 = fabs(v137[0]);
      v106 = sub_100082084(0, 1, 1, _swiftEmptyArrayStorage);
      v108 = v106[2];
      v107 = v106[3];
      if (v108 >= v107 >> 1)
        v106 = sub_100082084((_QWORD *)(v107 > 1), v108 + 1, 1, v106);
      v106[2] = v108 + 1;
      v109 = (double *)&v106[2 * v108];
      v109[4] = v105;
      *((_BYTE *)v109 + 40) = v104 > 0.0;
      *((_BYTE *)v109 + 41) = 2;
      goto LABEL_218;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v106 = _swiftEmptyArrayStorage;
LABEL_218:
  v137[0] = -2.31584178e77;
  *(_QWORD *)&v137[1] = 0x800000010008DE40;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if ((swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
    {
      v110 = v137[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0)
        v106 = sub_100082084(0, v106[2] + 1, 1, v106);
      v111 = fabs(v110);
      v113 = v106[2];
      v112 = v106[3];
      if (v113 >= v112 >> 1)
        v106 = sub_100082084((_QWORD *)(v112 > 1), v113 + 1, 1, v106);
      v106[2] = v113 + 1;
      v114 = (double *)&v106[2 * v113];
      v114[4] = v111;
      *((_BYTE *)v114 + 40) = v110 > 0.0;
      *((_BYTE *)v114 + 41) = 1;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  v137[0] = -2.31584178e77;
  *(_QWORD *)&v137[1] = 0x800000010008DE60;
  AnyHashable.init<A>(_:)(v138, v137, &type metadata for String, &protocol witness table for String);
  sub_10005ED10((uint64_t)v138, a1, &v139);
  swift_bridgeObjectRelease(a1);
  sub_10002E16C((uint64_t)v138);
  if (*((_QWORD *)&v140 + 1))
  {
    if ((swift_dynamicCast(v137, &v139, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0)
    {
      v115 = v137[0];
      if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0)
        v106 = sub_100082084(0, v106[2] + 1, 1, v106);
      v116 = fabs(v115);
      v118 = v106[2];
      v117 = v106[3];
      if (v118 >= v117 >> 1)
        v106 = sub_100082084((_QWORD *)(v117 > 1), v118 + 1, 1, v106);
      v106[2] = v118 + 1;
      v119 = (double *)&v106[2 * v118];
      v119[4] = v116;
      *((_BYTE *)v119 + 40) = v115 > 0.0;
      *((_BYTE *)v119 + 41) = 0;
    }
  }
  else
  {
    sub_100017E48((uint64_t)&v139, &qword_1000B87B0);
  }
  result = (id)swift_bridgeObjectRelease(*(_QWORD *)(a2 + 112));
  *(_QWORD *)(a2 + 112) = v106;
  return result;
}

uint64_t sub_10002D674(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 == 0xD000000000000024 && a2 == 0x800000010008DF00
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x800000010008DF00, a1, a2, 0) & 1) != 0)
  {
    return 1;
  }
  if (a1 == 0xD000000000000024 && a2 == 0x800000010008DF30
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x800000010008DF30, a1, a2, 0) & 1) != 0)
  {
    return 2;
  }
  if (a1 == 0xD000000000000024 && a2 == 0x800000010008DF60
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x800000010008DF60, a1, a2, 0) & 1) != 0)
  {
    return 3;
  }
  if (a1 == 0xD000000000000024 && a2 == 0x800000010008DF90
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x800000010008DF90, a1, a2, 0) & 1) != 0)
  {
    return 4;
  }
  v4 = 5;
  if (a1 != 0xD000000000000024 || a2 != 0x800000010008DFC0)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x800000010008DFC0, a1, a2, 0) & 1) != 0)
      return 5;
    else
      return 0;
  }
  return v4;
}

uint64_t sub_10002D824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B8A30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10002D86C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  char v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  NSString v37;
  id v38;
  double v39;
  double v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id result;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  id v50;
  NSURL *v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  NSString v56;
  char *v57;
  id v58;
  double v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  Class isa;
  id v67;
  id v68;
  id v69;
  void *v70;
  void *v71;
  double v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  BOOL v90;
  uint64_t v91;
  uint8_t *v92;
  void (*v93)(char *, uint64_t);
  int v94;
  char *v95;
  _QWORD *v96;
  uint8_t *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v4 = type metadata accessor for URL(0);
  v96 = *(_QWORD **)(v4 - 8);
  v97 = (uint8_t *)v4;
  v6 = __chkstk_darwin(v4, v5);
  v95 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6, v8);
  v11 = (char *)&v93 - v10;
  __chkstk_darwin(v9, v12);
  v98 = (char *)&v93 - v13;
  v14 = a1[3];
  v15 = a1[4];
  sub_100013410(a1, v14);
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 24);
  v17 = v16(v14, v15);
  v101 = v18;
  v102 = v17;
  v19 = a1[3];
  v20 = a1[4];
  sub_100013410(a1, v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  v99 = v22;
  v100 = v21;
  v23 = a1[3];
  v24 = a1[4];
  sub_100013410(a1, v23);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
  v26 = v16(v14, v15);
  v28 = v27;
  v29 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v30 = objc_msgSend(v29, "userInterfaceIdiom");

  if (v30 == (id)1)
  {
    if (v26 == 0xD000000000000012 && v28 == 0x800000010008BA70)
      v31 = 1;
    else
      v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, 0xD000000000000012, 0x800000010008BA70, 0);
  }
  else
  {
    v31 = 0;
  }
  if (qword_1000B7B58 != -1)
    swift_once(&qword_1000B7B58, sub_10002AC0C);
  v32 = off_1000B8A28;
  if (!*((_QWORD *)off_1000B8A28 + 2))
    goto LABEL_14;
  swift_bridgeObjectRetain(v28);
  v33 = sub_100034B60(v26, v28);
  v34 = v28;
  if ((v35 & 1) == 0)
  {
LABEL_13:
    swift_bridgeObjectRelease(v34);
LABEL_14:
    v36 = (void *)objc_opt_self(UIImage);
    v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v38 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v38, "scale");
    v40 = v39;

    v41 = objc_msgSend(v36, "_applicationIconImageForBundleIdentifier:format:scale:", v37, 0, v40);
LABEL_15:
    v43 = v101;
    v42 = v102;
    v45 = v99;
    v44 = v100;
LABEL_16:
    result = (id)sub_100015D14(a1);
    *(_QWORD *)a2 = v42;
    *(_QWORD *)(a2 + 8) = v43;
    *(_QWORD *)(a2 + 16) = v44;
    *(_QWORD *)(a2 + 24) = v45;
    *(_BYTE *)(a2 + 32) = v25 & 1;
    *(_QWORD *)(a2 + 40) = v41;
    return result;
  }
  v94 = v25;
  v34 = *(_QWORD *)(v32[7] + 16 * v33 + 8);
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v28);
  if ((v31 & 1) != 0)
  {
    LOBYTE(v25) = v94;
    goto LABEL_13;
  }
  if (qword_1000B7B50 != -1)
    swift_once(&qword_1000B7B50, sub_10002ABAC);
  v47 = (uint64_t)v97;
  sub_1000093F8((uint64_t)v97, (uint64_t)qword_1000B8A10);
  URL.appendingPathComponent(_:)(v26, v28);
  swift_bridgeObjectRelease(v28);
  v48 = v98;
  URL.appendingPathExtension(_:)(0x656C646E7562, 0xE600000000000000);
  v49 = (void (*)(char *, uint64_t))v96[1];
  v49(v11, v47);
  v50 = objc_allocWithZone((Class)NSBundle);
  URL._bridgeToObjectiveC()(v51);
  v53 = v52;
  v54 = objc_msgSend(v50, "initWithURL:", v52);

  v93 = v49;
  if (!v54)
  {
    swift_bridgeObjectRelease(v34);
LABEL_26:
    v73 = v95;
    if (qword_1000B7B48 != -1)
      swift_once(&qword_1000B7B48, sub_10002AB1C);
    v74 = type metadata accessor for Logger(0);
    sub_1000093F8(v74, (uint64_t)qword_1000B89F8);
    v75 = ((uint64_t (*)(char *, char *, uint64_t))v96[2])(v73, v48, v47);
    v76 = Logger.logObject.getter(v75);
    v77 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc(12, -1);
      v79 = swift_slowAlloc(32, -1);
      v104 = v79;
      *(_DWORD *)v78 = 136315138;
      v97 = v78 + 4;
      v80 = sub_1000112D8();
      v81 = dispatch thunk of CustomStringConvertible.description.getter(v47, v80);
      v83 = v82;
      v103 = sub_10004B4F0(v81, v82, &v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v103, &v104);
      swift_bridgeObjectRelease(v83);
      v84 = v93;
      v93(v73, v47);
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "No bundle found at %s", v78, 0xCu);
      swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v78, -1, -1);

      v85 = v98;
    }
    else
    {

      v84 = v93;
      v93(v73, v47);
      v85 = v48;
    }
    v84(v85, v47);
    v41 = 0;
    goto LABEL_32;
  }
  v55 = v54;
  v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  v57 = (char *)objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v56, v55);

  if (!v57)
  {

    v47 = (uint64_t)v97;
    v48 = v98;
    goto LABEL_26;
  }
  v96 = v55;
  v58 = objc_msgSend(v57, "CGImage");
  v95 = v57;
  objc_msgSend(v57, "scale");
  v60 = objc_msgSend(objc_allocWithZone((Class)IFImage), "initWithCGImage:scale:", v58, v59);

  v61 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v62 = swift_allocObject(v61, 40, 7);
  *(_OWORD *)(v62 + 16) = xmmword_1000893B0;
  *(_QWORD *)(v62 + 32) = v60;
  v104 = v62;
  specialized Array._endMutation()(v62);
  v63 = v104;
  v64 = objc_allocWithZone((Class)ISIcon);
  sub_10002E130();
  v65 = v60;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v63);
  v67 = objc_msgSend(v64, "initWithImages:", isa);

  v68 = objc_msgSend((id)objc_opt_self(ISImageDescriptor), "imageDescriptorNamed:", kISImageDescriptorTableUIName);
  v69 = objc_msgSend(v67, "imageForDescriptor:", v68);
  if (!v69)
  {
    if (qword_1000B7B48 != -1)
      swift_once(&qword_1000B7B48, sub_10002AB1C);
    v86 = type metadata accessor for Logger(0);
    v87 = sub_1000093F8(v86, (uint64_t)qword_1000B89F8);
    v88 = Logger.logObject.getter(v87);
    v89 = static os_log_type_t.error.getter();
    v90 = os_log_type_enabled(v88, v89);
    LOBYTE(v25) = v94;
    v91 = (uint64_t)v97;
    if (v90)
    {
      v92 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v92 = 0;
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Could not mask icon", v92, 2u);
      swift_slowDealloc(v92, -1, -1);
    }

    v93(v98, v91);
    v41 = 0;
    goto LABEL_15;
  }
  v70 = v69;
  result = objc_msgSend(v69, "CGImage");
  if (result)
  {
    v71 = result;
    objc_msgSend(v70, "scale");
    v41 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v71, 0, v72);

    v93(v98, (uint64_t)v97);
LABEL_32:
    v43 = v101;
    v42 = v102;
    v45 = v99;
    v44 = v100;
    LOBYTE(v25) = v94;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

unint64_t sub_10002E130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B8B98;
  if (!qword_1000B8B98)
  {
    v1 = objc_opt_self(IFImage);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B8B98);
  }
  return result;
}

uint64_t sub_10002E16C(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_10002E1A0(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10002931C(result, a2);
  return result;
}

void destroy for HeadphoneAnnounceSource(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

}

uint64_t initializeWithCopy for HeadphoneAnnounceSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v6 = v5;
  return a1;
}

uint64_t assignWithCopy for HeadphoneAnnounceSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(void **)(a1 + 40);
  v9 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = v9;

  return a1;
}

__n128 initializeWithTake for HeadphoneAnnounceSource(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HeadphoneAnnounceSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneAnnounceSource(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneAnnounceSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneAnnounceSource()
{
  return &type metadata for HeadphoneAnnounceSource;
}

uint64_t getEnumTagSinglePayload for HeadphoneModel.TestMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneModel.TestMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10002E4B4 + 4 * byte_100089021[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10002E4E8 + 4 * byte_10008901C[v4]))();
}

uint64_t sub_10002E4E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002E4F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002E4F8);
  return result;
}

uint64_t sub_10002E504(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002E50CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10002E510(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002E518(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneModel.TestMode()
{
  return &type metadata for HeadphoneModel.TestMode;
}

_DWORD *initializeBufferWithCopyOfBuffer for HeadphoneModel.SiriState(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneModel.SiriState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[4])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneModel.SiriState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneModel.SiriState()
{
  return &type metadata for HeadphoneModel.SiriState;
}

uint64_t getEnumTagSinglePayload for HeadphoneModel.Mode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneModel.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_10002E6C0 + 4 * byte_10008902B[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_10002E6F4 + 4 * byte_100089026[v4]))();
}

uint64_t sub_10002E6F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002E6FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002E704);
  return result;
}

uint64_t sub_10002E710(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002E718);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_10002E71C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002E724(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneModel.Mode()
{
  return &type metadata for HeadphoneModel.Mode;
}

uint64_t initializeBufferWithCopyOfBuffer for HeadphoneBatteryInfo(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneBatteryInfo(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneBatteryInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneBatteryInfo()
{
  return &type metadata for HeadphoneBatteryInfo;
}

unint64_t sub_10002E800()
{
  unint64_t result;

  result = qword_1000B8BA0;
  if (!qword_1000B8BA0)
  {
    result = swift_getWitnessTable(&unk_1000892A8, &type metadata for HeadphoneModel.Mode);
    atomic_store(result, (unint64_t *)&qword_1000B8BA0);
  }
  return result;
}

unint64_t sub_10002E848()
{
  unint64_t result;

  result = qword_1000B8BA8;
  if (!qword_1000B8BA8)
  {
    result = swift_getWitnessTable(&unk_1000892D0, &type metadata for HeadphoneModel.SiriState);
    atomic_store(result, (unint64_t *)&qword_1000B8BA8);
  }
  return result;
}

unint64_t sub_10002E890()
{
  unint64_t result;

  result = qword_1000B8BB0;
  if (!qword_1000B8BB0)
  {
    result = swift_getWitnessTable(&unk_100089378, &type metadata for HeadphoneModel.TestMode);
    atomic_store(result, (unint64_t *)&qword_1000B8BB0);
  }
  return result;
}

unint64_t sub_10002E8E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t result;
  int64_t i;
  char *v11;
  void *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t *v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _OWORD v46[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100009F00(&qword_1000B8C38);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v37 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v36 = (unint64_t)(63 - v4) >> 6;
  v7 = &v43;
  v8 = &v45;
  result = swift_bridgeObjectRetain(v1);
  i = 0;
  v11 = (char *)&type metadata for Any + 8;
  v12 = &type metadata for Bool;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v21 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v21 >= v36)
    goto LABEL_32;
  v22 = *(_QWORD *)(v37 + 8 * v21);
  v23 = i + 1;
  if (!v22)
  {
    v23 = i + 2;
    if (i + 2 >= v36)
      goto LABEL_32;
    v22 = *(_QWORD *)(v37 + 8 * v23);
    if (!v22)
    {
      v23 = i + 3;
      if (i + 3 >= v36)
        goto LABEL_32;
      v22 = *(_QWORD *)(v37 + 8 * v23);
      if (!v22)
      {
        v23 = i + 4;
        if (i + 4 >= v36)
          goto LABEL_32;
        v22 = *(_QWORD *)(v37 + 8 * v23);
        if (!v22)
        {
          v24 = i + 5;
          if (i + 5 < v36)
          {
            v22 = *(_QWORD *)(v37 + 8 * v24);
            if (v22)
            {
              v23 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v23 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_36;
              if (v23 >= v36)
                break;
              v22 = *(_QWORD *)(v37 + 8 * v23);
              ++v24;
              if (v22)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1000324D0(v1);
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  v39 = (v22 - 1) & v22;
  v20 = __clz(__rbit64(v22)) + (v23 << 6);
  for (i = v23; ; v20 = __clz(__rbit64(v6)) | (i << 6))
  {
    v25 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v20);
    v27 = *v25;
    v26 = v25[1];
    LOBYTE(v25) = *(_BYTE *)(*(_QWORD *)(v1 + 56) + v20);
    v41 = v27;
    v42 = v26;
    v40 = (char)v25;
    swift_bridgeObjectRetain(v26);
    swift_dynamicCast(v7, &v40, v12, v11, 7);
    v28 = v41;
    v29 = v42;
    sub_1000324C0(v7, v8);
    sub_1000324C0(v8, v46);
    sub_1000324C0(v46, &v44);
    result = sub_100034B60(v28, v29);
    v30 = result;
    if ((v31 & 1) != 0)
    {
      v38 = i;
      v13 = v8;
      v14 = v7;
      v15 = v1;
      v16 = v12;
      v17 = v11;
      v18 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v18[1]);
      *v18 = v28;
      v18[1] = v29;
      v11 = v17;
      v12 = v16;
      v1 = v15;
      v7 = v14;
      v8 = v13;
      i = v38;
      v19 = (_QWORD *)(v3[7] + 32 * v30);
      sub_100015D14(v19);
      result = (unint64_t)sub_1000324C0(&v44, v19);
      v6 = v39;
      if (!v39)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v32 = (uint64_t *)(v3[6] + 16 * result);
    *v32 = v28;
    v32[1] = v29;
    result = (unint64_t)sub_1000324C0(&v44, (_OWORD *)(v3[7] + 32 * result));
    v33 = v3[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_34;
    v3[2] = v35;
    v6 = v39;
    if (!v39)
      goto LABEL_11;
LABEL_10:
    v39 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10002EC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B8BC0);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B8BC0);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_10002ECCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSString v20;
  void *v21;
  Class isa;
  id result;
  uint64_t v24;
  _BYTE v25[24];

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Dismissing flow", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView);
  if (Strong)
  {
    v10 = Strong;
    v11 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong, v9);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
    swift_unknownObjectRelease(v10);
    v14 = (_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
    swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter, v25, 0, 0);
    v15 = v14[3];
    if (v15)
    {
      sub_100013410(v14, v15);
      sub_100071D30(v13);
    }
  }
  v16 = (_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter, &v24, 0, 0);
  v17 = v16[3];
  if (v17)
  {
    v18 = *(_QWORD *)(*sub_100013410(v16, v17) + 72);
    v19 = off_1000B8C58;
    swift_retain(v18);
    swift_bridgeObjectRetain(v19);
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    v21 = sub_1000328A0();
    sub_100032054();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v21);
    AnalyticsSendEvent(v20, isa);
    swift_release(v18);

  }
  result = *(id *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (result)
    return objc_msgSend(result, "dismissViewControllerAnimated:completion:", 1, 0);
  return result;
}

void sub_10002EF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing announce intro view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneAnnounceIntroViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneAnnounceIntroViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneAnnounceIntroViewController_type, (void (*)(char *))sub_10000CECC, (uint64_t)&off_1000A61F0);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002F084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing announce customize view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneAnnounceCustomizeViewController(0);
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_type, (void (*)(char *))sub_10005A028, (uint64_t)&off_1000A8A60);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002F200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing heart rate monitor view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadhponeHeartRateViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_type, (void (*)(char *))sub_1000609AC, (uint64_t)&off_1000A9118);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002F37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing connect view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneConnectViewController(0);
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_type, (void (*)(char *))sub_100039228, (uint64_t)&off_1000A7B48);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002F4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing control center view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneControlCenterTrainingViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_type, (void (*)(char *))sub_10006BD54, (uint64_t)&off_1000A9570);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002F674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing end call", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneEndCallViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_type, (void (*)(char *))sub_1000129A4, (uint64_t)&off_1000A63F0);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002F7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing Adaptive Controls Upsell", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneAdaptiveControlsUpsellViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneAdaptiveControlsUpsellViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneAdaptiveControlsUpsellViewController_type, (void (*)(char *))sub_1000086E0, (uint64_t)&off_1000A5B88);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002F96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing Adaptive Controls - Adaptive Mode Card", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneAdaptiveControlsAdaptiveModeViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService51HeadphoneAdaptiveControlsAdaptiveModeViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService51HeadphoneAdaptiveControlsAdaptiveModeViewController_type, (void (*)(char *))sub_100028504, (uint64_t)&off_1000A7220);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002FAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing Adaptive Controls - Personalized Volume Card", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneAdaptiveControlsPersonalizedVolumeViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController_type, (void (*)(char *))sub_10006E71C, (uint64_t)&off_1000A9748);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002FC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing Adaptive Controls - Conversation Awareness Card", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneAdaptiveControlsConversationAwarenessViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService60HeadphoneAdaptiveControlsConversationAwarenessViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService60HeadphoneAdaptiveControlsConversationAwarenessViewController_type, (void (*)(char *))sub_100018450, (uint64_t)&off_1000A69D0);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002FDE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing Whats New", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneWhatsNewUpsellViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_type, (void (*)(char *))sub_100057E98, (uint64_t)&off_1000A88B0);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_10002FF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing Head Gestures", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneHeadGesturesUpsellViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_type, (void (*)(char *))sub_100056574, (uint64_t)&off_1000A87F0);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_1000300D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing error view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneErrorViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneErrorViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneErrorViewController_type, (void (*)(char *))sub_1000263C0, (uint64_t)&off_1000A7110);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_100030254(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_marketingUpsell);
  if (v3)
  {
    v4 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_marketingUpsell + 8);
    sub_100032054();
    v5 = v3;
    v13 = v4;
    v6 = static NSObject.== infix(_:_:)(v5, a1);

    if ((v6 & 1) != 0)
      goto LABEL_5;

  }
  v7 = objc_allocWithZone((Class)type metadata accessor for HeadphoneMarketingUpsellViewController());
  v13 = sub_100021EF4(a1);
LABEL_5:
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_1000093F8(v8, (uint64_t)qword_1000B8BC0);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Showing marketing upsell view", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  sub_1000303B8((uint64_t)v13);
}

void sub_1000303B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  id v15;
  uint64_t v16;
  _BYTE v18[24];

  v2 = v1;
  v4 = type metadata accessor for HeadphoneViewModel(0);
  __chkstk_darwin(v4, v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v8)
  {
    v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
    swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter, v18, 0, 0);
    v10 = v9[3];
    if (v10)
    {
      v11 = *sub_100013410(v9, v10);
      v12 = a1 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_presenter;
      *(_QWORD *)(v12 + 8) = &off_1000A9B08;
      swift_unknownObjectWeakAssign(v12, v11);
      v13 = *(_BYTE *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_type);
      v14 = v8;
      sub_1000765E8(v13);
      sub_100031FEC((uint64_t)v7);
    }
    else
    {
      v15 = v8;
    }
    v16 = v2 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
    *(_QWORD *)(v16 + 8) = &off_1000A6EB0;
    swift_unknownObjectWeakAssign(v16, a1);
    objc_msgSend(v8, "pushViewController:animated:", a1, 1);

  }
}

void sub_1000304F8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;

  v3 = v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_marketingUpsell;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_marketingUpsell);
  if (!v4
    || (v5 = *(void **)(v3 + 8),
        sub_100032054(),
        v6 = v4,
        v7 = v5,
        v8 = static NSObject.== infix(_:_:)(v6, a1),
        v7,
        v6,
        (v8 & 1) == 0))
  {
    if (qword_1000B7B60 != -1)
      swift_once(&qword_1000B7B60, sub_10002EC3C);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_1000093F8(v9, (uint64_t)qword_1000B8BC0);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Preloading request handled", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    v14 = objc_allocWithZone((Class)type metadata accessor for HeadphoneMarketingUpsellViewController());
    v15 = a1;
    v16 = sub_100021EF4(v15);
    v18 = *(void **)v3;
    v17 = *(void **)(v3 + 8);
    *(_QWORD *)v3 = v15;
    *(_QWORD *)(v3 + 8) = v16;
    sub_100032028(v18, v17);
  }
}

void sub_100030660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t MyViewController;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing install FindMy App view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    MyViewController = type metadata accessor for HeadphoneInstallFindMyViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(MyViewController));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneInstallFindMyViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneInstallFindMyViewController_type, (void (*)(char *))sub_10000BA28, (uint64_t)&off_1000A6120);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_1000307DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing AirPods linking view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneLinkingViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_type, (void (*)(char *))sub_100024280, (uint64_t)&off_1000A6FE8);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_100030958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing not genuine view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneNotGenuineViewController(0);
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_type, (void (*)(char *))sub_100016B00, (uint64_t)&off_1000A6910);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_100030AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing repair instructions view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneRepairViewController(0);
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_type, (void (*)(char *))sub_100068004, (uint64_t)&off_1000A9490);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_100030C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing Hey Siri training view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneSiriViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneSiriViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneSiriViewController_type, (void (*)(char *))sub_1000374E0, (uint64_t)&off_1000A7A40);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_100030DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t done;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing share audio done view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    done = type metadata accessor for HeadphoneShareAudioDoneViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(done));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneShareAudioDoneViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneShareAudioDoneViewController_type, (void (*)(char *))sub_10001D464, (uint64_t)&off_1000A6B10);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_100030F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Showing spatial audio profile view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    v8 = type metadata accessor for HeadphoneSpatialAudioProfileViewController();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
    v10 = v7;
    v11 = objc_msgSend(v9, "initWithNibName:bundle:", 0, 0);
    sub_100031BDC((uint64_t)v11, &OBJC_IVAR____TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController_type, (void (*)(char *))sub_10006F684, (uint64_t)&off_1000A9850);
    objc_msgSend(v10, "pushViewController:animated:", v11, 1);

  }
}

void sub_1000310C4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_100031108()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[13];

  v2 = type metadata accessor for HeadphoneNotGenuineViewController(0);
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "initWithNibName:bundle:", 0, 0);
  sub_100031BDC((uint64_t)v3, &OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_type, (void (*)(char *))sub_100016B00, (uint64_t)&off_1000A6910);
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v4 = type metadata accessor for Logger(0);
  sub_1000093F8(v4, (uint64_t)qword_1000B8BC0);
  v5 = swift_bridgeObjectRetain(0xEB00000000656E69);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14[0] = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain(0xEB00000000656E69);
    v13 = sub_10004B4F0(0x756E656720746F6ELL, 0xEB00000000656E69, v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, v14);
    swift_bridgeObjectRelease_n(0xEB00000000656E69, 3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Showing first view: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(0xEB00000000656E69, 2);
  }
  v10 = objc_msgSend(v0, "presentProxCardFlowWithDelegate:initialViewController:", v1, v3);
  v11 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController) = v10;

  v12 = mach_absolute_time();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_initialCardDisplayUpTicks) = v12;
}

uint64_t sub_100031890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];
  _BYTE v23[24];

  v2 = v1;
  v4 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v4, v5);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for HeadphoneViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
  swift_beginAccess(v13, v23, 0, 0);
  v14 = v13[3];
  if (v14)
  {
    v15 = sub_100013410(v13, v14);
    v16 = *v15;
    v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_presenter);
    v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_presenter);
    *v17 = *v15;
    v17[1] = (uint64_t)&off_1000A9B08;
    swift_retain(v16);
    swift_unknownObjectRelease(v18);
    sub_1000765E8(*(_BYTE *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_type));
    sub_1000324D8((uint64_t)v12, (uint64_t)v7);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    v19 = a1 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_viewModel;
    swift_beginAccess(a1 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_viewModel, v22, 33, 0);
    sub_10003251C((uint64_t)v7, v19);
    swift_endAccess(v22);
    sub_100031FEC((uint64_t)v12);
  }
  v20 = v2 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
  *(_QWORD *)(v20 + 8) = &off_1000A8758;
  return swift_unknownObjectWeakAssign(v20, a1);
}

uint64_t sub_100031A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];
  _BYTE v21[24];

  v2 = v1;
  v4 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v4, v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for HeadphoneViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
  swift_beginAccess(v13, v21, 0, 0);
  v14 = v13[3];
  if (v14)
  {
    v15 = *sub_100013410(v13, v14);
    v16 = a1 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_presenter;
    *(_QWORD *)(v16 + 8) = &off_1000A9B08;
    swift_unknownObjectWeakAssign(v16, v15);
    sub_1000765E8(*(_BYTE *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_type));
    sub_1000324D8((uint64_t)v12, (uint64_t)v7);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    v17 = a1 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_viewModel;
    swift_beginAccess(a1 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_viewModel, v20, 33, 0);
    sub_10003251C((uint64_t)v7, v17);
    swift_endAccess(v20);
    sub_100031FEC((uint64_t)v12);
  }
  v18 = v2 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
  *(_QWORD *)(v18 + 8) = &off_1000A6A90;
  return swift_unknownObjectWeakAssign(v18, a1);
}

uint64_t sub_100031BDC(uint64_t a1, _QWORD *a2, _QWORD *a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v23[24];

  v10 = v5;
  v12 = type metadata accessor for HeadphoneViewModel(0);
  __chkstk_darwin(v12, v13);
  v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = (_QWORD *)(v5 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
  swift_beginAccess(v16, v23, 0, 0);
  v17 = v16[3];
  if (v17)
  {
    v18 = *sub_100013410(v16, v17);
    v19 = a1 + *a2;
    *(_QWORD *)(v19 + 8) = &off_1000A9B08;
    swift_unknownObjectWeakAssign(v19, v18);
    sub_1000765E8(*(_BYTE *)(a1 + *a3));
    a4(v15);
    sub_100031FEC((uint64_t)v15);
  }
  v20 = v10 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
  *(_QWORD *)(v20 + 8) = a5;
  return swift_unknownObjectWeakAssign(v20, a1);
}

uint64_t type metadata accessor for HeadphoneRouter()
{
  return objc_opt_self(_TtC20HeadphoneProxService15HeadphoneRouter);
}

uint64_t sub_100031E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char v15[24];

  v1 = v0;
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Flow did dismiss", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_delegate);
  if (result)
  {
    v8 = result;
    v9 = (_QWORD *)(result + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor);
    swift_beginAccess(result + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor, v15, 0, 0);
    v10 = v9[3];
    if (v10)
    {
      v11 = sub_100013410(v9, v10);
      v12 = *v11;
      objc_msgSend(*(id *)(*v11 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery), "invalidate");
      objc_msgSend(*(id *)(v12 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery), "invalidate");
      sub_10004113C(0);
    }
    v13 = (void *)sub_1000266B8();
    if (v13)
    {
      v14 = (uint64_t)v13;
      objc_msgSend(v13, "dismiss");
      swift_unknownObjectRelease(v8);
      v8 = v14;
    }
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_100031FEC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100032028(void *a1, void *a2)
{
  if (a1)
  {

  }
}

unint64_t sub_100032054()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B8C30;
  if (!qword_1000B8C30)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B8C30);
  }
  return result;
}

uint64_t sub_100032090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  NSURL *v21;
  void *v22;
  void *v23;
  void *v24;
  unint64_t v25;
  Class isa;
  id v27;
  uint64_t (*v28)(char *, uint64_t);
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  _BYTE v42[80];

  v0 = sub_100009F00(&qword_1000B7F08);
  __chkstk_darwin(v0, v1);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000B7B60 != -1)
    swift_once(&qword_1000B7B60, sub_10002EC3C);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_1000093F8(v9, (uint64_t)qword_1000B8BC0);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Launching bluetooth settings", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  URL.init(string:)(0xD000000000000014, 0x800000010008E130);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_100017E48((uint64_t)v3, &qword_1000B7F08);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  v15 = sub_100009F00(&qword_1000B8940);
  inited = swift_initStackObject(v15, v42);
  *(_OWORD *)(inited + 16) = xmmword_100088470;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyUnlockDevice);
  *(_QWORD *)(inited + 40) = v17;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyPromptUnlockDevice);
  *(_QWORD *)(inited + 64) = v18;
  *(_BYTE *)(inited + 72) = 1;
  v19 = sub_100070BD0(inited);
  v20 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v20)
  {
    v22 = v20;
    URL._bridgeToObjectiveC()(v21);
    v24 = v23;
    v25 = sub_10002E8E4(v19);
    swift_bridgeObjectRelease(v19);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v25);
    v40 = 0;
    LODWORD(v25) = objc_msgSend(v22, "openSensitiveURL:withOptions:error:", v24, isa, &v40);

    v27 = v40;
    if ((_DWORD)v25)
    {
      v28 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
      v29 = v40;
      return v28(v8, v4);
    }
    else
    {
      v30 = v40;
      v31 = _convertNSErrorToError(_:)(v27);

      swift_willThrow();
      v32 = sub_100009F00(&qword_1000B8948);
      v33 = swift_allocObject(v32, 64, 7);
      *(_OWORD *)(v33 + 16) = xmmword_100087710;
      v40 = 0;
      v41 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      v34._countAndFlagsBits = 0xD000000000000019;
      v34._object = (void *)0x800000010008DC20;
      String.append(_:)(v34);
      v39 = v31;
      v35 = sub_100009F00((uint64_t *)&unk_1000B8740);
      _print_unlocked<A, B>(_:_:)(&v39, &v40, v35, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v36 = v40;
      v37 = v41;
      *(_QWORD *)(v33 + 56) = &type metadata for String;
      *(_QWORD *)(v33 + 32) = v36;
      *(_QWORD *)(v33 + 40) = v37;
      print(_:separator:terminator:)(v33, 32, 0xE100000000000000, 10, 0xE100000000000000);
      swift_bridgeObjectRelease(v33);
      swift_errorRelease(v31);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return swift_bridgeObjectRelease(v19);
  }
}

_OWORD *sub_1000324C0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1000324D0(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1000324D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003251C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B8C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100032568()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0 + 1);
}

uint64_t sub_100032598@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100035D8C(*a1);
  *a2 = result;
  return result;
}

void sub_1000325C0(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

Swift::Int sub_1000325D0()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

Swift::Int sub_100032614(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2 + 1);
  return Hasher._finalize()();
}

uint64_t sub_100032654@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100035DB4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10003267C@<X0>(_BYTE *a1@<X8>)
{
  int *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  _BYTE *v8;

  *a1 = 6;
  v2 = (int *)type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
  v3 = &a1[v2[5]];
  v4 = type metadata accessor for HeadphoneHardwareModel(0);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v6 = &a1[v2[6]];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  a1[v2[7]] = 2;
  v7 = &a1[v2[8]];
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = &a1[v2[9]];
  *(_DWORD *)v8 = 0;
  v8[4] = 1;
  a1[v2[10]] = 7;
  a1[v2[11]] = 7;
  a1[v2[12]] = 7;
  a1[v2[13]] = 7;
  a1[v2[14]] = 7;
  a1[v2[15]] = 7;
  a1[v2[16]] = 7;
  a1[v2[17]] = 7;
  a1[v2[18]] = 7;
  a1[v2[19]] = 7;
  a1[v2[20]] = 7;
  a1[v2[21]] = 7;
  a1[v2[22]] = 7;
  a1[v2[23]] = 7;
  a1[v2[24]] = 7;
  a1[v2[25]] = 7;
  a1[v2[26]] = 7;
  a1[v2[27]] = 7;
  a1[v2[28]] = 7;
  a1[v2[29]] = 7;
  a1[v2[30]] = 7;
  a1[v2[31]] = 7;
  a1[v2[32]] = 7;
  a1[v2[33]] = 7;
  a1[v2[34]] = 7;
  a1[v2[35]] = 7;
  a1[v2[36]] = 7;
  a1[v2[37]] = 7;
  a1[v2[38]] = 7;
  a1[v2[39]] = 7;
  a1[v2[40]] = 7;
  a1[v2[41]] = 7;
  a1[v2[42]] = 7;
  a1[v2[43]] = 7;
  return result;
}

uint64_t sub_100032834(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  if (result <= 0x1Du && ((0x3FFFBC1Fu >> result) & 1) != 0)
  {
    v4 = qword_1000896A8[(char)result];
    v5 = v2 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
    result = type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
    *(_BYTE *)(v5 + *(int *)(result + 4 * v4)) = a2;
  }
  return result;
}

void *sub_1000328A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Class isa;
  char isUniquelyReferenced_nonNull_native;
  void *v5;
  int *v6;
  uint64_t v7;
  Swift::Int v8;
  Class v9;
  char v10;
  void *v11;
  int v12;
  Swift::Bool v13;
  Class v14;
  char v15;
  void *v16;
  int *v17;
  Swift::Int v18;
  Class v19;
  char v20;
  void *v21;
  int *v22;
  Swift::Int v23;
  Class v24;
  char v25;
  void *v26;
  uint64_t v27;
  Class v28;
  char v29;
  void *v30;
  uint64_t v31;
  Class v32;
  char v33;
  void *v34;
  uint64_t v35;
  Class v36;
  char v37;
  void *v38;
  uint64_t v39;
  Class v40;
  char v41;
  void *v42;
  uint64_t v43;
  Class v44;
  char v45;
  void *v46;
  uint64_t v47;
  Class v48;
  char v49;
  void *v50;
  uint64_t v51;
  Class v52;
  char v53;
  void *v54;
  uint64_t v55;
  Class v56;
  char v57;
  void *v58;
  uint64_t v59;
  Class v60;
  char v61;
  void *v62;
  uint64_t v63;
  Class v64;
  char v65;
  void *v66;
  uint64_t v67;
  Class v68;
  char v69;
  void *v70;
  uint64_t v71;
  Class v72;
  char v73;
  void *v74;
  uint64_t v75;
  Class v76;
  char v77;
  void *v78;
  uint64_t v79;
  Class v80;
  char v81;
  void *v82;
  uint64_t v83;
  Class v84;
  char v85;
  void *v86;
  uint64_t v87;
  Class v88;
  char v89;
  void *v90;
  uint64_t v91;
  Class v92;
  char v93;
  void *v94;
  uint64_t v95;
  Class v96;
  char v97;
  void *v98;
  uint64_t v99;
  Class v100;
  char v101;
  void *v102;
  uint64_t v103;
  Class v104;
  char v105;
  void *v106;
  uint64_t v107;
  Class v108;
  char v109;
  void *v110;
  uint64_t v111;
  Class v112;
  char v113;
  void *v114;
  uint64_t v115;
  Class v116;
  char v117;
  void *v118;
  uint64_t v119;
  Class v120;
  char v121;
  void *v122;
  uint64_t v123;
  Class v124;
  char v125;
  void *v126;
  uint64_t v127;
  Class v128;
  char v129;
  void *v130;
  uint64_t v131;
  Class v132;
  char v133;
  void *v134;
  uint64_t v135;
  Class v136;
  char v137;
  void *v138;
  uint64_t v139;
  Class v140;
  char v141;
  void *v142;
  uint64_t v143;
  Class v144;
  char v145;
  void *v146;
  uint64_t v147;
  Class v148;
  char v149;
  void *v150;
  uint64_t v151;
  Class v152;
  char v153;
  void *v154;
  uint64_t v155;
  Class v156;
  char v157;
  void *v158;

  v1 = v0 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics);
  if (v2 != 6)
  {
    sub_100034AA4();
    isa = NSNumber.init(integerLiteral:)(v2 + 1).super.super.isa;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v5 = (void *)sub_100034F0C((uint64_t)isa, 0x776F6C46786F7250, 0xEC00000065707954, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v6 = (int *)type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
  v7 = v1 + v6[6];
  if ((*(_BYTE *)(v7 + 8) & 1) == 0)
  {
    v8 = *(_QWORD *)v7;
    sub_100034AA4();
    v9 = NSNumber.init(integerLiteral:)(v8).super.super.isa;
    v10 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v11 = (void *)sub_100034F0C((uint64_t)v9, 4475216, 0xE300000000000000, v10);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v12 = *(unsigned __int8 *)(v1 + v6[7]);
  if (v12 != 2)
  {
    v13 = v12 & 1;
    sub_100034AA4();
    v14 = NSNumber.init(BOOLeanLiteral:)(v13).super.super.isa;
    v15 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v16 = (void *)sub_100034F0C((uint64_t)v14, 0x6C6C657370557349, 0xE800000000000000, v15);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v17 = (int *)(v1 + v6[8]);
  if ((v17[1] & 1) == 0)
  {
    v18 = *v17;
    sub_100034AA4();
    v19 = NSNumber.init(integerLiteral:)(v18).super.super.isa;
    v20 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v21 = (void *)sub_100034F0C((uint64_t)v19, 0x616D69747345494ELL, 0xEC0000006E6F6974, v20);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v22 = (int *)(v1 + v6[9]);
  if ((v22[1] & 1) == 0)
  {
    v23 = *v22;
    sub_100034AA4();
    v24 = NSNumber.init(integerLiteral:)(v23).super.super.isa;
    v25 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v26 = (void *)sub_100034F0C((uint64_t)v24, 0xD000000000000011, 0x800000010008E470, v25);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v27 = *(unsigned __int8 *)(v1 + v6[10]);
  if (v27 != 7)
  {
    sub_100034AA4();
    v28 = NSNumber.init(integerLiteral:)(v27 + 1).super.super.isa;
    v29 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v30 = (void *)sub_100034F0C((uint64_t)v28, 0x567463656E6E6F43, 0xEB00000000776569, v29);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v31 = *(unsigned __int8 *)(v1 + v6[11]);
  if (v31 != 7)
  {
    sub_100034AA4();
    v32 = NSNumber.init(integerLiteral:)(v31 + 1).super.super.isa;
    v33 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v34 = (void *)sub_100034F0C((uint64_t)v32, 0x3165727574616546, 0xE800000000000000, v33);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v35 = *(unsigned __int8 *)(v1 + v6[12]);
  if (v35 != 7)
  {
    sub_100034AA4();
    v36 = NSNumber.init(integerLiteral:)(v35 + 1).super.super.isa;
    v37 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v38 = (void *)sub_100034F0C((uint64_t)v36, 0x3265727574616546, 0xE800000000000000, v37);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v39 = *(unsigned __int8 *)(v1 + v6[14]);
  if (v39 != 7)
  {
    sub_100034AA4();
    v40 = NSNumber.init(integerLiteral:)(v39 + 1).super.super.isa;
    v41 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v42 = (void *)sub_100034F0C((uint64_t)v40, 0x566C6C6143646E45, 0xEB00000000776569, v41);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v43 = *(unsigned __int8 *)(v1 + v6[15]);
  if (v43 != 7)
  {
    sub_100034AA4();
    v44 = NSNumber.init(integerLiteral:)(v43 + 1).super.super.isa;
    v45 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v46 = (void *)sub_100034F0C((uint64_t)v44, 0xD000000000000019, 0x800000010008E450, v45);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v47 = *(unsigned __int8 *)(v1 + v6[16]);
  if (v47 != 7)
  {
    sub_100034AA4();
    v48 = NSNumber.init(integerLiteral:)(v47 + 1).super.super.isa;
    v49 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v50 = (void *)sub_100034F0C((uint64_t)v48, 0xD000000000000013, 0x800000010008E430, v49);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v51 = *(unsigned __int8 *)(v1 + v6[17]);
  if (v51 != 7)
  {
    sub_100034AA4();
    v52 = NSNumber.init(integerLiteral:)(v51 + 1).super.super.isa;
    v53 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v54 = (void *)sub_100034F0C((uint64_t)v52, 0xD000000000000011, 0x800000010008E410, v53);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v55 = *(unsigned __int8 *)(v1 + v6[18]);
  if (v55 != 7)
  {
    sub_100034AA4();
    v56 = NSNumber.init(integerLiteral:)(v55 + 1).super.super.isa;
    v57 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v58 = (void *)sub_100034F0C((uint64_t)v56, 0xD000000000000015, 0x800000010008E3F0, v57);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v59 = *(unsigned __int8 *)(v1 + v6[19]);
  if (v59 != 7)
  {
    sub_100034AA4();
    v60 = NSNumber.init(integerLiteral:)(v59 + 1).super.super.isa;
    v61 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v62 = (void *)sub_100034F0C((uint64_t)v60, 0xD000000000000015, 0x800000010008E3D0, v61);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v63 = *(unsigned __int8 *)(v1 + v6[20]);
  if (v63 != 7)
  {
    sub_100034AA4();
    v64 = NSNumber.init(integerLiteral:)(v63 + 1).super.super.isa;
    v65 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v66 = (void *)sub_100034F0C((uint64_t)v64, 0xD000000000000017, 0x800000010008E3B0, v65);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v67 = *(unsigned __int8 *)(v1 + v6[21]);
  if (v67 != 7)
  {
    sub_100034AA4();
    v68 = NSNumber.init(integerLiteral:)(v67 + 1).super.super.isa;
    v69 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v70 = (void *)sub_100034F0C((uint64_t)v68, 0xD000000000000018, 0x800000010008E390, v69);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v71 = *(unsigned __int8 *)(v1 + v6[22]);
  if (v71 != 7)
  {
    sub_100034AA4();
    v72 = NSNumber.init(integerLiteral:)(v71 + 1).super.super.isa;
    v73 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v74 = (void *)sub_100034F0C((uint64_t)v72, 0xD000000000000011, 0x800000010008E370, v73);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v75 = *(unsigned __int8 *)(v1 + v6[23]);
  if (v75 != 7)
  {
    sub_100034AA4();
    v76 = NSNumber.init(integerLiteral:)(v75 + 1).super.super.isa;
    v77 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v78 = (void *)sub_100034F0C((uint64_t)v76, 0xD000000000000011, 0x800000010008E350, v77);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v79 = *(unsigned __int8 *)(v1 + v6[24]);
  if (v79 != 7)
  {
    sub_100034AA4();
    v80 = NSNumber.init(integerLiteral:)(v79 + 1).super.super.isa;
    v81 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v82 = (void *)sub_100034F0C((uint64_t)v80, 0xD000000000000013, 0x800000010008E330, v81);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v83 = *(unsigned __int8 *)(v1 + v6[25]);
  if (v83 != 7)
  {
    sub_100034AA4();
    v84 = NSNumber.init(integerLiteral:)(v83 + 1).super.super.isa;
    v85 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v86 = (void *)sub_100034F0C((uint64_t)v84, 0xD000000000000010, 0x800000010008E310, v85);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v87 = *(unsigned __int8 *)(v1 + v6[26]);
  if (v87 != 7)
  {
    sub_100034AA4();
    v88 = NSNumber.init(integerLiteral:)(v87 + 1).super.super.isa;
    v89 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v90 = (void *)sub_100034F0C((uint64_t)v88, 0xD000000000000016, 0x800000010008E2F0, v89);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v91 = *(unsigned __int8 *)(v1 + v6[27]);
  if (v91 != 7)
  {
    sub_100034AA4();
    v92 = NSNumber.init(integerLiteral:)(v91 + 1).super.super.isa;
    v93 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v94 = (void *)sub_100034F0C((uint64_t)v92, 0xD000000000000019, 0x800000010008E2D0, v93);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v95 = *(unsigned __int8 *)(v1 + v6[28]);
  if (v95 != 7)
  {
    sub_100034AA4();
    v96 = NSNumber.init(integerLiteral:)(v95 + 1).super.super.isa;
    v97 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v98 = (void *)sub_100034F0C((uint64_t)v96, 0xD000000000000013, 0x800000010008E2B0, v97);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v99 = *(unsigned __int8 *)(v1 + v6[29]);
  if (v99 != 7)
  {
    sub_100034AA4();
    v100 = NSNumber.init(integerLiteral:)(v99 + 1).super.super.isa;
    v101 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v102 = (void *)sub_100034F0C((uint64_t)v100, 0x5679726574746142, 0xEB00000000776569, v101);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v103 = *(unsigned __int8 *)(v1 + v6[30]);
  if (v103 != 7)
  {
    sub_100034AA4();
    v104 = NSNumber.init(integerLiteral:)(v103 + 1).super.super.isa;
    v105 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v106 = (void *)sub_100034F0C((uint64_t)v104, 0x6C6C61436574754DLL, 0xEC00000077656956, v105);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v107 = *(unsigned __int8 *)(v1 + v6[31]);
  if (v107 != 7)
  {
    sub_100034AA4();
    v108 = NSNumber.init(integerLiteral:)(v107 + 1).super.super.isa;
    v109 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v110 = (void *)sub_100034F0C((uint64_t)v108, 0x69756E6547746F4ELL, 0xEE0077656956656ELL, v109);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v111 = *(unsigned __int8 *)(v1 + v6[32]);
  if (v111 != 7)
  {
    sub_100034AA4();
    v112 = NSNumber.init(integerLiteral:)(v111 + 1).super.super.isa;
    v113 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v114 = (void *)sub_100034F0C((uint64_t)v112, 0x6374616D7373694DLL, 0xED00007765695668, v113);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v115 = *(unsigned __int8 *)(v1 + v6[33]);
  if (v115 != 7)
  {
    sub_100034AA4();
    v116 = NSNumber.init(integerLiteral:)(v115 + 1).super.super.isa;
    v117 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v118 = (void *)sub_100034F0C((uint64_t)v116, 0x7372756F59746F4ELL, 0xEC00000077656956, v117);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v119 = *(unsigned __int8 *)(v1 + v6[34]);
  if (v119 != 7)
  {
    sub_100034AA4();
    v120 = NSNumber.init(integerLiteral:)(v119 + 1).super.super.isa;
    v121 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v122 = (void *)sub_100034F0C((uint64_t)v120, 0xD000000000000016, 0x800000010008E290, v121);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v123 = *(unsigned __int8 *)(v1 + v6[35]);
  if (v123 != 7)
  {
    sub_100034AA4();
    v124 = NSNumber.init(integerLiteral:)(v123 + 1).super.super.isa;
    v125 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v126 = (void *)sub_100034F0C((uint64_t)v124, 0x6475416572616853, 0xEE00776569566F69, v125);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v127 = *(unsigned __int8 *)(v1 + v6[36]);
  if (v127 != 7)
  {
    sub_100034AA4();
    v128 = NSNumber.init(integerLiteral:)(v127 + 1).super.super.isa;
    v129 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v130 = (void *)sub_100034F0C((uint64_t)v128, 0xD000000000000012, 0x800000010008E270, v129);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v131 = *(unsigned __int8 *)(v1 + v6[37]);
  if (v131 != 7)
  {
    sub_100034AA4();
    v132 = NSNumber.init(integerLiteral:)(v131 + 1).super.super.isa;
    v133 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v134 = (void *)sub_100034F0C((uint64_t)v132, 0x7765695669726953, 0xE800000000000000, v133);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v135 = *(unsigned __int8 *)(v1 + v6[43]);
  if (v135 != 7)
  {
    sub_100034AA4();
    v136 = NSNumber.init(integerLiteral:)(v135 + 1).super.super.isa;
    v137 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v138 = (void *)sub_100034F0C((uint64_t)v136, 0xD000000000000015, 0x800000010008E250, v137);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v139 = *(unsigned __int8 *)(v1 + v6[38]);
  if (v139 != 7)
  {
    sub_100034AA4();
    v140 = NSNumber.init(integerLiteral:)(v139 + 1).super.super.isa;
    v141 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v142 = (void *)sub_100034F0C((uint64_t)v140, 0xD000000000000010, 0x800000010008E230, v141);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v143 = *(unsigned __int8 *)(v1 + v6[39]);
  if (v143 != 7)
  {
    sub_100034AA4();
    v144 = NSNumber.init(integerLiteral:)(v143 + 1).super.super.isa;
    v145 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v146 = (void *)sub_100034F0C((uint64_t)v144, 0xD000000000000012, 0x800000010008E210, v145);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v147 = *(unsigned __int8 *)(v1 + v6[40]);
  if (v147 != 7)
  {
    sub_100034AA4();
    v148 = NSNumber.init(integerLiteral:)(v147 + 1).super.super.isa;
    v149 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v150 = (void *)sub_100034F0C((uint64_t)v148, 0xD000000000000012, 0x800000010008E1F0, v149);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v151 = *(unsigned __int8 *)(v1 + v6[41]);
  if (v151 != 7)
  {
    sub_100034AA4();
    v152 = NSNumber.init(integerLiteral:)(v151 + 1).super.super.isa;
    v153 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v154 = (void *)sub_100034F0C((uint64_t)v152, 0xD000000000000010, 0x800000010008E1D0, v153);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  v155 = *(unsigned __int8 *)(v1 + v6[42]);
  if (v155 != 7)
  {
    sub_100034AA4();
    v156 = NSNumber.init(integerLiteral:)(v155 + 1).super.super.isa;
    v157 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
    v158 = (void *)sub_100034F0C((uint64_t)v156, 0x77654E7374616857, 0xEC00000077656956, v157);
    swift_bridgeObjectRelease(0x8000000000000000);

  }
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_100033998()
{
  uint64_t v0;

  sub_100035A98(v0 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000339C8()
{
  return type metadata accessor for HeadphoneAnalyticsController(0);
}

uint64_t type metadata accessor for HeadphoneAnalyticsController(uint64_t a1)
{
  return sub_10000F9AC(a1, qword_1000B8C90, (uint64_t)&nominal type descriptor for HeadphoneAnalyticsController);
}

uint64_t sub_1000339E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(uint64_t a1)
{
  return sub_10000F9AC(a1, (uint64_t *)&unk_1000B8D78, (uint64_t)&nominal type descriptor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent);
}

_QWORD *sub_100033A64(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for HeadphoneHardwareModel(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100009F00(&qword_1000B8D18);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (char *)v4 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    *((_BYTE *)v4 + v15) = *((_BYTE *)a2 + v15);
    v18 = a3[8];
    v19 = a3[9];
    v20 = (char *)v4 + v18;
    v21 = (char *)a2 + v18;
    v20[4] = v21[4];
    *(_DWORD *)v20 = *(_DWORD *)v21;
    v22 = (char *)v4 + v19;
    v23 = (char *)a2 + v19;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    v24 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)v4 + v24) = *((_BYTE *)a2 + v24);
    v25 = a3[13];
    *((_BYTE *)v4 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *((_BYTE *)v4 + v25) = *((_BYTE *)a2 + v25);
    v26 = a3[15];
    *((_BYTE *)v4 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    *((_BYTE *)v4 + v26) = *((_BYTE *)a2 + v26);
    v27 = a3[17];
    *((_BYTE *)v4 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    *((_BYTE *)v4 + v27) = *((_BYTE *)a2 + v27);
    v28 = a3[19];
    *((_BYTE *)v4 + a3[18]) = *((_BYTE *)a2 + a3[18]);
    *((_BYTE *)v4 + v28) = *((_BYTE *)a2 + v28);
    v29 = a3[21];
    *((_BYTE *)v4 + a3[20]) = *((_BYTE *)a2 + a3[20]);
    *((_BYTE *)v4 + v29) = *((_BYTE *)a2 + v29);
    v30 = a3[23];
    *((_BYTE *)v4 + a3[22]) = *((_BYTE *)a2 + a3[22]);
    *((_BYTE *)v4 + v30) = *((_BYTE *)a2 + v30);
    v31 = a3[25];
    *((_BYTE *)v4 + a3[24]) = *((_BYTE *)a2 + a3[24]);
    *((_BYTE *)v4 + v31) = *((_BYTE *)a2 + v31);
    v32 = a3[27];
    *((_BYTE *)v4 + a3[26]) = *((_BYTE *)a2 + a3[26]);
    *((_BYTE *)v4 + v32) = *((_BYTE *)a2 + v32);
    v33 = a3[29];
    *((_BYTE *)v4 + a3[28]) = *((_BYTE *)a2 + a3[28]);
    *((_BYTE *)v4 + v33) = *((_BYTE *)a2 + v33);
    v34 = a3[31];
    *((_BYTE *)v4 + a3[30]) = *((_BYTE *)a2 + a3[30]);
    *((_BYTE *)v4 + v34) = *((_BYTE *)a2 + v34);
    v35 = a3[33];
    *((_BYTE *)v4 + a3[32]) = *((_BYTE *)a2 + a3[32]);
    *((_BYTE *)v4 + v35) = *((_BYTE *)a2 + v35);
    v36 = a3[35];
    *((_BYTE *)v4 + a3[34]) = *((_BYTE *)a2 + a3[34]);
    *((_BYTE *)v4 + v36) = *((_BYTE *)a2 + v36);
    v37 = a3[37];
    *((_BYTE *)v4 + a3[36]) = *((_BYTE *)a2 + a3[36]);
    *((_BYTE *)v4 + v37) = *((_BYTE *)a2 + v37);
    v38 = a3[39];
    *((_BYTE *)v4 + a3[38]) = *((_BYTE *)a2 + a3[38]);
    *((_BYTE *)v4 + v38) = *((_BYTE *)a2 + v38);
    v39 = a3[41];
    *((_BYTE *)v4 + a3[40]) = *((_BYTE *)a2 + a3[40]);
    *((_BYTE *)v4 + v39) = *((_BYTE *)a2 + v39);
    v40 = a3[43];
    *((_BYTE *)v4 + a3[42]) = *((_BYTE *)a2 + a3[42]);
    *((_BYTE *)v4 + v40) = *((_BYTE *)a2 + v40);
  }
  return v4;
}

uint64_t sub_100033D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for HeadphoneHardwareModel(0);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_BYTE *sub_100033D74(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for HeadphoneHardwareModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100009F00(&qword_1000B8D18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  a1[v13] = a2[v13];
  v16 = a3[8];
  v17 = a3[9];
  v18 = &a1[v16];
  v19 = &a2[v16];
  v18[4] = v19[4];
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v20 = &a1[v17];
  v21 = &a2[v17];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v22 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v22] = a2[v22];
  v23 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v23] = a2[v23];
  v24 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v24] = a2[v24];
  v25 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  a1[v25] = a2[v25];
  v26 = a3[19];
  a1[a3[18]] = a2[a3[18]];
  a1[v26] = a2[v26];
  v27 = a3[21];
  a1[a3[20]] = a2[a3[20]];
  a1[v27] = a2[v27];
  v28 = a3[23];
  a1[a3[22]] = a2[a3[22]];
  a1[v28] = a2[v28];
  v29 = a3[25];
  a1[a3[24]] = a2[a3[24]];
  a1[v29] = a2[v29];
  v30 = a3[27];
  a1[a3[26]] = a2[a3[26]];
  a1[v30] = a2[v30];
  v31 = a3[29];
  a1[a3[28]] = a2[a3[28]];
  a1[v31] = a2[v31];
  v32 = a3[31];
  a1[a3[30]] = a2[a3[30]];
  a1[v32] = a2[v32];
  v33 = a3[33];
  a1[a3[32]] = a2[a3[32]];
  a1[v33] = a2[v33];
  v34 = a3[35];
  a1[a3[34]] = a2[a3[34]];
  a1[v34] = a2[v34];
  v35 = a3[37];
  a1[a3[36]] = a2[a3[36]];
  a1[v35] = a2[v35];
  v36 = a3[39];
  a1[a3[38]] = a2[a3[38]];
  a1[v36] = a2[v36];
  v37 = a3[41];
  a1[a3[40]] = a2[a3[40]];
  a1[v37] = a2[v37];
  v38 = a3[43];
  a1[a3[42]] = a2[a3[42]];
  a1[v38] = a2[v38];
  return a1;
}

_BYTE *sub_100033FEC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for HeadphoneHardwareModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100009F00(&qword_1000B8D18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)v16 = v18;
  a1[a3[7]] = a2[a3[7]];
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  LODWORD(v18) = *(_DWORD *)v21;
  v20[4] = v21[4];
  *(_DWORD *)v20 = v18;
  v22 = a3[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  LODWORD(v18) = *(_DWORD *)v24;
  v23[4] = v24[4];
  *(_DWORD *)v23 = v18;
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  a1[a3[13]] = a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  a1[a3[16]] = a2[a3[16]];
  a1[a3[17]] = a2[a3[17]];
  a1[a3[18]] = a2[a3[18]];
  a1[a3[19]] = a2[a3[19]];
  a1[a3[20]] = a2[a3[20]];
  a1[a3[21]] = a2[a3[21]];
  a1[a3[22]] = a2[a3[22]];
  a1[a3[23]] = a2[a3[23]];
  a1[a3[24]] = a2[a3[24]];
  a1[a3[25]] = a2[a3[25]];
  a1[a3[26]] = a2[a3[26]];
  a1[a3[27]] = a2[a3[27]];
  a1[a3[28]] = a2[a3[28]];
  a1[a3[29]] = a2[a3[29]];
  a1[a3[30]] = a2[a3[30]];
  a1[a3[31]] = a2[a3[31]];
  a1[a3[32]] = a2[a3[32]];
  a1[a3[33]] = a2[a3[33]];
  a1[a3[34]] = a2[a3[34]];
  a1[a3[35]] = a2[a3[35]];
  a1[a3[36]] = a2[a3[36]];
  a1[a3[37]] = a2[a3[37]];
  a1[a3[38]] = a2[a3[38]];
  a1[a3[39]] = a2[a3[39]];
  a1[a3[40]] = a2[a3[40]];
  a1[a3[41]] = a2[a3[41]];
  a1[a3[42]] = a2[a3[42]];
  a1[a3[43]] = a2[a3[43]];
  return a1;
}

_BYTE *sub_1000342FC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for HeadphoneHardwareModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100009F00(&qword_1000B8D18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  a1[v13] = a2[v13];
  v16 = a3[8];
  v17 = a3[9];
  v18 = &a1[v16];
  v19 = &a2[v16];
  v18[4] = v19[4];
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v20 = &a1[v17];
  v21 = &a2[v17];
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v22 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v22] = a2[v22];
  v23 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v23] = a2[v23];
  v24 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v24] = a2[v24];
  v25 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  a1[v25] = a2[v25];
  v26 = a3[19];
  a1[a3[18]] = a2[a3[18]];
  a1[v26] = a2[v26];
  v27 = a3[21];
  a1[a3[20]] = a2[a3[20]];
  a1[v27] = a2[v27];
  v28 = a3[23];
  a1[a3[22]] = a2[a3[22]];
  a1[v28] = a2[v28];
  v29 = a3[25];
  a1[a3[24]] = a2[a3[24]];
  a1[v29] = a2[v29];
  v30 = a3[27];
  a1[a3[26]] = a2[a3[26]];
  a1[v30] = a2[v30];
  v31 = a3[29];
  a1[a3[28]] = a2[a3[28]];
  a1[v31] = a2[v31];
  v32 = a3[31];
  a1[a3[30]] = a2[a3[30]];
  a1[v32] = a2[v32];
  v33 = a3[33];
  a1[a3[32]] = a2[a3[32]];
  a1[v33] = a2[v33];
  v34 = a3[35];
  a1[a3[34]] = a2[a3[34]];
  a1[v34] = a2[v34];
  v35 = a3[37];
  a1[a3[36]] = a2[a3[36]];
  a1[v35] = a2[v35];
  v36 = a3[39];
  a1[a3[38]] = a2[a3[38]];
  a1[v36] = a2[v36];
  v37 = a3[41];
  a1[a3[40]] = a2[a3[40]];
  a1[v37] = a2[v37];
  v38 = a3[43];
  a1[a3[42]] = a2[a3[42]];
  a1[v38] = a2[v38];
  return a1;
}

_BYTE *sub_100034574(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for HeadphoneHardwareModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100009F00(&qword_1000B8D18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = a3[7];
  v17 = &a1[v15];
  v18 = &a2[v15];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  a1[v16] = a2[v16];
  v19 = a3[8];
  v20 = a3[9];
  v21 = &a1[v19];
  v22 = &a2[v19];
  v21[4] = v22[4];
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v23 = &a1[v20];
  v24 = &a2[v20];
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v23[4] = v24[4];
  v25 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v25] = a2[v25];
  v26 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v26] = a2[v26];
  v27 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v27] = a2[v27];
  v28 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  a1[v28] = a2[v28];
  v29 = a3[19];
  a1[a3[18]] = a2[a3[18]];
  a1[v29] = a2[v29];
  v30 = a3[21];
  a1[a3[20]] = a2[a3[20]];
  a1[v30] = a2[v30];
  v31 = a3[23];
  a1[a3[22]] = a2[a3[22]];
  a1[v31] = a2[v31];
  v32 = a3[25];
  a1[a3[24]] = a2[a3[24]];
  a1[v32] = a2[v32];
  v33 = a3[27];
  a1[a3[26]] = a2[a3[26]];
  a1[v33] = a2[v33];
  v34 = a3[29];
  a1[a3[28]] = a2[a3[28]];
  a1[v34] = a2[v34];
  v35 = a3[31];
  a1[a3[30]] = a2[a3[30]];
  a1[v35] = a2[v35];
  v36 = a3[33];
  a1[a3[32]] = a2[a3[32]];
  a1[v36] = a2[v36];
  v37 = a3[35];
  a1[a3[34]] = a2[a3[34]];
  a1[v37] = a2[v37];
  v38 = a3[37];
  a1[a3[36]] = a2[a3[36]];
  a1[v38] = a2[v38];
  v39 = a3[39];
  a1[a3[38]] = a2[a3[38]];
  a1[v39] = a2[v39];
  v40 = a3[41];
  a1[a3[40]] = a2[a3[40]];
  a1[v40] = a2[v40];
  v41 = a3[43];
  a1[a3[42]] = a2[a3[42]];
  a1[v41] = a2[v41];
  return a1;
}

uint64_t sub_100034838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100034844);
}

uint64_t sub_100034844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  int v10;

  v6 = sub_100009F00(&qword_1000B8D18);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v10 = -2;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1000348E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000348F0);
}

uint64_t sub_1000348F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100009F00(&qword_1000B8D18);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  return result;
}

void sub_100034970(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[40];

  v4[0] = &unk_1000894C0;
  sub_100034A50(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1000894D8;
    v4[3] = &unk_1000894F0;
    v4[4] = &unk_100089508;
    v4[5] = &unk_100089508;
    v4[6] = &unk_100089520;
    v4[7] = &unk_100089520;
    v4[8] = &unk_100089520;
    v4[9] = &unk_100089520;
    v4[10] = &unk_100089520;
    v4[11] = &unk_100089520;
    v4[12] = &unk_100089520;
    v4[13] = &unk_100089520;
    v4[14] = &unk_100089520;
    v4[15] = &unk_100089520;
    v4[16] = &unk_100089520;
    v4[17] = &unk_100089520;
    v4[18] = &unk_100089520;
    v4[19] = &unk_100089520;
    v4[20] = &unk_100089520;
    v4[21] = &unk_100089520;
    v4[22] = &unk_100089520;
    v4[23] = &unk_100089520;
    v4[24] = &unk_100089520;
    v4[25] = &unk_100089520;
    v4[26] = &unk_100089520;
    v4[27] = &unk_100089520;
    v4[28] = &unk_100089520;
    v4[29] = &unk_100089520;
    v4[30] = &unk_100089520;
    v4[31] = &unk_100089520;
    v4[32] = &unk_100089520;
    v4[33] = &unk_100089520;
    v4[34] = &unk_100089520;
    v4[35] = &unk_100089520;
    v4[36] = &unk_100089520;
    v4[37] = &unk_100089520;
    v4[38] = &unk_100089520;
    v4[39] = &unk_100089520;
    swift_initStructMetadata(a1, 256, 40, v4, a1 + 16);
  }
}

void sub_100034A50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000B8D88)
  {
    v2 = type metadata accessor for HeadphoneHardwareModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000B8D88);
  }
}

unint64_t sub_100034AA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B8930;
  if (!qword_1000B8930)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B8930);
  }
  return result;
}

unint64_t sub_100034AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_100034BF4(a1, v7);
}

unint64_t sub_100034B60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_100034D68(a1, a2, v5);
}

unint64_t sub_100034BC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100034E48(a1, v4);
}

unint64_t sub_100034BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_100034D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100034E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_100035A5C(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10002E16C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_100034F0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100034B60(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1000356C8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = *(_QWORD *)(v19 + 8 * v12);
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      swift_bridgeObjectRetain(a3);
      return 0;
    }
    goto LABEL_14;
  }
  sub_100035058(v15, a4 & 1);
  v21 = sub_100034B60(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_100035058(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100009F00(&qword_1000B8E50);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_36;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v37)
              goto LABEL_36;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain(v30[1]);
      v34 = v33;
    }
    Hasher.init(_seed:)(v40, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v40, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_100035364(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100009F00(&qword_1000B8C38);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1000324C0(v24, v38);
      }
      else
      {
        sub_1000250C8((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain(v22);
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_1000324C0(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

_OWORD *sub_100035660(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1000324C0(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

void sub_1000356C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_100009F00(&qword_1000B8E50);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    v22 = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100035878()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_100009F00(&qword_1000B8C38);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1000250C8(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1000324C0(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_100035A5C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_100035A98(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneAnalyticsController.ProxCardActionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneAnalyticsController.ProxCardActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100035BB0 + 4 * byte_100089445[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100035BE4 + 4 * byte_100089440[v4]))();
}

uint64_t sub_100035BE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100035BEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100035BF4);
  return result;
}

uint64_t sub_100035C00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100035C08);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_100035C0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100035C14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneAnalyticsController.ProxCardActionType()
{
  return &type metadata for HeadphoneAnalyticsController.ProxCardActionType;
}

uint64_t storeEnumTagSinglePayload for HeadphoneAnalyticsController.ProxFlowType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100035C7C + 4 * byte_10008944F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100035CB0 + 4 * byte_10008944A[v4]))();
}

uint64_t sub_100035CB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100035CB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100035CC0);
  return result;
}

uint64_t sub_100035CCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100035CD4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100035CD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100035CE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneAnalyticsController.ProxFlowType()
{
  return &type metadata for HeadphoneAnalyticsController.ProxFlowType;
}

unint64_t sub_100035D00()
{
  unint64_t result;

  result = qword_1000B8E58;
  if (!qword_1000B8E58)
  {
    result = swift_getWitnessTable(&unk_1000895D8, &type metadata for HeadphoneAnalyticsController.ProxFlowType);
    atomic_store(result, (unint64_t *)&qword_1000B8E58);
  }
  return result;
}

unint64_t sub_100035D48()
{
  unint64_t result;

  result = qword_1000B8E60;
  if (!qword_1000B8E60)
  {
    result = swift_getWitnessTable(&unk_100089678, &type metadata for HeadphoneAnalyticsController.ProxCardActionType);
    atomic_store(result, (unint64_t *)&qword_1000B8E60);
  }
  return result;
}

uint64_t sub_100035D8C(unint64_t a1)
{
  if (a1 >= 8)
    return 7;
  else
    return (0x605040302010007uLL >> (8 * a1));
}

uint64_t sub_100035DB4(unint64_t a1)
{
  if (a1 >= 7)
    return 6;
  else
    return (0x5040302010006uLL >> (8 * a1));
}

uint64_t sub_100035DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B8E68);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B8E68);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_100035E74(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  Swift::String v29;
  void *object;
  Swift::String v31;
  Swift::String v32;
  unint64_t v33;
  id v34;
  id v35;
  NSString v36;
  id v37;
  NSString v38;
  id v39;
  void *v40;
  id v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *isa;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  NSString v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  void *v66;
  id v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  char *v92;
  id v93;
  __int128 v94;
  __int128 v95;
  id v96;
  char v97[24];
  char v98[24];
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  objc_super v102;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for HeadphoneModel(0);
  v7 = __chkstk_darwin(v5, v6);
  v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  v12 = (char *)&v90 - v11;
  v102.receiver = v3;
  v102.super_class = ObjectType;
  objc_msgSendSuper2(&v102, "viewDidLoad");
  objc_msgSend(v3, "setDismissalType:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_presenter]);
  if (Strong)
  {
    v14 = Strong;
    v15 = Strong + 16;
    swift_beginAccess(Strong + 16, v98, 0, 0);
    sub_10001B868(v15, (uint64_t)&v99, &qword_1000B81E0);
    swift_unknownObjectRelease(v14);
    v16 = v101;
    if (v101)
    {
      v17 = sub_100013410(&v99, v101);
      v18 = *(_QWORD *)(v16 - 8);
      __chkstk_darwin(v17, v17);
      v20 = (uint64_t *)((char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_QWORD *))(v18 + 16))(v20);
      sub_100017E48((uint64_t)&v99, &qword_1000B81E0);
      v21 = *v20 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v21, v97, 0, 0);
      sub_1000135B0(v21, (uint64_t)v9);
      (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v16);
      sub_1000135F4((uint64_t)v9, (uint64_t)v12);
      v22 = type metadata accessor for HeadphoneEndCallViewController();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
      v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v25 = objc_msgSend(v3, "traitCollection");
      v26 = objc_msgSend(v25, "userInterfaceStyle");

      if (v26 == (id)1)
        v27 = 0x746867694CLL;
      else
        v27 = 1802658116;
      if (v26 == (id)1)
        v28 = (void *)0xE500000000000000;
      else
        v28 = (void *)0xE400000000000000;
      v99 = 0x6C6C61436574754DLL;
      v100 = 0xE90000000000005FLL;
      LODWORD(v94) = *(_DWORD *)&v12[*(int *)(v5 + 124)];
      v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
      object = v29._object;
      String.append(_:)(v29);
      swift_bridgeObjectRelease(object);
      v31._countAndFlagsBits = 95;
      v31._object = (void *)0xE100000000000000;
      String.append(_:)(v31);
      v32._countAndFlagsBits = v27;
      v32._object = v28;
      String.append(_:)(v32);
      swift_bridgeObjectRelease(v28);
      v33 = v100;
      v34 = objc_allocWithZone((Class)BSUICAPackageView);
      v35 = v24;
      v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v33);
      v37 = objc_msgSend(v34, "initWithPackageName:inBundle:", v36, v35);

      if (!v37)
      {
        if (qword_1000B7B68 != -1)
          swift_once(&qword_1000B7B68, sub_100035DE4);
        v49 = type metadata accessor for Logger(0);
        v50 = sub_1000093F8(v49, (uint64_t)qword_1000B8E68);
        isa = Logger.logObject.getter(v50);
        v52 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(isa, v52))
        {
          v53 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v53 = 0;
          _os_log_impl((void *)&_mh_execute_header, isa, v52, "Mute Call: Headphone Model is nil, exiting", v53, 2u);
          swift_slowDealloc(v53, -1, -1);
        }

        goto LABEL_40;
      }
      v38 = String._bridgeToObjectiveC()();
      objc_msgSend(v37, "setState:animated:", v38, 1);

      objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v39 = objc_msgSend(v3, "contentView");
      objc_msgSend(v39, "addSubview:", v37);

      v40 = *(void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_tintColor];
      v93 = v35;
      if (v40)
      {
        v41 = v40;
        v42 = String._bridgeToObjectiveC()();
        v43 = objc_msgSend(v37, "publishedObjectWithName:", v42);

        if (v43)
        {
          _bridgeAnyObjectToAny(_:)(&v94, v43);
          swift_unknownObjectRelease(v43);
        }
        else
        {
          v94 = 0u;
          v95 = 0u;
        }
        sub_100025040((uint64_t)&v94, (uint64_t)&v99);
        if (v101)
        {
          v54 = sub_100009F84(0, (unint64_t *)&unk_1000B8EC0, CALayer_ptr);
          if ((swift_dynamicCast(&v96, &v99, (char *)&type metadata for Any + 8, v54, 6) & 1) != 0)
          {
            v55 = v96;
            objc_msgSend(v96, "setBackgroundColor:", v41);

            goto LABEL_36;
          }

        }
        else
        {

          sub_100017E48((uint64_t)&v99, &qword_1000B87B0);
        }
      }
      if (qword_1000B7B68 != -1)
        swift_once(&qword_1000B7B68, sub_100035DE4);
      v56 = type metadata accessor for Logger(0);
      sub_1000093F8(v56, (uint64_t)qword_1000B8E68);
      v55 = v37;
      v57 = Logger.logObject.getter(v55);
      v58 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v57, v58))
      {
        v92 = v12;
        v59 = (uint8_t *)swift_slowAlloc(12, -1);
        v91 = (void *)swift_slowAlloc(32, -1);
        v96 = v91;
        *(_DWORD *)v59 = 136315138;
        v60 = String._bridgeToObjectiveC()();
        v61 = objc_msgSend(v55, "publishedObjectWithName:", v60);

        if (v61)
        {
          _bridgeAnyObjectToAny(_:)(&v94, v61);
          swift_unknownObjectRelease(v61);
        }
        else
        {
          v94 = 0u;
          v95 = 0u;
        }
        sub_100025040((uint64_t)&v94, (uint64_t)&v99);
        sub_10001B868((uint64_t)&v99, (uint64_t)&v94, &qword_1000B87B0);
        v62 = sub_100009F00(&qword_1000B87B0);
        v63 = String.init<A>(reflecting:)(&v94, v62);
        v65 = v64;
        sub_100017E48((uint64_t)&v99, &qword_1000B87B0);
        v99 = sub_10004B4F0(v63, v65, (uint64_t *)&v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, &v100);

        swift_bridgeObjectRelease(v65);
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "Mute Call: mica is nil, %s", v59, 0xCu);
        v66 = v91;
        swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v66, -1, -1);
        swift_slowDealloc(v59, -1, -1);

        v12 = v92;
        goto LABEL_39;
      }

LABEL_36:
LABEL_39:
      v67 = objc_msgSend(v3, "contentView");
      v68 = objc_msgSend(v67, "mainContentGuide");

      v69 = (void *)objc_opt_self(NSLayoutConstraint);
      v70 = sub_100009F00((uint64_t *)&unk_1000B8730);
      v71 = swift_allocObject(v70, 80, 7);
      *(_OWORD *)(v71 + 16) = xmmword_100087E70;
      v72 = objc_msgSend(v37, "topAnchor");
      v73 = objc_msgSend(v68, "topAnchor");
      v74 = objc_msgSend(v72, "constraintGreaterThanOrEqualToAnchor:", v73);

      *(_QWORD *)(v71 + 32) = v74;
      v75 = objc_msgSend(v37, "bottomAnchor");
      v76 = objc_msgSend(v68, "bottomAnchor");
      v77 = objc_msgSend(v75, "constraintLessThanOrEqualToAnchor:", v76);

      *(_QWORD *)(v71 + 40) = v77;
      v78 = objc_msgSend(v37, "heightAnchor");
      v79 = objc_msgSend(v78, "constraintEqualToConstant:", 214.0);

      *(_QWORD *)(v71 + 48) = v79;
      v80 = objc_msgSend(v37, "widthAnchor");
      v81 = objc_msgSend(v80, "constraintEqualToConstant:", 320.0);

      *(_QWORD *)(v71 + 56) = v81;
      v82 = objc_msgSend(v37, "centerYAnchor");
      v83 = objc_msgSend(v68, "centerYAnchor");
      v84 = objc_msgSend(v82, "constraintEqualToAnchor:", v83);

      *(_QWORD *)(v71 + 64) = v84;
      v85 = objc_msgSend(v37, "centerXAnchor");
      v86 = objc_msgSend(v68, "centerXAnchor");
      v87 = objc_msgSend(v85, "constraintEqualToAnchor:", v86);

      *(_QWORD *)(v71 + 72) = v87;
      v99 = v71;
      specialized Array._endMutation()(v88);
      v89 = v99;
      sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v89);
      objc_msgSend(v69, "activateConstraints:", isa);

LABEL_40:
      sub_100013638((uint64_t)v12);
      return;
    }
    sub_100017E48((uint64_t)&v99, &qword_1000B81E0);
  }
  if (qword_1000B7B68 != -1)
    swift_once(&qword_1000B7B68, sub_100035DE4);
  v44 = type metadata accessor for Logger(0);
  v45 = sub_1000093F8(v44, (uint64_t)qword_1000B8E68);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Mute Call: Headphone Model is nil, exiting", v48, 2u);
    swift_slowDealloc(v48, -1, -1);
  }

}

void sub_100036A6C(uint64_t a1)
{
  char *v1;
  NSString v3;
  NSString v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD v15[5];
  uint64_t v16;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v4);

  v5 = *(void **)(a1 + *(int *)(type metadata accessor for HeadphoneViewModel(0) + 84));
  v6 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_tintColor];
  *(_QWORD *)&v1[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_tintColor] = v5;
  v7 = v5;

  v8 = *(_QWORD *)(a1 + 40);
  v9 = swift_allocObject(&unk_1000A79F8, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v1);
  swift_bridgeObjectRetain(v8);
  swift_retain(v9);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v15[4] = sub_100036DA0;
  v16 = v9;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100011720;
  v15[3] = &unk_1000A7A10;
  v11 = _Block_copy(v15);
  v12 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v10, 0, v11);

  _Block_release(v11);
  v13 = v16;
  swift_release(v9);
  v14 = objc_msgSend(v1, "addAction:", v12, swift_release(v13).n128_f64[0]);

}

void sub_100036C20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_presenter);

    if (v5)
    {
      sub_100073730();
      swift_unknownObjectRelease(v5);
    }
  }
}

uint64_t type metadata accessor for HeadphoneMuteCallUpsellViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController);
}

uint64_t sub_100036D6C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_type);
}

uint64_t sub_100036D7C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100036DA0(uint64_t a1)
{
  uint64_t v1;

  sub_100036C20(a1, v1);
}

uint64_t sub_100036DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100036DB8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100036DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  void *v6;
  id v7;
  unsigned int v8;
  id v9;
  unsigned int v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  void *object;
  uint64_t v16;

  v5 = *(_DWORD *)(a3 + *(int *)(type metadata accessor for HeadphoneModel(0) + 124));
  v6 = (void *)objc_opt_self(SFHeadphoneProduct);
  v7 = objc_msgSend(v6, "airPods");
  v8 = objc_msgSend(v7, "productID");

  if (v5 == v8
    || (v9 = objc_msgSend(v6, "airPodsSecondGeneration"),
        v10 = objc_msgSend(v9, "productID"),
        v9,
        v5 == v10))
  {
    v16 = a1;
    swift_bridgeObjectRetain(a2);
    v11._countAndFlagsBits = 0x53444F505249415FLL;
    v11._object = (void *)0xE800000000000000;
    String.append(_:)(v11);
  }
  else
  {
    v16 = a1;
    swift_bridgeObjectRetain(a2);
    v12._countAndFlagsBits = 0x5F4449505FLL;
    v12._object = (void *)0xE500000000000000;
    String.append(_:)(v12);
    v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
    object = v13._object;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(object);
  }
  return v16;
}

uint64_t sub_100036F10(uint64_t a1, void *a2, int a3)
{
  NSString v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  unsigned int v11;
  id v12;
  unsigned int v13;
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  uint64_t countAndFlagsBits;
  Swift::String v19;
  void *object;
  Swift::String_optional v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v25;
  Swift::String v26;

  v6 = String._bridgeToObjectiveC()();
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "bundleWithIdentifier:", v6);

  if (!v8)
    return 0;
  v9 = (void *)objc_opt_self(SFHeadphoneProduct);
  v10 = objc_msgSend(v9, "airPods");
  v11 = objc_msgSend(v10, "productID");

  if (v11 == a3
    || (v12 = objc_msgSend(v9, "airPodsSecondGeneration"),
        v13 = objc_msgSend(v12, "productID"),
        v12,
        v13 == a3))
  {
    v14 = objc_msgSend(v7, "mainBundle");
    v25._object = (void *)0xE000000000000000;
    v15._countAndFlagsBits = a1;
    v15._object = a2;
    v16.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v16.value._object = (void *)0xEB00000000656C62;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v25._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v25)._countAndFlagsBits;

  }
  else
  {
    _StringGuts.grow(_:)(18);
    swift_bridgeObjectRelease(0xE000000000000000);
    v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
    object = v19._object;
    String.append(_:)(v19);
    swift_bridgeObjectRelease(object);
    v21.value._countAndFlagsBits = 0xD000000000000010;
    v26._object = (void *)0xE000000000000000;
    v22._countAndFlagsBits = a1;
    v22._object = a2;
    v21.value._object = (void *)0x800000010008C790;
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v26._countAndFlagsBits = 0;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v21, (NSBundle)v8, v23, v26)._countAndFlagsBits;

    swift_bridgeObjectRelease(0x800000010008C790);
  }
  return countAndFlagsBits;
}

uint64_t sub_10003714C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  int v15;
  void *v16;
  id v17;
  unsigned int v18;
  id v19;
  unsigned int v20;
  uint64_t countAndFlagsBits;
  char v22;
  int v23;
  void *v24;
  id v25;
  unsigned int v26;
  id v27;
  unsigned int v28;
  id v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v37;
  Swift::String v38;

  v6 = type metadata accessor for HeadphoneModel(0);
  v8 = __chkstk_darwin(v6, v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  v13 = (char *)&v37 - v12;
  if (a1 == 0x5F544355444F5250 && a2 == 0xEC000000454D414ELL)
  {
    sub_1000135B0(a3, (uint64_t)&v37 - v12);
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x5F544355444F5250, 0xEC000000454D414ELL, 0);
    sub_1000135B0(a3, (uint64_t)v13);
    if ((v14 & 1) == 0)
    {
      sub_100013638((uint64_t)v13);
      goto LABEL_10;
    }
  }
  v15 = *(_DWORD *)&v13[*(int *)(v6 + 124)];
  v16 = (void *)objc_opt_self(SFHeadphoneProduct);
  v17 = objc_msgSend(v16, "airPods");
  v18 = objc_msgSend(v17, "productID");

  if (v15 != v18)
  {
    v19 = objc_msgSend(v16, "airPodsSecondGeneration");
    v20 = objc_msgSend(v19, "productID");

    sub_100013638((uint64_t)v13);
    if (v15 == v20)
      return sub_10001FF98(0xCu);
LABEL_10:
    if (a1 == 0x52554F595F544F4ELL && a2 == 0xE800000000000000)
    {
      sub_1000135B0(a3, (uint64_t)v10);
    }
    else
    {
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x52554F595F544F4ELL, 0xE800000000000000, 0);
      sub_1000135B0(a3, (uint64_t)v10);
      if ((v22 & 1) == 0)
      {
        sub_100013638((uint64_t)v10);
        goto LABEL_19;
      }
    }
    v23 = *(_DWORD *)&v10[*(int *)(v6 + 124)];
    v24 = (void *)objc_opt_self(SFHeadphoneProduct);
    v25 = objc_msgSend(v24, "airPods");
    v26 = objc_msgSend(v25, "productID");

    if (v23 == v26)
    {
      sub_100013638((uint64_t)v10);
LABEL_17:
      v29 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v38._object = (void *)0xE000000000000000;
      v30._object = (void *)0x800000010008E4F0;
      v30._countAndFlagsBits = 0xD000000000000010;
      v31.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v31.value._object = (void *)0xEB00000000656C62;
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      v38._countAndFlagsBits = 0;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v38)._countAndFlagsBits;

      return countAndFlagsBits;
    }
    v27 = objc_msgSend(v24, "airPodsSecondGeneration");
    v28 = objc_msgSend(v27, "productID");

    sub_100013638((uint64_t)v10);
    if (v23 == v28)
      goto LABEL_17;
LABEL_19:
    v33 = sub_100036DC0(a1, a2, a3);
    v35 = v34;
    countAndFlagsBits = sub_100036F10(v33, v34, *(_DWORD *)(a3 + *(int *)(v6 + 124)));
    swift_bridgeObjectRelease(v35);
    return countAndFlagsBits;
  }
  sub_100013638((uint64_t)v13);
  return sub_10001FF98(0xCu);
}

void sub_1000374E0(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  Class isa;
  id v38;

  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v4 = v3;
  objc_msgSend(v3, "setMaximumContentSizeCategory:", UIContentSizeCategoryLarge);

  v38 = objc_msgSend((id)objc_opt_self(VTUIStyle), "sharedStyle");
  objc_msgSend(v38, "setAudioProductID:", *(_QWORD *)(a1 + *(int *)(type metadata accessor for HeadphoneViewModel(0) + 80)));
  v5 = objc_msgSend(objc_allocWithZone((Class)VTUIProximityEnrollTrainingViewController), "init");
  objc_msgSend(v5, "setDelegate:", v1);
  v6 = objc_msgSend(v5, "view");
  if (!v6)
  {
LABEL_9:

    return;
  }
  v7 = v6;
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v8 = objc_msgSend(v1, "view");
  if (!v8)
    goto LABEL_11;
  v9 = v8;
  objc_msgSend(v8, "addSubview:", v7);

  objc_msgSend(v1, "addChildViewController:", v5);
  objc_msgSend(v5, "didMoveToParentViewController:", v1);
  v10 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100087700;
  v12 = objc_msgSend(v7, "topAnchor");
  v13 = objc_msgSend(v1, "view");
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "topAnchor");

  v16 = objc_msgSend(v12, "constraintEqualToAnchor:", v15);
  *(_QWORD *)(v11 + 32) = v16;
  v17 = objc_msgSend(v7, "bottomAnchor");
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, "bottomAnchor");

  v21 = objc_msgSend(v17, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v11 + 40) = v21;
  v22 = objc_msgSend(v7, "leadingAnchor");
  v23 = objc_msgSend(v1, "view");
  if (!v23)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "leadingAnchor");

  v26 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v25, -6.0);
  *(_QWORD *)(v11 + 48) = v26;
  v27 = objc_msgSend(v7, "trailingAnchor");
  v28 = objc_msgSend(v1, "view");
  if (v28)
  {
    v29 = v28;
    v30 = (void *)objc_opt_self(NSLayoutConstraint);
    v31 = objc_msgSend(v29, "trailingAnchor");

    v32 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v31, 6.0);
    *(_QWORD *)(v11 + 56) = v32;
    v33 = objc_msgSend(v7, "heightAnchor");
    v34 = objc_msgSend(v33, "constraintEqualToConstant:", 390.0);

    *(_QWORD *)(v11 + 64) = v34;
    specialized Array._endMutation()(v35);
    v36 = v11;
    sub_10000B880();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v36);
    objc_msgSend(v30, "activateConstraints:", isa);

    goto LABEL_9;
  }
LABEL_15:
  __break(1u);
}

uint64_t type metadata accessor for HeadphoneSiriViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService27HeadphoneSiriViewController);
}

uint64_t sub_1000379DC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneSiriViewController_type);
}

uint64_t sub_100037A1C(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  char *v7;

  result = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneSiriViewController_presenter]);
  if (result)
  {
    v6 = result;
    v7 = a1;
    a3();

    return swift_unknownObjectRelease(v6);
  }
  return result;
}

id sub_100037ABC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

int main(int argc, const char **argv, const char **envp)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *ObjCClassFromMetadata;
  NSString *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = type metadata accessor for AppDelegate();
  v4 = static CommandLine.unsafeArgv.getter();
  v5 = ((uint64_t (*)(void))static CommandLine.argc.getter)();
  v6 = static CommandLine.argc.getter(v5);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v3);
  v8 = NSStringFromClass(ObjCClassFromMetadata);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  LODWORD(v8) = UIApplicationMain(_:_:_:_:)(v6, v4, 0, 0, v9, v11);
  swift_bridgeObjectRelease(v11);
  exit((int)v8);
}

uint64_t type metadata accessor for AppDelegate()
{
  return objc_opt_self(_TtC20HeadphoneProxService11AppDelegate);
}

id sub_100037B94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController____lazy_storage___topAsset;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController____lazy_storage___topAsset);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController____lazy_storage___topAsset);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "lightGrayColor");
    objc_msgSend(v4, "setBackgroundColor:", v5);

    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = objc_msgSend(v4, "heightAnchor");
    v7 = objc_msgSend(v6, "constraintEqualToConstant:", 450.0);

    objc_msgSend(v7, "setActive:", 1);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_100037CBC(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  _BYTE v29[24];
  _BYTE v30[24];
  _QWORD v31[3];
  uint64_t v32;
  objc_super v33;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = sub_100009F00(&qword_1000B83E8);
  __chkstk_darwin(v4, v5);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v33.receiver = v2;
  v33.super_class = ObjectType;
  objc_msgSendSuper2(&v33, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_presenter]);
  if (Strong)
  {
    v9 = Strong;
    v10 = Strong + 16;
    swift_beginAccess(Strong + 16, v30, 0, 0);
    sub_100013528(v10, (uint64_t)v31);
    swift_unknownObjectRelease(v9);
    v11 = v32;
    if (v32)
    {
      v12 = sub_100013410(v31, v32);
      v13 = *(_QWORD *)(v11 - 8);
      __chkstk_darwin(v12, v12);
      v15 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(_QWORD *))(v13 + 16))(v15);
      sub_100017E48((uint64_t)v31, &qword_1000B81E0);
      v16 = *v15 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v16, v29, 0, 0);
      sub_1000135B0(v16, (uint64_t)v7);
      (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v11);
      v17 = type metadata accessor for HeadphoneModel(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 0, 1, v17);
      sub_100017E48((uint64_t)v7, &qword_1000B83E8);
      v18 = objc_msgSend(v2, "contentView");
      v19 = sub_100037B94();
      objc_msgSend(v18, "addSubview:", v19);

      v20 = sub_100037B94();
      v21 = objc_msgSend(v2, "contentView");
      v22 = objc_msgSend(v21, "mainContentGuide");

      objc_msgSend(v20, "pinToOtherWithLayoutGuide:", v22);
      goto LABEL_9;
    }
    sub_100017E48((uint64_t)v31, &qword_1000B81E0);
  }
  v23 = type metadata accessor for HeadphoneModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v7, 1, 1, v23);
  sub_100017E48((uint64_t)v7, &qword_1000B83E8);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_1000093F8(v24, (uint64_t)qword_1000BC740);
  v22 = Logger.logObject.getter(v25);
  v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v26, "HeadhponeHeartRateTutorial2ViewController: Headphone Model is nil, exiting", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }
LABEL_9:

}

void sub_1000380E0(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  char *v12;
  _QWORD v13[5];
  uint64_t v14;

  sub_10001FF98(0x77u);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_subtitleLabel];
  v7 = swift_allocObject(&unk_1000A7AD8, 24, 7);
  *(_QWORD *)(v7 + 16) = v1;
  v8 = swift_allocObject(&unk_1000A7B00, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_1000388D4;
  *(_QWORD *)(v8 + 24) = v7;
  v13[4] = sub_1000388EC;
  v14 = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1000713DC;
  v13[3] = &unk_1000A7B18;
  v9 = _Block_copy(v13);
  v10 = v14;
  v11 = v6;
  v12 = v1;
  swift_retain(v8);
  objc_msgSend(v12, "perormTapActionWithRecognizer:targetString:inLabel:action:", a1, v5, v11, v9, swift_release(v10).n128_f64[0]);

  _Block_release(v9);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v8, "", 159, 75, 37, 1);
  swift_release(v7);
  swift_release(v8);
  if ((v12 & 1) != 0)
    __break(1u);
}

uint64_t sub_100038258(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v33;
  id v34;
  NSURL *v35;
  void *v36;
  void *v37;
  unint64_t v38;
  Class isa;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v2 = sub_100009F00(&qword_1000B7F08);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v43 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v10 = type metadata accessor for Logger(0);
  sub_1000093F8(v10, (uint64_t)qword_1000BC740);
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = &OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink;
  if (os_log_type_enabled(v12, v13))
  {
    v40 = v10;
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v42 = v6;
    v17 = v16;
    v41 = v7;
    *(_DWORD *)v15 = 136315138;
    v45 = v16;
    v18 = *(_QWORD *)&v11[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink];
    v19 = *(_QWORD *)&v11[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink
                        + 8];
    swift_bridgeObjectRetain(v19);
    v20 = v18;
    v10 = v40;
    v44 = sub_10004B4F0(v20, v19, &v45);
    v7 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);

    v21 = v19;
    v14 = &OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink;
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "HeadhponeHeartRateTutorial2ViewController: User tapped learn more, presenting support link %s", v15, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    v22 = v17;
    v6 = v42;
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

  }
  Strong = swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_presenter]);
  if (Strong)
  {
    v24 = Strong;
    v25 = v14;
    if (qword_1000B7C00 != -1)
      swift_once(&qword_1000B7C00, sub_1000713FC);
    v26 = sub_1000093F8(v10, (uint64_t)qword_1000B9F80);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Requested dismiss", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    v30 = swift_unknownObjectWeakLoadStrong(v24 + 56);
    if (v30)
    {
      v31 = v30;
      sub_10002ECCC();
      swift_unknownObjectRelease(v24);
      v24 = v31;
    }
    v14 = v25;
    swift_unknownObjectRelease(v24);
  }
  URL.init(string:)(*(_QWORD *)&v11[*v14], *(_QWORD *)&v11[*v14 + 8]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_100017E48((uint64_t)v5, &qword_1000B7F08);
  v33 = v43;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v5, v6);
  v34 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v35);
  v37 = v36;
  v38 = sub_100070CE0((uint64_t)&_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_10003890C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v38);
  objc_msgSend(v34, "openURL:options:completionHandler:", v37, isa, 0);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v33, v6);
}

uint64_t type metadata accessor for HeadhponeHeartRateTutorial2ViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController);
}

uint64_t sub_1000387B0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_type);
}

id sub_1000387C0(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = &v2[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink];
  *(_QWORD *)v5 = 0xD000000000000025;
  *((_QWORD *)v5 + 1) = 0x800000010008C100;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController____lazy_storage___topAsset] = 0;
  v6 = OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_subtitleLabel;
  v7 = objc_allocWithZone((Class)PRXLabel);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, "initWithStyle:", 1);
  *(_QWORD *)&v8[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v8[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_type] = 29;

  v10.receiver = v8;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, "initWithContentView:", a1);
}

uint64_t sub_1000388B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000388D4()
{
  uint64_t v0;

  return sub_100038258(*(void **)(v0 + 16));
}

uint64_t sub_1000388DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000388EC()
{
  uint64_t v0;

  return sub_10004B460(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000388F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100038904(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10003890C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7D90;
  if (!qword_1000B7D90)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    result = swift_getWitnessTable(&unk_100087D74, v1);
    atomic_store(result, (unint64_t *)&qword_1000B7D90);
  }
  return result;
}

uint64_t sub_100038954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9050);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9050);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1000389E4()
{
  qword_1000B9068 = 0x4024000000000000;
}

void *sub_1000389F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _BYTE v20[48];

  v1 = sub_100009F00(&qword_1000B81D8);
  inited = swift_initStackObject(v1, v20);
  *(_OWORD *)(inited + 16) = xmmword_100088470;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel);
  *(_QWORD *)(inited + 32) = v3;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody);
  *(_QWORD *)(inited + 40) = v4;
  v19 = inited;
  specialized Array._endMutation()(inited);
  v5 = *(void **)(v19 + 32);
  if (!v5)
  {
    v12 = v4;
    v13 = v3;
    v11 = *(void **)(v19 + 40);
    if (!v11)
      goto LABEL_10;
    goto LABEL_7;
  }
  v6 = v5;
  v7 = v3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
  v9 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v6);
  specialized Array._endMutation()(v10);
  v11 = *(void **)(v19 + 40);
  if (v11)
  {
LABEL_7:
    v14 = v11;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
    v16 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v15 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v16 >= v15 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
    v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
    specialized Array._endMutation()(v17);
  }
LABEL_10:
  swift_bridgeObjectRelease(v19);
  return &_swiftEmptyArrayStorage;
}

void sub_100038BCC(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  _QWORD aBlock[5];
  uint64_t v30;
  uint64_t v31;
  objc_super v32;

  v3 = v2;
  v32.receiver = v3;
  v32.super_class = (Class)swift_getObjectType(v3, a2);
  objc_msgSendSuper2(&v32, "viewWillAppear:", a1 & 1);
  if (v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_shouldFadeInElements] != 1)
    goto LABEL_18;
  v5 = objc_msgSend(v3, "contentView");
  v6 = objc_msgSend(v5, "titleView");

  if (v6)
  {
    objc_msgSend(v6, "setAlpha:", 0.0);

  }
  v7 = objc_msgSend(v3, "contentView");
  v8 = objc_msgSend(v7, "auxiliaryViews");

  if (!v8)
    goto LABEL_26;
  v9 = sub_100009F84(0, &qword_1000B8598, UIView_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v15 = v10;
    else
      v15 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v15);
    if (v11)
      goto LABEL_7;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v10);
    if (v11)
    {
LABEL_7:
      if (v11 >= 1)
      {
        for (i = 0; i != v11; ++i)
        {
          if ((v10 & 0xC000000000000001) != 0)
            v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
          else
            v13 = *(id *)(v10 + 8 * i + 32);
          v14 = v13;
          objc_msgSend(v13, "setAlpha:", 0.0);

        }
        goto LABEL_17;
      }
      __break(1u);
LABEL_26:
      __break(1u);
      return;
    }
  }
LABEL_17:
  swift_bridgeObjectRelease_n(v10, 2);
  v16 = (void *)objc_opt_self(UIView);
  v17 = swift_allocObject(&unk_1000A7BE8, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v3);
  aBlock[4] = sub_10003D4CC;
  v30 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FBC;
  aBlock[3] = &unk_1000A7D90;
  v18 = _Block_copy(aBlock);
  swift_release(v30);
  objc_msgSend(v16, "animateWithDuration:delay:options:animations:completion:", 65538, v18, 0, 1.5, 0.8);
  _Block_release(v18);
LABEL_18:
  if (qword_1000B7B70 != -1)
    swift_once(&qword_1000B7B70, sub_100038954);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_1000093F8(v19, (uint64_t)qword_1000B9050);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Playing movie", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  v24 = &v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView];
  swift_beginAccess(v24, aBlock, 0, 0);
  v26 = *(_QWORD *)v24;
  if (*(_QWORD *)v24)
  {
    v27 = *((_QWORD *)v24 + 1);
    ObjectType = swift_getObjectType(v26, v25);
    v31 = v26;
    dispatch thunk of VideoPlaybackControllable.play()(ObjectType, v27);
  }
}

uint64_t sub_100038F84(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v26[264];
  _QWORD v27[33];
  char v28[24];
  objc_super v29;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v6 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v6, v7);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v29.receiver = v3;
  v29.super_class = ObjectType;
  objc_msgSendSuper2(&v29, "viewDidDisappear:", a1 & 1);
  if (qword_1000B7B70 != -1)
    swift_once(&qword_1000B7B70, sub_100038954);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_1000093F8(v10, (uint64_t)qword_1000B9050);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Stopping movie", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = &v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView], v28, 1, 0);
  v17 = *(id *)v15;
  if (*(_QWORD *)v15
    && (v18 = *((_QWORD *)v15 + 1),
        v19 = swift_getObjectType(*(_QWORD *)v15, v16),
        v27[0] = v17,
        dispatch thunk of VideoPlaybackControllable.stop()(v19, v18),
        *(_QWORD *)v15))
  {
    objc_msgSend(*(id *)v15, "removeFromSuperview");
    v20 = *(id *)v15;
  }
  else
  {
    v20 = 0;
  }
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;

  v21 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 1, 1, v21);
  v22 = (uint64_t)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel], v27, 33, 0);
  sub_10003251C((uint64_t)v9, v22);
  swift_endAccess(v27);
  sub_10003D4A0((uint64_t)v26);
  v23 = (uint64_t)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer];
  sub_10003CFDC((uint64_t)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer], (uint64_t)v27, &qword_1000B90F0);
  sub_10003CFDC((uint64_t)v26, v23, &qword_1000B90F0);
  return sub_10003D0DC((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D158);
}

void sub_100039228(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  id v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HeadphoneAssets(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for HeadphoneViewModel(0);
  sub_10001B868(a1 + *(int *)(v12 + 44), (uint64_t)v6, &qword_1000B7F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100017E48((uint64_t)v6, &qword_1000B7F18);
    return;
  }
  sub_10003D1CC((uint64_t)v6, (uint64_t)v11, type metadata accessor for HeadphoneAssets);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v13);

  v14 = *(_QWORD *)&v11[*(int *)(v7 + 32)];
  if (!((unint64_t)v14 >> 62))
  {
    if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_16:
    sub_100039778(a1);
    if (!*(_QWORD *)(a1 + 72))
      goto LABEL_10;
    goto LABEL_9;
  }
  if (v14 < 0)
    v17 = v14;
  else
    v17 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v18 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v14);
  if (!v18)
    goto LABEL_16;
LABEL_5:
  *((_BYTE *)v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_shouldFadeInElements) = 0;
  if ((v14 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v14);
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v15 = *(id *)(v14 + 32);
  }
  sub_100039450((uint64_t)v15);

  if (*(_QWORD *)(a1 + 72))
  {
LABEL_9:
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "showActivityIndicatorWithStatus:", v16);

  }
LABEL_10:
  sub_10000EC60((uint64_t)v11, type metadata accessor for HeadphoneAssets);
}

void sub_100039450(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  Class isa;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", a1);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray2Color");
  objc_msgSend(v2, "setTintColor:", v3);

  v4 = objc_msgSend(v1, "contentView");
  objc_msgSend(v4, "addSubview:", v2);

  v5 = objc_msgSend(v1, "contentView");
  v6 = objc_msgSend(v5, "mainContentGuide");

  v7 = (void *)objc_opt_self(NSLayoutConstraint);
  v8 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100088460;
  v10 = objc_msgSend(v2, "topAnchor");
  v11 = objc_msgSend(v6, "topAnchor");
  v12 = objc_msgSend(v10, "constraintGreaterThanOrEqualToAnchor:", v11);

  *(_QWORD *)(v9 + 32) = v12;
  v13 = objc_msgSend(v2, "bottomAnchor");
  v14 = objc_msgSend(v6, "bottomAnchor");
  v15 = objc_msgSend(v13, "constraintLessThanOrEqualToAnchor:", v14);

  *(_QWORD *)(v9 + 40) = v15;
  v16 = objc_msgSend(v2, "centerYAnchor");
  v17 = objc_msgSend(v6, "centerYAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v9 + 48) = v18;
  v19 = objc_msgSend(v2, "centerXAnchor");
  v20 = objc_msgSend(v6, "centerXAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v9 + 56) = v21;
  specialized Array._endMutation()(v22);
  sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v7, "activateConstraints:", isa);

}

void sub_100039778(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  int v22;
  char **v23;
  char *v24;
  id v25;
  uint64_t v26;
  id v27;
  char *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  double v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  Class isa;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSString v61;
  void *v62;
  id v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t i;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  int *v80;
  id v81;
  char *v82;
  _BYTE v83[264];
  _BYTE v84[264];
  _BYTE v85[264];
  _BYTE v86[264];
  uint64_t v87;
  _QWORD v88[27];
  _OWORD v89[13];
  uint64_t v90;

  v2 = v1;
  v4 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for HeadphoneViewModel(0);
  sub_10003CFDC(a1 + v12[14], (uint64_t)v88, &qword_1000B8508);
  sub_10003CFDC((uint64_t)v88, (uint64_t)v89, &qword_1000B8508);
  if (sub_10001B850((uint64_t)v89) != 1)
  {
    v13 = *(_QWORD *)(a1 + 40);
    v14 = swift_allocObject(&unk_1000A7BE8, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16, v2);
    sub_10003D268(v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D230);
    swift_bridgeObjectRetain(v13);
    swift_retain(v14);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    *(_QWORD *)&v86[32] = sub_10003D210;
    *(_QWORD *)&v86[40] = v14;
    *(_QWORD *)v86 = _NSConcreteStackBlock;
    *(_QWORD *)&v86[8] = 1107296256;
    *(_QWORD *)&v86[16] = sub_100011720;
    *(_QWORD *)&v86[24] = &unk_1000A7D40;
    v16 = _Block_copy(v86);
    v81 = (id)objc_opt_self(PRXAction);
    v17 = objc_msgSend(v81, "actionWithTitle:style:handler:", v15, 0, v16);

    _Block_release(v16);
    v18 = *(_QWORD *)&v86[40];
    swift_release(v14);

    v19 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_connectAction];
    *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_connectAction] = v17;
    v20 = v17;

    sub_10001B868(a1 + v12[11], (uint64_t)v11, &qword_1000B7F18);
    v21 = type metadata accessor for HeadphoneAssets(0);
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v11, 1, v21);
    v23 = &selRef_configureWithContext_completion_;
    v82 = v7;
    v78 = v20;
    v79 = a1;
    v80 = v12;
    if (v22 == 1)
    {
      sub_10003D268(v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001B91C);
      sub_100017E48((uint64_t)v11, &qword_1000B7F18);
    }
    else
    {
      v24 = &v11[*(int *)(v21 + 40)];
      v25 = *(id *)v24;
      v26 = *((_QWORD *)v24 + 1);
      v27 = *(id *)v24;
      sub_10000EC60((uint64_t)v11, type metadata accessor for HeadphoneAssets);
      if (v25)
      {
        v28 = &v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView];
        swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView], &v87, 1, 0);
        v29 = *(void **)v28;
        *(_QWORD *)v28 = v25;
        *((_QWORD *)v28 + 1) = v26;
        v30 = v27;

        if ((*(_BYTE *)(a1 + v12[22]) & 1) != 0)
        {
          v31 = objc_msgSend(v30, "layer");
          CATransform3DMakeScale((CATransform3D *)v86, 0.85, 0.85, 1.0);
          objc_msgSend(v31, "setTransform:", v86);

        }
        v32 = objc_allocWithZone((Class)UILayoutGuide);
        sub_10003D268(v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D230);
        v33 = v30;
        v34 = objc_msgSend(v32, "init");
        sub_10003D268(v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001B91C);
        v35 = *(double *)v89;
        v36 = objc_msgSend(v34, "heightAnchor");

        v37 = objc_msgSend(v36, "constraintEqualToConstant:", v35);
        *(_QWORD *)v86 = v33;
        *(_QWORD *)&v86[8] = v34;
        *(_OWORD *)&v86[176] = v89[10];
        *(_OWORD *)&v86[192] = v89[11];
        *(_OWORD *)&v86[208] = v89[12];
        *(_QWORD *)&v86[224] = v90;
        *(_OWORD *)&v86[112] = v89[6];
        *(_OWORD *)&v86[128] = v89[7];
        *(_OWORD *)&v86[144] = v89[8];
        *(_OWORD *)&v86[160] = v89[9];
        *(_OWORD *)&v86[48] = v89[2];
        *(_OWORD *)&v86[64] = v89[3];
        *(_OWORD *)&v86[80] = v89[4];
        *(_OWORD *)&v86[96] = v89[5];
        *(_OWORD *)&v86[16] = v89[0];
        *(_OWORD *)&v86[32] = v89[1];
        v86[232] = 0;
        *(_QWORD *)&v86[240] = v37;
        *(_QWORD *)&v86[248] = &_swiftEmptyArrayStorage;
        *(_QWORD *)&v86[256] = &_swiftEmptyArrayStorage;
        memcpy(v85, v86, sizeof(v85));
        sub_10003D2FC((uint64_t)v86);
        v38 = objc_msgSend(v2, "view");
        if (!v38)
        {
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        v39 = v38;
        objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        objc_msgSend(v39, "addLayoutGuide:", v34);
        objc_msgSend(v39, "addSubview:", v33);
        v77 = v33;
        objc_msgSend(v39, "sendSubviewToBack:", v33);

        sub_10000B8BC((uint64_t)v86);
        v40 = objc_msgSend(v2, "contentView");
        v41 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
        objc_msgSend(v40, "setBackgroundColor:", v41);

        v42 = objc_msgSend(v2, "contentView");
        v43 = objc_msgSend(v42, "mainContentGuide");

        v44 = objc_msgSend(v2, "view");
        if (!v44)
        {
LABEL_27:
          __break(1u);
          return;
        }
        v45 = v44;
        v46 = (void *)objc_opt_self(NSLayoutConstraint);
        sub_10006A0FC();
        v48 = v47;

        sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v48);
        objc_msgSend(v46, "activateConstraints:", isa);

        memcpy(v83, v85, sizeof(v83));
        nullsub_1(v83);
        v50 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer];
        sub_10003CFDC((uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer], (uint64_t)v84, &qword_1000B90F0);
        sub_10003CFDC((uint64_t)v83, v50, &qword_1000B90F0);
        sub_10003D0DC((uint64_t)v84, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D158);
        v23 = &selRef_configureWithContext_completion_;
      }
      else
      {
        sub_10003D268(v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001B91C);
      }
    }
    v51 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 4);
    objc_msgSend(v51, v23[53], 0);
    objc_msgSend(v51, "setTextAlignment:", 1);
    v52 = objc_msgSend(v2, "contentView");
    objc_msgSend(v52, "addSubview:", v51);

    v53 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel];
    *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel] = v51;
    v77 = v51;

    v54 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 5);
    objc_msgSend(v54, v23[53], 0);
    objc_msgSend(v54, "setTextAlignment:", 1);
    v55 = objc_msgSend(v2, "contentView");
    objc_msgSend(v55, "addSubview:", v54);

    v56 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody];
    *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody] = v54;
    v57 = v54;

    v58 = v79;
    v59 = *(_QWORD *)(v79 + 56);
    v60 = swift_allocObject(&unk_1000A7BE8, 24, 7);
    swift_unknownObjectWeakInit(v60 + 16, v2);
    swift_bridgeObjectRetain(v59);
    swift_retain(v60);
    v61 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v59);
    *(_QWORD *)&v86[32] = sub_10003D2DC;
    *(_QWORD *)&v86[40] = v60;
    *(_QWORD *)v86 = _NSConcreteStackBlock;
    *(_QWORD *)&v86[8] = 1107296256;
    *(_QWORD *)&v86[16] = sub_100011720;
    *(_QWORD *)&v86[24] = &unk_1000A7D68;
    v62 = _Block_copy(v86);
    v63 = objc_msgSend(v81, "actionWithTitle:style:handler:", v61, 1, v62);

    _Block_release(v62);
    v64 = *(_QWORD *)&v86[40];
    swift_release(v60);
    swift_release(v64);
    v65 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_skipAction];
    *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_skipAction] = v63;

    v66 = v58;
    v67 = (uint64_t)v82;
    sub_10003CC88(v66, (uint64_t)v82, type metadata accessor for HeadphoneViewModel);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*((_QWORD *)v80 - 1) + 56))(v67, 0, 1);
    v68 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel];
    swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel], v86, 33, 0);
    sub_10003251C(v67, v68);
    swift_endAccess(v86);
    v69 = (uint64_t)sub_1000389F4();
    v70 = v69;
    if ((unint64_t)v69 >> 62)
    {
      if (v69 < 0)
        v75 = v69;
      else
        v75 = v69 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v69);
      v71 = _CocoaArrayWrapper.endIndex.getter(v75);
      if (v71)
        goto LABEL_13;
    }
    else
    {
      v71 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v69);
      if (v71)
      {
LABEL_13:
        if (v71 >= 1)
        {
          for (i = 0; i != v71; ++i)
          {
            if ((v70 & 0xC000000000000001) != 0)
              v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v70);
            else
              v73 = *(id *)(v70 + 8 * i + 32);
            v74 = v73;
            objc_msgSend(v73, "setAlpha:", 0.0);

          }
          goto LABEL_23;
        }
        __break(1u);
        goto LABEL_26;
      }
    }
LABEL_23:

    swift_bridgeObjectRelease_n(v70, 2);
  }
}

uint64_t sub_10003A1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  unsigned int v31;
  uint64_t v32;
  id v33;
  unsigned int v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50[24];

  v1 = sub_100009F00(&qword_1000B7F10);
  __chkstk_darwin(v1, v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HeadphoneAssets.Feature(0);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  __chkstk_darwin(v5, v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v9, v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for HeadphoneViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  v16 = __chkstk_darwin(v13, v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v19);
  v21 = (char *)&v45 - v20;
  v22 = v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel, v50, 0, 0);
  sub_10001B868(v22, (uint64_t)v12, &qword_1000B8C40);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v23(v12, 1, v13) != 1)
  {
    v45 = v8;
    v46 = v4;
    v47 = v0;
    sub_10003D1CC((uint64_t)v12, (uint64_t)v21, type metadata accessor for HeadphoneViewModel);
    v28 = *(_QWORD *)&v21[*(int *)(v13 + 80)];
    v29 = (void *)objc_opt_self(SFHeadphoneProduct);
    v30 = objc_msgSend(v29, "b768e");
    v31 = objc_msgSend(v30, "productID");

    sub_10003CC88((uint64_t)v21, (uint64_t)v18, type metadata accessor for HeadphoneViewModel);
    if (v28 == v31)
    {
      sub_10000EC60((uint64_t)v18, type metadata accessor for HeadphoneViewModel);
    }
    else
    {
      v32 = *(_QWORD *)&v18[*(int *)(v13 + 80)];
      v33 = objc_msgSend(v29, "b768e");
      v34 = objc_msgSend(v33, "altProductID");

      sub_10000EC60((uint64_t)v18, type metadata accessor for HeadphoneViewModel);
      if (v32 != v34)
      {
        sub_10000EC60((uint64_t)v21, type metadata accessor for HeadphoneViewModel);
        v4 = v46;
        v0 = v47;
        v8 = v45;
        goto LABEL_3;
      }
    }
    Strong = swift_unknownObjectWeakLoadStrong(v47 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_presenter);
    if (Strong)
    {
      v36 = Strong;
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v37 = type metadata accessor for Logger(0);
      v38 = sub_1000093F8(v37, (uint64_t)qword_1000B9F80);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Requested post pairing view", v41, 2u);
        swift_slowDealloc(v41, -1, -1);
      }

      sub_100072410(1);
      swift_unknownObjectRelease(v36);
    }
    v42 = type metadata accessor for HeadphoneViewModel;
    v43 = (uint64_t)v21;
    return sub_10000EC60(v43, v42);
  }
  sub_100017E48((uint64_t)v12, &qword_1000B8C40);
LABEL_3:
  if (v23((char *)v22, 1, v13)
    || (v24 = v22 + *(int *)(v13 + 44),
        v25 = type metadata accessor for HeadphoneAssets(0),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25)))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v4, 1, 1, v49);
    goto LABEL_6;
  }
  sub_10001B868(v24 + *(int *)(v25 + 28), (uint64_t)v4, &qword_1000B7F10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v4, 1, v49) != 1)
  {
    sub_10003D1CC((uint64_t)v4, (uint64_t)v8, type metadata accessor for HeadphoneAssets.Feature);
    sub_10003A640((uint64_t)v8, v44);
    v43 = (uint64_t)v8;
    v42 = type metadata accessor for HeadphoneAssets.Feature;
    return sub_10000EC60(v43, v42);
  }
LABEL_6:
  sub_100017E48((uint64_t)v4, &qword_1000B7F10);
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_presenter);
  if (result)
  {
    v27 = result;
    sub_100074F94();
    return swift_unknownObjectRelease(v27);
  }
  return result;
}

void sub_10003A640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void ***v30;
  uint64_t v31;
  _QWORD *v32;
  void **v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void **v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  void **v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  void **v47;
  void **v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  id v55;
  void *v56;
  void **v57;
  uint64_t v58;
  void (*v59)();
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void ***v66;
  void **v67;
  void **v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void **v72;
  uint64_t v73;
  void *v74;
  void **v75;
  id v76;
  uint64_t v77;
  void **v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  void ***v85;
  uint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  __int128 v91;
  void **v92;
  uint64_t v93;
  __int128 v94;
  void (*v95)();
  uint64_t v96;
  void **v97;
  _BYTE v98[216];
  _BYTE v99[216];
  char v100[32];

  ObjectType = swift_getObjectType(v2, a2);
  v5 = type metadata accessor for HeadphoneAssets.Feature(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5, v8);
  v11 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v2 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel);
  if (!v12)
    return;
  v13 = *(void **)(v9 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody);
  if (!v13)
    return;
  v14 = v9 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel;
  v89 = v9;
  *(_QWORD *)&v91 = v10;
  swift_beginAccess(v9 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel, v100, 0, 0);
  v15 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    return;
  sub_10003CFDC(v14 + *(int *)(v15 + 56), (uint64_t)v98, &qword_1000B8508);
  sub_10003CFDC((uint64_t)v98, (uint64_t)v99, &qword_1000B8508);
  if (sub_10001B850((uint64_t)v99) == 1)
    return;
  v16 = v99[104];
  v88 = v12;
  v87 = v13;
  if (v16 == 1)
    sub_10003AD4C();
  v17 = swift_allocObject(&unk_1000A7B98, 24, 7);
  swift_unknownObjectUnownedInit(v17 + 16, v89);
  sub_10003CC88(a1, (uint64_t)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeadphoneAssets.Feature);
  v90 = a1;
  v18 = *(unsigned __int8 *)(v6 + 80);
  v19 = (v18 + 24) & ~v18;
  v85 = (void ***)(v18 | 7);
  v86 = v7 + 7;
  v20 = (v7 + 7 + v19) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1000A7BC0, v22 + 8, v18 | 7);
  *(_QWORD *)(v23 + 16) = v17;
  sub_10003D1CC((uint64_t)v11, v23 + v19, type metadata accessor for HeadphoneAssets.Feature);
  *(_QWORD *)(v23 + v20) = v88;
  v24 = v87;
  *(_QWORD *)(v23 + v21) = v87;
  *(_QWORD *)(v23 + v22) = ObjectType;
  v25 = swift_allocObject(&unk_1000A7BE8, 24, 7);
  v26 = v89;
  swift_unknownObjectWeakInit(v25 + 16, v89);
  sub_10003CC88(v90, (uint64_t)v11, type metadata accessor for HeadphoneAssets.Feature);
  v27 = (v18 + 16) & ~v18;
  v28 = (v86 + v27) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_1000A7C10, v28 + 8, v85);
  sub_10003D1CC((uint64_t)v11, v29 + v27, type metadata accessor for HeadphoneAssets.Feature);
  v86 = v29;
  *(_QWORD *)(v29 + v28) = v25;
  v30 = (void ***)(v26 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView);
  swift_beginAccess(v26 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView, &v92, 33, 0);
  if (*v30)
  {
    v31 = swift_allocObject(&unk_1000A7BE8, 24, 7);
    swift_unknownObjectWeakInit(v31 + 16, v26);
    v32 = (_QWORD *)swift_allocObject(&unk_1000A7C38, 40, 7);
    v32[2] = v31;
    v32[3] = sub_10003CD9C;
    v32[4] = v23;
    v33 = *v30;
    v34 = v30[1];
    v36 = swift_getObjectType(*v30, v35);
    v97 = v33;
    v37 = v88;
    v38 = v24;
    swift_retain(v31);
    swift_retain(v23);
    v39 = v33;
    dispatch thunk of VideoPlaybackControllable.startedHandler.setter(sub_10003CF50, v32, v36, v34);
    v40 = *v30;
    *v30 = v97;
    v30[1] = v34;
    swift_release(v31);

    v41 = v23;
    if (*v30)
    {
      v42 = swift_allocObject(&unk_1000A7BE8, 24, 7);
      swift_unknownObjectWeakInit(v42 + 16, v89);
      v43 = *v30;
      v44 = v30[1];
      v46 = swift_getObjectType(*v30, v45);
      v97 = v43;
      swift_retain(v42);
      v47 = v43;
      dispatch thunk of VideoPlaybackControllable.completedHandler.setter(sub_10003CF5C, v42, v46, v44);
      v48 = *v30;
      *v30 = v97;
      v30[1] = v44;
      swift_release(v42);

    }
  }
  else
  {
    v49 = v88;
    v50 = v24;
    v41 = v23;
  }
  v85 = v30;
  swift_endAccess(&v92);
  v90 = *(_QWORD *)(v90 + *(int *)(v91 + 20));
  if (v90 >> 62)
  {
    if ((v90 & 0x8000000000000000) != 0)
      v64 = v90;
    else
      v64 = v90 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v90);
    v51 = _CocoaArrayWrapper.endIndex.getter(v64);
    v84 = v41;
    if (v51)
      goto LABEL_13;
  }
  else
  {
    v51 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v90);
    v84 = v41;
    if (v51)
    {
LABEL_13:
      if (v51 < 1)
      {
        __break(1u);
        return;
      }
      v52 = 0;
      v53 = v90 & 0xC000000000000001;
      v54 = _swiftEmptyArrayStorage;
      do
      {
        if (v53)
          v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v52, v90);
        else
          v55 = *(id *)(v90 + 8 * v52 + 32);
        v56 = v55;
        objc_msgSend(v55, "CMTimeRangeValue");
        v57 = v92;
        v58 = v93;
        v91 = v94;
        v59 = v95;
        v60 = v96;
        if ((swift_isUniquelyReferenced_nonNull_native(v54) & 1) == 0)
          v54 = sub_100082190(0, v54[2] + 1, 1, v54);
        v62 = v54[2];
        v61 = v54[3];
        if (v62 >= v61 >> 1)
          v54 = sub_100082190((_QWORD *)(v61 > 1), v62 + 1, 1, v54);
        v54[2] = v62 + 1;
        v63 = &v54[6 * v62];
        v63[4] = v57;
        ++v52;
        v63[5] = v58;
        *((_OWORD *)v63 + 3) = v91;
        v63[8] = v59;
        v63[9] = v60;

      }
      while (v51 != v52);
      goto LABEL_29;
    }
  }
  v54 = _swiftEmptyArrayStorage;
LABEL_29:
  swift_bridgeObjectRelease(v90);
  v66 = v85;
  v67 = *v85;
  if (*v85)
  {
    v68 = v85[1];
    v69 = swift_getObjectType(*v85, v65);
    v92 = v67;
    v70 = swift_allocObject(&unk_1000A7C60, 32, 7);
    v71 = v86;
    *(_QWORD *)(v70 + 16) = sub_10003CEC4;
    *(_QWORD *)(v70 + 24) = v71;
    v72 = v67;
    swift_retain(v71);
    dispatch thunk of VideoPlaybackControllable.setPlaybackNotificationTimeRanges(_:handler:)(v54, sub_10003CF88, v70, v69, v68);
    swift_bridgeObjectRelease(v54);
    swift_release(v70);

  }
  else
  {
    swift_bridgeObjectRelease(v54);
    v71 = v86;
  }
  v74 = v87;
  v75 = *v66;
  v76 = v88;
  v77 = v84;
  if (*v66)
  {
    v78 = v66[1];
    v79 = swift_getObjectType(*v66, v73);
    v92 = v75;
    dispatch thunk of VideoPlaybackControllable.transitionToFeatures()(v79, v78);
  }
  v80 = (void *)objc_opt_self(UIView);
  v81 = swift_allocObject(&unk_1000A7BE8, 24, 7);
  swift_unknownObjectWeakInit(v81 + 16, v89);
  v95 = sub_10003CFA8;
  v96 = v81;
  v92 = _NSConcreteStackBlock;
  v93 = 1107296256;
  *(_QWORD *)&v94 = sub_100012FBC;
  *((_QWORD *)&v94 + 1) = &unk_1000A7C78;
  v82 = _Block_copy(&v92);
  swift_release(v96);
  objc_msgSend(v80, "animateWithDuration:delay:options:animations:completion:", 0, v82, 0, 0.5, 0.0);
  swift_release(v71);
  swift_release(v77);

  _Block_release(v82);
}

void sub_10003AD4C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id *v3;
  int v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  NSNumber v11;
  uint64_t v12;
  Class isa;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  Class v18;
  void *v19;
  id v20;
  id v21;
  _BYTE v22[264];
  uint64_t v23[3];
  uint64_t v24;
  _BYTE v25[264];
  uint64_t v26[33];

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v3 = (id *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer);
  sub_10003CFDC(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer, (uint64_t)v25, &qword_1000B90F0);
  sub_10003CFDC((uint64_t)v25, (uint64_t)v26, &qword_1000B90F0);
  v4 = sub_10003D020(v26);
  v5 = 0.0;
  v6 = 0.0;
  v7 = 0.0;
  v8 = 0.0;
  if (v4 != 1)
    objc_msgSend(*v3, "bounds", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setFrame:", v7, v8, v5, v6);
  v9 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100088460;
  sub_100009F84(0, (unint64_t *)&qword_1000B8930, NSNumber_ptr);
  *(NSNumber *)(v10 + 32) = NSNumber.init(floatLiteral:)(0.16825);
  *(NSNumber *)(v10 + 40) = NSNumber.init(floatLiteral:)(0.31596);
  *(NSNumber *)(v10 + 48) = NSNumber.init(floatLiteral:)(0.67362);
  v11.super.super.isa = NSNumber.init(floatLiteral:)(0.8865).super.super.isa;
  *(NSNumber *)(v10 + 56) = v11;
  specialized Array._endMutation()(v11.super.super.isa);
  v12 = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v2, "setLocations:", isa);

  v14 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  v15 = objc_msgSend(v14, "CGColor");

  type metadata accessor for CGColor(0);
  v24 = v16;
  v23[0] = (uint64_t)v15;
  v17 = static Array._allocateBufferUninitialized(minimumCapacity:)(4, (char *)&type metadata for Any + 8);
  *(_QWORD *)(v17 + 16) = 4;
  sub_1000250C8((uint64_t)v23, v17 + 32);
  sub_1000250C8((uint64_t)v23, v17 + 64);
  sub_1000250C8((uint64_t)v23, v17 + 96);
  sub_1000324C0(v23, (_OWORD *)(v17 + 128));
  v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  objc_msgSend(v2, "setColors:", v18);

  v19 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureGradient);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureGradient) = v2;
  v20 = v2;

  sub_10003CFDC((uint64_t)v3, (uint64_t)v22, &qword_1000B90F0);
  sub_10003CFDC((uint64_t)v22, (uint64_t)v23, &qword_1000B90F0);
  if (sub_10003D020(v23) != 1)
  {
    v21 = objc_msgSend(*v3, "layer");
    objc_msgSend(v21, "setMask:", v20);

  }
}

uint64_t sub_10003B040(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t result;
  void *v11;

  if (a2 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      type metadata accessor for CGColor(0);
      v5 = static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v6 = v5 & 0xFFFFFFFFFFFFFF8;
      *(_QWORD *)(v6 + 16) = a2;
      v11 = (void *)v5;
      *(_QWORD *)(v6 + 32) = a1;
      if (a2 != 1)
      {
        *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x28) = a1;
        v7 = a2 - 2;
        if (v7)
        {
          v8 = (_QWORD *)(v6 + 48);
          do
          {
            *v8++ = a1;
            v9 = a1;
            --v7;
          }
          while (v7);
        }
        v5 = a1;
      }
    }
    else
    {
      v11 = &_swiftEmptyArrayStorage;

    }
    specialized Array._endMutation()(v5);
    return (uint64_t)v11;
  }
  return result;
}

void sub_10003B130(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_presenter);
    if (v7)
    {
      v8 = v7;
      a3();

      swift_unknownObjectRelease(v8);
    }
    else
    {

    }
  }
}

void sub_10003B1B4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v4;
  uint64_t v8;
  void *Strong;
  void *v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  NSString v24;
  void *v25;
  id v26;
  void *v27;
  Class isa;
  Class v29;
  double *v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  Class v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  _BYTE v74[264];
  uint64_t v75[2];
  uint64_t v76;
  _BYTE v77[168];
  id v78;

  v8 = a1 + 16;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a1 + 16);
  sub_10003CFDC((uint64_t)Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer, (uint64_t)v74, &qword_1000B90F0);
  sub_10003D0DC((uint64_t)v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D068);

  sub_10003CFDC((uint64_t)v74, (uint64_t)v75, &qword_1000B90F0);
  if (sub_10003D020(v75) == 1)
    return;
  v10 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
  objc_msgSend(v10, "setTitle:", 0);

  v11 = (char *)swift_unknownObjectUnownedLoadStrong(v8);
  v12 = *(void **)&v11[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_skipAction];
  v13 = v12;

  if (v12)
  {
    v14 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
    v15 = objc_msgSend(v14, "addAction:", v13);

  }
  v16 = swift_unknownObjectUnownedLoadStrong(v8);
  v17 = *(id *)(v16 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_connectAction);
  v18 = v17;

  if (v17)
  {
    v16 = swift_unknownObjectUnownedLoadStrong(v8);
    objc_msgSend((id)v16, "removeAction:", v18);

  }
  v19 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
  objc_msgSend(v19, "hideActivityIndicator");

  v20 = *(_QWORD **)(a2 + *(int *)(type metadata accessor for HeadphoneAssets.Feature(0) + 24));
  if (v20[2])
  {
    v21 = v20[5];
    v22 = v20[7];
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    v23 = String._bridgeToObjectiveC()();
    objc_msgSend(a3, "setText:", v23);
    swift_bridgeObjectRelease(v21);

    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
    objc_msgSend(a4, "setText:", v24);

    v25 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
    v26 = objc_msgSend(v25, "view");

    if (!v26)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      return;
    }
    v27 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v27, "deactivateConstraints:", isa);

    v29 = Array._bridgeToObjectiveC()().super.isa;
    v73 = v27;
    objc_msgSend(v27, "activateConstraints:", v29);

    if ((v77[48] & 1) == 0)
    {
      v30 = (double *)&v76;
      if (!v77[16])
        v30 = (double *)v77;
      objc_msgSend(v78, "setConstant:", *v30);
    }
    v72 = a4;

    v31 = sub_100009F00((uint64_t *)&unk_1000B8730);
    v16 = swift_allocObject(v31, 88, 7);
    *(_OWORD *)(v16 + 16) = xmmword_1000898E0;
    v17 = objc_msgSend(a3, "topAnchor");
    v4 = objc_msgSend((id)v75[1], "bottomAnchor");
    if (qword_1000B7B78 == -1)
      goto LABEL_13;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1000B7B78, sub_1000389E4);
LABEL_13:
  v32 = objc_msgSend(v17, "constraintGreaterThanOrEqualToAnchor:constant:", v4, *(double *)&qword_1000B9068);

  *(_QWORD *)(v16 + 32) = v32;
  v33 = objc_msgSend(a3, "leadingAnchor");
  v34 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
  v35 = objc_msgSend(v34, "contentView");

  v36 = objc_msgSend(v35, "mainContentGuide");
  v37 = objc_msgSend(v36, "leadingAnchor");

  v38 = objc_msgSend(v33, "constraintEqualToAnchor:", v37);
  *(_QWORD *)(v16 + 40) = v38;
  v39 = objc_msgSend(a3, "trailingAnchor");
  v40 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
  v41 = objc_msgSend(v40, "contentView");

  v42 = objc_msgSend(v41, "mainContentGuide");
  v43 = objc_msgSend(v42, "trailingAnchor");

  v44 = objc_msgSend(v39, "constraintEqualToAnchor:", v43);
  *(_QWORD *)(v16 + 48) = v44;
  v45 = objc_msgSend(v72, "topAnchor");
  v46 = objc_msgSend(a3, "bottomAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, PRXMinimumInterItemMargin);

  *(_QWORD *)(v16 + 56) = v47;
  v48 = objc_msgSend(v72, "leadingAnchor");
  v49 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
  v50 = objc_msgSend(v49, "contentView");

  v51 = objc_msgSend(v50, "mainContentGuide");
  v52 = objc_msgSend(v51, "leadingAnchor");

  v53 = objc_msgSend(v48, "constraintEqualToAnchor:", v52);
  *(_QWORD *)(v16 + 64) = v53;
  v54 = objc_msgSend(v72, "trailingAnchor");
  v55 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
  v56 = objc_msgSend(v55, "contentView");

  v57 = objc_msgSend(v56, "mainContentGuide");
  v58 = objc_msgSend(v57, "trailingAnchor");

  v59 = objc_msgSend(v54, "constraintEqualToAnchor:", v58);
  *(_QWORD *)(v16 + 72) = v59;
  v60 = objc_msgSend(v72, "bottomAnchor");
  v61 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
  v62 = objc_msgSend(v61, "contentView");

  v63 = objc_msgSend(v62, "mainContentGuide");
  v64 = objc_msgSend(v63, "bottomAnchor");

  v65 = objc_msgSend(v60, "constraintEqualToAnchor:", v64);
  *(_QWORD *)(v16 + 80) = v65;
  specialized Array._endMutation()(v66);
  v67 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  objc_msgSend(v73, "activateConstraints:", v67);

  v68 = (void *)swift_unknownObjectUnownedLoadStrong(v8);
  v69 = objc_msgSend(v68, "navigationController");

  if (v69)
  {
    v70 = objc_msgSend(v69, "parentViewController");

    if (v70)
    {
      v71 = objc_msgSend(v70, "view");

      if (v71)
      {
        objc_msgSend(v71, "layoutIfNeeded");
        sub_10003D0DC((uint64_t)v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D158);

        return;
      }
      goto LABEL_22;
    }
  }
  sub_10003D0DC((uint64_t)v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D158);
}

void sub_10003BA28(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  NSString v19;
  void *v20;
  id v21;
  char *v22;
  void *v23;
  void *v24;
  id v25;
  NSString v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char v40[24];
  char v41[24];
  char v42[24];
  _QWORD aBlock[5];
  uint64_t v44;

  if ((a2 & 1) != 0)
    v10 = 0.5;
  else
    v10 = 0.1667;
  v11 = type metadata accessor for HeadphoneAssets.Feature(0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v12 = v11;
  v13 = *(_QWORD *)(a3 + *(int *)(v11 + 24));
  if (*(_QWORD *)(v13 + 16) <= a1)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    if (v5 < 0)
      v38 = v5;
    else
      v38 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v39 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v5);
    v35 = v39 - 1;
    if (!__OFSUB__(v39, 1))
      goto LABEL_23;
    goto LABEL_35;
  }
  v4 = a4 + 16;
  v14 = 0.0;
  if ((a2 & 1) == 0)
    goto LABEL_21;
  v15 = v13 + 32 * a1;
  v16 = *(_QWORD *)(v15 + 40);
  v17 = *(_QWORD *)(v15 + 56);
  swift_beginAccess(a4 + 16, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4 + 16);
  if (Strong)
  {
    v19 = (NSString)Strong;
    v20 = *(void **)(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel);
    if (v20)
    {
      swift_bridgeObjectRetain_n(v16, 2);
      swift_bridgeObjectRetain(v17);
      v21 = v20;

      v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v16);
      objc_msgSend(v21, "setText:", v19);

    }
    else
    {
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v17);
    }

  }
  else
  {
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
  }
  swift_beginAccess(a4 + 16, v41, 0, 0);
  v22 = (char *)swift_unknownObjectWeakLoadStrong(a4 + 16);
  if (v22)
  {
    v23 = v22;
    v24 = *(void **)&v22[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody];
    if (v24)
    {
      v25 = v24;
      swift_bridgeObjectRelease(v16);

      v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      objc_msgSend(v25, "setText:", v26);

      goto LABEL_18;
    }

  }
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);
LABEL_18:
  swift_beginAccess(a4 + 16, v40, 0, 0);
  v27 = (void *)swift_unknownObjectWeakLoadStrong(a4 + 16);
  v14 = 1.0;
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, "view");

    if (!v29)
    {
LABEL_36:
      __break(1u);
      return;
    }
    objc_msgSend(v29, "setNeedsLayout");

  }
LABEL_21:
  v30 = (void *)objc_opt_self(UIView);
  v31 = swift_allocObject(&unk_1000A7D00, 32, 7);
  *(_QWORD *)(v31 + 16) = a4;
  *(double *)(v31 + 24) = v14;
  aBlock[4] = sub_10003D05C;
  v44 = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FBC;
  aBlock[3] = &unk_1000A7D18;
  v32 = _Block_copy(aBlock);
  v33 = v44;
  swift_retain(a4);
  swift_release(v33);
  objc_msgSend(v30, "animateWithDuration:delay:options:animations:completion:", 0, v32, 0, v10, 0.0);
  _Block_release(v32);
  v5 = *(_QWORD *)(a3 + *(int *)(v12 + 20));
  if ((unint64_t)v5 >> 62)
    goto LABEL_30;
  v34 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v35 = v34 - 1;
  if (__OFSUB__(v34, 1))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_23:
  if (v35 == a1 && (a2 & 1) == 0)
  {
    swift_beginAccess(v4, aBlock, 0, 0);
    v36 = swift_unknownObjectWeakLoadStrong(v4);
    if (v36)
    {
      v37 = (void *)v36;
      sub_10003C02C(0, 2.0);

    }
  }
}

void sub_10003BDCC(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t j;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (uint64_t)sub_1000389F4();

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v11 = v6;
      else
        v11 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v11);
      if (v7)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v6);
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
        for (i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
          else
            v9 = *(id *)(v6 + 8 * i + 32);
          v10 = v9;
          objc_msgSend(v9, "setAlpha:", a2);

        }
      }
    }
    swift_bridgeObjectRelease_n(v6, 2);
  }
  swift_beginAccess(v3, &v23, 0, 0);
  v12 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (!v12)
    return;
  v13 = v12;
  v14 = objc_msgSend(v12, "contentView");

  v15 = objc_msgSend(v14, "auxiliaryViews");
  if (!v15)
  {
LABEL_33:
    __break(1u);
    return;
  }
  v16 = sub_100009F84(0, &qword_1000B8598, UIView_ptr);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v22 = v17;
    else
      v22 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v22);
    if (v18)
    {
LABEL_19:
      if (v18 >= 1)
      {
        for (j = 0; j != v18; ++j)
        {
          if ((v17 & 0xC000000000000001) != 0)
            v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v17);
          else
            v20 = *(id *)(v17 + 8 * j + 32);
          v21 = v20;
          objc_msgSend(v20, "setAlpha:", 1.0);

        }
        goto LABEL_29;
      }
      goto LABEL_32;
    }
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v17);
    if (v18)
      goto LABEL_19;
  }
LABEL_29:
  swift_bridgeObjectRelease_n(v17, 2);
}

void sub_10003C02C(char a1, double a2)
{
  uint64_t v2;
  void *v3;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  Class isa;
  NSArray v30;
  double v31;
  Class v32;
  void *v33;
  id v34;
  id v35;
  id v36;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureGradient);
  if (v3)
  {
    v6 = v3;
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "removeAnimationForKey:", v7);

    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v8);

    specialized ContiguousArray.reserveCapacity(_:)(4);
    v10 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 1.0);
    v11 = objc_msgSend(v10, "CGColor");

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    v12 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
    v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
    specialized ContiguousArray._endMutation()(v13);
    v14 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.949);
    v15 = objc_msgSend(v14, "CGColor");

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    v16 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
    v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
    specialized ContiguousArray._endMutation()(v17);
    v18 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.3188);
    v19 = objc_msgSend(v18, "CGColor");

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    v20 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
    v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v19);
    specialized ContiguousArray._endMutation()(v21);
    v22 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.0);
    v23 = objc_msgSend(v22, "CGColor");

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    v24 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
    v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v23);
    specialized ContiguousArray._endMutation()(v25);
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    v27 = objc_msgSend(v26, "CGColor");

    v28 = sub_10003B040(v27, 4);
    type metadata accessor for CGColor(0);
    if ((a1 & 1) != 0)
    {
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v28);
      objc_msgSend(v9, "setFromValue:", isa);

      v30.super.isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v31 = swift_release(_swiftEmptyArrayStorage).n128_u64[0];
    }
    else
    {
      v32 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, "setFromValue:", v32, swift_release(_swiftEmptyArrayStorage).n128_f64[0]);

      v30.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v28);
    }
    objc_msgSend(v9, "setToValue:", v30.super.isa, v31);

    objc_msgSend(v9, "setDuration:", a2);
    v33 = (void *)objc_opt_self(CAMediaTimingFunction);
    v34 = v9;
    v35 = objc_msgSend(v33, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
    objc_msgSend(v34, "setTimingFunction:", v35);

    objc_msgSend(v34, "setRemovedOnCompletion:", 0);
    objc_msgSend(v34, "setFillMode:", kCAFillModeForwards);
    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "addAnimation:forKey:", v34, v36);

  }
}

void sub_10003C500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD aBlock[5];
  uint64_t v13;
  char v14[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_10003C02C(1, 0.5);

  }
  v8 = (void *)objc_opt_self(UIView);
  v9 = swift_allocObject(&unk_1000A7CB0, 32, 7);
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  aBlock[4] = sub_10003CF88;
  v13 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FBC;
  aBlock[3] = &unk_1000A7CC8;
  v10 = _Block_copy(aBlock);
  v11 = v13;
  swift_retain(a3);
  swift_release(v11);
  objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 0, v10, 0, 0.5, 0.0);
  _Block_release(v10);
}

void sub_10003C614(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_presenter);

    if (v4)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v5 = type metadata accessor for Logger(0);
      v6 = sub_1000093F8(v5, (uint64_t)qword_1000B9F80);
      v7 = Logger.logObject.getter(v6);
      v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Requested post pairing view", v9, 2u);
        swift_slowDealloc(v9, -1, -1);
      }

      sub_100072410(1);
      swift_unknownObjectRelease(v4);
    }
  }
}

void sub_10003C740(uint64_t a1, double a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "contentView");

    v7 = objc_msgSend(v6, "titleView");
    if (v7)
    {
      objc_msgSend(v7, "setAlpha:", a2);

    }
  }
  swift_beginAccess(v3, &v19, 0, 0);
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "contentView");

    v11 = objc_msgSend(v10, "auxiliaryViews");
    if (!v11)
      goto LABEL_21;
    v12 = sub_100009F84(0, &qword_1000B8598, UIView_ptr);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v18 = v13;
      else
        v18 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v13);
      if (v14)
      {
LABEL_8:
        if (v14 >= 1)
        {
          for (i = 0; i != v14; ++i)
          {
            if ((v13 & 0xC000000000000001) != 0)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
            else
              v16 = *(id *)(v13 + 8 * i + 32);
            v17 = v16;
            objc_msgSend(v16, "setAlpha:", a2);

          }
          goto LABEL_18;
        }
        __break(1u);
LABEL_21:
        __break(1u);
        return;
      }
    }
LABEL_18:
    swift_bridgeObjectRelease_n(v13, 2);
  }
}

uint64_t sub_10003CA50()
{
  return type metadata accessor for HeadphoneConnectViewController(0);
}

uint64_t type metadata accessor for HeadphoneConnectViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B90E0;
  if (!qword_1000B90E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphoneConnectViewController);
  return result;
}

void sub_10003CA94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_100089970;
  v4[1] = &unk_100089988;
  v4[2] = &unk_1000899A0;
  v4[3] = &unk_1000899B8;
  v4[4] = &unk_1000899B8;
  sub_10001B534(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    v4[6] = &unk_1000899B8;
    v4[7] = &unk_1000899B8;
    v4[8] = &unk_1000899B8;
    v4[9] = &unk_1000899D0;
    v4[10] = &unk_1000899E8;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

uint64_t sub_10003CB44()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_type);
}

void sub_10003CB54(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  _BYTE v11[24];

  v3 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v3, v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10003CC88(a1, (uint64_t)v6, type metadata accessor for HeadphoneViewModel);
  v7 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  v8 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel], v11, 33, 0);
  sub_10003251C((uint64_t)v6, v8);
  swift_endAccess(v11);
  if (*(_QWORD *)(a1 + 72))
  {
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "showActivityIndicatorWithStatus:", v9);

  }
}

uint64_t sub_10003CC54(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_10003CC64()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003CC88(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003CCCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for HeadphoneAssets.Feature(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v8 = v0 + v4;
  v9 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + *(int *)(v1 + 20)));
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + *(int *)(v1 + 24)));

  return swift_deallocObject(v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_10003CD9C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for HeadphoneAssets.Feature(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10003B1B4(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10003CDF8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003CE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for HeadphoneAssets.Feature(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;
  v8 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + *(int *)(v1 + 20)));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + *(int *)(v1 + 24)));
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10003CEC4(unint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for HeadphoneAssets.Feature(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_10003BA28(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10003CF24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10003CF50()
{
  uint64_t *v0;

  sub_10003C500(v0[2], v0[3], v0[4]);
}

void sub_10003CF5C()
{
  uint64_t v0;

  sub_10003C614(v0);
}

uint64_t sub_10003CF64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003CF88()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_10003CFA8()
{
  uint64_t v0;

  sub_10003C740(v0, 0.0);
}

uint64_t sub_10003CFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10003CFD4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10003CFDC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100009F00(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003D020(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_10003D038()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10003D05C()
{
  uint64_t v0;

  sub_10003BDCC(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

void *sub_10003D068(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33)
{
  id v34;
  id v35;
  id v36;

  if (result)
  {
    v34 = result;
    v35 = a2;
    swift_bridgeObjectRetain(a22);
    swift_bridgeObjectRetain(a24);
    v36 = a31;
    swift_bridgeObjectRetain(a32);
    return (void *)swift_bridgeObjectRetain(a33);
  }
  return result;
}

uint64_t sub_10003D0DC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 224);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    *(_QWORD *)(a1 + 256));
  return a1;
}

void *sub_10003D158(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33)
{
  if (result)
  {

    swift_bridgeObjectRelease(a22);
    swift_bridgeObjectRelease(a24);

    swift_bridgeObjectRelease(a32);
    return (void *)swift_bridgeObjectRelease(a33);
  }
  return result;
}

uint64_t sub_10003D1CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_10003D210(uint64_t a1)
{
  uint64_t v1;

  sub_10003B130(a1, v1, sub_100072870);
}

uint64_t sub_10003D230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result;

  result = a20;
  if (a20)
  {
    swift_bridgeObjectRetain(a20);
    return swift_bridgeObjectRetain(a22);
  }
  return result;
}

_QWORD *sub_10003D268(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26]);
  return a1;
}

void sub_10003D2DC(uint64_t a1)
{
  uint64_t v1;

  sub_10003B130(a1, v1, (void (*)(void))sub_100074F94);
}

uint64_t sub_10003D2FC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 168);
  v4 = *(_QWORD *)(a1 + 184);
  v6 = *(void **)(a1 + 240);
  v5 = *(_QWORD *)(a1 + 248);
  v7 = *(_QWORD *)(a1 + 256);
  v8 = *(id *)a1;
  v9 = v2;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v10 = v6;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  return a1;
}

id sub_10003D374(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  objc_super v11;
  _BYTE v12[272];

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_shouldFadeInElements] = 1;
  v5 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer];
  sub_10003D4A0((uint64_t)v12);
  sub_10003CFDC((uint64_t)v12, v5, &qword_1000B90F0);
  v6 = &v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView];
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody] = 0;
  v7 = &v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel];
  v8 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_connectAction] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_skipAction] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureGradient] = 0;
  v9 = &v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_presenter];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_type] = 3;
  v11.receiver = v2;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, "initWithContentView:", a1);
}

double sub_10003D4A0(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 256) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void sub_10003D4CC()
{
  uint64_t v0;

  sub_10003C740(v0, 1.0);
}

void sub_10003D514(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_10003D56C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v4 = BYTE6(v24);
  if (BYTE6(v24))
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = BYTE6(v24);
    v6 = sub_100082708(0, BYTE6(v24), 0);
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v7 = (int)a1;
      else
        v7 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v7 = 0;
    }
    *(_QWORD *)(v3 - 136) = v24 & 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v7 < (int)a1 || v7 >= a1 >> 32)
            goto LABEL_29;
          v8 = ((uint64_t (*)(uint64_t))__DataStorage._bytes.getter)(v6);
          if (!v8)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v9 = v8;
          v10 = ((uint64_t (*)(void))__DataStorage._offset.getter)();
          v11 = v7 - v10;
          if (__OFSUB__(v7, v10))
            goto LABEL_32;
        }
        else
        {
          if (v7 < *(_QWORD *)(a1 + 16))
            goto LABEL_31;
          if (v7 >= *(_QWORD *)(a1 + 24))
            goto LABEL_33;
          v13 = ((uint64_t (*)(uint64_t))__DataStorage._bytes.getter)(v6);
          if (!v13)
            goto LABEL_36;
          v9 = v13;
          v14 = ((uint64_t (*)(void))__DataStorage._offset.getter)();
          v11 = v7 - v14;
          if (__OFSUB__(v7, v14))
            goto LABEL_34;
        }
        v12 = *(_BYTE *)(v9 + v11);
      }
      else
      {
        if (v7 >= BYTE6(v24))
          goto LABEL_30;
        *(_QWORD *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v24;
        *(_BYTE *)(v3 - 108) = BYTE2(v24);
        *(_BYTE *)(v3 - 107) = BYTE3(v24);
        *(_BYTE *)(v3 - 106) = BYTE4(v24);
        *(_BYTE *)(v3 - 105) = BYTE5(v24);
        v12 = *(_BYTE *)(v3 - 118 + v7);
      }
      v15 = sub_100009F00(&qword_1000B9340);
      v16 = swift_allocObject(v15, 72, 7);
      *(_OWORD *)(v16 + 16) = xmmword_100087710;
      *(_QWORD *)(v16 + 56) = &type metadata for UInt8;
      *(_QWORD *)(v16 + 64) = &protocol witness table for UInt8;
      *(_BYTE *)(v16 + 32) = v12;
      v6 = String.init(format:_:)(2016555045, 0xE400000000000000, v16);
      v17 = v6;
      v19 = v18;
      *(_QWORD *)(v3 - 104) = v2;
      v21 = *(_QWORD *)(v2 + 16);
      v20 = *(_QWORD *)(v2 + 24);
      if (v21 >= v20 >> 1)
      {
        v6 = sub_100082708(v20 > 1, v21 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v21 + 1;
      v22 = v2 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
      ++v7;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x10003D880);
  }
  return v2;
}

uint64_t sub_10003D8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B90F8);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B90F8);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_10003D938()
{
  uint64_t result;
  uint64_t v1;

  result = sub_10004DCC4((uint64_t)&off_1000A5890);
  qword_1000B9110 = result;
  *(_QWORD *)algn_1000B9118 = v1;
  return result;
}

uint64_t sub_10003D960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];

  v3 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v3, v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v13, 33, 0);
  sub_10004D348(a1, v7);
  swift_endAccess(v13);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
  if (Strong)
  {
    v9 = Strong;
    sub_1000135B0(v7, (uint64_t)v6);
    v10 = v9 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess(v9 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v13, 33, 0);
    sub_10004D348((uint64_t)v6, v10);
    swift_endAccess(v13);
    sub_100077794();
    sub_100071680();
    sub_100077BC8();
    swift_unknownObjectRelease(v9);
    sub_100013638((uint64_t)v6);
  }
  return sub_100013638(a1);
}

uint64_t sub_10003DA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager;
  v7 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager);
  if (v7)
  {
    v8 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager);
  }
  else
  {
    sub_100009F84(0, &qword_1000B9398, CKContainer_ptr);
    v9 = static CKContainer.AirTagsContainer.getter();
    v10 = static CKContainer.PersonalizationManateeContainer.getter();
    type metadata accessor for PersonalizationAssetManager(0);
    static PersonalizationAssetManager.defaultCacheDirectory.getter();
    v8 = PersonalizationAssetManager.__allocating_init(container:manateeContainer:cacheDirectory:)(v9, v10, v5);
    v11 = *(_QWORD *)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v8;
    swift_retain(v8);
    swift_release(v11);
    v7 = 0;
  }
  swift_retain(v7);
  return v8;
}

uint64_t sub_10003DB5C(uint64_t a1, uint64_t a2)
{
  return sub_10003EF08(a1, a2, (void (*)(uint64_t))sub_10003DB68);
}

void sub_10003DB68(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  os_log_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  int v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  id v107;
  void *v108;
  id v109;
  id v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  _QWORD *v116;
  char v117;
  int *v118;
  id v119;
  void *v120;
  id v121;
  unint64_t v122;
  unint64_t v123;
  int *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  os_log_t v130;
  uint64_t v131;
  void (*v132)(char *, char *, uint64_t);
  id v133;
  void (*v134)(uint64_t, uint64_t, uint64_t);
  char *v135;
  uint64_t v136;
  char *v137;
  void (*v138)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  int v149;
  uint64_t v150[5];
  __int128 v151;
  __int128 v152;
  char v153[16];

  v142 = (int *)type metadata accessor for HeadphoneModel(0);
  v3 = __chkstk_darwin(v142, v2);
  v140 = (uint64_t)&v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v5);
  v7 = (char *)&v129 - v6;
  v8 = sub_100009F00(&qword_1000B93A0);
  __chkstk_darwin(v8, v9);
  v11 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100009F00(&qword_1000B8A30);
  v14 = __chkstk_darwin(v12, v13);
  v141 = (uint64_t)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14, v16);
  v19 = (uint64_t)&v129 - v18;
  v21 = __chkstk_darwin(v17, v20);
  v23 = (char *)&v129 - v22;
  v25 = __chkstk_darwin(v21, v24);
  v144 = (uint64_t)&v129 - v26;
  __chkstk_darwin(v25, v27);
  v29 = (char *)&v129 - v28;
  v146 = type metadata accessor for UUID(0);
  v148 = *(_QWORD *)(v146 - 8);
  v31 = __chkstk_darwin(v146, v30);
  v33 = (char *)&v129 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v31, v34);
  v37 = (uint64_t)&v129 - v36;
  __chkstk_darwin(v35, v38);
  v145 = (char *)&v129 - v39;
  v147 = a1;
  v40 = objc_msgSend(a1, "bleDevice");
  if (!v40)
    return;
  v41 = v40;
  v42 = objc_msgSend(v40, "advertisementFields");

  if (!v42)
    return;
  v139 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v42, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v43 = objc_msgSend(v147, "identifier");
  if (!v43)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v148 + 56))(v29, 1, 1, v146);
    goto LABEL_17;
  }
  v44 = v43;
  v137 = v11;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v43);

  v45 = v148;
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v148 + 32);
  v47 = v146;
  v46(v29, v37, v146);
  v138 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56);
  v138(v29, 0, 1, v47);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  if (v48(v29, 1, v47) == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease(v139);
    sub_100017E48((uint64_t)v29, &qword_1000B8A30);
    return;
  }
  v135 = v7;
  v46(v145, (uint64_t)v29, v47);
  v49 = v143;
  v50 = v143 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v143 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v153, 0, 0);
  v136 = v50;
  if ((*(unsigned __int8 *)(v50 + 120) | 4) == 0xC
    && (*(_BYTE *)(v49 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_hasAutoConnected) & 1) == 0)
  {
    swift_bridgeObjectRelease(v139);
    sub_100046534(v147);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v145, v146);
    return;
  }
  v134 = (void (*)(uint64_t, uint64_t, uint64_t))v46;
  v51 = v144;
  sub_10001B868(v136 + v142[11], v144, &qword_1000B8A30);
  sub_10001B868(v51, (uint64_t)v23, &qword_1000B8A30);
  v52 = v146;
  v53 = v48(v23, 1, v146);
  v54 = (uint64_t)v23;
  v55 = v52;
  sub_100017E48(v54, &qword_1000B8A30);
  v56 = v137;
  if (v53 != 1 || (objc_msgSend(v147, "needsSetup") & 1) != 0)
    goto LABEL_27;
  v57 = objc_msgSend(v147, "bleDevice");
  if (v57
    && (v58 = v57,
        v59 = objc_msgSend(v57, "bluetoothAddress"),
        v58,
        v59))
  {
    v60 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v59);
    v62 = v61;

    sub_1000418E4(v60, v62);
    v133 = v63;
    v65 = v64;
    sub_10002931C(v60, v62);
    v66 = *(_QWORD *)(v136 + 136);
    if (v65)
    {
      if (!v66)
      {
        swift_bridgeObjectRelease(v65);
        goto LABEL_27;
      }
      v67 = *(id *)(v136 + 128);
      if (v133 == v67 && v66 == v65)
      {
        swift_bridgeObjectRelease(v65);
      }
      else
      {
        v117 = _stringCompareWithSmolCheck(_:_:expecting:)(v133, v65, v67, v66, 0);
        swift_bridgeObjectRelease(v65);
        if ((v117 & 1) == 0)
          goto LABEL_27;
      }
      goto LABEL_22;
    }
  }
  else
  {
    v66 = *(_QWORD *)(v136 + 136);
  }
  if (v66)
    goto LABEL_27;
LABEL_22:
  if (qword_1000B7B80 != -1)
    goto LABEL_91;
  while (1)
  {
    v68 = type metadata accessor for Logger(0);
    sub_1000093F8(v68, (uint64_t)qword_1000B90F8);
    v69 = *(void (**)(char *, char *, uint64_t))(v148 + 16);
    v69(v33, v145, v55);
    v133 = v147;
    v70 = Logger.logObject.getter(v133);
    v71 = static os_log_type_t.default.getter();
    v72 = v71;
    if (os_log_type_enabled(v70, v71))
    {
      v73 = swift_slowAlloc(22, -1);
      v130 = v70;
      v74 = v73;
      v131 = swift_slowAlloc(64, -1);
      v150[0] = v131;
      *(_DWORD *)v74 = 136315394;
      v129 = v74 + 4;
      v69((char *)v37, v33, v55);
      v75 = String.init<A>(reflecting:)(v37, v55);
      v132 = v69;
      v77 = v76;
      *(_QWORD *)&v151 = sub_10004B4F0(v75, v76, v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, (char *)&v151 + 8);
      swift_bridgeObjectRelease(v77);
      (*(void (**)(char *, uint64_t))(v148 + 8))(v33, v55);
      *(_WORD *)(v74 + 12) = 2080;
      LODWORD(v129) = v72;
      v78 = v133;
      *(_QWORD *)&v151 = objc_msgSend(v133, "bleDevice");
      v79 = sub_100009F00(&qword_1000B93B8);
      v80 = String.init<A>(reflecting:)(&v151, v79);
      v82 = v81;
      *(_QWORD *)&v151 = sub_10004B4F0(v80, v81, v150);
      v69 = v132;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, (char *)&v151 + 8);

      swift_bridgeObjectRelease(v82);
      v83 = v130;
      _os_log_impl((void *)&_mh_execute_header, v130, (os_log_type_t)v129, "Updating identifier to %s from %s", (uint8_t *)v74, 0x16u);
      v33 = (char *)v131;
      swift_arrayDestroy(v131, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v74, -1, -1);

    }
    else
    {
      v84 = v133;

      (*(void (**)(char *, uint64_t))(v148 + 8))(v33, v55);
    }
    v85 = v144;
    sub_100017E48(v144, &qword_1000B8A30);
    v69((char *)v85, v145, v55);
    v138((char *)v85, 0, 1, v55);
LABEL_27:
    (*(void (**)(uint64_t, char *, uint64_t))(v148 + 16))(v19, v145, v55);
    v138((char *)v19, 0, 1, v55);
    v86 = (uint64_t)&v56[*(int *)(v8 + 48)];
    sub_10001B868(v144, (uint64_t)v56, &qword_1000B8A30);
    sub_10001B868(v19, v86, &qword_1000B8A30);
    if (v48(v56, 1, v55) == 1)
    {
      sub_100017E48(v19, &qword_1000B8A30);
      v87 = v48((char *)v86, 1, v55);
      v88 = v148;
      if (v87 != 1)
        goto LABEL_32;
      sub_100017E48((uint64_t)v56, &qword_1000B8A30);
      v89 = v139;
    }
    else
    {
      v90 = v141;
      sub_10001B868((uint64_t)v56, v141, &qword_1000B8A30);
      if (v48((char *)v86, 1, v55) == 1)
      {
        sub_100017E48(v19, &qword_1000B8A30);
        v88 = v148;
        (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v90, v55);
LABEL_32:
        sub_100017E48((uint64_t)v56, &qword_1000B93A0);
        v89 = v139;
LABEL_37:
        swift_bridgeObjectRelease(v89);
        sub_100017E48(v144, &qword_1000B8A30);
        (*(void (**)(char *, uint64_t))(v88 + 8))(v145, v55);
        return;
      }
      v134(v37, v86, v55);
      v91 = sub_10000A1B0(&qword_1000B93B0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v92 = dispatch thunk of static Equatable.== infix(_:_:)(v90, v37, v55, v91);
      v93 = v148;
      v94 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
      v94(v37, v55);
      v95 = v19;
      v88 = v93;
      sub_100017E48(v95, &qword_1000B8A30);
      v94(v90, v55);
      sub_100017E48((uint64_t)v56, &qword_1000B8A30);
      v89 = v139;
      if ((v92 & 1) == 0)
        goto LABEL_37;
    }
    *(_QWORD *)&v151 = 25452;
    *((_QWORD *)&v151 + 1) = 0xE200000000000000;
    AnyHashable.init<A>(_:)(v150, &v151, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v89 + 16))
    {
      v96 = sub_100034BC4((uint64_t)v150);
      v8 = v143;
      if ((v97 & 1) != 0)
      {
        sub_1000250C8(*(_QWORD *)(v89 + 56) + 32 * v96, (uint64_t)&v151);
      }
      else
      {
        v151 = 0u;
        v152 = 0u;
      }
      v98 = (uint64_t)v135;
    }
    else
    {
      v151 = 0u;
      v152 = 0u;
      v8 = v143;
      v98 = (uint64_t)v135;
    }
    sub_10002E16C((uint64_t)v150);
    if (*((_QWORD *)&v152 + 1))
    {
      if (swift_dynamicCast(&v149, &v151, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
      {
        v19 = v149;
        goto LABEL_46;
      }
    }
    else
    {
      sub_100017E48((uint64_t)&v151, &qword_1000B87B0);
    }
    v19 = 0;
LABEL_46:
    *(_QWORD *)&v151 = 0x7375746174537368;
    *((_QWORD *)&v151 + 1) = 0xE800000000000000;
    AnyHashable.init<A>(_:)(v150, &v151, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v89 + 16))
    {
      v99 = sub_100034BC4((uint64_t)v150);
      if ((v100 & 1) != 0)
      {
        sub_1000250C8(*(_QWORD *)(v89 + 56) + 32 * v99, (uint64_t)&v151);
      }
      else
      {
        v151 = 0u;
        v152 = 0u;
      }
      v98 = (uint64_t)v135;
    }
    else
    {
      v151 = 0u;
      v152 = 0u;
    }
    swift_bridgeObjectRelease(v89);
    sub_10002E16C((uint64_t)v150);
    if (*((_QWORD *)&v152 + 1))
    {
      if (swift_dynamicCast(&v149, &v151, (char *)&type metadata for Any + 8, &type metadata for UInt32, 6))
      {
        v101 = v149;
        goto LABEL_57;
      }
    }
    else
    {
      sub_100017E48((uint64_t)&v151, &qword_1000B87B0);
    }
    v101 = 0;
LABEL_57:
    v102 = (char *)objc_msgSend(v147, "batteryInfo");
    if (!v102)
    {
      v106 = _swiftEmptyArrayStorage;
      goto LABEL_84;
    }
    v56 = v102;
    LODWORD(v139) = v101;
    v103 = sub_100009F84(0, &qword_1000B93A8, SFBatteryInfo_ptr);
    v104 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v56, v103);

    LODWORD(v141) = v19;
    if ((unint64_t)v104 >> 62)
    {
      if (v104 < 0)
        v56 = (char *)v104;
      else
        v56 = (char *)(v104 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(v104);
      v37 = _CocoaArrayWrapper.endIndex.getter(v56);
      swift_bridgeObjectRelease(v104);
      if (!v37)
      {
LABEL_82:
        v106 = _swiftEmptyArrayStorage;
        goto LABEL_83;
      }
    }
    else
    {
      v37 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v37)
        goto LABEL_82;
    }
    if (v37 >= 1)
      break;
    __break(1u);
LABEL_91:
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  }
  v105 = 0;
  v106 = _swiftEmptyArrayStorage;
  do
  {
    if ((v104 & 0xC000000000000001) != 0)
      v107 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v105, v104);
    else
      v107 = *(id *)(v104 + 8 * v105 + 32);
    v108 = v107;
    v109 = objc_msgSend(v107, "batteryState");
    v110 = objc_msgSend(v108, "batteryType");
    if ((unint64_t)v110 >= 5)
      v111 = 3;
    else
      v111 = 0x201000203uLL >> (8 * v110);
    objc_msgSend(v108, "batteryLevel");
    v113 = v112;
    if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0)
      v106 = sub_100082084(0, v106[2] + 1, 1, v106);
    v115 = v106[2];
    v114 = v106[3];
    if (v115 >= v114 >> 1)
      v106 = sub_100082084((_QWORD *)(v114 > 1), v115 + 1, 1, v106);
    ++v105;
    v106[2] = v115 + 1;
    v116 = &v106[2 * v115];
    v116[4] = v113;
    *((_BYTE *)v116 + 40) = v109 == (id)2;
    *((_BYTE *)v116 + 41) = v111;

  }
  while (v37 != v105);
LABEL_83:
  swift_bridgeObjectRelease(v104);
  v98 = (uint64_t)v135;
  v55 = v146;
  LOBYTE(v19) = v141;
  v101 = v139;
LABEL_84:
  sub_1000135B0(v136, v98);
  v118 = v142;
  *(_BYTE *)(v98 + v142[22]) = v19;
  *(_DWORD *)(v98 + v118[28]) = v101;
  v119 = objc_msgSend(v147, "bleDevice");
  v120 = v119;
  if (v119)
  {
    v121 = objc_msgSend(v119, "name");

    if (v121)
    {
      v120 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
      v123 = v122;

      goto LABEL_89;
    }
    v120 = 0;
  }
  v123 = 0xE000000000000000;
LABEL_89:
  v124 = v142;
  v125 = (uint64_t)v135;
  v126 = &v135[v142[13]];
  swift_bridgeObjectRelease(*((_QWORD *)v126 + 1));
  *(_QWORD *)v126 = v120;
  *((_QWORD *)v126 + 1) = v123;
  swift_bridgeObjectRelease(*(_QWORD *)(v125 + 112));
  *(_QWORD *)(v125 + 112) = v106;
  v127 = v144;
  sub_10004D7EC(v144, v125 + v124[11], &qword_1000B8A30);
  v128 = v140;
  sub_1000135B0(v125, v140);
  sub_10003D960(v128);
  sub_100017E48(v127, &qword_1000B8A30);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v145, v55);
  sub_100013638(v125);
}

uint64_t sub_10003EA50(uint64_t a1, uint64_t a2)
{
  return sub_10003EF08(a1, a2, (void (*)(uint64_t))sub_10003EA5C);
}

uint64_t sub_10003EA5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint8_t *v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t Strong;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint8_t *v51;
  uint8_t *v52;
  os_log_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[24];

  v2 = v1;
  v4 = sub_100009F00(&qword_1000B8A30);
  v6 = __chkstk_darwin(v4, v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  v11 = (char *)&v51 - v10;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v15 = __chkstk_darwin(v12, v14);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v15, v18);
  v21 = (char *)&v51 - v20;
  __chkstk_darwin(v19, v22);
  v24 = (char *)&v51 - v23;
  v25 = objc_msgSend(a1, "identifier");
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  v26 = v25;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v25);

  v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v27(v11, v21, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v28(v11, 1, v12) == 1)
  {
LABEL_6:
    v31 = (uint64_t)v11;
    return sub_100017E48(v31, &qword_1000B8A30);
  }
  v27(v24, v11, v12);
  v29 = v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v58, 0, 0);
  v30 = type metadata accessor for HeadphoneModel(0);
  sub_10001B868(v29 + *(int *)(v30 + 44), (uint64_t)v8, &qword_1000B8A30);
  if (v28(v8, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v24, v12);
    v31 = (uint64_t)v8;
    return sub_100017E48(v31, &qword_1000B8A30);
  }
  v27(v17, v8, v12);
  if ((static UUID.== infix(_:_:)(v24, v17) & 1) != 0)
  {
    v33 = *(unsigned __int8 *)(v29 + 120);
    if (v33 >= 6 && v33 - 9 >= 2)
    {
      if (qword_1000B7B80 != -1)
        swift_once(&qword_1000B7B80, sub_10003D8A8);
      v34 = type metadata accessor for Logger(0);
      sub_1000093F8(v34, (uint64_t)qword_1000B90F8);
      v35 = a1;
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.default.getter();
      v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        v55 = v38;
        v39 = (uint8_t *)swift_slowAlloc(12, -1);
        v54 = swift_slowAlloc(32, -1);
        v57 = v54;
        v52 = v39;
        v53 = v36;
        *(_DWORD *)v39 = 136315138;
        v51 = v39 + 4;
        v40 = v35;
        v41 = objc_msgSend(v40, "description");
        v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        v44 = v43;

        v56 = sub_10004B4F0(v42, v44, &v57);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);

        swift_bridgeObjectRelease(v44);
        v46 = v52;
        v45 = v53;
        _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v55, "Auto dismiss on lost device %s", v52, 0xCu);
        v47 = v54;
        swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v47, -1, -1);
        swift_slowDealloc(v46, -1, -1);

      }
      else
      {

      }
      Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
      if (Strong)
      {
        v49 = Strong;
        sub_10002ECCC();
        swift_unknownObjectRelease(v49);
      }
    }
  }
  v50 = *(void (**)(char *, uint64_t))(v13 + 8);
  v50(v17, v12);
  return ((uint64_t (*)(char *, uint64_t))v50)(v24, v12);
}

double sub_10003EEA0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    sub_10003DB68(a1);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_10003EEFC(uint64_t a1, uint64_t a2)
{
  return sub_10003EF08(a1, a2, (void (*)(uint64_t))sub_10003EF74);
}

uint64_t sub_10003EF08(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE v8[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    a3(a1);
    return swift_release(v7);
  }
  return result;
}

id sub_10003EF74(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id result;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  char v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  _BOOL4 v28;
  uint8_t *v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint8_t *v42;
  id v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t Strong;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t ObjectType;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint8_t *v67;
  uint8_t *v68;
  uint64_t v69;
  unint64_t v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[3];
  _BYTE v75[24];

  v2 = v1;
  v4 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  result = (id)swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v75, 1, 0);
  if ((*(_BYTE *)(v8 + *(int *)(v4 + 164)) & 1) == 0)
  {
    result = objc_msgSend(a1, "btAddressData");
    if (result)
    {
      v10 = result;
      v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(result);
      v13 = v12;

      sub_10003D514(v11, v13);
      v15 = v14;
      v74[0] = v14;
      v16 = sub_100009F00(&qword_1000B9330);
      v17 = sub_100015EF8(&qword_1000B9338, &qword_1000B9330, (uint64_t)&protocol conformance descriptor for [A]);
      BidirectionalCollection<>.joined(separator:)(58, 0xE100000000000000, v16, v17);
      v19 = v18;
      swift_bridgeObjectRelease(v15);
      v20 = String.lowercased()();
      swift_bridgeObjectRelease(v19);
      if (*(_QWORD *)(v8 + 136))
      {
        v21 = String.lowercased()();
        if (v20._countAndFlagsBits == v21._countAndFlagsBits && v20._object == v21._object)
        {
          swift_bridgeObjectRelease_n(v20._object, 2);
          goto LABEL_9;
        }
        v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v20._countAndFlagsBits, v20._object, v21._countAndFlagsBits, v21._object, 0);
        swift_bridgeObjectRelease(v20._object);
        swift_bridgeObjectRelease(v21._object);
        if ((v22 & 1) != 0)
        {
LABEL_9:
          if ((objc_msgSend(a1, "gapaFlags") & 1) != 0)
          {
            if (qword_1000B7B80 != -1)
              swift_once(&qword_1000B7B80, sub_10003D8A8);
            v37 = type metadata accessor for Logger(0);
            sub_1000093F8(v37, (uint64_t)qword_1000B90F8);
            v38 = a1;
            v39 = Logger.logObject.getter(v38);
            v40 = static os_log_type_t.default.getter();
            v41 = v40;
            v71 = v39;
            if (os_log_type_enabled(v39, v40))
            {
              v72 = v11;
              v42 = (uint8_t *)swift_slowAlloc(12, -1);
              v69 = swift_slowAlloc(32, -1);
              v74[0] = v69;
              LODWORD(v68) = v41;
              *(_DWORD *)v42 = 136315138;
              v66 = v42 + 4;
              v67 = v42;
              v43 = v38;
              v44 = v13;
              v45 = objc_msgSend(v43, "description");
              v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
              v48 = v47;

              v13 = v44;
              v49 = v46;
              v11 = v72;
              v73 = sub_10004B4F0(v49, v48, v74);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);

              swift_bridgeObjectRelease(v48);
              v50 = v71;
              v51 = v67;
              _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v68, "CB Device, device is genuine %s", v67, 0xCu);
              v52 = v69;
              swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v52, -1, -1);
              swift_slowDealloc(v51, -1, -1);

            }
            else
            {

            }
            *(_BYTE *)(v8 + *(int *)(v4 + 164)) = 1;
            Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
            if (Strong)
            {
              v54 = Strong;
              sub_1000135B0(v8, (uint64_t)v7);
              v55 = v54 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
              swift_beginAccess(v54 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v74, 33, 0);
              sub_10004D348((uint64_t)v7, v55);
              swift_endAccess(v74);
              sub_100077794();
              sub_100071680();
              sub_100077BC8();
              swift_unknownObjectRelease(v54);
              sub_100013638((uint64_t)v7);
            }
            sub_100044D18();
          }
          else if ((objc_msgSend(a1, "gapaFlags") & 2) != 0)
          {
            if (qword_1000B7B80 != -1)
              swift_once(&qword_1000B7B80, sub_10003D8A8);
            v23 = type metadata accessor for Logger(0);
            sub_1000093F8(v23, (uint64_t)qword_1000B90F8);
            v24 = a1;
            v25 = Logger.logObject.getter(v24);
            v26 = static os_log_type_t.default.getter();
            v27 = v26;
            v28 = os_log_type_enabled(v25, v26);
            v72 = v11;
            v70 = v13;
            if (v28)
            {
              LODWORD(v71) = v27;
              v29 = (uint8_t *)swift_slowAlloc(12, -1);
              v69 = swift_slowAlloc(32, -1);
              v74[0] = v69;
              v68 = v29;
              *(_DWORD *)v29 = 136315138;
              v67 = v29 + 4;
              v30 = v24;
              v31 = objc_msgSend(v30, "description");
              v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
              v34 = v33;

              v73 = sub_10004B4F0(v32, v34, v74);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74);

              swift_bridgeObjectRelease(v34);
              v35 = v68;
              _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v71, "CB Device, device is not genuine  %s", v68, 0xCu);
              v36 = v69;
              swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v36, -1, -1);
              swift_slowDealloc(v35, -1, -1);

            }
            else
            {

            }
            *(_BYTE *)(v8 + *(int *)(v4 + 164)) = 1;
            v56 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
            if (v56)
            {
              v58 = v56;
              sub_1000135B0(v8, (uint64_t)v7);
              v59 = v58 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
              swift_beginAccess(v58 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v74, 33, 0);
              sub_10004D348((uint64_t)v7, v59);
              swift_endAccess(v74);
              sub_100077794();
              sub_100071680();
              sub_100077BC8();
              swift_unknownObjectRelease(v58);
              sub_100013638((uint64_t)v7);
            }
            v60 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
            v61 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession + 8);
            ObjectType = swift_getObjectType(v60, v57);
            v63 = *(void (**)(uint64_t, uint64_t))(v61 + 168);
            swift_unknownObjectRetain(v60);
            v63(ObjectType, v61);
            swift_unknownObjectRelease(v60);
            v64 = swift_unknownObjectWeakLoadStrong(v2 + 16);
            v11 = v72;
            v13 = v70;
            if (v64)
            {
              v65 = v64;
              sub_100030958();
              swift_unknownObjectRelease(v65);
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease(v20._object);
      }
      return (id)sub_10002931C(v11, v13);
    }
  }
  return result;
}

uint64_t sub_10003F640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];
  _QWORD aBlock[6];

  v5 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v5, v6);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (_QWORD *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler + 8);
  *v9 = a1;
  v9[1] = a2;
  sub_10004D7DC(v10, v11);
  swift_retain(a2);
  sub_10003F828();
  sub_10003FA3C();
  sub_1000408DC();
  v12 = *(void **)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery);
  aBlock[4] = sub_1000410D4;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000410E8;
  aBlock[3] = &unk_1000A8188;
  v13 = _Block_copy(aBlock);
  objc_msgSend(v12, "activateWithCompletion:", v13);
  _Block_release(v13);
  if (qword_1000B7BE8 != -1)
    swift_once(&qword_1000B7BE8, sub_100065B10);
  v14 = (void *)qword_1000BC7D8;
  v15 = v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, aBlock, 1, 0);
  *(_BYTE *)(v15 + *(int *)(v5 + 160)) = sub_10006533C(*(unsigned int *)(v15 + *(int *)(v5 + 124)), v14) & 1;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
  if (result)
  {
    v17 = result;
    sub_1000135B0(v15, (uint64_t)v8);
    v18 = v17 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess(v17 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v20, 33, 0);
    sub_10004D348((uint64_t)v8, v18);
    swift_endAccess(v20);
    sub_100077794();
    sub_100071680();
    sub_100077BC8();
    swift_unknownObjectRelease(v17);
    return sub_100013638((uint64_t)v8);
  }
  return result;
}

double sub_10003F828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  _QWORD v18[2];
  uint64_t v19;
  _QWORD *v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1, v2);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_workingQueue);
  v10 = swift_allocObject(&unk_1000A80D0, 24, 7);
  swift_weakInit(v10 + 16, v0);
  aBlock[4] = sub_10004DF5C;
  v22 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FBC;
  aBlock[3] = &unk_1000A8278;
  v11 = _Block_copy(aBlock);
  v12 = swift_retain(v10);
  static DispatchQoS.unspecified.getter(v12);
  v20 = _swiftEmptyArrayStorage;
  v13 = sub_10000A1B0((unint64_t *)&qword_1000B8330, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v14 = sub_100009F00(&qword_1000B8338);
  v15 = sub_100015EF8((unint64_t *)&qword_1000B8340, &qword_1000B8338, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v14, v15, v1, v13);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v4, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v16 = v22;
  swift_release(v10);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

void sub_10003FA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  uint8_t *v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  _BYTE *v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[72];
  int v65;
  int v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75[32];

  v1 = v0;
  v2 = sub_100009F00(&qword_1000B9348);
  __chkstk_darwin(v2, v3);
  v5 = &v64[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100009F00(&qword_1000B9350);
  v72 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v72 + 64);
  v9 = __chkstk_darwin(v6, v8);
  v10 = &v64[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9, v11);
  v13 = &v64[-v12];
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  v18 = &v64[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v75, 0, 0);
  v20 = type metadata accessor for HeadphoneModel(0);
  if (*(_BYTE *)(v19 + *(int *)(v20 + 76)) == 1)
  {
    v21 = v20;
    v69 = v15;
    v70 = v14;
    v67 = *(unsigned __int8 *)(v19 + 144);
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v22 = type metadata accessor for Logger(0);
    v71 = sub_1000093F8(v22, (uint64_t)qword_1000B90F8);
    v23 = Logger.logObject.getter(v71);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      v73 = v7;
      v26 = v13;
      v27 = v5;
      v28 = v1;
      v29 = v10;
      v30 = v25;
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Fetching assets", v25, 2u);
      v31 = v30;
      v10 = v29;
      v1 = v28;
      v5 = v27;
      v13 = v26;
      v7 = v73;
      swift_slowDealloc(v31, -1, -1);
    }

    v68 = v18;
    Date.init()(v32);
    v66 = *(_DWORD *)(v19 + *(int *)(v21 + 124));
    v65 = *(unsigned __int8 *)(v19 + 146);
    v33 = (uint64_t *)(v19 + *(int *)(v21 + 56));
    v34 = v33[1];
    v73 = *v33;
    if (v34 >> 60 != 15)
      __asm { BR              X9 }
    v35 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v13, 1, 1, v35);
    v36 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo;
    swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo, &v74, 33, 0);
    sub_10004D7EC((uint64_t)v13, v36, &qword_1000B9350);
    swift_endAccess(&v74);
    v37 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v5, 1, 1, v37);
    v38 = swift_allocObject(&unk_1000A80D0, 24, 7);
    v39 = (uint64_t)v13;
    v40 = v1;
    swift_weakInit(v38 + 16, v1);
    v41 = v39;
    sub_10001B868(v39, (uint64_t)v10, &qword_1000B9350);
    v42 = *(unsigned __int8 *)(v72 + 80);
    v43 = (uint64_t)v10;
    v44 = (v42 + 72) & ~v42;
    v45 = swift_allocObject(&unk_1000A81C0, v44 + v7, v42 | 7);
    *(_QWORD *)(v45 + 16) = 0;
    *(_QWORD *)(v45 + 24) = 0;
    *(_QWORD *)(v45 + 32) = v38;
    *(_DWORD *)(v45 + 40) = v66;
    *(_BYTE *)(v45 + 44) = v65;
    v46 = v73;
    *(_QWORD *)(v45 + 48) = v67;
    *(_QWORD *)(v45 + 56) = v46;
    *(_QWORD *)(v45 + 64) = v34;
    sub_10003CFDC(v43, v45 + v44, &qword_1000B9350);
    sub_10004D6D0(v46, v34);
    v47 = sub_10004915C((uint64_t)v5, (uint64_t)&unk_1000B93D8, v45);
    swift_release(v47);
    v48 = sub_100017E48((uint64_t)v5, &qword_1000B9348);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Fetching assets finished", v51, 2u);
      swift_slowDealloc(v51, -1, -1);
    }

    v52 = v68;
    v54 = Date.timeIntervalSinceNow.getter(v53);
    sub_10002E1A0(v73, v34);
    sub_100017E48(v41, &qword_1000B9350);
    (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v52, v70);
    *(double *)(v40 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_assetFetchDuration) = -v54;
  }
  else
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v55 = type metadata accessor for Logger(0);
    v56 = sub_1000093F8(v55, (uint64_t)qword_1000B90F8);
    v57 = Logger.logObject.getter(v56);
    v58 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Device is unsupported, not looking up assets", v59, 2u);
      swift_slowDealloc(v59, -1, -1);
    }

    v60 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler;
    v61 = *(void (**)(uint64_t))(v1
                                         + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
    if (v61)
    {
      v62 = *(_QWORD *)(v60 + 8);
      v63 = swift_retain(v62);
      v61(v63);
      sub_10004D7DC((uint64_t)v61, v62);
    }
  }
}

void sub_1000408DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  NSString v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t Strong;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD v67[2];
  id v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  NSObject *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[24];

  v1 = v0;
  v2 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100009F00(&qword_1000B8A38);
  __chkstk_darwin(v6, v7);
  v9 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_smartChargeClient);
  if (v10)
  {
    v11 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v76, 0, 0);
    v12 = *(_QWORD *)(v11 + 136);
    if (v12)
    {
      v13 = *(NSObject **)(v11 + 128);
      v71 = v2;
      v72 = v13;
      v14 = qword_1000B7B80;
      v15 = v10;
      swift_bridgeObjectRetain(v12);
      if (v14 != -1)
        swift_once(&qword_1000B7B80, sub_10003D8A8);
      v16 = type metadata accessor for Logger(0);
      v17 = sub_1000093F8(v16, (uint64_t)qword_1000B90F8);
      v18 = swift_retain_n(v1, 2);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter();
      v21 = os_log_type_enabled(v19, v20);
      v69 = v17;
      v70 = v5;
      if (v21)
      {
        v22 = swift_slowAlloc(12, -1);
        v68 = v15;
        v23 = (uint8_t *)v22;
        v24 = swift_slowAlloc(32, -1);
        *(_DWORD *)v23 = 136315138;
        v75 = v24;
        v67[1] = v23 + 4;
        v25 = *(_QWORD *)(v11 + 136);
        v73 = *(id *)(v11 + 128);
        v74 = v25;
        swift_bridgeObjectRetain(v25);
        v26 = sub_100009F00(&qword_1000B8B88);
        v27 = String.init<A>(reflecting:)(&v73, v26);
        v29 = v28;
        v73 = (id)sub_10004B4F0(v27, v28, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74);
        swift_release_n(v1, 2);
        swift_bridgeObjectRelease(v29);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Fetching full charge deadline for %s", v23, 0xCu);
        swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v24, -1, -1);
        v30 = v23;
        v15 = v68;
        swift_slowDealloc(v30, -1, -1);

      }
      else
      {

        swift_release_n(v1, 2);
      }
      v47 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
      v73 = 0;
      v48 = objc_msgSend(v15, "fullChargeDeadlineForDevice:withError:", v47, &v73);

      v49 = v73;
      if (v48)
      {
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v50 = v49;

        v51 = type metadata accessor for Date(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v9, 0, 1, v51);
        swift_beginAccess(v11, &v73, 33, 0);
        sub_10004D3CC((uint64_t)v9, v11 + *(int *)(v71 + 140));
        swift_endAccess(&v73);
        Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
        if (Strong)
        {
          v53 = Strong;
          v54 = (uint64_t)v70;
          sub_1000135B0(v11, (uint64_t)v70);
          v55 = v53 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
          swift_beginAccess(v53 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, &v73, 33, 0);
          sub_10004D348(v54, v55);
          swift_endAccess(&v73);
          sub_100077794();
          sub_100071680();
          sub_100077BC8();
          swift_unknownObjectRelease(v53);
          sub_100013638(v54);
        }

      }
      else
      {
        v56 = v73;
        v57 = _convertNSErrorToError(_:)(v49);

        swift_willThrow();
        swift_errorRetain(v57);
        v58 = swift_errorRetain(v57);
        v59 = Logger.logObject.getter(v58);
        v60 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v59, v60))
        {
          v61 = (uint8_t *)swift_slowAlloc(12, -1);
          v62 = (void *)swift_slowAlloc(32, -1);
          v73 = v62;
          *(_DWORD *)v61 = 136315138;
          v75 = v57;
          swift_errorRetain(v57);
          v63 = sub_100009F00((uint64_t *)&unk_1000B8740);
          v64 = String.init<A>(describing:)(&v75, v63);
          v66 = v65;
          v75 = sub_10004B4F0(v64, v65, (uint64_t *)&v73);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76);
          swift_bridgeObjectRelease(v66);
          swift_errorRelease(v57);
          swift_errorRelease(v57);
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "Failed to fetch full charge deadline: %s", v61, 0xCu);
          swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v62, -1, -1);
          swift_slowDealloc(v61, -1, -1);

          swift_errorRelease(v57);
        }
        else
        {

          swift_errorRelease(v57);
          swift_errorRelease(v57);
          swift_errorRelease(v57);

        }
      }
    }
    else
    {
      v35 = qword_1000B7B80;
      v36 = v10;
      if (v35 != -1)
        swift_once(&qword_1000B7B80, sub_10003D8A8);
      v37 = type metadata accessor for Logger(0);
      sub_1000093F8(v37, (uint64_t)qword_1000B90F8);
      v38 = swift_retain_n(v1, 2);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v39, v40))
      {
        v72 = v36;
        v41 = (uint8_t *)swift_slowAlloc(12, -1);
        v42 = (uint64_t)v5;
        v43 = (void *)swift_slowAlloc(32, -1);
        v73 = v43;
        *(_DWORD *)v41 = 136315138;
        sub_1000135B0(v11, v42);
        v44 = sub_10002AE08();
        v46 = v45;
        sub_100013638(v42);
        v75 = sub_10004B4F0(v44, v46, (uint64_t *)&v73);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76);
        swift_release_n(v1, 2);
        swift_bridgeObjectRelease(v46);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "No bluetooth address: %s", v41, 0xCu);
        swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v41, -1, -1);

      }
      else
      {

        swift_release_n(v1, 2);
      }
    }
  }
  else
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_1000093F8(v31, (uint64_t)qword_1000B90F8);
    v72 = Logger.logObject.getter(v32);
    v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v72, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v72, v33, "Optimized battery charging is not enabled", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

  }
}

void sub_1000410D4(uint64_t a1)
{
  sub_100045944(a1, "Device discovery started", "Device discovery failed to start: %s");
}

void sub_1000410E8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

void sub_10004113C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  int v25;
  int *v26;
  double v27;
  uint64_t v28;
  double v29;
  int v30;
  uint64_t v31;
  uint64_t Strong;
  double v33;
  double v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  double v39;
  unint64_t v40;
  _BYTE v41[12];
  _BOOL4 v42;
  uint64_t (*v43)(_BYTE *, uint64_t, uint64_t);
  int *v44;
  uint64_t v45;
  id v46;
  _BYTE v47[24];
  _BYTE v48[24];

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100009F00(&qword_1000B8A38);
  v11 = __chkstk_darwin(v9, v10);
  v13 = &v41[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11, v14);
  v16 = &v41[-v15];
  v17 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_didSubmitMetrics;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_didSubmitMetrics) & 1) == 0)
  {
    v18 = v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v48, 0, 0);
    v19 = type metadata accessor for HeadphoneModel(0);
    if (!*(_BYTE *)(v18 + *(int *)(v19 + 120)) && ((1 << *(_BYTE *)(v18 + 120)) & 0x167F) == 0)
    {
      v44 = (int *)v19;
      v46 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProxPairingEvent), "init");
      v20 = v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate;
      swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate, v47, 0, 0);
      v45 = v20;
      sub_10001B868(v20, (uint64_t)v16, &qword_1000B8A38);
      v43 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48);
      v42 = v43(v16, 1, v4) != 1;
      sub_100017E48((uint64_t)v16, &qword_1000B8A38);
      v21 = v46;
      objc_msgSend(v46, "setAttemptedPairing:", v42);
      objc_msgSend(v21, "setColor:", *(unsigned __int8 *)(v18 + 144));
      objc_msgSend(v21, "setAssetFetchDuration:", *(double *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_assetFetchDuration));
      if (a1)
      {
        swift_errorRetain(a1);
        v22 = (void *)_convertErrorToNSError(_:)(a1);
        v23 = objc_msgSend(v22, "code");
        swift_errorRelease(a1);

      }
      else
      {
        v23 = 0;
      }
      v24 = v46;
      objc_msgSend(v46, "setErrorCode:", v23);
      sub_10001B868(v45, (uint64_t)v13, &qword_1000B8A38);
      v25 = v43(v13, 1, v4);
      v26 = v44;
      if (v25 == 1)
      {
        sub_100017E48((uint64_t)v13, &qword_1000B8A38);
        v27 = -1.0;
      }
      else
      {
        v28 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v8, v13, v4);
        v29 = Date.timeIntervalSinceNow.getter(v28);
        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
        v27 = -v29;
      }
      objc_msgSend(v24, "setPairingDuration:", v27);
      v30 = *(unsigned __int8 *)(v18 + 120);
      if (v30 == 11)
        v31 = 2;
      else
        v31 = v30 == 8;
      objc_msgSend(v24, "setPairingType:", v31);
      objc_msgSend(v24, "setProductID:", *(unsigned int *)(v18 + v26[31]));
      Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
      v33 = -1.0;
      v34 = -1.0;
      if (Strong)
      {
        v35 = *(_QWORD *)(Strong + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_initialCardDisplayUpTicks);
        swift_unknownObjectRelease(Strong);
        v36 = *(_QWORD *)(v18 + v26[15]);
        v34 = -1.0;
        if (v36)
        {
          if (v35 < v36)
          {
            __break(1u);
            goto LABEL_24;
          }
          v34 = (double)(unint64_t)UpTicksToMilliseconds(v35 - v36, -1.0);
        }
      }
      objc_msgSend(v24, "setFoundToFirstCardDuration:", v34);
      v37 = swift_unknownObjectWeakLoadStrong(v2 + 16);
      if (!v37)
        goto LABEL_21;
      v38 = *(_QWORD *)(v37 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_initialCardDisplayUpTicks);
      swift_unknownObjectRelease(v37);
      v40 = *(_QWORD *)(v18 + v26[43]);
      if (!v40)
        goto LABEL_21;
      if (v38 >= v40)
      {
        v33 = (double)(unint64_t)UpTicksToMilliseconds(v38 - v40, v39);
LABEL_21:
        objc_msgSend(v24, "setTriggerToFirstCardDuration:", v33);
        objc_msgSend(v24, "submitEvent");

        *(_BYTE *)(v2 + v17) = 1;
        return;
      }
LABEL_24:
      __break(1u);
    }
  }
}

uint64_t sub_100041530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[24];

  v1 = v0;
  v2 = sub_100009F00(&qword_1000B8A38);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v50, 0, 0);
  if (*(_BYTE *)(v6 + 120) == 12)
    v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_wantsTemporaryPairing);
  else
    v7 = 0;
  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v8 = type metadata accessor for Logger(0);
  sub_1000093F8(v8, (uint64_t)qword_1000B90F8);
  v9 = swift_retain_n(v0, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(18, -1);
    v13 = swift_slowAlloc(32, -1);
    v47 = v13;
    *(_DWORD *)v12 = 136315394;
    v14 = *(_QWORD *)(v6 + 136);
    v48 = *(_QWORD *)(v6 + 128);
    v49 = v14;
    swift_bridgeObjectRetain(v14);
    v15 = sub_100009F00(&qword_1000B8B88);
    v16 = String.init<A>(reflecting:)(&v48, v15);
    v18 = v17;
    v48 = sub_10004B4F0(v16, v17, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v12 + 12) = 1024;
    LODWORD(v48) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, (char *)&v48 + 4);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Connecting device bluetoothAddress = %s guestMode = %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    v19 = swift_release_n(v1, 2);
  }
  Date.init()(v19);
  v20 = type metadata accessor for Date(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 0, 1, v20);
  v21 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate, &v48, 33, 0);
  sub_10004D3CC((uint64_t)v5, v21);
  swift_endAccess(&v48);
  v22 = (_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession + 8);
  ObjectType = swift_getObjectType(v23, v25);
  v28 = *(_QWORD *)(v6 + 128);
  v27 = *(_QWORD *)(v6 + 136);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 16);
  swift_bridgeObjectRetain(v27);
  swift_unknownObjectRetain(v23);
  v29(v28, v27, ObjectType, v24);
  swift_unknownObjectRelease(v23);
  v30 = *v22;
  v31 = v22[1];
  v33 = swift_getObjectType(*v22, v32);
  v34 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v31 + 112);
  swift_retain(v1);
  swift_unknownObjectRetain(v30);
  v34(sub_10004D414, v1, v33, v31);
  swift_unknownObjectRelease(v30);
  v36 = *v22;
  v35 = v22[1];
  v38 = swift_getObjectType(*v22, v37);
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 40);
  swift_unknownObjectRetain(v36);
  v39(v7, v38, v35);
  swift_unknownObjectRelease(v36);
  v41 = *v22;
  v40 = v22[1];
  v43 = swift_getObjectType(*v22, v42);
  v44 = *(void (**)(uint64_t, uint64_t))(v40 + 160);
  swift_unknownObjectRetain(v41);
  v44(v43, v40);
  return swift_unknownObjectRelease(v41);
}

void sub_1000418E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for Data.Iterator(0);
  __chkstk_darwin(v3, v4);
  __asm { BR              X10 }
}

uint64_t sub_100041968()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;

  sub_10002913C(v3, v2);
  sub_10002913C(v3, v2);
  ((void (*)(uint64_t, unint64_t, _QWORD))Data.Iterator.init(_:at:))(v3, v2, (int)v3);
  sub_10002931C(v3, v2);
  v5 = sub_10000A1B0(&qword_1000B9328, (uint64_t (*)(uint64_t))&type metadata accessor for Data.Iterator, (uint64_t)&protocol conformance descriptor for Data.Iterator);
  ((void (*)(uint64_t, uint64_t))dispatch thunk of IteratorProtocol.next())(v0, v5);
  if ((*(_BYTE *)(v4 - 81) & 1) != 0)
  {
    v6 = (char *)&_swiftEmptyArrayStorage;
  }
  else
  {
    v6 = (char *)&_swiftEmptyArrayStorage;
    *(_OWORD *)(v4 - 112) = xmmword_100087710;
    do
    {
      v11 = *(_BYTE *)(v4 - 82);
      v12 = sub_100009F00(&qword_1000B9340);
      v13 = swift_allocObject(v12, 72, 7);
      *(_OWORD *)(v13 + 16) = *(_OWORD *)(v4 - 112);
      *(_QWORD *)(v13 + 56) = &type metadata for UInt8;
      *(_QWORD *)(v13 + 64) = &protocol witness table for UInt8;
      *(_BYTE *)(v13 + 32) = v11;
      v14 = String.init(format:_:)(2016555045, 0xE400000000000000, v13);
      v16 = v15;
      if ((((uint64_t (*)(char *))swift_isUniquelyReferenced_nonNull_native)(v6) & 1) == 0)
        v6 = sub_1000823C0(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v18 = *((_QWORD *)v6 + 2);
      v17 = *((_QWORD *)v6 + 3);
      if (v18 >= v17 >> 1)
        v6 = sub_1000823C0((char *)(v17 > 1), v18 + 1, 1, v6);
      *((_QWORD *)v6 + 2) = v18 + 1;
      v19 = &v6[16 * v18];
      *((_QWORD *)v19 + 4) = v14;
      *((_QWORD *)v19 + 5) = v16;
      ((void (*)(uint64_t, uint64_t))dispatch thunk of IteratorProtocol.next())(v0, v5);
    }
    while (*(_BYTE *)(v4 - 81) != 1);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 120) + 8))(v1, v0);
  *(_QWORD *)(v4 - 96) = v6;
  v7 = sub_100009F00(&qword_1000B9330);
  v8 = sub_100015EF8(&qword_1000B9338, &qword_1000B9330, (uint64_t)&protocol conformance descriptor for [A]);
  v9 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))BidirectionalCollection<>.joined(separator:))(58, 0xE100000000000000, v7, v8);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_100041B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  void (*v38)(_BOOL8, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  _BYTE v45[24];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = v0;
  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v2 = type metadata accessor for Logger(0);
  sub_1000093F8(v2, (uint64_t)qword_1000B90F8);
  v3 = swift_retain_n(v0, 4);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(18, -1);
    v7 = swift_slowAlloc(32, -1);
    v46 = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v45, 0, 0);
    v9 = *(_QWORD *)(v8 + 136);
    v47 = *(_QWORD *)(v8 + 128);
    v48 = v9;
    swift_bridgeObjectRetain(v9);
    v10 = sub_100009F00(&qword_1000B8B88);
    v11 = String.init<A>(reflecting:)(&v47, v10);
    v13 = v12;
    v47 = sub_10004B4F0(v11, v12, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v6 + 12) = 1024;
    LODWORD(v8) = *(unsigned __int8 *)(v8 + 120);
    swift_release(v1);
    LODWORD(v47) = v8 == 12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, (char *)&v47 + 4);
    swift_release(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Disconnecting device bluetoothAddress = %s guestMode = %{BOOL}d", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v1, 4);
  }
  v15 = (_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession + 8);
  ObjectType = swift_getObjectType(v16, v14);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 64);
  swift_unknownObjectRetain(v16);
  v19(1, ObjectType, v17);
  swift_unknownObjectRelease(v16);
  v20 = *v15;
  v21 = v15[1];
  v23 = swift_getObjectType(*v15, v22);
  v24 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, &v47, 0, 0);
  v25 = *(_QWORD *)(v24 + 128);
  v26 = *(_QWORD *)(v24 + 136);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16);
  swift_bridgeObjectRetain(v26);
  swift_unknownObjectRetain(v20);
  v27(v25, v26, v23, v21);
  swift_unknownObjectRelease(v20);
  v28 = *v15;
  v29 = v15[1];
  v31 = swift_getObjectType(*v15, v30);
  v32 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v29 + 112);
  swift_retain(v1);
  swift_unknownObjectRetain(v28);
  v32(sub_10004D774, v1, v31, v29);
  swift_unknownObjectRelease(v28);
  v34 = *v15;
  v33 = v15[1];
  v36 = swift_getObjectType(*v15, v35);
  v37 = *(unsigned __int8 *)(v24 + 120) == 12;
  v38 = *(void (**)(_BOOL8, uint64_t, uint64_t))(v33 + 40);
  swift_unknownObjectRetain(v34);
  v38(v37, v36, v33);
  swift_unknownObjectRelease(v34);
  v40 = *v15;
  v39 = v15[1];
  v42 = swift_getObjectType(*v15, v41);
  v43 = *(void (**)(uint64_t, uint64_t))(v39 + 160);
  swift_unknownObjectRetain(v40);
  v43(v42, v39);
  return swift_unknownObjectRelease(v40);
}

uint64_t sub_100041EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v8 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v14 - 8);
  v29 = v14;
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  v18 = (void *)static OS_dispatch_queue.main.getter();
  v19 = swift_allocObject(a2, 32, 7);
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = v4;
  aBlock[4] = a3;
  v32 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FBC;
  aBlock[3] = a4;
  v20 = _Block_copy(aBlock);
  v21 = v32;
  swift_errorRetain(a1);
  swift_retain(v8);
  v22 = swift_release(v21);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v23 = sub_10000A1B0((unint64_t *)&qword_1000B8330, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100009F00(&qword_1000B8338);
  v25 = sub_100015EF8((unint64_t *)&qword_1000B8340, &qword_1000B8338, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v10, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v13, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v17, v29);
}

uint64_t sub_1000420F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  _BYTE v41[24];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0;
  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v2 = type metadata accessor for Logger(0);
  sub_1000093F8(v2, (uint64_t)qword_1000B90F8);
  v3 = swift_retain_n(v0, 4);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(18, -1);
    v7 = swift_slowAlloc(32, -1);
    v42 = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v41, 0, 0);
    v9 = *(_QWORD *)(v8 + 136);
    v43 = *(_QWORD *)(v8 + 128);
    v44 = v9;
    swift_bridgeObjectRetain(v9);
    v10 = sub_100009F00(&qword_1000B8B88);
    v11 = String.init<A>(reflecting:)(&v43, v10);
    v13 = v12;
    v43 = sub_10004B4F0(v11, v12, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v6 + 12) = 1024;
    LODWORD(v8) = *(unsigned __int8 *)(v8 + 120);
    swift_release(v1);
    LODWORD(v43) = v8 == 12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, (char *)&v43 + 4);
    swift_release(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Unpairing device bluetoothAddress = %s guestMode = %{BOOL}d", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v1, 4);
  }
  v14 = objc_msgSend(objc_allocWithZone((Class)SFBluetoothPairingSession), "init");
  v15 = (_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  *v15 = v14;
  v15[1] = &off_1000A8380;
  swift_unknownObjectRelease(v16);
  v17 = *v15;
  v18 = v15[1];
  ObjectType = swift_getObjectType(*v15, v19);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 88);
  swift_unknownObjectRetain(v17);
  v21(1, ObjectType, v18);
  swift_unknownObjectRelease(v17);
  v22 = *v15;
  v23 = v15[1];
  v25 = swift_getObjectType(*v15, v24);
  v26 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, &v43, 0, 0);
  v28 = *(_QWORD *)(v26 + 128);
  v27 = *(_QWORD *)(v26 + 136);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 16);
  swift_bridgeObjectRetain(v27);
  swift_unknownObjectRetain(v22);
  v29(v28, v27, v25, v23);
  swift_unknownObjectRelease(v22);
  v30 = *v15;
  v31 = v15[1];
  v33 = swift_getObjectType(*v15, v32);
  v34 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v31 + 112);
  swift_retain(v1);
  swift_unknownObjectRetain(v30);
  v34(sub_10004D38C, v1, v33, v31);
  swift_unknownObjectRelease(v30);
  v36 = *v15;
  v35 = v15[1];
  v38 = swift_getObjectType(*v15, v37);
  v39 = *(void (**)(uint64_t, uint64_t))(v35 + 160);
  swift_unknownObjectRetain(v36);
  v39(v38, v35);
  return swift_unknownObjectRelease(v36);
}

uint64_t sub_10004244C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter();
  v14 = swift_allocObject(&unk_1000A7F40, 32, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  aBlock[4] = sub_10003CF88;
  v25 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FBC;
  aBlock[3] = &unk_1000A7F58;
  v15 = _Block_copy(aBlock);
  v16 = v25;
  swift_retain(a2);
  swift_release(v16);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v18 = sub_10000A1B0((unint64_t *)&qword_1000B8330, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100009F00(&qword_1000B8338);
  v20 = sub_100015EF8((unint64_t *)&qword_1000B8340, &qword_1000B8338, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

id sub_100042668(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  __CFString *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  if (a2 == 0xD000000000000015 && a3 == 0x800000010008EBE0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0xD000000000000015, 0x800000010008EBE0, 0) & 1) != 0)
  {
    if ((a1 & 1) != 0)
    {
      v7 = v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v29, 0, 0);
      v8 = type metadata accessor for HeadphoneModel(0);
      if (*(_QWORD *)(v7 + *(int *)(v8 + 152)))
        v9 = *(_QWORD *)(v7 + *(int *)(v8 + 152));
      else
        v9 = 3;
    }
    else
    {
      v9 = 0;
    }
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_1000093F8(v10, (uint64_t)qword_1000B90F8);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v28 = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = sub_10004D2F8(v9);
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v19 = v18;

      v27 = sub_10004B4F0(v17, v19, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28);
      swift_bridgeObjectRelease(v19);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Setting Announce Calls to %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    return objc_msgSend((id)objc_opt_self(HPSiriController), "setAnnounceCallsState:", v9);
  }
  else if (a2 == 0x6C61626F6C67 && a3 == 0xE600000000000000
         || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0x6C61626F6C67, 0xE600000000000000, 0) & 1) != 0)
  {
    v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter + 24);
    v22 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter + 32);
    sub_100013410((_QWORD *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter), v21);
    return (id)(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v22 + 8))(a1 & 1, v21, v22);
  }
  else
  {
    v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter + 24);
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter + 32);
    sub_100013410((_QWORD *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter), v23);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 16))(v29, a2, a3, v23, v24);
    v25 = v30;
    v26 = v31;
    sub_100013410(v29, v30);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v26 + 56))(a1 & 1, v25, v26);
    return (id)sub_100015D14(v29);
  }
}

id sub_10004299C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v1 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v17, 0, 0);
  v2 = *(_QWORD *)(v1 + 136);
  if (v2)
  {
    swift_bridgeObjectRetain(v2);
    v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(objc_allocWithZone((Class)HPHeadphoneEndCallManager), "initWithBluetoothAddress:", v3);

  v5 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager) = v4;

  v7 = *(void **)(v0 + v5);
  if (v7)
    return objc_msgSend(v7, "isStatusUnknown");
  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_1000093F8(v9, (uint64_t)qword_1000B90F8);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v16 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = sub_10004B4F0(0xD00000000000001CLL, 0x800000010008EC70, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "endCallManager is nil in %s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }

  return 0;
}

void sub_100042BAC()
{
  sub_100042C18((SEL *)&selRef_setConfigForSingleTap, 0xD00000000000001DLL, 0x800000010008E960);
}

void sub_100042BD0()
{
  sub_100042C18((SEL *)&selRef_setConfigForDoubleTap, 0xD00000000000001DLL, 0x800000010008EBC0);
}

void sub_100042BF4()
{
  sub_100042C18((SEL *)&selRef_setStatusToDone, 0xD000000000000016, 0x800000010008ECC0);
}

void sub_100042C18(SEL *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *oslog;
  uint64_t v12;
  uint64_t v13;

  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager))
  {
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager), *a1);
  }
  else
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_1000093F8(v6, (uint64_t)qword_1000B90F8);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v13 = v10;
      *(_DWORD *)v9 = 136315138;
      v12 = sub_10004B4F0(a2, a3, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "endCallManager is nil in %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

    }
  }
}

void sub_100042DD8()
{
  sub_100042DFC((SEL *)&selRef_setMuteCallConfig, 0xD00000000000001ALL, 0x800000010008ECE0);
}

void sub_100042DFC(SEL *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *oslog;
  uint64_t v12;
  uint64_t v13;

  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager))
  {
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager), *a1);
  }
  else
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_1000093F8(v6, (uint64_t)qword_1000B90F8);
    oslog = Logger.logObject.getter(v7);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v13 = v10;
      *(_DWORD *)v9 = 136315138;
      v12 = sub_10004B4F0(a2, a3, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "headphoneFeatureManager is nil in %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

    }
  }
}

id sub_100042FBC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24[3];

  v1 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager);
  if (v2)
    return objc_msgSend(v2, "getColorCode");
  v3 = v0;
  v4 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v22, 0, 0);
  v5 = *(_QWORD *)(v4 + 136);
  v6 = *(unsigned int *)(v4 + *(int *)(type metadata accessor for HeadphoneModel(0) + 124));
  if (v5)
  {
    swift_bridgeObjectRetain(v5);
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone((Class)HPHeadphoneFeatureManager), "initWithBluetoothAddress:productID:", v7, v6);

  v9 = *(void **)(v3 + v1);
  *(_QWORD *)(v3 + v1) = v8;

  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_1000093F8(v10, (uint64_t)qword_1000B90F8);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Mute Call: Get Color Code, init Headphone Feature Manager", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v2 = *(void **)(v3 + v1);
  if (v2)
    return objc_msgSend(v2, "getColorCode");
  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v16 = sub_1000093F8(v10, (uint64_t)qword_1000B90F8);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v24[0] = v20;
    *(_DWORD *)v19 = 136315138;
    v23 = sub_10004B4F0(0x726F6C6F43746567, 0xEE00292865646F43, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Mute Call: headphoneFeatureManager is nil in %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }

  v21 = v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v21, v24, 0, 0);
  return (id)(*(_BYTE *)(v21 + 144) & 0xF);
}

id sub_1000432C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  _BYTE v16[24];
  uint64_t v17;
  uint64_t v18;

  v1 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager);
  if (v2)
    return objc_msgSend(v2, "shouldShowAdaptiveControlsProxCard");
  v3 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v16, 0, 0);
  v4 = *(_QWORD *)(v3 + 136);
  v5 = *(unsigned int *)(v3 + *(int *)(type metadata accessor for HeadphoneModel(0) + 124));
  if (v4)
  {
    swift_bridgeObjectRetain(v4);
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone((Class)HPHeadphoneFeatureManager), "initWithBluetoothAddress:productID:", v6, v5);

  v8 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = v7;

  v2 = *(void **)(v0 + v1);
  if (v2)
    return objc_msgSend(v2, "shouldShowAdaptiveControlsProxCard");
  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_1000093F8(v10, (uint64_t)qword_1000B90F8);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v18 = v15;
    *(_DWORD *)v14 = 136315138;
    v17 = sub_10004B4F0(0xD000000000000025, 0x800000010008EC90, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "headphoneFeatureManager is nil in %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  return 0;
}

void sub_1000434F0()
{
  sub_100042DFC((SEL *)&selRef_setAdaptiveControlsStatus, 0xD00000000000001FLL, 0x800000010008ED00);
}

void sub_100043514(char a1)
{
  sub_100043580(a1, (SEL *)&selRef_setAdaptiveControlsAdaptiveMode_, 0xD000000000000029, 0x800000010008ED20);
}

void sub_100043538(char a1)
{
  sub_100043580(a1, (SEL *)&selRef_setAdaptiveControlsPersonalizedVolume_, 0xD00000000000002FLL, 0x800000010008EC00);
}

void sub_10004355C(char a1)
{
  sub_100043580(a1, (SEL *)&selRef_setAdaptiveControlsConversationAwareness_, 0xD000000000000032, 0x800000010008EC30);
}

void sub_100043580(char a1, SEL *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *oslog;
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)(v4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager))
  {
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager), *a2, a1 & 1);
  }
  else
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_1000093F8(v7, (uint64_t)qword_1000B90F8);
    oslog = Logger.logObject.getter(v8);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v14 = v11;
      *(_DWORD *)v10 = 136315138;
      v13 = sub_10004B4F0(a3, a4, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14);
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "headphoneFeatureManager is nil in %s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
  }
}

void sub_100043744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  NSObject *v7;
  Class isa;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  Class v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  NSString v43;
  unsigned int v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t Strong;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  Class v65;
  uint64_t v66;
  char *v67;
  NSObject *v68;
  uint64_t v69;
  id v70;
  Class v71[2];
  char v72[24];

  v1 = v0;
  v2 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_smartChargeClient);
  if (v6)
  {
    v7 = (v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model);
    swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v72, 1, 0);
    isa = v7[17].isa;
    v67 = v5;
    if (isa)
    {
      v68 = v7;
      v65 = v7[16].isa;
      v9 = qword_1000B7B80;
      v10 = v6;
      swift_bridgeObjectRetain(isa);
      if (v9 != -1)
        swift_once(&qword_1000B7B80, sub_10003D8A8);
      v66 = v2;
      v11 = type metadata accessor for Logger(0);
      v12 = sub_1000093F8(v11, (uint64_t)qword_1000B90F8);
      v13 = swift_retain_n(v1, 2);
      v14 = Logger.logObject.getter(v13);
      v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc(12, -1);
        v17 = swift_slowAlloc(32, -1);
        v63 = v10;
        v64 = v12;
        v18 = v17;
        *(_DWORD *)v16 = 136315138;
        v69 = v17;
        v19 = v68[17].isa;
        v70 = v68[16].isa;
        v71[0] = v19;
        swift_bridgeObjectRetain(v19);
        v20 = sub_100009F00(&qword_1000B8B88);
        v21 = String.init<A>(reflecting:)(&v70, v20);
        v23 = v22;
        v70 = (id)sub_10004B4F0(v21, v22, &v69);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71);
        swift_release_n(v1, 2);
        swift_bridgeObjectRelease(v23);
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Disabling OBC for %s", v16, 0xCu);
        swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
        v24 = v18;
        v10 = v63;
        swift_slowDealloc(v24, -1, -1);
        swift_slowDealloc(v16, -1, -1);

      }
      else
      {

        swift_release_n(v1, 2);
      }
      v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(isa);
      v70 = 0;
      v44 = objc_msgSend(v10, "connectAndDisableOBCforDevice:withError:", v43, &v70);

      v45 = v70;
      if (v44)
      {
        v46 = v70;
      }
      else
      {
        v47 = v70;
        v48 = _convertNSErrorToError(_:)(v45);

        swift_willThrow();
        swift_errorRetain(v48);
        v49 = swift_errorRetain(v48);
        v50 = Logger.logObject.getter(v49);
        v51 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v50, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc(12, -1);
          v53 = (void *)swift_slowAlloc(32, -1);
          v69 = v48;
          v70 = v53;
          *(_DWORD *)v52 = 136315138;
          swift_errorRetain(v48);
          v54 = sub_100009F00((uint64_t *)&unk_1000B8740);
          v55 = String.init<A>(describing:)(&v69, v54);
          v57 = v56;
          v69 = sub_10004B4F0(v55, v56, (uint64_t *)&v70);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);
          swift_bridgeObjectRelease(v57);
          swift_errorRelease(v48);
          swift_errorRelease(v48);
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "Failed to disable OBC: %s", v52, 0xCu);
          swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v53, -1, -1);
          swift_slowDealloc(v52, -1, -1);

          swift_errorRelease(v48);
        }
        else
        {
          swift_errorRelease(v48);
          swift_errorRelease(v48);
          swift_errorRelease(v48);

        }
      }
      v2 = v66;
      v7 = v68;
    }
    else
    {
      v29 = qword_1000B7B80;
      v30 = v6;
      if (v29 != -1)
        swift_once(&qword_1000B7B80, sub_10003D8A8);
      v31 = type metadata accessor for Logger(0);
      sub_1000093F8(v31, (uint64_t)qword_1000B90F8);
      v32 = swift_retain_n(v0, 2);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc(12, -1);
        v36 = (void *)swift_slowAlloc(32, -1);
        v68 = v7;
        v37 = v36;
        v70 = v36;
        *(_DWORD *)v35 = 136315138;
        v66 = v2;
        sub_1000135B0((uint64_t)v68, (uint64_t)v5);
        v38 = sub_10002AE08();
        v39 = (uint64_t)v5;
        v41 = v40;
        sub_100013638(v39);
        v69 = sub_10004B4F0(v38, v41, (uint64_t *)&v70);
        v2 = v66;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);
        swift_release_n(v1, 2);
        swift_bridgeObjectRelease(v41);
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "No bluetooth address: %s", v35, 0xCu);
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        v42 = v37;
        v7 = v68;
        swift_slowDealloc(v42, -1, -1);
        swift_slowDealloc(v35, -1, -1);

      }
      else
      {

        swift_release_n(v0, 2);
      }
    }
    *((_BYTE *)&v7->isa + *(int *)(v2 + 80)) = 0;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
    if (Strong)
    {
      v59 = Strong;
      v60 = (uint64_t)v67;
      sub_1000135B0((uint64_t)v7, (uint64_t)v67);
      v61 = v59 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v59 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, &v70, 33, 0);
      sub_10004D348(v60, v61);
      swift_endAccess(&v70);
      sub_100077794();
      sub_100071680();
      sub_100077BC8();
      swift_unknownObjectRelease(v59);
      sub_100013638(v60);
    }

  }
  else
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_1000093F8(v25, (uint64_t)qword_1000B90F8);
    v68 = Logger.logObject.getter(v26);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v68, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v27, "Optimized battery charging is not enabled", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

  }
}

void sub_100043EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;
  uint64_t v15;
  uint64_t v16;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v3 = type metadata accessor for Logger(0);
    sub_1000093F8(v3, (uint64_t)qword_1000B90F8);
    swift_errorRetain(a2);
    v4 = swift_errorRetain(a2);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v6 = 138412290;
      swift_errorRetain(a2);
      v8 = _swift_stdlib_bridgeErrorToNSError(a2);
      v15 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
      *v7 = v8;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "### Restoring FindMy app failed: %@\n", v6, 0xCu);
      v9 = sub_100009F00(&qword_1000B93C8);
      swift_arrayDestroy(v7, 1, v9);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

      swift_errorRelease(a2);
      return;
    }
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }
  else
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_1000093F8(v10, (uint64_t)qword_1000B90F8);
    oslog = Logger.logObject.getter(v11);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v12, "### Restoring FindMy Install started", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }
  }

}

uint64_t sub_100044128(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, void *);
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v6 = sub_100009F00(&qword_1000B8A30);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, void *))(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 0, 1, v12);
  }
  else
  {
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
  }
  swift_retain(v10);
  v14 = a3;
  v11(v9, a3);
  swift_release(v10);

  return sub_100017E48((uint64_t)v9, &qword_1000B8A30);
}

uint64_t sub_100044228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000093F8(v4, (uint64_t)qword_1000B90F8);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Pairing did complete", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  if (a1)
  {
    swift_errorRetain(a1);
    swift_errorRetain(a1);
    v9 = swift_errorRetain(a1);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v21 = a1;
      v22 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_errorRetain(a1);
      v14 = sub_100009F00((uint64_t *)&unk_1000B8740);
      v15 = String.init<A>(describing:)(&v21, v14);
      v17 = v16;
      v21 = sub_10004B4F0(v15, v16, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
      swift_bridgeObjectRelease(v17);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to pair device: %s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
    if (Strong)
    {
      v19 = Strong;
      sub_100077520(0);
      swift_errorRelease(a1);
      swift_unknownObjectRelease(v19);
    }
    else
    {
      swift_errorRelease(a1);
    }
  }
  else
  {
    sub_1000444C0();
  }
  sub_10004113C(a1);
  return sub_1000449F8();
}

uint64_t sub_1000444C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint8_t *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  void *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void **aBlock;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  uint64_t v74;
  char v75[32];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v66 = *(_QWORD *)(v1 - 8);
  v67 = v1;
  __chkstk_darwin(v1, v2);
  v65 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64, v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTimeInterval(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0);
  v14 = *(_QWORD *)(v13 - 8);
  v16 = __chkstk_darwin(v13, v15);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v19);
  v21 = (char *)&v57 - v20;
  v68 = v0;
  v22 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v22, v75, 0, 0);
  if (*(_BYTE *)(v22 + *(int *)(type metadata accessor for HeadphoneModel(0) + 120)))
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_1000093F8(v23, (uint64_t)qword_1000B90F8);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Skipping device authenticity check - test mode detected", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }

    return sub_100044D18();
  }
  else
  {
    v57 = v18;
    v59 = v14;
    v60 = v12;
    v61 = v9;
    v62 = v21;
    v63 = v7;
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v29 = type metadata accessor for Logger(0);
    v30 = sub_1000093F8(v29, (uint64_t)qword_1000B90F8);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter();
    v33 = os_log_type_enabled(v31, v32);
    v58 = v4;
    v34 = v13;
    v35 = v8;
    v37 = v60;
    v36 = v61;
    v38 = v57;
    if (v33)
    {
      v39 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Beginning device authenticity check", v39, 2u);
      swift_slowDealloc(v39, -1, -1);
    }

    v40 = v68;
    v41 = *(void **)(v68 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery);
    v73 = sub_100045930;
    v74 = 0;
    aBlock = _NSConcreteStackBlock;
    v70 = 1107296256;
    v71 = sub_1000410E8;
    v72 = &unk_1000A8070;
    v42 = _Block_copy(&aBlock);
    objc_msgSend(v41, "activateWithCompletion:", v42);
    _Block_release(v42);
    sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
    v43 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    *v37 = 5;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v36 + 104))(v37, enum case for DispatchTimeInterval.seconds(_:), v35);
    v44 = v38;
    v45 = v62;
    + infix(_:_:)(v44, v37);
    (*(void (**)(_QWORD *, uint64_t))(v36 + 8))(v37, v35);
    v46 = *(void (**)(char *, uint64_t))(v59 + 8);
    v46(v44, v34);
    v73 = sub_10004D6E4;
    v74 = v40;
    aBlock = _NSConcreteStackBlock;
    v70 = 1107296256;
    v71 = sub_100012FBC;
    v72 = &unk_1000A8098;
    v47 = _Block_copy(&aBlock);
    v48 = v74;
    swift_retain(v40);
    swift_release(v48);
    v49 = v63;
    static DispatchQoS.unspecified.getter(v50);
    aBlock = (void **)&_swiftEmptyArrayStorage;
    v51 = sub_10000A1B0((unint64_t *)&qword_1000B8330, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v52 = sub_100009F00(&qword_1000B8338);
    v53 = sub_100015EF8((unint64_t *)&qword_1000B8340, &qword_1000B8338, (uint64_t)&protocol conformance descriptor for [A]);
    v54 = v65;
    v55 = v52;
    v56 = v67;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v55, v53, v67, v51);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v45, v49, v54, v47);
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v66 + 8))(v54, v56);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v64);
    return ((uint64_t (*)(char *, uint64_t))v46)(v45, v34);
  }
}

uint64_t sub_1000449F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  Swift::String v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  _QWORD v48[2];
  Swift::String v49;
  _QWORD v50[2];
  char v51[24];
  char v52[32];

  v1 = sub_100009F00(&qword_1000B9348);
  __chkstk_darwin(v1, v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100009F00(&qword_1000B9350);
  __chkstk_darwin(v5, v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v13 = __chkstk_darwin(v9, v12);
  v14 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v15);
  v17 = (char *)&v40 - v16;
  v18 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo, v52, 0, 0);
  sub_10001B868(v18, (uint64_t)v8, &qword_1000B9350);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_100017E48((uint64_t)v8, &qword_1000B9350);
  v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v20(v17, v8, v9);
  v21 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v51, 0, 0);
  v23 = *(_QWORD *)(v21 + 136);
  if (v23)
  {
    v46 = *(_QWORD *)(v21 + 128);
    v24 = String.lowercased()();
    v43 = v4;
    v49 = v24;
    v48[0] = 58;
    v48[1] = 0xE100000000000000;
    v47[0] = 45;
    v47[1] = 0xE100000000000000;
    v25 = sub_10004D454();
    v44 = v20;
    v26 = v25;
    v27 = sub_10004D498();
    v45 = v0;
    v28 = v27;
    swift_bridgeObjectRetain(v23);
    RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)(v50, v48, v47, 0x7FFFFFFFFFFFFFFFLL, &type metadata for String, &type metadata for String, &type metadata for String, v26, v28, v28, &protocol witness table for Character);
    swift_bridgeObjectRelease(v24._object);
    v41 = v50[1];
    v42 = v50[0];
    v29 = type metadata accessor for TaskPriority(0);
    v30 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v43, 1, 1, v29);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v17, v9);
    v31 = *(unsigned __int8 *)(v10 + 80);
    v32 = (v31 + 48) & ~v31;
    v33 = (v11 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
    v35 = (char *)swift_allocObject(&unk_1000A8030, v34 + 8, v31 | 7);
    *((_QWORD *)v35 + 2) = 0;
    *((_QWORD *)v35 + 3) = 0;
    *((_QWORD *)v35 + 4) = v46;
    *((_QWORD *)v35 + 5) = v23;
    v44(&v35[v32], v14, v9);
    v36 = &v35[v33];
    v37 = v41;
    *(_QWORD *)v36 = v42;
    *((_QWORD *)v36 + 1) = v37;
    v38 = v45;
    *(_QWORD *)&v35[v34] = v45;
    swift_retain(v38);
    v39 = sub_1000498B8(v30, (uint64_t)&unk_1000B9370, (uint64_t)v35);
    v22 = swift_release(v39);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v17, v9, v22);
}

uint64_t sub_100044D18()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  int v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t Strong;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  int v67;
  _BYTE v68[24];

  v1 = (int *)type metadata accessor for HeadphoneModel(0);
  v3 = __chkstk_darwin(v1, v2);
  v66 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v5);
  v7 = (char *)&v65 - v6;
  v8 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  v9 = v0;
  v65 = v0;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v68, 0, 0);
  sub_1000135B0(v8, (uint64_t)v7);
  v10 = (uint64_t)&v7[v1[11]];
  sub_100017E48(v10, &qword_1000B8A30);
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (_QWORD *)(v9 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  v13 = *v12;
  v14 = v12[1];
  ObjectType = swift_getObjectType(*v12, v15);
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 128);
  swift_unknownObjectRetain(v13);
  v18 = v17(ObjectType, v14);
  v20 = v19;
  swift_unknownObjectRelease(v13);
  if (v20)
    v21 = v18;
  else
    v21 = 0;
  if (v20)
    v22 = v20;
  else
    v22 = 0xE000000000000000;
  v23 = &v7[v1[13]];
  swift_bridgeObjectRelease(*((_QWORD *)v23 + 1));
  *(_QWORD *)v23 = v21;
  *((_QWORD *)v23 + 1) = v22;
  v24 = *v12;
  v25 = v12[1];
  v27 = swift_getObjectType(*v12, v26);
  v28 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 144);
  swift_unknownObjectRetain(v24);
  LODWORD(v25) = v28(v27, v25);
  swift_unknownObjectRelease(v24);
  *(_DWORD *)&v7[v1[12]] = v25;
  v29 = *v12;
  v30 = v12[1];
  v32 = swift_getObjectType(*v12, v31);
  v33 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 136);
  swift_unknownObjectRetain(v29);
  LOBYTE(v30) = v33(v32, v30);
  swift_unknownObjectRelease(v29);
  v7[v1[32]] = v30 & 1;
  v34 = (void *)objc_opt_self(HPSiriController);
  v35 = *(unsigned int *)(v8 + v1[31]);
  v36 = *v12;
  v37 = v12[1];
  v39 = swift_getObjectType(*v12, v38);
  v40 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 152);
  swift_unknownObjectRetain(v36);
  LOBYTE(v37) = v40(v39, v37);
  swift_unknownObjectRelease(v36);
  v41 = v37 & 1;
  v42 = v65;
  LOBYTE(v36) = objc_msgSend(v34, "shouldPromptForAnnounceCallsForProductID:supportsInEarDetection:isUpsellFlow:", v35, v41, 0);
  v7[v1[37]] = v36 | objc_msgSend(v34, "shouldPromptForAnnounceNotificationsForProductID:isUpsellFlow:", *(unsigned int *)(v8 + v1[31]), 0);
  v43 = v66;
  sub_1000135B0((uint64_t)v7, v66);
  sub_10003D960(v43);
  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v44 = type metadata accessor for Logger(0);
  sub_1000093F8(v44, (uint64_t)qword_1000B90F8);
  v45 = swift_retain(v42);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v48 = 67109120;
    v67 = *(_DWORD *)(v8 + v1[31]);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, v68);
    swift_release(v42);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "will attempt to fetch MI with model named %u", v48, 8u);
    swift_slowDealloc(v48, -1, -1);

  }
  else
  {

    swift_release(v42);
  }
  sub_100013410((_QWORD *)(v42 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_offersClient), *(_QWORD *)(v42 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_offersClient + 24));
  v49 = *(_DWORD *)(v8 + v1[31]);
  v50 = sub_10007084C(v49);
  v51 = swift_allocObject(&unk_1000A80D0, 24, 7);
  swift_weakInit(v51 + 16, v42);
  v67 = v49;
  swift_retain(v51);
  v52 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
  v54 = v53;
  if ((v50 & 1) != 0)
    v55 = 0xD000000000000018;
  else
    v55 = 0xD000000000000016;
  if ((v50 & 1) != 0)
    v56 = 0x800000010008ED70;
  else
    v56 = 0x800000010008ED50;
  sub_100013808(v52, v53, v55, v56, 0x636973756DLL, 0xE500000000000000, (uint64_t)sub_10004D710, v51);
  swift_release_n(v51, 2);
  swift_bridgeObjectRelease(v54);
  swift_bridgeObjectRelease(v56);
  Strong = swift_unknownObjectWeakLoadStrong(v42 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
  if (Strong)
  {
    v59 = Strong;
    sub_100077520(1);
    swift_unknownObjectRelease(v59);
  }
  v60 = *v12;
  v61 = v12[1];
  v62 = swift_getObjectType(v60, v58);
  v63 = *(void (**)(uint64_t, uint64_t))(v61 + 168);
  swift_unknownObjectRetain(v60);
  v63(v62, v61);
  swift_unknownObjectRelease(v60);
  return sub_100013638((uint64_t)v7);
}

uint64_t sub_10004520C(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24, v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = swift_allocObject(&unk_1000A80F8, 40, 7);
  *(_QWORD *)(v15 + 16) = a1;
  v16 = a2 & 1;
  *(_BYTE *)(v15 + 24) = a2 & 1;
  *(_QWORD *)(v15 + 32) = a3;
  aBlock[4] = sub_10004D74C;
  v27 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FBC;
  aBlock[3] = &unk_1000A8110;
  v17 = _Block_copy(aBlock);
  v18 = v27;
  sub_100015DF0(a1, v16);
  swift_retain(a3);
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v20 = sub_10000A1B0((unint64_t *)&qword_1000B8330, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_100009F00(&qword_1000B8338);
  v22 = sub_100015EF8((unint64_t *)&qword_1000B8340, &qword_1000B8338, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v6, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v24);
}

void sub_100045440(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  unsigned __int8 v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t Strong;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char v50;
  uint64_t v51;
  _BYTE v52[24];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];

  v6 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v6, v7);
  v9 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a3 + 16;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v30 = type metadata accessor for Logger(0);
    sub_1000093F8(v30, (uint64_t)qword_1000B90F8);
    swift_errorRetain(a1);
    v31 = swift_errorRetain(a1);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v51 = v6;
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = swift_slowAlloc(32, -1);
      v55[0] = v35;
      *(_DWORD *)v34 = 136315138;
      v53 = (uint64_t)a1;
      swift_errorRetain(a1);
      v36 = sub_100009F00((uint64_t *)&unk_1000B8740);
      v37 = String.init<A>(describing:)(&v53, v36);
      v39 = v38;
      v53 = sub_10004B4F0(v37, v38, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54);
      v40 = v39;
      v6 = v51;
      swift_bridgeObjectRelease(v40);
      sub_100015DFC(a1, 1);
      sub_100015DFC(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "HeadphoneInteractor: Failed to fetch marketing item: %s", v34, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);
    }
    else
    {
      sub_100015DFC(a1, 1);
      sub_100015DFC(a1, 1);
    }

    swift_beginAccess(v10, v55, 0, 0);
    Strong = swift_weakLoadStrong(v10);
    if (Strong)
    {
      v19 = Strong;
      v42 = Strong + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(Strong + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, &v53, 1, 0);
      v43 = v42 + *(int *)(v6 + 168);
      v44 = *(void **)v43;
      *(_QWORD *)v43 = a1;
      v45 = *(_BYTE *)(v43 + 8);
      *(_BYTE *)(v43 + 8) = 1;
      swift_errorRetain(a1);
      sub_10004D75C(v44, v45);
      v46 = swift_unknownObjectWeakLoadStrong(v19 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
      if (v46)
      {
        v47 = v46;
        sub_1000135B0(v42, (uint64_t)v9);
        v48 = v47 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
        swift_beginAccess(v47 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v52, 33, 0);
        sub_10004D348((uint64_t)v9, v48);
        swift_endAccess(v52);
        sub_100077794();
        sub_100071680();
        sub_100077BC8();
        swift_unknownObjectRelease(v47);
        sub_100013638((uint64_t)v9);
      }
      v28 = a1;
      v29 = 1;
      goto LABEL_19;
    }
    v49 = a1;
    v50 = 1;
  }
  else
  {
    v11 = qword_1000B7B80;
    v12 = a1;
    if (v11 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_1000093F8(v13, (uint64_t)qword_1000B90F8);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HeadphoneInteractor: Successfully retrieved MI", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    swift_beginAccess(v10, v55, 0, 0);
    v18 = swift_weakLoadStrong(v10);
    if (v18)
    {
      v19 = v18;
      v20 = v18 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v18 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, &v53, 1, 0);
      v21 = v20 + *(int *)(v6 + 168);
      v22 = *(void **)v21;
      *(_QWORD *)v21 = a1;
      v23 = *(_BYTE *)(v21 + 8);
      *(_BYTE *)(v21 + 8) = 0;
      v24 = v12;
      sub_10004D75C(v22, v23);
      v25 = swift_unknownObjectWeakLoadStrong(v19 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
      if (v25)
      {
        v26 = v25;
        sub_1000135B0(v20, (uint64_t)v9);
        v27 = v26 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
        swift_beginAccess(v26 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v52, 33, 0);
        sub_10004D348((uint64_t)v9, v27);
        swift_endAccess(v52);
        sub_100077794();
        sub_100071680();
        sub_100077BC8();
        swift_unknownObjectRelease(v26);
        sub_100013638((uint64_t)v9);
      }
      v28 = a1;
      v29 = 0;
LABEL_19:
      sub_100015DFC(v28, v29);
      swift_release(v19);
      return;
    }
    v49 = a1;
    v50 = 0;
  }
  sub_100015DFC(v49, v50);
}

void sub_100045930(uint64_t a1)
{
  sub_100045944(a1, "CB Device discovery started", "CB Devices discovery failed to start: %s");
}

void sub_100045944(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *oslog;
  uint64_t v20;
  uint64_t v21;

  if (a1)
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v5 = type metadata accessor for Logger(0);
    sub_1000093F8(v5, (uint64_t)qword_1000B90F8);
    swift_errorRetain(a1);
    v6 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v6);
    v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v20 = a1;
      v21 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_errorRetain(a1);
      v10 = sub_100009F00(&qword_1000B8720);
      v11 = String.init<A>(reflecting:)(&v20, v10);
      v13 = v12;
      v20 = sub_10004B4F0(v11, v12, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, a3, v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      return;
    }
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_1000093F8(v15, (uint64_t)qword_1000B90F8);
    oslog = Logger.logObject.getter(v16);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v17, a2, v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }
  }

}

uint64_t sub_100045BD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *object;
  id v15;
  NSString v16;
  id v17;
  NSString v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  unint64_t v23;
  Class isa;
  NSString v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];

  v2 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v2, v3);
  v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v30, 1, 0);
  if ((*(_BYTE *)(v6 + *(int *)(v2 + 164)) & 1) == 0)
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_1000093F8(v8, (uint64_t)qword_1000B90F8);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "CB Device genuine check timed out after 5 seconds", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    if (*(_QWORD *)(v6 + 136))
    {
      object = String.uppercased()()._object;
      v15 = objc_allocWithZone((Class)NSUserDefaults);
      v16 = String._bridgeToObjectiveC()();
      v17 = objc_msgSend(v15, "initWithSuiteName:", v16);

      if (v17)
      {
        v18 = String._bridgeToObjectiveC()();
        v19 = objc_msgSend(v17, "dictionaryForKey:", v18);

        if (v19)
        {

          swift_bridgeObjectRelease(object);
        }
        else
        {
          v23 = sub_100070AC0((uint64_t)&off_1000A58F0);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v23);
          v25 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(object);
          objc_msgSend(v17, "setObject:forKey:", isa, v25);

        }
      }
      else
      {
        swift_bridgeObjectRelease(object);
      }
    }
    else
    {
      v20 = Logger.logObject.getter(v13);
      v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "No bluetooth address found", v22, 2u);
        swift_slowDealloc(v22, -1, -1);
      }

    }
    *(_BYTE *)(v6 + *(int *)(v2 + 164)) = 1;
    Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
    if (Strong)
    {
      v27 = Strong;
      sub_1000135B0(v6, (uint64_t)v5);
      v28 = v27 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v27 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v29, 33, 0);
      sub_10004D348((uint64_t)v5, v28);
      swift_endAccess(v29);
      sub_100077794();
      sub_100071680();
      sub_100077BC8();
      swift_unknownObjectRelease(v27);
      sub_100013638((uint64_t)v5);
    }
    return sub_100044D18();
  }
  return result;
}

uint64_t sub_100045F54(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = &unk_1000B7000;
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v5 = type metadata accessor for Logger(0);
    sub_1000093F8(v5, (uint64_t)qword_1000B90F8);
    swift_errorRetain(a1);
    v6 = swift_errorRetain(a1);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v28 = a1;
      v29 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_errorRetain(a1);
      v11 = sub_100009F00((uint64_t *)&unk_1000B8740);
      v12 = String.init<A>(describing:)(&v28, v11);
      v14 = v13;
      v28 = sub_10004B4F0(v12, v13, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);
      swift_bridgeObjectRelease(v14);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to disconnect device: %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      v15 = v9;
      v3 = (_QWORD *)&unk_1000B7000;
      swift_slowDealloc(v15, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  if (v3[368] != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_1000093F8(v16, (uint64_t)qword_1000B90F8);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Dismissing after disconnect", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  v22 = *(_QWORD *)(a2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession + 8);
  ObjectType = swift_getObjectType(v21, v23);
  v25 = *(void (**)(uint64_t, uint64_t))(v22 + 168);
  swift_unknownObjectRetain(v21);
  v25(ObjectType, v22);
  swift_unknownObjectRelease(v21);
  result = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (result)
  {
    v27 = result;
    sub_10002ECCC();
    return swift_unknownObjectRelease(v27);
  }
  return result;
}

void sub_10004623C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  void (*v21)(uint64_t, uint64_t);
  NSObject *oslog;
  uint64_t v23;
  uint64_t v24;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v3 = type metadata accessor for Logger(0);
    sub_1000093F8(v3, (uint64_t)qword_1000B90F8);
    swift_errorRetain(a1);
    v4 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v23 = a1;
      v24 = v7;
      *(_DWORD *)v6 = 136315138;
      swift_errorRetain(a1);
      v8 = sub_100009F00((uint64_t *)&unk_1000B8740);
      v9 = String.init<A>(reflecting:)(&v23, v8);
      v11 = v10;
      v23 = sub_10004B4F0(v9, v10, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
      swift_bridgeObjectRelease(v11);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Failed to unpair device: %s)", v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v13 = type metadata accessor for Logger(0);
    sub_1000093F8(v13, (uint64_t)qword_1000B90F8);
    v14 = ((uint64_t (*)(void))Logger.logObject.getter)();
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Successfully unpaired device. Cleaning up pairing session", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    v18 = *(_QWORD *)(a2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
    v17 = *(_QWORD *)(a2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession + 8);
    ObjectType = swift_getObjectType(v18, v19);
    v21 = *(void (**)(uint64_t, uint64_t))(v17 + 168);
    swift_unknownObjectRetain(v18);
    v21(ObjectType, v17);
    swift_unknownObjectRelease(v18);
  }
}

void sub_100046534(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD v37[5];
  uint64_t v38;
  __int128 v39;
  __int128 v40;

  v2 = v1;
  v4 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v4, v5);
  v6 = objc_msgSend(a1, "bleDevice");
  if (!v6
    || (v7 = v6, v8 = objc_msgSend(v6, "advertisementFields"), v7, !v8))
  {
    v39 = 0u;
    v40 = 0u;
LABEL_7:
    sub_100017E48((uint64_t)&v39, &qword_1000B87B0);
LABEL_8:
    v12 = 0;
    goto LABEL_9;
  }
  v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  *(_QWORD *)&v39 = 25452;
  *((_QWORD *)&v39 + 1) = 0xE200000000000000;
  AnyHashable.init<A>(_:)(v37, &v39, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_100034BC4((uint64_t)v37), (v11 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(v9 + 56) + 32 * v10, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  swift_bridgeObjectRelease(v9);
  sub_10002E16C((uint64_t)v37);
  if (!*((_QWORD *)&v40 + 1))
    goto LABEL_7;
  if (!swift_dynamicCast(v37, &v39, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
    goto LABEL_8;
  v12 = LOBYTE(v37[0]);
LABEL_9:
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_allowRepairAutoConnect) == 1
    && ((objc_msgSend(a1, "needsSetup") ^ 1 | v12) & 1) == 0)
  {
    v13 = v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v37, 1, 0);
    if ((*(_QWORD *)(v13 + *(int *)(v4 + 144)) & 0x8000000000000000) != 0)
    {
      v14 = objc_msgSend(a1, "bleDevice");
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(v14, "rssiFloor");

      }
      else
      {
        v16 = 0;
      }
      if ((sub_10004D7B4((unint64_t)v16, *(_QWORD *)(v13 + *(int *)(v4 + 144))) & 0x80000000) == 0)
      {
        v17 = objc_msgSend(a1, "bleDevice");
        if (v17)
        {
          v18 = v17;
          v19 = objc_msgSend(v17, "bluetoothAddress");

          if (v19)
          {
            static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
            v21 = v20;

            __asm { BR              X10 }
          }
        }
        if (qword_1000B7B80 != -1)
          swift_once(&qword_1000B7B80, sub_10003D8A8);
        v22 = type metadata accessor for Logger(0);
        sub_1000093F8(v22, (uint64_t)qword_1000B90F8);
        v23 = a1;
        v24 = Logger.logObject.getter(v23);
        v25 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc(12, -1);
          v27 = swift_slowAlloc(32, -1);
          v38 = v27;
          *(_DWORD *)v26 = 136315138;
          v28 = objc_msgSend(v23, "bleDevice");
          v29 = v28;
          if (v28)
          {
            v30 = objc_msgSend(v28, "bluetoothAddress");

            if (v30)
            {
              v29 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v30);
              v32 = v31;

LABEL_32:
              *(_QWORD *)&v39 = v29;
              *((_QWORD *)&v39 + 1) = v32;
              v33 = sub_100009F00(&qword_1000B93C0);
              v34 = String.init<A>(reflecting:)(&v39, v33);
              v36 = v35;
              *(_QWORD *)&v39 = sub_10004B4F0(v34, v35, &v38);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, (char *)&v39 + 8);

              swift_bridgeObjectRelease(v36);
              _os_log_impl((void *)&_mh_execute_header, v24, v25, "Invalid bluetooth address length: %s", v26, 0xCu);
              swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v27, -1, -1);
              swift_slowDealloc(v26, -1, -1);

              return;
            }
            v29 = 0;
          }
          v32 = 0xF000000000000000;
          goto LABEL_32;
        }

      }
    }
  }
}

uint64_t sub_100046E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(v8 + 168) = v22;
  *(_QWORD *)(v8 + 176) = v23;
  *(_QWORD *)(v8 + 152) = a7;
  *(_QWORD *)(v8 + 160) = a8;
  *(_BYTE *)(v8 + 372) = a6;
  *(_DWORD *)(v8 + 368) = a5;
  *(_QWORD *)(v8 + 144) = a4;
  v9 = ((uint64_t (*)(_QWORD))type metadata accessor for HeadphonePairing2.AssetRequest)(0);
  *(_QWORD *)(v8 + 184) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 192) = v10;
  *(_QWORD *)(v8 + 200) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100009F00(&qword_1000B93F8);
  *(_QWORD *)(v8 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100009F00(&qword_1000B9350);
  *(_QWORD *)(v8 + 216) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo(0);
  *(_QWORD *)(v8 + 224) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 232) = v14;
  *(_QWORD *)(v8 + 240) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = ((uint64_t (*)(_QWORD))type metadata accessor for HeadphonePairing2.Configuration)(0);
  *(_QWORD *)(v8 + 248) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v8 + 256) = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 264) = swift_task_alloc(v17);
  *(_QWORD *)(v8 + 272) = swift_task_alloc(v17);
  v18 = type metadata accessor for HeadphoneHardwareModel(0);
  *(_QWORD *)(v8 + 280) = v18;
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v8 + 288) = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 296) = swift_task_alloc(v20);
  *(_QWORD *)(v8 + 304) = swift_task_alloc(v20);
  *(_QWORD *)(v8 + 312) = swift_task_alloc(v20);
  return swift_task_switch(sub_100046FA4, 0, 0);
}

uint64_t sub_100046FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unsigned int v7;
  _QWORD *v8;
  int v10;
  void *v11;
  id v12;
  unsigned int v13;
  int v14;
  int v15;
  id v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  int v22;
  id v23;
  unsigned int v24;
  int v25;
  id v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 144) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 320) = Strong;
  if (Strong)
  {
    v3 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    *(_QWORD *)(v0 + 328) = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    v4 = Strong + v3;
    swift_beginAccess(Strong + v3, v0 + 40, 0, 0);
    v5 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", *(unsigned int *)(v4 + *(int *)(type metadata accessor for HeadphoneModel(0) + 124)));
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "supportsDigitalEngraving");

      if (v7)
      {
        v8 = (_QWORD *)swift_task_alloc(dword_1000B9404);
        *(_QWORD *)(v0 + 336) = v8;
        *v8 = v0;
        v8[1] = sub_1000474EC;
        return sub_100048220();
      }
    }
    v10 = *(_DWORD *)(v0 + 368);
    v11 = (void *)objc_opt_self(SFHeadphoneProduct);
    v12 = objc_msgSend(v11, "airPods");
    v13 = objc_msgSend(v12, "productID");

    v14 = *(unsigned __int8 *)(v0 + 372);
    if ((v13 == v10
       || (v15 = *(_DWORD *)(v0 + 368),
           v16 = objc_msgSend(v11, "airPodsSecondGeneration"),
           v17 = objc_msgSend(v16, "productID"),
           v16,
           v17 == v15))
      && v14 == 1)
    {
      v18 = *(_QWORD *)(v0 + 312);
      v19 = *(_QWORD *)(v0 + 280);
      v20 = *(_QWORD *)(v0 + 288);
      v21 = (unsigned int *)&enum case for HeadphoneHardwareModel.airPodsSecondGeneration(_:);
    }
    else
    {
      v22 = *(_DWORD *)(v0 + 368);
      v23 = objc_msgSend(v11, "b698");
      v24 = objc_msgSend(v23, "productID");

      if (v24 != v22)
      {
        v25 = *(_DWORD *)(v0 + 368);
        v26 = objc_msgSend(v11, "b698");
        v27 = objc_msgSend(v26, "altProductID");

        if (v27 != v25)
        {
          HeadphoneHardwareModel.init(productID:)(*(unsigned int *)(v0 + 368));
          (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 32))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 280));
          goto LABEL_13;
        }
      }
      v18 = *(_QWORD *)(v0 + 312);
      v19 = *(_QWORD *)(v0 + 280);
      v20 = *(_QWORD *)(v0 + 288);
      v21 = (unsigned int *)&enum case for HeadphoneHardwareModel.b698(_:);
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v18, *v21, v19);
LABEL_13:
    v28 = *(_QWORD *)(v0 + 296);
    v29 = *(_QWORD *)(v0 + 152);
    v30 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 16))(v28, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 280));
    DefaultAssetRequestTimeout.getter(v30);
    HeadphonePairing2.Configuration.init(hardwareModel:color:timeout:)(v28, v29);
    v31 = *(_QWORD *)(v0 + 264);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 16))(v31, *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248));
    HeadphonePairing2.AssetRequest.init(configuration:)(v31);
    v32 = (_QWORD *)swift_task_alloc(async function pointer to HeadphonePairing2.AssetRequest.assets()[1]);
    *(_QWORD *)(v0 + 344) = v32;
    *v32 = v0;
    v32[1] = sub_100047DE4;
    return HeadphonePairing2.AssetRequest.assets()();
  }
  v33 = *(_QWORD *)(v0 + 304);
  v34 = *(_QWORD *)(v0 + 296);
  v36 = *(_QWORD *)(v0 + 264);
  v35 = *(_QWORD *)(v0 + 272);
  v37 = *(_QWORD *)(v0 + 240);
  v39 = *(_QWORD *)(v0 + 208);
  v38 = *(_QWORD *)(v0 + 216);
  v40 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000474EC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 336));
  return swift_task_switch(sub_100047540, 0, 0);
}

uint64_t sub_100047540()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  int v10;
  id v11;
  unsigned int v12;
  int v14;
  id v15;
  unsigned int v16;
  int v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  id v37;
  NSString v38;
  id v39;
  NSString v40;
  NSString v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  v1 = *(_DWORD *)(v0 + 368);
  v2 = (void *)objc_opt_self(SFHeadphoneProduct);
  v3 = objc_msgSend(v2, "airPods");
  v4 = objc_msgSend(v3, "productID");

  v5 = *(unsigned __int8 *)(v0 + 372);
  if (v4 == v1)
  {
    if (v5 == 1)
    {
LABEL_3:
      v6 = *(_QWORD *)(v0 + 312);
      v7 = *(_QWORD *)(v0 + 280);
      v8 = *(_QWORD *)(v0 + 288);
      v9 = (unsigned int *)&enum case for HeadphoneHardwareModel.airPodsSecondGeneration(_:);
LABEL_11:
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v6, *v9, v7);
      goto LABEL_12;
    }
  }
  else
  {
    v10 = *(_DWORD *)(v0 + 368);
    v11 = objc_msgSend(v2, "airPodsSecondGeneration");
    v12 = objc_msgSend(v11, "productID");

    if (v12 == v10 && v5 == 1)
      goto LABEL_3;
  }
  v14 = *(_DWORD *)(v0 + 368);
  v15 = objc_msgSend(v2, "b698");
  v16 = objc_msgSend(v15, "productID");

  if (v16 == v14
    || (v17 = *(_DWORD *)(v0 + 368),
        v18 = objc_msgSend(v2, "b698"),
        v19 = objc_msgSend(v18, "altProductID"),
        v18,
        v19 == v17))
  {
    v6 = *(_QWORD *)(v0 + 312);
    v7 = *(_QWORD *)(v0 + 280);
    v8 = *(_QWORD *)(v0 + 288);
    v9 = (unsigned int *)&enum case for HeadphoneHardwareModel.b698(_:);
    goto LABEL_11;
  }
  HeadphoneHardwareModel.init(productID:)(*(unsigned int *)(v0 + 368));
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 32))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 280));
LABEL_12:
  v20 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 152);
  v22 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 16))(v20, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 280));
  DefaultAssetRequestTimeout.getter(v22);
  HeadphonePairing2.Configuration.init(hardwareModel:color:timeout:)(v20, v21);
  if (qword_1000B7B88 != -1)
    swift_once(&qword_1000B7B88, sub_10003D938);
  v23 = *(_QWORD *)(v0 + 168);
  v25 = qword_1000B9110;
  v24 = *(_QWORD *)algn_1000B9118;
  sub_10002913C(qword_1000B9110, *(unint64_t *)algn_1000B9118);
  v27 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 168);
  v28 = v23 >> 60;
  if (v23 >> 60 == 15)
  {
    sub_10002E1A0(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
    sub_10002E1A0(v25, v24);
  }
  else
  {
    sub_10004D6D0(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
    sub_10004CB18(v27, v26);
    v30 = v29;
    sub_10002931C(v25, v24);
    v31 = sub_10002E1A0(v27, v26);
    if ((v30 & 1) != 0 && IsAppleInternalBuild(v31))
    {
      if (qword_1000B7B80 != -1)
        swift_once(&qword_1000B7B80, sub_10003D8A8);
      v32 = type metadata accessor for Logger(0);
      v33 = sub_1000093F8(v32, (uint64_t)qword_1000B90F8);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Found LiveOn engraving data, switching to sandbox environment", v36, 2u);
        swift_slowDealloc(v36, -1, -1);
      }

      v37 = objc_allocWithZone((Class)NSUserDefaults);
      v38 = String._bridgeToObjectiveC()();
      v39 = objc_msgSend(v37, "initWithSuiteName:", v38);

      if (!v39)
        v39 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v40 = String._bridgeToObjectiveC()();
      v41 = String._bridgeToObjectiveC()();
      objc_msgSend(v39, "setValue:forKey:", v40, v41);

    }
  }
  v42 = *(_QWORD *)(v0 + 224);
  v43 = *(_QWORD *)(v0 + 232);
  v44 = *(_QWORD *)(v0 + 216);
  sub_10001B868(*(_QWORD *)(v0 + 176), v44, &qword_1000B9350);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42) == 1)
  {
    sub_100017E48(*(_QWORD *)(v0 + 216), &qword_1000B9350);
    if (v28 > 0xE)
    {
      v45 = *(_QWORD *)(*(_QWORD *)(v0 + 320) + *(_QWORD *)(v0 + 328) + 136);
      if (v45)
      {
        v46 = *(_QWORD *)(v0 + 208);
        v47 = String.lowercased()();
        *(Swift::String *)(v0 + 80) = v47;
        *(_QWORD *)(v0 + 96) = 58;
        *(_QWORD *)(v0 + 104) = 0xE100000000000000;
        *(_QWORD *)(v0 + 112) = 45;
        *(_QWORD *)(v0 + 120) = 0xE100000000000000;
        v48 = sub_10004D454();
        v49 = sub_10004D498();
        swift_bridgeObjectRetain(v45);
        RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)((_QWORD *)(v0 + 64), v0 + 96, v0 + 112, 0x7FFFFFFFFFFFFFFFLL, &type metadata for String, &type metadata for String, &type metadata for String, v48, v49, v49, &protocol witness table for Character);
        swift_bridgeObjectRelease(v47._object);
        swift_bridgeObjectRelease(v45);
        PersonalizationAssetManager.PostPairingAssetInfo.init(stableBluetoothIdentifier:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
        v50 = enum case for PersonalizationAssetManager.AssetInfo.postPairing(_:);
        v51 = type metadata accessor for PersonalizationAssetManager.AssetInfo(0);
        v52 = *(_QWORD *)(v51 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 104))(v46, v50, v51);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v46, 0, 1, v51);
        HeadphonePairing2.Configuration.personalizationAssetInfo.setter(v46);
      }
    }
  }
  else
  {
    v54 = *(_QWORD *)(v0 + 232);
    v53 = *(_QWORD *)(v0 + 240);
    v55 = *(_QWORD *)(v0 + 224);
    v56 = *(_QWORD *)(v0 + 208);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v54 + 32))(v53, *(_QWORD *)(v0 + 216), v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v56, v53, v55);
    v57 = enum case for PersonalizationAssetManager.AssetInfo.prePairing(_:);
    v58 = type metadata accessor for PersonalizationAssetManager.AssetInfo(0);
    v59 = *(_QWORD *)(v58 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 104))(v56, v57, v58);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    HeadphonePairing2.Configuration.personalizationAssetInfo.setter(v56);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
  }
  v60 = *(_QWORD *)(v0 + 264);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 16))(v60, *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248));
  HeadphonePairing2.AssetRequest.init(configuration:)(v60);
  v61 = (_QWORD *)swift_task_alloc(async function pointer to HeadphonePairing2.AssetRequest.assets()[1]);
  *(_QWORD *)(v0 + 344) = v61;
  *v61 = v0;
  v61[1] = sub_100047DE4;
  return HeadphonePairing2.AssetRequest.assets()();
}

uint64_t sub_100047DE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 344);
  *(_QWORD *)(*v2 + 352) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100047F60;
  }
  else
  {
    *(_QWORD *)(v4 + 360) = a1;
    v6 = sub_100047E58;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100047E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 288);
  v20 = *(_QWORD *)(v0 + 280);
  v21 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 184);
  sub_100048C8C(v1);
  swift_release(v1);
  v10 = swift_release(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v8, v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21, v20);
  v11 = *(_QWORD *)(v0 + 304);
  v12 = *(_QWORD *)(v0 + 296);
  v14 = *(_QWORD *)(v0 + 264);
  v13 = *(_QWORD *)(v0 + 272);
  v15 = *(_QWORD *)(v0 + 240);
  v17 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 216);
  v18 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100047F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 256);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 352);
  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v8 = type metadata accessor for Logger(0);
  sub_1000093F8(v8, (uint64_t)qword_1000B90F8);
  swift_errorRetain(v7);
  v9 = swift_errorRetain(v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    *(_DWORD *)v12 = 136315138;
    v31 = v13;
    *(_QWORD *)(v0 + 136) = v7;
    swift_errorRetain(v7);
    v14 = sub_100009F00((uint64_t *)&unk_1000B8740);
    v15 = String.init<A>(reflecting:)(v0 + 136, v14);
    v17 = v16;
    *(_QWORD *)(v0 + 128) = sub_10004B4F0(v15, v16, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Could not fetch assets: %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }

  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(void (**)(uint64_t))(v18
                                       + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  if (v19)
  {
    v20 = *(_QWORD *)(v18 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler + 8);
    v21 = swift_retain(v20);
    v19(v21);
    swift_errorRelease(v7);
    sub_10004D7DC((uint64_t)v19, v20);
  }
  else
  {
    swift_errorRelease(v7);
  }
  swift_release(v18);
  v22 = *(_QWORD *)(v0 + 304);
  v23 = *(_QWORD *)(v0 + 296);
  v25 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 272);
  v26 = *(_QWORD *)(v0 + 240);
  v28 = *(_QWORD *)(v0 + 208);
  v27 = *(_QWORD *)(v0 + 216);
  v29 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100048220()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[34] = v0;
  v2 = sub_100009F00(&qword_1000B9388);
  v1[35] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ProductError(0);
  v1[36] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[37] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[38] = swift_task_alloc(v5);
  v1[39] = swift_task_alloc(v5);
  v6 = type metadata accessor for PersonalizationAssetManager.PostPairingAssetInfo(0);
  v1[40] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[41] = v7;
  v1[42] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo(0);
  v1[43] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[44] = v9;
  v1[45] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100048304, 0, 0);
}

uint64_t sub_100048304()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  Swift::String v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HeadphoneDigitalEngravingManager()), "init");
  *(_QWORD *)(v0 + 368) = v2;
  v3 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v3, v0 + 160, 0, 0);
  v4 = *(_QWORD *)(v3 + 136);
  if (!v4)
  {

LABEL_10:
    v11 = *(_QWORD *)(v0 + 336);
    v13 = *(_QWORD *)(v0 + 304);
    v12 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 280);
    swift_task_dealloc(*(_QWORD *)(v0 + 360));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v3 + 128);
  swift_bridgeObjectRetain(v4);
  sub_10005CAE0(v5, v4, v0 + 112);
  sub_10003CFDC(v0 + 112, v0 + 64, &qword_1000B9408);
  v6 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 376) = v6;
  if (!v6)
  {

    goto LABEL_9;
  }
  v7 = *(unsigned __int8 *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 384) = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 392) = v8;
  v10 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 400) = v9;
  *(_QWORD *)(v0 + 408) = v10;
  if (v7 != 1 || v10 > 2 || v9 >> 60 == 15)
  {

    sub_10004DE1C((_QWORD *)(v0 + 112), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004DDE4);
LABEL_9:
    swift_bridgeObjectRelease(v4);
    goto LABEL_10;
  }
  sub_10004D6D0(v8, v9);
  sub_10004D6D0(v8, v9);
  sub_10004DE1C((_QWORD *)(v0 + 112), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004DE54);
  v16 = qword_1000B7B80;
  swift_bridgeObjectRetain(v6);
  if (v16 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_1000093F8(v17, (uint64_t)qword_1000B90F8);
  *(_QWORD *)(v0 + 416) = v18;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Fetching pending engraved asset", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  sub_10002913C(v8, v9);
  PersonalizationAssetManager.PrePairingAssetInfo.init(scannedBluetoothData:)(v8, v9);
  v22 = String.lowercased()();
  *(Swift::String *)(v0 + 200) = v22;
  *(_QWORD *)(v0 + 216) = 58;
  *(_QWORD *)(v0 + 224) = 0xE100000000000000;
  *(_QWORD *)(v0 + 232) = 45;
  *(_QWORD *)(v0 + 240) = 0xE100000000000000;
  v23 = sub_10004D454();
  v24 = sub_10004D498();
  RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)((_QWORD *)(v0 + 184), v0 + 216, v0 + 232, 0x7FFFFFFFFFFFFFFFLL, &type metadata for String, &type metadata for String, &type metadata for String, v23, v24, v24, &protocol witness table for Character);
  swift_bridgeObjectRelease(v22._object);
  swift_bridgeObjectRelease(v4);
  PersonalizationAssetManager.PostPairingAssetInfo.init(stableBluetoothIdentifier:)(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  *(_QWORD *)(v0 + 424) = sub_10003DA70();
  v25 = (_QWORD *)swift_task_alloc(async function pointer to PersonalizationAssetManager.storeAsset(from:to:)[1]);
  *(_QWORD *)(v0 + 432) = v25;
  *v25 = v0;
  v25[1] = sub_100048680;
  return PersonalizationAssetManager.storeAsset(from:to:)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 336));
}

uint64_t sub_100048680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 424);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 432);
  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc(v2);
  swift_release(v3);
  if (v0)
    v4 = sub_1000488B4;
  else
    v4 = sub_1000486EC;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000486EC(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Fetched pending engraved asset", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 352);
  v5 = *(_QWORD *)(v1 + 360);
  v8 = *(_QWORD *)(v1 + 336);
  v7 = *(_QWORD *)(v1 + 344);
  v9 = *(_QWORD *)(v1 + 320);
  v10 = *(_QWORD *)(v1 + 328);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v11 = *(_QWORD *)(v1 + 392);
  v12 = *(void **)(v1 + 368);
  v13 = *(_QWORD *)(v1 + 376);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v1 + 384);
  *(_QWORD *)(v1 + 24) = v13;
  *(_BYTE *)(v1 + 32) = 2;
  *(_QWORD *)(v1 + 40) = v11;
  v19 = *(_OWORD *)(v1 + 400);
  *(_OWORD *)(v1 + 48) = v19;
  swift_bridgeObjectRetain(v13);
  sub_10004D6D0(v11, v19);
  sub_10002E1A0(v11, v19);
  swift_bridgeObjectRelease(v13);
  sub_10005C460((__int128 *)(v1 + 16));

  swift_bridgeObjectRelease(v13);
  sub_10002E1A0(v11, v19);
  sub_10002E1A0(v11, v19);
  sub_10004DE1C((_QWORD *)(v1 + 112), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004DDE4);
  swift_bridgeObjectRelease(v13);
  sub_10002E1A0(v11, v19);
  v14 = *(_QWORD *)(v1 + 336);
  v16 = *(_QWORD *)(v1 + 304);
  v15 = *(_QWORD *)(v1 + 312);
  v17 = *(_QWORD *)(v1 + 280);
  swift_task_dealloc(*(_QWORD *)(v1 + 360));
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1000488B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;

  v1 = v0 + 248;
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 344);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  swift_errorRetain(v2);
  v6 = swift_errorRetain(v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 440);
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v45 = v11;
    *(_DWORD *)v10 = 136315138;
    *(_QWORD *)(v0 + 256) = v9;
    swift_errorRetain(v9);
    v12 = sub_100009F00((uint64_t *)&unk_1000B8740);
    v13 = String.init<A>(reflecting:)(v0 + 256, v12);
    v15 = v14;
    *(_QWORD *)(v0 + 264) = sub_10004B4F0(v13, v14, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 264, v0 + 272);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v9);
    v16 = v9;
    v1 = v0 + 248;
    swift_errorRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to fetch pending engraving: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 440);
    swift_errorRelease(v17);
    swift_errorRelease(v17);
  }

  v18 = *(_QWORD *)(v0 + 440);
  v19 = *(_QWORD *)(v0 + 288);
  v20 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(v0 + 248) = v18;
  swift_errorRetain(v18);
  v22 = sub_100009F00((uint64_t *)&unk_1000B8740);
  v23 = swift_dynamicCast(v21, v1, v22, v19, 6);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v25 = *(_QWORD *)(v0 + 440);
  if (!v23)
  {
    v35 = *(_QWORD *)(v0 + 280);
    v24(v35, 1, 1, *(_QWORD *)(v0 + 288));
    swift_errorRelease(v25);
    sub_100017E48(v35, &qword_1000B9388);
    goto LABEL_8;
  }
  v27 = *(_QWORD *)(v0 + 304);
  v26 = *(_QWORD *)(v0 + 312);
  v28 = *(_QWORD *)(v0 + 288);
  v29 = *(_QWORD *)(v0 + 296);
  v30 = *(_QWORD *)(v0 + 280);
  v24(v30, 0, 1, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v26, v30, v28);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v27, enum case for ProductError.assetNotFound(_:), v28);
  v31 = sub_10000A1B0(&qword_1000B9390, (uint64_t (*)(uint64_t))&type metadata accessor for ProductError, (uint64_t)&protocol conformance descriptor for ProductError);
  LOBYTE(v30) = dispatch thunk of static Equatable.== infix(_:_:)(v26, v27, v28, v31);
  swift_errorRelease(v25);
  v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v32(v27, v28);
  v32(v26, v28);
  if ((v30 & 1) == 0)
  {
LABEL_8:
    v33 = *(_QWORD *)(v0 + 408) + 1;
    v34 = 1;
    goto LABEL_9;
  }
  v33 = *(_QWORD *)(v0 + 408);
  v34 = 2;
LABEL_9:
  v37 = *(_QWORD *)(v0 + 392);
  v36 = *(_QWORD *)(v0 + 400);
  v38 = *(_QWORD *)(v0 + 376);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 384);
  v39 = *(void **)(v0 + 368);
  *(_QWORD *)(v0 + 24) = v38;
  *(_BYTE *)(v0 + 32) = v34;
  *(_QWORD *)(v0 + 40) = v37;
  *(_QWORD *)(v0 + 48) = v36;
  *(_QWORD *)(v0 + 56) = v33;
  swift_bridgeObjectRetain(v38);
  sub_10004D6D0(v37, v36);
  sub_10002E1A0(v37, v36);
  swift_bridgeObjectRelease(v38);
  sub_10005C460((__int128 *)(v0 + 16));

  swift_bridgeObjectRelease(v38);
  sub_10002E1A0(v37, v36);
  sub_10002E1A0(v37, v36);
  sub_10004DE1C((_QWORD *)(v0 + 112), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004DDE4);
  swift_bridgeObjectRelease(v38);
  sub_10002E1A0(v37, v36);
  v40 = *(_QWORD *)(v0 + 336);
  v42 = *(_QWORD *)(v0 + 304);
  v41 = *(_QWORD *)(v0 + 312);
  v43 = *(_QWORD *)(v0 + 280);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100048C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  id v26;
  NSString v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[5];
  uint64_t v50;

  v2 = v1;
  v4 = sub_100009F00(&qword_1000B9348);
  __chkstk_darwin(v4, v5);
  v46 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v48 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter();
  v17 = swift_allocObject(&unk_1000A8210, 32, 7);
  *(_QWORD *)(v17 + 16) = v1;
  *(_QWORD *)(v17 + 24) = a1;
  aBlock[4] = sub_10004DEC8;
  v50 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FBC;
  aBlock[3] = &unk_1000A8228;
  v18 = _Block_copy(aBlock);
  v19 = v50;
  v47 = v2;
  swift_retain(v2);
  swift_retain(a1);
  swift_release(v19);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_10000A1B0((unint64_t *)&qword_1000B8330, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_100009F00(&qword_1000B8338);
  v23 = sub_100015EF8((unint64_t *)&qword_1000B8340, &qword_1000B8338, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v7, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v10, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v24 = objc_allocWithZone((Class)NSUserDefaults);
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v24, "initWithSuiteName:", v25);

  if (!v26)
    v26 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v26, "BOOLForKey:", v27);

  if (v28)
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v29 = type metadata accessor for Logger(0);
    v30 = sub_1000093F8(v29, (uint64_t)qword_1000B90F8);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Manatee CloudKit migration SKIPPED, migration already ran", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

  }
  else
  {
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_1000093F8(v35, (uint64_t)qword_1000B90F8);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Manatee CloudKit migration START", v39, 2u);
      swift_slowDealloc(v39, -1, -1);
    }

    v40 = type metadata accessor for TaskPriority(0);
    v41 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v46, 1, 1, v40);
    v42 = (_QWORD *)swift_allocObject(&unk_1000A8260, 40, 7);
    v42[2] = 0;
    v42[3] = 0;
    v43 = v47;
    v42[4] = v47;
    swift_retain(v43);
    v44 = sub_1000498B8(v41, (uint64_t)&unk_1000B9418, (uint64_t)v42);
    *(_QWORD *)&result = swift_release(v44).n128_u64[0];
  }
  return result;
}

uint64_t sub_10004915C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD v24[4];

  v6 = sub_100009F00(&qword_1000B9348);
  __chkstk_darwin(v6, v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B868(a1, (uint64_t)v9, &qword_1000B9348);
  v10 = type metadata accessor for TaskPriority(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100017E48((uint64_t)v9, &qword_1000B9348);
    v13 = 4096;
    v14 = *(_QWORD *)(a3 + 16);
    if (v14)
    {
LABEL_3:
      v15 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v14, v12);
      swift_unknownObjectRetain(v14);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      v19 = v18;
      swift_unknownObjectRelease(v14);
      goto LABEL_6;
    }
  }
  else
  {
    v20 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    v13 = v20 | 0x1000;
    v14 = *(_QWORD *)(a3 + 16);
    if (v14)
      goto LABEL_3;
  }
  v17 = 0;
  v19 = 0;
LABEL_6:
  v21 = swift_allocObject(&unk_1000A81E8, 32, 7);
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = a3;
  if (v19 | v17)
  {
    v24[0] = 0;
    v24[1] = 0;
    v22 = v24;
    v24[2] = v17;
    v24[3] = v19;
  }
  else
  {
    v22 = 0;
  }
  return swift_task_create(v13, v22, (char *)&type metadata for () + 8, &unk_1000B93F0, v21);
}

uint64_t sub_1000492F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];

  v4 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v4, v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v19, 1, 0);
  v9 = *(int *)(v4 + 136);
  v10 = *(_QWORD *)(v8 + v9);
  *(_QWORD *)(v8 + v9) = a2;
  swift_retain(a2);
  swift_release(v10);
  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);
  if (result)
  {
    v12 = result;
    sub_1000135B0(v8, (uint64_t)v7);
    v13 = v12 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess(v12 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v18, 33, 0);
    sub_10004D348((uint64_t)v7, v13);
    swift_endAccess(v18);
    sub_100077794();
    sub_100071680();
    sub_100077BC8();
    swift_unknownObjectRelease(v12);
    result = sub_100013638((uint64_t)v7);
  }
  v14 = a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler;
  v15 = *(void (**)(uint64_t))(a1
                                       + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  if (v15)
  {
    v16 = *(_QWORD *)(v14 + 8);
    v17 = swift_retain(v16);
    v15(v17);
    return sub_10004D7DC((uint64_t)v15, v16);
  }
  return result;
}

uint64_t sub_100049444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = a4;
  return swift_task_switch(sub_10004945C, 0, 0);
}

uint64_t sub_10004945C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = sub_10003DA70();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to PersonalizationAssetManager.migrateToManateeContainer()[1]);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1000494B4;
  return PersonalizationAssetManager.migrateToManateeContainer()();
}

uint64_t sub_1000494B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1000496C0;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 40));
    v4 = sub_100049520;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100049520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  id v6;
  NSString v7;
  id v8;
  Class isa;
  NSString v10;

  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_1000093F8(v1, (uint64_t)qword_1000B90F8);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Manatee CloudKit migration END", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  v6 = objc_allocWithZone((Class)NSUserDefaults);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithSuiteName:", v7);

  if (!v8)
    v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setValue:forKey:", isa, v10);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000496C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  swift_release(*(_QWORD *)(v0 + 40));
  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = type metadata accessor for Logger(0);
  sub_1000093F8(v2, (uint64_t)qword_1000B90F8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 56);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v15 = v9;
    *(_DWORD *)v8 = 136315138;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v10 = sub_100009F00((uint64_t *)&unk_1000B8740);
    v11 = String.init<A>(reflecting:)(v0 + 16, v10);
    v13 = v12;
    *(_QWORD *)(v0 + 24) = sub_10004B4F0(v11, v12, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Manatee CloudKit migration FAILED {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 56));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000498B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_100017E48(a1, &qword_1000B9348);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v10, v8);
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_1000A8058, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_1000B9380, v17);
}

uint64_t sub_100049A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8[21] = a8;
  v8[22] = v16;
  v8[19] = a6;
  v8[20] = a7;
  v8[17] = a4;
  v8[18] = a5;
  v9 = sub_100009F00(&qword_1000B9388);
  v8[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = ((uint64_t (*)(_QWORD))type metadata accessor for ProductError)(0);
  v8[24] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[25] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[26] = swift_task_alloc(v12);
  v8[27] = swift_task_alloc(v12);
  v13 = ((uint64_t (*)(_QWORD))type metadata accessor for PersonalizationAssetManager.PostPairingAssetInfo)(0);
  v8[28] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[29] = v14;
  v8[30] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100049ACC, 0, 0);
}

uint64_t sub_100049ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 248) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HeadphoneDigitalEngravingManager()), "init");
  v3 = swift_bridgeObjectRetain(v1);
  v4 = PersonalizationAssetManager.PrePairingAssetInfo.scannedBluetoothData.getter(v3);
  v6 = v5;
  *(_QWORD *)(v0 + 256) = v4;
  *(_QWORD *)(v0 + 264) = v5;
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = 2;
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 56) = 0;
  swift_bridgeObjectRetain(v1);
  sub_10002913C(v4, v6);
  swift_bridgeObjectRetain(v1);
  sub_10004D6D0(v4, v6);
  if (qword_1000B7B80 != -1)
    swift_once(&qword_1000B7B80, sub_10003D8A8);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_1000093F8(v7, (uint64_t)qword_1000B90F8);
  *(_QWORD *)(v0 + 272) = v8;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Moving engraved asset", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }
  v12 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 160);

  swift_bridgeObjectRetain(v12);
  PersonalizationAssetManager.PostPairingAssetInfo.init(stableBluetoothIdentifier:)(v13, v12);
  *(_QWORD *)(v0 + 280) = sub_10003DA70();
  v14 = (_QWORD *)swift_task_alloc(async function pointer to PersonalizationAssetManager.storeAsset(from:to:)[1]);
  *(_QWORD *)(v0 + 288) = v14;
  *v14 = v0;
  v14[1] = sub_100049C88;
  return PersonalizationAssetManager.storeAsset(from:to:)(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 240));
}

uint64_t sub_100049C88()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc(v3);
  v4 = v2[35];
  if (v0)
  {
    v5 = v2[32];
    v6 = v2[33];
    v7 = v2[18];
    swift_release(v4);
    swift_bridgeObjectRelease(v7);
    sub_10002E1A0(v5, v6);
    v8 = sub_100049EC0;
  }
  else
  {
    swift_release(v4);
    v8 = sub_100049D1C;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_100049D1C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 144);
  sub_10005C460((__int128 *)(v0 + 16));
  swift_bridgeObjectRelease(v3);
  v4 = sub_10002E1A0(v2, v1);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Moved engraved asset", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v9 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 240);
  v10 = *(_QWORD *)(v0 + 224);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v12 = *(_QWORD *)(v0 + 256);
  v11 = *(_QWORD *)(v0 + 264);
  v14 = *(_QWORD *)(v0 + 240);
  v13 = *(void **)(v0 + 248);
  v15 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 216);
  v17 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 72) = v18;
  *(_BYTE *)(v0 + 80) = 2;
  *(_QWORD *)(v0 + 88) = v12;
  *(_QWORD *)(v0 + 96) = v11;
  *(_QWORD *)(v0 + 104) = 0;
  swift_bridgeObjectRetain(v18);
  sub_10004D6D0(v12, v11);
  sub_10002931C(v12, v11);
  swift_bridgeObjectRelease(v18);
  sub_10005C460((__int128 *)(v0 + 64));

  swift_bridgeObjectRelease(v18);
  sub_10002E1A0(v12, v11);
  swift_bridgeObjectRelease(v18);
  sub_10002E1A0(v12, v11);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100049EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 296);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 296);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v40 = v7;
    *(_QWORD *)(v0 + 120) = v5;
    swift_errorRetain(v5);
    v8 = sub_100009F00((uint64_t *)&unk_1000B8740);
    v9 = String.init<A>(reflecting:)(v0 + 120, v8);
    v11 = v10;
    *(_QWORD *)(v0 + 128) = sub_10004B4F0(v9, v10, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136);
    swift_bridgeObjectRelease(v11);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to store engraved asset: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 296);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
  }

  v13 = *(_QWORD *)(v0 + 296);
  v14 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 112) = v13;
  swift_errorRetain(v13);
  v17 = sub_100009F00((uint64_t *)&unk_1000B8740);
  v18 = swift_dynamicCast(v16, v0 + 112, v17, v14, 6);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v20 = *(_QWORD *)(v0 + 296);
  if ((v18 & 1) == 0)
  {
    v30 = *(_QWORD *)(v0 + 184);
    v19(v30, 1, 1, *(_QWORD *)(v0 + 192));
    swift_errorRelease(v20);
    sub_100017E48(v30, &qword_1000B9388);
    goto LABEL_8;
  }
  v22 = *(_QWORD *)(v0 + 208);
  v21 = *(_QWORD *)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 192);
  v24 = *(_QWORD *)(v0 + 200);
  v25 = *(_QWORD *)(v0 + 184);
  v19(v25, 0, 1, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v21, v25, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 104))(v22, enum case for ProductError.assetNotFound(_:), v23);
  v26 = sub_10000A1B0(&qword_1000B9390, (uint64_t (*)(uint64_t))&type metadata accessor for ProductError, (uint64_t)&protocol conformance descriptor for ProductError);
  LOBYTE(v25) = dispatch thunk of static Equatable.== infix(_:_:)(v21, v22, v23, v26);
  swift_errorRelease(v20);
  v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v27(v22, v23);
  v27(v21, v23);
  if ((v25 & 1) == 0)
  {
LABEL_8:
    v29 = 1;
    v28 = 1;
    goto LABEL_9;
  }
  v28 = 0;
  v29 = 2;
LABEL_9:
  v32 = *(_QWORD *)(v0 + 256);
  v31 = *(_QWORD *)(v0 + 264);
  v34 = *(_QWORD *)(v0 + 240);
  v33 = *(void **)(v0 + 248);
  v35 = *(_QWORD *)(v0 + 208);
  v36 = *(_QWORD *)(v0 + 216);
  v37 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 136);
  v38 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 72) = v37;
  *(_BYTE *)(v0 + 80) = v29;
  *(_QWORD *)(v0 + 88) = v32;
  *(_QWORD *)(v0 + 96) = v31;
  *(_QWORD *)(v0 + 104) = v28;
  swift_bridgeObjectRetain(v37);
  sub_10004D6D0(v32, v31);
  sub_10002931C(v32, v31);
  swift_bridgeObjectRelease(v37);
  sub_10005C460((__int128 *)(v0 + 64));

  swift_bridgeObjectRelease(v37);
  sub_10002E1A0(v32, v31);
  swift_bridgeObjectRelease(v37);
  sub_10002E1A0(v32, v31);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v35);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10004A24C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  uint64_t (*v28)();
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void *v41;
  uint64_t (*v42)();
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  void *v47;
  uint64_t (*v48)();
  void *v49;
  uint64_t (*v50)();
  _QWORD *v51;
  _QWORD *v52;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v54;
  unint64_t v55;
  _OWORD *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _QWORD *v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t Strong;
  _QWORD aBlock[3];
  void *v97;
  uint64_t (*v98)();
  uint64_t v99;
  _QWORD v100[5];
  char v101[24];
  _OWORD v102[3];
  _OWORD v103[3];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  v11 = (char *)v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v101, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v87 = v11;
    v88 = v8;
    v13 = swift_allocObject(&unk_1000A82B0, 24, 7);
    v86 = v13;
    *(_QWORD *)(v13 + 16) = _swiftEmptyArrayStorage;
    v94 = (_QWORD *)(v13 + 16);
    v14 = swift_allocObject(&unk_1000A82B0, 24, 7);
    v85 = v14;
    *(_QWORD *)(v14 + 16) = _swiftEmptyArrayStorage;
    v15 = (_QWORD *)(v14 + 16);
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v89 = v7;
    v16 = type metadata accessor for Logger(0);
    v17 = sub_1000093F8(v16, (uint64_t)qword_1000B90F8);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Fetching notification sources", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }
    v90 = v6;
    v91 = v3;

    v21 = *(_QWORD *)(Strong
                    + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter
                    + 24);
    v22 = *(_QWORD *)(Strong
                    + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter
                    + 32);
    sub_100013410((_QWORD *)(Strong + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter), v21);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
    v24 = *(_QWORD *)(v23 + 16);
    v92 = v2;
    if (v24)
    {
      v83[1] = v17;
      v25 = 0;
      v83[0] = v23;
      v26 = v23 + 32;
      v93 = (unint64_t)"igrationComplete";
      v84 = 0x800000010008EE00;
      while (1)
      {
        sub_100015D34(v26, (uint64_t)aBlock);
        v27 = v97;
        v28 = v98;
        sub_100013410(aBlock, (uint64_t)v97);
        if (((*((uint64_t (**)(void *, uint64_t (*)()))v28 + 1))(v27, v28) & 1) != 0)
          goto LABEL_9;
        v29 = v97;
        v30 = v98;
        sub_100013410(aBlock, (uint64_t)v97);
        v31 = (*((uint64_t (**)(void *, uint64_t (*)()))v30 + 2))(v29, v30);
        v33 = v32;
        swift_bridgeObjectRelease(v32);
        v34 = HIBYTE(v33) & 0xF;
        if ((v33 & 0x2000000000000000) == 0)
          v34 = v31 & 0xFFFFFFFFFFFFLL;
        if (!v34)
          goto LABEL_9;
        v35 = v97;
        v36 = v98;
        sub_100013410(aBlock, (uint64_t)v97);
        v37 = (*((uint64_t (**)(void *, uint64_t (*)()))v36 + 3))(v35, v36);
        v39 = v38;
        if (v37 == 0xD000000000000015 && v38 == 0x800000010008EBE0)
        {
          swift_bridgeObjectRelease(0x800000010008EBE0);
        }
        else
        {
          v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, 0xD000000000000015, 0x800000010008EBE0, 0);
          swift_bridgeObjectRelease(v39);
          if ((v40 & 1) == 0)
          {
            v41 = v97;
            v42 = v98;
            sub_100013410(aBlock, (uint64_t)v97);
            v43 = (*((uint64_t (**)(void *, uint64_t (*)()))v42 + 3))(v41, v42);
            v45 = v44;
            if (v43 == 0xD000000000000013 && v44 == v84)
            {
              swift_bridgeObjectRelease(v93 | 0x8000000000000000);
              goto LABEL_21;
            }
            v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, 0xD000000000000013, v93 | 0x8000000000000000, 0);
            swift_bridgeObjectRelease(v45);
            if ((v46 & 1) != 0)
            {
LABEL_21:
              v47 = v97;
              v48 = v98;
              sub_100013410(aBlock, (uint64_t)v97);
              v25 = (*((uint64_t (**)(void *, uint64_t (*)()))v48 + 6))(v47, v48);
            }
            v49 = v97;
            v50 = v98;
            sub_100013410(aBlock, (uint64_t)v97);
            if (((*((uint64_t (**)(void *, uint64_t (*)()))v50 + 4))(v49, v50) & 1) != 0)
            {
              sub_100015D34((uint64_t)aBlock, (uint64_t)v100);
              sub_10002D86C(v100, (uint64_t)v102);
              v51 = v94;
              v52 = (_QWORD *)*v94;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v94);
              *v51 = v52;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v52 = sub_1000824CC(0, v52[2] + 1, 1, v52);
                *v94 = v52;
              }
              v55 = v52[2];
              v54 = v52[3];
              if (v55 >= v54 >> 1)
              {
                v52 = sub_1000824CC((_QWORD *)(v54 > 1), v55 + 1, 1, v52);
                *v94 = v52;
              }
              v52[2] = v55 + 1;
              v56 = &v52[6 * v55];
              v57 = v102[0];
              v58 = v102[1];
              v59 = v102[2];
            }
            else
            {
              sub_100015D34((uint64_t)aBlock, (uint64_t)v100);
              sub_10002D86C(v100, (uint64_t)v103);
              v60 = (_QWORD *)*v15;
              v61 = swift_isUniquelyReferenced_nonNull_native(*v15);
              *v15 = v60;
              if ((v61 & 1) == 0)
              {
                v60 = sub_1000824CC(0, v60[2] + 1, 1, v60);
                *v15 = v60;
              }
              v63 = v60[2];
              v62 = v60[3];
              if (v63 >= v62 >> 1)
              {
                v60 = sub_1000824CC((_QWORD *)(v62 > 1), v63 + 1, 1, v60);
                *v15 = v60;
              }
              v60[2] = v63 + 1;
              v56 = &v60[6 * v63];
              v57 = v103[0];
              v58 = v103[1];
              v59 = v103[2];
            }
            v56[3] = v58;
            v56[4] = v59;
            v56[2] = v57;
          }
        }
LABEL_9:
        sub_100015D14(aBlock);
        v26 += 40;
        if (!--v24)
        {
          v64 = swift_bridgeObjectRelease(v83[0]);
          goto LABEL_36;
        }
      }
    }
    v64 = swift_bridgeObjectRelease(v23);
    v25 = 0;
LABEL_36:
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Fetching notification sources finished", v67, 2u);
      swift_slowDealloc(v67, -1, -1);
    }

    sub_10004AB00(v94);
    sub_10004AB00(v15);
    sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
    v68 = (void *)static OS_dispatch_queue.main.getter();
    v69 = swift_allocObject(&unk_1000A82D8, 48, 7);
    v70 = Strong;
    *(_QWORD *)(v69 + 16) = Strong;
    *(_BYTE *)(v69 + 24) = v25 & 1;
    v71 = v86;
    v72 = v85;
    *(_QWORD *)(v69 + 32) = v86;
    *(_QWORD *)(v69 + 40) = v72;
    v98 = sub_10004DFBC;
    v99 = v69;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100012FBC;
    v97 = &unk_1000A82F0;
    v73 = _Block_copy(aBlock);
    v74 = v99;
    swift_retain(v70);
    swift_retain(v71);
    swift_retain(v72);
    swift_release(v74);
    v75 = v87;
    static DispatchQoS.unspecified.getter(v76);
    aBlock[0] = _swiftEmptyArrayStorage;
    v77 = sub_10000A1B0((unint64_t *)&qword_1000B8330, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v78 = sub_100009F00(&qword_1000B8338);
    v79 = sub_100015EF8((unint64_t *)&qword_1000B8340, &qword_1000B8338, (uint64_t)&protocol conformance descriptor for [A]);
    v80 = v90;
    v81 = v78;
    v82 = v92;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v81, v79, v92, v77);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v75, v80, v73);
    _Block_release(v73);
    swift_release(v70);

    (*(void (**)(char *, uint64_t))(v91 + 8))(v80, v82);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v75, v89);
    swift_release(v71);
    *(_QWORD *)&result = swift_release(v72).n128_u64[0];
  }
  return result;
}

Swift::Int sub_10004AB00(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  Swift::Int result;
  uint64_t v5[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_10004C97C(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_10004BBE0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_10004AB6C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE v46[24];
  _BYTE v47[32];

  v43 = a1;
  v8 = type metadata accessor for HeadphoneModel(0);
  v10 = __chkstk_darwin(v8, v9);
  v44 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  v14 = (char *)&v34 - v13;
  v15 = a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model, v47, 0, 0);
  sub_1000135B0(v15, (uint64_t)v14);
  v14[*(int *)(v8 + 156)] = a2;
  v16 = sub_10001FF98(0x15u);
  v39 = v17;
  v40 = v16;
  v18 = sub_10001FF98(0x16u);
  v41 = v19;
  v42 = v18;
  swift_beginAccess(a3 + 16, v46, 0, 0);
  v20 = *(_QWORD *)(a3 + 16);
  swift_beginAccess(a4 + 16, v45, 0, 0);
  v21 = *(_QWORD *)(a4 + 16);
  v22 = *(_QWORD *)v14;
  v23 = *((_QWORD *)v14 + 1);
  v24 = *((_QWORD *)v14 + 3);
  v37 = *((_QWORD *)v14 + 2);
  v38 = v22;
  v25 = *((_QWORD *)v14 + 4);
  v26 = (void *)*((_QWORD *)v14 + 5);
  v27 = *((_QWORD *)v14 + 7);
  v36 = *((_QWORD *)v14 + 6);
  v35 = *((_OWORD *)v14 + 4);
  v34 = *((_OWORD *)v14 + 5);
  v29 = *((_QWORD *)v14 + 12);
  v28 = *((_QWORD *)v14 + 13);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v21);
  sub_10004DFCC(v38, v23, v37, v24, v25, v26, v36, v27, v35, *((uint64_t *)&v35 + 1), v34, *((void **)&v34 + 1), v29, v28);
  *(_QWORD *)v14 = 0xD000000000000015;
  *((_QWORD *)v14 + 1) = 0x800000010008EBE0;
  v30 = v39;
  *((_QWORD *)v14 + 2) = v40;
  *((_QWORD *)v14 + 3) = v30;
  *((_OWORD *)v14 + 2) = xmmword_100089A10;
  *((_OWORD *)v14 + 3) = xmmword_100089A20;
  v31 = v41;
  *((_QWORD *)v14 + 8) = v42;
  *((_QWORD *)v14 + 9) = v31;
  *((_OWORD *)v14 + 5) = xmmword_100089A10;
  *((_QWORD *)v14 + 12) = v20;
  *((_QWORD *)v14 + 13) = v21;
  v32 = v44;
  sub_1000135B0((uint64_t)v14, v44);
  sub_10003D960(v32);
  return sub_100013638((uint64_t)v14);
}

uint64_t sub_10004AD90()
{
  uint64_t v0;

  sub_100009FD0(v0 + 16);
  sub_100013638(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model);
  sub_100009FD0(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);

  sub_10004D7DC(*(_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler + 8));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession));
  sub_100015D14((_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter));

  sub_100015D14((_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_offersClient));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager));

  sub_100017E48(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate, &qword_1000B8A38);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager));
  sub_100017E48(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo, &qword_1000B9350);
  return v0;
}

uint64_t sub_10004AED0()
{
  uint64_t v0;

  sub_10004AD90();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10004AEF4()
{
  return type metadata accessor for HeadphoneInteractor(0);
}

uint64_t type metadata accessor for HeadphoneInteractor(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B91D8;
  if (!qword_1000B91D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphoneInteractor);
  return result;
}

void sub_10004AF38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[23];

  v8[0] = &unk_100089AC8;
  v2 = type metadata accessor for HeadphoneModel(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    v8[2] = &unk_100089AC8;
    v8[3] = &unk_100089AE0;
    v8[4] = &unk_100089AE0;
    v8[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[6] = &unk_100089AF8;
    v8[7] = &unk_100089B10;
    v8[8] = &unk_100089B28;
    v8[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8[11] = &unk_100089B28;
    v8[12] = &unk_100089B40;
    v8[13] = &unk_100089B40;
    v8[14] = (char *)&value witness table for Builtin.NativeObject + 64;
    v8[15] = &unk_100089B40;
    v8[16] = &unk_100089AE0;
    v8[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_100010D84(319, (unint64_t *)&unk_1000B8AB8, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v8[18] = *(_QWORD *)(v4 - 8) + 64;
      v8[19] = (char *)&value witness table for Builtin.Int64 + 64;
      v8[20] = &unk_100089AE0;
      v8[21] = &unk_100089B40;
      sub_100010D84(319, (unint64_t *)&unk_1000B91E8, (uint64_t (*)(uint64_t))&type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo);
      if (v7 <= 0x3F)
      {
        v8[22] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 23, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_10004B07C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *(_QWORD *)(*v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_10004B0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)v2 + 16;
  *(_QWORD *)(*(_QWORD *)v2 + 24) = a2;
  swift_unknownObjectWeakAssign(v4, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_10004B0EC(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_allowRepairAutoConnect) = result;
  return result;
}

uint64_t sub_10004B100(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_wantsTemporaryPairing) = result;
  return result;
}

uint64_t sub_10004B114(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_10004B148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_10004B1A8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x10004B38CLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_10004B3B0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10004B414;
  return v6(a1);
}

uint64_t sub_10004B414()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004B460(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10004B480(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v6 = a4();
  v8 = v7;
  v9 = sub_10004B4F0(v6, v7, a3);
  v10 = *a1 + 8;
  v12 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
  result = swift_bridgeObjectRelease(v8);
  *a1 = v10;
  return result;
}

uint64_t sub_10004B4F0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[3];
  void *ObjectType;

  v6 = sub_10004B5C0(v13, 0, 0, 1, a1, a2);
  v8 = v13[0];
  if (v6)
  {
    v9 = v6;
    ObjectType = (void *)swift_getObjectType(v6, v7);
    v13[0] = v9;
    v10 = *a3;
    if (*a3)
    {
      sub_1000250C8((uint64_t)v13, *a3);
      *a3 = v10 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v13[0] = a1;
    v13[1] = a2;
    v11 = *a3;
    if (*a3)
    {
      sub_1000250C8((uint64_t)v13, *a3);
      *a3 = v11 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_100015D14(v13);
  return v8;
}

uint64_t sub_10004B5C0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_10004B778(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_10004B778(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10004B80C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_10004B9E4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_10004B9E4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10004B80C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_10004B980(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10004B980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = sub_100009F00(&qword_1000B9318);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_10004B9E4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100009F00(&qword_1000B9318);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_BYTE **sub_10004BB30(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_10004BB44@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

_BYTE *sub_10004BB6C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_10004DB0C(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_10004DBCC((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_10004DC44((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

Swift::Int sub_10004BBE0(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::Int v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  Swift::Int v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  Swift::Int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  _QWORD *v120;
  Swift::Int v121;
  Swift::Int v122;
  Swift::Int v123;
  Swift::Int v124;
  char *__dst;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      return sub_10004C370(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v121 = result;
  v130 = v1;
  v118 = a1;
  if (v3 < 2)
  {
    v8 = (char *)_swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    v120 = _swiftEmptyArrayStorage;
    if (v3 != 1)
    {
      v11 = _swiftEmptyArrayStorage[2];
LABEL_98:
      if (v11 >= 2)
      {
        v110 = *v118;
        do
        {
          v111 = v11 - 2;
          if (v11 < 2)
            goto LABEL_127;
          if (!v110)
            goto LABEL_139;
          v112 = *(_QWORD *)&v8[16 * v111 + 32];
          v113 = *(_QWORD *)&v8[16 * v11 + 24];
          v114 = v130;
          sub_10004C490((char *)(v110 + 48 * v112), (char *)(v110 + 48 * *(_QWORD *)&v8[16 * v11 + 16]), v110 + 48 * v113, __dst);
          v130 = v114;
          if (v114)
            break;
          if (v113 < v112)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10004C968((uint64_t)v8);
          if (v111 >= *((_QWORD *)v8 + 2))
            goto LABEL_129;
          v115 = &v8[16 * v111 + 32];
          *(_QWORD *)v115 = v112;
          *((_QWORD *)v115 + 1) = v113;
          v116 = *((_QWORD *)v8 + 2);
          if (v11 > v116)
            goto LABEL_130;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((_QWORD *)v8 + 2) = v116 - 1;
          v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease(v8);
      v120[2] = 0;
      return swift_bridgeObjectRelease(v120);
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for HeadphoneAnnounceSource);
    *(_QWORD *)(v7 + 16) = v6;
    v120 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v119 = *a1 + 120;
  v117 = *a1 + 40;
  v8 = (char *)_swiftEmptyArrayStorage;
  v122 = v3;
  while (1)
  {
    v12 = v9++;
    v123 = v12;
    if (v9 < v3)
    {
      v13 = v10 + 48 * v9;
      v15 = *(_QWORD *)(v13 + 16);
      v14 = *(_QWORD *)(v13 + 24);
      v16 = v10 + 48 * v12;
      v18 = *(_QWORD *)(v16 + 16);
      v17 = *(_QWORD *)(v16 + 24);
      v128 = v15;
      v129 = v14;
      v126 = v18;
      v127 = v17;
      v19 = v12;
      v20 = sub_100009F40();
      v21 = StringProtocol.localizedCompare<A>(_:)(&v126, &type metadata for String, &type metadata for String, v20, v20);
      v9 = v19 + 2;
      if (v19 + 2 < v3)
      {
        v22 = (uint64_t *)(v119 + 48 * v19);
        while (1)
        {
          v23 = *v22;
          v24 = *(v22 - 7);
          v25 = *(v22 - 6);
          v128 = *(v22 - 1);
          v129 = v23;
          v126 = v24;
          v127 = v25;
          if ((v21 == -1) == (StringProtocol.localizedCompare<A>(_:)(&v126, &type metadata for String, &type metadata for String, v20, v20) != -1))break;
          v22 += 6;
          ++v9;
          v3 = v122;
          if (v122 == v9)
          {
            v9 = v122;
            goto LABEL_22;
          }
        }
        v3 = v122;
      }
LABEL_22:
      v12 = v123;
      if (v21 == -1)
      {
        if (v9 < v123)
          goto LABEL_135;
        if (v123 < v9)
        {
          v26 = 48 * v9;
          v27 = 48 * v123;
          v28 = v9;
          v29 = v123;
          do
          {
            if (v29 != --v28)
            {
              if (!v10)
                goto LABEL_138;
              v30 = (_OWORD *)(v10 + v27);
              v31 = *(_OWORD *)(v10 + v27);
              v32 = v10 + v26;
              v33 = *(_QWORD *)(v10 + v27 + 16);
              v34 = *(_QWORD *)(v10 + v27 + 24);
              v35 = *(_BYTE *)(v10 + v27 + 32);
              v36 = *(_QWORD *)(v10 + v27 + 40);
              v38 = *(_OWORD *)(v10 + v26 - 32);
              v37 = *(_OWORD *)(v10 + v26 - 16);
              *v30 = *(_OWORD *)(v10 + v26 - 48);
              v30[1] = v38;
              v30[2] = v37;
              *(_OWORD *)(v32 - 48) = v31;
              *(_QWORD *)(v32 - 32) = v33;
              *(_QWORD *)(v32 - 24) = v34;
              *(_BYTE *)(v32 - 16) = v35;
              *(_QWORD *)(v32 - 8) = v36;
            }
            ++v29;
            v26 -= 48;
            v27 += 48;
          }
          while (v29 < v28);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12))
        goto LABEL_131;
      if (v9 - v12 < v121)
        break;
    }
LABEL_48:
    if (v9 < v12)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
      v8 = sub_10004C7B4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v56 = *((_QWORD *)v8 + 2);
    v55 = *((_QWORD *)v8 + 3);
    v11 = v56 + 1;
    if (v56 >= v55 >> 1)
      v8 = sub_10004C7B4((char *)(v55 > 1), v56 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11;
    v57 = v8 + 32;
    v58 = &v8[16 * v56 + 32];
    *(_QWORD *)v58 = v12;
    *((_QWORD *)v58 + 1) = v9;
    if (v56)
    {
      v124 = v9;
      while (1)
      {
        v59 = v11 - 1;
        if (v11 >= 4)
        {
          v64 = &v57[16 * v11];
          v65 = *((_QWORD *)v64 - 8);
          v66 = *((_QWORD *)v64 - 7);
          v70 = __OFSUB__(v66, v65);
          v67 = v66 - v65;
          if (v70)
            goto LABEL_115;
          v69 = *((_QWORD *)v64 - 6);
          v68 = *((_QWORD *)v64 - 5);
          v70 = __OFSUB__(v68, v69);
          v62 = v68 - v69;
          v63 = v70;
          if (v70)
            goto LABEL_116;
          v71 = v11 - 2;
          v72 = &v57[16 * v11 - 32];
          v74 = *(_QWORD *)v72;
          v73 = *((_QWORD *)v72 + 1);
          v70 = __OFSUB__(v73, v74);
          v75 = v73 - v74;
          if (v70)
            goto LABEL_118;
          v70 = __OFADD__(v62, v75);
          v76 = v62 + v75;
          if (v70)
            goto LABEL_121;
          if (v76 >= v67)
          {
            v94 = &v57[16 * v59];
            v96 = *(_QWORD *)v94;
            v95 = *((_QWORD *)v94 + 1);
            v70 = __OFSUB__(v95, v96);
            v97 = v95 - v96;
            if (v70)
              goto LABEL_125;
            v87 = v62 < v97;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v88 = *((_QWORD *)v8 + 4);
            v89 = *((_QWORD *)v8 + 5);
            v70 = __OFSUB__(v89, v88);
            v81 = v89 - v88;
            v82 = v70;
            goto LABEL_80;
          }
          v61 = *((_QWORD *)v8 + 4);
          v60 = *((_QWORD *)v8 + 5);
          v70 = __OFSUB__(v60, v61);
          v62 = v60 - v61;
          v63 = v70;
        }
        if ((v63 & 1) != 0)
          goto LABEL_117;
        v71 = v11 - 2;
        v77 = &v57[16 * v11 - 32];
        v79 = *(_QWORD *)v77;
        v78 = *((_QWORD *)v77 + 1);
        v80 = __OFSUB__(v78, v79);
        v81 = v78 - v79;
        v82 = v80;
        if (v80)
          goto LABEL_120;
        v83 = &v57[16 * v59];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        v70 = __OFSUB__(v84, v85);
        v86 = v84 - v85;
        if (v70)
          goto LABEL_123;
        if (__OFADD__(v81, v86))
          goto LABEL_124;
        if (v81 + v86 >= v62)
        {
          v87 = v62 < v86;
LABEL_86:
          if (v87)
            v59 = v71;
          goto LABEL_88;
        }
LABEL_80:
        if ((v82 & 1) != 0)
          goto LABEL_119;
        v90 = &v57[16 * v59];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v70 = __OFSUB__(v91, v92);
        v93 = v91 - v92;
        if (v70)
          goto LABEL_122;
        if (v93 < v81)
          goto LABEL_14;
LABEL_88:
        v98 = v59 - 1;
        if (v59 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v10)
          goto LABEL_137;
        v99 = v8;
        v100 = v10;
        v101 = &v57[16 * v98];
        v102 = *(_QWORD *)v101;
        v103 = v57;
        v104 = v59;
        v105 = &v57[16 * v59];
        v106 = *((_QWORD *)v105 + 1);
        v107 = v100;
        v108 = v130;
        sub_10004C490((char *)(v100 + 48 * *(_QWORD *)v101), (char *)(v100 + 48 * *(_QWORD *)v105), v100 + 48 * v106, __dst);
        v130 = v108;
        if (v108)
        {
          v8 = v99;
          goto LABEL_109;
        }
        if (v106 < v102)
          goto LABEL_112;
        if (v104 > *((_QWORD *)v99 + 2))
          goto LABEL_113;
        *(_QWORD *)v101 = v102;
        *(_QWORD *)&v103[16 * v98 + 8] = v106;
        v109 = *((_QWORD *)v99 + 2);
        if (v104 >= v109)
          goto LABEL_114;
        v8 = v99;
        v11 = v109 - 1;
        memmove(v105, v105 + 16, 16 * (v109 - 1 - v104));
        v57 = v103;
        *((_QWORD *)v99 + 2) = v109 - 1;
        v10 = v107;
        v9 = v124;
        if (v109 <= 2)
          goto LABEL_14;
      }
    }
    v11 = 1;
LABEL_14:
    v3 = v122;
    if (v9 >= v122)
      goto LABEL_98;
  }
  if (__OFADD__(v12, v121))
    goto LABEL_133;
  if (v12 + v121 >= v3)
    v39 = v3;
  else
    v39 = v12 + v121;
  if (v39 >= v12)
  {
    if (v9 != v39)
    {
      v40 = sub_100009F40();
      v41 = v117 + 48 * v9;
      do
      {
        v42 = v10 + 48 * v9;
        v43 = *(_QWORD *)(v42 + 16);
        v44 = *(_QWORD *)(v42 + 24);
        v45 = v41;
        do
        {
          v46 = *(_QWORD *)(v45 - 72);
          v47 = *(_QWORD *)(v45 - 64);
          v128 = v43;
          v129 = v44;
          v126 = v46;
          v127 = v47;
          if (StringProtocol.localizedCompare<A>(_:)(&v126, &type metadata for String, &type metadata for String, v40, v40) != -1)break;
          if (!v10)
            goto LABEL_136;
          v48 = (_OWORD *)(v45 - 40);
          v49 = (_OWORD *)(v45 - 88);
          v51 = *(_OWORD *)(v45 - 72);
          v50 = *(_OWORD *)(v45 - 56);
          *(_QWORD *)(v45 - 48) = *(_QWORD *)v45;
          v45 -= 48;
          v52 = *(_QWORD *)(v45 + 8);
          v53 = *(_QWORD *)(v45 + 16);
          v43 = *(_QWORD *)(v45 + 24);
          v44 = *(_QWORD *)(v45 + 32);
          v54 = *(_BYTE *)(v45 + 40);
          *v48 = *v49;
          v48[1] = v51;
          v48[2] = v50;
          *(_QWORD *)(v45 - 40) = v52;
          *(_QWORD *)(v45 - 32) = v53;
          *(_QWORD *)(v45 - 24) = v43;
          *(_QWORD *)(v45 - 16) = v44;
          *(_BYTE *)(v45 - 8) = v54;
          ++v12;
        }
        while (v9 != v12);
        ++v9;
        v41 += 48;
        v12 = v123;
      }
      while (v9 != v39);
      v9 = v39;
    }
    goto LABEL_48;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

uint64_t sub_10004C370(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v23[4];
  uint64_t v24;

  v24 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = sub_100009F40();
    v8 = v6 + 48 * v4 + 40;
LABEL_5:
    v9 = v6 + 48 * v4;
    v10 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 24);
    v12 = v24;
    v13 = v8;
    while (1)
    {
      v14 = *(_QWORD *)(v13 - 72);
      v15 = *(_QWORD *)(v13 - 64);
      v23[2] = v10;
      v23[3] = v11;
      v23[0] = v14;
      v23[1] = v15;
      result = StringProtocol.localizedCompare<A>(_:)(v23, &type metadata for String, &type metadata for String, v7, v7);
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v8 += 48;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v16 = (_OWORD *)(v13 - 40);
      v17 = (_OWORD *)(v13 - 88);
      v19 = *(_OWORD *)(v13 - 72);
      v18 = *(_OWORD *)(v13 - 56);
      *(_QWORD *)(v13 - 48) = *(_QWORD *)v13;
      v13 -= 48;
      v20 = *(_QWORD *)(v13 + 8);
      v21 = *(_QWORD *)(v13 + 16);
      v10 = *(_QWORD *)(v13 + 24);
      v11 = *(_QWORD *)(v13 + 32);
      v22 = *(_BYTE *)(v13 + 40);
      *v16 = *v17;
      v16[1] = v19;
      v16[2] = v18;
      *(_QWORD *)(v13 - 40) = v20;
      *(_QWORD *)(v13 - 32) = v21;
      *(_QWORD *)(v13 - 24) = v10;
      *(_QWORD *)(v13 - 16) = v11;
      *(_BYTE *)(v13 - 8) = v22;
      if (v4 == ++v12)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10004C490(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  const void *v40;
  char *v41;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 48;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v41 = __src;
  v40 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst)
        memmove(__dst, a2, 48 * v11);
      v22 = &v4[48 * v11];
      v39 = v22;
      v41 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        v23 = sub_100009F40();
        v24 = (char *)(a3 - 48);
        do
        {
          v25 = v24 + 48;
          v26 = *((_QWORD *)v22 - 3);
          v27 = *((_QWORD *)v6 - 4);
          v28 = *((_QWORD *)v6 - 3);
          v37 = *((_QWORD *)v22 - 4);
          v38 = v26;
          v35 = v27;
          v36 = v28;
          if (StringProtocol.localizedCompare<A>(_:)(&v35, &type metadata for String, &type metadata for String, v23, v23) == -1)
          {
            v31 = v6 - 48;
            if (v25 != v6 || v24 >= v6)
            {
              v32 = *(_OWORD *)v31;
              v33 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v24 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v24 + 2) = v33;
              *(_OWORD *)v24 = v32;
            }
            v41 = v6 - 48;
            if (v31 <= v7)
              break;
          }
          else
          {
            v39 = v22 - 48;
            if (v25 < v22 || v24 >= v22 || v25 != v22)
            {
              v29 = *((_OWORD *)v22 - 3);
              v30 = *((_OWORD *)v22 - 1);
              *((_OWORD *)v24 + 1) = *((_OWORD *)v22 - 2);
              *((_OWORD *)v24 + 2) = v30;
              *(_OWORD *)v24 = v29;
            }
            v31 = v6;
            v22 -= 48;
            if (v6 <= v7)
              break;
          }
          v24 -= 48;
          v6 = v31;
        }
        while (v22 > v4);
      }
LABEL_40:
      sub_10004C8AC((void **)&v41, &v40, &v39);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst)
      memmove(__dst, __src, 48 * v9);
    v12 = &v4[48 * v9];
    v39 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      v13 = sub_100009F40();
      v14 = v4;
      while (1)
      {
        v15 = *((_QWORD *)v6 + 3);
        v16 = *((_QWORD *)v14 + 2);
        v17 = *((_QWORD *)v14 + 3);
        v37 = *((_QWORD *)v6 + 2);
        v38 = v15;
        v35 = v16;
        v36 = v17;
        if (StringProtocol.localizedCompare<A>(_:)(&v35, &type metadata for String, &type metadata for String, v13, v13) == -1)
        {
          v19 = v6 + 48;
          v18 = v6;
          if (v7 == v6 && v7 < v19)
            goto LABEL_18;
        }
        else
        {
          v4 = v14 + 48;
          v18 = v14;
          v19 = v6;
          if (v7 == v14)
          {
            v14 += 48;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v14 += 48;
          }
        }
        v20 = *(_OWORD *)v18;
        v21 = *((_OWORD *)v18 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v18 + 1);
        *((_OWORD *)v7 + 2) = v21;
        *(_OWORD *)v7 = v20;
LABEL_18:
        v7 += 48;
        if (v14 < v12)
        {
          v6 = v19;
          if ((unint64_t)v19 < a3)
            continue;
        }
        v40 = v4;
        v41 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_10004C7B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100009F00(&qword_1000B9420);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10004C8AC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
      return (char *)memmove(result, v3, 48 * v6);
  }
  return result;
}

char *sub_10004C968(uint64_t a1)
{
  return sub_10004C7B4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_10004C97C(_QWORD *a1)
{
  return sub_1000824CC(0, a1[2], 0, a1);
}

uint64_t sub_10004C990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_10004B148((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_10004CA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = __DataStorage._bytes.getter();
  v11 = result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = __DataStorage._length.getter();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_10004B148(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_10004CB18(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_10004CB64()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_10004CB98 + *((int *)qword_10004CD70 + (v0 >> 62))))();
}

uint64_t sub_10004CBA8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

void *sub_10004CD90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *object;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  char v18;
  uint64_t v19;

  if ((unint64_t)a1 >> 62)
    goto LABEL_23;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v6 = v5;
      v7 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v8 = objc_msgSend(v5, "btAddressData");
      if (!v8)
      {
        object = String.lowercased()()._object;
LABEL_5:

        swift_bridgeObjectRelease(object);
        goto LABEL_6;
      }
      v9 = v8;
      v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      v12 = v11;

      sub_1000418E4(v10, v12);
      v14 = v13;
      sub_10002931C(v10, v12);
      v15 = String.lowercased()();
      swift_bridgeObjectRelease(v14);
      v16 = String.lowercased()();
      object = v16._object;
      if (!v15._object)
        goto LABEL_5;
      if (v15._countAndFlagsBits == v16._countAndFlagsBits && v15._object == v16._object)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease_n(v15._object, 2);
        return v6;
      }
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v15._countAndFlagsBits, v15._object, v16._countAndFlagsBits, v16._object, 0);
      swift_bridgeObjectRelease(v15._object);
      swift_bridgeObjectRelease(v16._object);
      if ((v18 & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v6;
      }

LABEL_6:
      ++v3;
      if (v7 == v2)
        goto LABEL_27;
    }
    __break(1u);
LABEL_23:
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v19);
  }
LABEL_27:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_10004CFA0(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v27 = 0;
  v3 = objc_msgSend((id)objc_opt_self(CBDiscovery), "devicesWithDiscoveryFlags:error:", 0x800000, &v27);
  v4 = v27;
  if (!v3)
  {
    v12 = v27;
    v13 = _convertNSErrorToError(_:)(v4);

    swift_willThrow();
    if (qword_1000B7B80 != -1)
      swift_once(&qword_1000B7B80, sub_10003D8A8);
    v14 = type metadata accessor for Logger(0);
    sub_1000093F8(v14, (uint64_t)qword_1000B90F8);
    swift_errorRetain(v13);
    v15 = swift_errorRetain(v13);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = (void *)swift_slowAlloc(32, -1);
      v27 = v19;
      *(_DWORD *)v18 = 136315138;
      v25 = v13;
      swift_errorRetain(v13);
      v20 = sub_100009F00((uint64_t *)&unk_1000B8740);
      v21 = String.init<A>(reflecting:)(&v25, v20);
      v23 = v22;
      v25 = sub_10004B4F0(v21, v22, (uint64_t *)&v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
      swift_bridgeObjectRelease(v23);
      swift_errorRelease(v13);
      swift_errorRelease(v13);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to get paired devices: %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

      swift_errorRelease(v13);
    }
    else
    {
      swift_errorRelease(v13);
      swift_errorRelease(v13);
      swift_errorRelease(v13);

    }
    return 0;
  }
  v5 = v3;
  v6 = sub_100009F84(0, &qword_1000B9320, CBDevice_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);
  v8 = v4;

  swift_bridgeObjectRetain(a2);
  v9 = sub_10004CD90(v7);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(a2);
  if (!v9)
    return 0;
  v10 = objc_msgSend(v9, "name");

  if (!v10)
    return 0;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);

  return v11;
}

uint64_t sub_10004D2BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004D2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004D2F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

__CFString *sub_10004D2F8(unint64_t a1)
{
  __CFString *v1;
  __CFString *v2;
  __CFString *v3;

  if (a1 > 3)
  {
    v1 = CFSTR("?");
    v2 = CFSTR("?");
  }
  else
  {
    v1 = off_1000A8340[a1];
    v2 = off_1000A8360[a1];
  }
  v3 = v1;
  return v2;
}

uint64_t sub_10004D348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeadphoneModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004D38C(uint64_t a1)
{
  return sub_100041EDC(a1, (uint64_t)&unk_1000A7F90, (uint64_t)sub_10004D3C4, (uint64_t)&unk_1000A7FA8);
}

uint64_t sub_10004D3B8()
{
  return sub_10004DE98((void (*)(_QWORD))&_swift_errorRelease);
}

void sub_10004D3C4()
{
  uint64_t v0;

  sub_10004623C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10004D3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B8A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004D414(uint64_t a1)
{
  return sub_100041EDC(a1, (uint64_t)&unk_1000A7FE0, (uint64_t)sub_10004D44C, (uint64_t)&unk_1000A7FF8);
}

uint64_t sub_10004D440()
{
  return sub_10004DE98((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_10004D44C()
{
  uint64_t v0;

  return sub_100044228(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_10004D454()
{
  unint64_t result;

  result = qword_1000B9358;
  if (!qword_1000B9358)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000B9358);
  }
  return result;
}

unint64_t sub_10004D498()
{
  unint64_t result;

  result = qword_1000B9360;
  if (!qword_1000B9360)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, &qword_1000B9360);
  }
  return result;
}

uint64_t sub_10004D4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_10004D588(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc(dword_1000B936C);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_10004E058;
  return sub_100049A04(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_10004D660(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1000B937C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10004E058;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1000B9378 + dword_1000B9378))(a1, v4);
}

uint64_t sub_10004D6D0(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10002913C(result, a2);
  return result;
}

uint64_t sub_10004D6E4()
{
  uint64_t v0;

  return sub_100045BD4(v0);
}

uint64_t sub_10004D6EC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004D710(void *a1, char a2)
{
  uint64_t v2;

  return sub_10004520C(a1, a2 & 1, v2);
}

uint64_t sub_10004D71C()
{
  uint64_t v0;

  sub_100015DFC(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10004D74C()
{
  uint64_t v0;

  sub_100045440(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_10004D75C(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_100015DFC(a1, a2 & 1);
}

uint64_t sub_10004D774(uint64_t a1)
{
  return sub_100041EDC(a1, (uint64_t)&unk_1000A8148, (uint64_t)sub_10004D7AC, (uint64_t)&unk_1000A8160);
}

uint64_t sub_10004D7A0()
{
  return sub_10004DE98((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_10004D7AC()
{
  uint64_t v0;

  return sub_100045F54(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10004D7B4(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;

  v2 = 0x8000000000000000;
  if (a1 <= 0x8000000000000000)
    v3 = 0x8000000000000000;
  else
    v3 = a1;
  if (a2 > 0x8000000000000000)
    v2 = a2;
  v4 = v3 >= v2;
  v5 = v3 > v2;
  v6 = !v4;
  return (v5 - v6);
}

uint64_t sub_10004D7DC(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_10004D7EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100009F00(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004D830()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(sub_100009F00(&qword_1000B9350) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 72) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 4));
  v5 = *((_QWORD *)v0 + 8);
  if (v5 >> 60 != 15)
    sub_10002931C(*((_QWORD *)v0 + 7), v5);
  v6 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v0[v3], 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(&v0[v3], v6);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10004D8F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  sub_100009F00(&qword_1000B9350);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_DWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 44);
  v10 = (_QWORD *)swift_task_alloc(dword_1000B93D4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10004D9B8;
  return sub_100046E44(a1, v3, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_10004D9B8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_10004DA00()
{
  id v0;
  NSString v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD v6[6];

  v0 = objc_allocWithZone((Class)ASDSystemAppMetadata);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithBundleID:", v1);

  objc_msgSend(v2, "setUserInitiated:", 1);
  v3 = (void *)objc_opt_self(ASDInstallApps);
  v6[4] = sub_100043EA0;
  v6[5] = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100044128;
  v6[3] = &unk_1000A8318;
  v4 = _Block_copy(v6);
  v5 = v2;
  objc_msgSend(v3, "installApp:withCompletionHandler:", v5, v4);
  _Block_release(v4);

}

uint64_t sub_10004DB0C(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;

  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_10004DBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = type metadata accessor for Data.RangeReference(0);
    result = swift_allocObject(v6, 32, 7);
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v3;
  }
  return result;
}

uint64_t sub_10004DC44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v3 & 0x80000000) == 0)
    return v3 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10004DCC4(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v9 = sub_100009F00(&qword_1000B93E0);
  v10 = sub_100015EF8(&qword_1000B93E8, &qword_1000B93E0, (uint64_t)&protocol conformance descriptor for <A> [A]);
  v8[0] = a1;
  v2 = sub_100013410(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain(a1);
  sub_10004BB6C(v3, v4, &v7);
  v5 = v7;
  sub_100015D14(v8);
  return v5;
}

uint64_t sub_10004DD74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1000B937C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10004D9B8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1000B9378 + dword_1000B9378))(a1, v4);
}

uint64_t sub_10004DDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return sub_10002E1A0(a4, a5);
  }
  return result;
}

_QWORD *sub_10004DE1C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

uint64_t sub_10004DE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return sub_10004D6D0(a4, a5);
  }
  return result;
}

uint64_t sub_10004DE8C()
{
  return sub_10004DE98((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10004DE98(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

uint64_t sub_10004DEC8()
{
  uint64_t v0;

  return sub_1000492F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10004DED0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10004DEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1000B9414);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10004E058;
  v3[4] = v2;
  return swift_task_switch(sub_10004945C, 0, 0);
}

double sub_10004DF5C()
{
  uint64_t v0;

  return sub_10004A24C(v0);
}

uint64_t sub_10004DF64()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004DF88()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10004DFBC()
{
  uint64_t v0;

  return sub_10004AB6C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_10004DFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a10);
    swift_bridgeObjectRelease(a13);
    swift_bridgeObjectRelease(a14);

  }
}

void sub_10004E0BC(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;

  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v2, "setDeviceAddress:", v4);

}

id sub_10004E114(char a1)
{
  void *v1;

  return objc_msgSend(v1, "setGuestMode:", a1 & 1);
}

id sub_10004E128(char a1)
{
  void *v1;

  return objc_msgSend(v1, "setDisconnectOnly:", a1 & 1);
}

id sub_10004E13C(char a1)
{
  void *v1;

  return objc_msgSend(v1, "setUnpairOnly:", a1 & 1);
}

void sub_10004E150(uint64_t a1, uint64_t a2, double a3)
{
  void *v3;
  void *v4;
  _QWORD v5[5];
  uint64_t v6;

  if (a1)
  {
    v5[4] = a1;
    v6 = a2;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 1107296256;
    v5[2] = sub_1000410E8;
    v5[3] = &unk_1000A8508;
    v4 = _Block_copy(v5);
    *(_QWORD *)&a3 = swift_release(v6).n128_u64[0];
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, "setCompletionHandler:", v4, a3);
  _Block_release(v4);
}

uint64_t sub_10004E1DC()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "name");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

id sub_10004E240()
{
  void *v0;

  return objc_msgSend(v0, "softwareVolume");
}

id sub_10004E260()
{
  void *v0;

  return objc_msgSend(v0, "deviceVersion");
}

id sub_10004E270()
{
  void *v0;

  return objc_msgSend(v0, "inEarDetection");
}

id sub_10004E290()
{
  void *v0;

  return objc_msgSend(v0, "activate");
}

id sub_10004E2A0()
{
  void *v0;

  return objc_msgSend(v0, "invalidate");
}

double sub_10004E2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  char *v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD aBlock[5];
  uint64_t v46;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v40 - 8);
  v12 = __chkstk_darwin(v40, v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  v17 = (char *)&v37 - v16;
  v18 = type metadata accessor for DispatchQoS.QoSClass(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 81) == 1)
  {
    v24 = *(void (**)(uint64_t))(v1 + 40);
    if (v24)
    {
      v25 = *(_QWORD *)(v1 + 48);
      v26 = *(_QWORD *)(v1 + 88);
      sub_10004E82C(*(_QWORD *)(v1 + 40), v25);
      swift_errorRetain(v26);
      v24(v26);
      sub_10004D7DC((uint64_t)v24, v25);
      swift_errorRelease(v26);
    }
  }
  else
  {
    sub_10004E784();
    v39 = v2;
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v23, enum case for DispatchQoS.QoSClass.background(_:), v18);
    v38 = static OS_dispatch_queue.global(qos:)(v23);
    v27 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v23, v18);
    static DispatchTime.now()(v27);
    + infix(_:_:)(v14, 2.0);
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v29 = v40;
    v28(v14, v40);
    aBlock[4] = sub_10004E7C0;
    v46 = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100012FBC;
    aBlock[3] = &unk_1000A84E0;
    v30 = _Block_copy(aBlock);
    v31 = swift_retain(v1);
    static DispatchQoS.unspecified.getter(v31);
    v44 = _swiftEmptyArrayStorage;
    v32 = sub_100015EB0();
    v33 = sub_100009F00(&qword_1000B8338);
    v34 = sub_10004E7E0();
    v35 = v39;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v44, v33, v34, v39, v32);
    v36 = (void *)v38;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v9, v5, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v35);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v42);
    v28(v17, v29);
    *(_QWORD *)&result = swift_release(v46).n128_u64[0];
  }
  return result;
}

uint64_t sub_10004E5CC(uint64_t result)
{
  void (*v1)(_QWORD);
  uint64_t v2;

  v1 = *(void (**)(_QWORD))(result + 40);
  if (v1)
  {
    v2 = *(_QWORD *)(result + 48);
    swift_retain(v2);
    v1(0);
    return sub_10004D7DC((uint64_t)v1, v2);
  }
  return result;
}

uint64_t sub_10004E614()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v2 = (void (*)(uint64_t))v0[12];
  if (v2)
  {
    v3 = v0[13];
    v4 = swift_retain(v1[13]);
    v2(v4);
    sub_10004D7DC((uint64_t)v2, v3);
  }
  v5 = v1[5];
  v6 = v1[6];
  v1[5] = 0;
  v1[6] = 0;
  return sub_10004D7DC(v5, v6);
}

uint64_t sub_10004E664()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  sub_10004D7DC(v0[5], v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_errorRelease(v0[11]);
  sub_10004D7DC(v0[12], v0[13]);
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for HeadphoneFakePairingSession()
{
  return objc_opt_self(_TtC20HeadphoneProxService27HeadphoneFakePairingSession);
}

double sub_10004E6C8()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 76) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_DWORD *)(v0 + 31) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_BYTE *)(v0 + 72) = 0;
  *(_WORD *)(v0 + 80) = 1;
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0;
  *(_QWORD *)(v0 + 88) = 0;
  return result;
}

uint64_t sub_10004E6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_10004E70C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t sub_10004E714(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t sub_10004E71C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 34) = result;
  return result;
}

uint64_t sub_10004E724(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 40);
  v4 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return sub_10004D7DC(v3, v4);
}

uint64_t sub_10004E738()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 64));
  return v1;
}

uint64_t sub_10004E764()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_10004E76C()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 76);
}

uint64_t sub_10004E774()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

unint64_t sub_10004E784()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B82E0;
  if (!qword_1000B82E0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B82E0);
  }
  return result;
}

uint64_t sub_10004E7C0()
{
  uint64_t v0;

  return sub_10004E5CC(v0);
}

uint64_t sub_10004E7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004E7D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10004E7E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B8340;
  if (!qword_1000B8340)
  {
    v1 = sub_1000157E4(&qword_1000B8338);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000B8340);
  }
  return result;
}

uint64_t sub_10004E82C(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_10004E844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9520);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9520);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10004E8D4()
{
  qword_1000B9538 = 0x3FF0000000000000;
}

void sub_10004E8E4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  Class isa;
  void **v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32[3];
  objc_super v33;

  v3 = v2;
  v33.receiver = v2;
  v33.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v33, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 3);
  v4 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerLayoutGuide];
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setIdentifier:", v5);

  v6 = objc_msgSend(v3, "contentView");
  objc_msgSend(v6, "addLayoutGuide:", v4);

  v7 = objc_msgSend(v3, "contentView");
  v8 = objc_msgSend(v7, "mainContentGuide");

  v9 = objc_msgSend(v4, "bottomAnchor");
  v10 = objc_msgSend(v8, "bottomAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  v12 = (void *)objc_opt_self(NSLayoutConstraint);
  v13 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v14 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100088460;
  v15 = objc_msgSend(v4, "topAnchor");
  v16 = objc_msgSend(v8, "topAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v14 + 32) = v17;
  v18 = objc_msgSend(v4, "leadingAnchor");
  v19 = objc_msgSend(v8, "leadingAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v14 + 40) = v20;
  v21 = objc_msgSend(v4, "trailingAnchor");
  v22 = objc_msgSend(v8, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v14 + 48) = v23;
  *(_QWORD *)(v14 + 56) = v11;
  v32[0] = v14;
  specialized Array._endMutation()(v24);
  sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
  v25 = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v12, "activateConstraints:", isa);

  v27 = (void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint], v32, 1, 0);
  v28 = *v27;
  *v27 = v25;
  v29 = v25;

  v30 = sub_10004EC74();
  v31 = *(void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer];
  *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer] = v30;

}

id sub_10004EC74()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  _QWORD v27[27];
  char v28[24];
  _BYTE v29[216];

  v1 = v0;
  v2 = type metadata accessor for HeadphoneBatteryContainer();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)), "init");
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = &v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel];
  swift_beginAccess(v4, v28, 0, 0);
  v5 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_10001F208((uint64_t)v27);
  }
  else
  {
    sub_10001B808((uint64_t)&v4[*(int *)(v5 + 56)], (uint64_t)v27);
    sub_10003D268(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D230);
  }
  sub_10001B808((uint64_t)v27, (uint64_t)v29);
  v6 = (uint64_t)v3 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_layoutMetrics;
  sub_10001B808((uint64_t)v3 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_layoutMetrics, (uint64_t)v27);
  sub_10001B808((uint64_t)v29, v6);
  sub_10003D268(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001B91C);
  v7 = objc_msgSend(v1, "contentView");
  objc_msgSend(v7, "addSubview:", v3);

  v8 = (void *)objc_opt_self(NSLayoutConstraint);
  v9 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100088460;
  v11 = objc_msgSend(v3, "topAnchor");
  v12 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerLayoutGuide];
  v13 = objc_msgSend(v12, "topAnchor");
  v14 = objc_msgSend(v11, "constraintGreaterThanOrEqualToAnchor:", v13);

  *(_QWORD *)(v10 + 32) = v14;
  v15 = objc_msgSend(v3, "bottomAnchor");
  v16 = objc_msgSend(v12, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintLessThanOrEqualToAnchor:", v16);

  *(_QWORD *)(v10 + 40) = v17;
  v18 = objc_msgSend(v3, "centerXAnchor");
  v19 = objc_msgSend(v12, "centerXAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v10 + 48) = v20;
  v21 = objc_msgSend(v3, "centerYAnchor");
  v22 = objc_msgSend(v12, "centerYAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v10 + 56) = v23;
  specialized Array._endMutation()(v24);
  sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v8, "activateConstraints:", isa);

  return v3;
}

uint64_t sub_10004F020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t inited;
  void **v16;
  void *v17;
  void **v18;
  void *v19;
  void **v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  char *v41;
  void **v42;
  char *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  char *v50;
  id v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  _QWORD v61[3];
  char v62[24];
  char v63[24];
  char v64[24];
  char v65[56];
  char v66[32];

  v1 = v0;
  v2 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HeadphoneAssets(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel, v66, 0, 0);
  v12 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    return sub_100017E48((uint64_t)v5, &qword_1000B7F18);
  }
  sub_10001B868(v11 + *(int *)(v12 + 44), (uint64_t)v5, &qword_1000B7F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_100017E48((uint64_t)v5, &qword_1000B7F18);
  sub_10003D1CC((uint64_t)v5, (uint64_t)v10, type metadata accessor for HeadphoneAssets);
  v14 = sub_100009F00(&qword_1000B95D0);
  inited = swift_initStackObject(v14, v65);
  *(_OWORD *)(inited + 16) = xmmword_100089C70;
  v16 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView, v64, 0, 0);
  v17 = *v16;
  *(_QWORD *)(inited + 32) = *v16;
  v18 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView);
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView, v63, 0, 0);
  v19 = *v18;
  *(_QWORD *)(inited + 40) = *v18;
  v20 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView);
  v21 = swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView, v62, 0, 0);
  v22 = *v20;
  *(_QWORD *)(inited + 48) = v22;
  v61[0] = inited;
  specialized Array._endMutation()(v21);
  v57 = v61[0];
  v59 = v61[0] + 32;
  v23 = v22;
  v24 = v17;
  v25 = v19;
  v26 = 0;
  v58 = v1;
  do
  {
    v27 = *(char **)(v59 + 8 * v26);
    if (v27)
    {
      v28 = *(_QWORD *)&v27[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews];
      v60 = *(id *)(v59 + 8 * v26);
      if ((unint64_t)v28 >> 62)
      {
        if (v28 < 0)
          v40 = v28;
        else
          v40 = v28 & 0xFFFFFFFFFFFFFF8;
        v41 = v27;
        swift_bridgeObjectRetain(v28);
        v29 = _CocoaArrayWrapper.endIndex.getter(v40);
        if (v29)
          goto LABEL_11;
      }
      else
      {
        v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        v30 = v27;
        swift_bridgeObjectRetain(v28);
        if (v29)
        {
LABEL_11:
          result = objc_opt_self(UITraitCollection);
          if (v29 < 1)
          {
            __break(1u);
            return result;
          }
          v31 = (void *)result;
          v32 = 0;
          do
          {
            if ((v28 & 0xC000000000000001) != 0)
              v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v28);
            else
              v33 = *(id *)(v28 + 8 * v32 + 32);
            v34 = v33;
            ++v32;
            v35 = objc_msgSend(v31, "currentTraitCollection");
            v36 = objc_msgSend(v35, "userInterfaceStyle");

            if (v36 == (id)2)
              v37 = 1;
            else
              v37 = 2;
            URL._bridgeToObjectiveC()((NSURL *)1);
            v39 = v38;
            objc_msgSend(v34, "updateViewForAssetType:adjustmentsURL:", v37, v38);

          }
          while (v29 != v32);
        }
      }

      swift_bridgeObjectRelease(v28);
      v1 = v58;
    }
    ++v26;
  }
  while (v26 != 3);
  swift_bridgeObjectRelease(v57);
  v42 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView);
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView, v61, 32, 0);
  v43 = (char *)*v42;
  if (*v42)
  {
    swift_endAccess(v61);
    v44 = *(void **)&v43[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView];
    v45 = objc_opt_self(SFMediaPlayerView);
    v46 = swift_dynamicCastObjCClass(v44, v45);
    if (v46)
    {
      v47 = (void *)v46;
      v48 = (void *)objc_opt_self(UITraitCollection);
      v49 = v44;
      v50 = v43;
      v51 = objc_msgSend(v48, "currentTraitCollection");
      v52 = objc_msgSend(v51, "userInterfaceStyle");

      if (v52 == (id)2)
        v53 = 1;
      else
        v53 = 2;
      URL._bridgeToObjectiveC()((NSURL *)1);
      v55 = v54;
      objc_msgSend(v47, "updateViewForAssetType:adjustmentsURL:", v53, v54);

    }
    return sub_10000EC60((uint64_t)v10, type metadata accessor for HeadphoneAssets);
  }
  else
  {
    sub_10000EC60((uint64_t)v10, type metadata accessor for HeadphoneAssets);
    return swift_endAccess(v61);
  }
}

uint64_t sub_10004F594(char a1, uint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t ObjectType;
  char v10[24];
  objc_super v11;

  v11.receiver = v2;
  v11.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v11, "viewDidDisappear:", a1 & 1);
  v4 = &v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView];
  result = swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView], v10, 0, 0);
  if (*(_QWORD *)v4)
  {
    v7 = (_QWORD *)(*(_QWORD *)v4 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView);
    v8 = v7[1];
    ObjectType = swift_getObjectType(*v7, v6);
    return dispatch thunk of VideoPlaybackControllable.stop()(ObjectType, v8);
  }
  return result;
}

void sub_10004F67C(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id *v35;
  id v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v2 = v1;
  v4 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v4, v5);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003CC88((uint64_t)a1, (uint64_t)v7, type metadata accessor for HeadphoneViewModel);
  v8 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  v9 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel], aBlock, 33, 0);
  sub_10003251C((uint64_t)v7, v9);
  swift_endAccess(aBlock);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v10);

  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setAdjustsFontForContentSizeCategory:", 1);
  v12 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v11, "setFont:", v12);

  objc_msgSend(v11, "setNumberOfLines:", 0);
  v13 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v11, "setTextColor:", v13);

  objc_msgSend(v11, "setTextAlignment:", 1);
  v14 = objc_msgSend(v2, "contentView");
  objc_msgSend(v14, "addSubview:", v11);

  v15 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel];
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel] = v11;
  v16 = v11;

  v17 = a1[5];
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = a1[4] & 0xFFFFFFFFFFFFLL;
  if (v18)
  {
    v19 = swift_allocObject(&unk_1000A8580, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16, v2);
    swift_bridgeObjectRetain(v17);
    swift_retain(v19);
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    aBlock[4] = sub_100054C08;
    v38 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100011720;
    aBlock[3] = &unk_1000A8598;
    v21 = _Block_copy(aBlock);
    v22 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v20, 0, v21);

    _Block_release(v21);
    v23 = v38;
    swift_release(v19);
    v24 = objc_msgSend(v2, "addAction:", v22, swift_release(v23).n128_f64[0]);

  }
  v25 = a1[7];
  v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v26 = a1[6] & 0xFFFFFFFFFFFFLL;
  if (v26)
  {
    v27 = objc_msgSend((id)objc_opt_self(PRXButton), "buttonWithProximityType:", 0);
    objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v28 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "setTitle:forState:", v28, 0);

    sub_100009F84(0, (unint64_t *)&unk_1000B9970, UIAction_ptr);
    v29 = swift_allocObject(&unk_1000A8580, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16, v2);
    v30 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100054C28, v29);
    objc_msgSend(v27, "addAction:forControlEvents:", v30, 0x2000);

    v31 = objc_msgSend(v2, "contentView");
    objc_msgSend(v31, "addSubview:", v27);

    v32 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_turnOffOptimizedBatteryChargingButton];
    *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_turnOffOptimizedBatteryChargingButton] = v27;

  }
  v33 = (void *)a1[12];
  if (v33)
  {
    v34 = v33;
    objc_msgSend(v16, "setAttributedText:", v34);
    sub_10004FFD8();
    v35 = (id *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint];
    swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint], aBlock, 0, 0);
    if (*v35)
    {
      v36 = *v35;
      objc_msgSend(v36, "setActive:", 0);

    }
  }
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer])
    __asm { BR              X17 }

}

void sub_10004FD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_presenter);

    if (v5)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_1000093F8(v6, (uint64_t)qword_1000B9F80);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Requested battery status finished", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

      v11 = *(_QWORD *)(v5 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(_BYTE *)(v11
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 116)) = 0;
      sub_100072410(0);
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_10004FE88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_presenter);

    if (v5)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_1000093F8(v6, (uint64_t)qword_1000B9F80);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Requested turn off optimized battery charging", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

      swift_beginAccess(v5 + 16, &v12, 0, 0);
      v11 = *(_QWORD *)(v5 + 40);
      if (v11)
      {
        sub_100013410((_QWORD *)(v5 + 16), v11);
        sub_100043744();
      }
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_10004FFD8()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  Class isa;
  id v34;
  Class v35;

  v1 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_turnOffOptimizedBatteryChargingButton];
    if (v2)
    {
      v3 = v1;
      v35 = v2;
      v4 = objc_msgSend(v3, "attributedText");
      if (v4)
      {
        v5 = v4;
        v6 = (uint64_t)objc_msgSend(v4, "length");

        if (v6 >= 1)
        {
          v7 = objc_msgSend(v0, "contentView");
          v8 = objc_msgSend(v7, "mainContentGuide");

          v34 = (id)objc_opt_self(NSLayoutConstraint);
          v9 = sub_100009F00((uint64_t *)&unk_1000B8730);
          v10 = swift_allocObject(v9, 88, 7);
          *(_OWORD *)(v10 + 16) = xmmword_1000898E0;
          v11 = objc_msgSend(v3, "topAnchor");
          v12 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerLayoutGuide], "bottomAnchor");
          v13 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, 20.0);

          *(_QWORD *)(v10 + 32) = v13;
          v14 = objc_msgSend(v3, "leadingAnchor");
          v15 = objc_msgSend(v8, "leadingAnchor");
          v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

          *(_QWORD *)(v10 + 40) = v16;
          v17 = objc_msgSend(v3, "trailingAnchor");
          v18 = objc_msgSend(v8, "trailingAnchor");
          v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

          *(_QWORD *)(v10 + 48) = v19;
          v20 = -[objc_class topAnchor](v35, "topAnchor");
          v21 = objc_msgSend(v3, "bottomAnchor");
          v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

          *(_QWORD *)(v10 + 56) = v22;
          v23 = -[objc_class leadingAnchor](v35, "leadingAnchor");
          v24 = objc_msgSend(v8, "leadingAnchor");
          v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

          *(_QWORD *)(v10 + 64) = v25;
          v26 = -[objc_class trailingAnchor](v35, "trailingAnchor");
          v27 = objc_msgSend(v8, "trailingAnchor");
          v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

          *(_QWORD *)(v10 + 72) = v28;
          v29 = -[objc_class bottomAnchor](v35, "bottomAnchor");
          v30 = objc_msgSend(v8, "bottomAnchor");
          v31 = objc_msgSend(v29, "constraintLessThanOrEqualToAnchor:", v30);

          *(_QWORD *)(v10 + 80) = v31;
          specialized Array._endMutation()(v32);
          sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v10);
          objc_msgSend(v34, "activateConstraints:", isa);

          v3 = v8;
          v35 = isa;
        }
      }

    }
  }
}

uint64_t sub_10005041C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int8x16_t v32;
  _BYTE v33[40];
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t ObjectType;
  _BYTE *v38;
  uint64_t v39;
  uint64_t aBlock;
  _BYTE v41[32];

  v3 = v2;
  ObjectType = swift_getObjectType(v2, a2);
  v5 = sub_100009F00(&qword_1000B8C40);
  v7 = __chkstk_darwin(v5, v6);
  v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v10);
  v12 = &v33[-v11];
  v13 = type metadata accessor for HeadphoneViewModel(0);
  v14 = *(_QWORD *)(v13 - 8);
  v16 = __chkstk_darwin(v13, v15);
  v36 = &v33[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __chkstk_darwin(v16, v18);
  v38 = &v33[-v20];
  v22 = __chkstk_darwin(v19, v21);
  v35 = v23;
  __chkstk_darwin(v22, v24);
  v26 = &v33[-v25];
  v27 = v3 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess(v27, v41, 0, 0);
  sub_10001B868(v27, (uint64_t)v12, &qword_1000B8C40);
  v39 = v14;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_100017E48((uint64_t)v12, &qword_1000B8C40);
  sub_10003D1CC((uint64_t)v12, (uint64_t)v26, type metadata accessor for HeadphoneViewModel);
  v29 = *(int *)(v13 + 48);
  v34 = a1;
  v30 = a1 + v29;
  v31 = *(unsigned __int16 *)(a1 + v29 + 40);
  if ((v31 & 0xE000) != 0xA000
    || v31 != 40960
    || (v32 = vorrq_s8(*(int8x16_t *)(v30 + 8), *(int8x16_t *)(v30 + 24)),
        *(_QWORD *)&vorr_s8(*(int8x8_t *)v32.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v32, v32, 8uLL)) | *(_QWORD *)v30))
  {
    sub_10003CC88(v34, (uint64_t)v9, type metadata accessor for HeadphoneViewModel);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v9, 0, 1, v13);
    swift_beginAccess(v27, &aBlock, 33, 0);
    sub_10003251C((uint64_t)v9, v27);
    swift_endAccess(&aBlock);
    __asm { BR              X16 }
  }
  return sub_10000EC60((uint64_t)v26, type metadata accessor for HeadphoneViewModel);
}

void sub_100051010(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  void **aBlock;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  _QWORD *v34;

  v9 = type metadata accessor for HeadphoneViewModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9, v12);
  v28 = (id)objc_opt_self(UIView);
  if (qword_1000B7B98 != -1)
    swift_once(&qword_1000B7B98, sub_10004E8D4);
  v13 = *(double *)&qword_1000B9538;
  v14 = swift_allocObject(&unk_1000A86C0, 32, 7);
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  v33 = sub_100054FA8;
  v34 = (_QWORD *)v14;
  aBlock = _NSConcreteStackBlock;
  v30 = 1107296256;
  v31 = sub_100012FBC;
  v32 = &unk_1000A86D8;
  v15 = _Block_copy(&aBlock);
  v16 = v34;
  v17 = a2;
  v18 = a3;
  swift_release(v16);
  v19 = swift_allocObject(&unk_1000A8580, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v18);
  sub_10003CC88(a5, (uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeadphoneViewModel);
  v20 = *(unsigned __int8 *)(v10 + 80);
  v21 = (v20 + 40) & ~v20;
  v22 = (_QWORD *)swift_allocObject(&unk_1000A8710, v21 + v11, v20 | 7);
  v22[2] = a4;
  v22[3] = v19;
  v22[4] = v17;
  sub_10003D1CC((uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v22 + v21, type metadata accessor for HeadphoneViewModel);
  v33 = sub_10005522C;
  v34 = v22;
  aBlock = _NSConcreteStackBlock;
  v30 = 1107296256;
  v31 = sub_100013120;
  v32 = &unk_1000A8728;
  v23 = _Block_copy(&aBlock);
  v24 = v34;
  v25 = a4;
  v26 = v17;
  swift_release(v24);
  objc_msgSend(v28, "animateWithDuration:delay:options:animations:completion:", 0, v15, v23, v13, 0.0);
  _Block_release(v23);
  _Block_release(v15);
}

void sub_100051248(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  objc_msgSend(a1, "setAlpha:", 1.0);
  v3 = objc_msgSend(a2, "view");
  if (!v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  v4 = v3;
  objc_msgSend(v3, "setNeedsLayout");

  v5 = objc_msgSend(a2, "navigationController");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "parentViewController");

    if (v7)
    {
      v8 = objc_msgSend(v7, "view");

      if (v8)
      {
        objc_msgSend(v8, "layoutIfNeeded");

        return;
      }
      goto LABEL_8;
    }
  }
}

void sub_100051348(int a1, id a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  void *v10;
  id v11;
  _BYTE *v12;
  uint64_t v13;
  void *v14;
  id *v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t ObjectType;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];

  v7 = a3 + 16;
  if (a2)
    objc_msgSend(a2, "removeFromSuperview");
  swift_beginAccess(v7, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(void **)(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer) = a4;

    v11 = a4;
  }
  swift_beginAccess(v7, v23, 0, 0);
  v12 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v7);
  if (v12)
  {
    v12[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_isTransitioning] = 0;

  }
  if ((*(_BYTE *)(a5 + *(int *)(type metadata accessor for HeadphoneViewModel(0) + 60)) & 1) == 0)
  {
    swift_beginAccess(v7, v22, 0, 0);
    v13 = swift_unknownObjectWeakLoadStrong(v7);
    if (v13)
    {
      v14 = (void *)v13;
      v15 = (id *)(v13 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView);
      swift_beginAccess(v13 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView, v21, 0, 0);
      if (*v15)
      {
        v16 = (char *)*v15;

        v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView + 8];
        v18 = *(id *)&v16[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView];

        ObjectType = swift_getObjectType(v18, v19);
        dispatch thunk of VideoPlaybackControllable.stop()(ObjectType, v17);

      }
      else
      {

      }
    }
  }
}

void sub_1000514B4(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  void *v3;
  char *v4;
  char *v5;
  void *v6;
  char *v7;
  char *v8;
  id *v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  char v17[24];

  v1 = a1 + 16;
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a1 + 16);
  v3 = *(void **)&Strong[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel];
  if (v3)
  {
    v4 = v3;

    objc_msgSend(v4, "removeFromSuperview");
    Strong = v4;
  }

  v5 = (char *)swift_unknownObjectUnownedLoadStrong(v1);
  v6 = *(void **)&v5[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_turnOffOptimizedBatteryChargingButton];
  if (v6)
  {
    v7 = v6;

    objc_msgSend(v7, "removeFromSuperview");
    v5 = v7;
  }

  v8 = (char *)swift_unknownObjectUnownedLoadStrong(v1);
  v9 = (id *)&v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint];
  swift_beginAccess(&v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint], v17, 0, 0);
  if (*v9)
  {
    v10 = (char *)*v9;

    objc_msgSend(v10, "setActive:", 1);
    v8 = v10;
  }

  v11 = (void *)swift_unknownObjectUnownedLoadStrong(v1);
  v12 = objc_msgSend(v11, "view");

  if (!v12)
  {
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(v12, "setNeedsLayout");

  v13 = (void *)swift_unknownObjectUnownedLoadStrong(v1);
  v14 = objc_msgSend(v13, "navigationController");

  if (v14)
  {
    v15 = objc_msgSend(v14, "parentViewController");

    if (v15)
    {
      v16 = objc_msgSend(v15, "view");

      if (v16)
      {
        objc_msgSend(v16, "layoutIfNeeded");

        return;
      }
LABEL_14:
      __break(1u);
    }
  }
}

void sub_100051684(int a1, unsigned int a2, char *a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, char *);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char v39;
  unsigned int v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void *v46;
  char **v47;
  char *v48;
  char *v49;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  void **v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  __int16 v80;
  char *v81;
  int v82;
  void *v83;
  double v84;
  char v85;
  unint64_t v86;
  unint64_t v87;
  char *v88;
  void **v89;
  void *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  id v98;
  char *v99;
  char *v100;
  char v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  void *v105;
  uint64_t v106;
  unsigned int v107;
  char *v108;
  id v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD v114[3];
  _QWORD v115[21];
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _OWORD v120[11];
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD v125[13];
  uint64_t v126;

  v111 = a3;
  v107 = a2;
  LODWORD(v109) = a1;
  v8 = sub_100009F00(&qword_1000B7F18);
  v10 = __chkstk_darwin(v8, v9);
  v106 = (uint64_t)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  v14 = (char *)&v106 - v13;
  v15 = (char *)type metadata accessor for HeadphoneAssets(0);
  v113 = (_QWORD *)*((_QWORD *)v15 - 1);
  v17 = __chkstk_darwin(v15, v16);
  v108 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v19);
  v112 = (uint64_t)&v106 - v20;
  v21 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v21, v22);
  v24 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (int *)type metadata accessor for HeadphoneViewModel(0);
  v26 = *((_QWORD *)v25 - 1);
  __chkstk_darwin(v25, v27);
  v29 = (char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = v5;
  v30 = v5 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess(v5 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel, &v124, 0, 0);
  sub_10001B868(v30, (uint64_t)v24, &qword_1000B8C40);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_100017E48((uint64_t)v24, &qword_1000B8C40);
    return;
  }
  sub_10003D1CC((uint64_t)v24, (uint64_t)v29, type metadata accessor for HeadphoneViewModel);
  v31 = (uint64_t)&v29[v25[11]];
  sub_10001B868(v31, (uint64_t)v14, &qword_1000B7F18);
  v32 = (unsigned int (*)(char *, uint64_t, char *))v113[6];
  v33 = v29;
  if (v32(v14, 1, v15) == 1)
  {
    sub_10000EC60((uint64_t)v29, type metadata accessor for HeadphoneViewModel);
    sub_100017E48((uint64_t)v14, &qword_1000B7F18);
    return;
  }
  v34 = v112;
  sub_10003D1CC((uint64_t)v14, v112, type metadata accessor for HeadphoneAssets);
  if (v29[v25[15]] == 1)
  {
    sub_10001B808((uint64_t)&v29[v25[14]], (uint64_t)&v118);
    sub_10001B808((uint64_t)&v118, (uint64_t)v120);
    if (sub_10001B850((uint64_t)v120) != 1)
    {
      v125[10] = v120[10];
      v125[11] = v121;
      v125[12] = v122;
      v126 = v123;
      v125[6] = v120[6];
      v125[7] = v120[7];
      v125[8] = v120[8];
      v125[9] = v120[9];
      v125[2] = v120[2];
      v125[3] = v120[3];
      v125[4] = v120[4];
      v125[5] = v120[5];
      v125[0] = v120[0];
      v125[1] = v120[1];
      v35 = v106;
      sub_10001B868(v31, v106, &qword_1000B7F18);
      if (v32((char *)v35, 1, v15) == 1)
      {
        sub_100017E48(v35, &qword_1000B7F18);
      }
      else
      {
        v36 = v35 + *((int *)v15 + 10);
        v37 = *(void **)v36;
        v38 = *(_QWORD *)(v36 + 8);
        sub_10003D268(&v118, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D230);
        v14 = v37;
        sub_10000EC60(v35, type metadata accessor for HeadphoneAssets);
        if (v37)
        {
          v39 = v107;
          v40 = v107 >> 8;
          v41 = (char)v109;
          v42 = v109 >> 8;
          v43 = sub_100009F00(&qword_1000B95C8);
          v44 = swift_allocObject(v43, 64, 7);
          *(_OWORD *)(v44 + 16) = xmmword_100088470;
          *(double *)(v44 + 32) = a4;
          *(_BYTE *)(v44 + 40) = v41 & 1;
          *(_BYTE *)(v44 + 41) = v42;
          *(double *)(v44 + 48) = a5;
          *(_BYTE *)(v44 + 56) = v39 & 1;
          *(_BYTE *)(v44 + 57) = v40;
          objc_allocWithZone((Class)type metadata accessor for HeadphoneMovieBatteryView());
          v45 = v14;
          v46 = (void *)sub_10000A4E4(v45, v38, (double *)v125, (char *)v44);
          v47 = (char **)&v111[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
          swift_beginAccess(&v111[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews], v115, 33, 0);
          v48 = *v47;
          v49 = v46;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v48);
          *v47 = v48;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v48 = sub_100081F78(0, *((_QWORD *)v48 + 2) + 1, 1, v48);
            *v47 = v48;
          }
          v52 = *((_QWORD *)v48 + 2);
          v51 = *((_QWORD *)v48 + 3);
          v53 = v112;
          if (v52 >= v51 >> 1)
          {
            v48 = sub_100081F78((char *)(v51 > 1), v52 + 1, 1, v48);
            *v47 = v48;
          }
          *((_QWORD *)v48 + 2) = v52 + 1;
          v54 = &v48[16 * v52];
          *((_QWORD *)v54 + 4) = v49;
          *((_QWORD *)v54 + 5) = &off_1000A60E8;
          swift_endAccess(v115);
          objc_msgSend(v49, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          objc_msgSend(v111, "addSubview:", v49);

          sub_10000EC60(v53, type metadata accessor for HeadphoneAssets);
          sub_10000EC60((uint64_t)v29, type metadata accessor for HeadphoneViewModel);
          v55 = (void **)(v110 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView);
          v56 = v115;
          goto LABEL_50;
        }
        sub_10003D268(&v118, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001B91C);
      }
    }
  }
  v57 = *(_QWORD *)(v34 + *((int *)v15 + 8));
  if ((unint64_t)v57 >> 62)
  {
    if (v57 < 0)
      v71 = *(_QWORD *)(v34 + *((int *)v15 + 8));
    else
      v71 = v57 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v34 + *((int *)v15 + 8)));
    v72 = _CocoaArrayWrapper.endIndex.getter(v71);
    swift_bridgeObjectRelease(v57);
    if (v72 < 3)
      goto LABEL_18;
  }
  else if (*(uint64_t *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10) < 3)
  {
LABEL_18:
    if (qword_1000B7B90 != -1)
      swift_once(&qword_1000B7B90, sub_10004E844);
    v58 = type metadata accessor for Logger(0);
    sub_1000093F8(v58, (uint64_t)qword_1000B9520);
    v59 = (uint64_t)v108;
    v60 = sub_10003CC88(v34, (uint64_t)v108, type metadata accessor for HeadphoneAssets);
    v61 = Logger.logObject.getter(v60);
    v62 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc(12, -1);
      v64 = swift_slowAlloc(32, -1);
      *(_DWORD *)v63 = 136315138;
      *(_QWORD *)&v120[0] = v64;
      v118 = *(_QWORD *)(v59 + *((int *)v15 + 8));
      swift_bridgeObjectRetain(v118);
      v65 = sub_100009F00(&qword_1000B8160);
      v66 = String.init<A>(reflecting:)(&v118, v65);
      v113 = v33;
      v68 = v67;
      v118 = sub_10004B4F0(v66, v67, (uint64_t *)v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
      swift_bridgeObjectRelease(v68);
      sub_10000EC60(v59, type metadata accessor for HeadphoneAssets);
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Expected 3 images, only have: %s", v63, 0xCu);
      swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v64, -1, -1);
      swift_slowDealloc(v63, -1, -1);

      sub_10000EC60(v112, type metadata accessor for HeadphoneAssets);
      v69 = (uint64_t)v113;
LABEL_43:
      sub_10000EC60(v69, type metadata accessor for HeadphoneViewModel);
      return;
    }

    sub_10000EC60(v59, type metadata accessor for HeadphoneAssets);
    v70 = v34;
LABEL_42:
    sub_10000EC60(v70, type metadata accessor for HeadphoneAssets);
    v69 = (uint64_t)v33;
    goto LABEL_43;
  }
  if ((v57 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v57);
    v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v57);
    swift_bridgeObjectRelease(v57);
    swift_bridgeObjectRetain(v57);
    v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v57);
    swift_bridgeObjectRelease(v57);
LABEL_31:
    v108 = v15;
    v29 = (char *)sub_100009F00((uint64_t *)&unk_1000B8730);
    v78 = swift_allocObject(v29, 48, 7);
    *(_OWORD *)(v78 + 16) = xmmword_100087F40;
    *(_QWORD *)(v78 + 32) = v76;
    *(_QWORD *)(v78 + 40) = v77;
    v115[0] = v78;
    specialized Array._endMutation()(v78);
    v79 = v115[0];
    v80 = (unsigned __int16)v109 & 0xFF01;
    v109 = v76;
    v113 = v77;
    v81 = (char *)sub_10001D198(v79, v80, 0, 0, a4);
    sub_10001CCF0();
    sub_10001B808((uint64_t)v33 + v25[14], (uint64_t)&v118);
    sub_10001B808((uint64_t)&v118, (uint64_t)v120);
    v82 = sub_10001B850((uint64_t)v120);
    v83 = *(void **)&v81[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView];
    if (v83)
    {
      v84 = *(double *)&v121;
      if (v82 == 1)
        v84 = 0.0;
      objc_msgSend(v83, "setSpacing:", v84);
    }
    v14 = v111;
    v15 = &v111[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
    swift_beginAccess(&v111[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews], v115, 33, 0);
    v57 = *(_QWORD *)v15;
    v25 = v81;
    v85 = swift_isUniquelyReferenced_nonNull_native(v57);
    *(_QWORD *)v15 = v57;
    if ((v85 & 1) != 0)
      goto LABEL_36;
    goto LABEL_54;
  }
  v73 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v73)
  {
    if (v73 != 1)
    {
      v74 = *(void **)(v57 + 32);
      v75 = *(void **)(v57 + 40);
      v76 = v74;
      v77 = v75;
      goto LABEL_31;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_54:
  v57 = (uint64_t)sub_100081F78(0, *(_QWORD *)(v57 + 16) + 1, 1, (char *)v57);
  *(_QWORD *)v15 = v57;
LABEL_36:
  v87 = *(_QWORD *)(v57 + 16);
  v86 = *(_QWORD *)(v57 + 24);
  if (v87 >= v86 >> 1)
  {
    v57 = (uint64_t)sub_100081F78((char *)(v86 > 1), v87 + 1, 1, (char *)v57);
    *(_QWORD *)v15 = v57;
  }
  *(_QWORD *)(v57 + 16) = v87 + 1;
  v88 = (char *)(v57 + 16 * v87);
  *((_QWORD *)v88 + 4) = v25;
  *((_QWORD *)v88 + 5) = &off_1000A6AD8;
  swift_endAccess(v115);
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "addSubview:", v25);
  v89 = (void **)(v110 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
  swift_beginAccess(v110 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView, &v117, 1, 0);
  v90 = *v89;
  *v89 = v25;

  v91 = *(void **)(v34 + *((int *)v108 + 9));
  if (!v91)
  {

    v70 = v34;
    goto LABEL_42;
  }
  sub_10001B808((uint64_t)&v118, (uint64_t)v115);
  v92 = (uint64_t)v33;
  if (sub_10001B850((uint64_t)v115) == 1)
  {
    v93 = 0;
    v94 = 0;
  }
  else
  {
    v93 = v115[20];
    v94 = v116;
    swift_bridgeObjectRetain(v116);
  }
  v95 = swift_allocObject(v29, 40, 7);
  *(_OWORD *)(v95 + 16) = xmmword_1000893B0;
  *(_QWORD *)(v95 + 32) = v91;
  v114[0] = v95;
  v96 = v91;
  specialized Array._endMutation()(v96);
  v97 = v114[0];
  v98 = objc_allocWithZone((Class)type metadata accessor for HeadphoneImageBatteryView());
  v99 = sub_10001BB64((uint64_t)&_swiftEmptyArrayStorage, v97, v107 & 0xFF01, a5, v93, v94);
  sub_10001CCF0();
  swift_beginAccess(v15, v114, 33, 0);
  v100 = *(char **)v15;
  v49 = v99;
  v101 = swift_isUniquelyReferenced_nonNull_native(v100);
  *(_QWORD *)v15 = v100;
  if ((v101 & 1) == 0)
  {
    v100 = sub_100081F78(0, *((_QWORD *)v100 + 2) + 1, 1, v100);
    *(_QWORD *)v15 = v100;
  }
  v103 = *((_QWORD *)v100 + 2);
  v102 = *((_QWORD *)v100 + 3);
  if (v103 >= v102 >> 1)
  {
    v100 = sub_100081F78((char *)(v102 > 1), v103 + 1, 1, v100);
    *(_QWORD *)v15 = v100;
  }
  *((_QWORD *)v100 + 2) = v103 + 1;
  v104 = &v100[16 * v103];
  *((_QWORD *)v104 + 4) = v49;
  *((_QWORD *)v104 + 5) = &off_1000A6AD8;
  swift_endAccess(v114);
  objc_msgSend(v49, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v111, "addSubview:", v49);

  sub_10000EC60(v112, type metadata accessor for HeadphoneAssets);
  sub_10000EC60(v92, type metadata accessor for HeadphoneViewModel);
  v55 = (void **)(v110 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView);
  v56 = v114;
LABEL_50:
  swift_beginAccess(v55, v56, 1, 0);
  v105 = *v55;
  *v55 = v49;

}

void sub_100052274(int a1, char *a2, double a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (**v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  unsigned int (**v44)(char *, uint64_t, uint64_t);
  void *v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t inited;
  uint64_t v51;
  __int16 v52;
  char *v53;
  int v54;
  void *v55;
  double v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void **v61;
  void *v62;
  _BYTE v63[12];
  int v64;
  uint64_t v65;
  _BYTE *v66;
  char *v67;
  _BYTE *v68;
  unsigned int (**v69)(char *, uint64_t, uint64_t);
  _BYTE v70[24];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[27];
  char v75[32];

  v67 = a2;
  v64 = a1;
  v5 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v5, v6);
  v8 = &v63[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for HeadphoneAssets(0);
  v69 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v9 - 8);
  v11 = __chkstk_darwin(v9, v10);
  v66 = &v63[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11, v13);
  v68 = &v63[-v14];
  v15 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v15, v16);
  v18 = &v63[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = (int *)type metadata accessor for HeadphoneViewModel(0);
  v20 = *((_QWORD *)v19 - 1);
  __chkstk_darwin(v19, v21);
  v23 = (unsigned int (**)(char *, uint64_t, uint64_t))&v63[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v65 = v3;
  v24 = v3 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess(v3 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel, v75, 0, 0);
  sub_10001B868(v24, (uint64_t)v18, &qword_1000B8C40);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, int *))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_100017E48((uint64_t)v18, &qword_1000B8C40);
    return;
  }
  sub_10003D1CC((uint64_t)v18, (uint64_t)v23, type metadata accessor for HeadphoneViewModel);
  sub_10001B868((uint64_t)v23 + v19[11], (uint64_t)v8, &qword_1000B7F18);
  if (v69[6](v8, 1, v9) == 1)
  {
    sub_10000EC60((uint64_t)v23, type metadata accessor for HeadphoneViewModel);
    sub_100017E48((uint64_t)v8, &qword_1000B7F18);
    return;
  }
  v25 = v68;
  sub_10003D1CC((uint64_t)v8, (uint64_t)v68, type metadata accessor for HeadphoneAssets);
  v26 = *(_QWORD *)&v25[*(int *)(v9 + 32)];
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v24 = *(_QWORD *)&v25[*(int *)(v9 + 32)];
    else
      v24 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v25[*(int *)(v9 + 32)]);
    v41 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v26);
    if (v41 < 2)
      goto LABEL_7;
  }
  else if (*(uint64_t *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10) < 2)
  {
LABEL_7:
    if (qword_1000B7B90 != -1)
      swift_once(&qword_1000B7B90, sub_10004E844);
    v27 = type metadata accessor for Logger(0);
    sub_1000093F8(v27, (uint64_t)qword_1000B9520);
    v28 = v66;
    v29 = sub_10003CC88((uint64_t)v25, (uint64_t)v66, type metadata accessor for HeadphoneAssets);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc(12, -1);
      v69 = v23;
      v33 = (uint8_t *)v32;
      v34 = swift_slowAlloc(32, -1);
      v35 = (uint64_t)v28;
      *(_DWORD *)v33 = 136315138;
      v74[0] = v34;
      v67 = (char *)(v33 + 4);
      v72 = *(_QWORD *)&v28[*(int *)(v9 + 32)];
      swift_bridgeObjectRetain(v72);
      v36 = sub_100009F00(&qword_1000B8160);
      v37 = String.init<A>(reflecting:)(&v72, v36);
      v39 = v38;
      v72 = sub_10004B4F0(v37, v38, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);
      swift_bridgeObjectRelease(v39);
      sub_10000EC60(v35, type metadata accessor for HeadphoneAssets);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Expected 2 images, only have: %s", v33, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);

      sub_10000EC60((uint64_t)v25, type metadata accessor for HeadphoneAssets);
      v40 = (uint64_t)v69;
    }
    else
    {

      sub_10000EC60((uint64_t)v28, type metadata accessor for HeadphoneAssets);
      sub_10000EC60((uint64_t)v25, type metadata accessor for HeadphoneAssets);
      v40 = (uint64_t)v23;
    }
    sub_10000EC60(v40, type metadata accessor for HeadphoneViewModel);
    return;
  }
  if ((v26 & 0xC000000000000001) != 0)
  {
    v43 = v19;
    v44 = v23;
    swift_bridgeObjectRetain(v26);
    v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v26);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRetain(v26);
    v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v26);
    swift_bridgeObjectRelease(v26);
LABEL_21:
    v49 = sub_100009F00((uint64_t *)&unk_1000B8730);
    inited = swift_initStackObject(v49, &v71);
    *(_OWORD *)(inited + 16) = xmmword_100087F40;
    *(_QWORD *)(inited + 32) = v47;
    *(_QWORD *)(inited + 40) = v48;
    v74[0] = inited;
    specialized Array._endMutation()(inited);
    v51 = v74[0];
    v52 = v64 & 0xFF01;
    v23 = (unsigned int (**)(char *, uint64_t, uint64_t))v47;
    v19 = (int *)v48;
    v53 = (char *)sub_10001D198(v51, v52, 0, 0, a3);
    sub_10001CCF0();
    v24 = (uint64_t)v44;
    sub_10001B808((uint64_t)v44 + v43[14], (uint64_t)&v72);
    sub_10001B808((uint64_t)&v72, (uint64_t)v74);
    v54 = sub_10001B850((uint64_t)v74);
    v55 = *(void **)&v53[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView];
    if (v55)
    {
      v56 = *(double *)&v74[22];
      if (v54 == 1)
        v56 = 0.0;
      objc_msgSend(v55, "setSpacing:", v56);
    }
    v8 = &v67[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
    swift_beginAccess(&v67[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews], v70, 33, 0);
    v9 = *(_QWORD *)v8;
    v26 = v53;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    *(_QWORD *)v8 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_26;
    goto LABEL_32;
  }
  v42 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v42)
  {
    if (v42 != 1)
    {
      v43 = v19;
      v44 = v23;
      v45 = *(void **)(v26 + 32);
      v46 = *(void **)(v26 + 40);
      v47 = v45;
      v48 = v46;
      goto LABEL_21;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_32:
  v9 = (uint64_t)sub_100081F78(0, *(_QWORD *)(v9 + 16) + 1, 1, (char *)v9);
  *(_QWORD *)v8 = v9;
LABEL_26:
  v59 = *(_QWORD *)(v9 + 16);
  v58 = *(_QWORD *)(v9 + 24);
  if (v59 >= v58 >> 1)
  {
    v9 = (uint64_t)sub_100081F78((char *)(v58 > 1), v59 + 1, 1, (char *)v9);
    *(_QWORD *)v8 = v9;
  }
  *(_QWORD *)(v9 + 16) = v59 + 1;
  v60 = v9 + 16 * v59;
  *(_QWORD *)(v60 + 32) = v26;
  *(_QWORD *)(v60 + 40) = &off_1000A6AD8;
  swift_endAccess(v70);
  objc_msgSend((id)v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v67, "addSubview:", v26);

  sub_10000EC60((uint64_t)v25, type metadata accessor for HeadphoneAssets);
  sub_10000EC60(v24, type metadata accessor for HeadphoneViewModel);
  v61 = (void **)(v65 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
  swift_beginAccess(v65 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView, v70, 1, 0);
  v62 = *v61;
  *v61 = (void *)v26;

}

void sub_100052988(int a1, int a2, int a3, char *a4, double a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char **v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t inited;
  uint64_t v51;
  char *v52;
  char **v53;
  id v54;
  void *v55;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int16 v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  id v67;
  char v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  void **v73;
  void *v74;
  id v75;
  void **v76;
  void *v77;
  id *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int16 v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id v91;
  char *v92;
  char **v93;
  char *v94;
  char *v95;
  char v96;
  unint64_t v97;
  unint64_t v98;
  char *v99;
  void **v100;
  void *v101;
  uint64_t v102;
  id v103;
  char **v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int (*v107)(uint64_t, uint64_t, uint64_t);
  char **v108;
  uint64_t v109;
  char *v110;
  int v111;
  char *v112;
  __int128 v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117[27];
  uint64_t v118;
  char v119[24];
  char v120[40];
  char v121[40];
  char v122[32];

  v8 = v7;
  v114 = a4;
  v111 = a3;
  LODWORD(v112) = a2;
  LODWORD(v113) = a1;
  v12 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v12, v13);
  v15 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for HeadphoneAssets(0);
  v17 = *(_QWORD *)(v16 - 8);
  v19 = __chkstk_darwin(v16, v18);
  v21 = (char **)((char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19, v22);
  v24 = (char *)&v103 - v23;
  v25 = v8 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess(v8 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel, v122, 0, 0);
  v26 = type metadata accessor for HeadphoneViewModel(0);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
  if (v27(v25, 1, v26))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_4:
    sub_100017E48((uint64_t)v15, &qword_1000B7F18);
    return;
  }
  v107 = v27;
  v108 = v21;
  v109 = v8;
  v110 = v24;
  sub_10001B868(v25 + *(int *)(v26 + 44), (uint64_t)v15, &qword_1000B7F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    goto LABEL_4;
  v28 = v16;
  v29 = (uint64_t)v15;
  v30 = (uint64_t)v110;
  sub_10003D1CC(v29, (uint64_t)v110, type metadata accessor for HeadphoneAssets);
  v32 = *(int *)(v16 + 32);
  v33 = *(_QWORD *)(v30 + v32);
  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0)
      v102 = v33;
    else
      v102 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v34 = _CocoaArrayWrapper.endIndex.getter(v102);
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v35 = v114;
  v36 = v113;
  if (v34 < 3)
  {
    v37 = (uint64_t)v110;
    if (qword_1000B7B90 != -1)
      swift_once(&qword_1000B7B90, sub_10004E844);
    v38 = type metadata accessor for Logger(0);
    sub_1000093F8(v38, (uint64_t)qword_1000B9520);
    v39 = v108;
    v40 = sub_10003CC88(v37, (uint64_t)v108, type metadata accessor for HeadphoneAssets);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      *(_DWORD *)v43 = 136315138;
      v117[0] = v44;
      v115 = *(uint64_t *)((char *)v39 + *(int *)(v28 + 32));
      swift_bridgeObjectRetain(v115);
      v45 = sub_100009F00(&qword_1000B8160);
      v46 = String.init<A>(reflecting:)(&v115, v45);
      v48 = v47;
      v115 = sub_10004B4F0(v46, v47, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116);
      swift_bridgeObjectRelease(v48);
      sub_10000EC60((uint64_t)v39, type metadata accessor for HeadphoneAssets);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Expected 3 images, only have: %s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);

    }
    else
    {

      sub_10000EC60((uint64_t)v39, type metadata accessor for HeadphoneAssets);
    }
    sub_10000EC60(v37, type metadata accessor for HeadphoneAssets);
    return;
  }
  v105 = v25;
  v106 = v26;
  if ((v33 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v33);
    v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33);
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    if (!*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_49;
    }
    v49 = *(id *)(v33 + 32);
  }
  v25 = sub_100009F00((uint64_t *)&unk_1000B8730);
  inited = swift_initStackObject(v25, v121);
  v113 = xmmword_1000893B0;
  *(_OWORD *)(inited + 16) = xmmword_1000893B0;
  *(_QWORD *)(inited + 32) = v49;
  v117[0] = inited;
  specialized Array._endMutation()(inited);
  v51 = v117[0];
  v52 = (char *)(v36 & 0xFFFFFF01);
  v53 = (char **)v49;
  v33 = sub_10001D198(v51, v36 & 0xFF01, 0, 0, a5);
  v31 = *(_QWORD *)(v33 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  v108 = v53;
  if ((v31 & 0xC000000000000001) != 0)
  {
LABEL_49:
    v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v31);
LABEL_19:
    v55 = v54;
    objc_msgSend(v54, "setTintColor:", 0);

    sub_10001CCF0();
    v53 = (char **)&v35[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
    swift_beginAccess(&v35[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews], v117, 33, 0);
    v52 = *v53;
    v36 = (unint64_t)(id)v33;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v52);
    *v53 = v52;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_20;
    goto LABEL_51;
  }
  if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v54 = *(id *)(v31 + 32);
    goto LABEL_19;
  }
  __break(1u);
LABEL_51:
  v52 = sub_100081F78(0, *((_QWORD *)v52 + 2) + 1, 1, v52);
  *v53 = v52;
LABEL_20:
  v58 = *((_QWORD *)v52 + 2);
  v57 = *((_QWORD *)v52 + 3);
  if (v58 >= v57 >> 1)
  {
    v52 = sub_100081F78((char *)(v57 > 1), v58 + 1, 1, v52);
    *v53 = v52;
  }
  *((_QWORD *)v52 + 2) = v58 + 1;
  v59 = &v52[16 * v58];
  *((_QWORD *)v59 + 4) = v36;
  *((_QWORD *)v59 + 5) = &off_1000A6AD8;
  swift_endAccess(v117);
  objc_msgSend((id)v36, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v35, "addSubview:", v36);
  v61 = *(_QWORD *)&v110[v32];
  if ((v61 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v110[v32]);
    v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v61);
    swift_bridgeObjectRelease(v61);
    v62 = (__int16)v112;
  }
  else
  {
    v62 = (__int16)v112;
    if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      goto LABEL_54;
    }
    v63 = *(id *)(v61 + 40);
  }
  v64 = swift_initStackObject(v25, v120);
  *(_OWORD *)(v64 + 16) = v113;
  *(_QWORD *)(v64 + 32) = v63;
  v117[0] = v64;
  specialized Array._endMutation()(v64);
  v65 = v117[0];
  v66 = (char *)v63;
  v61 = sub_10001D198(v65, v62 & 0xFF01, 0, 0, a6);
  v60 = *(_QWORD *)(v61 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  v112 = v66;
  if ((v60 & 0xC000000000000001) != 0)
  {
LABEL_54:
    v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v60);
    goto LABEL_28;
  }
  if (!*(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_56;
  }
  v67 = *(id *)(v60 + 32);
LABEL_28:
  objc_msgSend(v67, "setTintColor:", 0);

  sub_10001CCF0();
  swift_beginAccess(v53, v117, 33, 0);
  v66 = *v53;
  v61 = (uint64_t)(id)v61;
  v68 = swift_isUniquelyReferenced_nonNull_native(v66);
  *v53 = v66;
  v104 = v53;
  if ((v68 & 1) == 0)
  {
LABEL_56:
    v66 = sub_100081F78(0, *((_QWORD *)v66 + 2) + 1, 1, v66);
    *v53 = v66;
  }
  v70 = *((_QWORD *)v66 + 2);
  v69 = *((_QWORD *)v66 + 3);
  if (v70 >= v69 >> 1)
  {
    v66 = sub_100081F78((char *)(v69 > 1), v70 + 1, 1, v66);
    *v104 = v66;
  }
  *((_QWORD *)v66 + 2) = v70 + 1;
  v71 = &v66[16 * v70];
  *((_QWORD *)v71 + 4) = v61;
  *((_QWORD *)v71 + 5) = &off_1000A6AD8;
  swift_endAccess(v117);
  objc_msgSend((id)v61, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v35, "addSubview:", v61);
  v72 = v109;
  v73 = (void **)(v109 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
  swift_beginAccess(v109 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView, v119, 1, 0);
  v74 = *v73;
  *v73 = (void *)v36;
  v75 = (id)v36;

  v76 = (void **)(v72 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView);
  swift_beginAccess(v72 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView, &v118, 1, 0);
  v77 = *v76;
  *v76 = (void *)v61;
  v78 = (id *)(id)v61;

  v79 = (uint64_t)v110;
  v80 = *(void **)&v110[*(int *)(v28 + 36)];
  if (v80)
  {
    v103 = v75;
    v81 = v105;
    v82 = v106;
    if (v107(v105, 1, v106)
      || (v83 = v81 + *(int *)(v82 + 56),
          sub_10001B808(v83, (uint64_t)&v115),
          sub_10001B808((uint64_t)&v115, (uint64_t)v117),
          sub_10001B850((uint64_t)v117) == 1))
    {
      v84 = 0;
      v85 = 0;
    }
    else
    {
      v84 = *(_QWORD *)(v83 + 160);
      v85 = *(_QWORD *)(v83 + 168);
      swift_bridgeObjectRetain(v85);
    }
    v86 = v109;
    v87 = v111;
    v88 = swift_allocObject(v25, 40, 7);
    *(_OWORD *)(v88 + 16) = v113;
    *(_QWORD *)(v88 + 32) = v80;
    v117[0] = v88;
    v89 = v80;
    specialized Array._endMutation()(v89);
    v90 = v117[0];
    v91 = objc_allocWithZone((Class)type metadata accessor for HeadphoneImageBatteryView());
    v92 = sub_10001BB64((uint64_t)&_swiftEmptyArrayStorage, v90, v87 & 0xFF01, a7, v84, v85);
    sub_10001CCF0();
    v93 = v104;
    swift_beginAccess(v104, v117, 33, 0);
    v94 = *v93;
    v95 = v92;
    v96 = swift_isUniquelyReferenced_nonNull_native(v94);
    *v93 = v94;
    if ((v96 & 1) == 0)
    {
      v94 = sub_100081F78(0, *((_QWORD *)v94 + 2) + 1, 1, v94);
      *v104 = v94;
    }
    v98 = *((_QWORD *)v94 + 2);
    v97 = *((_QWORD *)v94 + 3);
    if (v98 >= v97 >> 1)
    {
      v94 = sub_100081F78((char *)(v97 > 1), v98 + 1, 1, v94);
      *v104 = v94;
    }
    *((_QWORD *)v94 + 2) = v98 + 1;
    v99 = &v94[16 * v98];
    *((_QWORD *)v99 + 4) = v95;
    *((_QWORD *)v99 + 5) = &off_1000A6AD8;
    swift_endAccess(v117);
    objc_msgSend(v95, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v114, "addSubview:", v95);

    sub_10000EC60(v79, type metadata accessor for HeadphoneAssets);
    v100 = (void **)(v86 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView);
    swift_beginAccess(v100, v117, 1, 0);
    v101 = *v100;
    *v100 = v95;

  }
  else
  {
    sub_10000EC60((uint64_t)v110, type metadata accessor for HeadphoneAssets);

  }
}

void sub_100053410(int a1, char **a2, char *a3, double a4, double a5)
{
  char **v5;
  char **v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  id v45;
  uint64_t v46;
  uint64_t inited;
  uint64_t v48;
  id v49;
  id v50;
  char *v51;
  id v52;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  id v63;
  char v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  void **v68;
  void *v69;
  void **v70;
  void *v71;
  uint64_t v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char v80[40];
  uint64_t v81[3];
  char v82[40];
  char v83[32];

  v6 = v5;
  v77 = a3;
  v11 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v11, v12);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for HeadphoneAssets(0);
  v16 = *(_QWORD *)(v15 - 8);
  v18 = __chkstk_darwin(v15, v17);
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  v23 = (char *)&v72 - v22;
  v24 = (char *)v6 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess((char *)v6 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel, v83, 0, 0);
  v25 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_4:
    sub_100017E48((uint64_t)v14, &qword_1000B7F18);
    return;
  }
  *(_QWORD *)&v74 = v20;
  LODWORD(v75) = a1;
  v76 = v23;
  sub_10001B868((uint64_t)&v24[*(int *)(v25 + 44)], (uint64_t)v14, &qword_1000B7F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    goto LABEL_4;
  v26 = v76;
  sub_10003D1CC((uint64_t)v14, (uint64_t)v76, type metadata accessor for HeadphoneAssets);
  v28 = (uint64_t *)*(int *)(v15 + 32);
  v29 = *(uint64_t *)((char *)v28 + (_QWORD)v26);
  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0)
      v42 = *(uint64_t *)((char *)v28 + (_QWORD)v26);
    else
      v42 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(uint64_t *)((char *)v28 + (_QWORD)v26));
    v43 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_bridgeObjectRelease(v29);
    if (v43 < 2)
    {
LABEL_7:
      if (qword_1000B7B90 != -1)
        swift_once(&qword_1000B7B90, sub_10004E844);
      v30 = type metadata accessor for Logger(0);
      sub_1000093F8(v30, (uint64_t)qword_1000B9520);
      v31 = v74;
      v32 = sub_10003CC88((uint64_t)v26, v74, type metadata accessor for HeadphoneAssets);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc(12, -1);
        v36 = (uint64_t)v26;
        v37 = swift_slowAlloc(32, -1);
        *(_DWORD *)v35 = 136315138;
        v81[0] = v37;
        v78 = *(_QWORD *)(v31 + *(int *)(v15 + 32));
        swift_bridgeObjectRetain(v78);
        v38 = sub_100009F00(&qword_1000B8160);
        v39 = String.init<A>(reflecting:)(&v78, v38);
        v41 = v40;
        v78 = sub_10004B4F0(v39, v40, v81);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79);
        swift_bridgeObjectRelease(v41);
        sub_10000EC60(v31, type metadata accessor for HeadphoneAssets);
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Expected 2 images, only have: %s", v35, 0xCu);
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1, -1);
        swift_slowDealloc(v35, -1, -1);

        sub_10000EC60(v36, type metadata accessor for HeadphoneAssets);
      }
      else
      {

        sub_10000EC60(v31, type metadata accessor for HeadphoneAssets);
        sub_10000EC60((uint64_t)v26, type metadata accessor for HeadphoneAssets);
      }
      return;
    }
  }
  else if (*(uint64_t *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10) < 2)
  {
    goto LABEL_7;
  }
  if ((v29 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(v29);
    v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v29);
    swift_bridgeObjectRelease(v29);
    v44 = v75;
  }
  else
  {
    v44 = v75;
    if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_37;
    }
    v45 = *(id *)(v29 + 32);
  }
  v46 = sub_100009F00((uint64_t *)&unk_1000B8730);
  inited = swift_initStackObject(v46, v82);
  v74 = xmmword_1000893B0;
  *(_OWORD *)(inited + 16) = xmmword_1000893B0;
  *(_QWORD *)(inited + 32) = v45;
  v81[0] = inited;
  specialized Array._endMutation()(inited);
  v48 = v81[0];
  v49 = (id)(v44 & 0xFFFFFF01);
  v50 = v45;
  v29 = sub_10001D198(v48, v44 & 0xFF01, 0, 0, a4);
  v27 = *(_QWORD *)(v29 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  v73 = v50;
  v75 = v46;
  if ((v27 & 0xC000000000000001) != 0)
  {
LABEL_37:
    v46 = (uint64_t)v28;
    v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
    v51 = v77;
LABEL_22:
    objc_msgSend(v52, "setTintColor:", 0);

    sub_10001CCF0();
    v28 = (uint64_t *)&v51[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
    swift_beginAccess(&v51[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews], v81, 33, 0);
    v25 = *v28;
    v49 = (id)v29;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v25);
    *v28 = v25;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_23;
    goto LABEL_39;
  }
  v51 = v77;
  if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v46 = (uint64_t)v28;
    v52 = *(id *)(v27 + 32);
    goto LABEL_22;
  }
  __break(1u);
LABEL_39:
  v25 = (uint64_t)sub_100081F78(0, *(_QWORD *)(v25 + 16) + 1, 1, (char *)v25);
  *v28 = v25;
LABEL_23:
  v55 = *(_QWORD *)(v25 + 16);
  v54 = *(_QWORD *)(v25 + 24);
  if (v55 >= v54 >> 1)
  {
    v25 = (uint64_t)sub_100081F78((char *)(v54 > 1), v55 + 1, 1, (char *)v25);
    *v28 = v25;
  }
  *(_QWORD *)(v25 + 16) = v55 + 1;
  v56 = v25 + 16 * v55;
  *(_QWORD *)(v56 + 32) = v49;
  *(_QWORD *)(v56 + 40) = &off_1000A6AD8;
  swift_endAccess(v81);
  objc_msgSend(v49, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v77, "addSubview:", v49);

  v58 = *(_QWORD *)&v26[v46];
  if ((v58 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v26[v46]);
    v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v58);
    swift_bridgeObjectRelease(v58);
  }
  else
  {
    if (*(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      goto LABEL_42;
    }
    v59 = *(id *)(v58 + 40);
  }
  v60 = swift_initStackObject(v75, v80);
  *(_OWORD *)(v60 + 16) = v74;
  *(_QWORD *)(v60 + 32) = v59;
  v81[0] = v60;
  specialized Array._endMutation()(v60);
  v61 = v81[0];
  v62 = (char *)(a2 & 0xFFFFFF01);
  v26 = (char *)v59;
  v58 = sub_10001D198(v61, (unsigned __int16)a2 & 0xFF01, 0, 0, a5);
  v57 = *(_QWORD *)(v58 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  if ((v57 & 0xC000000000000001) != 0)
  {
LABEL_42:
    v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v57);
    a2 = v6;
    goto LABEL_31;
  }
  if (!*(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  a2 = v6;
  v63 = *(id *)(v57 + 32);
LABEL_31:
  objc_msgSend(v63, "setTintColor:", 0);

  sub_10001CCF0();
  swift_beginAccess(v28, v81, 33, 0);
  v62 = (char *)*v28;
  v58 = (uint64_t)(id)v58;
  v64 = swift_isUniquelyReferenced_nonNull_native(v62);
  *v28 = (uint64_t)v62;
  v6 = &selRef_configureWithContext_completion_;
  if ((v64 & 1) == 0)
  {
LABEL_44:
    v62 = sub_100081F78(0, *((_QWORD *)v62 + 2) + 1, 1, v62);
    *v28 = (uint64_t)v62;
  }
  v66 = *((_QWORD *)v62 + 2);
  v65 = *((_QWORD *)v62 + 3);
  if (v66 >= v65 >> 1)
  {
    v62 = sub_100081F78((char *)(v65 > 1), v66 + 1, 1, v62);
    *v28 = (uint64_t)v62;
  }
  *((_QWORD *)v62 + 2) = v66 + 1;
  v67 = &v62[16 * v66];
  *((_QWORD *)v67 + 4) = v58;
  *((_QWORD *)v67 + 5) = &off_1000A6AD8;
  swift_endAccess(v81);
  objc_msgSend((id)v58, v6[53], 0);
  objc_msgSend(v77, "addSubview:", v58);

  sub_10000EC60((uint64_t)v76, type metadata accessor for HeadphoneAssets);
  v68 = (void **)((char *)a2 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
  swift_beginAccess((char *)a2 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView, v81, 1, 0);
  v69 = *v68;
  *v68 = v49;

  v70 = (void **)((char *)a2 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView);
  swift_beginAccess((char *)a2 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView, &v78, 1, 0);
  v71 = *v70;
  *v70 = (void *)v58;

}

void sub_100053C84(__int16 a1, char *a2, double a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  char *v25;
  void *v26;
  char *v27;
  id v28;
  void *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  void **v34;
  _BYTE *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  void *v55;
  void *v56;
  char *v57;
  char **v58;
  char *v59;
  char v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  _BYTE v69[24];
  uint64_t v70;
  _QWORD v71[27];
  _OWORD v72[13];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD v76[13];
  uint64_t v77;

  v68 = a2;
  v6 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for HeadphoneAssets(0);
  v11 = *((_QWORD *)v10 - 1);
  __chkstk_darwin(v10, v12);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel], &v75, 0, 0);
  v16 = type metadata accessor for HeadphoneViewModel(0);
  v17 = *(char **)(*(_QWORD *)(v16 - 8) + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v17)(v15, 1, v16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v11 + 56))(v9, 1, 1, v10);
LABEL_4:
    sub_100017E48((uint64_t)v9, &qword_1000B7F18);
    return;
  }
  v66 = v3;
  v67 = v14;
  v18 = v68;
  sub_10001B868((uint64_t)&v15[*(int *)(v16 + 44)], (uint64_t)v9, &qword_1000B7F18);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10) == 1)
    goto LABEL_4;
  v19 = v67;
  sub_10003D1CC((uint64_t)v9, (uint64_t)v67, type metadata accessor for HeadphoneAssets);
  v20 = *(_QWORD *)&v19[v10[8]];
  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v37 = *(_QWORD *)&v19[v10[8]];
    else
      v37 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v19[v10[8]]);
    v38 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v20);
    if (v38)
    {
LABEL_7:
      if ((v20 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain(v20);
        v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v20);
        swift_bridgeObjectRelease(v20);
        v17 = v18;
      }
      else
      {
        if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_38;
        }
        v17 = v18;
        v21 = *(id *)(v20 + 32);
      }
      v18 = v66;
      v15 = (char *)objc_msgSend((id)objc_opt_self(UIColor), "systemGray2Color");
      v22 = sub_100009F00((uint64_t *)&unk_1000B8730);
      inited = swift_initStackObject(v22, &v74);
      *(_OWORD *)(inited + 16) = xmmword_1000893B0;
      *(_QWORD *)(inited + 32) = v21;
      *(_QWORD *)&v76[0] = inited;
      specialized Array._endMutation()(inited);
      v24 = *(_QWORD *)&v76[0];
      v10 = (int *)v21;
      v25 = (char *)sub_10001D198(v24, a1 & 0xFF01, 0, 0, a3);
      v19 = v25;
      v16 = *(_QWORD *)&v25[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews];
      if ((v16 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_40;
        }
        v26 = *(void **)(v16 + 32);
        v27 = v25;
        v28 = v26;
LABEL_13:
        v29 = v28;
        objc_msgSend(v28, "setTintColor:", v15);

        v10 = (int *)&v17[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
        swift_beginAccess(&v17[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews], v76, 33, 0);
        v15 = *(char **)v10;
        v19 = v19;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
        *(_QWORD *)v10 = v15;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
LABEL_14:
          v32 = *((_QWORD *)v15 + 2);
          v31 = *((_QWORD *)v15 + 3);
          if (v32 >= v31 >> 1)
          {
            v15 = sub_100081F78((char *)(v31 > 1), v32 + 1, 1, v15);
            *(_QWORD *)v10 = v15;
          }
          *((_QWORD *)v15 + 2) = v32 + 1;
          v33 = &v15[16 * v32];
          *((_QWORD *)v33 + 4) = v19;
          *((_QWORD *)v33 + 5) = &off_1000A6AD8;
          swift_endAccess(v76);
          objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          objc_msgSend(v17, "addSubview:", v19);

          sub_10000EC60((uint64_t)v67, type metadata accessor for HeadphoneAssets);
          v34 = (void **)&v18[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView];
          v35 = v76;
LABEL_17:
          swift_beginAccess(v34, v35, 1, 0);
          v36 = *v34;
          *v34 = v19;

          return;
        }
LABEL_40:
        v15 = sub_100081F78(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
        *(_QWORD *)v10 = v15;
        goto LABEL_14;
      }
LABEL_38:
      v65 = v19;
      v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
      goto LABEL_13;
    }
  }
  else if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_7;
  }
  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v17)(v15, 1, v16))
  {
    sub_10001B808((uint64_t)&v15[*(int *)(v16 + 56)], (uint64_t)v71);
    sub_10001B808((uint64_t)v71, (uint64_t)v72);
    if (sub_10001B850((uint64_t)v72) != 1)
    {
      v76[4] = v72[4];
      v76[5] = v72[5];
      v76[2] = v72[2];
      v76[3] = v72[3];
      v76[8] = v72[8];
      v76[9] = v72[9];
      v76[6] = v72[6];
      v76[7] = v72[7];
      v77 = v73;
      v76[11] = v72[11];
      v76[12] = v72[12];
      v76[10] = v72[10];
      v76[0] = v72[0];
      v76[1] = v72[1];
      v39 = &v19[v10[10]];
      v40 = *(void **)v39;
      if (*(_QWORD *)v39)
      {
        v41 = *((_QWORD *)v39 + 1);
        v42 = sub_100009F00(&qword_1000B95C8);
        v43 = swift_initStackObject(v42, &v70);
        *(_OWORD *)(v43 + 16) = xmmword_100087710;
        *(double *)(v43 + 32) = a3;
        *(_BYTE *)(v43 + 40) = a1 & 1;
        *(_BYTE *)(v43 + 41) = HIBYTE(a1);
        objc_allocWithZone((Class)type metadata accessor for HeadphoneMovieBatteryView());
        v44 = v40;
        sub_10003D268(v71, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D230);
        v45 = (char *)sub_10000A4E4(v44, v41, (double *)v76, (char *)v43);
        v46 = *(void **)&v45[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView];
        v47 = objc_opt_self(SFMediaPlayerView);
        v48 = swift_dynamicCastObjCClass(v46, v47);
        if (v48)
        {
          v49 = (void *)v48;
          v50 = (void *)objc_opt_self(UITraitCollection);
          v51 = v46;
          v52 = objc_msgSend(v50, "currentTraitCollection");
          v53 = objc_msgSend(v52, "userInterfaceStyle");

          if (v53 == (id)2)
            v54 = 1;
          else
            v54 = 2;
          URL._bridgeToObjectiveC()((NSURL *)1);
          v56 = v55;
          objc_msgSend(v49, "updateViewForAssetType:adjustmentsURL:", v54, v55);

        }
        v57 = v18;
        v58 = (char **)&v18[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
        swift_beginAccess(&v18[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews], v69, 33, 0);
        v59 = *v58;
        v19 = v45;
        v60 = swift_isUniquelyReferenced_nonNull_native(v59);
        *v58 = v59;
        if ((v60 & 1) == 0)
        {
          v59 = sub_100081F78(0, *((_QWORD *)v59 + 2) + 1, 1, v59);
          *v58 = v59;
        }
        v61 = v66;
        v63 = *((_QWORD *)v59 + 2);
        v62 = *((_QWORD *)v59 + 3);
        if (v63 >= v62 >> 1)
        {
          v59 = sub_100081F78((char *)(v62 > 1), v63 + 1, 1, v59);
          *v58 = v59;
        }
        *((_QWORD *)v59 + 2) = v63 + 1;
        v64 = &v59[16 * v63];
        *((_QWORD *)v64 + 4) = v19;
        *((_QWORD *)v64 + 5) = &off_1000A60E8;
        swift_endAccess(v69);
        objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        objc_msgSend(v57, "addSubview:", v19);

        sub_10000EC60((uint64_t)v67, type metadata accessor for HeadphoneAssets);
        v34 = (void **)&v61[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView];
        v35 = v69;
        goto LABEL_17;
      }
    }
  }
  sub_10000EC60((uint64_t)v19, type metadata accessor for HeadphoneAssets);
}

uint64_t sub_1000543F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _BYTE v14[32];

  v1 = v0;
  v2 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v2, v3);
  v5 = v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 176;
  v6 = type metadata accessor for HeadphoneViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 176;
  v11 = v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel, v14, 0, 0);
  sub_10001B868(v11, (uint64_t)v5, &qword_1000B8C40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    sub_10003D1CC((uint64_t)v5, (uint64_t)v10, type metadata accessor for HeadphoneViewModel);
    __asm { BR              X11 }
  }
  return sub_100017E48((uint64_t)v5, &qword_1000B8C40);
}

uint64_t sub_100054ADC()
{
  return type metadata accessor for HeadphoneBatteryViewController(0);
}

uint64_t type metadata accessor for HeadphoneBatteryViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B95B8;
  if (!qword_1000B95B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphoneBatteryViewController);
  return result;
}

void sub_100054B20(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = "\b";
  sub_10001B534(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = "\b";
    v4[6] = "\b";
    v4[7] = "\b";
    v4[8] = "\b";
    v4[9] = "\b";
    v4[10] = &unk_100089CF8;
    v4[11] = &unk_100089D10;
    v4[12] = &unk_100089D28;
    swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
}

uint64_t sub_100054BD0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_type);
}

uint64_t sub_100054BE4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100054C08(uint64_t a1)
{
  uint64_t v1;

  sub_10004FD3C(a1, v1);
}

uint64_t sub_100054C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100054C20(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100054C28(uint64_t a1)
{
  uint64_t v1;

  sub_10004FE88(a1, v1);
}

uint64_t sub_100054C30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100054C54()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 16);
  if (result)
    return objc_msgSend(result, "setAlpha:", 0.0);
  return result;
}

uint64_t sub_100054C70()
{
  id *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;

  v1 = (int *)type metadata accessor for HeadphoneViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = (char *)v0 + v4;
  swift_bridgeObjectRelease(*(id *)((char *)v0 + v4 + 8));
  swift_bridgeObjectRelease(*(id *)((char *)v0 + v4 + 24));
  swift_bridgeObjectRelease(*(id *)((char *)v0 + v4 + 40));
  swift_bridgeObjectRelease(*(id *)((char *)v0 + v4 + 56));
  swift_bridgeObjectRelease(*(id *)((char *)v0 + v4 + 72));
  swift_bridgeObjectRelease(*(id *)((char *)v0 + v4 + 88));

  v7 = (char *)v0 + v4 + v1[11];
  v8 = (int *)type metadata accessor for HeadphoneAssets(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
  {
    v22 = v5;
    v9 = type metadata accessor for URL(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(void (**)(char *, uint64_t))(v10 + 8);
    v11(v7, v9);
    v11(&v7[v8[5]], v9);
    v12 = &v7[v8[6]];
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
      v11(v12, v9);
    v13 = &v7[v8[7]];
    v14 = type metadata accessor for HeadphoneAssets.Feature(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      v11(v13, v9);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[*(int *)(v14 + 20)]);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[*(int *)(v14 + 24)]);
    }
    swift_bridgeObjectRelease(*(_QWORD *)&v7[v8[8]]);

    v5 = v22;
    v4 = (v3 + 40) & ~v3;
  }
  v15 = &v6[v1[13]];
  v16 = *((_QWORD *)v15 + 1);
  if (v16)
  {
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(*((_QWORD *)v15 + 3));
  }
  v17 = &v6[v1[14]];
  v18 = *((_QWORD *)v17 + 19);
  if (v18)
  {
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(*((_QWORD *)v17 + 21));
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v6[v1[17]]);
  swift_bridgeObjectRelease(*(_QWORD *)&v6[v1[18]]);
  v19 = &v6[v1[19]];
  v20 = *((_QWORD *)v19 + 1);
  if (v20)
  {
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(*((_QWORD *)v19 + 3));

    swift_bridgeObjectRelease(*((_QWORD *)v19 + 7));
    swift_bridgeObjectRelease(*((_QWORD *)v19 + 9));

    swift_bridgeObjectRelease(*((_QWORD *)v19 + 12));
    swift_bridgeObjectRelease(*((_QWORD *)v19 + 13));
  }

  return swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

void sub_100054EF8(uint64_t a1)
{
  void **v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadphoneViewModel(0) - 8) + 80);
  sub_100051010(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_100054F50()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100054F74()
{
  uint64_t v0;

  sub_1000514B4(v0);
}

uint64_t sub_100054F7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100054FA8()
{
  uint64_t v0;

  sub_100051248(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100054FB0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = (int *)type metadata accessor for HeadphoneViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  swift_release(*(_QWORD *)(v0 + 24));
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 88));

  v7 = v0 + v4 + v1[11];
  v8 = (int *)type metadata accessor for HeadphoneAssets(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
  {
    v22 = v5;
    v9 = type metadata accessor for URL(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v11(v7, v9);
    v11(v7 + v8[5], v9);
    v12 = v7 + v8[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
      v11(v12, v9);
    v13 = v7 + v8[7];
    v14 = type metadata accessor for HeadphoneAssets.Feature(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      v11(v13, v9);
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + *(int *)(v14 + 20)));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + *(int *)(v14 + 24)));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[8]));

    v5 = v22;
    v4 = (v3 + 40) & ~v3;
  }
  v15 = v6 + v1[13];
  v16 = *(_QWORD *)(v15 + 8);
  if (v16)
  {
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + 24));
  }
  v17 = v6 + v1[14];
  v18 = *(_QWORD *)(v17 + 152);
  if (v18)
  {
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + 168));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[17]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[18]));
  v19 = v6 + v1[19];
  v20 = *(_QWORD *)(v19 + 8);
  if (v20)
  {
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 24));

    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 56));
    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 72));

    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 96));
    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 104));
  }

  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_10005522C(int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadphoneViewModel(0) - 8) + 80);
  sub_100051348(a1, *(id *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

id sub_100055270(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  objc_super v13;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer] = 0;
  v6 = OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerLayoutGuide;
  v7 = objc_allocWithZone((Class)UILayoutGuide);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint] = 0;
  v9 = &v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel];
  v10 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)&v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_turnOffOptimizedBatteryChargingButton] = 0;
  v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_isTransitioning] = 0;
  v11 = &v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_presenter];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11, 0);
  v8[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_type] = 2;

  v13.receiver = v8;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, "initWithContentView:", a1);
}

uint64_t sub_1000553F0(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  _QWORD aBlock[5];
  uint64_t v24;
  char v25[24];
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for HeadphoneViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[OBJC_IVAR____TtC20HeadphoneProxService36SoftwareUpdateRequiredViewController_offsetIcon] = 0;
  v26.receiver = v2;
  v26.super_class = ObjectType;
  objc_msgSendSuper2(&v26, "viewDidLoad");
  v13 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_viewModel];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_viewModel], v25, 0, 0);
  sub_100055928(v13, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1000558E8((uint64_t)v7);
  sub_10001B7C4((uint64_t)v7, (uint64_t)v12);
  v15 = *((_QWORD *)v12 + 7);
  v16 = swift_allocObject(&unk_1000A87A8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v2);
  swift_bridgeObjectRetain(v15);
  swift_retain(v16);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  aBlock[4] = sub_100055994;
  v24 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100011720;
  aBlock[3] = &unk_1000A87C0;
  v18 = _Block_copy(aBlock);
  v19 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v17, 1, v18);

  _Block_release(v18);
  v20 = v24;
  swift_release(v16);
  v21 = objc_msgSend(v2, "addAction:", v19, swift_release(v20).n128_f64[0]);

  return sub_100031FEC((uint64_t)v12);
}

void sub_100055634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)&Strong[OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_presenter];
    if (v5)
    {
      swift_unknownObjectRetain(*(_QWORD *)&Strong[OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_presenter]);

      sub_100072870();
      v6 = swift_unknownObjectWeakLoadStrong(v5 + 56);
      if (v6)
      {
        v7 = v6;
        sub_10002F37C();
        swift_unknownObjectRelease(v5);
        v8 = v7;
      }
      else
      {
        v8 = v5;
      }
      swift_unknownObjectRelease(v8);
    }
    else
    {

    }
  }
}

uint64_t sub_1000557B0()
{
  uint64_t v0;

  sub_1000558E8(v0 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_viewModel);
  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_presenter));
}

uint64_t sub_100055814()
{
  return type metadata accessor for HeadphoneUnsupportedViewController(0);
}

uint64_t type metadata accessor for HeadphoneUnsupportedViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9608;
  if (!qword_1000B9608)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphoneUnsupportedViewController);
  return result;
}

void sub_100055858(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10001B534(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100089D98;
    v4[2] = &unk_100089DB0;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 120);
  }
}

uint64_t sub_1000558D8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_type);
}

uint64_t sub_1000558E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100009F00(&qword_1000B8C40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100055928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B8C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100055970()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100055994(uint64_t a1)
{
  uint64_t v1;

  sub_100055634(a1, v1);
}

uint64_t sub_10005599C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000559AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000559B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9618);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9618);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_100055A44(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t ObjCClassFromMetadata;
  id v21;
  Swift::String v22;
  unint64_t v23;
  NSString v24;
  NSString v25;
  id v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t result;
  id v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;

  v2 = sub_100009F00(&qword_1000B7F08);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = __chkstk_darwin(v6, v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  v14 = (char *)&v31 - v13;
  v15 = objc_msgSend(a1, "traitCollection");
  v16 = objc_msgSend(v15, "userInterfaceStyle");

  if (v16 == (id)1)
    v18 = 19788;
  else
    v18 = 19780;
  ObjectType = swift_getObjectType(a1, v17);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjectType);
  v21 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v31 = 0;
  v32 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v32);
  v31 = 0xD000000000000010;
  v32 = 0x800000010008F200;
  v22._countAndFlagsBits = v18;
  v22._object = (void *)0xE200000000000000;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(0xE200000000000000);
  v23 = v32;
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v21, "URLForResource:withExtension:", v24, v25);

  if (v26)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v5, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
    if ((_DWORD)result != 1)
    {
      v27(v14, v5, v6);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v14, v6);
      v29 = objc_allocWithZone((Class)type metadata accessor for ProxMovieLoopPlayer(0));
      v30 = sub_10001F57C((uint64_t)v11, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 130.0, 130.0);
      objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      return (uint64_t)v30;
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  __break(1u);
  return result;
}

id sub_100055D38(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_100055D94()
{
  id v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  Class isa;
  id v16;
  id v17;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v1 = sub_100055D38(&OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___movieLoopView, (uint64_t (*)(uint64_t))sub_100055A44);
  objc_msgSend(v0, "addSubview:", v1);

  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100087F40;
  v5 = sub_100055D38(&OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___movieLoopView, (uint64_t (*)(uint64_t))sub_100055A44);
  v6 = objc_msgSend(v5, "centerXAnchor");

  v7 = objc_msgSend(v0, "centerXAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = sub_100055D38(&OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___movieLoopView, (uint64_t (*)(uint64_t))sub_100055A44);
  v10 = objc_msgSend(v9, "centerYAnchor");

  v11 = objc_msgSend(v0, "centerYAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v4 + 40) = v12;
  specialized Array._endMutation()(v13);
  v14 = v4;
  sub_10000B880();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v2, "activateConstraints:", isa);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = objc_msgSend(v0, "heightAnchor");
  v17 = objc_msgSend(v16, "constraintEqualToConstant:", 180.0);

  objc_msgSend(v17, "setActive:", 1);
  return v0;
}

void sub_100055FFC(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  _BYTE v41[24];
  _BYTE v42[24];
  _QWORD v43[3];
  uint64_t v44;
  objc_super v45;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v4 = type metadata accessor for HeadphoneModel(0);
  v6 = __chkstk_darwin(v4, v5);
  v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6, v9);
  v11 = &v41[-v10 - 8];
  v45.receiver = v2;
  v45.super_class = ObjectType;
  objc_msgSendSuper2(&v45, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_presenter]);
  if (Strong)
  {
    v13 = Strong;
    v14 = Strong + 16;
    swift_beginAccess(Strong + 16, v42, 0, 0);
    sub_100013528(v14, (uint64_t)v43);
    swift_unknownObjectRelease(v13);
    v15 = v44;
    if (v44)
    {
      v16 = sub_100013410(v43, v44);
      v17 = *(_QWORD *)(v15 - 8);
      __chkstk_darwin(v16, v16);
      v19 = &v41[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(_QWORD *))(v17 + 16))(v19);
      sub_100013570((uint64_t)v43);
      v20 = *v19 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v20, v41, 0, 0);
      sub_1000135B0(v20, (uint64_t)v8);
      (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v15);
      sub_1000135F4((uint64_t)v8, (uint64_t)v11);
      v21 = objc_msgSend(v2, "contentView");
      v22 = sub_100055D38(&OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___topAsset, (uint64_t (*)(uint64_t))sub_100055D94);
      objc_msgSend(v21, "addSubview:", v22);

      v23 = sub_100055D38(&OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___topAsset, (uint64_t (*)(uint64_t))sub_100055D94);
      v24 = objc_msgSend(v2, "contentView");
      v25 = objc_msgSend(v24, "mainContentGuide");

      objc_msgSend(v23, "pinToOtherWithLayoutGuide:", v25);
      v26 = *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_headphoneProxFeatureManager];
      v28 = *((_QWORD *)v11 + 16);
      v27 = *((_QWORD *)v11 + 17);
      v29 = sub_100009F00(&qword_1000B9680);
      v30 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature(0);
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned __int8 *)(v31 + 80);
      v33 = (v32 + 32) & ~v32;
      v34 = swift_allocObject(v29, v33 + *(_QWORD *)(v31 + 72), v32 | 7);
      *(_OWORD *)(v34 + 16) = xmmword_100087710;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104))(v34 + v33, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.headGestures(_:), v30);
      swift_bridgeObjectRetain(v27);
      swift_retain(v26);
      dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)(v28, v27, v34);
      swift_release(v26);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease(v34);
      sub_100013638((uint64_t)v11);
      return;
    }
    sub_100013570((uint64_t)v43);
  }
  if (qword_1000B7BA0 != -1)
    swift_once(&qword_1000B7BA0, sub_1000559B4);
  v35 = type metadata accessor for Logger(0);
  v36 = sub_1000093F8(v35, (uint64_t)qword_1000B9618);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Head Gestures: Headphone Model is nil, exiting", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }

}

void sub_100056574(uint64_t a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void **v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  void *v22;
  void (*v23)(uint64_t);
  uint64_t v24;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v4);

  v5 = *(_QWORD *)(a1 + 40);
  v6 = swift_allocObject(&unk_1000A8840, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v23 = sub_100056974;
  v24 = v6;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A8858;
  v8 = _Block_copy(&v19);
  v9 = (void *)objc_opt_self(PRXAction);
  v10 = objc_msgSend(v9, "actionWithTitle:style:handler:", v7, 0, v8);

  _Block_release(v8);
  v11 = v24;
  swift_release(v6);

  v12 = *(_QWORD *)(a1 + 56);
  v13 = swift_allocObject(&unk_1000A8840, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v23 = sub_1000569AC;
  v24 = v13;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A8880;
  v15 = _Block_copy(&v19);
  v16 = objc_msgSend(v9, "actionWithTitle:style:handler:", v14, 1, v15);

  _Block_release(v15);
  v17 = v24;
  swift_release(v13);
  v18 = objc_msgSend(v1, "addAction:", v16, swift_release(v17).n128_f64[0]);

}

void sub_100056804(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_presenter);

    if (v7)
    {
      a3();
      swift_unknownObjectRelease(v7);
    }
  }
}

uint64_t type metadata accessor for HeadphoneHeadGesturesUpsellViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController);
}

uint64_t sub_100056940()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_type);
}

uint64_t sub_100056950()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100056974(uint64_t a1)
{
  uint64_t v1;

  sub_100056804(a1, v1, (void (*)(void))sub_1000743F4);
}

uint64_t sub_100056994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000569A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000569AC(uint64_t a1)
{
  uint64_t v1;

  sub_100056804(a1, v1, (void (*)(void))sub_1000745D8);
}

id sub_1000569CC(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_headphoneProxFeatureManager;
  type metadata accessor for HeadphoneProxFeatureManager(0);
  v6 = v2;
  *(_QWORD *)&v2[v5] = static HeadphoneProxFeatureManager.shared.getter();
  *(_QWORD *)&v6[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___movieLoopView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___topAsset] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v6[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_type] = 13;

  v8.receiver = v6;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, "initWithContentView:", a1);
}

uint64_t sub_100056A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9688);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9688);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL sub_100056B28()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  int AppBooleanValue;
  _BOOL8 result;

  v1 = OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___forceShowWhatsNew;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___forceShowWhatsNew);
  if (v2 != 2)
    return v2 & 1;
  v3 = (__CFString *)String._bridgeToObjectiveC()();
  CFPreferencesAppSynchronize(v3);

  v4 = (__CFString *)String._bridgeToObjectiveC()();
  v5 = (__CFString *)String._bridgeToObjectiveC()();
  AppBooleanValue = CFPreferencesGetAppBooleanValue(v4, v5, 0);

  result = AppBooleanValue != 0;
  *(_BYTE *)(v0 + v1) = result;
  return result;
}

_QWORD *sub_100056BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE v6[8];

  v1 = OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___featureMap;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___featureMap);
  if (v2)
  {
    v3 = *(_QWORD **)(v0
                    + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___featureMap);
  }
  else
  {
    swift_unknownObjectWeakInit(v6, v0);
    v3 = sub_100056C7C((uint64_t)v6);
    swift_unknownObjectWeakDestroy(v6);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

_QWORD *sub_100056C7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (**v30)(uint64_t, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  uint64_t (**v32)();
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void (**v37)(uint64_t, uint64_t);
  uint64_t (**v38)();
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  id v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  void *v52;
  char v53[24];

  v2 = sub_100009F00(&qword_1000B9708);
  v3 = *(_QWORD *)(v2 - 8);
  v5 = __chkstk_darwin(v2, v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  v10 = (char *)&v48 - v9;
  v11 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature(0);
  v12 = *(_QWORD *)(v11 - 8);
  v14 = __chkstk_darwin(v11, v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  v19 = (char *)&v48 - v18;
  swift_beginAccess(a1, v53, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v21 = sub_100009F00(&qword_1000B9718);
    v49 = *(_QWORD *)(v3 + 72);
    v22 = *(unsigned __int8 *)(v3 + 80);
    v23 = (v22 + 32) & ~v22;
    v24 = swift_allocObject(v21, v23 + 2 * v49, v22 | 7);
    v50 = v7;
    v51 = (_QWORD *)v24;
    *(_OWORD *)(v24 + 16) = xmmword_100088470;
    v25 = v24 + v23;
    v26 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
    v26(v19, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.headGestures(_:), v11);
    v27 = v2;
    v28 = swift_allocObject(&unk_1000A89C8, 24, 7);
    *(_QWORD *)(v28 + 16) = Strong;
    v29 = *(int *)(v27 + 48);
    v52 = Strong;
    v30 = (void (**)(uint64_t, uint64_t))&v10[v29];
    v31 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v31(v10, v19, v11);
    *v30 = sub_100058B94;
    v30[1] = (void (*)(uint64_t, uint64_t))v28;
    v31((char *)v25, v10, v11);
    v32 = (uint64_t (**)())(v25 + *(int *)(v27 + 48));
    v33 = swift_allocObject(&unk_1000A89F0, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_100058B94;
    *(_QWORD *)(v33 + 24) = v28;
    *v32 = sub_10003CF88;
    v32[1] = (uint64_t (*)())v33;
    v34 = (char *)(v25 + v49);
    v26(v16, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.improvedVoiceQuality(_:), v11);
    v35 = swift_allocObject(&unk_1000A8A18, 24, 7);
    *(_QWORD *)(v35 + 16) = v52;
    v36 = v50;
    v37 = (void (**)(uint64_t, uint64_t))&v50[*(int *)(v27 + 48)];
    v31(v50, v16, v11);
    *v37 = sub_100058BC0;
    v37[1] = (void (*)(uint64_t, uint64_t))v35;
    v31(v34, v36, v11);
    v38 = (uint64_t (**)())&v34[*(int *)(v27 + 48)];
    v39 = swift_allocObject(&unk_1000A8A40, 32, 7);
    *(_QWORD *)(v39 + 16) = sub_100058BC0;
    *(_QWORD *)(v39 + 24) = v35;
    *v38 = sub_100058BC8;
    v38[1] = (uint64_t (*)())v39;
    v40 = v51;
    Strong = v52;
  }
  else
  {
    if (qword_1000B7BB0 != -1)
      swift_once(&qword_1000B7BB0, sub_100058BE4);
    v41 = type metadata accessor for Logger(0);
    v42 = sub_1000093F8(v41, (uint64_t)qword_1000BC7B0);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "no features we are dallocating", v45, 2u);
      swift_slowDealloc(v45, -1, -1);
    }

    v40 = _swiftEmptyArrayStorage;
  }
  v46 = Strong;
  return v40;
}

void sub_100056FDC(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  Swift::String v28;
  Swift::String v29;

  ObjectType = swift_getObjectType(a1, a2);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_listBuilder);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjectType);
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = objc_msgSend(v6, "bundleForClass:", ObjCClassFromMetadata);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v8, v7);

  if (v9)
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v9);

    v11 = objc_msgSend(v6, "mainBundle");
    v28._object = (void *)0xE000000000000000;
    v12._countAndFlagsBits = 0x5345475F44414548;
    v12._object = (void *)0xED00005345525554;
    v13.value._countAndFlagsBits = 0xD000000000000014;
    v13.value._object = (void *)0x800000010008D740;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v28._countAndFlagsBits = 0;
    v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v28);

    v16 = objc_msgSend(v6, "mainBundle");
    v17._countAndFlagsBits = 0xD000000000000016;
    v29._object = (void *)0xE000000000000000;
    v17._object = (void *)0x800000010008CCA0;
    v18.value._countAndFlagsBits = 0xD000000000000014;
    v18.value._object = (void *)0x800000010008D740;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v29._countAndFlagsBits = 0;
    v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v29);

    objc_allocWithZone((Class)type metadata accessor for ProxCardBulletView());
    v21 = v10;
    swift_bridgeObjectRetain(v15._object);
    swift_bridgeObjectRetain(v20._object);
    v22 = sub_100058CF8(v21, (void *)v15._countAndFlagsBits, v15._object, v20._countAndFlagsBits, v20._object);
    v23 = swift_beginAccess(v4 + 16, v27, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)((*(_QWORD *)(v4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)((*(_QWORD *)(v4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v22);
    specialized Array._endMutation()(v26);
    swift_endAccess(v27);

    swift_bridgeObjectRelease(v15._object);
    swift_bridgeObjectRelease(v20._object);
  }
  else
  {
    __break(1u);
  }
}

void sub_100057290(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  Swift::String v28;
  Swift::String v29;

  ObjectType = swift_getObjectType(a1, a2);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_listBuilder);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjectType);
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = objc_msgSend(v6, "bundleForClass:", ObjCClassFromMetadata);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v8, v7);

  if (v9)
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v9);

    v11 = objc_msgSend(v6, "mainBundle");
    v28._object = (void *)0xE000000000000000;
    v12._countAndFlagsBits = 0x55515F4543494F56;
    v12._object = (void *)0xED00005954494C41;
    v13.value._countAndFlagsBits = 0xD000000000000014;
    v13.value._object = (void *)0x800000010008D740;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v28._countAndFlagsBits = 0;
    v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v28);

    v16 = objc_msgSend(v6, "mainBundle");
    v17._countAndFlagsBits = 0xD000000000000016;
    v29._object = (void *)0xE000000000000000;
    v17._object = (void *)0x800000010008F320;
    v18.value._countAndFlagsBits = 0xD000000000000014;
    v18.value._object = (void *)0x800000010008D740;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v29._countAndFlagsBits = 0;
    v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v29);

    objc_allocWithZone((Class)type metadata accessor for ProxCardBulletView());
    v21 = v10;
    swift_bridgeObjectRetain(v15._object);
    swift_bridgeObjectRetain(v20._object);
    v22 = sub_100058CF8(v21, (void *)v15._countAndFlagsBits, v15._object, v20._countAndFlagsBits, v20._object);
    v23 = swift_beginAccess(v4 + 16, v27, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)((*(_QWORD *)(v4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)((*(_QWORD *)(v4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v22);
    specialized Array._endMutation()(v26);
    swift_endAccess(v27);

    swift_bridgeObjectRelease(v15._object);
    swift_bridgeObjectRelease(v20._object);
  }
  else
  {
    __break(1u);
  }
}

void sub_100057544(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t (**v54)();
  uint64_t v55;
  char *v56;
  uint64_t (**v57)();
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  Class isa;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, _QWORD, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  _QWORD *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char v112[24];
  char v113[24];
  _QWORD v114[3];
  uint64_t v115;
  objc_super v116;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = sub_100009F00(&qword_1000B9708);
  v6 = *(_QWORD *)(v5 - 8);
  v8 = __chkstk_darwin(v5, v7);
  v10 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v8, v11);
  v14 = (char *)&v99 - v13;
  __chkstk_darwin(v12, v15);
  v17 = (char *)&v99 - v16;
  v18 = type metadata accessor for HeadphoneModel(0);
  v20 = __chkstk_darwin(v18, v19);
  v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  v25 = (char *)&v99 - v24;
  v116.receiver = v3;
  v116.super_class = ObjectType;
  objc_msgSendSuper2(&v116, "viewDidLoad");
  objc_msgSend(v3, "setDismissalType:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_presenter]);
  if (Strong)
  {
    v27 = Strong;
    v28 = Strong + 16;
    swift_beginAccess(Strong + 16, v113, 0, 0);
    sub_10001B868(v28, (uint64_t)v114, &qword_1000B81E0);
    swift_unknownObjectRelease(v27);
    v29 = v115;
    if (v115)
    {
      v107 = v17;
      v108 = v10;
      v111 = v14;
      v30 = sub_100013410(v114, v115);
      v31 = *(_QWORD *)(v29 - 8);
      __chkstk_darwin(v30, v30);
      v33 = (uint64_t *)((char *)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_QWORD *))(v31 + 16))(v33);
      sub_100017E48((uint64_t)v114, &qword_1000B81E0);
      v34 = *v33 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v34, v112, 0, 0);
      sub_1000135B0(v34, (uint64_t)v22);
      (*(void (**)(_QWORD *, uint64_t))(v31 + 8))(v33, v29);
      sub_1000135F4((uint64_t)v22, (uint64_t)v25);
      v103 = OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_headphoneProxFeatureManager;
      v35 = *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_headphoneProxFeatureManager];
      v36 = *((_QWORD *)v25 + 16);
      v37 = *((_QWORD *)v25 + 17);
      v104 = v25;
      swift_bridgeObjectRetain(v37);
      swift_retain(v35);
      v38 = dispatch thunk of HeadphoneProxFeatureManager.getWhatsNewNotShowedFeatures(deviceAddress:)(v36, v37);
      swift_release(v35);
      swift_bridgeObjectRelease(v37);
      v39 = sub_100056BF8();
      v40 = v3;
      v41 = sub_100058578((uint64_t)v39, (uint64_t)v40, v38);
      swift_bridgeObjectRelease(v39);

      swift_bridgeObjectRelease(v38);
      v42 = v41[2];
      if (v42)
      {
        v101 = v40;
        v102 = v3;
        v43 = (char *)v41 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        v106 = *(_QWORD *)(v6 + 72);
        v105 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature(0);
        v110 = *(_QWORD *)(v105 - 8);
        v109 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
        v100 = v41;
        swift_bridgeObjectRetain(v41);
        v44 = (uint64_t)v111;
        v45 = v105;
        do
        {
          v46 = *(int *)(v5 + 48);
          v47 = v107;
          v48 = &v107[v46];
          v49 = &v43[v46];
          v109(v107, v43, v45);
          v51 = *(void (**)(uint64_t))v49;
          v50 = *((_QWORD *)v49 + 1);
          *(_QWORD *)v48 = v51;
          *((_QWORD *)v48 + 1) = v50;
          (*(void (**)(uint64_t, char *, uint64_t))(v110 + 32))(v44, v47, v45);
          v52 = v5;
          v53 = *(int *)(v5 + 48);
          v54 = (uint64_t (**)())&v111[v53];
          v55 = swift_allocObject(&unk_1000A8978, 32, 7);
          *(_QWORD *)(v55 + 16) = v51;
          *(_QWORD *)(v55 + 24) = v50;
          *v54 = sub_10003CF88;
          v54[1] = (uint64_t (*)())v55;
          v56 = v108;
          v57 = (uint64_t (**)())&v108[v53];
          v5 = v52;
          v44 = (uint64_t)v111;
          v109(v108, v111, v45);
          *v57 = sub_10003CF88;
          v57[1] = (uint64_t (*)())v55;
          swift_retain_n(v50, 2);
          v58 = swift_retain(v55);
          v51(v58);
          swift_release(v50);
          swift_release(v55);
          sub_100017E48(v44, &qword_1000B9708);
          (*(void (**)(char *, uint64_t))(v110 + 8))(v56, v45);
          v43 += v106;
          --v42;
        }
        while (v42);
        v41 = v100;
        swift_bridgeObjectRelease(v100);
        v3 = v102;
        v40 = v101;
      }
      swift_bridgeObjectRelease(v41);
      v59 = (void *)sub_1000598C0();
      v60 = objc_msgSend(v40, "contentView");
      objc_msgSend(v60, "addSubview:", v59);

      v61 = objc_msgSend(v40, "contentView");
      v62 = objc_msgSend(v61, "mainContentGuide");

      v63 = (void *)objc_opt_self(NSLayoutConstraint);
      v64 = sub_100009F00((uint64_t *)&unk_1000B8730);
      v65 = swift_allocObject(v64, 64, 7);
      *(_OWORD *)(v65 + 16) = xmmword_100088460;
      v66 = objc_msgSend(v59, "topAnchor");
      v67 = objc_msgSend(v62, "topAnchor");
      v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

      *(_QWORD *)(v65 + 32) = v68;
      v69 = objc_msgSend(v59, "bottomAnchor");
      v70 = objc_msgSend(v62, "bottomAnchor");
      v71 = objc_msgSend(v69, "constraintLessThanOrEqualToAnchor:", v70);

      *(_QWORD *)(v65 + 40) = v71;
      v72 = objc_msgSend(v59, "leadingAnchor");
      v73 = objc_msgSend(v62, "leadingAnchor");
      v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

      *(_QWORD *)(v65 + 48) = v74;
      v75 = objc_msgSend(v59, "trailingAnchor");
      v76 = objc_msgSend(v62, "trailingAnchor");
      v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

      *(_QWORD *)(v65 + 56) = v77;
      v114[0] = v65;
      specialized Array._endMutation()(v78);
      v79 = v114[0];
      sub_10000B880();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v79);
      objc_msgSend(v63, "activateConstraints:", isa);

      v81 = sub_100009F00(&qword_1000B9680);
      v82 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature(0);
      v83 = *(_QWORD *)(v82 - 8);
      v84 = *(_QWORD *)(v83 + 72);
      v85 = *(unsigned __int8 *)(v83 + 80);
      v86 = (v85 + 32) & ~v85;
      v87 = swift_allocObject(v81, v86 + 2 * v84, v85 | 7);
      *(_OWORD *)(v87 + 16) = xmmword_100088470;
      v88 = v87 + v86;
      v89 = *(void (**)(uint64_t, _QWORD, uint64_t))(v83 + 104);
      v89(v88, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.whatsNew(_:), v82);
      v89(v88 + v84, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.improvedVoiceQuality(_:), v82);
      v90 = *(_QWORD *)&v3[v103];
      v91 = (uint64_t)v104;
      v92 = *((_QWORD *)v104 + 16);
      v93 = *((_QWORD *)v104 + 17);
      swift_bridgeObjectRetain(v93);
      swift_retain(v90);
      dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)(v92, v93, v87);

      swift_bridgeObjectRelease(v87);
      swift_release(v90);
      swift_bridgeObjectRelease(v93);
      sub_100013638(v91);
      return;
    }
    sub_100017E48((uint64_t)v114, &qword_1000B81E0);
  }
  if (qword_1000B7BA8 != -1)
    swift_once(&qword_1000B7BA8, sub_100056A98);
  v94 = type metadata accessor for Logger(0);
  v95 = sub_1000093F8(v94, (uint64_t)qword_1000B9688);
  v96 = Logger.logObject.getter(v95);
  v97 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v96, v97))
  {
    v98 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v98 = 0;
    _os_log_impl((void *)&_mh_execute_header, v96, v97, "Whats New: Headphone Model is nil, exiting", v98, 2u);
    swift_slowDealloc(v98, -1, -1);
  }

}

void sub_100057E98(uint64_t a1)
{
  void *v1;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void **v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *);
  void *v21;
  void (*v22)(uint64_t);
  uint64_t v23;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = *(_QWORD *)(a1 + 40);
  v5 = swift_allocObject(&unk_1000A8900, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v1);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v22 = sub_100058550;
  v23 = v5;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_100011720;
  v21 = &unk_1000A8918;
  v7 = _Block_copy(&v18);
  v8 = (void *)objc_opt_self(PRXAction);
  v9 = objc_msgSend(v8, "actionWithTitle:style:handler:", v6, 0, v7);

  _Block_release(v7);
  v10 = v23;
  swift_release(v5);

  v11 = *(_QWORD *)(a1 + 56);
  v12 = swift_allocObject(&unk_1000A8900, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v1);
  swift_bridgeObjectRetain(v11);
  swift_retain(v12);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v22 = sub_100058570;
  v23 = v12;
  v18 = _NSConcreteStackBlock;
  v19 = 1107296256;
  v20 = sub_100011720;
  v21 = &unk_1000A8940;
  v14 = _Block_copy(&v18);
  v15 = objc_msgSend(v8, "actionWithTitle:style:handler:", v13, 1, v14);

  _Block_release(v14);
  v16 = v23;
  swift_release(v12);
  v17 = objc_msgSend(v1, "addAction:", v15, swift_release(v16).n128_f64[0]);

}

void sub_100058104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_presenter);

    if (v5)
    {
      sub_100074088();
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_100058174(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _BYTE v29[24];
  _BYTE v30[24];
  _QWORD v31[3];
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];

  v3 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v3, v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = a2 + 16;
  swift_beginAccess(v7, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(_QWORD *)(Strong
                    + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_headphoneProxFeatureManager);
    swift_retain(v10);

    swift_beginAccess(v7, v33, 0, 0);
    v11 = swift_unknownObjectWeakLoadStrong(v7);
    v12 = (void *)v11;
    if (v11)
    {
      v13 = swift_unknownObjectWeakLoadStrong(v11 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_presenter);

      if (v13)
      {
        swift_beginAccess(v13 + 16, v30, 0, 0);
        sub_10001B868(v13 + 16, (uint64_t)v31, &qword_1000B81E0);
        swift_unknownObjectRelease(v13);
        v13 = v32;
        if (v32)
        {
          v14 = sub_100013410(v31, v32);
          v15 = *(_QWORD *)(v13 - 8);
          __chkstk_darwin(v14, v14);
          v17 = &v29[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
          (*(void (**)(_QWORD *))(v15 + 16))(v17);
          sub_100017E48((uint64_t)v31, &qword_1000B81E0);
          v18 = *v17 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
          swift_beginAccess(v18, v29, 0, 0);
          sub_1000135B0(v18, (uint64_t)v6);
          (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v13);
          v12 = (void *)*((_QWORD *)v6 + 16);
          v13 = *((_QWORD *)v6 + 17);
          swift_bridgeObjectRetain(v13);
          sub_100013638((uint64_t)v6);
LABEL_9:
          v19 = sub_100009F00(&qword_1000B9680);
          v20 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature(0);
          v21 = *(_QWORD *)(v20 - 8);
          v22 = *(unsigned __int8 *)(v21 + 80);
          v23 = (v22 + 32) & ~v22;
          v24 = swift_allocObject(v19, v23 + *(_QWORD *)(v21 + 72), v22 | 7);
          *(_OWORD *)(v24 + 16) = xmmword_100087710;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v24 + v23, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.headGestures(_:), v20);
          dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)(v12, v13, v24);
          swift_release(v10);
          swift_bridgeObjectRelease(v24);
          swift_bridgeObjectRelease(v13);
          goto LABEL_10;
        }
        sub_100017E48((uint64_t)v31, &qword_1000B81E0);
      }
      v12 = 0;
      goto LABEL_9;
    }
    v13 = 0;
    goto LABEL_9;
  }
LABEL_10:
  swift_beginAccess(v7, v31, 0, 0);
  v25 = swift_unknownObjectWeakLoadStrong(v7);
  if (v25)
  {
    v26 = (void *)v25;
    v27 = swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_presenter);

    if (v27)
    {
      sub_1000742A0();
      swift_unknownObjectRelease(v27);
    }
  }
}

uint64_t type metadata accessor for HeadphoneWhatsNewUpsellViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController);
}

uint64_t sub_10005851C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_type);
}

uint64_t sub_10005852C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100058550(uint64_t a1)
{
  uint64_t v1;

  sub_100058104(a1, v1);
}

uint64_t sub_100058558(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100058568(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100058570(uint64_t a1)
{
  uint64_t v1;

  sub_100058174(a1, v1);
}

_QWORD *sub_100058578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *result;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  unint64_t v43;
  char v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  _QWORD *v75;

  v60 = a3;
  v65 = a2;
  v5 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature(0);
  v67 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  v69 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100009F00(&qword_1000B9708);
  v9 = __chkstk_darwin(v64, v8);
  v11 = __chkstk_darwin(v9, v10);
  v68 = (uint64_t)&v57 - v12;
  v14 = __chkstk_darwin(v11, v13);
  v63 = (char *)&v57 - v15;
  __chkstk_darwin(v14, v16);
  v20 = (char *)&v57 - v18;
  result = _swiftEmptyArrayStorage;
  v75 = _swiftEmptyArrayStorage;
  v62 = *(_QWORD *)(a1 + 16);
  if (!v62)
    return result;
  v73 = v19;
  v57 = v3;
  v58 = (char *)&v57 - v18;
  v22 = 0;
  v23 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v71 = *(_QWORD *)(v17 + 72);
  v59 = v23;
  v61 = a1 + v23;
  v24 = &qword_1000B9708;
  v66 = v5;
  while (1)
  {
    v72 = v22;
    sub_10001B868(v61 + v71 * v22, (uint64_t)v20, v24);
    v26 = v63;
    v25 = v64;
    v27 = *(int *)(v64 + 48);
    v28 = &v63[v27];
    v29 = &v20[v27];
    v30 = v67;
    v74 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    v74(v63, v20, v5);
    v31 = v24;
    v33 = *(_QWORD *)v29;
    v32 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = v33;
    *((_QWORD *)v28 + 1) = v32;
    v34 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
    v35 = (uint64_t)v20;
    v36 = v73;
    v34(v73, v26, v5);
    v37 = (uint64_t (**)())(v36 + *(int *)(v25 + 48));
    v38 = swift_allocObject(&unk_1000A89A0, 32, 7);
    *(_QWORD *)(v38 + 16) = v33;
    *(_QWORD *)(v38 + 24) = v32;
    *v37 = sub_100058BC8;
    v37[1] = (uint64_t (*)())v38;
    swift_retain(v32);
    if (sub_100056B28())
      goto LABEL_18;
    v39 = v60;
    v5 = v66;
    if (*(_QWORD *)(v60 + 16))
      break;
LABEL_4:
    v24 = &qword_1000B9708;
    sub_100017E48(v36, &qword_1000B9708);
    v20 = v58;
    sub_100017E48((uint64_t)v58, &qword_1000B9708);
LABEL_5:
    v22 = v72 + 1;
    if (v72 + 1 == v62)
      return v75;
  }
  v70 = *(_QWORD *)(v60 + 16);
  v40 = v67;
  v41 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  v42 = v69;
  v74(v69, (char *)(v60 + v41), v66);
  v43 = sub_100058AE0();
  swift_bridgeObjectRetain(v39);
  v44 = dispatch thunk of static Equatable.== infix(_:_:)(v42, v36, v5, v43);
  v45 = *(void (**)(char *, uint64_t))(v40 + 8);
  v45(v42, v5);
  if ((v44 & 1) != 0)
  {
    swift_bridgeObjectRelease(v60);
LABEL_17:
    v35 = (uint64_t)v58;
    v31 = &qword_1000B9708;
LABEL_18:
    sub_100017E48(v36, v31);
    sub_100058B28(v35, v68);
    v54 = v75;
    v20 = (char *)v35;
    v24 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native(v75) & 1) == 0)
    {
      sub_100082740(0, v54[2] + 1, 1);
      v54 = v75;
    }
    v5 = v66;
    v56 = v54[2];
    v55 = v54[3];
    if (v56 >= v55 >> 1)
    {
      sub_100082740(v55 > 1, v56 + 1, 1);
      v54 = v75;
    }
    v54[2] = v56 + 1;
    sub_100058B28(v68, (uint64_t)v54 + v59 + v56 * v71);
    goto LABEL_5;
  }
  if (v70 == 1)
  {
LABEL_3:
    swift_bridgeObjectRelease(v60);
    goto LABEL_4;
  }
  v46 = *(_QWORD *)(v67 + 72);
  v47 = v60 + v46 + v41;
  v48 = 1;
  while (1)
  {
    v49 = v69;
    result = (_QWORD *)((uint64_t (*)(char *, unint64_t, uint64_t))v74)(v69, v47, v5);
    v50 = v48 + 1;
    if (__OFADD__(v48, 1))
      break;
    v51 = v36;
    v52 = v49;
    v53 = dispatch thunk of static Equatable.== infix(_:_:)(v49, v51, v5, v43);
    v45(v52, v5);
    if ((v53 & 1) != 0)
    {
      swift_bridgeObjectRelease(v60);
      v36 = v73;
      goto LABEL_17;
    }
    ++v48;
    v47 += v46;
    v36 = v73;
    if (v50 == v70)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

id sub_1000589C8(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_sectionWidth] = 0x4074000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_estimatedSectionHeight] = 0x4056800000000000;
  v5 = OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_headphoneProxFeatureManager;
  type metadata accessor for HeadphoneProxFeatureManager(0);
  v6 = v2;
  *(_QWORD *)&v2[v5] = static HeadphoneProxFeatureManager.shared.getter();
  v7 = OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_listBuilder;
  v8 = type metadata accessor for ProxBulltedListBuilder();
  v9 = swift_allocObject(v8, 24, 7);
  *(_QWORD *)(v9 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[v7] = v9;
  v6[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___forceShowWhatsNew] = 2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___featureMap] = 0;
  v10 = &v6[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_presenter];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10, 0);
  v6[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_type] = 12;

  v12.receiver = v6;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, "initWithContentView:", a1);
}

unint64_t sub_100058AE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B9710;
  if (!qword_1000B9710)
  {
    v1 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for HeadphoneProxFeatureManager.HeadphoneProxFeature, v1);
    atomic_store(result, (unint64_t *)&qword_1000B9710);
  }
  return result;
}

uint64_t sub_100058B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B9708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100058B70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100058B94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100056FDC(*(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100058B9C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100058BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100057290(*(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100058BE4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000BC7B0);
  sub_1000093F8(v0, (uint64_t)qword_1000BC7B0);
  return Logger.init(subsystem:category:)(0xD00000000000001ELL, 0x800000010008C750, 0x7374656C6C7542, 0xE700000000000000);
}

id sub_100058C58()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView____lazy_storage___heightConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView____lazy_storage___heightConstraint];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView____lazy_storage___heightConstraint];
  }
  else
  {
    v4 = objc_msgSend(v0, "heightAnchor");
    v5 = objc_msgSend(v4, "constraintEqualToConstant:", 100.0);

    v6 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t sub_100058CF8(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  _QWORD *v17;
  objc_class *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  Swift::String v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t inited;
  uint64_t v39;
  NSString *v40;
  id v41;
  NSString v42;
  NSString v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSString *v47;
  unint64_t v48;
  id v49;
  NSString v50;
  Class isa;
  id v52;
  unint64_t v53;
  Class v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  Class v83;
  uint64_t result;
  __int128 v85;
  id v86;
  unint64_t v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  _QWORD *v93;
  char v94[72];
  char v95[72];
  uint64_t v96;
  void *v97;
  objc_super v98;

  v92 = a4;
  v91 = a2;
  v93 = (_QWORD *)type metadata accessor for CharacterSet(0);
  v9 = *(v93 - 1);
  __chkstk_darwin(v93, v10);
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_paddingConstraints] = _swiftEmptyArrayStorage;
  v13 = OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView;
  v14 = objc_allocWithZone((Class)UILabel);
  v15 = v5;
  v16 = objc_msgSend(v14, "init");
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[v13] = v16;
  *(_QWORD *)&v15[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetViewSize] = 0x4053800000000000;
  *(_QWORD *)&v15[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView____lazy_storage___heightConstraint] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetView] = a1;
  v17 = a1;

  v18 = (objc_class *)type metadata accessor for ProxCardBulletView();
  v98.receiver = v15;
  v98.super_class = v18;
  v19 = (char *)objc_msgSendSuper2(&v98, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetView;
  v21 = *(void **)&v19[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetView];
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v21, "setFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "addSubview:", v21);
  v90 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v90, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v96 = (uint64_t)v91;
  v97 = a3;
  swift_bridgeObjectRetain(a3);
  v22._countAndFlagsBits = 10;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(a3);
  v23 = v97;
  swift_bridgeObjectRetain(v97);
  v24._countAndFlagsBits = v92;
  v24._object = a5;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v23);
  v25 = swift_bridgeObjectRelease(a5);
  v26 = v97;
  static CharacterSet.newlines.getter(v25);
  v27 = sub_100009F40();
  v28 = (_QWORD *)StringProtocol.components(separatedBy:)(v12, &type metadata for String, v27);
  (*(void (**)(char *, _QWORD *))(v9 + 8))(v12, v93);
  if (!v28[2])
  {
    swift_bridgeObjectRelease(v28);
    __break(1u);
    goto LABEL_6;
  }
  v93 = v17;
  v29 = (void *)v28[4];
  v30 = v28[5];
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v28);
  v31 = (void *)objc_opt_self(UIFont);
  v32 = objc_msgSend(v31, "_preferredFontForTextStyle:variant:", UIFontTextStyleSubheadline, 256);
  if (!v32)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v33 = v32;
  v89 = v29;
  v88 = v26;
  v92 = v20;
  v34 = objc_msgSend(v32, "fontDescriptor");
  v35 = objc_msgSend(v34, "fontDescriptorWithSymbolicTraits:", 2);

  if (v35)
  {
    objc_msgSend(v33, "pointSize");
    v36 = objc_msgSend(v31, "fontWithDescriptor:size:", v35);

    v37 = sub_100009F00(&qword_1000B7CE0);
    inited = swift_initStackObject(v37, v95);
    v85 = xmmword_100087710;
    *(_OWORD *)(inited + 16) = xmmword_100087710;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v39 = sub_100009F84(0, &qword_1000B7CE8, UIFont_ptr);
    *(_QWORD *)(inited + 64) = v39;
    *(_QWORD *)(inited + 40) = v36;
    v40 = NSFontAttributeName;
    v91 = v36;
    v87 = sub_100070AA4(inited);
    v41 = v88;
    v42 = String._bridgeToObjectiveC()();
    v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v86 = objc_msgSend(v42, "rangeOfString:", v43);
    v45 = v44;

    v46 = swift_initStackObject(v37, v94);
    *(_OWORD *)(v46 + 16) = v85;
    *(_QWORD *)(v46 + 64) = v39;
    *(_QWORD *)(v46 + 32) = v40;
    *(_QWORD *)(v46 + 40) = v33;
    v47 = v40;
    v89 = v33;
    v48 = sub_100070AA4(v46);
    v49 = objc_allocWithZone((Class)NSMutableAttributedString);
    v50 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v41);
    type metadata accessor for Key(0);
    sub_100024FB4();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v48);
    v52 = objc_msgSend(v49, "initWithString:attributes:", v50, isa);

    v53 = v87;
    v54 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v53);
    v88 = v52;
    objc_msgSend(v52, "addAttributes:range:", v54, v86, v45);

    v55 = v90;
    objc_msgSend(v90, "setAttributedText:", v52);
    v56 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    objc_msgSend(v55, "setTextColor:", v56);

    objc_msgSend(v55, "setNumberOfLines:", 0);
    objc_msgSend(v55, "sizeToFit");
    v57 = *(void **)&v19[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView];
    *(_QWORD *)&v19[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView] = v55;
    v58 = v55;

    objc_msgSend(v19, "addSubview:", v58);
    v90 = (id)objc_opt_self(NSLayoutConstraint);
    v59 = sub_100009F00((uint64_t *)&unk_1000B8730);
    v60 = swift_allocObject(v59, 96, 7);
    *(_OWORD *)(v60 + 16) = xmmword_100088E10;
    v61 = v92;
    v62 = objc_msgSend(*(id *)&v19[v92], "leadingAnchor");
    v63 = objc_msgSend(v19, "leadingAnchor");
    v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

    *(_QWORD *)(v60 + 32) = v64;
    v65 = objc_msgSend(*(id *)&v19[v61], "widthAnchor");
    v66 = objc_msgSend(v65, "constraintEqualToConstant:", 78.0);

    *(_QWORD *)(v60 + 40) = v66;
    v67 = objc_msgSend(*(id *)&v19[v61], "heightAnchor");
    v68 = objc_msgSend(v67, "constraintEqualToConstant:", 78.0);

    *(_QWORD *)(v60 + 48) = v68;
    v69 = objc_msgSend(*(id *)&v19[v61], "centerYAnchor");
    v70 = objc_msgSend(v58, "centerYAnchor");
    v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

    *(_QWORD *)(v60 + 56) = v71;
    v72 = objc_msgSend(*(id *)&v19[v61], "centerYAnchor");
    v73 = objc_msgSend(v19, "centerYAnchor");
    v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

    *(_QWORD *)(v60 + 64) = v74;
    v75 = objc_msgSend(v58, "leadingAnchor");
    v76 = objc_msgSend(*(id *)&v19[v61], "trailingAnchor");
    v77 = objc_msgSend(v75, "constraintEqualToAnchor:constant:", v76, 15.0);

    *(_QWORD *)(v60 + 72) = v77;
    v78 = objc_msgSend(v58, "trailingAnchor");
    v79 = objc_msgSend(v19, "trailingAnchor");
    v80 = objc_msgSend(v78, "constraintEqualToAnchor:", v79);

    *(_QWORD *)(v60 + 80) = v80;
    v81 = sub_100058C58();
    *(_QWORD *)(v60 + 88) = v81;
    v96 = v60;
    specialized Array._endMutation()(v81);
    v82 = v96;
    sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
    v83 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v82);
    objc_msgSend(v90, "activateConstraints:", v83);

    return (uint64_t)v19;
  }
LABEL_7:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000018, 0x800000010008BBE0, "HeadphoneProxService/HeadphoneAdaptiveControlsUpsellViewController.swift", 72, 2, 164, 0);
  __break(1u);
  return result;
}

void sub_1000596C0()
{
  char *v0;
  uint64_t v1;
  CGFloat Height;
  void *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  objc_super v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ProxCardBulletView();
  objc_msgSendSuper2(&v8, "layoutSubviews");
  v1 = OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView], "bounds");
  Height = CGRectGetHeight(v9);
  v3 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetView];
  objc_msgSend(v3, "bounds", Height);
  CGRectGetHeight(v10);
  v4 = sub_100058C58();
  objc_msgSend(*(id *)&v0[v1], "bounds");
  v6 = v5;
  objc_msgSend(v3, "bounds");
  v7 = CGRectGetHeight(v11);
  if (v6 > v7)
    v7 = v6;
  objc_msgSend(v4, "setConstant:", v7);

}

id sub_100059814()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProxCardBulletView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProxCardBulletView()
{
  return objc_opt_self(_TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView);
}

uint64_t sub_1000598C0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;
  uint64_t v19;
  __int128 v20;
  unint64_t v21;
  id v22;
  _BYTE v23[24];

  v1 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v1, "setAlignment:", 1);
  objc_msgSend(v1, "setAxis:", 1);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  swift_beginAccess(v0 + 16, v23, 0, 0);
  v2 = *(_QWORD *)(v0 + 16);
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 16), 2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v2, 2);
    objc_msgSend(v1, "setSpacing:", 15.0);
    return (uint64_t)v1;
  }
  if (v2 < 0)
    v19 = *(_QWORD *)(v0 + 16);
  else
    v19 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v2, 2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  result = objc_opt_self(NSLayoutConstraint);
  v22 = (id)result;
  if (v3 >= 1)
  {
    v5 = 0;
    v21 = v2 & 0xC000000000000001;
    v20 = xmmword_100087F40;
    v6 = v2;
    do
    {
      if (v21)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      ++v5;
      objc_msgSend(v1, "addArrangedSubview:", v7, v20);
      v9 = sub_100009F00((uint64_t *)&unk_1000B8730);
      v10 = swift_allocObject(v9, 48, 7);
      *(_OWORD *)(v10 + 16) = v20;
      v11 = objc_msgSend(v1, "leadingAnchor");
      v12 = objc_msgSend(v8, "leadingAnchor");
      v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

      *(_QWORD *)(v10 + 32) = v13;
      v14 = objc_msgSend(v1, "trailingAnchor");
      v15 = objc_msgSend(v8, "trailingAnchor");
      v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

      *(_QWORD *)(v10 + 40) = v16;
      specialized Array._endMutation()(v17);
      sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v10);
      objc_msgSend(v22, "activateConstraints:", isa);

      v2 = v6;
    }
    while (v3 != v5);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100059BA0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for ProxBulltedListBuilder()
{
  return objc_opt_self(_TtC20HeadphoneProxService22ProxBulltedListBuilder);
}

void sub_100059BE4()
{
  char *v0;
  uint64_t v1;
  id v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_paddingConstraints] = &_swiftEmptyArrayStorage;
  v1 = OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetViewSize] = 0x4053800000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView____lazy_storage___heightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BD10, "HeadphoneProxService/ProxBulltedListBuilder.swift", 49, 2, 83, 0);
  __break(1u);
}

id sub_100059CB4(void *a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  id v25;
  uint64_t v27;
  objc_super v28;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = &v2[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_viewModel];
  v6 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = &v2[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_presenter];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  v2[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_type] = 1;
  v8 = objc_allocWithZone((Class)UITableView);
  v9 = v2;
  v10 = objc_msgSend(v8, "initWithFrame:style:", 2, 0.0, 0.0, 0.0, 0.0);
  v11 = objc_msgSend(objc_allocWithZone((Class)PRXScrollableContentView), "initWithCardStyle:scrollView:", 0, v10);
  *(_QWORD *)&v9[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_tableView] = v10;
  v12 = v10;

  v28.receiver = v9;
  v28.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v28, "initWithContentView:", v11);
  v14 = (void *)objc_opt_self(UIColor);
  v15 = v12;
  v16 = v13;
  v17 = objc_msgSend(v14, "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v17);

  objc_msgSend(v15, "setDataSource:", v16);
  objc_msgSend(v15, "setDelegate:", v16);
  objc_msgSend(v15, "setAllowsSelection:", 0);
  v18 = sub_100009F84(0, &qword_1000B9960, UITableViewCell_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v27 = v18;
  v20 = sub_100009F00(&qword_1000B9968);
  String.init<A>(describing:)(&v27, v20);
  v22 = v21;
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  objc_msgSend(v15, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v23);

  v24 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 2.22507386e-308);
  objc_msgSend(v15, "setTableHeaderView:", v24);

  v25 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 2.22507386e-308);
  objc_msgSend(v15, "setTableFooterView:", v25);

  return v16;
}

void sub_10005A028(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  NSString v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  void *v22;
  id v23;
  uint64_t v24;
  void **aBlock;
  uint64_t v26;
  void (*v27)(uint64_t, void *);
  void *v28;
  void (*v29)(uint64_t);
  uint64_t v30;

  v3 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000324D8((uint64_t)a1, (uint64_t)v6);
  v7 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  v8 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_viewModel];
  swift_beginAccess(&v1[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_viewModel], &aBlock, 33, 0);
  sub_10003251C((uint64_t)v6, v8);
  swift_endAccess(&aBlock);
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v9);

  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v10);

  if (a1[11])
    v11 = String._bridgeToObjectiveC()();
  else
    v11 = 0;
  objc_msgSend(v1, "setBottomTrayTitle:", v11);

  v12 = a1[5];
  v13 = swift_allocObject(&unk_1000A8AB0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v29 = sub_10005AFFC;
  v30 = v13;
  aBlock = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_100011720;
  v28 = &unk_1000A8AC8;
  v15 = _Block_copy(&aBlock);
  v16 = (void *)objc_opt_self(PRXAction);
  v17 = objc_msgSend(v16, "actionWithTitle:style:handler:", v14, 0, v15);

  _Block_release(v15);
  v18 = v30;
  swift_release(v13);
  swift_release(v18);
  v19 = a1[7];
  v20 = swift_allocObject(&unk_1000A8AB0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v1);
  swift_bridgeObjectRetain(v19);
  swift_retain(v20);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v29 = sub_10005B01C;
  v30 = v20;
  aBlock = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_100011720;
  v28 = &unk_1000A8AF0;
  v22 = _Block_copy(&aBlock);
  v23 = objc_msgSend(v16, "actionWithTitle:style:handler:", v21, 1, v22);

  _Block_release(v22);
  v24 = v30;
  swift_release(v20);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_tableView], "reloadData");
}

void sub_10005A398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_presenter);

    if (v5)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_1000093F8(v6, (uint64_t)qword_1000B9F80);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Requested customize announce notifications finished", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

      v11 = *(_QWORD *)(v5 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(_BYTE *)(v11
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 72)) = 0;
      sub_100072410(0);
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_10005A4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_presenter);

    if (v5)
    {
      sub_100075CE0();
      swift_unknownObjectRelease(v5);
    }
  }
}

uint64_t sub_10005A59C()
{
  return type metadata accessor for HeadphoneAnnounceCustomizeViewController(0);
}

uint64_t type metadata accessor for HeadphoneAnnounceCustomizeViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9878;
  if (!qword_1000B9878)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphoneAnnounceCustomizeViewController);
  return result;
}

void sub_10005A5E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10001B534(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100089F50;
    v4[3] = &unk_100089F68;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_10005A670()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_type);
}

id sub_10005A6AC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  _QWORD v99[5];
  char v100[16];

  v2 = sub_100009F00(&qword_1000B9958);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UIBackgroundConfiguration(0);
  v97 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UIListContentConfiguration(0);
  v96 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99[0] = sub_100009F84(0, &qword_1000B9960, UITableViewCell_ptr);
  v14 = sub_100009F00(&qword_1000B9968);
  String.init<A>(describing:)(v99, v14);
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v18 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v17);

  if (!v18)
    v18 = objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
  IndexPath.section.getter();
  v19 = &v98[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_viewModel];
  swift_beginAccess(&v98[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_viewModel], v100, 0, 0);
  v20 = type metadata accessor for HeadphoneViewModel(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
  {
    v21 = (uint64_t *)&v19[*(int *)(v20 + 76)];
    v22 = v21[1];
    if (v22)
    {
      v23 = *v21;
      v24 = v21[2];
      v25 = v21[3];
      v26 = v21[4];
      v27 = (void *)v21[5];
      v28 = v21[6];
      v29 = v21[7];
      v31 = v21[8];
      v30 = v21[9];
      v32 = v21[10];
      v33 = (void *)v21[11];
      v35 = v21[12];
      v34 = v21[13];
      v85 = v24;
      v91 = v25;
      v84 = v26;
      v83 = v28;
      v93 = v29;
      v94 = v27;
      v90 = v31;
      v82 = v32;
      v88 = v34;
      v89 = v33;
      v86 = v35;
      v92 = v30;
      v81 = v22;
      v87 = v23;
      switch(v23)
      {
        case 0:
          v79 = v26 & 1;
          v72 = v35;
          v36 = v24;
          v37 = v25;
          v38 = v27;
          sub_10005B274(v23, v22, v24, v25, v26, v27, v28, v29, v31, v30, v32, v33, v72, v34);
          swift_bridgeObjectRetain(v22);
          v95 = v38;
          v77 = v36;
          v78 = v87;
          v80 = v22;
          goto LABEL_15;
        case 1:
          v79 = v32 & 1;
          v73 = v35;
          v37 = v30;
          v39 = v28;
          v40 = v29;
          sub_10005B274(v23, v22, v24, v25, v26, v27, v28, v29, v31, v30, v32, v33, v73, v34);
          swift_bridgeObjectRetain(v40);
          v95 = v89;
          v77 = v90;
          v78 = v39;
          v80 = v40;
          goto LABEL_15;
        case 2:
          v41 = v35;
          v42 = v34;
          v43 = v33;
          swift_bridgeObjectRetain(v41);
          swift_bridgeObjectRetain(v42);
          swift_bridgeObjectRetain(v22);
          swift_bridgeObjectRetain(v91);
          v44 = v94;
          swift_bridgeObjectRetain(v93);
          v45 = swift_bridgeObjectRetain(v92);
          v46 = IndexPath.row.getter(v45);
          if ((v46 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v46 < *(_QWORD *)(v86 + 16))
          {
            v47 = v86 + 48 * v46;
LABEL_14:
            v55 = *(_QWORD *)(v47 + 40);
            v78 = *(_QWORD *)(v47 + 32);
            v37 = *(_QWORD *)(v47 + 56);
            v77 = *(_QWORD *)(v47 + 48);
            v79 = *(unsigned __int8 *)(v47 + 64);
            v95 = *(id *)(v47 + 72);
            v80 = v55;
            swift_bridgeObjectRetain(v55);
LABEL_15:
            v75 = v37;
            swift_bridgeObjectRetain(v37);
            v56 = v95;
            v57 = v95;
            static UIListContentConfiguration.cell()();
            swift_bridgeObjectRetain(v37);
            v58 = v77;
            UIListContentConfiguration.text.setter(v77, v37);
            v76 = v57;
            UIListContentConfiguration.image.setter(v56);
            v99[3] = v10;
            v99[4] = &protocol witness table for UIListContentConfiguration;
            v59 = sub_10005B1E4(v99);
            (*(void (**)(_QWORD *, char *, uint64_t))(v96 + 16))(v59, v13, v10);
            v60 = UITableViewCell.contentConfiguration.setter(v99);
            static UIBackgroundConfiguration.listGroupedCell()(v60);
            v61 = objc_msgSend((id)objc_opt_self(UIColor), "quaternarySystemFillColor");
            UIBackgroundConfiguration.backgroundColor.setter(v61);
            v62 = v97;
            (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v5, v9, v6);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v5, 0, 1, v6);
            UITableViewCell.backgroundConfiguration.setter(v5);
            v63 = objc_msgSend(objc_allocWithZone((Class)UISwitch), "init");
            LOBYTE(v62) = v79;
            objc_msgSend(v63, "setOn:", v79);
            v74 = sub_100009F84(0, (unint64_t *)&unk_1000B9970, UIAction_ptr);
            v64 = swift_allocObject(&unk_1000A8AB0, 24, 7);
            swift_unknownObjectWeakInit(v64 + 16, v98);
            v65 = swift_allocObject(&unk_1000A8B28, 80, 7);
            v66 = v78;
            *(_QWORD *)(v65 + 16) = v64;
            *(_QWORD *)(v65 + 24) = v66;
            v67 = v80;
            *(_QWORD *)(v65 + 32) = v80;
            *(_QWORD *)(v65 + 40) = v58;
            v68 = v75;
            *(_QWORD *)(v65 + 48) = v75;
            *(_BYTE *)(v65 + 56) = v62;
            *(_DWORD *)(v65 + 57) = v99[0];
            *(_DWORD *)(v65 + 60) = *(_DWORD *)((char *)v99 + 3);
            *(_QWORD *)(v65 + 64) = v95;
            *(_QWORD *)(v65 + 72) = v63;
            v98 = (char *)v76;
            swift_bridgeObjectRetain(v68);
            swift_bridgeObjectRetain(v67);
            v69 = v63;
            v70 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10005B264, v65);
            objc_msgSend(v69, "addAction:forControlEvents:", v70, 4096);
            objc_msgSend(v18, "setAccessoryView:", v69);

            sub_10004DFCC(v87, v81, v85, v91, v84, v94, v83, v93, v90, v92, v82, v89, v86, v88);
            (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v6);
            (*(void (**)(char *, uint64_t))(v96 + 8))(v13, v10);

            swift_bridgeObjectRelease(v68);
            swift_bridgeObjectRelease(v67);
            return v18;
          }
          __break(1u);
LABEL_19:
          __break(1u);
LABEL_20:
          __break(1u);
          JUMPOUT(0x10005AE34);
        case 3:
          v48 = v25;
          v49 = v33;
          v50 = v35;
          v51 = v88;
          swift_bridgeObjectRetain(v50);
          swift_bridgeObjectRetain(v51);
          swift_bridgeObjectRetain(v22);
          swift_bridgeObjectRetain(v48);
          v52 = v94;
          swift_bridgeObjectRetain(v93);
          v53 = swift_bridgeObjectRetain(v92);
          v54 = IndexPath.row.getter(v53);
          if ((v54 & 0x8000000000000000) != 0)
            goto LABEL_19;
          if (v54 >= *(_QWORD *)(v51 + 16))
            goto LABEL_20;
          v47 = v51 + 48 * v54;
          goto LABEL_14;
        default:
          return v18;
      }
    }
  }
  return v18;
}

void sub_10005AE44(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  _BYTE v10[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_presenter);

    if (v9)
    {
      sub_100075A50(a3, (char)objc_msgSend(a4, "isOn"));
      swift_unknownObjectRelease(v9);
    }
  }
}

uint64_t sub_10005AFD8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10005AFFC(uint64_t a1)
{
  uint64_t v1;

  sub_10005A398(a1, v1);
}

uint64_t sub_10005B004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005B014(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10005B01C(uint64_t a1)
{
  uint64_t v1;

  sub_10005A4E4(a1, v1);
}

uint64_t sub_10005B024(unint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  if (a1 > 3)
    return 0;
  v2 = a1;
  v3 = v1 + OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_viewModel;
  swift_beginAccess(v3, v10, 0, 0);
  v4 = type metadata accessor for HeadphoneViewModel(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4);
  result = 0;
  if (v5)
    return result;
  v7 = v3 + *(int *)(v4 + 76);
  if (!*(_QWORD *)(v7 + 8))
    return 0;
  if (v2 < 2u)
    return 1;
  v8 = v7 + 96;
  v9 = v7 + 104;
  if (v2 == 2)
    v9 = v8;
  return *(_QWORD *)(*(_QWORD *)v9 + 16);
}

id sub_10005B0E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v14[5];

  v2 = type metadata accessor for UIListContentConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)&v14[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = 0;
  if ((a1 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    v7 = objc_msgSend(objc_allocWithZone((Class)UITableViewHeaderFooterView), "init");
    static UIListContentConfiguration.plainHeader()();
    if (a1 == 3)
      v8 = 19;
    else
      v8 = 20;
    v9 = sub_10001FF98(v8);
    UIListContentConfiguration.text.setter(v9, v10);
    v14[3] = v2;
    v14[4] = &protocol witness table for UIListContentConfiguration;
    v11 = sub_10005B1E4(v14);
    (*(void (**)(_QWORD *, char *, uint64_t))(v3 + 16))(v11, v6, v2);
    UITableViewHeaderFooterView.contentConfiguration.setter(v14);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return v7;
}

_QWORD *sub_10005B1E4(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_10005B220()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 80, 7);
}

void sub_10005B264(uint64_t a1)
{
  uint64_t v1;

  sub_10005AE44(a1, *(_QWORD *)(v1 + 16), v1 + 24, *(void **)(v1 + 72));
}

uint64_t sub_10005B274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14)
{
  id v18;
  id v19;
  uint64_t result;

  if (a2)
  {
    v18 = a12;
    swift_bridgeObjectRetain(a13);
    swift_bridgeObjectRetain(a14);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    v19 = a6;
    swift_bridgeObjectRetain(a8);
    return swift_bridgeObjectRetain(a10);
  }
  return result;
}

uint64_t sub_10005B304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B99E0);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B99E0);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10005B394(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  Swift::String v23;
  void *object;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  unint64_t v28;
  NSString v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  id v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t ObjCClassFromMetadata;
  id v51;
  Swift::String v52;
  void *v53;
  Swift::String v54;
  unint64_t v55;
  id v56;
  id v57;
  NSString v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  Class isa;
  uint64_t v97;
  id v98;
  id v99;
  id v100;
  char *v101;
  int v102;
  char v103[24];
  char v104[24];
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  objc_super v108;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for HeadphoneModel(0);
  v7 = __chkstk_darwin(v5, v6);
  v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  v12 = (char *)&v97 - v11;
  v108.receiver = v3;
  v108.super_class = ObjectType;
  objc_msgSendSuper2(&v108, "viewDidLoad");
  objc_msgSend(v3, "setDismissalType:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneEndCallUpsellViewController_presenter]);
  if (Strong)
  {
    v14 = Strong;
    v15 = Strong + 16;
    swift_beginAccess(Strong + 16, v104, 0, 0);
    sub_100013528(v15, (uint64_t)&v105);
    swift_unknownObjectRelease(v14);
    v16 = v107;
    if (v107)
    {
      v17 = sub_100013410(&v105, v107);
      v18 = *(_QWORD *)(v16 - 8);
      __chkstk_darwin(v17, v17);
      v20 = (uint64_t *)((char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_QWORD *))(v18 + 16))(v20);
      sub_100013570((uint64_t)&v105);
      v21 = *v20 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v21, v103, 0, 0);
      sub_1000135B0(v21, (uint64_t)v9);
      (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v16);
      sub_1000135F4((uint64_t)v9, (uint64_t)v12);
      v105 = 0;
      v106 = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease(v106);
      v105 = 0x5F6C6C6143646E45;
      v106 = 0xE800000000000000;
      v22 = *(_DWORD *)&v12[*(int *)(v5 + 124)];
      v102 = v22;
      v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
      object = v23._object;
      String.append(_:)(v23);
      swift_bridgeObjectRelease(object);
      v25._countAndFlagsBits = 1598833453;
      v25._object = (void *)0xE400000000000000;
      String.append(_:)(v25);
      LOBYTE(v102) = v12[144];
      v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
      v27 = v26._object;
      String.append(_:)(v26);
      swift_bridgeObjectRelease(v27);
      v28 = v106;
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
      v30 = (void *)objc_opt_self(UIImage);
      v31 = objc_msgSend(v30, "imageNamed:", v29);

      v100 = v31;
      if (v31)
      {
        v32 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v31);
      }
      else
      {
        v38 = objc_msgSend((id)objc_opt_self(SFHeadphoneProduct), "b607");
        v39 = objc_msgSend(v38, "productID");

        v105 = 0x5F6C6C6143646E45;
        v106 = 0xE800000000000000;
        v102 = v22;
        v40 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
        if (v22 == v39)
        {
          v42 = v41;
          String.append(_:)(*(Swift::String *)&v40);
          swift_bridgeObjectRelease(v42);
          v43 = 0x305F4C432DLL;
        }
        else
        {
          v44 = v41;
          String.append(_:)(*(Swift::String *)&v40);
          swift_bridgeObjectRelease(v44);
          v43 = 0x315F4C432DLL;
        }
        v45 = 0xE500000000000000;
        String.append(_:)(*(Swift::String *)&v43);
        v46 = v106;
        v47 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v46);
        v48 = objc_msgSend(v30, "imageNamed:", v47);

        v32 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v48);
      }
      v101 = v12;
      objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v49 = type metadata accessor for HeadphoneEndCallViewController();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v49);
      v51 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v105 = 0;
      v106 = 0xE000000000000000;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease(v106);
      v105 = 0x5F6C6C6143646E45;
      v106 = 0xE800000000000000;
      v102 = v22;
      v52._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
      v53 = v52._object;
      String.append(_:)(v52);
      swift_bridgeObjectRelease(v53);
      v54._countAndFlagsBits = 0x50656C62756F445FLL;
      v54._object = (void *)0xEC00000073736572;
      String.append(_:)(v54);
      v55 = v106;
      v56 = objc_allocWithZone((Class)BSUICAPackageView);
      v57 = v51;
      v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v55);
      v59 = objc_msgSend(v56, "initWithPackageName:inBundle:", v58, v57);

      v99 = v57;
      if (v59)
      {
        objc_msgSend(v59, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v60 = objc_msgSend(v3, "contentView");
        objc_msgSend(v60, "addSubview:", v32);

        v61 = objc_msgSend(v3, "contentView");
        objc_msgSend(v61, "addSubview:", v59);

        v62 = objc_msgSend(v3, "contentView");
        v63 = objc_msgSend(v62, "mainContentGuide");

        v98 = (id)objc_opt_self(NSLayoutConstraint);
        v64 = sub_100009F00((uint64_t *)&unk_1000B8730);
        v65 = swift_allocObject(v64, 112, 7);
        *(_OWORD *)(v65 + 16) = xmmword_1000881B0;
        v66 = objc_msgSend(v32, "topAnchor");
        v67 = objc_msgSend(v63, "topAnchor");
        v68 = objc_msgSend(v66, "constraintGreaterThanOrEqualToAnchor:", v67);

        *(_QWORD *)(v65 + 32) = v68;
        v69 = objc_msgSend(v32, "bottomAnchor");
        v70 = objc_msgSend(v63, "bottomAnchor");
        v71 = objc_msgSend(v69, "constraintLessThanOrEqualToAnchor:", v70);

        *(_QWORD *)(v65 + 40) = v71;
        v72 = objc_msgSend(v32, "centerYAnchor");
        v73 = objc_msgSend(v63, "centerYAnchor");
        v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

        *(_QWORD *)(v65 + 48) = v74;
        v75 = objc_msgSend(v32, "centerXAnchor");
        v76 = objc_msgSend(v63, "centerXAnchor");
        v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

        *(_QWORD *)(v65 + 56) = v77;
        v78 = objc_msgSend(v59, "topAnchor");
        v79 = objc_msgSend(v63, "topAnchor");
        v80 = objc_msgSend(v78, "constraintGreaterThanOrEqualToAnchor:", v79);

        *(_QWORD *)(v65 + 64) = v80;
        v81 = objc_msgSend(v59, "bottomAnchor");
        v82 = objc_msgSend(v63, "bottomAnchor");
        v83 = objc_msgSend(v81, "constraintLessThanOrEqualToAnchor:", v82);

        *(_QWORD *)(v65 + 72) = v83;
        v84 = objc_msgSend(v59, "heightAnchor");
        v85 = objc_msgSend(v84, "constraintEqualToConstant:", 180.0);

        *(_QWORD *)(v65 + 80) = v85;
        v86 = objc_msgSend(v59, "widthAnchor");
        v87 = objc_msgSend(v86, "constraintEqualToConstant:", 180.0);

        *(_QWORD *)(v65 + 88) = v87;
        v88 = objc_msgSend(v59, "centerYAnchor");
        v89 = objc_msgSend(v63, "centerYAnchor");
        v90 = objc_msgSend(v88, "constraintEqualToAnchor:", v89);

        *(_QWORD *)(v65 + 96) = v90;
        v91 = objc_msgSend(v59, "centerXAnchor");
        v92 = objc_msgSend(v63, "centerXAnchor");
        v93 = objc_msgSend(v91, "constraintEqualToAnchor:", v92);

        *(_QWORD *)(v65 + 104) = v93;
        v105 = v65;
        specialized Array._endMutation()(v94);
        v95 = v105;
        sub_10000B880();
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v95);
        objc_msgSend(v98, "activateConstraints:", isa);

        sub_100013638((uint64_t)v101);
      }
      else
      {
        __break(1u);
      }
      return;
    }
    sub_100013570((uint64_t)&v105);
  }
  if (qword_1000B7BB8 != -1)
    swift_once(&qword_1000B7BB8, sub_10005B304);
  v33 = type metadata accessor for Logger(0);
  v34 = sub_1000093F8(v33, (uint64_t)qword_1000B99E0);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Headphone Model is nil, exiting", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
  }

}

void sub_10005BF1C(uint64_t a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void **v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  void *v22;
  void (*v23)(uint64_t);
  uint64_t v24;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v4);

  v5 = *(_QWORD *)(a1 + 40);
  v6 = swift_allocObject(&unk_1000A8B98, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v23 = sub_10005C3F0;
  v24 = v6;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A8BB0;
  v8 = _Block_copy(&v19);
  v9 = (void *)objc_opt_self(PRXAction);
  v10 = objc_msgSend(v9, "actionWithTitle:style:handler:", v7, 0, v8);

  _Block_release(v8);
  v11 = v24;
  swift_release(v6);

  v12 = *(_QWORD *)(a1 + 56);
  v13 = swift_allocObject(&unk_1000A8B98, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v23 = sub_10005C430;
  v24 = v13;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A8BD8;
  v15 = _Block_copy(&v19);
  v16 = objc_msgSend(v9, "actionWithTitle:style:handler:", v14, 1, v15);

  _Block_release(v15);
  v17 = v24;
  swift_release(v13);
  v18 = objc_msgSend(v1, "addAction:", v16, swift_release(v17).n128_f64[0]);

}

void sub_10005C1AC(uint64_t a1, uint64_t a2, const char *a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneEndCallUpsellViewController_presenter);

    if (v9)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v10 = type metadata accessor for Logger(0);
      v11 = sub_1000093F8(v10, (uint64_t)qword_1000B9F80);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, a3, v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }

      swift_beginAccess(v9 + 16, &v16, 0, 0);
      v15 = *(_QWORD *)(v9 + 40);
      if (v15)
      {
        sub_100013410((_QWORD *)(v9 + 16), v15);
        a4();
      }
      sub_100072410(0);
      swift_unknownObjectRelease(v9);
    }
  }
}

uint64_t type metadata accessor for HeadphoneEndCallUpsellViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService36HeadphoneEndCallUpsellViewController);
}

uint64_t sub_10005C3BC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneEndCallUpsellViewController_type);
}

uint64_t sub_10005C3CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10005C3F0(uint64_t a1)
{
  uint64_t v1;

  sub_10005C1AC(a1, v1, "Requested Press Twice for end call gesture", sub_100042BD0);
}

uint64_t sub_10005C418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C428(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10005C430(uint64_t a1)
{
  uint64_t v1;

  sub_10005C1AC(a1, v1, "Requested Press Once for end call gesture", sub_100042BAC);
}

void sub_10005C460(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  id v18;
  Class isa;
  NSString v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v2 = v1;
  v4 = sub_10005D3D0(&OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager____lazy_storage___encoder, (uint64_t (*)(void))&type metadata accessor for JSONEncoder, (uint64_t (*)(void))&JSONEncoder.init());
  v5 = a1[1];
  v34 = *a1;
  v35 = v5;
  v36 = a1[2];
  v6 = sub_10005DDBC();
  v7 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v34, &type metadata for HeadphoneDigitalEngravingManager.Record, v6);
  v9 = v8;
  swift_release(v4);
  v10 = OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_localStorage;
  v11 = *(id *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_localStorage);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "dictionaryForKey:", v12);

  if (v13)
  {
    v14 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v14 = &_swiftEmptyDictionarySingleton;
  }
  v16 = *(_QWORD *)a1;
  v15 = *((_QWORD *)a1 + 1);
  *((_QWORD *)&v35 + 1) = &type metadata for Data;
  *(_QWORD *)&v34 = v7;
  *((_QWORD *)&v34 + 1) = v9;
  sub_1000324C0(&v34, v33);
  swift_bridgeObjectRetain(v15);
  sub_10002913C(v7, v9);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
  sub_10005DE80(v33, v16, v15, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(0x8000000000000000);
  v18 = *(id *)(v2 + v10);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setObject:forKey:", isa, v20);

  if (qword_1000B7BC0 != -1)
    swift_once(&qword_1000B7BC0, sub_10005CF40);
  v21 = type metadata accessor for Logger(0);
  sub_1000093F8(v21, (uint64_t)qword_1000B9A30);
  sub_10002913C(v7, v9);
  sub_10005DE00(a1);
  sub_10002913C(v7, v9);
  v22 = sub_10005DE00(a1);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v33[0] = v26;
    *(_DWORD *)v25 = 136315394;
    *(_QWORD *)&v34 = v7;
    *((_QWORD *)&v34 + 1) = v9;
    sub_10002913C(v7, v9);
    v27 = String.init<A>(reflecting:)(&v34, &type metadata for Data);
    v29 = v28;
    *(_QWORD *)&v34 = sub_10004B4F0(v27, v28, (uint64_t *)v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 8);
    swift_bridgeObjectRelease(v29);
    sub_10002931C(v7, v9);
    sub_10002931C(v7, v9);
    *(_WORD *)(v25 + 12) = 2080;
    *(_QWORD *)&v34 = v16;
    *((_QWORD *)&v34 + 1) = v15;
    swift_bridgeObjectRetain(v15);
    v30 = String.init<A>(reflecting:)(&v34, &type metadata for String);
    v32 = v31;
    *(_QWORD *)&v34 = sub_10004B4F0(v30, v31, (uint64_t *)v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 8);
    swift_bridgeObjectRelease(v32);
    sub_10005DE40(a1);
    sub_10005DE40(a1);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Storing engraving data received from AACP %s for:%s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

    sub_10002931C(v7, v9);
  }
  else
  {
    sub_10002931C(v7, v9);
    sub_10002931C(v7, v9);
    sub_10002931C(v7, v9);
    sub_10005DE40(a1);
    sub_10005DE40(a1);

  }
}

void sub_10005CAE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  id v7;
  NSString v8;
  id v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _BYTE v23[24];
  uint64_t v24;
  _QWORD v25[2];

  v7 = *(id *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_localStorage);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "dictionaryForKey:", v8);

  v10 = 0uLL;
  if (!v9)
  {
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    goto LABEL_13;
  }
  v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  if (!*(_QWORD *)(v11 + 16))
  {
    v22 = 0u;
    *(_OWORD *)v23 = 0u;
LABEL_10:
    swift_bridgeObjectRelease(v11);
    goto LABEL_11;
  }
  swift_bridgeObjectRetain(a2);
  v12 = sub_100034B60(a1, a2);
  if ((v13 & 1) == 0)
  {
    v22 = 0u;
    *(_OWORD *)v23 = 0u;
    swift_bridgeObjectRelease(a2);
    goto LABEL_10;
  }
  sub_1000250C8(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v22);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(v11);
  if (!*(_QWORD *)&v23[8])
  {
LABEL_11:
    sub_100025088((uint64_t)&v22);
    goto LABEL_12;
  }
  if ((swift_dynamicCast(v25, &v22, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_12:
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v10 = 0uLL;
    goto LABEL_13;
  }
  v15 = v25[0];
  v14 = v25[1];
  v16 = sub_10005D3D0(&OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager____lazy_storage___decoder, (uint64_t (*)(void))&type metadata accessor for JSONDecoder, (uint64_t (*)(void))&JSONDecoder.init());
  v17 = sub_10005DFB0();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v22, &type metadata for HeadphoneDigitalEngravingManager.Record, v15, v14, &type metadata for HeadphoneDigitalEngravingManager.Record, v17);
  sub_10002931C(v15, v14);
  swift_release(v16);
  v19 = *((_QWORD *)&v22 + 1);
  v18 = v22;
  v20 = v23[0];
  v10 = *(_OWORD *)&v23[8];
  v21 = v24;
LABEL_13:
  *(_QWORD *)a3 = v18;
  *(_QWORD *)(a3 + 8) = v19;
  *(_QWORD *)(a3 + 16) = v20;
  *(_OWORD *)(a3 + 24) = v10;
  *(_QWORD *)(a3 + 40) = v21;
}

uint64_t sub_10005CF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9A30);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9A30);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t *sub_10005CFD0@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_10005CFE8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_10005CFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10005EC04();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10005D050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10005EC04();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10005D09C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10005D0D4 + 4 * byte_100089FF0[a1]))(0xD000000000000010, 0x800000010008F740);
}

uint64_t sub_10005D0D4()
{
  return 0x6574617473;
}

uint64_t sub_10005D0E8(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_10005D110()
{
  unsigned __int8 *v0;

  return sub_10005D09C(*v0);
}

uint64_t sub_10005D118@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10005E3E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10005D13C()
{
  return 0;
}

void sub_10005D148(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_10005D154(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10005E31C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10005D17C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10005E31C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10005D1A4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE v20[23];
  char v21;
  _BYTE v22[16];

  v3 = v1;
  v5 = sub_100009F00(&qword_1000B9AA0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1[3];
  v11 = a1[4];
  sub_100013410(a1, v10);
  v12 = sub_10005E31C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys, v12, v10, v11);
  v13 = *v3;
  v14 = v3[1];
  v20[0] = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v13, v14, v20, v5);
  if (!v2)
  {
    v20[0] = *((_BYTE *)v3 + 16);
    v21 = 1;
    v15 = sub_10005E360();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v20, &v21, v5, &type metadata for HeadphoneDigitalEngravingManager.Record.State, v15);
    sub_10003CFDC((uint64_t)(v3 + 3), (uint64_t)v22, &qword_1000B93C0);
    sub_10003CFDC((uint64_t)v22, (uint64_t)v20, &qword_1000B93C0);
    v21 = 2;
    v16 = sub_10005E3A4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v20, &v21, v5, &type metadata for Data, v16);
    v17 = v3[5];
    v20[0] = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v17, v20, v5);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

double sub_10005D358@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_10005E584(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_10005D398(_QWORD *a1)
{
  return sub_10005D1A4(a1);
}

uint64_t sub_10005D3D0(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  v5 = *(_QWORD *)(v3 + *a1);
  if (v5)
  {
    v6 = v5;
  }
  else
  {
    v8 = v3;
    v9 = a2();
    swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
    v6 = a3();
    v10 = *(_QWORD *)(v8 + v4);
    *(_QWORD *)(v8 + v4) = v6;
    swift_retain(v6);
    swift_release(v10);
    v5 = 0;
  }
  swift_retain(v5);
  return v6;
}

void sub_10005D4E4(uint64_t a1, void *a2, void *aBlock)
{
  uint64_t v4;
  void (*v5)(void);
  void *v6;
  uint64_t v7;
  id v8;

  v5 = *(void (**)(void))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = _Block_copy(aBlock);
  v7 = swift_allocObject(&unk_1000A8CE0, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  swift_retain(v4);
  v8 = a2;
  v5();
  swift_release(v4);
  swift_release(v7);

}

void sub_10005D578(uint64_t a1, unint64_t a2, uint64_t a3)
{
  Class isa;
  Class v5;

  if (a2 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  v5 = isa;
  (*(void (**)(uint64_t))(a3 + 16))(a3);

}

double sub_10005D638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void (*v8)(uint64_t, uint64_t, void *);
  double result;
  _QWORD v10[5];
  uint64_t v11;

  v10[4] = a2;
  v11 = a3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10005D6DC;
  v10[3] = &unk_1000A8C80;
  v7 = _Block_copy(v10);
  v8 = *(void (**)(uint64_t, uint64_t, void *))(a4 + 16);
  swift_retain(a3);
  v8(a4, a1, v7);
  _Block_release(v7);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

double sub_10005D6DC(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  void (*v4)(void *, unint64_t);
  id v5;
  unint64_t v6;
  unint64_t v7;
  double result;

  v2 = a2;
  v4 = *(void (**)(void *, unint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    swift_retain(v3);
    v5 = v2;
    v2 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v7 = v6;

  }
  else
  {
    swift_retain(v3);
    v7 = 0xF000000000000000;
  }
  v4(v2, v7);
  sub_10002E1A0((uint64_t)v2, v7);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

id sub_10005D75C(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v4;
  id v5;
  char *v6;
  NSString v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager____lazy_storage___decoder] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager____lazy_storage___encoder] = 0;
  v4 = &v2[OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = objc_allocWithZone((Class)NSUserDefaults);
  v6 = v2;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "initWithSuiteName:", v7);

  if (!v8)
    v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  *(_QWORD *)&v6[OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_localStorage] = v8;

  v10.receiver = v6;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, "init");
}

double sub_10005D87C(void *a1)
{
  uint64_t v1;
  id v3;
  double result;
  void *v5;
  unsigned int v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, void (*)(uint64_t, unint64_t), _QWORD *);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE v16[48];
  _BYTE v17[8];
  uint64_t v18;
  __int128 v19;
  char v20;
  __int128 v21;
  uint64_t v22;

  v3 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", objc_msgSend(a1, "productIdentifier"));
  if (v3)
  {
    v5 = v3;
    v6 = objc_msgSend(v3, "supportsDigitalEngraving");

    if (v6)
    {
      v7 = objc_msgSend(a1, "addressString");
      if (v7)
      {
        v8 = v7;
        v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        v11 = v10;

        sub_10005CAE0(v9, v11, (uint64_t)v16);
        sub_10005DFF4((uint64_t)v16);
        sub_10003CFDC((uint64_t)v16, (uint64_t)v17, &qword_1000B9408);
        if (v18)
          goto LABEL_5;
        *(_QWORD *)&v19 = v9;
        *((_QWORD *)&v19 + 1) = v11;
        v20 = 0;
        v21 = xmmword_1000893A0;
        v22 = 0;
        swift_bridgeObjectRetain(v11);
        sub_10005C460(&v19);
        swift_bridgeObjectRelease(v11);
        sub_10002E1A0(0, 0xF000000000000000);
        v12 = *(void (**)(void *, void (*)(uint64_t, unint64_t), _QWORD *))(v1 + OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler);
        if (!v12)
        {
LABEL_5:
          swift_bridgeObjectRelease(v11);
        }
        else
        {
          v13 = *(_QWORD *)(v1
                          + OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler
                          + 8);
          v14 = swift_allocObject(&unk_1000A8C18, 24, 7);
          swift_unknownObjectWeakInit(v14 + 16, v1);
          v15 = (_QWORD *)swift_allocObject(&unk_1000A8C40, 40, 7);
          v15[2] = v9;
          v15[3] = v11;
          v15[4] = v14;
          sub_10004E82C((uint64_t)v12, v13);
          swift_retain(v14);
          v12(a1, sub_10005E078, v15);
          sub_10004D7DC((uint64_t)v12, v13);
          swift_release(v14);
          *(_QWORD *)&result = swift_release(v15).n128_u64[0];
        }
      }
    }
  }
  return result;
}

void sub_10005DA54(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t Strong;
  void *v23;
  uint64_t v24;
  uint64_t v25[3];
  __int128 v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a2 >> 60 != 15)
  {
    v31 = v5;
    v32 = v6;
    v11 = a5 + 16;
    sub_10002913C(a1, a2);
    if (qword_1000B7BC0 != -1)
      swift_once(&qword_1000B7BC0, sub_10005CF40);
    v12 = type metadata accessor for Logger(0);
    sub_1000093F8(v12, (uint64_t)qword_1000B9A30);
    sub_10002913C(a1, a2);
    v13 = sub_10002913C(a1, a2);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v25[0] = v24;
      *(_DWORD *)v16 = 136315138;
      *(_QWORD *)&v26 = a1;
      *((_QWORD *)&v26 + 1) = a2;
      sub_10002913C(a1, a2);
      v17 = String.init<A>(reflecting:)(&v26, &type metadata for Data);
      v18 = a3;
      v20 = v19;
      *(_QWORD *)&v26 = sub_10004B4F0(v17, v19, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, (char *)&v26 + 8);
      v21 = v20;
      a3 = v18;
      swift_bridgeObjectRelease(v21);
      sub_10002E1A0(a1, a2);
      sub_10002E1A0(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Engraving data received from AACP %s", v16, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {
      sub_10002E1A0(a1, a2);
      sub_10002E1A0(a1, a2);
    }

    *(_QWORD *)&v26 = a3;
    *((_QWORD *)&v26 + 1) = a4;
    v27 = 1;
    v28 = a1;
    v29 = a2;
    v30 = 0;
    swift_beginAccess(v11, v25, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v11);
    if (Strong)
    {
      v23 = (void *)Strong;
      sub_10004D6D0(a1, a2);
      swift_bridgeObjectRetain(a4);
      sub_10005C460(&v26);
      sub_10002E1A0(a1, a2);
      swift_bridgeObjectRelease(a4);
      sub_10002E1A0(a1, a2);

    }
    else
    {
      sub_10002E1A0(a1, a2);
    }
  }
}

uint64_t type metadata accessor for HeadphoneDigitalEngravingManager()
{
  return objc_opt_self(_TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager);
}

unint64_t sub_10005DDBC()
{
  unint64_t result;

  result = qword_1000B9A90;
  if (!qword_1000B9A90)
  {
    result = swift_getWitnessTable(&unk_10008A080, &type metadata for HeadphoneDigitalEngravingManager.Record);
    atomic_store(result, (unint64_t *)&qword_1000B9A90);
  }
  return result;
}

_QWORD *sub_10005DE00(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = a1[3];
  v3 = a1[4];
  swift_bridgeObjectRetain(a1[1]);
  sub_10004D6D0(v2, v3);
  return a1;
}

_QWORD *sub_10005DE40(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = a1[3];
  v3 = a1[4];
  swift_bridgeObjectRelease(a1[1]);
  sub_10002E1A0(v2, v3);
  return a1;
}

_OWORD *sub_10005DE80(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_100034B60(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        sub_100015D14(v19);
        return sub_1000324C0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100035878();
      goto LABEL_7;
    }
    sub_100035364(v15, a4 & 1);
    v21 = sub_100034B60(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_100035660(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

unint64_t sub_10005DFB0()
{
  unint64_t result;

  result = qword_1000B9A98;
  if (!qword_1000B9A98)
  {
    result = swift_getWitnessTable(&unk_10008A058, &type metadata for HeadphoneDigitalEngravingManager.Record);
    atomic_store(result, (unint64_t *)&qword_1000B9A98);
  }
  return result;
}

uint64_t sub_10005DFF4(uint64_t a1)
{
  sub_10004DDE4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  return a1;
}

uint64_t sub_10005E028()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005E04C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10005E078(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;

  sub_10005DA54(a1, a2, v2[2], v2[3], v2[4]);
}

double sub_10005E084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10005D638(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_10005E08C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005E09C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005E0A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10005E0C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_10005D578(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t destroy for HeadphoneDigitalEngravingManager.Record(_QWORD *a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease(a1[1]);
  v3 = a1[4];
  if (v3 >> 60 != 15)
    return sub_10002931C(a1[3], v3);
  return result;
}

uint64_t initializeWithCopy for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain(v4);
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_10002913C(v7, v6);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v6;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (uint64_t *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_10002913C(*v6, *(_QWORD *)(a2 + 32));
      v10 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v9;
      *(_QWORD *)(a1 + 32) = v7;
      sub_10002931C(v10, v11);
      goto LABEL_8;
    }
    sub_100029EC8(a1 + 24);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v8 = *v6;
  sub_10002913C(*v6, *(_QWORD *)(a2 + 32));
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v7;
LABEL_8:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 32);
    if (v8 >> 60 != 15)
    {
      v9 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v6;
      *(_QWORD *)(a1 + 32) = v8;
      sub_10002931C(v9, v7);
      goto LABEL_6;
    }
    sub_100029EC8(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
LABEL_6:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record;
}

unint64_t sub_10005E31C()
{
  unint64_t result;

  result = qword_1000B9AA8;
  if (!qword_1000B9AA8)
  {
    result = swift_getWitnessTable(&unk_10008A264, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000B9AA8);
  }
  return result;
}

unint64_t sub_10005E360()
{
  unint64_t result;

  result = qword_1000B9AB0;
  if (!qword_1000B9AB0)
  {
    result = swift_getWitnessTable(&unk_10008A23C, &type metadata for HeadphoneDigitalEngravingManager.Record.State);
    atomic_store(result, (unint64_t *)&qword_1000B9AB0);
  }
  return result;
}

unint64_t sub_10005E3A4()
{
  unint64_t result;

  result = qword_1000B9AB8;
  if (!qword_1000B9AB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1000B9AB8);
  }
  return result;
}

uint64_t sub_10005E3E8(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  char v8;

  if (a1 == 0xD000000000000010)
  {
    v4 = 0x800000010008F740;
    if (a2 == 0x800000010008F740)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x800000010008F740, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    v6 = 0xE500000000000000;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6574617473, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x800000010008F760)
  {
    v7 = 0x800000010008F760;
LABEL_17:
    swift_bridgeObjectRelease(v7);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x800000010008F760, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_17;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x800000010008F780)
  {
    swift_bridgeObjectRelease(0x800000010008F780);
    return 3;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000010008F780, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_10005E584@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  char v28;

  v5 = sub_100009F00(&qword_1000B9AC0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100013410(a1, v10);
  v12 = sub_10005E31C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys, v12, v10, v11);
  if (v2)
    return sub_100015D14(a1);
  LOBYTE(v25) = 0;
  v13 = KeyedDecodingContainer.decode(_:forKey:)(&v25, v5);
  v15 = v14;
  v28 = 1;
  v16 = sub_10005E834();
  swift_bridgeObjectRetain(v15);
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v25, &type metadata for HeadphoneDigitalEngravingManager.Record.State, &v28, v5, &type metadata for HeadphoneDigitalEngravingManager.Record.State, v16);
  v27 = v25;
  v28 = 2;
  v17 = sub_10005E878();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v25, &type metadata for Data, &v28, v5, &type metadata for Data, v17);
  v18 = v25;
  LOBYTE(v25) = 3;
  v23 = v26;
  v24 = v18;
  sub_10004D6D0(v18, v26);
  v19 = KeyedDecodingContainer.decode(_:forKey:)(&v25, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRetain(v15);
  v21 = v23;
  v20 = v24;
  sub_10004D6D0(v24, v23);
  sub_10002E1A0(v20, v21);
  swift_bridgeObjectRelease(v15);
  sub_100015D14(a1);
  swift_bridgeObjectRelease(v15);
  result = sub_10002E1A0(v20, v21);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v19;
  return result;
}

unint64_t sub_10005E834()
{
  unint64_t result;

  result = qword_1000B9AC8;
  if (!qword_1000B9AC8)
  {
    result = swift_getWitnessTable(&unk_10008A214, &type metadata for HeadphoneDigitalEngravingManager.Record.State);
    atomic_store(result, (unint64_t *)&qword_1000B9AC8);
  }
  return result;
}

unint64_t sub_10005E878()
{
  unint64_t result;

  result = qword_1000B9AD0;
  if (!qword_1000B9AD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1000B9AD0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10005E908 + 4 * byte_100089FF9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10005E93C + 4 * byte_100089FF4[v4]))();
}

uint64_t sub_10005E93C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005E944(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10005E94CLL);
  return result;
}

uint64_t sub_10005E958(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10005E960);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10005E964(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005E96C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record.CodingKeys()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys;
}

uint64_t getEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10005EA64 + 4 * byte_10008A003[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10005EA98 + 4 * byte_100089FFE[v4]))();
}

uint64_t sub_10005EA98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005EAA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10005EAA8);
  return result;
}

uint64_t sub_10005EAB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10005EABCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10005EAC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10005EAC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record.State()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record.State;
}

unint64_t sub_10005EAE8()
{
  unint64_t result;

  result = qword_1000B9AD8;
  if (!qword_1000B9AD8)
  {
    result = swift_getWitnessTable(&unk_10008A134, &type metadata for HeadphoneDigitalEngravingManager.Record.State);
    atomic_store(result, (unint64_t *)&qword_1000B9AD8);
  }
  return result;
}

unint64_t sub_10005EB30()
{
  unint64_t result;

  result = qword_1000B9AE0;
  if (!qword_1000B9AE0)
  {
    result = swift_getWitnessTable(&unk_10008A1EC, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000B9AE0);
  }
  return result;
}

unint64_t sub_10005EB78()
{
  unint64_t result;

  result = qword_1000B9AE8;
  if (!qword_1000B9AE8)
  {
    result = swift_getWitnessTable(&unk_10008A15C, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000B9AE8);
  }
  return result;
}

unint64_t sub_10005EBC0()
{
  unint64_t result;

  result = qword_1000B9AF0;
  if (!qword_1000B9AF0)
  {
    result = swift_getWitnessTable(&unk_10008A184, &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1000B9AF0);
  }
  return result;
}

unint64_t sub_10005EC04()
{
  unint64_t result;

  result = qword_1000B9AF8;
  if (!qword_1000B9AF8)
  {
    result = swift_getWitnessTable(&unk_10008A0BC, &type metadata for HeadphoneDigitalEngravingManager.Record.State);
    atomic_store(result, (unint64_t *)&qword_1000B9AF8);
  }
  return result;
}

id sub_10005EC54()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
  }
  else
  {
    v3 = String._bridgeToObjectiveC()();
    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend((id)objc_opt_self(AMSBag), "bagForProfile:profileVersion:", v3, v4);

    v6 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v5;
    v2 = v5;
    swift_unknownObjectRelease(v6);
    v1 = 0;
  }
  swift_unknownObjectRetain(v1);
  return v2;
}

double sub_10005ED10@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_100034BC4(a1), (v6 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_10005ED60(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD))
{
  return a2(a1, 0);
}

uint64_t sub_10005ED88(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  return a2(a1, 1);
}

void sub_10005EDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSString a6, uint64_t a7, uint64_t a8)
{
  id v12;
  id v13;
  NSString v14;
  NSString v15;
  NSString v16;
  NSString v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void **aBlock;
  uint64_t v31;
  void (*v32)(uint64_t, void *);
  void *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;

  v12 = sub_10005EC54();
  v13 = objc_allocWithZone((Class)AMSMarketingItemTask);
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v18 = objc_msgSend(v13, "initWithBag:clientIdentifier:clientVersion:placement:serviceType:", v12, v14, v15, v16, v17);

  swift_unknownObjectRelease(v12);
  v19 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
  v20 = objc_msgSend(v19, "ams_activeiTunesAccount");

  objc_msgSend(v18, "setAccount:", v20);
  if (a6)
    a6 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setOfferHints:", a6, a5);

  v21 = objc_msgSend(v18, "perform");
  v22 = swift_allocObject(&unk_1000A8F98, 32, 7);
  *(_QWORD *)(v22 + 16) = a7;
  *(_QWORD *)(v22 + 24) = a8;
  v34 = sub_10005F934;
  v35 = v22;
  aBlock = _NSConcreteStackBlock;
  v31 = 1107296256;
  v32 = sub_100011720;
  v33 = &unk_1000A8FB0;
  v23 = _Block_copy(&aBlock);
  v24 = v35;
  swift_retain(a8);
  objc_msgSend(v21, "addSuccessBlock:", v23, swift_release(v24).n128_f64[0]);
  _Block_release(v23);
  v25 = swift_allocObject(&unk_1000A8FE8, 32, 7);
  *(_QWORD *)(v25 + 16) = a7;
  *(_QWORD *)(v25 + 24) = a8;
  v34 = sub_10005F970;
  v35 = v25;
  aBlock = _NSConcreteStackBlock;
  v31 = 1107296256;
  v32 = sub_100015974;
  v33 = &unk_1000A9000;
  v26 = _Block_copy(&aBlock);
  v27 = v35;
  swift_retain(a8);
  objc_msgSend(v21, "addErrorBlock:", v26, swift_release(v27).n128_f64[0]);
  _Block_release(v26);

}

uint64_t sub_10005F090()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for AMSMarketingOffersClient()
{
  return objc_opt_self(_TtC20HeadphoneProxService24AMSMarketingOffersClient);
}

uint64_t sub_10005F0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9B00);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9B00);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void *sub_10005F164(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  char *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  const char *v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  void *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  NSString v38;
  NSString v39;
  Class isa;
  id v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54[5];
  __int128 v55;
  __int128 v56;

  if (qword_1000B7BC8 != -1)
    swift_once(&qword_1000B7BC8, sub_10005F0D4);
  v2 = type metadata accessor for Logger(0);
  sub_1000093F8(v2, (uint64_t)qword_1000B9B00);
  v3 = swift_bridgeObjectRetain_n(a1, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  v6 = (char *)&type metadata for Any;
  if (os_log_type_enabled(v4, v5))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v54[0] = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = swift_bridgeObjectRetain(a1);
    v10 = Dictionary.description.getter(v9, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v12 = v11;
    swift_bridgeObjectRelease(a1);
    v13 = v10;
    v6 = (char *)&type metadata for Any;
    *(_QWORD *)&v55 = sub_10004B4F0(v13, v12, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, (char *)&v55 + 8);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Decoding %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  v52 = 0xD00000000000001CLL;
  v53 = 0x800000010008F800;
  AnyHashable.init<A>(_:)(v54, &v52, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v14 = sub_100034BC4((uint64_t)v54), (v15 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v55);
  }
  else
  {
    v55 = 0u;
    v56 = 0u;
  }
  sub_10002E16C((uint64_t)v54);
  if (!*((_QWORD *)&v56 + 1))
  {
    v17 = sub_100025088((uint64_t)&v55);
LABEL_16:
    v21 = Logger.logObject.getter(v17);
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      v24 = "Cert list is missing";
      goto LABEL_49;
    }
    goto LABEL_50;
  }
  v16 = sub_100009F00(&qword_1000B9BC0);
  v17 = swift_dynamicCast(&v52, &v55, (char *)&type metadata for Any + 8, v16, 6);
  if ((v17 & 1) == 0)
    goto LABEL_16;
  v18 = v52;
  v52 = 0x6C65646F4DLL;
  v53 = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v54, &v52, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v19 = sub_100034BC4((uint64_t)v54), (v20 & 1) != 0))
  {
    sub_1000250C8(*(_QWORD *)(a1 + 56) + 32 * v19, (uint64_t)&v55);
  }
  else
  {
    v55 = 0u;
    v56 = 0u;
  }
  sub_10002E16C((uint64_t)v54);
  if (!*((_QWORD *)&v56 + 1))
  {
    swift_bridgeObjectRelease(v18);
    v46 = sub_100025088((uint64_t)&v55);
LABEL_47:
    v21 = Logger.logObject.getter(v46);
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      v24 = "Model is missing";
      goto LABEL_49;
    }
LABEL_50:

    return 0;
  }
  if ((swift_dynamicCast(&v52, &v55, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
    v46 = swift_bridgeObjectRelease(v18);
    goto LABEL_47;
  }
  v25 = v53;
  v51 = *(_QWORD *)(v18 + 16);
  if (v51)
  {
    v26 = 0;
    v27 = &type metadata for String;
    v50 = v18;
    while (1)
    {
      v28 = *(_QWORD *)(v18 + 8 * v26 + 32);
      v52 = 0xD000000000000013;
      v53 = 0x800000010008F820;
      swift_bridgeObjectRetain(v28);
      AnyHashable.init<A>(_:)(v54, &v52, v27, &protocol witness table for String);
      if (*(_QWORD *)(v28 + 16) && (v29 = sub_100034BC4((uint64_t)v54), (v30 & 1) != 0))
      {
        sub_1000250C8(*(_QWORD *)(v28 + 56) + 32 * v29, (uint64_t)&v55);
      }
      else
      {
        v55 = 0u;
        v56 = 0u;
      }
      sub_10002E16C((uint64_t)v54);
      if (!*((_QWORD *)&v56 + 1))
      {
        swift_bridgeObjectRelease(v25);
        swift_bridgeObjectRelease(v28);
        sub_100025088((uint64_t)&v55);
        v47 = v18;
        goto LABEL_54;
      }
      if ((swift_dynamicCast(&v52, &v55, (char *)&type metadata for Any + 8, v27, 6) & 1) == 0)
      {
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(v25);
        v47 = v28;
LABEL_54:
        swift_bridgeObjectRelease(v47);
        v48 = swift_bridgeObjectRelease(&_swiftEmptyArrayStorage);
        v21 = Logger.logObject.getter(v48);
        v22 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v23 = 0;
          v24 = "Serial missing";
LABEL_49:
          _os_log_impl((void *)&_mh_execute_header, v21, v22, v24, v23, 2u);
          swift_slowDealloc(v23, -1, -1);
        }
        goto LABEL_50;
      }
      v31 = v53;
      *(_QWORD *)&v55 = 0xD000000000000011;
      *((_QWORD *)&v55 + 1) = 0x800000010008F840;
      AnyHashable.init<A>(_:)(v54, &v55, v27, &protocol witness table for String);
      if (*(_QWORD *)(v28 + 16) && (v32 = sub_100034BC4((uint64_t)v54), (v33 & 1) != 0))
      {
        sub_1000250C8(*(_QWORD *)(v28 + 56) + 32 * v32, (uint64_t)&v55);
      }
      else
      {
        v55 = 0u;
        v56 = 0u;
      }
      v34 = v27;
      swift_bridgeObjectRelease(v28);
      sub_10002E16C((uint64_t)v54);
      if (!*((_QWORD *)&v56 + 1))
        break;
      v35 = v6;
      if (!swift_dynamicCast(&v52, &v55, v6 + 8, &type metadata for Data, 6))
        goto LABEL_37;
      v37 = v52;
      v36 = v53;
LABEL_38:
      swift_bridgeObjectRetain(v25);
      sub_10004D6D0(v37, v36);
      v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
      if (v36 >> 60 == 15)
      {
        isa = 0;
      }
      else
      {
        isa = Data._bridgeToObjectiveC()().super.isa;
        sub_10002E1A0(v37, v36);
      }
      v41 = objc_msgSend(objc_allocWithZone((Class)AMSDeviceOfferRegistrationItem), "initWithSerialNumber:model:validationData:", v38, v39, isa);

      v42 = v41;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
      v44 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v43 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v44 >= v43 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
      ++v26;
      v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
      specialized Array._endMutation()(v45);
      sub_10002E1A0(v37, v36);

      v6 = v35;
      v18 = v50;
      v27 = v34;
      if (v51 == v26)
      {
        swift_bridgeObjectRelease(v25);
        swift_bridgeObjectRelease(v50);
        return &_swiftEmptyArrayStorage;
      }
    }
    v35 = v6;
    sub_100025088((uint64_t)&v55);
LABEL_37:
    v37 = 0;
    v36 = 0xF000000000000000;
    goto LABEL_38;
  }
  swift_bridgeObjectRelease(v53);
  swift_bridgeObjectRelease(v18);
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_10005F910()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005F934(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 16))(a1, 0);
}

uint64_t sub_10005F958(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005F968(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005F970(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, 1);
}

uint64_t storeEnumTagSinglePayload for AMSMarketingOffersClient.RegistrationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10005F9D4 + 4 * byte_10008A2C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10005F9F4 + 4 * byte_10008A2C5[v4]))();
}

_BYTE *sub_10005F9D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10005F9F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10005F9FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10005FA04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10005FA0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10005FA14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AMSMarketingOffersClient.RegistrationError()
{
  return &type metadata for AMSMarketingOffersClient.RegistrationError;
}

unint64_t sub_10005FA34()
{
  unint64_t result;

  result = qword_1000B9BC8;
  if (!qword_1000B9BC8)
  {
    result = swift_getWitnessTable(&unk_10008A3A4, &type metadata for AMSMarketingOffersClient.RegistrationError);
    atomic_store(result, (unint64_t *)&qword_1000B9BC8);
  }
  return result;
}

void sub_10005FA84(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  Swift::String v23;
  void *object;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  NSString v45;
  void *v46;
  id v47;
  id v48;
  Swift::String v49;
  void *v50;
  Swift::String v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  NSString v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  Class isa;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  id v131;
  id v132;
  char *v133;
  uint64_t v134;
  _BYTE v135[24];
  char v136[24];
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  objc_super v140;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for HeadphoneModel(0);
  v7 = __chkstk_darwin(v5, v6);
  v9 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  v12 = (char *)&v127 - v11;
  v140.receiver = v3;
  v140.super_class = ObjectType;
  objc_msgSendSuper2(&v140, "viewDidLoad");
  objc_msgSend(v3, "setDismissalType:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_presenter]);
  if (Strong)
  {
    v14 = Strong;
    v15 = Strong + 16;
    swift_beginAccess(Strong + 16, v136, 0, 0);
    sub_100013528(v15, (uint64_t)&v137);
    swift_unknownObjectRelease(v14);
    v16 = v139;
    if (v139)
    {
      v17 = sub_100013410(&v137, v139);
      v18 = *(_QWORD *)(v16 - 8);
      __chkstk_darwin(v17, v17);
      v20 = (uint64_t *)((char *)&v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_QWORD *))(v18 + 16))(v20);
      sub_100013570((uint64_t)&v137);
      v21 = *v20 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v21, v135, 0, 0);
      sub_1000135B0(v21, (uint64_t)v9);
      (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v16);
      sub_1000135F4((uint64_t)v9, (uint64_t)v12);
      v137 = 0;
      v138 = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease(v138);
      v137 = 0x7461527472616548;
      v138 = 0xEA00000000005F65;
      v22 = (id)*(int *)(v5 + 124);
      LODWORD(v134) = *(_DWORD *)((char *)v22 + (_QWORD)v12);
      v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
      object = v23._object;
      String.append(_:)(v23);
      swift_bridgeObjectRelease(object);
      v25._countAndFlagsBits = 1598833503;
      v25._object = (void *)0xE400000000000000;
      String.append(_:)(v25);
      LOBYTE(v134) = v12[144];
      v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
      v27 = v26._object;
      String.append(_:)(v26);
      swift_bridgeObjectRelease(v27);
      v29 = v137;
      v28 = v138;
      if (qword_1000B7B08 != -1)
        swift_once(&qword_1000B7B08, sub_10001FF20);
      v30 = type metadata accessor for Logger(0);
      v31 = (void *)sub_1000093F8(v30, (uint64_t)qword_1000BC740);
      v32 = swift_bridgeObjectRetain_n(v28, 2);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = swift_slowAlloc(12, -1);
        v132 = v22;
        v36 = (uint8_t *)v35;
        v37 = swift_slowAlloc(32, -1);
        v131 = v31;
        v38 = v37;
        v137 = v37;
        *(_DWORD *)v36 = 136315138;
        swift_bridgeObjectRetain(v28);
        v134 = sub_10004B4F0(v29, v28, &v137);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, v135);
        swift_bridgeObjectRelease_n(v28, 3);
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Heart Rate: Image Name: %s", v36, 0xCu);
        swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        v39 = v36;
        v22 = v132;
        swift_slowDealloc(v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v28, 2);
      }
      v45 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
      v46 = (void *)objc_opt_self(UIImage);
      v47 = objc_msgSend(v46, "imageNamed:", v45);

      v132 = v47;
      v133 = v12;
      if (v47)
      {
        v48 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v47);
      }
      else
      {
        v137 = 0;
        v138 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v138);
        v137 = 0x7461527472616548;
        v138 = 0xEA00000000005F65;
        LODWORD(v134) = *(_DWORD *)((char *)v22 + (_QWORD)v12);
        v49._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
        v50 = v49._object;
        String.append(_:)(v49);
        swift_bridgeObjectRelease(v50);
        v51._countAndFlagsBits = 0x315F4C435FLL;
        v51._object = (void *)0xE500000000000000;
        String.append(_:)(v51);
        v53 = v137;
        v52 = v138;
        v54 = swift_bridgeObjectRetain_n(v138, 2);
        v55 = Logger.logObject.getter(v54);
        v56 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v55, v56))
        {
          v57 = (uint8_t *)swift_slowAlloc(12, -1);
          v58 = swift_slowAlloc(32, -1);
          v137 = v58;
          *(_DWORD *)v57 = 136315138;
          swift_bridgeObjectRetain(v52);
          v134 = sub_10004B4F0(v53, v52, &v137);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v134, v135);
          swift_bridgeObjectRelease_n(v52, 3);
          _os_log_impl((void *)&_mh_execute_header, v55, v56, "Heart Rate: Fallback Image Name: %s", v57, 0xCu);
          swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v58, -1, -1);
          swift_slowDealloc(v57, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v52, 2);
        }
        v59 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v52);
        v60 = objc_msgSend(v46, "imageNamed:", v59);

        v48 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v60);
      }
      objc_msgSend(v48, "setContentMode:", 1);
      objc_msgSend(v48, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v61 = objc_msgSend(v3, "contentView");
      objc_msgSend(v61, "addSubview:", v48);

      v62 = objc_msgSend(v3, "contentView");
      v128 = OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_titleLabel;
      objc_msgSend(v62, "addSubview:", *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_titleLabel]);

      v63 = objc_msgSend(v3, "contentView");
      v129 = OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_subTitleLabel;
      objc_msgSend(v63, "addSubview:", *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_subTitleLabel]);

      v131 = (id)objc_opt_self(NSLayoutConstraint);
      v64 = sub_100009F00((uint64_t *)&unk_1000B8730);
      v65 = swift_allocObject(v64, 112, 7);
      *(_OWORD *)(v65 + 16) = xmmword_1000881B0;
      v66 = objc_msgSend(v48, "topAnchor");
      v67 = objc_msgSend(v3, "contentView");
      v68 = objc_msgSend(v67, "mainContentGuide");

      v69 = objc_msgSend(v68, "topAnchor");
      v70 = objc_msgSend(v66, "constraintGreaterThanOrEqualToAnchor:constant:", v69, 0.0);

      *(_QWORD *)(v65 + 32) = v70;
      v71 = objc_msgSend(v48, "leadingAnchor");
      v72 = objc_msgSend(v3, "contentView");
      v73 = objc_msgSend(v72, "mainContentGuide");

      v74 = objc_msgSend(v73, "leadingAnchor");
      v75 = objc_msgSend(v71, "constraintEqualToAnchor:", v74);

      *(_QWORD *)(v65 + 40) = v75;
      v130 = v48;
      v76 = objc_msgSend(v48, "trailingAnchor");
      v77 = objc_msgSend(v3, "contentView");
      v78 = objc_msgSend(v77, "mainContentGuide");

      v79 = objc_msgSend(v78, "trailingAnchor");
      v80 = objc_msgSend(v76, "constraintEqualToAnchor:", v79);

      *(_QWORD *)(v65 + 48) = v80;
      v81 = v128;
      v82 = objc_msgSend(*(id *)&v3[v128], "topAnchor");
      v83 = objc_msgSend(v48, "bottomAnchor");
      v84 = objc_msgSend(v82, "constraintGreaterThanOrEqualToAnchor:constant:", v83, PRXMainContentMargin);

      *(_QWORD *)(v65 + 56) = v84;
      v85 = objc_msgSend(*(id *)&v3[v81], "leadingAnchor");
      v86 = objc_msgSend(v3, "contentView");
      v87 = objc_msgSend(v86, "mainContentGuide");

      v88 = objc_msgSend(v87, "leadingAnchor");
      v89 = objc_msgSend(v85, "constraintEqualToAnchor:", v88);

      *(_QWORD *)(v65 + 64) = v89;
      v90 = objc_msgSend(*(id *)&v3[v81], "trailingAnchor");
      v91 = objc_msgSend(v3, "contentView");
      v92 = objc_msgSend(v91, "mainContentGuide");

      v93 = objc_msgSend(v92, "trailingAnchor");
      v94 = objc_msgSend(v90, "constraintEqualToAnchor:", v93);

      *(_QWORD *)(v65 + 72) = v94;
      v95 = v129;
      v96 = objc_msgSend(*(id *)&v3[v129], "topAnchor");
      v97 = objc_msgSend(*(id *)&v3[v81], "bottomAnchor");
      v98 = objc_msgSend(v96, "constraintEqualToAnchor:constant:", v97, PRXMinimumInterItemMargin);

      *(_QWORD *)(v65 + 80) = v98;
      v99 = objc_msgSend(*(id *)&v3[v95], "leadingAnchor");
      v100 = objc_msgSend(v3, "contentView");
      v101 = objc_msgSend(v100, "mainContentGuide");

      v102 = objc_msgSend(v101, "leadingAnchor");
      v103 = objc_msgSend(v99, "constraintEqualToAnchor:", v102);

      *(_QWORD *)(v65 + 88) = v103;
      v104 = objc_msgSend(*(id *)&v3[v95], "trailingAnchor");
      v105 = objc_msgSend(v3, "contentView");
      v106 = objc_msgSend(v105, "mainContentGuide");

      v107 = objc_msgSend(v106, "trailingAnchor");
      v108 = objc_msgSend(v104, "constraintEqualToAnchor:", v107);

      *(_QWORD *)(v65 + 96) = v108;
      v109 = objc_msgSend(*(id *)&v3[v95], "bottomAnchor");
      v110 = objc_msgSend(v3, "contentView");
      v111 = objc_msgSend(v110, "mainContentGuide");

      v112 = objc_msgSend(v111, "bottomAnchor");
      v113 = objc_msgSend(v109, "constraintEqualToAnchor:", v112);

      *(_QWORD *)(v65 + 104) = v113;
      v137 = v65;
      specialized Array._endMutation()(v114);
      v115 = v137;
      sub_10000B880();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v115);
      objc_msgSend(v131, "activateConstraints:", isa);

      type metadata accessor for HeadphoneProxFeatureManager(0);
      v117 = static HeadphoneProxFeatureManager.shared.getter();
      v118 = (uint64_t)v133;
      v119 = *((_QWORD *)v133 + 16);
      v120 = *((_QWORD *)v133 + 17);
      v121 = sub_100009F00(&qword_1000B9680);
      v122 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature(0);
      v123 = *(_QWORD *)(v122 - 8);
      v124 = *(unsigned __int8 *)(v123 + 80);
      v125 = (v124 + 32) & ~v124;
      v126 = swift_allocObject(v121, v125 + *(_QWORD *)(v123 + 72), v124 | 7);
      *(_OWORD *)(v126 + 16) = xmmword_100087710;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v123 + 104))(v126 + v125, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.heartRateMonitor(_:), v122);
      swift_bridgeObjectRetain(v120);
      dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)(v119, v120, v126);

      swift_release(v117);
      swift_bridgeObjectRelease(v120);
      swift_bridgeObjectRelease(v126);
      sub_100013638(v118);
      return;
    }
    sub_100013570((uint64_t)&v137);
  }
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v40 = type metadata accessor for Logger(0);
  v41 = sub_1000093F8(v40, (uint64_t)qword_1000BC740);
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v44 = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Heart Rate: Headphone Model is nil, exiting", v44, 2u);
    swift_slowDealloc(v44, -1, -1);
  }

}

void sub_1000609AC(uint64_t a1)
{
  char *v1;
  id v3;
  NSString v4;
  id v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v3 = *(id *)&v1[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_titleLabel];
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setText:", v4);

  v5 = *(id *)&v1[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_subTitleLabel];
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setText:", v6);

  objc_msgSend(v1, "setShouldCenterAlignText:", 1);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = swift_allocObject(&unk_1000A9168, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v1);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v14[4] = sub_100060DB0;
  v15 = v8;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100011720;
  v14[3] = &unk_1000A9180;
  v10 = _Block_copy(v14);
  v11 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v9, 1, v10);

  _Block_release(v10);
  v12 = v15;
  swift_release(v8);
  v13 = objc_msgSend(v1, "addAction:", v11, swift_release(v12).n128_f64[0]);

}

void sub_100060B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_presenter);

    if (v5)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_1000093F8(v6, (uint64_t)qword_1000B9F80);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Requested Not Now for HeartRate Monitor", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

      sub_100072410(0);
      swift_unknownObjectRelease(v5);
    }
  }
}

uint64_t type metadata accessor for HeadhponeHeartRateViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService32HeadhponeHeartRateViewController);
}

uint64_t sub_100060D7C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_type);
}

uint64_t sub_100060D8C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100060DB0(uint64_t a1)
{
  uint64_t v1;

  sub_100060B84(a1, v1);
}

uint64_t sub_100060DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100060DC8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id sub_100060DD0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_trainingView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_horizontalConstraint] = 0;
  v6 = OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_titleLabel;
  v7 = objc_allocWithZone((Class)PRXLabel);
  v8 = v3;
  v9 = objc_msgSend(v7, "initWithStyle:", 4);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setTextAlignment:", 1);
  *(_QWORD *)&v3[v6] = v9;
  v10 = OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_subTitleLabel;
  v11 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 1);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setTextAlignment:", 1);
  *(_QWORD *)&v8[v10] = v11;
  *(_QWORD *)&v8[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v8[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_type] = 27;

  v13.receiver = v8;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, "initWithContentView:", a1);
}

uint64_t sub_100060F20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_100060F28(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];

  v2 = objc_msgSend(objc_allocWithZone((Class)HPConnectionInfoDelegate), "init");
  v3 = type metadata accessor for AMSMarketingOffersClient();
  v4 = swift_allocObject(v3, 24, 7);
  *(_QWORD *)(v4 + 16) = 0;
  v14[3] = v3;
  v14[4] = &off_1000A8F70;
  v14[0] = v4;
  v5 = type metadata accessor for HeadphoneUpsellClient();
  v6 = swift_allocObject(v5, 112, 7);
  v7 = sub_100062754((uint64_t)v14, v3);
  __chkstk_darwin(v7, v7);
  v9 = (_QWORD *)((char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  v11 = *v9;
  swift_retain(v4);
  v12 = sub_10006282C((uint64_t)v2, v11, v6);
  sub_100015D14(v14);
  swift_release(v4);
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1000A6578;
  *a1 = v12;
}

void sub_100061058(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_1000610B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9C28);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9C28);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100061144(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _BYTE *v4;
  objc_class *ObjectType;
  char *v8;
  _QWORD *v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  NSString v14;
  id v15;
  objc_super v17;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3, a2);
  v8 = &v4[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor];
  *((_QWORD *)v8 + 4) = 0;
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v9 = &v4[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_presenter];
  *v9 = 0;
  v9[1] = 0;
  v9[2] = 0;
  v4[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_homePressed] = 0;
  v10 = objc_allocWithZone((Class)type metadata accessor for HeadphoneRouter());
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  v13 = &v11[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router];
  *(_QWORD *)v13 = v12;
  *((_QWORD *)v13 + 1) = &off_1000A76F8;

  if (a2)
  {
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v14 = 0;
  }
  v17.receiver = v11;
  v17.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v17, "initWithNibName:bundle:", v14, a3);

  return v15;
}

void *sub_100061358(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint8_t *v24;
  Class *v25;
  Class isa;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  void *result;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  _BYTE v103[24];
  _QWORD v104[3];
  uint64_t v105;
  _UNKNOWN **v106;
  __int128 v107;
  __int128 v108;
  _UNKNOWN **v109;

  v4 = v3;
  v8 = type metadata accessor for HeadphoneModel(0);
  v10 = __chkstk_darwin(v8, v9);
  v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  v15 = (char *)&v99 - v14;
  v16 = objc_msgSend(a1, "userInfo");
  if (v16)
  {
    v17 = v16;
    v102 = v15;
    v99 = a2;
    v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    if (qword_1000B7BD0 != -1)
      swift_once(&qword_1000B7BD0, sub_1000610B4);
    v19 = type metadata accessor for Logger(0);
    sub_1000093F8(v19, (uint64_t)qword_1000B9C28);
    v20 = swift_bridgeObjectRetain(v18);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    v23 = os_log_type_enabled(v21, v22);
    v100 = a3;
    v101 = v4;
    if (v23)
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = (Class *)swift_slowAlloc(8, -1);
      *(_DWORD *)v24 = 138412290;
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v107 = isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, (char *)&v107 + 8);
      *v25 = isa;
      swift_bridgeObjectRelease(v18);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Launched with userInfo: %@", v24, 0xCu);
      v27 = sub_100009F00(&qword_1000B93C8);
      swift_arrayDestroy(v25, 1, v27);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease(v18);
    }
    v35 = (uint64_t)v102;
    sub_10002B970(v18, (uint64_t)v102);
    if (*(_BYTE *)(v35 + *(int *)(v8 + 120)))
    {
      sub_1000135B0(v35, (uint64_t)v12);
      v36 = type metadata accessor for HeadphoneFakePairingSession();
      swift_allocObject(v36, 112, 7);
      sub_10004E6C8();
      v38 = v37;
      sub_100060F28((uint64_t *)&v107);
      v39 = sub_100062754((uint64_t)&v107, *((uint64_t *)&v108 + 1));
      __chkstk_darwin(v39, v39);
      v41 = (uint64_t *)((char *)&v99 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v42 + 16))(v41);
      v43 = *v41;
      v44 = type metadata accessor for HeadphoneUpsellClient();
      v105 = v44;
      v106 = &off_1000A6578;
      v104[0] = v43;
      v45 = type metadata accessor for HeadphoneInteractor(0);
      v46 = swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
      v47 = sub_100062754((uint64_t)v104, v44);
      __chkstk_darwin(v47, v47);
      v49 = (uint64_t *)((char *)&v99 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v50 + 16))(v49);
      v51 = sub_100062A30((uint64_t)v12, v38, *v49, v46);
      swift_release(v38);
    }
    else
    {
      sub_1000135B0(v35, (uint64_t)v12);
      v52 = objc_msgSend(objc_allocWithZone((Class)SFBluetoothPairingSession), "init");
      sub_100060F28((uint64_t *)&v107);
      v53 = sub_100062754((uint64_t)&v107, *((uint64_t *)&v108 + 1));
      __chkstk_darwin(v53, v53);
      v55 = (uint64_t *)((char *)&v99 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v56 + 16))(v55);
      v57 = *v55;
      v58 = type metadata accessor for HeadphoneUpsellClient();
      v105 = v58;
      v106 = &off_1000A6578;
      v104[0] = v57;
      v45 = type metadata accessor for HeadphoneInteractor(0);
      v59 = swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
      v60 = sub_100062754((uint64_t)v104, v58);
      __chkstk_darwin(v60, v60);
      v62 = (uint64_t *)((char *)&v99 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v63 + 16))(v62);
      v51 = sub_10006323C((uint64_t)v12, (uint64_t)v52, *v62, v59);

    }
    sub_100015D14(v104);
    sub_100015D14(&v107);
    *((_QWORD *)&v108 + 1) = v45;
    v109 = &off_1000A7DC0;
    *(_QWORD *)&v107 = v51;
    v64 = v101;
    v65 = v101 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor;
    swift_beginAccess(v101 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor, v104, 33, 0);
    sub_1000631A0((uint64_t)&v107, v65, &qword_1000B81E0);
    swift_endAccess(v104);
    sub_1000135B0(v35, (uint64_t)v12);
    v66 = type metadata accessor for HeadphonePresenter(0);
    swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
    v67 = sub_100071814((uint64_t)v12);
    v68 = (uint64_t *)(v64 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_presenter);
    v69 = *(_QWORD *)(v64 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_presenter);
    *v68 = v67;
    v68[1] = (uint64_t)&off_1000A9AC8;
    v68[2] = (uint64_t)&off_1000A9B08;
    swift_unknownObjectRelease(v69);
    v70 = *v68;
    if (!*v68)
      goto LABEL_21;
    v71 = v64 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor;
    swift_beginAccess(v64 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor, v104, 0, 0);
    sub_100013528(v71, (uint64_t)&v107);
    swift_beginAccess(v70 + 16, v103, 33, 0);
    swift_unknownObjectRetain(v70);
    sub_1000631A0((uint64_t)&v107, v70 + 16, &qword_1000B81E0);
    swift_endAccess(v103);
    swift_unknownObjectRelease(v70);
    v72 = *v68;
    if (*v68)
    {
      v73 = *(_QWORD *)(v64 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router);
      *(_QWORD *)(v72 + 64) = *(_QWORD *)(v64
                                        + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router
                                        + 8);
      swift_unknownObjectWeakAssign(v72 + 56, v73);
      if (*v68)
      {
        sub_100071BD8();
        v75 = *v68;
        v76 = (uint64_t *)(v64 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router);
        v78 = (uint64_t *)(v64 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router + 8);
        v77 = *(_QWORD *)(v64 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router);
        if (*v68)
        {
          v79 = v68[2];
          *((_QWORD *)&v108 + 1) = swift_getObjectType(*v68, v74);
          v109 = *(_UNKNOWN ***)(v79 + 8);
          *(_QWORD *)&v107 = v75;
LABEL_24:
          v81 = v77 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter;
          swift_beginAccess(v77 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter, v103, 33, 0);
          swift_unknownObjectRetain(v77);
          swift_unknownObjectRetain(v75);
          sub_1000631A0((uint64_t)&v107, v81, &qword_1000B8C48);
          swift_endAccess(v103);
          swift_unknownObjectRelease(v77);
          v82 = *v76 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_delegate;
          *(_QWORD *)(v82 + 8) = &off_1000A91B0;
          swift_unknownObjectWeakAssign(v82, v64);
          v83 = v64 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor;
          swift_beginAccess(v64 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor, &v107, 33, 0);
          v84 = *(_QWORD *)(v83 + 24);
          if (v84)
          {
            v85 = *v68;
            if (*v68)
              v86 = v68[1];
            else
              v86 = 0;
            v87 = *(_QWORD *)(v83 + 32);
            sub_100062754(v83, *(_QWORD *)(v83 + 24));
            v88 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 16);
            v89 = swift_unknownObjectRetain(v85);
            v88(v89, v86, v84, v87);
            v90 = *(_QWORD *)(v83 + 24);
            if (v90)
            {
              v91 = *v76;
              v92 = *v78;
              v93 = *(_QWORD *)(v83 + 32);
              sub_100062754(v83, *(_QWORD *)(v83 + 24));
              v94 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 40);
              v95 = swift_unknownObjectRetain(v91);
              v94(v95, v92, v90, v93);
            }
          }
          swift_endAccess(&v107);
          swift_beginAccess(v83, v103, 32, 0);
          if (*(_QWORD *)(v83 + 24))
          {
            sub_100015D34(v83, (uint64_t)&v107);
            swift_endAccess(v103);
            sub_100013410(&v107, *((uint64_t *)&v108 + 1));
            v96 = swift_allocObject(&unk_1000A91F8, 32, 7);
            v97 = v99;
            v98 = v100;
            *(_QWORD *)(v96 + 16) = v99;
            *(_QWORD *)(v96 + 24) = v98;
            sub_10004E82C(v97, v98);
            sub_10003F640((uint64_t)sub_100063210, v96);
            swift_release(v96);
            sub_100013638(v35);
            return (void *)sub_100015D14(&v107);
          }
          else
          {
            sub_100013638(v35);
            return (void *)swift_endAccess(v103);
          }
        }
LABEL_23:
        v75 = 0;
        v109 = 0;
        v107 = 0u;
        v108 = 0u;
        goto LABEL_24;
      }
      v80 = OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router;
    }
    else
    {
LABEL_21:
      v80 = OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router;
    }
    v76 = (uint64_t *)(v64 + v80);
    v78 = (uint64_t *)(v64 + v80 + 8);
    v77 = *(_QWORD *)(v64 + v80);
    goto LABEL_23;
  }
  if (qword_1000B7BD0 != -1)
    swift_once(&qword_1000B7BD0, sub_1000610B4);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_1000093F8(v28, (uint64_t)qword_1000B9C28);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Received nil when trying to unwrap userInfo", v32, 2u);
    swift_slowDealloc(v32, -1, -1);
  }

  result = (void *)sub_1000266B8();
  if (result)
  {
    v34 = result;
    objc_msgSend(result, "dismiss");
    return (void *)swift_unknownObjectRelease(v34);
  }
  return result;
}

id sub_100061D68(char a1, uint64_t a2)
{
  void *v2;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id result;
  void *v9;
  void *v10;
  int homeButtonType;
  uint64_t v12;
  objc_super v13;

  v13.receiver = v2;
  v13.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v13, "viewDidAppear:", a1 & 1);
  v4 = (void *)sub_1000266B8();
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setStatusBarHidden:withDuration:", 1, 0.3);
    swift_unknownObjectRelease(v5);
  }
  v6 = (void *)sub_1000266B8();
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "setAllowsBanners:", 1);
    swift_unknownObjectRelease(v7);
  }
  result = (id)sub_1000266B8();
  if (result)
  {
    v9 = result;
    result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      v10 = result;
      homeButtonType = MobileGestalt_get_homeButtonType();

      if (homeButtonType >= 0)
        v12 = 16 * (homeButtonType != 2);
      else
        v12 = 16;
      objc_msgSend(v9, "setDesiredHardwareButtonEvents:", v12);
      return (id)swift_unknownObjectRelease(v9);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100061EA8(char a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];
  char v19[24];
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for HeadphoneModel(0);
  v7 = __chkstk_darwin(v5, v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v10);
  v12 = &v18[-v11];
  v20.receiver = v2;
  v20.super_class = ObjectType;
  objc_msgSendSuper2(&v20, "viewWillAppear:", a1 & 1);
  v13 = &v2[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor];
  result = swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor], v19, 0, 0);
  v15 = *((_QWORD *)v13 + 3);
  if (v15)
  {
    v16 = *sub_100013410(v13, v15) + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess(v16, v18, 0, 0);
    sub_1000135B0(v16, (uint64_t)v9);
    sub_1000135F4((uint64_t)v9, (uint64_t)v12);
    v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router];
    swift_unknownObjectRetain(v17);
    sub_1000310C4((uint64_t)v2, (uint64_t)v12);
    swift_unknownObjectRelease(v17);
    return sub_100013638((uint64_t)v12);
  }
  return result;
}

void sub_10006204C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[32];

  if (a1)
  {
    v2 = v1;
    v4 = swift_bridgeObjectRetain(a1);
    sub_100062274(v4);
    v6 = v5;
    swift_bridgeObjectRelease(a1);
    if ((v6 & 1) != 0)
    {
      v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor);
      swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor, v22, 0, 0);
      v8 = v7[3];
      if (!v8
        || (v9 = *sub_100013410(v7, v8) + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model,
            swift_beginAccess(v9, v21, 0, 0),
            *(_BYTE *)(v9 + 120) != 11))
      {
        if (qword_1000B7BD0 != -1)
          swift_once(&qword_1000B7BD0, sub_1000610B4);
        v10 = type metadata accessor for Logger(0);
        v11 = sub_1000093F8(v10, (uint64_t)qword_1000B9C28);
        v12 = Logger.logObject.getter(v11);
        v13 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v14 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, v13, "Home button pressed", v14, 2u);
          swift_slowDealloc(v14, -1, -1);
        }

        v15 = OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_homePressed;
        if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_homePressed) & 1) != 0
          || (v16 = MKBGetDeviceLockState(0), (v16 - 1) > 1))
        {
          v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router);
          swift_unknownObjectRetain(v20);
          sub_10002ECCC();
          swift_unknownObjectRelease(v20);
        }
        else
        {
          v17 = Logger.logObject.getter(v16);
          v18 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v17, v18))
          {
            v19 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v19 = 0;
            _os_log_impl((void *)&_mh_execute_header, v17, v18, "ignoring first home button press to unlock", v19, 2u);
            swift_slowDealloc(v19, -1, -1);
          }

          *(_BYTE *)(v2 + v15) = 1;
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100062274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  unsigned __int8 v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  void *v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_100009F84(0, &qword_1000B9C88, SBUIRemoteAlertButtonAction_ptr);
    v5 = sub_1000626CC();
    v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    v1 = v27[0];
    v25 = v27[1];
    v7 = v27[2];
    v8 = v27[3];
    v9 = v27[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v24 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v17 = v8;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    v21 = __CocoaSet.Iterator.next()(v6);
    if (!v21)
      goto LABEL_34;
    v22 = v21;
    v26 = v21;
    v23 = sub_100009F84(0, &qword_1000B9C88, SBUIRemoteAlertButtonAction_ptr);
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
    v15 = v28;
    swift_unknownObjectRelease(v22);
    if (!v15)
      goto LABEL_34;
LABEL_13:
    v16 = objc_msgSend(v15, "events");

    if ((v16 & 0x10) != 0)
      goto LABEL_34;
  }
  if (v9)
  {
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v14 = v13 | (v8 << 6);
LABEL_12:
    v15 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v14);
    if (!v15)
      goto LABEL_34;
    goto LABEL_13;
  }
  v18 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v18 >= v24)
      goto LABEL_34;
    v19 = *(_QWORD *)(v25 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v17 + 2;
      if (v17 + 2 >= v24)
        goto LABEL_34;
      v19 = *(_QWORD *)(v25 + 8 * v8);
      if (!v19)
      {
        v8 = v17 + 3;
        if (v17 + 3 >= v24)
          goto LABEL_34;
        v19 = *(_QWORD *)(v25 + 8 * v8);
        if (!v19)
        {
          v8 = v17 + 4;
          if (v17 + 4 >= v24)
            goto LABEL_34;
          v19 = *(_QWORD *)(v25 + 8 * v8);
          if (!v19)
          {
            v8 = v17 + 5;
            if (v17 + 5 >= v24)
              goto LABEL_34;
            v19 = *(_QWORD *)(v25 + 8 * v8);
            if (!v19)
            {
              v20 = v17 + 6;
              while (v24 != v20)
              {
                v19 = *(_QWORD *)(v25 + 8 * v20++);
                if (v19)
                {
                  v8 = v20 - 1;
                  goto LABEL_31;
                }
              }
LABEL_34:
              sub_1000324D0(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v9 = (v19 - 1) & v19;
    v14 = __clz(__rbit64(v19)) + (v8 << 6);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t type metadata accessor for HeadphoneFlowViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService27HeadphoneFlowViewController);
}

unint64_t sub_1000626CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B9C90;
  if (!qword_1000B9C90)
  {
    v1 = sub_100009F84(255, &qword_1000B9C88, SBUIRemoteAlertButtonAction_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000B9C90);
  }
  return result;
}

uint64_t sub_100062724()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100062748()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_100062754(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_10006277C(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a4();
  v7 = (void *)v6;
  v8 = *a1 + 8;
  if (v6)
    v10 = v6;
  else
    v10 = 0;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
  *a1 = v8;
  v9 = *a2;
  if (*a2)
  {
    *v9 = v7;
    *a2 = v9 + 1;
  }
  else
  {

  }
}

uint64_t sub_10006282C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  uint64_t v27;
  _UNKNOWN **v28;
  __int128 v29;
  uint64_t v30;
  _UNKNOWN **v31;

  v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11, v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v15, v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100009F84(0, &qword_1000B9CB8, &off_1000A4F40);
  v31 = &off_1000A6E20;
  *(_QWORD *)&v29 = a1;
  v27 = type metadata accessor for AMSMarketingOffersClient();
  v28 = &off_1000A8F70;
  *(_QWORD *)&v26 = a2;
  v19 = sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v19);
  v25 = _swiftEmptyArrayStorage;
  v20 = sub_1000639AC();
  v21 = sub_100009F00(&qword_1000B9CA0);
  v22 = sub_1000639F4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v21, v22, v11, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v6);
  *(_QWORD *)(a3 + 96) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000025, 0x800000010008FA70, v18, v14, v10, 0);
  *(_QWORD *)(a3 + 104) = 0;
  sub_100063A9C(&v29, a3 + 16);
  sub_100063A9C(&v26, a3 + 56);
  return a3;
}

uint64_t sub_100062A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  id v37;
  _QWORD *v38;
  id v39;
  id v40;
  NSString v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void **aBlock;
  uint64_t v67;
  void (*v68)(uint64_t, void *);
  void *v69;
  void *v70;
  uint64_t v71;
  _QWORD v72[5];

  v64 = a2;
  v65 = a1;
  v63 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v6 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63, v7);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72[3] = type metadata accessor for HeadphoneUpsellClient();
  v72[4] = &off_1000A6578;
  v72[0] = a3;
  *(_QWORD *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit(a4 + 16, 0);
  v18 = a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate;
  *(_QWORD *)(v18 + 8) = 0;
  swift_unknownObjectWeakInit(v18, 0);
  *(_BYTE *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_allowRepairAutoConnect) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_wantsTemporaryPairing) = 0;
  v19 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_workingQueue;
  v20 = sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v20);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v21 = sub_1000639AC();
  v22 = sub_100009F00(&qword_1000B9CA0);
  v23 = sub_1000639F4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v22, v23, v10, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v63);
  *(_QWORD *)(a4 + v19) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000025, 0x800000010008F9B0, v17, v13, v9, 0);
  v24 = (_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  *v24 = 0;
  v24[1] = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_hasAutoConnected) = 0;
  v25 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_settings;
  v26 = objc_allocWithZone((Class)NSUbiquitousKeyValueStore);
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v26, "initWithStoreIdentifier:type:", v27, 1);

  objc_msgSend(v28, "synchronize");
  *(_QWORD *)(a4 + v25) = v28;
  v29 = a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate;
  v30 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_assetFetchDuration) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_didSubmitMetrics) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager) = 0;
  v31 = a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo;
  v32 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v33 = v65;
  sub_1000135B0(v65, a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model);
  v34 = (_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  v35 = v64;
  *v34 = v64;
  v34[1] = &off_1000A8430;
  sub_100015D34((uint64_t)v72, a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_offersClient);
  v36 = (void *)objc_opt_self(UNNotificationSettingsCenter);
  swift_unknownObjectRetain(v35);
  v37 = objc_msgSend(v36, "currentNotificationSettingsCenter");
  v38 = (_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter);
  v38[3] = sub_100009F84(0, &qword_1000B9CB0, UNNotificationSettingsCenter_ptr);
  v38[4] = &off_1000AA020;
  *v38 = v37;
  v39 = 0;
  if (*(_BYTE *)(v33 + *(int *)(type metadata accessor for HeadphoneModel(0) + 80)) == 1)
  {
    v40 = objc_allocWithZone((Class)PowerUISmartChargeClientAudioAccessories);
    v41 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend(v40, "initWithClientName:", v41);

  }
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_smartChargeClient) = v39;
  type metadata accessor for HeadphoneProxFeatureManager(0);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager) = static HeadphoneProxFeatureManager.shared.getter();
  v42 = objc_msgSend(objc_allocWithZone((Class)CBDiscovery), "init");
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery) = v42;
  objc_msgSend(v42, "setDiscoveryFlags:", 0x80000200000);
  objc_msgSend(v42, "setBleScanRate:", 50);
  v43 = objc_msgSend(objc_allocWithZone((Class)SFDeviceDiscovery), "init");
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery) = v43;
  v44 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery;
  objc_msgSend(v43, "setChangeFlags:", 13);
  objc_msgSend(v43, "setDiscoveryFlags:", 2);
  objc_msgSend(v43, "setScanRate:", 40);
  v45 = swift_allocObject(&unk_1000A9220, 24, 7);
  swift_weakInit(v45 + 16, a4);
  v70 = sub_100063A64;
  v71 = v45;
  aBlock = _NSConcreteStackBlock;
  v67 = 1107296256;
  v68 = sub_100015974;
  v69 = &unk_1000A92D8;
  v46 = _Block_copy(&aBlock);
  v47 = v71;
  v48 = v43;
  objc_msgSend(v48, "setDeviceFoundHandler:", v46, swift_release(v47).n128_f64[0]);
  _Block_release(v46);

  v49 = *(void **)(a4 + v44);
  v50 = swift_allocObject(&unk_1000A9220, 24, 7);
  swift_weakInit(v50 + 16, a4);
  v70 = sub_100063A84;
  v71 = v50;
  aBlock = _NSConcreteStackBlock;
  v67 = 1107296256;
  v68 = sub_100015974;
  v69 = &unk_1000A9300;
  v51 = _Block_copy(&aBlock);
  v52 = v71;
  v53 = v49;
  objc_msgSend(v53, "setDeviceLostHandler:", v51, swift_release(v52).n128_f64[0]);
  _Block_release(v51);

  v54 = *(void **)(a4 + v44);
  v55 = swift_allocObject(&unk_1000A9220, 24, 7);
  swift_weakInit(v55 + 16, a4);
  v70 = sub_100063A8C;
  v71 = v55;
  aBlock = _NSConcreteStackBlock;
  v67 = 1107296256;
  v68 = sub_100061058;
  v69 = &unk_1000A9328;
  v56 = _Block_copy(&aBlock);
  v57 = v71;
  v58 = v54;
  objc_msgSend(v58, "setDeviceChangedHandler:", v56, swift_release(v57).n128_f64[0]);
  _Block_release(v56);

  v59 = *(void **)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery);
  v60 = swift_allocObject(&unk_1000A9220, 24, 7);
  swift_weakInit(v60 + 16, a4);
  v70 = sub_100063A94;
  v71 = v60;
  aBlock = _NSConcreteStackBlock;
  v67 = 1107296256;
  v68 = sub_100015974;
  v69 = &unk_1000A9350;
  v61 = _Block_copy(&aBlock);
  objc_msgSend(v59, "setDeviceFoundHandler:", v61, swift_release(v71).n128_f64[0]);
  _Block_release(v61);
  sub_100015D14(v72);
  sub_100013638(v65);
  return a4;
}

uint64_t sub_1000631A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100009F00(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000631E4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100063210()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  __break(1u);
  return result;
}

uint64_t sub_10006323C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  id v37;
  _QWORD *v38;
  id v39;
  id v40;
  NSString v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void **aBlock;
  uint64_t v67;
  void (*v68)(uint64_t, void *);
  void *v69;
  void *v70;
  uint64_t v71;
  _QWORD v72[5];

  v64 = a2;
  v65 = a1;
  v63 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v6 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63, v7);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14, v15);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72[3] = type metadata accessor for HeadphoneUpsellClient();
  v72[4] = &off_1000A6578;
  v72[0] = a3;
  *(_QWORD *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit(a4 + 16, 0);
  v18 = a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate;
  *(_QWORD *)(v18 + 8) = 0;
  swift_unknownObjectWeakInit(v18, 0);
  *(_BYTE *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_allowRepairAutoConnect) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_wantsTemporaryPairing) = 0;
  v19 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_workingQueue;
  v20 = sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v20);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v21 = sub_1000639AC();
  v22 = sub_100009F00(&qword_1000B9CA0);
  v23 = sub_1000639F4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v22, v23, v10, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v63);
  *(_QWORD *)(a4 + v19) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000025, 0x800000010008F9B0, v17, v13, v9, 0);
  v24 = (_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  *v24 = 0;
  v24[1] = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_hasAutoConnected) = 0;
  v25 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_settings;
  v26 = objc_allocWithZone((Class)NSUbiquitousKeyValueStore);
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v26, "initWithStoreIdentifier:type:", v27, 1);

  objc_msgSend(v28, "synchronize");
  *(_QWORD *)(a4 + v25) = v28;
  v29 = a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate;
  v30 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_assetFetchDuration) = 0;
  *(_BYTE *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_didSubmitMetrics) = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager) = 0;
  v31 = a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo;
  v32 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v33 = v65;
  sub_1000135B0(v65, a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model);
  v34 = (_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  v35 = v64;
  *v34 = v64;
  v34[1] = &off_1000A8380;
  sub_100015D34((uint64_t)v72, a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_offersClient);
  v36 = (void *)objc_opt_self(UNNotificationSettingsCenter);
  swift_unknownObjectRetain(v35);
  v37 = objc_msgSend(v36, "currentNotificationSettingsCenter");
  v38 = (_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter);
  v38[3] = sub_100009F84(0, &qword_1000B9CB0, UNNotificationSettingsCenter_ptr);
  v38[4] = &off_1000AA020;
  *v38 = v37;
  v39 = 0;
  if (*(_BYTE *)(v33 + *(int *)(type metadata accessor for HeadphoneModel(0) + 80)) == 1)
  {
    v40 = objc_allocWithZone((Class)PowerUISmartChargeClientAudioAccessories);
    v41 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend(v40, "initWithClientName:", v41);

  }
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_smartChargeClient) = v39;
  type metadata accessor for HeadphoneProxFeatureManager(0);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager) = static HeadphoneProxFeatureManager.shared.getter();
  v42 = objc_msgSend(objc_allocWithZone((Class)CBDiscovery), "init");
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery) = v42;
  objc_msgSend(v42, "setDiscoveryFlags:", 0x80000200000);
  objc_msgSend(v42, "setBleScanRate:", 50);
  v43 = objc_msgSend(objc_allocWithZone((Class)SFDeviceDiscovery), "init");
  *(_QWORD *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery) = v43;
  v44 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery;
  objc_msgSend(v43, "setChangeFlags:", 13);
  objc_msgSend(v43, "setDiscoveryFlags:", 2);
  objc_msgSend(v43, "setScanRate:", 40);
  v45 = swift_allocObject(&unk_1000A9220, 24, 7);
  swift_weakInit(v45 + 16, a4);
  v70 = sub_100063A64;
  v71 = v45;
  aBlock = _NSConcreteStackBlock;
  v67 = 1107296256;
  v68 = sub_100015974;
  v69 = &unk_1000A9238;
  v46 = _Block_copy(&aBlock);
  v47 = v71;
  v48 = v43;
  objc_msgSend(v48, "setDeviceFoundHandler:", v46, swift_release(v47).n128_f64[0]);
  _Block_release(v46);

  v49 = *(void **)(a4 + v44);
  v50 = swift_allocObject(&unk_1000A9220, 24, 7);
  swift_weakInit(v50 + 16, a4);
  v70 = sub_100063A84;
  v71 = v50;
  aBlock = _NSConcreteStackBlock;
  v67 = 1107296256;
  v68 = sub_100015974;
  v69 = &unk_1000A9260;
  v51 = _Block_copy(&aBlock);
  v52 = v71;
  v53 = v49;
  objc_msgSend(v53, "setDeviceLostHandler:", v51, swift_release(v52).n128_f64[0]);
  _Block_release(v51);

  v54 = *(void **)(a4 + v44);
  v55 = swift_allocObject(&unk_1000A9220, 24, 7);
  swift_weakInit(v55 + 16, a4);
  v70 = sub_100063A8C;
  v71 = v55;
  aBlock = _NSConcreteStackBlock;
  v67 = 1107296256;
  v68 = sub_100061058;
  v69 = &unk_1000A9288;
  v56 = _Block_copy(&aBlock);
  v57 = v71;
  v58 = v54;
  objc_msgSend(v58, "setDeviceChangedHandler:", v56, swift_release(v57).n128_f64[0]);
  _Block_release(v56);

  v59 = *(void **)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery);
  v60 = swift_allocObject(&unk_1000A9220, 24, 7);
  swift_weakInit(v60 + 16, a4);
  v70 = sub_100063A94;
  v71 = v60;
  aBlock = _NSConcreteStackBlock;
  v67 = 1107296256;
  v68 = sub_100015974;
  v69 = &unk_1000A92B0;
  v61 = _Block_copy(&aBlock);
  objc_msgSend(v59, "setDeviceFoundHandler:", v61, swift_release(v71).n128_f64[0]);
  _Block_release(v61);
  sub_100015D14(v72);
  sub_100013638(v65);
  return a4;
}

unint64_t sub_1000639AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B9C98;
  if (!qword_1000B9C98)
  {
    v1 = type metadata accessor for OS_dispatch_queue.Attributes(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_1000B9C98);
  }
  return result;
}

unint64_t sub_1000639F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B9CA8;
  if (!qword_1000B9CA8)
  {
    v1 = sub_1000157E4(&qword_1000B9CA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000B9CA8);
  }
  return result;
}

uint64_t sub_100063A40()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100063A64(uint64_t a1)
{
  uint64_t v1;

  return sub_10003DB5C(a1, v1);
}

uint64_t sub_100063A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100063A7C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100063A84(uint64_t a1)
{
  uint64_t v1;

  return sub_10003EA50(a1, v1);
}

double sub_100063A8C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10003EEA0(a1, a2, v2);
}

uint64_t sub_100063A94(uint64_t a1)
{
  uint64_t v1;

  return sub_10003EEFC(a1, v1);
}

uint64_t sub_100063A9C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_100063AF0(void *a1)
{
  void *v1;
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;

  v2 = v1;
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100088460;
  v7 = objc_msgSend(v2, "leadingAnchor");
  v8 = objc_msgSend(a1, "leadingAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_msgSend(v2, "trailingAnchor");
  v11 = objc_msgSend(a1, "trailingAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v6 + 40) = v12;
  v13 = objc_msgSend(v2, "topAnchor");
  v14 = objc_msgSend(a1, "topAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v6 + 48) = v15;
  v16 = objc_msgSend(v2, "bottomAnchor");
  v17 = objc_msgSend(a1, "bottomAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v6 + 56) = v18;
  specialized Array._endMutation()(v19);
  sub_10000B880();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v4, "activateConstraints:", isa);

}

uint64_t sub_100063E24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v9 = sub_100009F00(&qword_1000B83D0);
  __chkstk_darwin(v9, v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (uint64_t)objc_msgSend(a4, "attributedText");
  if (result)
  {
    v14 = (void *)result;
    v15 = objc_msgSend((id)result, "string");

    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v32 = v16;
    v33 = v18;
    v30 = a2;
    v31 = a3;
    v19 = type metadata accessor for Locale(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
    v20 = sub_100009F40();
    v21 = StringProtocol.range<A>(of:options:range:locale:)(&v30, 0, 0, 0, 1, v12, &type metadata for String, &type metadata for String, v20, v20);
    v23 = v22;
    v25 = v24;
    sub_100063FF4((uint64_t)v12);
    if ((v25 & 1) != 0)
    {
      return swift_bridgeObjectRelease(v18);
    }
    else
    {
      v32 = v21;
      v33 = v23;
      v30 = v16;
      v31 = v18;
      v26 = sub_100009F00(&qword_1000B83D8);
      v27 = sub_100017DB4();
      v28 = _NSRange.init<A, B>(_:in:)(&v32, &v30, v26, &type metadata for String, v27, v20);
      result = (uint64_t)sub_1000177DC(a4, v28, v29);
      if ((result & 1) != 0)
        return (*(uint64_t (**)(uint64_t))(a5 + 16))(a5);
    }
  }
  return result;
}

uint64_t sub_100063FF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100009F00(&qword_1000B83D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100064038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9CC0);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9CC0);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100064128(char a1)
{
  return sub_1000641B8(a1, (SEL *)&selRef_viewWillAppear_, "Playing movie", (SEL *)&selRef_play);
}

id sub_10006419C(char a1)
{
  return sub_1000641B8(a1, (SEL *)&selRef_viewDidDisappear_, "Stopping movie", (SEL *)&selRef_stop);
}

id sub_1000641B8(char a1, SEL *a2, const char *a3, SEL *a4)
{
  char *v4;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id result;
  objc_super v16;

  v8 = v4;
  v16.receiver = v8;
  v16.super_class = (Class)swift_getObjectType(v8, a2);
  objc_msgSendSuper2(&v16, *a2, a1 & 1);
  if (qword_1000B7BD8 != -1)
    swift_once(&qword_1000B7BD8, sub_100064038);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_1000093F8(v10, (uint64_t)qword_1000B9CC0);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, a3, v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  result = *(id *)&v8[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_movieView];
  if (result)
    return objc_msgSend(result, *a4);
  return result;
}

uint64_t sub_100064338(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  NSString v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  NSString v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  double v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  char *v43;
  id v44;
  id v45;
  NSURL *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  NSURL *v51;
  void *v52;
  void *v53;
  int *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  double v59;
  id v60;
  char *v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  Class isa;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  char *v75;
  char *v76;
  int *v77;
  _BYTE v78[7];
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  _QWORD v93[2];
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  char v108;
  _BYTE v109[7];
  uint64_t v110;
  void *v111;
  void *v112;
  _BYTE v113[264];
  _BYTE v114[216];
  void **v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  char v131;
  char *v132;
  void *v133;
  void *v134;
  _QWORD v135[27];
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;

  v3 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v3, v4);
  v76 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HeadphoneAssets(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for HeadphoneViewModel(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v15 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = (int *)__chkstk_darwin(v11, v14);
  sub_10003CFDC(a1 + v77[14], (uint64_t)v135, &qword_1000B8508);
  sub_10003CFDC((uint64_t)v135, (uint64_t)&v136, &qword_1000B8508);
  result = sub_10001B850((uint64_t)&v136);
  if ((_DWORD)result != 1)
  {
    v72 = v7;
    v73 = v6;
    v75 = v10;
    sub_10003CFDC((uint64_t)v135, (uint64_t)v114, &qword_1000B8508);
    sub_10000B75C((uint64_t)v114);
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setTitle:", v17);

    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setSubtitle:", v18);

    v19 = *(_QWORD *)(a1 + 40);
    v20 = swift_allocObject(&unk_1000A93D0, 24, 7);
    swift_unknownObjectWeakInit(v20 + 16, v1);
    sub_1000324D8(a1, (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    v21 = *(unsigned __int8 *)(v12 + 80);
    v22 = (v21 + 16) & ~v21;
    v23 = v1;
    v24 = (v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = swift_allocObject(&unk_1000A93F8, v24 + 8, v21 | 7);
    sub_10003D1CC((uint64_t)v15, v25 + v22, type metadata accessor for HeadphoneViewModel);
    *(_QWORD *)(v25 + v24) = v20;
    v26 = v23;
    swift_bridgeObjectRetain(v19);
    swift_retain(v20);
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    *(_QWORD *)&v118 = sub_1000651F0;
    *((_QWORD *)&v118 + 1) = v25;
    v115 = _NSConcreteStackBlock;
    v116 = 1107296256;
    *(_QWORD *)&v117 = sub_100011720;
    *((_QWORD *)&v117 + 1) = &unk_1000A9410;
    v28 = _Block_copy(&v115);
    v29 = (void *)objc_opt_self(PRXAction);
    v30 = objc_msgSend(v29, "actionWithTitle:style:handler:", v27, 0, v28);

    _Block_release(v28);
    v31 = *((_QWORD *)&v118 + 1);
    swift_release(v20);
    *(_QWORD *)&v32 = swift_release(v31).n128_u64[0];
    v74 = v30;

    v33 = v77;
    if ((*(_BYTE *)(a1 + v77[16]) & 1) == 0)
    {
      v34 = *(_QWORD *)(a1 + 56);
      v35 = swift_allocObject(&unk_1000A93D0, 24, 7);
      swift_unknownObjectWeakInit(v35 + 16, v26);
      swift_bridgeObjectRetain(v34);
      swift_retain(v35);
      v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v34);
      *(_QWORD *)&v118 = sub_100065258;
      *((_QWORD *)&v118 + 1) = v35;
      v115 = _NSConcreteStackBlock;
      v116 = 1107296256;
      *(_QWORD *)&v117 = sub_100011720;
      *((_QWORD *)&v117 + 1) = &unk_1000A9438;
      v37 = _Block_copy(&v115);
      v38 = objc_msgSend(v29, "actionWithTitle:style:handler:", v36, 1, v37);

      _Block_release(v37);
      v39 = *((_QWORD *)&v118 + 1);
      swift_release(v35);
      v40 = objc_msgSend(v26, "addAction:", v38, swift_release(v39).n128_f64[0]);

      v33 = v77;
    }
    v41 = (uint64_t)v76;
    sub_100065260(a1 + v33[11], (uint64_t)v76);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v41, 1, v73) == 1)
    {

      sub_10003D268(v135, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001B91C);
      return sub_1000652A8(v41);
    }
    else
    {
      sub_10003D1CC(v41, (uint64_t)v75, type metadata accessor for HeadphoneAssets);
      v42 = objc_msgSend(objc_allocWithZone((Class)SFMediaPlayerView), "init");
      v43 = v26;
      v44 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
      v45 = objc_msgSend(v44, "userInterfaceStyle");

      if (v45 == (id)2)
        v47 = 1;
      else
        v47 = 2;
      URL._bridgeToObjectiveC()(v46);
      v49 = v48;
      objc_msgSend(v42, "updateViewForAssetType:adjustmentsURL:", v47, v48);

      v50 = objc_allocWithZone((Class)SFMediaPlayerItem);
      URL._bridgeToObjectiveC()(v51);
      v53 = v52;
      v54 = (int *)objc_msgSend(v50, "initWithURL:", v52);
      v77 = v54;

      objc_msgSend(v54, "setShouldLoop:", 1);
      objc_msgSend(v42, "addMovieItem:", v54);
      v55 = objc_allocWithZone((Class)UILayoutGuide);
      v56 = v42;
      sub_10003D268(v135, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D230);
      v57 = v56;
      v58 = objc_msgSend(v55, "init");
      sub_10003D268(v135, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001B91C);
      v59 = *(double *)&v136;
      v60 = objc_msgSend(v58, "heightAnchor");

      v61 = (char *)objc_msgSend(v60, "constraintEqualToConstant:", v59);
      v76 = v61;

      v89 = v146;
      v90 = v147;
      v91 = v148;
      v85 = v142;
      v86 = v143;
      v87 = v144;
      v88 = v145;
      v81 = v138;
      v82 = v139;
      v83 = v140;
      v84 = v141;
      v79 = v136;
      v80 = v137;
      v127 = v146;
      v128 = v147;
      v129 = v148;
      v123 = v142;
      v124 = v143;
      v125 = v144;
      v126 = v145;
      v119 = v138;
      v120 = v139;
      v121 = v140;
      v122 = v141;
      v92 = v149;
      v115 = (void **)v57;
      v116 = (uint64_t)v58;
      v130 = v149;
      v117 = v136;
      v118 = v137;
      v131 = 0;
      v132 = v61;
      v133 = &_swiftEmptyArrayStorage;
      v134 = &_swiftEmptyArrayStorage;
      v62 = objc_msgSend(v43, "contentView");
      objc_msgSend(v57, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v62, "addLayoutGuide:", v58);
      objc_msgSend(v62, "addSubview:", v57);
      objc_msgSend(v62, "sendSubviewToBack:", v57);

      v63 = (void *)objc_opt_self(NSLayoutConstraint);
      v64 = objc_msgSend(v43, "contentView");
      v65 = objc_msgSend(v64, "mainContentGuide");

      sub_10006A754();
      v67 = v66;

      sub_10000B880();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v67);
      objc_msgSend(v63, "activateConstraints:", isa);

      sub_1000652E8((uint64_t)v75);
      v69 = *(void **)&v43[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_movieView];
      *(_QWORD *)&v43[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_movieView] = v57;

      v93[0] = v57;
      v93[1] = v58;
      v104 = v89;
      v105 = v90;
      v106 = v91;
      v107 = v92;
      v100 = v85;
      v101 = v86;
      v102 = v87;
      v103 = v88;
      v96 = v81;
      v97 = v82;
      v98 = v83;
      v99 = v84;
      v94 = v79;
      v95 = v80;
      v108 = 0;
      *(_DWORD *)v109 = *(_DWORD *)v78;
      *(_DWORD *)&v109[3] = *(_DWORD *)&v78[3];
      v110 = (uint64_t)v76;
      v111 = &_swiftEmptyArrayStorage;
      v112 = &_swiftEmptyArrayStorage;
      nullsub_1(v93);
      v70 = (uint64_t)&v43[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_movieContainer];
      sub_10003CFDC((uint64_t)&v43[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_movieContainer], (uint64_t)v113, &qword_1000B90F0);
      sub_10003CFDC((uint64_t)v93, v70, &qword_1000B90F0);
      return sub_100064EDC((uint64_t)v113);
    }
  }
  return result;
}

void sub_100064BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _BYTE v9[24];

  v3 = a3 + 16;
  if (*(_BYTE *)(a2 + *(int *)(type metadata accessor for HeadphoneViewModel(0) + 64)) == 1)
  {
    swift_beginAccess(v3, v9, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = (void *)Strong;
      v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_presenter);

      if (v6)
      {
        sub_1000732C8();
LABEL_8:
        swift_unknownObjectRelease(v6);
      }
    }
  }
  else
  {
    swift_beginAccess(v3, v9, 0, 0);
    v7 = swift_unknownObjectWeakLoadStrong(v3);
    if (v7)
    {
      v8 = (void *)v7;
      v6 = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_presenter);

      if (v6)
      {
        sub_1000747C0(1);
        goto LABEL_8;
      }
    }
  }
}

void sub_100064CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_presenter);

    if (v5)
    {
      sub_1000747C0(0);
      swift_unknownObjectRelease(v5);
    }
  }
}

uint64_t type metadata accessor for HeadphoneShareAudioViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService33HeadphoneShareAudioViewController);
}

uint64_t sub_100064E7C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_type);
}

void sub_100064E8C(uint64_t a1)
{
  void *v1;
  id v2;

  if (*(_QWORD *)(a1 + 72))
  {
    v2 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "showActivityIndicatorWithStatus:", v2);

  }
}

uint64_t sub_100064EDC(uint64_t a1)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 224);
  sub_10003D158(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void **)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    *(_QWORD *)(a1 + 256));
  return a1;
}

uint64_t sub_100064F54()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100064F78()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;

  v1 = (int *)type metadata accessor for HeadphoneViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 88));

  v7 = v0 + v4 + v1[11];
  v8 = (int *)type metadata accessor for HeadphoneAssets(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
  {
    v23 = v5;
    v9 = type metadata accessor for URL(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v11(v7, v9);
    v11(v7 + v8[5], v9);
    v12 = v7 + v8[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
      v11(v12, v9);
    v13 = v7 + v8[7];
    v14 = type metadata accessor for HeadphoneAssets.Feature(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      v11(v13, v9);
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + *(int *)(v14 + 20)));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + *(int *)(v14 + 24)));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[8]));

    v5 = v23;
    v4 = (v3 + 16) & ~v3;
  }
  v15 = v6 + v1[13];
  v16 = *(_QWORD *)(v15 + 8);
  if (v16)
  {
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(*(_QWORD *)(v15 + 24));
  }
  v17 = v6 + v1[14];
  v18 = *(_QWORD *)(v17 + 152);
  if (v18)
  {
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(*(_QWORD *)(v17 + 168));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[17]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[18]));
  v19 = v6 + v1[19];
  v20 = *(_QWORD *)(v19 + 8);
  if (v20)
  {
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 24));

    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 56));
    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 72));

    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 96));
    swift_bridgeObjectRelease(*(_QWORD *)(v19 + 104));
  }
  v21 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_release(*(_QWORD *)(v0 + v21));
  return swift_deallocObject(v0, v21 + 8, v3 | 7);
}

void sub_1000651F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for HeadphoneViewModel(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_100064BFC(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100065240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100065250(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100065258(uint64_t a1)
{
  uint64_t v1;

  sub_100064CCC(a1, v1);
}

uint64_t sub_100065260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B7F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000652A8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100009F00(&qword_1000B7F18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000652E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for HeadphoneSettings()
{
  return &type metadata for HeadphoneSettings;
}

uint64_t sub_10006533C(uint64_t a1, void *a2)
{
  NSString v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  char v23;
  uint64_t v25;
  uint64_t v26;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a2, "arrayForKey:", v4);

  if (v5
    && (v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, (char *)&type metadata for Any + 8),
        v5,
        v7 = sub_100065B90(v6),
        swift_bridgeObjectRelease(v6),
        v7))
  {
    if (v7[2])
    {
      if (qword_1000B7BE0 != -1)
        swift_once(&qword_1000B7BE0, sub_100065A80);
      v8 = type metadata accessor for Logger(0);
      sub_1000093F8(v8, (uint64_t)qword_1000B9D20);
      v9 = swift_bridgeObjectRetain_n(v7, 2);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(12, -1);
        v13 = swift_slowAlloc(32, -1);
        v26 = v13;
        *(_DWORD *)v12 = 136315138;
        v14 = swift_bridgeObjectRetain(v7);
        v15 = Array.description.getter(v14, &type metadata for UInt32);
        v17 = v16;
        swift_bridgeObjectRelease(v7);
        v25 = sub_10004B4F0(v15, v17, &v26);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
        swift_bridgeObjectRelease_n(v7, 2);
        swift_bridgeObjectRelease(v17);
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "User has seen tutorial cards for: %s", v12, 0xCu);
        swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v13, -1, -1);
        swift_slowDealloc(v12, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v7, 2);
      }
    }
    v23 = sub_100065A1C(a1, (uint64_t)v7);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    if (qword_1000B7BE0 != -1)
      swift_once(&qword_1000B7BE0, sub_100065A80);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_1000093F8(v18, (uint64_t)qword_1000B9D20);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "No seen tutorial product IDs found", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_100065658(uint64_t a1, void *a2)
{
  NSString v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  Class isa;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  NSString v25;
  id v26;
  Class v27;
  NSString v28;
  uint64_t v30;
  _BYTE v31[24];
  uint64_t v32;
  _QWORD *v33;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a2, "arrayForKey:", v4);

  if (v5
    && (v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, (char *)&type metadata for Any + 8),
        v5,
        v7 = sub_100065B90(v6),
        swift_bridgeObjectRelease(v6),
        v7))
  {
    v8 = sub_100067984((uint64_t)v7);
    swift_bridgeObjectRelease(v7);
    v9 = sub_1000672D8(v8);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = &_swiftEmptyArrayStorage;
  }
  v33 = v9;
  if ((sub_100065A1C(a1, (uint64_t)v9) & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_1000822B4(0, v9[2] + 1, 1, (char *)v9);
    v11 = v9[2];
    v10 = v9[3];
    if (v11 >= v10 >> 1)
      v9 = sub_1000822B4((char *)(v10 > 1), v11 + 1, 1, (char *)v9);
    v9[2] = v11 + 1;
    *((_DWORD *)v9 + v11 + 8) = a1;
    v33 = v9;
    swift_bridgeObjectRetain(v9);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v9);
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "setObject:forKey:", isa, v13);

    if (qword_1000B7BE0 != -1)
      swift_once(&qword_1000B7BE0, sub_100065A80);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_1000093F8(v14, (uint64_t)qword_1000B9D20);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v32 = v19;
      *(_DWORD *)v18 = 136315138;
      swift_beginAccess(&v33, v31, 0, 0);
      v20 = v33;
      v21 = swift_bridgeObjectRetain(v33);
      v22 = Array.description.getter(v21, &type metadata for UInt32);
      v24 = v23;
      swift_bridgeObjectRelease(v20);
      v30 = sub_10004B4F0(v22, v24, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31);
      swift_bridgeObjectRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Saved seen tutorial product IDs as %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }

  }
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(a2, "longLongForKey:", v25);

  if (!v26)
  {
    v27 = Int._bridgeToObjectiveC()().super.super.isa;
    v28 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "setObject:forKey:", v27, v28);

  }
  return swift_bridgeObjectRelease(v33);
}

uint64_t sub_100065A1C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 9; ; ++i)
  {
    v4 = i - 7;
    if (__OFADD__(i - 8, 1))
      break;
    v6 = *(_DWORD *)(a2 + 4 * i) == (_DWORD)result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100065A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9D20);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9D20);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100065B10()
{
  id v0;
  NSString v1;
  id v2;
  id result;

  v0 = objc_allocWithZone((Class)NSUbiquitousKeyValueStore);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithStoreIdentifier:type:", v1, 1);

  result = objc_msgSend(v2, "synchronize");
  qword_1000BC7D8 = (uint64_t)v2;
  return result;
}

_QWORD *sub_100065B90(uint64_t a1)
{
  int64_t v2;
  _QWORD *v3;
  uint64_t i;
  int v5;
  unint64_t v6;
  unint64_t v7;
  int v9;
  char v10;
  _BYTE v11[32];
  _QWORD *v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = &_swiftEmptyArrayStorage;
  sub_1000826EC(0, v2, 0);
  v3 = &_swiftEmptyArrayStorage;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1000250C8(i, (uint64_t)v11);
      if (!swift_dynamicCast(&v9, v11, (char *)&type metadata for Any + 8, &type metadata for UInt32, 6))break;
      v5 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      {
        sub_1000826EC(0, v3[2] + 1, 1);
        v3 = v12;
      }
      v7 = v3[2];
      v6 = v3[3];
      if (v7 >= v6 >> 1)
      {
        sub_1000826EC(v6 > 1, v7 + 1, 1);
        v3 = v12;
      }
      v3[2] = v7 + 1;
      *((_DWORD *)v3 + v7 + 8) = v5;
      if (!--v2)
        return v3;
    }
    v9 = 0;
    v10 = 1;
    swift_release(v3);
    return 0;
  }
  return v3;
}

uint64_t sub_100065CCC(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = sub_100009F84(0, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_100066068(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_10006625C(v29);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_10006677C((uint64_t)v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      sub_100009F84(0, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr);
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16, a2);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, a2);

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_1000667FC((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_100065F68(unsigned int *a1, unsigned int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v6 + 40), a2, 4);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_100066980(a2, v9, isUniquelyReferenced_nonNull_native);
    v14 = *v3;
    *v3 = v15;
    swift_bridgeObjectRelease(v14);
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_DWORD *)(v10 + 4 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

Swift::Int sub_100066068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_100009F00(&qword_1000B8300);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()();
    if (v6)
    {
      v7 = v6;
      v8 = sub_100009F84(0, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr);
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_10006625C(v16 + 1);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()();
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

void sub_10006625C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100009F00(&qword_1000B8300);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_36;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_36;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_36;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_36:
                swift_release(v3);
                v2 = v30;
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v13 >= v11)
                    goto LABEL_36;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v6 + 40));
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_1000664F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100009F00(&qword_1000B9D40);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 0;
    v8 = (uint64_t *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    v29 = -1 << v9;
    v30 = v2;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v31 = 1 << *(_BYTE *)(v3 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                if (v31 >= 64)
                  bzero((void *)(v3 + 56), 8 * v12);
                else
                  *v8 = v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v16);
      v21 = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v6 + 40), v20, 4);
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(_QWORD *)(v6 + 48) + 4 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

unint64_t sub_10006677C(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_1000667FC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10006625C(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100066AA4();
      goto LABEL_14;
    }
    sub_100066DE0(v9);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = sub_100009F84(0, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

void sub_100066980(unsigned int a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1000664F8(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_100066C4C();
      goto LABEL_14;
    }
    sub_100067058(v8);
  }
  v9 = *v3;
  v10 = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(*v3 + 40), a1, 4);
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(_DWORD *)(v12 + 4 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UInt32);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_DWORD *)(v12 + 4 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(_QWORD *)(v14 + 48) + 4 * a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_100066AA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_100009F00(&qword_1000B8300);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_28;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v6 + 8 * v9);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 3;
  if (v21 >= v13)
    goto LABEL_28;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100066C4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_100009F00(&qword_1000B9D40);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100066DE0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::Int v20;
  id v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100009F00(&qword_1000B8300);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v30 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_27;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v11)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v11)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v11)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_27:
    v20 = *(_QWORD *)(v6 + 40);
    v21 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v22 = NSObject._rawHashValue(seed:)(v20);
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v11)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v30;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v11)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100067058(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100009F00(&qword_1000B9D40);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v16);
    v21 = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v6 + 40), v20, 4);
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_DWORD *)(*(_QWORD *)(v6 + 48) + 4 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

uint64_t **sub_1000672BC(uint64_t a1)
{
  return sub_1000673D8(a1, &qword_1000B8308, AMSDeviceOfferRegistrationGroup_ptr, &qword_1000B8310);
}

void *sub_1000672D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return &_swiftEmptyArrayStorage;
  v3 = sub_100009F00(&qword_1000B9D38);
  v4 = swift_allocObject(v3, 4 * v1 + 32, 7);
  v5 = j__malloc_size((const void *)v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 29;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = 2 * (v6 >> 2);
  v7 = sub_1000674F8(&v10, (_DWORD *)(v4 + 32), v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_1000324D0(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return &_swiftEmptyArrayStorage;
  }
  return (void *)v4;
}

uint64_t **sub_1000673BC(uint64_t a1)
{
  return sub_1000673D8(a1, &qword_1000B9D48, UNNotificationSource_ptr, (unint64_t *)&qword_1000B9D50);
}

uint64_t **sub_1000673D8(uint64_t a1, unint64_t *a2, _QWORD *a3, unint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;
  int64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t **result;
  uint64_t v15;

  v7 = a1;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
    return (uint64_t **)&_swiftEmptyArrayStorage;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v8 = __CocoaSet.count.getter(a1);
  if (!v8)
    return (uint64_t **)&_swiftEmptyArrayStorage;
LABEL_5:
  if (v8 <= 0)
  {
    v10 = (uint64_t **)&_swiftEmptyArrayStorage;
  }
  else
  {
    v9 = sub_100009F00((uint64_t *)&unk_1000B8730);
    v10 = (uint64_t **)swift_allocObject(v9, 8 * v8 + 32, 7);
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = (uint64_t *)v8;
    v10[3] = (uint64_t *)((2 * (v12 >> 3)) | 1);
  }
  swift_bridgeObjectRetain(v7);
  v13 = sub_10006768C(&v15, v10 + 4, v8, v7, a2, a3, a4);
  result = (uint64_t **)sub_1000324D0(v15);
  if (v13 == (uint64_t *)v8)
    return v10;
  __break(1u);
  return result;
}

_QWORD *sub_1000674F8(_QWORD *result, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_DWORD *)(*(_QWORD *)(a4 + 48) + 4 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t *sub_10006768C(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4, unint64_t *a5, _QWORD *a6, unint64_t *a7)
{
  uint64_t v7;
  uint64_t **v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v41;
  uint64_t *v42;
  _QWORD v43[5];

  v7 = a4;
  v9 = a2;
  v37 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v13 = a4;
    else
      v13 = a4 & 0xFFFFFFFFFFFFFF8;
    v14 = __CocoaSet.makeIterator()(v13);
    v15 = sub_100009F84(0, a5, a6);
    v16 = sub_1000679F4(a7, a5, a6);
    result = Set.Iterator.init(_cocoa:)(v43, v14, v15, v16);
    v7 = v43[0];
    v17 = v43[1];
    v18 = v43[2];
    v19 = v43[3];
    v20 = v43[4];
    if (v9)
      goto LABEL_6;
LABEL_39:
    v21 = 0;
    goto LABEL_41;
  }
  v19 = 0;
  v32 = -1 << *(_BYTE *)(a4 + 32);
  v17 = a4 + 56;
  v18 = ~v32;
  v33 = -v32;
  if (v33 < 64)
    v34 = ~(-1 << v33);
  else
    v34 = -1;
  v20 = v34 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_39;
LABEL_6:
  if (!a3)
  {
    v21 = 0;
LABEL_41:
    v35 = v37;
LABEL_44:
    *v35 = v7;
    v35[1] = v17;
    v35[2] = v18;
    v35[3] = v19;
    v35[4] = v20;
    return (uint64_t *)v21;
  }
  if (a3 < 0)
    goto LABEL_51;
  v21 = 0;
  v38 = (unint64_t)(v18 + 64) >> 6;
  v36 = v18;
  while (1)
  {
    if (v7 < 0)
    {
      v28 = __CocoaSet.Iterator.next()(result);
      if (!v28)
        goto LABEL_43;
      v29 = v28;
      v41 = v28;
      v30 = sub_100009F84(0, a5, a6);
      swift_unknownObjectRetain(v29);
      swift_dynamicCast(&v42, &v41, (char *)&type metadata for Swift.AnyObject + 8, v30, 7);
      v24 = v42;
      result = (uint64_t *)swift_unknownObjectRelease(v29);
      if (!v24)
        goto LABEL_43;
      goto LABEL_11;
    }
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v23 = v22 | (v19 << 6);
      goto LABEL_10;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v25 >= v38)
    {
      v20 = 0;
      goto LABEL_43;
    }
    v26 = *(_QWORD *)(v17 + 8 * v25);
    if (v26)
      goto LABEL_26;
    v27 = v19 + 2;
    if (v19 + 2 >= v38)
    {
      v20 = 0;
      ++v19;
      goto LABEL_43;
    }
    v26 = *(_QWORD *)(v17 + 8 * v27);
    if (!v26)
    {
      if (v19 + 3 >= v38)
        goto LABEL_47;
      v26 = *(_QWORD *)(v17 + 8 * (v19 + 3));
      if (v26)
      {
        v25 = v19 + 3;
        goto LABEL_26;
      }
      v27 = v19 + 4;
      if (v19 + 4 >= v38)
      {
        v20 = 0;
        v19 += 3;
        goto LABEL_43;
      }
      v26 = *(_QWORD *)(v17 + 8 * v27);
      if (!v26)
      {
        v25 = v19 + 5;
        if (v19 + 5 >= v38)
        {
LABEL_47:
          v20 = 0;
          v19 = v27;
          goto LABEL_43;
        }
        v26 = *(_QWORD *)(v17 + 8 * v25);
        if (!v26)
        {
          v31 = v19 + 6;
          while (v38 != v31)
          {
            v26 = *(_QWORD *)(v17 + 8 * v31++);
            if (v26)
            {
              v25 = v31 - 1;
              goto LABEL_26;
            }
          }
          v20 = 0;
          v19 = v38 - 1;
          goto LABEL_43;
        }
        goto LABEL_26;
      }
    }
    v25 = v27;
LABEL_26:
    v20 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v25 << 6);
    v19 = v25;
LABEL_10:
    result = (uint64_t *)*(id *)(*(_QWORD *)(v7 + 48) + 8 * v23);
    v24 = result;
    if (!result)
      goto LABEL_43;
LABEL_11:
    ++v21;
    *v9++ = v24;
    if (v21 == a3)
    {
      v21 = a3;
LABEL_43:
      v18 = v36;
      v35 = v37;
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_100067984(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = Set.init(minimumCapacity:)(v2, &type metadata for UInt32, &protocol witness table for UInt32);
  v7 = result;
  if (v2)
  {
    v4 = (unsigned int *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_100065F68(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1000679F4(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100009F84(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9D58);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9D58);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id sub_100067B24(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id *v22;
  id result;
  void **v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  _BYTE v33[24];
  char v34[24];
  objc_super v35;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v6, v7);
  v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for HeadphoneAssets(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  v14 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35.receiver = v3;
  v35.super_class = ObjectType;
  objc_msgSendSuper2(&v35, "viewWillAppear:", a1 & 1);
  v15 = &v3[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_viewModel];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_viewModel], v34, 0, 0);
  v16 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_4:
    sub_100017E48((uint64_t)v9, &qword_1000B7F18);
    goto LABEL_5;
  }
  sub_100065260((uint64_t)&v15[*(int *)(v16 + 44)], (uint64_t)v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    goto LABEL_4;
  sub_100069BE4((uint64_t)v9, (uint64_t)v14);
  v24 = (void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView], v33, 32, 0);
  v25 = *v24;
  if (*v24)
  {
    swift_endAccess(v33);
    v26 = (void *)objc_opt_self(UITraitCollection);
    v27 = v25;
    v28 = objc_msgSend(v26, "currentTraitCollection");
    v29 = objc_msgSend(v28, "userInterfaceStyle");

    if (v29 == (id)2)
      v30 = 1;
    else
      v30 = 2;
    URL._bridgeToObjectiveC()((NSURL *)1);
    v32 = v31;
    objc_msgSend(v27, "updateViewForAssetType:adjustmentsURL:", v30, v31);

    sub_1000652E8((uint64_t)v14);
  }
  else
  {
    sub_1000652E8((uint64_t)v14);
    swift_endAccess(v33);
  }
LABEL_5:
  if (qword_1000B7BF0 != -1)
    swift_once(&qword_1000B7BF0, sub_100067A34);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_1000093F8(v17, (uint64_t)qword_1000B9D58);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Playing movie", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  v22 = (id *)&v3[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView];
  swift_beginAccess(v22, v33, 0, 0);
  result = *v22;
  if (*v22)
    return objc_msgSend(result, "play");
  return result;
}

id sub_100067E8C(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id *v10;
  id result;
  char v12[24];
  objc_super v13;

  v3 = v2;
  v13.receiver = v3;
  v13.super_class = (Class)swift_getObjectType(v3, a2);
  objc_msgSendSuper2(&v13, "viewDidDisappear:", a1 & 1);
  if (qword_1000B7BF0 != -1)
    swift_once(&qword_1000B7BF0, sub_100067A34);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_1000093F8(v5, (uint64_t)qword_1000B9D58);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Stopping movie", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = (id *)&v3[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView];
  swift_beginAccess(v10, v12, 0, 0);
  result = *v10;
  if (*v10)
    return objc_msgSend(result, "stop");
  return result;
}

id sub_100068004(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id result;
  uint64_t v18;
  NSString v19;
  id v20;
  NSString v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  NSURL *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  char *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  char *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  double v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  char *v64;
  uint64_t v65;
  NSNumber v66;
  uint64_t v67;
  Class isa;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  Class v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  uint64_t v84;
  void *v85;
  id v86;
  id v87;
  uint64_t v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  id v103;
  id v104;
  double v105;
  id v106;
  id v107;
  id v108;
  char *v109;
  id v110;
  id v111;
  id v112;
  id v113;
  char **v114;
  id v115;
  id v116;
  id v117;
  id v118;
  char *v119;
  void *v120;
  uint64_t v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  unint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  id v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  id v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void **v148;
  void *v149;
  id v150;
  id v151;
  void *v152;
  uint64_t v153;
  Class v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  char *v162;
  id v163;
  id v164;
  char *v165;
  id v166;
  id v167;
  _OWORD v168[17];
  _QWORD v169[2];
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  uint64_t v183;
  char v184;
  _BYTE v185[7];
  id v186;
  void *v187;
  void *v188;
  _BYTE v189[264];
  _BYTE v190[7];
  uint64_t v191;
  _BYTE v192[216];
  _BYTE v193[264];
  _QWORD v194[27];
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  uint64_t v208;

  v3 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for HeadphoneAssets(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for HeadphoneViewModel(0);
  sub_10003CFDC(a1 + *(int *)(v16 + 56), (uint64_t)v194, &qword_1000B8508);
  sub_10003CFDC((uint64_t)v194, (uint64_t)&v195, &qword_1000B8508);
  result = (id)sub_10001B850((uint64_t)&v195);
  if ((_DWORD)result != 1)
  {
    sub_100065260(a1 + *(int *)(v16 + 44), (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      return (id)sub_100017E48((uint64_t)v10, &qword_1000B7F18);
    sub_100069BE4((uint64_t)v10, (uint64_t)v15);
    sub_1000324D8(a1, (uint64_t)v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 0, 1, v16);
    v18 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_viewModel];
    swift_beginAccess(&v1[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_viewModel], v193, 33, 0);
    sub_10003CFDC((uint64_t)v194, (uint64_t)v192, &qword_1000B8508);
    sub_10000B75C((uint64_t)v192);
    sub_10003251C((uint64_t)v6, v18);
    swift_endAccess(v193);
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setTitle:", v19);

    v20 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 5);
    objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v20, "setTextAlignment:", 1);
    v21 = String._bridgeToObjectiveC()();
    objc_msgSend(v20, "setText:", v21);

    v22 = v1;
    v23 = objc_msgSend(v1, "contentView");
    objc_msgSend(v23, "addSubview:", v20);

    v24 = objc_msgSend(objc_allocWithZone((Class)SFMediaPlayerView), "init");
    v165 = v15;
    v25 = objc_allocWithZone((Class)SFMediaPlayerItem);
    URL._bridgeToObjectiveC()(v26);
    v28 = v27;
    v29 = objc_msgSend(v25, "initWithURL:", v27);

    objc_msgSend(v29, "setShouldLoop:", 1);
    v167 = v24;
    v164 = v29;
    objc_msgSend(v24, "addMovieItem:", v29);
    v163 = (id)sub_100009F00((uint64_t *)&unk_1000B8730);
    v30 = swift_allocObject(v163, 56, 7);
    *(_OWORD *)(v30 + 16) = xmmword_100088590;
    v31 = objc_msgSend(v20, "leadingAnchor");
    v32 = v22;
    v33 = objc_msgSend(v22, "contentView");
    v34 = objc_msgSend(v33, "mainContentGuide");

    v35 = objc_msgSend(v34, "leadingAnchor");
    v36 = objc_msgSend(v31, "constraintEqualToAnchor:", v35);

    *(_QWORD *)(v30 + 32) = v36;
    v37 = objc_msgSend(v20, "trailingAnchor");
    v38 = objc_msgSend(v32, "contentView");
    v39 = objc_msgSend(v38, "mainContentGuide");

    v40 = objc_msgSend(v39, "trailingAnchor");
    v41 = objc_msgSend(v37, "constraintEqualToAnchor:", v40);

    *(_QWORD *)(v30 + 40) = v41;
    v166 = v20;
    v42 = v20;
    v43 = v32;
    v44 = objc_msgSend(v42, "bottomAnchor");
    v45 = objc_msgSend(v32, "contentView");
    v46 = objc_msgSend(v45, "mainContentGuide");

    v47 = objc_msgSend(v46, "bottomAnchor");
    v48 = objc_msgSend(v44, "constraintEqualToAnchor:", v47);

    *(_QWORD *)(v30 + 48) = v48;
    *(_QWORD *)v193 = v30;
    specialized Array._endMutation()(v49);
    v50 = *(void **)v193;
    v191 = *(_QWORD *)v193;
    if (BYTE8(v201) == 1)
    {
      v51 = objc_allocWithZone((Class)UILayoutGuide);
      sub_10003D268(v194, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D230);
      v52 = v167;
      v53 = objc_msgSend(v51, "init");
      v54 = *(double *)&v196;
      v55 = objc_msgSend(v53, "heightAnchor");
      v56 = objc_msgSend(v55, "constraintEqualToConstant:", v54);

      *(_QWORD *)v189 = v52;
      *(_QWORD *)&v189[8] = v53;
      *(_OWORD *)&v189[176] = v205;
      *(_OWORD *)&v189[192] = v206;
      *(_OWORD *)&v189[208] = v207;
      *(_QWORD *)&v189[224] = v208;
      *(_OWORD *)&v189[112] = v201;
      *(_OWORD *)&v189[128] = v202;
      *(_OWORD *)&v189[144] = v203;
      *(_OWORD *)&v189[160] = v204;
      *(_OWORD *)&v189[48] = v197;
      *(_OWORD *)&v189[64] = v198;
      *(_OWORD *)&v189[80] = v199;
      *(_OWORD *)&v189[96] = v200;
      *(_OWORD *)&v189[16] = v195;
      *(_OWORD *)&v189[32] = v196;
      v189[232] = 1;
      *(_QWORD *)&v189[240] = v56;
      *(_QWORD *)&v189[248] = &_swiftEmptyArrayStorage;
      *(_QWORD *)&v189[256] = &_swiftEmptyArrayStorage;
      memcpy(v193, v189, sizeof(v193));
      result = objc_msgSend(v32, "view");
      if (result)
      {
        v57 = result;
        v58 = objc_msgSend(v32, "contentView");
        objc_msgSend(v52, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        objc_msgSend(v58, "addLayoutGuide:", v53);
        objc_msgSend(v57, "addSubview:", v52);
        objc_msgSend(v57, "sendSubviewToBack:", v52);

        v59 = objc_msgSend(v32, "contentView");
        v60 = (void *)objc_opt_self(UIColor);
        v61 = objc_msgSend(v60, "clearColor");
        objc_msgSend(v59, "setBackgroundColor:", v61);

        v62 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.0);
        v63 = objc_msgSend(v62, "CGColor");

        v64 = (char *)objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
        objc_msgSend(v52, "bounds");
        v162 = v64;
        objc_msgSend(v64, "setFrame:");
        v65 = swift_allocObject(v163, 64, 7);
        *(_OWORD *)(v65 + 16) = xmmword_100088460;
        sub_100009F84(0, (unint64_t *)&qword_1000B8930, NSNumber_ptr);
        v163 = v52;
        *(NSNumber *)(v65 + 32) = NSNumber.init(floatLiteral:)(0.01);
        *(NSNumber *)(v65 + 40) = NSNumber.init(floatLiteral:)(0.32);
        *(NSNumber *)(v65 + 48) = NSNumber.init(floatLiteral:)(0.7);
        v66.super.super.isa = NSNumber.init(floatLiteral:)(0.99).super.super.isa;
        *(NSNumber *)(v65 + 56) = v66;
        v169[0] = v65;
        specialized Array._endMutation()(v66.super.super.isa);
        v67 = v169[0];
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v67);
        objc_msgSend(v64, "setLocations:", isa);

        v69 = sub_100009F00(&qword_1000B8948);
        v70 = swift_allocObject(v69, 160, 7);
        *(_OWORD *)(v70 + 16) = xmmword_1000881A0;
        type metadata accessor for CGColor(0);
        v72 = v71;
        *(_QWORD *)(v70 + 56) = v71;
        *(_QWORD *)(v70 + 32) = v63;
        v73 = v63;
        v74 = objc_msgSend(v60, "whiteColor");
        v75 = objc_msgSend(v74, "CGColor");

        *(_QWORD *)(v70 + 88) = v72;
        *(_QWORD *)(v70 + 64) = v75;
        v76 = objc_msgSend(v60, "whiteColor");
        v77 = objc_msgSend(v76, "CGColor");

        *(_QWORD *)(v70 + 96) = v77;
        *(_QWORD *)(v70 + 152) = v72;
        *(_QWORD *)(v70 + 120) = v72;
        *(_QWORD *)(v70 + 128) = v73;
        v78 = v73;
        v79 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v70);
        v80 = v162;
        objc_msgSend(v162, "setColors:", v79);

        v81 = objc_msgSend(v163, "layer");
        objc_msgSend(v81, "setMask:", v80);

        v82 = *(void **)&v32[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_gradientLayer];
        *(_QWORD *)&v32[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_gradientLayer] = v80;
        v83 = v80;

        memcpy(v168, v189, 0x108uLL);
        nullsub_1(v168);
        v84 = (uint64_t)&v32[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer];
        sub_10003CFDC((uint64_t)&v32[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer], (uint64_t)v169, &qword_1000B90F0);
        sub_10003CFDC((uint64_t)v168, v84, &qword_1000B90F0);
        sub_10003D2FC((uint64_t)v189);
        sub_100064EDC((uint64_t)v169);
        result = objc_msgSend(v32, "view");
        if (result)
        {
          v85 = result;
          v86 = objc_msgSend(v32, "contentView");
          v87 = objc_msgSend(v86, "mainContentGuide");

          v88 = sub_10006AC24(v85, v87);
          sub_100069394(v88);
          v89 = objc_msgSend(v166, "topAnchor");
          v90 = objc_msgSend(v32, "contentView");
          v91 = objc_msgSend(v90, "mainContentGuide");

          v92 = objc_msgSend(v91, "topAnchor");
          v93 = objc_msgSend(v89, "constraintGreaterThanOrEqualToAnchor:constant:", v92, *(double *)&v201);
          sub_10003D268(v194, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001B91C);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v94);
          v96 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v95 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18);
          v97 = (uint64_t)v165;
          if (v96 >= v95 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v95 > 1, v96 + 1, 1);
          v98 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v96, v93);
          specialized Array._endMutation()(v98);

          sub_10000B8BC((uint64_t)v189);
LABEL_20:
          v148 = (void **)&v32[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView];
          swift_beginAccess(&v32[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView], v189, 1, 0);
          v149 = *v148;
          v150 = v167;
          *v148 = v167;
          v151 = v150;

          v152 = (void *)objc_opt_self(NSLayoutConstraint);
          v153 = v191;
          sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
          v154 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v153);
          objc_msgSend(v152, "activateConstraints:", v154);

          return (id)sub_1000652E8(v97);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return result;
    }
    v99 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
    v163 = v50;
    v100 = v99;
    v101 = objc_msgSend(v32, "contentView");
    objc_msgSend(v101, "addLayoutGuide:", v100);

    v102 = objc_allocWithZone((Class)UILayoutGuide);
    sub_10003D268(v194, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D230);
    v103 = v167;
    v104 = objc_msgSend(v102, "init");
    sub_10003D268(v194, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001B91C);
    v105 = *(double *)&v196;
    v106 = objc_msgSend(v104, "heightAnchor");

    v107 = objc_msgSend(v106, "constraintEqualToConstant:", v105);
    v168[10] = v205;
    v168[11] = v206;
    v168[12] = v207;
    v168[6] = v201;
    v168[7] = v202;
    v168[8] = v203;
    v168[9] = v204;
    v168[2] = v197;
    v168[3] = v198;
    v168[4] = v199;
    v168[5] = v200;
    v168[0] = v195;
    v168[1] = v196;
    *(_OWORD *)&v193[176] = v205;
    *(_OWORD *)&v193[192] = v206;
    *(_OWORD *)&v193[208] = v207;
    *(_OWORD *)&v193[112] = v201;
    *(_OWORD *)&v193[128] = v202;
    *(_OWORD *)&v193[144] = v203;
    *(_OWORD *)&v193[160] = v204;
    *(_OWORD *)&v193[48] = v197;
    *(_OWORD *)&v193[64] = v198;
    *(_OWORD *)&v193[80] = v199;
    *(_OWORD *)&v193[96] = v200;
    *(_QWORD *)&v168[13] = v208;
    *(_QWORD *)v193 = v103;
    *(_QWORD *)&v193[8] = v104;
    *(_QWORD *)&v193[224] = v208;
    *(_OWORD *)&v193[16] = v195;
    *(_OWORD *)&v193[32] = v196;
    v193[232] = 1;
    v159 = v107;
    *(_QWORD *)&v193[240] = v107;
    *(_QWORD *)&v193[248] = &_swiftEmptyArrayStorage;
    *(_QWORD *)&v193[256] = &_swiftEmptyArrayStorage;
    v108 = objc_msgSend(v43, "contentView");
    objc_msgSend(v103, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v160 = v104;
    objc_msgSend(v108, "addLayoutGuide:", v104);
    objc_msgSend(v108, "addSubview:", v103);
    v161 = v103;
    objc_msgSend(v108, "sendSubviewToBack:", v103);

    v109 = v43;
    v110 = objc_msgSend(v100, "topAnchor");
    v111 = objc_msgSend(v43, "contentView");
    v112 = objc_msgSend(v111, "mainContentGuide");

    v113 = objc_msgSend(v112, "topAnchor");
    v114 = &selRef_configureWithContext_completion_;
    v158 = objc_msgSend(v110, "constraintEqualToAnchor:", v113);

    v115 = objc_msgSend(v100, "leadingAnchor");
    v116 = objc_msgSend(v109, "contentView");
    v117 = objc_msgSend(v116, "mainContentGuide");

    v118 = objc_msgSend(v117, "leadingAnchor");
    v157 = objc_msgSend(v115, "constraintEqualToAnchor:", v118);

    v119 = (char *)objc_msgSend(v100, "trailingAnchor");
    v120 = v100;
    v121 = (uint64_t)v163;
    v162 = v109;
    v122 = objc_msgSend(v109, "contentView");
    v123 = objc_msgSend(v122, "mainContentGuide");

    v124 = objc_msgSend(v123, "trailingAnchor");
    v125 = objc_msgSend(v119, "constraintEqualToAnchor:", v124);

    v126 = objc_msgSend(v120, "bottomAnchor");
    v127 = objc_msgSend(v166, "topAnchor");
    v128 = objc_msgSend(v126, "constraintEqualToAnchor:constant:", v127, -PRXMainContentMargin);

    if ((unint64_t)v121 >> 62)
    {
      if (v121 < 0)
        v155 = v121;
      else
        v155 = v121 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v121);
      v130 = (void *)_CocoaArrayWrapper.endIndex.getter(v155);
      swift_bridgeObjectRelease(v121);
      v131 = (uint64_t)v130 + 4;
      if (!__OFADD__(v130, 4))
      {
LABEL_12:
        v130 = v128;
        v132 = sub_10000B790(v131, 1);
        specialized Array._endMutation()(v132);
        v114 = (char **)v158;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v114);
        v119 = *(char **)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v129 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if ((unint64_t)v119 < v129 >> 1)
        {
LABEL_13:
          v133 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v119, v114);
          specialized Array._endMutation()(v133);
          v134 = v157;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v134);
          v136 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v135 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18);
          v32 = v162;
          if (v136 >= v135 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v135 > 1, v136 + 1, 1);
          v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v136, v134);
          specialized Array._endMutation()(v137);
          v138 = v125;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v138);
          v140 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v139 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v140 >= v139 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v139 > 1, v140 + 1, 1);
          v141 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v140, v138);
          specialized Array._endMutation()(v141);
          v142 = v130;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v142);
          v144 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v143 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v144 >= v143 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v143 > 1, v144 + 1, 1);
          v145 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v144, v142);
          specialized Array._endMutation()(v145);

          sub_10006A754();
          sub_100069394(v146);

          v169[0] = v161;
          v169[1] = v160;
          v180 = v168[10];
          v181 = v168[11];
          v182 = v168[12];
          v183 = *(_QWORD *)&v168[13];
          v176 = v168[6];
          v177 = v168[7];
          v178 = v168[8];
          v179 = v168[9];
          v172 = v168[2];
          v173 = v168[3];
          v174 = v168[4];
          v175 = v168[5];
          v170 = v168[0];
          v171 = v168[1];
          v184 = 1;
          *(_DWORD *)v185 = *(_DWORD *)v190;
          *(_DWORD *)&v185[3] = *(_DWORD *)&v190[3];
          v186 = v159;
          v187 = &_swiftEmptyArrayStorage;
          v188 = &_swiftEmptyArrayStorage;
          nullsub_1(v169);
          v147 = (uint64_t)&v32[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer];
          sub_10003CFDC((uint64_t)&v32[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer], (uint64_t)v189, &qword_1000B90F0);
          sub_10003CFDC((uint64_t)v169, v147, &qword_1000B90F0);
          sub_100064EDC((uint64_t)v189);
          v97 = (uint64_t)v165;
          goto LABEL_20;
        }
LABEL_28:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v129 > 1, v119 + 1, 1);
        goto LABEL_13;
      }
    }
    else
    {
      v129 = v121 & 0xFFFFFFFFFFFFF8;
      v130 = *(void **)((v121 & 0xFFFFFFFFFFFFF8) + 0x10);
      v131 = (uint64_t)v130 + 4;
      if (!__OFADD__(v130, 4))
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_100069394(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_100069800(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

void sub_10006954C()
{
  uint64_t v0;
  void *v1;
  void **v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  id v9;
  _BYTE v10[264];
  uint64_t v11[33];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_gradientLayer);
  if (v1)
  {
    v2 = (void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer);
    sub_10003CFDC((uint64_t)v2, (uint64_t)v10, &qword_1000B90F0);
    sub_10003CFDC((uint64_t)v10, (uint64_t)v11, &qword_1000B90F0);
    if (sub_10003D020(v11) == 1)
    {
      v3 = v1;
      v4 = 0.0;
      v5 = 0.0;
      v6 = 0.0;
      v7 = 0.0;
    }
    else
    {
      v8 = *v2;
      v9 = v1;
      objc_msgSend(v8, "bounds");
    }
    objc_msgSend(v1, "setFrame:", v6, v7, v4, v5);

  }
}

uint64_t sub_100069714()
{
  return type metadata accessor for HeadphoneRepairViewController(0);
}

uint64_t type metadata accessor for HeadphoneRepairViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9DB8;
  if (!qword_1000B9DB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphoneRepairViewController);
  return result;
}

void sub_100069758(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_10008A5C0;
  v4[1] = &unk_10008A5D8;
  v4[2] = &unk_10008A5D8;
  sub_10001B534(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_10008A5F0;
    v4[5] = &unk_10008A608;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

uint64_t sub_1000697F0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_type);
}

uint64_t sub_100069800(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100069C28();
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100009F00(&qword_1000B9DC8);
          v13 = sub_100069A08(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void (*sub_100069A08(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100069A88(v6, a2, a3);
  return sub_100069A5C;
}

void sub_100069A5C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_100069A88(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_100069AF4;
  }
  __break(1u);
  return result;
}

void sub_100069AF4(id *a1)
{

}

id sub_100069AFC(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  objc_super v10;
  _BYTE v11[272];

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer];
  sub_10003D4A0((uint64_t)v11);
  sub_10003CFDC((uint64_t)v11, v5, &qword_1000B90F0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_gradientLayer] = 0;
  v6 = &v2[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_viewModel];
  v7 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = &v2[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_presenter];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  v2[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_type] = 19;
  v10.receiver = v2;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, "initWithContentView:", a1);
}

uint64_t sub_100069BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100069C28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B9DD0;
  if (!qword_1000B9DD0)
  {
    v1 = sub_1000157E4(&qword_1000B9DC8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000B9DD0);
  }
  return result;
}

uint64_t destroy for HeadphoneMovieContainer(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 168));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 184));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 248));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 256));
}

uint64_t initializeWithCopy for HeadphoneMovieContainer(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  v7 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v7;
  v8 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v8;
  v9 = *(_OWORD *)(a2 + 192);
  v10 = *(_OWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 192) = v9;
  *(_OWORD *)(a1 + 208) = v10;
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v12 = *(void **)(a2 + 240);
  v11 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = v12;
  *(_QWORD *)(a1 + 248) = v11;
  v13 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 256) = v13;
  v14 = v3;
  v15 = v4;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v16 = v12;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v13);
  return a1;
}

uint64_t assignWithCopy for HeadphoneMovieContainer(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v10 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v10;
  v11 = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v12 = *(_QWORD *)(a2 + 168);
  v13 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v14 = *(_QWORD *)(a2 + 184);
  v15 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v16 = *(void **)(a2 + 240);
  v17 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v16;
  v18 = v16;

  v19 = *(_QWORD *)(a2 + 248);
  v20 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = *(_QWORD *)(a2 + 256);
  v22 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  return a1;
}

void *initializeWithTake for HeadphoneMovieContainer(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x108uLL);
}

uint64_t assignWithTake for HeadphoneMovieContainer(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  v7 = *(_QWORD *)(a2 + 168);
  v8 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 184);
  v10 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);

  v12 = *(_QWORD *)(a1 + 248);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneMovieContainer(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 264))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneMovieContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 264) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 264) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneMovieContainer()
{
  return &type metadata for HeadphoneMovieContainer;
}

void sub_10006A0FC()
{
  __asm { BR              X10 }
}

uint64_t sub_10006A15C@<X0>(int a1@<W8>, double a2@<D2>, double a3@<D3>, uint64_t a4, uint64_t a5, id a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  void *v25;
  uint64_t v26;
  void *v27;
  BOOL v28;
  uint64_t v29;
  double v31;
  double v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;

  v28 = a1 == 2;
  v29 = 128;
  if (v28)
    v29 = 144;
  else
    a3 = a2;
  v31 = *(double *)(v26 + v29);
  v32 = a2 * 0.5 - (*(double *)(v26 + 40) + *(double *)(v26 + 32) * 0.5);
  v33 = *(void **)(v26 + 8);
  v34 = objc_msgSend(v33, "centerYAnchor");
  v83 = v27;
  v35 = objc_msgSend(v27, "centerYAnchor");
  v86 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  v36 = objc_msgSend(v33, "topAnchor");
  v37 = objc_msgSend(v25, "topAnchor");
  v84 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  v38 = objc_msgSend(v33, "topAnchor");
  v39 = objc_msgSend(v27, "topAnchor");
  v40 = objc_msgSend(v38, "constraintGreaterThanOrEqualToAnchor:", v39);

  v41 = *(id *)v26;
  v42 = objc_msgSend(*(id *)v26, "centerYAnchor");
  v43 = objc_msgSend(v33, "centerYAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, v32);

  v45 = objc_msgSend(v41, "topAnchor");
  v46 = objc_msgSend(v33, "topAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  v48 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v49 = swift_allocObject(v48, 56, 7);
  *(_OWORD *)(v49 + 16) = xmmword_100088590;
  *(_QWORD *)(v49 + 32) = v44;
  *(_QWORD *)(v49 + 40) = v86;
  *(_QWORD *)(v49 + 48) = v40;
  v88 = v49;
  specialized Array._endMutation()(v49);
  v50 = *(_QWORD *)(v26 + 248);
  v51 = v44;
  v81 = v86;
  v52 = v40;
  swift_bridgeObjectRelease(v50);
  *(_QWORD *)(v26 + 248) = v88;
  v53 = swift_allocObject(v48, 48, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100087F40;
  *(_QWORD *)(v53 + 32) = v84;
  *(_QWORD *)(v53 + 40) = v47;
  v89 = v53;
  specialized Array._endMutation()(v53);
  v54 = *(_QWORD *)(v26 + 256);
  v85 = v84;
  v87 = v47;
  swift_bridgeObjectRelease(v54);
  *(_QWORD *)(v26 + 256) = v89;
  v55 = swift_allocObject(v48, 120, 7);
  *(_OWORD *)(v55 + 16) = xmmword_10008A630;
  v56 = objc_msgSend(v41, "heightAnchor");
  v57 = objc_msgSend(v56, "constraintEqualToConstant:", a3);

  *(_QWORD *)(v55 + 32) = v57;
  v58 = objc_msgSend(v41, "widthAnchor");
  v59 = objc_msgSend(v58, "constraintEqualToConstant:", v31);

  *(_QWORD *)(v55 + 40) = v59;
  *(_QWORD *)(v55 + 48) = v51;
  v82 = v51;
  v60 = objc_msgSend(v41, "centerXAnchor");
  v61 = objc_msgSend(v33, "centerXAnchor");
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

  *(_QWORD *)(v55 + 56) = v62;
  *(_QWORD *)(v55 + 64) = v52;
  v63 = v52;
  v64 = objc_msgSend(v33, "bottomAnchor");
  v65 = objc_msgSend(v83, "bottomAnchor");
  v66 = objc_msgSend(v64, "constraintLessThanOrEqualToAnchor:", v65);

  v67 = *(void **)(v26 + 240);
  *(_QWORD *)(v55 + 72) = v66;
  *(_QWORD *)(v55 + 80) = v67;
  *(_QWORD *)(v55 + 88) = v81;
  v68 = v81;
  v69 = v67;
  v70 = objc_msgSend(v33, "centerXAnchor");
  v71 = objc_msgSend(v83, "centerXAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v55 + 96) = v72;
  v73 = objc_msgSend(v33, "leadingAnchor");
  v74 = objc_msgSend(v83, "leadingAnchor");
  v75 = objc_msgSend(v73, "constraintEqualToAnchor:", v74);

  *(_QWORD *)(v55 + 104) = v75;
  v76 = objc_msgSend(v33, "trailingAnchor");
  v77 = objc_msgSend(v83, "trailingAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v55 + 112) = v78;
  specialized Array._endMutation()(v79);

  return v55;
}

void sub_10006A754()
{
  __asm { BR              X10 }
}

uint64_t sub_10006A7AC@<X0>(int a1@<W8>, double a2@<D1>, double a3@<D2>, double a4@<D3>, double a5@<D4>)
{
  void *v5;
  uint64_t v6;
  double v7;
  double v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;

  v7 = *(double *)(v6 + 32);
  if (a1 != 2)
    a4 = a2;
  if (a1 != 2)
    a5 = a3;
  v10 = a3 * 0.5 - (*(double *)(v6 + 40) + v7 * 0.5);
  v11 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v12 = swift_allocObject(v11, 120, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10008A630;
  v13 = *(id *)v6;
  v14 = objc_msgSend(*(id *)v6, "heightAnchor");
  v15 = objc_msgSend(v14, "constraintEqualToConstant:", a5);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(v13, "widthAnchor");
  v17 = objc_msgSend(v16, "constraintEqualToConstant:", a4);

  *(_QWORD *)(v12 + 40) = v17;
  v18 = objc_msgSend(v13, "centerYAnchor");
  v19 = *(void **)(v6 + 8);
  v20 = objc_msgSend(v19, "centerYAnchor");
  v21 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v20, v10);

  *(_QWORD *)(v12 + 48) = v21;
  v22 = objc_msgSend(v13, "centerXAnchor");
  v23 = objc_msgSend(v19, "centerXAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v12 + 56) = v24;
  v25 = objc_msgSend(v19, "topAnchor");
  v26 = objc_msgSend(v5, "topAnchor");
  v27 = objc_msgSend(v25, "constraintGreaterThanOrEqualToAnchor:", v26);

  *(_QWORD *)(v12 + 64) = v27;
  v28 = objc_msgSend(v19, "bottomAnchor");
  v29 = objc_msgSend(v5, "bottomAnchor");
  v30 = objc_msgSend(v28, "constraintLessThanOrEqualToAnchor:", v29);

  *(_QWORD *)(v12 + 72) = v30;
  v31 = objc_msgSend(v19, "heightAnchor");
  v32 = objc_msgSend(v31, "constraintEqualToConstant:", v7);

  *(_QWORD *)(v12 + 80) = v32;
  v33 = objc_msgSend(v19, "centerYAnchor");
  v34 = objc_msgSend(v5, "centerYAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v12 + 88) = v35;
  v36 = objc_msgSend(v19, "centerXAnchor");
  v37 = objc_msgSend(v5, "centerXAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v12 + 96) = v38;
  v39 = objc_msgSend(v19, "leadingAnchor");
  v40 = objc_msgSend(v5, "leadingAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v12 + 104) = v41;
  v42 = objc_msgSend(v19, "trailingAnchor");
  v43 = objc_msgSend(v5, "trailingAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v12 + 112) = v44;
  specialized Array._endMutation()(v45);
  return v12;
}

uint64_t sub_10006AC24(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;

  v5 = 128;
  if (*(_BYTE *)(v2 + 232) == 2)
    v5 = 144;
  v6 = 136;
  if (*(_BYTE *)(v2 + 232) == 2)
    v6 = 152;
  v7 = *(double *)(v2 + v6);
  v8 = *(double *)(v2 + v5);
  v9 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v10 = swift_allocObject(v9, 120, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10008A630;
  v11 = *(id *)v2;
  v12 = objc_msgSend(*(id *)v2, "heightAnchor");
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", v7);

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(v11, "widthAnchor");
  v15 = objc_msgSend(v14, "constraintEqualToConstant:", v8);

  *(_QWORD *)(v10 + 40) = v15;
  v16 = objc_msgSend(v11, "topAnchor");
  v17 = objc_msgSend(a1, "topAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v10 + 48) = v18;
  v19 = objc_msgSend(v11, "centerXAnchor");
  v20 = objc_msgSend(a1, "centerXAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v10 + 56) = v21;
  v22 = *(void **)(v2 + 8);
  v23 = objc_msgSend(v22, "topAnchor");
  v24 = objc_msgSend(a2, "topAnchor");
  v25 = objc_msgSend(v23, "constraintGreaterThanOrEqualToAnchor:", v24);

  *(_QWORD *)(v10 + 64) = v25;
  v26 = objc_msgSend(v22, "bottomAnchor");
  v27 = objc_msgSend(a2, "bottomAnchor");
  v28 = objc_msgSend(v26, "constraintLessThanOrEqualToAnchor:", v27);

  *(_QWORD *)(v10 + 72) = v28;
  v29 = objc_msgSend(v22, "centerYAnchor");
  v30 = objc_msgSend(a2, "centerYAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  v32 = *(void **)(v2 + 240);
  *(_QWORD *)(v10 + 80) = v31;
  *(_QWORD *)(v10 + 88) = v32;
  v33 = v32;
  v34 = objc_msgSend(v22, "centerXAnchor");
  v35 = objc_msgSend(a2, "centerXAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v10 + 96) = v36;
  v37 = objc_msgSend(v22, "leadingAnchor");
  v38 = objc_msgSend(a2, "leadingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v10 + 104) = v39;
  v40 = objc_msgSend(v22, "trailingAnchor");
  v41 = objc_msgSend(a2, "trailingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v10 + 112) = v42;
  specialized Array._endMutation()(v43);
  return v10;
}

void sub_10006B044()
{
  __asm { BR              X10 }
}

uint64_t sub_10006B0A4()
{
  void *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;

  v5 = *(double *)(v1 + 32);
  v6 = v4 * 0.5 - (*(double *)(v1 + 40) + v5 * 0.5);
  v7 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v8 = swift_allocObject(v7, 104, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100087720;
  v9 = *(id *)v1;
  v10 = objc_msgSend(*(id *)v1, "heightAnchor");
  v11 = objc_msgSend(v10, "constraintEqualToConstant:", v4 * v3);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v9, "widthAnchor");
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", v2 * v3);

  *(_QWORD *)(v8 + 40) = v13;
  v14 = objc_msgSend(v9, "centerYAnchor");
  v15 = *(void **)(v1 + 8);
  v16 = objc_msgSend(v15, "centerYAnchor");
  v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v16, v3 * v6);

  *(_QWORD *)(v8 + 48) = v17;
  v18 = objc_msgSend(v9, "centerXAnchor");
  v19 = objc_msgSend(v15, "centerXAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v8 + 56) = v20;
  v21 = objc_msgSend(v15, "topAnchor");
  v22 = objc_msgSend(v0, "topAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v8 + 64) = v23;
  v24 = objc_msgSend(v15, "heightAnchor");
  v25 = objc_msgSend(v24, "constraintEqualToConstant:", v5 * v3);

  *(_QWORD *)(v8 + 72) = v25;
  v26 = objc_msgSend(v15, "centerXAnchor");
  v27 = objc_msgSend(v0, "centerXAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v8 + 80) = v28;
  v29 = objc_msgSend(v15, "leadingAnchor");
  v30 = objc_msgSend(v0, "leadingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v8 + 88) = v31;
  v32 = objc_msgSend(v15, "trailingAnchor");
  v33 = objc_msgSend(v0, "trailingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v8 + 96) = v34;
  specialized Array._endMutation()(v35);
  return v8;
}

_QWORD *sub_10006B4C0()
{
  char *v0;
  uint64_t v1;
  uint64_t inited;
  id v3;
  void *v4;
  void *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE v22[56];

  v1 = sub_100009F00(&qword_1000B81D8);
  inited = swift_initStackObject(v1, v22);
  *(_OWORD *)(inited + 16) = xmmword_100089C70;
  *(_QWORD *)(inited + 32) = objc_msgSend(v0, "titleView");
  v3 = objc_msgSend(v0, "bodyView");
  *(_QWORD *)(inited + 40) = v3;
  v4 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_trainingView];
  *(_QWORD *)(inited + 48) = v4;
  specialized Array._endMutation()(v3);
  v5 = *(void **)(inited + 32);
  if (!v5)
  {
    v11 = v4;
    v10 = *(void **)(inited + 40);
    if (!v10)
      goto LABEL_10;
    goto LABEL_7;
  }
  v6 = v5;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
  v8 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v7 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v8 >= v7 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
  v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
  specialized Array._endMutation()(v9);
  v10 = *(void **)(inited + 40);
  if (v10)
  {
LABEL_7:
    v12 = v10;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v14 >= v13 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
    v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
    specialized Array._endMutation()(v15);
  }
LABEL_10:
  v16 = *(void **)(inited + 48);
  if (v16)
  {
    v17 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
    specialized Array._endMutation()(v20);
  }
  swift_bridgeObjectRelease(inited);
  return _swiftEmptyArrayStorage;
}

void sub_10006B6B4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  Class isa;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  id v31;
  void *v32;
  uint64_t v33;
  objc_super v34;

  v3 = v2;
  v34.receiver = v2;
  v34.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v34, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 1);
  v4 = objc_msgSend(objc_allocWithZone((Class)ControlCenterTrainingView), "init");
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v2, "contentView");
  objc_msgSend(v5, "addSubview:", v4);

  v6 = objc_msgSend(v3, "contentView");
  v7 = objc_msgSend(v6, "mainContentGuide");

  v8 = objc_msgSend(v4, "centerXAnchor");
  v9 = objc_msgSend(v7, "centerXAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9, 195.0);

  v11 = (void *)objc_opt_self(NSLayoutConstraint);
  v12 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v13 = swift_allocObject(v12, 56, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100088590;
  v14 = objc_msgSend(v4, "topAnchor");
  v15 = objc_msgSend(v7, "topAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v13 + 32) = v16;
  v17 = objc_msgSend(v4, "bottomAnchor");
  v18 = objc_msgSend(v7, "bottomAnchor");
  v19 = objc_msgSend(v17, "constraintLessThanOrEqualToAnchor:", v18);

  *(_QWORD *)(v13 + 40) = v19;
  *(_QWORD *)(v13 + 48) = v10;
  specialized Array._endMutation()(v20);
  sub_100009F84(0, (unint64_t *)&qword_1000B7CD0, NSLayoutConstraint_ptr);
  v21 = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v11, "activateConstraints:", isa);

  v23 = *(void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_trainingView];
  *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_trainingView] = v4;
  v24 = v4;

  v25 = *(void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_horizontalConstraint];
  *(_QWORD *)&v3[OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_horizontalConstraint] = v21;
  v26 = v21;

  v27 = (uint64_t)sub_10006B4C0();
  v28 = v27;
  if (!((unint64_t)v27 >> 62))
  {
    v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v27);
    if (v29)
      goto LABEL_3;
LABEL_13:

    swift_bridgeObjectRelease_n(v28, 2);
    return;
  }
  if (v27 < 0)
    v33 = v27;
  else
    v33 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v27);
  v29 = _CocoaArrayWrapper.endIndex.getter(v33);
  if (!v29)
    goto LABEL_13;
LABEL_3:
  if (v29 >= 1)
  {
    for (i = 0; i != v29; ++i)
    {
      if ((v28 & 0xC000000000000001) != 0)
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v28);
      else
        v31 = *(id *)(v28 + 8 * i + 32);
      v32 = v31;
      objc_msgSend(v31, "setAlpha:", 0.0);

    }
    goto LABEL_13;
  }
  __break(1u);
}

void sub_10006BAA8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void **v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_1000A95C0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v21 = sub_10006C8F0;
  v22 = v2;
  v17 = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_100012FBC;
  v20 = &unk_1000A9600;
  v3 = _Block_copy(&v17);
  swift_release(v22);
  objc_msgSend(v1, "animateWithDuration:delay:options:animations:completion:", 0, v3, 0, 0.5, 0.0);
  _Block_release(v3);
  v4 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v5) = 1041865114;
  LODWORD(v6) = 0.75;
  LODWORD(v7) = 1.0;
  LODWORD(v8) = 1041865114;
  v9 = objc_msgSend(v4, "initWithControlPoints::::", v5, v6, v8, v7);
  v10 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v10, "begin");
  objc_msgSend(v10, "setAnimationTimingFunction:", v9);
  v11 = swift_allocObject(&unk_1000A95C0, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v0);
  v21 = sub_10006C90C;
  v22 = v11;
  v17 = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_100012FBC;
  v20 = &unk_1000A9628;
  v12 = _Block_copy(&v17);
  swift_release(v22);
  v13 = swift_allocObject(&unk_1000A9660, 24, 7);
  *(_QWORD *)(v13 + 16) = v0;
  v21 = sub_10006C938;
  v22 = v13;
  v17 = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_100013120;
  v20 = &unk_1000A9678;
  v14 = _Block_copy(&v17);
  v15 = v22;
  v16 = v0;
  swift_release(v15);
  objc_msgSend(v1, "animateWithDuration:animations:completion:", v12, v14, 0.5);
  _Block_release(v14);
  _Block_release(v12);
  objc_msgSend(v10, "commit");

}

void sub_10006BD54(uint64_t a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitleText:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setBodyText:", v4);

  objc_msgSend(v1, "setShouldCenterAlignText:", 1);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = swift_allocObject(&unk_1000A95C0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v12[4] = sub_10006C8D0;
  v13 = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100011720;
  v12[3] = &unk_1000A95D8;
  v8 = _Block_copy(v12);
  v9 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v7, 1, v8);

  _Block_release(v8);
  v10 = v13;
  swift_release(v6);
  v11 = objc_msgSend(v1, "addAction:", v9, swift_release(v10).n128_f64[0]);

}

void sub_10006BEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_presenter);

    if (v5)
    {
      sub_100074F94();
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_10006BF64(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong
                  + OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_horizontalConstraint);
    if (v4)
    {
      v5 = v4;

      objc_msgSend(v5, "setConstant:", 0.0);
      v3 = v5;
    }

  }
  swift_beginAccess(v1, &v9, 0, 0);
  v6 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "contentView");

    objc_msgSend(v8, "layoutIfNeeded");
  }
}

uint64_t sub_10006C040(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v14 = __chkstk_darwin(v11, v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  v19 = (char *)&v29 - v18;
  sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()(v20);
  + infix(_:_:)(v16, 3.0);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v16, v11);
  v22 = swift_allocObject(&unk_1000A95C0, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, a2);
  aBlock[4] = sub_10006C940;
  v34 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FBC;
  aBlock[3] = &unk_1000A96A0;
  v23 = _Block_copy(aBlock);
  swift_release(v34);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_100015EB0();
  v26 = sub_100009F00(&qword_1000B8338);
  v27 = sub_10004E7E0();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v3, v25);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v19, v10, v6, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, v11);
}

void sub_10006C2AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  _QWORD aBlock[5];
  uint64_t v10;
  _BYTE v11[24];

  v2 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(Strong
                  + OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_trainingView);
    if (v5)
    {
      v6 = v5;

      aBlock[4] = sub_10006C948;
      v10 = a1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100012FBC;
      aBlock[3] = &unk_1000A96C8;
      v7 = _Block_copy(aBlock);
      v8 = v10;
      swift_retain(a1);
      objc_msgSend(v6, "animateToInitialStateWithCompletionHandler:", v7, swift_release(v8).n128_f64[0]);
      _Block_release(v7);
      v4 = v6;
    }

  }
}

void sub_10006C398(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10006C3E8();

  }
}

void sub_10006C3E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void **v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v1 = v0;
  v2 = (void *)objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_1000A95C0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v1);
  v11 = sub_10006C950;
  v12 = v3;
  v7 = _NSConcreteStackBlock;
  v8 = 1107296256;
  v9 = sub_100012FBC;
  v10 = &unk_1000A96F0;
  v4 = _Block_copy(&v7);
  swift_release(v12);
  v5 = swift_allocObject(&unk_1000A95C0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16, v1);
  v11 = sub_10006C96C;
  v12 = v5;
  v7 = _NSConcreteStackBlock;
  v8 = 1107296256;
  v9 = sub_100013120;
  v10 = &unk_1000A9718;
  v6 = _Block_copy(&v7);
  swift_release(v12);
  objc_msgSend(v2, "animateWithDuration:delay:options:animations:completion:", 0, v4, v6, 0.166666667, 0.0);
  _Block_release(v6);
  _Block_release(v4);
}

uint64_t sub_10006C540(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = (uint64_t)sub_10006B4C0();

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v11 = v6;
      else
        v11 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      result = _CocoaArrayWrapper.endIndex.getter(v11);
      v7 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(v6);
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
          else
            v9 = *(id *)(v6 + 8 * i + 32);
          v10 = v9;
          objc_msgSend(v9, "setAlpha:", a2);

        }
      }
    }
    return swift_bridgeObjectRelease_n(v6, 2);
  }
  return result;
}

void sub_10006C658(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_presenter);

    if (v5)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_1000093F8(v6, (uint64_t)qword_1000B9F80);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Requested control center training finished", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

      v11 = *(_QWORD *)(v5 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(_BYTE *)(v11
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 60)) = 0;
      sub_100072410(0);
      swift_unknownObjectRelease(v5);
    }
  }
}

uint64_t type metadata accessor for HeadphoneControlCenterTrainingViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController);
}

uint64_t sub_10006C89C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_type);
}

uint64_t sub_10006C8AC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006C8D0(uint64_t a1)
{
  uint64_t v1;

  sub_10006BEF4(a1, v1);
}

uint64_t sub_10006C8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006C8E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10006C8F0()
{
  uint64_t v0;

  return sub_10006C540(v0, 1.0);
}

void sub_10006C90C()
{
  uint64_t v0;

  sub_10006BF64(v0);
}

uint64_t sub_10006C914()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006C938(uint64_t a1)
{
  uint64_t v1;

  return sub_10006C040(a1, *(_QWORD *)(v1 + 16));
}

void sub_10006C940()
{
  uint64_t v0;

  sub_10006C2AC(v0);
}

void sub_10006C948()
{
  uint64_t v0;

  sub_10006C398(v0);
}

uint64_t sub_10006C950()
{
  uint64_t v0;

  return sub_10006C540(v0, 0.0);
}

void sub_10006C96C(uint64_t a1)
{
  uint64_t v1;

  sub_10006C658(a1, v1);
}

id sub_10006C9AC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  id v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  void *v103;
  void *v104;
  id v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  id v117;
  id v118;
  id v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  id v124;
  id v125;
  id v126;
  id v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  Class isa;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  objc_class *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  void *v146;
  void *v147;
  _BYTE v148[216];
  _QWORD v149[27];
  uint64_t v150;
  char v151[24];
  objc_super v152;
  char v153[32];

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = (uint64_t *)&v2[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedConstraints];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedConstraints], v153, 0, 0);
  v6 = *v5;
  if ((unint64_t)*v5 >> 62)
  {
    if (v6 < 0)
      v136 = *v5;
    else
      v136 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v5);
    v137 = _CocoaArrayWrapper.endIndex.getter(v136);
    swift_bridgeObjectRelease(v6);
    if (v137)
      goto LABEL_50;
  }
  else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_50;
  }
  v7 = &v3[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews], v151, 0, 0);
  v8 = *(_QWORD *)v7;
  if (*(_QWORD *)(*(_QWORD *)v7 + 16))
  {
    v150 = *(_QWORD *)v7;
    v9 = *(void **)(v8 + 32);
    v10 = *(_QWORD *)(v8 + 40);
    swift_bridgeObjectRetain(v8);
    v11 = v9;
    sub_10006DCE4(0, 1);
    v145 = v3;
    v139 = ObjectType;
    if (v3[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_isUsingRows] == 1)
    {
      v12 = objc_msgSend(v11, "topAnchor");
      v13 = objc_msgSend(v3, "topAnchor");
      v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

      v15 = swift_beginAccess(v5, v149, 33, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
      specialized Array._endMutation()(v18);
      swift_endAccess(v149);
      v19 = objc_msgSend(v11, "leadingAnchor");
      v20 = objc_msgSend(v3, "leadingAnchor");
      v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

      v22 = swift_beginAccess(v5, v149, 33, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
      v24 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v23 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v24 >= v23 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
      v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v21);
      specialized Array._endMutation()(v25);
      swift_endAccess(v149);
      v26 = v11;
      v27 = objc_msgSend(v11, "trailingAnchor");
      v28 = objc_msgSend(v3, "trailingAnchor");
      v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

      v30 = swift_beginAccess(v5, v149, 33, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
      v32 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v31 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v32 >= v31 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
      v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v29);
      specialized Array._endMutation()(v33);
      swift_endAccess(v149);
      v35 = *(_QWORD *)(v150 + 16);
      v138 = v150;
      if (v35)
      {
        v36 = (uint64_t *)(v150 + 40);
        v37 = v26;
        do
        {
          v143 = v10;
          v38 = (void *)*(v36 - 1);
          v10 = *v36;
          v141 = swift_getObjectType(v38, v34);
          v39 = v38;
          v40 = objc_msgSend(v39, "topAnchor");
          v140 = swift_getObjectType(v37, v41);
          v146 = v37;
          v42 = objc_msgSend(v37, "bottomAnchor");
          v43 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v42, 20.0);

          v44 = swift_beginAccess(v5, v149, 33, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
          v46 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v45 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v46 >= v45 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
          v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v43);
          specialized Array._endMutation()(v47);
          swift_endAccess(v149);
          v48 = objc_msgSend(v39, "leadingAnchor");
          v49 = objc_msgSend(v145, "leadingAnchor");
          v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

          v51 = swift_beginAccess(v5, v149, 33, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
          v53 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v52 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v53 >= v52 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
          v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v50);
          specialized Array._endMutation()(v54);
          swift_endAccess(v149);
          v55 = objc_msgSend(v39, "trailingAnchor");
          v56 = objc_msgSend(v145, "trailingAnchor");
          v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

          v58 = swift_beginAccess(v5, v149, 33, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
          v60 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v59 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v60 >= v59 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
          v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v57);
          specialized Array._endMutation()(v61);
          swift_endAccess(v149);
          v149[0] = v39;
          v62 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v141, v10);
          v149[0] = v146;
          v63 = (void *)(*(uint64_t (**)(uint64_t))(v143 + 16))(v140);
          v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

          v65 = swift_beginAccess(v5, v149, 33, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
          v67 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v66 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v67 >= v66 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
          v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v64);
          specialized Array._endMutation()(v68);
          swift_endAccess(v149);

          v36 += 2;
          v37 = v39;
          --v35;
        }
        while (v35);
      }
      else
      {
        v39 = v11;
      }
      swift_bridgeObjectRelease(v138);
      v124 = objc_msgSend(v39, "bottomAnchor");
      v3 = v145;
      v125 = objc_msgSend(v145, "bottomAnchor");
      v126 = objc_msgSend(v124, "constraintEqualToAnchor:", v125);
    }
    else
    {
      v69 = objc_msgSend(v11, "leftAnchor");
      v70 = objc_msgSend(v3, "leftAnchor");
      v71 = objc_msgSend(v69, "constraintGreaterThanOrEqualToAnchor:", v70);

      v72 = swift_beginAccess(v5, v149, 33, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v72);
      v74 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v73 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v74 >= v73 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v73 > 1, v74 + 1, 1);
      v75 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v74, v71);
      specialized Array._endMutation()(v75);
      swift_endAccess(v149);
      v76 = objc_msgSend(v11, "topAnchor");
      v77 = objc_msgSend(v3, "topAnchor");
      v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

      v79 = swift_beginAccess(v5, v149, 33, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
      v81 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v80 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v81 >= v80 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
      v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v78);
      specialized Array._endMutation()(v82);
      swift_endAccess(v149);
      v39 = v11;
      v83 = objc_msgSend(v11, "bottomAnchor");
      v84 = objc_msgSend(v3, "bottomAnchor");
      v85 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

      v86 = swift_beginAccess(v5, v149, 33, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v86);
      v88 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v87 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v88 >= v87 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v87 > 1, v88 + 1, 1);
      v89 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v88, v85);
      specialized Array._endMutation()(v89);
      swift_endAccess(v149);
      v91 = *(_QWORD *)(v150 + 16);
      v142 = v150;
      if (v91)
      {
        v144 = (uint64_t)&v3[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_layoutMetrics];
        v92 = (uint64_t *)(v150 + 40);
        v93 = v11;
        do
        {
          v94 = (void *)*(v92 - 1);
          v95 = *v92;
          v96 = swift_getObjectType(v93, v90);
          v147 = v93;
          v149[0] = v93;
          v97 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v10 + 40);
          v39 = v94;
          if (v97(v96, v10) > 1u
            || (v99 = swift_getObjectType(v39, v98),
                v149[0] = v39,
                (*(unsigned __int8 (**)(uint64_t, uint64_t))(v95 + 40))(v99, v95) > 1u))
          {
            sub_10001B808(v144, (uint64_t)v148);
            sub_10001B808((uint64_t)v148, (uint64_t)v149);
            v101 = 0.0;
            if (sub_10001B850((uint64_t)v149) != 1)
              v101 = *(double *)(v144 + 184);
          }
          else
          {
            sub_10001B808(v144, (uint64_t)v148);
            sub_10001B808((uint64_t)v148, (uint64_t)v149);
            v101 = 0.0;
            if (sub_10001B850((uint64_t)v149) != 1)
              v101 = *(double *)(v144 + 176);
          }
          v102 = swift_getObjectType(v39, v100);
          v149[0] = v39;
          v103 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v95 + 24))(v102, v95);
          v149[0] = v93;
          v104 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v96, v10);
          v105 = objc_msgSend(v103, "constraintEqualToAnchor:constant:", v104, v101);

          v106 = swift_beginAccess(v5, v149, 33, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v106);
          v108 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v107 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v108 >= v107 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v107 > 1, v108 + 1, 1);
          v109 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v108, v105);
          specialized Array._endMutation()(v109);
          swift_endAccess(v149);
          v110 = objc_msgSend(v39, "topAnchor");
          v111 = objc_msgSend(v145, "topAnchor");
          v112 = objc_msgSend(v110, "constraintEqualToAnchor:", v111);

          v113 = swift_beginAccess(v5, v149, 33, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v113);
          v115 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v114 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v115 >= v114 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v114 > 1, v115 + 1, 1);
          v116 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v115, v112);
          specialized Array._endMutation()(v116);
          swift_endAccess(v149);
          v117 = objc_msgSend(v39, "bottomAnchor");
          v118 = objc_msgSend(v145, "bottomAnchor");
          v119 = objc_msgSend(v117, "constraintEqualToAnchor:", v118);

          v120 = swift_beginAccess(v5, v149, 33, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v120);
          v122 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v121 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v122 >= v121 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v121 > 1, v122 + 1, 1);
          v123 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v122, v119);
          specialized Array._endMutation()(v123);
          swift_endAccess(v149);

          v92 += 2;
          v93 = v39;
          v10 = v95;
          --v91;
        }
        while (v91);
      }
      swift_bridgeObjectRelease(v142);
      v124 = objc_msgSend(v39, "rightAnchor");
      v3 = v145;
      v125 = objc_msgSend(v145, "rightAnchor");
      v126 = objc_msgSend(v124, "constraintLessThanOrEqualToAnchor:", v125);
    }
    v127 = v126;

    v128 = swift_beginAccess(v5, v149, 33, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v128);
    v130 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v129 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v130 >= v129 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v129 > 1, v130 + 1, 1);
    v131 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v130, v127);
    specialized Array._endMutation()(v131);
    swift_endAccess(v149);
    v132 = (void *)objc_opt_self(NSLayoutConstraint);
    v133 = *v5;
    sub_10000B880();
    swift_bridgeObjectRetain(v133);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v133);
    objc_msgSend(v132, "activateConstraints:", isa);

    ObjectType = v139;
  }
LABEL_50:
  v152.receiver = v3;
  v152.super_class = ObjectType;
  return objc_msgSendSuper2(&v152, "updateConstraints");
}

id sub_10006D828(uint64_t a1, uint64_t a2)
{
  char *v2;
  id v4;
  id v5;
  void *v6;
  char *v7;
  uint64_t v8;
  Class isa;
  uint64_t v10;
  char v12[24];
  objc_super v13;

  v13.receiver = v2;
  v13.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v13, "traitCollectionDidChange:", a1);
  v4 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter(v5);
  v2[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_isUsingRows] = v4 & 1;
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = &v2[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedConstraints];
  swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedConstraints], v12, 1, 0);
  v8 = *(_QWORD *)v7;
  sub_10000B880();
  swift_bridgeObjectRetain(v8);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v8);
  objc_msgSend(v6, "deactivateConstraints:", isa);

  v10 = *(_QWORD *)v7;
  *(_QWORD *)v7 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v10);
  return objc_msgSend(v2, "setNeedsUpdateConstraints");
}

id sub_10006D9CC(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  objc_class *ObjectType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  objc_super v19;
  _BYTE v20[224];

  ObjectType = (objc_class *)swift_getObjectType(v6, a6);
  v12 = (uint64_t)&v6[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_layoutMetrics];
  sub_10001F208((uint64_t)v20);
  sub_10001B808((uint64_t)v20, v12);
  *(_QWORD *)&v6[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedConstraints] = _swiftEmptyArrayStorage;
  v13 = OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_isUsingRows;
  v14 = (void *)objc_opt_self(UITraitCollection);
  v15 = v6;
  v16 = objc_msgSend(v14, "currentTraitCollection");
  v17 = objc_msgSend(v16, "preferredContentSizeCategory");

  LOBYTE(v16) = UIContentSizeCategory.isAccessibilityCategory.getter(v17);
  v6[v13] = v16 & 1;

  v19.receiver = v15;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
}

id sub_10006DB20(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;
  _BYTE v14[216];

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_layoutMetrics];
  sub_10001F208((uint64_t)v14);
  sub_10001B808((uint64_t)v14, v5);
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v2[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedConstraints] = _swiftEmptyArrayStorage;
  v6 = OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_isUsingRows;
  v7 = (void *)objc_opt_self(UITraitCollection);
  v8 = v2;
  v9 = objc_msgSend(v7, "currentTraitCollection");
  v10 = objc_msgSend(v9, "preferredContentSizeCategory");

  LOBYTE(v9) = UIContentSizeCategory.isAccessibilityCategory.getter(v10);
  v2[v6] = v9 & 1;

  v13.receiver = v8;
  v13.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);

  return v11;
}

uint64_t type metadata accessor for HeadphoneBatteryContainer()
{
  return objc_opt_self(_TtC20HeadphoneProxService25HeadphoneBatteryContainer);
}

void *sub_10006DCE4(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *((_QWORD *)v4 + 3) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_100081F78(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = sub_100009F00(&qword_1000B9E68);
  result = (void *)swift_arrayDestroy(&v4[16 * a1 + 32], v7, v12);
  if (!v7)
    goto LABEL_20;
  v14 = *((_QWORD *)v4 + 2);
  v15 = __OFSUB__(v14, a2);
  v16 = v14 - a2;
  if (v15)
    goto LABEL_26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = &v4[16 * a2 + 32];
    if (a1 != a2 || &v4[16 * a1 + 32] >= &v17[16 * v16])
      result = memmove(&v4[16 * a1 + 32], v17, 16 * v16);
    v18 = *((_QWORD *)v4 + 2);
    v15 = __OFADD__(v18, v8);
    v19 = v18 - v7;
    if (!v15)
    {
      *((_QWORD *)v4 + 2) = v19;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v20 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v20, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10006DE54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9E70);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9E70);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10006DEE4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  id v24;
  id v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  unsigned int v29;
  Swift::String v30;
  unint64_t v31;
  id v32;
  id v33;
  NSString v34;
  id v35;
  NSString v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  Class isa;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  char v68[24];
  char v69[24];
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  objc_super v73;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = type metadata accessor for HeadphoneModel(0);
  v7 = __chkstk_darwin(v5, v6);
  v9 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7, v10);
  v12 = &v68[-v11 - 8];
  v73.receiver = v3;
  v73.super_class = ObjectType;
  objc_msgSendSuper2(&v73, "viewDidLoad");
  objc_msgSend(v3, "setDismissalType:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController_presenter]);
  if (Strong)
  {
    v14 = Strong;
    v15 = Strong + 16;
    swift_beginAccess(Strong + 16, v69, 0, 0);
    sub_100013528(v15, (uint64_t)&v70);
    swift_unknownObjectRelease(v14);
    v16 = v72;
    if (v72)
    {
      v17 = sub_100013410(&v70, v72);
      v18 = *(_QWORD *)(v16 - 8);
      __chkstk_darwin(v17, v17);
      v20 = &v68[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(char *))(v18 + 16))(v20);
      sub_100013570((uint64_t)&v70);
      v21 = *(_QWORD *)v20 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v21, v68, 0, 0);
      sub_1000135B0(v21, (uint64_t)v9);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
      sub_1000135F4((uint64_t)v9, (uint64_t)v12);
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjectType);
      v23 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v24 = objc_msgSend(v3, "traitCollection");
      v25 = objc_msgSend(v24, "userInterfaceStyle");

      v26 = v25 == (id)1;
      if (v25 == (id)1)
        v27 = 0x746867694CLL;
      else
        v27 = 1802658116;
      if (v26)
        v28 = (void *)0xE500000000000000;
      else
        v28 = (void *)0xE400000000000000;
      v29 = *(_DWORD *)&v12[*(int *)(v5 + 124)] - 8217;
      if (v29 <= 7 && ((1 << v29) & 0xA5) != 0)
      {
        v70 = 0;
        v71 = 0xE000000000000000;
        _StringGuts.grow(_:)(36);
        swift_bridgeObjectRelease(v71);
        v70 = 0xD000000000000022;
        v71 = 0x800000010008FD70;
      }
      else
      {
        v70 = 0;
        v71 = 0xE000000000000000;
        _StringGuts.grow(_:)(30);
        swift_bridgeObjectRelease(v71);
        v70 = 0xD00000000000001CLL;
        v71 = 0x800000010008FD50;
      }
      v30._countAndFlagsBits = v27;
      v30._object = v28;
      String.append(_:)(v30);
      swift_bridgeObjectRelease(v28);
      v31 = v71;
      v32 = objc_allocWithZone((Class)BSUICAPackageView);
      v33 = v23;
      v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      v35 = objc_msgSend(v32, "initWithPackageName:inBundle:", v34, v33);

      if (v35)
      {
        v36 = String._bridgeToObjectiveC()();
        objc_msgSend(v35, "setState:animated:", v36, 1);

        objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v37 = objc_msgSend(v3, "contentView");
        objc_msgSend(v37, "addSubview:", v35);

        v38 = objc_msgSend(v3, "contentView");
        v39 = objc_msgSend(v38, "mainContentGuide");

        v40 = (void *)objc_opt_self(NSLayoutConstraint);
        v41 = sub_100009F00((uint64_t *)&unk_1000B8730);
        v42 = swift_allocObject(v41, 80, 7);
        *(_OWORD *)(v42 + 16) = xmmword_100087E70;
        v43 = objc_msgSend(v35, "topAnchor");
        v44 = objc_msgSend(v39, "topAnchor");
        v45 = objc_msgSend(v43, "constraintGreaterThanOrEqualToAnchor:", v44);

        *(_QWORD *)(v42 + 32) = v45;
        v46 = objc_msgSend(v35, "bottomAnchor");
        v47 = objc_msgSend(v39, "bottomAnchor");
        v48 = objc_msgSend(v46, "constraintLessThanOrEqualToAnchor:", v47);

        *(_QWORD *)(v42 + 40) = v48;
        v49 = objc_msgSend(v35, "heightAnchor");
        v50 = objc_msgSend(v49, "constraintEqualToConstant:", 160.0);

        *(_QWORD *)(v42 + 48) = v50;
        v51 = objc_msgSend(v35, "widthAnchor");
        v52 = objc_msgSend(v51, "constraintEqualToConstant:", 320.0);

        *(_QWORD *)(v42 + 56) = v52;
        v53 = objc_msgSend(v35, "centerYAnchor");
        v54 = objc_msgSend(v39, "centerYAnchor");
        v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

        *(_QWORD *)(v42 + 64) = v55;
        v56 = objc_msgSend(v35, "centerXAnchor");
        v57 = objc_msgSend(v39, "centerXAnchor");
        v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

        *(_QWORD *)(v42 + 72) = v58;
        v70 = v42;
        specialized Array._endMutation()(v59);
        v60 = v70;
        sub_10000B880();
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v60);
        objc_msgSend(v40, "activateConstraints:", isa);

        sub_100013638((uint64_t)v12);
      }
      else
      {
        __break(1u);
      }
      return;
    }
    sub_100013570((uint64_t)&v70);
  }
  if (qword_1000B7BF8 != -1)
    swift_once(&qword_1000B7BF8, sub_10006DE54);
  v62 = type metadata accessor for Logger(0);
  v63 = sub_1000093F8(v62, (uint64_t)qword_1000B9E70);
  v64 = Logger.logObject.getter(v63);
  v65 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v66 = 0;
    _os_log_impl((void *)&_mh_execute_header, v64, v65, "Headphone Model is nil, exiting", v66, 2u);
    swift_slowDealloc(v66, -1, -1);
  }

}

void sub_10006E71C(uint64_t a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void **v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  void *v22;
  void (*v23)(uint64_t);
  uint64_t v24;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v4);

  v5 = *(_QWORD *)(a1 + 40);
  v6 = swift_allocObject(&unk_1000A9798, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v23 = sub_10006EB08;
  v24 = v6;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A97B0;
  v8 = _Block_copy(&v19);
  v9 = (void *)objc_opt_self(PRXAction);
  v10 = objc_msgSend(v9, "actionWithTitle:style:handler:", v7, 0, v8);

  _Block_release(v8);
  v11 = v24;
  swift_release(v6);

  v12 = *(_QWORD *)(a1 + 56);
  v13 = swift_allocObject(&unk_1000A9798, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v23 = sub_10006EB3C;
  v24 = v13;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A97D8;
  v15 = _Block_copy(&v19);
  v16 = objc_msgSend(v9, "actionWithTitle:style:handler:", v14, 1, v15);

  _Block_release(v15);
  v17 = v24;
  swift_release(v13);
  v18 = objc_msgSend(v1, "addAction:", v16, swift_release(v17).n128_f64[0]);

}

void sub_10006E9AC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong+ OBJC_IVAR____TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController_presenter);

    if (v7)
    {
      sub_100073BA0(a3 & 1);
      swift_unknownObjectRelease(v7);
    }
  }
}

uint64_t type metadata accessor for HeadphoneAdaptiveControlsPersonalizedVolumeViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController);
}

uint64_t sub_10006EAD4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController_type);
}

uint64_t sub_10006EAE4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006EB08(uint64_t a1)
{
  uint64_t v1;

  sub_10006E9AC(a1, v1, 1);
}

uint64_t sub_10006EB24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006EB34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10006EB3C(uint64_t a1)
{
  uint64_t v1;

  sub_10006E9AC(a1, v1, 0);
}

id sub_10006EB60()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial1ViewController____lazy_storage___topAsset;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial1ViewController____lazy_storage___topAsset);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial1ViewController____lazy_storage___topAsset);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "lightGrayColor");
    objc_msgSend(v4, "setBackgroundColor:", v5);

    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = objc_msgSend(v4, "heightAnchor");
    v7 = objc_msgSend(v6, "constraintEqualToConstant:", 450.0);

    objc_msgSend(v7, "setActive:", 1);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_10006EC88()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE v27[24];
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  objc_super v31;

  v1 = sub_100009F00(&qword_1000B83E8);
  __chkstk_darwin(v1, v2);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (objc_class *)type metadata accessor for HeadhponeHeartRateTutorial1ViewController();
  v31.receiver = v0;
  v31.super_class = v5;
  objc_msgSendSuper2(&v31, "viewDidLoad");
  objc_msgSend(v0, "setDismissalType:", 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial1ViewController_presenter]);
  if (Strong)
  {
    v7 = Strong;
    v8 = Strong + 16;
    swift_beginAccess(Strong + 16, v28, 0, 0);
    sub_100013528(v8, (uint64_t)v29);
    swift_unknownObjectRelease(v7);
    v9 = v30;
    if (v30)
    {
      v10 = sub_100013410(v29, v30);
      v11 = *(_QWORD *)(v9 - 8);
      __chkstk_darwin(v10, v10);
      v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(_QWORD *))(v11 + 16))(v13);
      sub_100017E48((uint64_t)v29, &qword_1000B81E0);
      v14 = *v13 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v14, v27, 0, 0);
      sub_1000135B0(v14, (uint64_t)v4);
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v9);
      v15 = type metadata accessor for HeadphoneModel(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 0, 1, v15);
      sub_100017E48((uint64_t)v4, &qword_1000B83E8);
      v16 = objc_msgSend(v0, "contentView");
      v17 = sub_10006EB60();
      objc_msgSend(v16, "addSubview:", v17);

      v18 = sub_10006EB60();
      v19 = objc_msgSend(v0, "contentView");
      v20 = objc_msgSend(v19, "mainContentGuide");

      objc_msgSend(v18, "pinToOtherWithLayoutGuide:", v20);
      goto LABEL_9;
    }
    sub_100017E48((uint64_t)v29, &qword_1000B81E0);
  }
  v21 = type metadata accessor for HeadphoneModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
  sub_100017E48((uint64_t)v4, &qword_1000B83E8);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_1000093F8(v22, (uint64_t)qword_1000BC740);
  v20 = Logger.logObject.getter(v23);
  v24 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v24, "HeadhponeHeartRateTutorial1ViewController: Headphone Model is nil, exiting", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }
LABEL_9:

}

id sub_10006F11C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadhponeHeartRateTutorial1ViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HeadhponeHeartRateTutorial1ViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService41HeadhponeHeartRateTutorial1ViewController);
}

uint64_t sub_10006F1A4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial1ViewController_type);
}

void sub_10006F1B4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  NSString v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  Class isa;
  id v37;
  id v38;
  objc_super v39;

  v39.receiver = v2;
  v39.super_class = (Class)swift_getObjectType(v2, a2);
  objc_msgSendSuper2(&v39, "viewDidLoad");
  objc_msgSend(v2, "setDismissalType:", 1);
  v3 = (void *)objc_opt_self(UIImage);
  v4 = String._bridgeToObjectiveC()();
  v38 = objc_msgSend(v3, "imageNamed:", v4);

  v5 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v38);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(v2, "contentView");
  objc_msgSend(v6, "addSubview:", v5);

  v37 = (id)objc_opt_self(NSLayoutConstraint);
  v7 = sub_100009F00((uint64_t *)&unk_1000B8730);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100087700;
  v9 = objc_msgSend(v5, "topAnchor");
  v10 = objc_msgSend(v2, "contentView");
  v11 = objc_msgSend(v10, "mainContentGuide");

  v12 = objc_msgSend(v11, "topAnchor");
  v13 = objc_msgSend(v9, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v8 + 32) = v13;
  v14 = objc_msgSend(v5, "centerXAnchor");
  v15 = objc_msgSend(v2, "contentView");
  v16 = objc_msgSend(v15, "mainContentGuide");

  v17 = objc_msgSend(v16, "centerXAnchor");
  v18 = objc_msgSend(v14, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v8 + 40) = v18;
  v19 = objc_msgSend(v5, "leadingAnchor");
  v20 = objc_msgSend(v2, "contentView");
  v21 = objc_msgSend(v20, "mainContentGuide");

  v22 = objc_msgSend(v21, "leadingAnchor");
  v23 = objc_msgSend(v19, "constraintGreaterThanOrEqualToAnchor:", v22);

  *(_QWORD *)(v8 + 48) = v23;
  v24 = objc_msgSend(v5, "trailingAnchor");
  v25 = objc_msgSend(v2, "contentView");
  v26 = objc_msgSend(v25, "mainContentGuide");

  v27 = objc_msgSend(v26, "trailingAnchor");
  v28 = objc_msgSend(v24, "constraintLessThanOrEqualToAnchor:", v27);

  *(_QWORD *)(v8 + 56) = v28;
  v29 = objc_msgSend(v5, "bottomAnchor");
  v30 = objc_msgSend(v2, "contentView");
  v31 = objc_msgSend(v30, "mainContentGuide");

  v32 = objc_msgSend(v31, "bottomAnchor");
  v33 = objc_msgSend(v29, "constraintLessThanOrEqualToAnchor:", v32);

  *(_QWORD *)(v8 + 64) = v33;
  specialized Array._endMutation()(v34);
  v35 = v8;
  sub_10000B880();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v35);
  objc_msgSend(v37, "activateConstraints:", isa);

}

void sub_10006F684(uint64_t a1)
{
  void *v1;
  NSString v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void **v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *);
  void *v22;
  void (*v23)(uint64_t);
  uint64_t v24;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v3);

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v4);

  v5 = *(_QWORD *)(a1 + 40);
  v6 = swift_allocObject(&unk_1000A98A0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v1);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v23 = sub_10006FBB0;
  v24 = v6;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A98B8;
  v8 = _Block_copy(&v19);
  v9 = (void *)objc_opt_self(PRXAction);
  v10 = objc_msgSend(v9, "actionWithTitle:style:handler:", v7, 0, v8);

  _Block_release(v8);
  v11 = v24;
  swift_release(v6);

  v12 = *(_QWORD *)(a1 + 56);
  v13 = swift_allocObject(&unk_1000A98A0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v23 = sub_10006FBD0;
  v24 = v13;
  v19 = _NSConcreteStackBlock;
  v20 = 1107296256;
  v21 = sub_100011720;
  v22 = &unk_1000A98E0;
  v15 = _Block_copy(&v19);
  v16 = objc_msgSend(v9, "actionWithTitle:style:handler:", v14, 1, v15);

  _Block_release(v15);
  v17 = v24;
  swift_release(v13);
  v18 = objc_msgSend(v1, "addAction:", v16, swift_release(v17).n128_f64[0]);

}

void sub_10006F914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController_presenter);

    if (v5)
    {
      sub_100075644();
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_10006F984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController_presenter);

    if (v5)
    {
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_1000093F8(v6, (uint64_t)qword_1000B9F80);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Requested spatial audio profile not now", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
      }

      v11 = *(_QWORD *)(v5 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(_BYTE *)(v11
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 80)) = 1;
      sub_100072410(0);
      swift_unknownObjectRelease(v5);
    }
  }
}

uint64_t type metadata accessor for HeadphoneSpatialAudioProfileViewController()
{
  return objc_opt_self(_TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController);
}

uint64_t sub_10006FB7C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController_type);
}

uint64_t sub_10006FB8C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006FBB0(uint64_t a1)
{
  uint64_t v1;

  sub_10006F914(a1, v1);
}

uint64_t sub_10006FBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006FBC8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10006FBD0(uint64_t a1)
{
  uint64_t v1;

  sub_10006F984(a1, v1);
}

id sub_10006FC40(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  char *v15;
  uint64_t v16;
  id *v17;
  id result;
  void **v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  _BYTE v28[24];
  char v29[24];
  objc_super v30;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v6 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v6, v7);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for HeadphoneAssets(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30.receiver = v3;
  v30.super_class = ObjectType;
  objc_msgSendSuper2(&v30, "viewWillAppear:", a1 & 1);
  v15 = &v3[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_viewModel];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_viewModel], v29, 0, 0);
  v16 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_4:
    sub_100017E48((uint64_t)v9, &qword_1000B7F18);
    goto LABEL_5;
  }
  sub_100065260((uint64_t)&v15[*(int *)(v16 + 44)], (uint64_t)v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    goto LABEL_4;
  sub_100069BE4((uint64_t)v9, (uint64_t)v14);
  v19 = (void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_movieView];
  swift_beginAccess(&v3[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_movieView], v28, 32, 0);
  v20 = *v19;
  if (*v19)
  {
    swift_endAccess(v28);
    v21 = (void *)objc_opt_self(UITraitCollection);
    v22 = v20;
    v23 = objc_msgSend(v21, "currentTraitCollection");
    v24 = objc_msgSend(v23, "userInterfaceStyle");

    if (v24 == (id)2)
      v25 = 1;
    else
      v25 = 2;
    URL._bridgeToObjectiveC()((NSURL *)1);
    v27 = v26;
    objc_msgSend(v22, "updateViewForAssetType:adjustmentsURL:", v25, v26);

    sub_1000652E8((uint64_t)v14);
  }
  else
  {
    sub_1000652E8((uint64_t)v14);
    swift_endAccess(v28);
  }
LABEL_5:
  v17 = (id *)&v3[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_movieView];
  swift_beginAccess(v17, v28, 0, 0);
  result = *v17;
  if (*v17)
    return objc_msgSend(result, "play");
  return result;
}

void sub_10006FF94(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  NSURL *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  double v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  Class isa;
  void **v47;
  void *v48;
  _BYTE v49[24];
  _BYTE v50[216];
  _BYTE v51[264];
  _QWORD v52[27];
  _OWORD v53[13];
  uint64_t v54;
  _QWORD v55[33];

  v2 = v1;
  v4 = sub_100009F00(&qword_1000B8C40);
  __chkstk_darwin(v4, v5);
  v7 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100009F00(&qword_1000B7F18);
  __chkstk_darwin(v8, v9);
  v11 = &v49[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for HeadphoneAssets(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  v16 = &v49[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for HeadphoneViewModel(0);
  sub_100065260(a1 + *(int *)(v17 + 44), (uint64_t)v11);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100017E48((uint64_t)v11, &qword_1000B7F18);
  }
  else
  {
    sub_100069BE4((uint64_t)v11, (uint64_t)v16);
    sub_10001B808(a1 + *(int *)(v17 + 56), (uint64_t)v52);
    sub_10001B808((uint64_t)v52, (uint64_t)v53);
    if (sub_10001B850((uint64_t)v53) == 1)
    {
      sub_1000652E8((uint64_t)v16);
    }
    else
    {
      sub_1000324D8(a1, (uint64_t)v7);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 0, 1, v17);
      v18 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_viewModel];
      swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_viewModel], v55, 33, 0);
      sub_10001B808((uint64_t)v52, (uint64_t)v50);
      sub_10000B75C((uint64_t)v50);
      sub_10003251C((uint64_t)v7, v18);
      swift_endAccess(v55);
      v19 = String._bridgeToObjectiveC()();
      objc_msgSend(v2, "setTitle:", v19);

      v20 = String._bridgeToObjectiveC()();
      objc_msgSend(v2, "setSubtitle:", v20);

      v21 = *(_QWORD *)(a1 + 56);
      v22 = swift_allocObject(&unk_1000A9960, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16, v2);
      swift_bridgeObjectRetain(v21);
      swift_retain(v22);
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v21);
      v55[4] = sub_10007082C;
      v55[5] = v22;
      v55[0] = _NSConcreteStackBlock;
      v55[1] = 1107296256;
      v55[2] = sub_100011720;
      v55[3] = &unk_1000A9978;
      v24 = _Block_copy(v55);
      v25 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v23, 1, v24);

      _Block_release(v24);
      v26 = v55[5];
      swift_release(v22);

      v27 = objc_allocWithZone((Class)SFMediaPlayerItem);
      URL._bridgeToObjectiveC()(v28);
      v30 = v29;
      v31 = objc_msgSend(v27, "initWithURL:", v29);

      objc_msgSend(v31, "setShouldLoop:", 1);
      v32 = objc_msgSend(objc_allocWithZone((Class)SFMediaPlayerView), "init");
      objc_msgSend(v32, "addMovieItem:", v31);
      v33 = objc_allocWithZone((Class)UILayoutGuide);
      v34 = v32;
      sub_10003D268(v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D230);
      v35 = v34;
      v36 = objc_msgSend(v33, "init");
      sub_10003D268(v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001B91C);
      v37 = *(double *)v53;
      v38 = objc_msgSend(v36, "heightAnchor");

      v39 = objc_msgSend(v38, "constraintEqualToConstant:", v37);
      *(_QWORD *)v51 = v35;
      *(_QWORD *)&v51[8] = v36;
      *(_OWORD *)&v51[176] = v53[10];
      *(_OWORD *)&v51[192] = v53[11];
      *(_OWORD *)&v51[208] = v53[12];
      *(_QWORD *)&v51[224] = v54;
      *(_OWORD *)&v51[112] = v53[6];
      *(_OWORD *)&v51[128] = v53[7];
      *(_OWORD *)&v51[144] = v53[8];
      *(_OWORD *)&v51[160] = v53[9];
      *(_OWORD *)&v51[48] = v53[2];
      *(_OWORD *)&v51[64] = v53[3];
      *(_OWORD *)&v51[80] = v53[4];
      *(_OWORD *)&v51[96] = v53[5];
      *(_OWORD *)&v51[16] = v53[0];
      *(_OWORD *)&v51[32] = v53[1];
      v51[232] = 0;
      *(_QWORD *)&v51[240] = v39;
      *(_QWORD *)&v51[248] = &_swiftEmptyArrayStorage;
      *(_QWORD *)&v51[256] = &_swiftEmptyArrayStorage;
      memcpy(v55, v51, sizeof(v55));
      v40 = objc_msgSend(v2, "contentView");
      objc_msgSend(v35, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v40, "addLayoutGuide:", v36);
      objc_msgSend(v40, "addSubview:", v35);
      objc_msgSend(v40, "sendSubviewToBack:", v35);

      v41 = (void *)objc_opt_self(NSLayoutConstraint);
      v42 = objc_msgSend(v2, "contentView");
      v43 = objc_msgSend(v42, "mainContentGuide");

      sub_10006A754();
      v45 = v44;

      sub_10000B880();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v45);
      objc_msgSend(v41, "activateConstraints:", isa);

      sub_10000B8BC((uint64_t)v51);
      sub_1000652E8((uint64_t)v16);
      v47 = (void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_movieView];
      swift_beginAccess(&v2[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_movieView], v49, 1, 0);
      v48 = *v47;
      *v47 = v35;

    }
  }
}

void sub_1000705B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_presenter);

    if (v5)
    {
      sub_1000747C0(0);
      swift_unknownObjectRelease(v5);
    }
  }
}

uint64_t sub_100070728()
{
  return type metadata accessor for HeadphoneNotYoursViewController(0);
}

uint64_t type metadata accessor for HeadphoneNotYoursViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9F70;
  if (!qword_1000B9F70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphoneNotYoursViewController);
  return result;
}

void sub_10007076C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  sub_10001B534(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10008A8C8;
    v4[3] = &unk_10008A8E0;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t sub_1000707F8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_type);
}

uint64_t sub_100070808()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10007082C(uint64_t a1)
{
  uint64_t v1;

  sub_1000705B0(a1, v1);
}

uint64_t sub_100070834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100070844(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007084C(int a1)
{
  void *v2;
  id v3;
  unsigned int v4;
  id v5;
  unsigned int v6;
  id v7;
  unsigned int v8;
  id v9;
  unsigned int v10;
  id v11;
  unsigned int v12;

  v2 = (void *)objc_opt_self(SFHeadphoneProduct);
  v3 = objc_msgSend(v2, "airPodsMax");
  v4 = objc_msgSend(v3, "productID");

  if (v4 == a1)
    return 1;
  v5 = objc_msgSend(v2, "airPodsMax");
  v6 = objc_msgSend(v5, "altProductID");

  if (v6 == a1)
    return 1;
  v7 = objc_msgSend(v2, "airPods");
  v8 = objc_msgSend(v7, "productID");

  if (v8 == a1)
    return 1;
  v9 = objc_msgSend(v2, "airPodsSecondGeneration");
  v10 = objc_msgSend(v9, "productID");

  if (v10 == a1)
    return 1;
  if (sub_1000709C4(a1))
    return 1;
  v11 = objc_msgSend(v2, "b688");
  v12 = objc_msgSend(v11, "productID");

  if (v12 == a1)
    return 1;
  if ((a1 - 8217) > 7)
    return 0;
  return (0xA5u >> (a1 - 25)) & 1;
}

BOOL sub_1000709C4(int a1)
{
  void *v2;
  id v3;
  unsigned int v4;
  id v5;
  unsigned int v6;
  id v8;
  unsigned int v9;

  v2 = (void *)objc_opt_self(SFHeadphoneProduct);
  v3 = objc_msgSend(v2, "airPodsPro");
  v4 = objc_msgSend(v3, "productID");

  if (v4 == a1)
    return 1;
  v5 = objc_msgSend(v2, "b698");
  v6 = objc_msgSend(v5, "productID");

  if (v6 == a1)
    return 1;
  v8 = objc_msgSend(v2, "b698");
  v9 = objc_msgSend(v8, "altProductID");

  return v9 == a1;
}

unint64_t sub_100070AA4(uint64_t a1)
{
  return sub_100070CFC(a1, &qword_1000BA198, &qword_1000BA1A0, (uint64_t (*)(uint64_t))sub_100034AE0);
}

unint64_t sub_100070AC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100009F00(&qword_1000BA188);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_100034B60(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100070BD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100009F00(&qword_1000BA190);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *((_QWORD *)v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_100034B60(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 24;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100070CE0(uint64_t a1)
{
  return sub_100070CFC(a1, &qword_1000BA1C0, &qword_1000BA1C8, (uint64_t (*)(uint64_t))sub_100034AE0);
}

unint64_t sub_100070CFC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100009F00(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_10001B868(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_1000324C0(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100070E24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100009F00(&qword_1000BA1B0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_100034B60(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_QWORD *sub_100070F44(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];
  _QWORD v19[4];
  _QWORD *v20;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = &_swiftEmptyArrayStorage;
  if (v1)
  {
    v20 = &_swiftEmptyArrayStorage;
    sub_1000826D0(0, v1, 0);
    v2 = &_swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 2);
      v6 = *(v4 - 1);
      v7 = *v4;
      v18[0] = *(v4 - 3);
      v18[1] = v5;
      v18[2] = v6;
      v18[3] = v7;
      swift_bridgeObjectRetain_n(v5, 2);
      swift_bridgeObjectRetain_n(v7, 2);
      v8 = sub_100009F00(&qword_1000BA148);
      v9 = sub_100009F00(&qword_1000BA150);
      swift_dynamicCast(v19, v18, v8, v9, 7);
      v10 = v19[0];
      v11 = v19[1];
      v13 = v19[2];
      v12 = v19[3];
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_1000826D0(0, v2[2] + 1, 1);
        v2 = v20;
      }
      v15 = v2[2];
      v14 = v2[3];
      if (v15 >= v14 >> 1)
      {
        sub_1000826D0(v14 > 1, v15 + 1, 1);
        v2 = v20;
      }
      v4 += 4;
      v2[2] = v15 + 1;
      v16 = &v2[4 * v15];
      v16[4] = v10;
      v16[5] = v11;
      v16[6] = v13;
      v16[7] = v12;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1000710AC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _UNKNOWN **v17;
  _QWORD *v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v18 = _swiftEmptyArrayStorage;
  result = sub_100082724(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v18 = v3;
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_100082724(v7 > 1, v8 + 1, 1);
          v3 = v18;
        }
        ++v5;
        v16 = sub_100009F84(0, &qword_1000B9D48, UNNotificationSource_ptr);
        v17 = &off_1000A9FE0;
        *(_QWORD *)&v15 = v6;
        v3[2] = v8 + 1;
        sub_100063A9C(&v15, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v18 = v3;
        v12 = v3[2];
        v11 = v3[3];
        v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_100082724(v11 > 1, v12 + 1, 1);
          v3 = v18;
        }
        v16 = sub_100009F84(0, &qword_1000B9D48, UNNotificationSource_ptr);
        v17 = &off_1000A9FE0;
        *(_QWORD *)&v15 = v13;
        v3[2] = v12 + 1;
        sub_100063A9C(&v15, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_BYTE *sub_10007129C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _BYTE v15[24];

  v1 = v0;
  v2 = type metadata accessor for HeadphoneViewModel(0);
  __chkstk_darwin(v2, v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for HeadphoneBatteryViewController(0);
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "initWithNibName:bundle:", 0, 0);
  v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
  swift_beginAccess(v8, v15, 0, 0);
  v9 = v8[3];
  if (v9)
  {
    v10 = *sub_100013410(v8, v9);
    v11 = &v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_presenter];
    *((_QWORD *)v11 + 1) = &off_1000A9B08;
    swift_unknownObjectWeakAssign(v11, v10);
    sub_1000765E8(v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_type]);
    sub_10004F67C(v5);
    sub_10000EC60((uint64_t)v5, type metadata accessor for HeadphoneViewModel);
  }
  v12 = v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
  *(_QWORD *)(v12 + 8) = &off_1000A8530;
  swift_unknownObjectWeakAssign(v12, v7);
  return v7;
}

uint64_t sub_1000713DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1000713FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10000C5F4(v0, qword_1000B9F80);
  v1 = sub_1000093F8(v0, (uint64_t)qword_1000B9F80);
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v2 = sub_1000093F8(v0, (uint64_t)qword_1000BC740);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_10007148C()
{
  qword_1000B9F98 = (uint64_t)&off_1000A5940;
}

unint64_t sub_1000714A0(uint64_t a1)
{
  unint64_t result;

  switch(a1)
  {
    case 0:
      result = 0x6C6C6143646E45;
      break;
    case 1:
    case 3:
      result = 0xD000000000000015;
      break;
    case 2:
      result = 0x5469726953796548;
      break;
    case 4:
      result = 0xD000000000000013;
      break;
    case 5:
      result = 0x466C6C6174736E49;
      break;
    case 6:
      result = 0x676E696B6E694CLL;
      break;
    case 7:
      result = 0xD000000000000010;
      break;
    case 8:
      result = 0x77654E7374616857;
      break;
    case 9:
      result = 0x7473654764616548;
      break;
    case 10:
      result = 0x79726574746142;
      break;
    case 11:
      result = 0x7461527472616548;
      break;
    default:
      result = 0x6E6974656B72614DLL;
      break;
  }
  return result;
}

unint64_t sub_100071628()
{
  uint64_t *v0;

  return sub_1000714A0(*v0);
}

uint64_t sub_100071630@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1000B7C08 != -1)
    swift_once(&qword_1000B7C08, sub_10007148C);
  v2 = qword_1000B9F98;
  *a1 = qword_1000B9F98;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_100071680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  char v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for HeadphoneViewModel(0);
  __chkstk_darwin(v2, v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6);
  v11 = _dispatchPreconditionTest(_:)(v10);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v11 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 56);
    if (result)
    {
      v13 = result;
      v14 = result + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
      Strong = swift_unknownObjectWeakLoadStrong(result + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView);
      v16 = *(_QWORD *)(v14 + 8);
      result = swift_unknownObjectRelease(v13);
      if (Strong)
      {
        ObjectType = swift_getObjectType(Strong, v17);
        v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(ObjectType, v16);
        sub_1000765E8(v19);
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, ObjectType, v16);
        swift_unknownObjectRelease(Strong);
        return sub_10000EC60((uint64_t)v5, type metadata accessor for HeadphoneViewModel);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100071814(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(uint64_t, uint64_t);

  *(_QWORD *)(v1 + 64) = 0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_QWORD *)(v1 + 48) = 0;
  swift_unknownObjectWeakInit(v1 + 56, 0);
  *(_WORD *)(v1 + 80) = 256;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_useMovieForNextBatteryView) = 1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_batteryDebounceTime) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_temporarilyPair) = 0;
  v3 = OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep) = 12;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_hasAutoDismissed) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_spatialProfileEnrollmentViewController) = 0;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_batteryVideoView);
  *v4 = 0;
  v4[1] = 0;
  sub_10003CC88(a1, v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, type metadata accessor for HeadphoneModel);
  v5 = *(void **)(v1 + v3);
  *(_QWORD *)(v1 + v3) = qword_10008ACE8[*(char *)(a1 + 120)];
  sub_100079B6C(v5);
  v6 = type metadata accessor for HeadphoneAnalyticsController(0);
  v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  sub_10003267C((_BYTE *)(v7 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics));
  sub_10000EC60(a1, type metadata accessor for HeadphoneModel);
  *(_QWORD *)(v1 + 72) = v7;
  v8 = (void (**)(uint64_t, uint64_t))(v1
                                              + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_unlockDevice);
  *v8 = sub_10007194C;
  v8[1] = 0;
  return v1;
}

void sub_10007194C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __n128 v12;
  _QWORD v13[5];
  uint64_t v14;

  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000093F8(v4, (uint64_t)qword_1000B9F80);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Requesting device unlock", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = swift_allocObject(&unk_1000A9E88, 32, 7);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v13[4] = sub_100083C74;
  v14 = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100071B98;
  v13[3] = &unk_1000A9EA0;
  v10 = _Block_copy(v13);
  v11 = v14;
  swift_retain(a2);
  v12 = swift_release(v11);
  SBSRequestPasscodeUnlockUI(v10, v12);
  _Block_release(v10);
}

uint64_t sub_100071AB0(char a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  uint64_t result;
  uint64_t v11;

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  *v8 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = _dispatchPreconditionTest(_:)(v8);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) != 0)
    return a2(a1 & 1);
  __break(1u);
  return result;
}

uint64_t sub_100071B98(uint64_t a1, int a2)
{
  uint64_t v2;
  void (*v3)(_BOOL8);
  _BOOL8 v4;

  v3 = *(void (**)(_BOOL8))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = a2 != 0;
  swift_retain(v2);
  v3(v4);
  return swift_release(v2);
}

int *sub_100071BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *result;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  _BYTE v11[24];

  v1 = *(_QWORD *)(v0 + 72);
  v2 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v11, 0, 0);
  v3 = type metadata accessor for HeadphoneModel(0);
  v4 = *(unsigned int *)(v2 + *(int *)(v3 + 124));
  v5 = v1 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  result = (int *)type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
  v7 = v5 + result[6];
  *(_QWORD *)v7 = v4;
  *(_BYTE *)(v7 + 8) = 0;
  switch(*(_BYTE *)(v2 + 120))
  {
    case 0:
    case 3:
    case 4:
    case 9:
    case 0xA:
      v8 = *(_BYTE **)(v0 + 72);
      v9 = OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      v10 = 3;
      goto LABEL_3;
    case 6:
      v8 = (_BYTE *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics);
      *v8 = 5;
      v9 = result[32];
      v10 = 2;
      goto LABEL_3;
    case 7:
      v8 = (_BYTE *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics);
      if (*(_BYTE *)(v2 + *(int *)(v3 + 76)) == 1)
      {
        *v8 = 2;
        v8[result[10]] = 2;
      }
      else
      {
        v9 = result[43];
        v10 = 2;
LABEL_3:
        v8[v9] = v10;
      }
      return result;
    case 8:
      v8 = *(_BYTE **)(v0 + 72);
      v9 = OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      v10 = 1;
      goto LABEL_3;
    case 0xB:
      v8 = (_BYTE *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics);
      *v8 = 0;
      v9 = result[29];
      v10 = 2;
      goto LABEL_3;
    case 0xC:
      v8 = *(_BYTE **)(v0 + 72);
      v9 = OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      v10 = 4;
      goto LABEL_3;
    default:
      return result;
  }
}

uint64_t sub_100071D30(uint64_t result)
{
  if (result <= 0x1Au && ((1 << result) & 0x7FF4FFF) != 0)
    return sub_100032834(result, 2);
  return result;
}

void sub_100071D78()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD aBlock[5];
  uint64_t v26;
  _QWORD v27[5];
  char v28[24];
  char v29[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested announce continue, turning on all supported apps", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = v0[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 68)) = 0;
  v8 = (void *)objc_opt_self(HPSiriController);
  objc_msgSend(v8, "setHasUserSeenAnnounceCallsOptOutScreen:", 1);
  objc_msgSend(v8, "setHasUserSeenAnnounceNotificationsOptOutScreen:", 1);
  v9 = (char *)v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v29, 0, 0);
  v10 = type metadata accessor for HeadphoneModel(0);
  if (v9[*(int *)(v10 + 92)] != 1)
  {
    v22 = Logger.logObject.getter(v10);
    v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Siri is not allowed on lock screen, not enabling apps", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

    goto LABEL_13;
  }
  swift_beginAccess(v0 + 2, v28, 0, 0);
  v11 = v0[5];
  if (!v11
    || (v12 = (_QWORD *)(*sub_100013410(v0 + 2, v11)
                       + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter),
        v13 = v12[3],
        v14 = v12[4],
        sub_100013410(v12, v13),
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(1, v13, v14),
        !v0[5]))
  {
LABEL_13:
    sub_100072410(0);
    return;
  }
  sub_100015D34((uint64_t)(v0 + 2), (uint64_t)v27);
  v15 = sub_100013410(v27, v27[3]);
  v16 = swift_allocObject(&unk_1000A9CD0, 24, 7);
  swift_weakInit(v16 + 16, v1);
  v17 = *(NSObject **)(*v15 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_workingQueue);
  v18 = swift_allocObject(&unk_1000A9D70, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_100083734;
  *(_QWORD *)(v18 + 24) = v16;
  v19 = swift_allocObject(&unk_1000A9D98, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_100083E00;
  *(_QWORD *)(v19 + 24) = v18;
  aBlock[4] = sub_100058BC8;
  v26 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000713DC;
  aBlock[3] = &unk_1000A9DB0;
  v20 = _Block_copy(aBlock);
  v21 = v26;
  swift_retain_n(v16, 2);
  swift_retain(v19);
  swift_release(v21);
  dispatch_sync(v17, v20);
  _Block_release(v20);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation(v19, "", 120, 286, 21, 1);
  swift_release_n(v16, 2);
  swift_release(v18);
  swift_release(v19);
  if ((v17 & 1) == 0)
  {
    sub_100015D14(v27);
    goto LABEL_13;
  }
  __break(1u);
}

void sub_10007212C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[32];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v36, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  v3 = &OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink;
  if (Strong)
  {
    v4 = Strong;
    v5 = Strong + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess(Strong + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v35, 0, 0);
    if (*(_QWORD *)(v5 + 8))
    {
      v6 = *(_QWORD *)(v5 + 96);
      swift_bridgeObjectRetain(v6);
      swift_release(v4);
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
      {
        swift_beginAccess(v1, v34, 0, 0);
        v8 = (void **)(v6 + 72);
        do
        {
          if ((*(_BYTE *)(v8 - 1) & 1) != 0)
          {
            v11 = (uint64_t)*(v8 - 5);
            v10 = (uint64_t)*(v8 - 4);
            v12 = (uint64_t)*(v8 - 2);
            v13 = *v8;
            v14 = swift_weakLoadStrong(v1);
            if (v14)
            {
              v15 = v14;
              v16 = v14 + 16;
              swift_beginAccess(v14 + 16, &v27, 0, 0);
              if (*(_QWORD *)(v15 + 40))
              {
                sub_100015D34(v16, (uint64_t)v28);
                v9 = v13;
                swift_bridgeObjectRetain(v10);
                swift_bridgeObjectRetain(v12);
                swift_release(v15);
                sub_100013410(v28, v29);
                sub_100042668(1, v11, v10);

                swift_bridgeObjectRelease(v12);
                swift_bridgeObjectRelease(v10);
                sub_100015D14(v28);
              }
              else
              {
                swift_release(v15);
              }
            }
          }
          v8 += 6;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease(v6);
        v3 = &OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink;
      }
      else
      {
        swift_bridgeObjectRelease(v6);
      }
    }
    else
    {
      swift_release(v4);
    }
  }
  swift_beginAccess(v1, v33, 0, 0);
  v17 = swift_weakLoadStrong(v1);
  if (v17)
  {
    v18 = v17;
    v19 = v17 + v3[500];
    swift_beginAccess(v19, v32, 0, 0);
    v20 = *(_QWORD *)(v19 + 8);
    if (v20)
    {
      v21 = *(_QWORD *)v19;
      v22 = *(_QWORD *)(v19 + 24);
      v23 = *(id *)(v19 + 40);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v22);
      swift_release(v18);
      swift_beginAccess(v1, v31, 0, 0);
      v24 = swift_weakLoadStrong(v1);
      if (v24)
      {
        v25 = v24;
        v26 = v24 + 16;
        swift_beginAccess(v24 + 16, v30, 0, 0);
        if (*(_QWORD *)(v25 + 40))
        {
          sub_100015D34(v26, (uint64_t)v28);
          swift_release(v25);
          sub_100013410(v28, v29);
          sub_100042668(1, v21, v20);

          swift_bridgeObjectRelease(v22);
          swift_bridgeObjectRelease(v20);
          sub_100015D14(v28);
          return;
        }
        swift_release(v25);
      }

      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      swift_release(v18);
    }
  }
}

void sub_100072410(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  id v42;
  uint64_t v43;
  _BYTE *v44;

  v2 = v1;
  if ((a1 & 1) == 0)
  {
    v3 = OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep;
    v4 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep);
    sub_100079B4C(v4);
    v5 = sub_100077C88((uint64_t)v4);
    sub_100079B6C(v4);
    v6 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v5;
    sub_100079B6C(v6);
  }
  v7 = OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep;
  while (1)
  {
    v8 = *(void **)(v2 + v7);
    sub_100079B4C(v8);
    v9 = sub_100078044((uint64_t)v8);
    sub_100079B6C(v8);
    if ((v9 & 1) != 0)
    {
      v13 = *(void **)(v2 + v7);
      switch((unint64_t)v13)
      {
        case 0uLL:
          Strong = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!Strong)
            return;
          v15 = Strong;
          sub_10002F674();
          goto LABEL_16;
        case 1uLL:
          v25 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v25)
            return;
          v15 = v25;
          sub_10002F4F8();
          goto LABEL_16;
        case 2uLL:
          v26 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v26)
            return;
          v15 = v26;
          sub_100030C50();
          goto LABEL_16;
        case 3uLL:
          v27 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v27)
            return;
          v15 = v27;
          sub_10002EF08();
          goto LABEL_16;
        case 4uLL:
          v28 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v28)
            return;
          v15 = v28;
          sub_100030F48();
          goto LABEL_16;
        case 5uLL:
          v29 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v29)
            return;
          v15 = v29;
          sub_100030660();
          goto LABEL_16;
        case 6uLL:
          v30 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v30)
            return;
          v15 = v30;
          sub_1000307DC();
          goto LABEL_16;
        case 7uLL:
          v31 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v31)
            return;
          v15 = v31;
          sub_10002FAE8();
          goto LABEL_16;
        case 8uLL:
          v32 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v32)
            return;
          v15 = v32;
          sub_10002FDE0();
          goto LABEL_16;
        case 9uLL:
          v33 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v33)
            return;
          v15 = v33;
          sub_10002FF5C();
          goto LABEL_16;
        case 0xAuLL:
          v34 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v34)
            return;
          v35 = v34;
          if (qword_1000B7B60 != -1)
            swift_once(&qword_1000B7B60, sub_10002EC3C);
          v36 = type metadata accessor for Logger(0);
          v37 = sub_1000093F8(v36, (uint64_t)qword_1000B8BC0);
          v38 = Logger.logObject.getter(v37);
          v39 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v38, v39))
          {
            v40 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v40 = 0;
            _os_log_impl((void *)&_mh_execute_header, v38, v39, "Showing battery view", v40, 2u);
            swift_slowDealloc(v40, -1, -1);
          }

          v41 = *(void **)(v35 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
          if (v41)
          {
            v42 = v41;
            v44 = sub_10007129C();
            objc_msgSend(v42, "pushViewController:animated:", v44, 1);
            swift_unknownObjectRelease(v35);

            return;
          }
          v22 = v35;
          break;
        case 0xBuLL:
          v43 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (!v43)
            return;
          v15 = v43;
          sub_10002F200();
          goto LABEL_16;
        case 0xCuLL:
          goto LABEL_10;
        default:
          v23 = swift_unknownObjectWeakLoadStrong(v2 + 56);
          if (v23)
          {
            v24 = v23;
            sub_100079B5C(v13);
            sub_100079B5C(v13);
            sub_100030254(v13);
            swift_unknownObjectRelease(v24);
            sub_100079B6C(v13);
            sub_100079B6C(v13);
          }
          return;
      }
      goto LABEL_17;
    }
    v10 = *(void **)(v2 + v7);
    if (v10 == (void *)12)
      break;
    sub_100079B5C(*(id *)(v2 + v7));
    v11 = sub_100077C88((uint64_t)v10);
    sub_100079B6C(v10);
    v12 = *(void **)(v2 + v7);
    *(_QWORD *)(v2 + v7) = v11;
    sub_100079B6C(v12);
  }
LABEL_10:
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_1000093F8(v16, (uint64_t)qword_1000B9F80);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Nothing else to display after pairing, dismissing", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  v21 = swift_unknownObjectWeakLoadStrong(v2 + 56);
  if (v21)
  {
    v15 = v21;
    sub_10002ECCC();
LABEL_16:
    v22 = v15;
LABEL_17:
    swift_unknownObjectRelease(v22);
  }
}

void sub_100072870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void (*)(char), _QWORD *);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  NSObject *oslog;
  _BYTE v19[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested device connect", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  v8 = type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
  *(_BYTE *)(v7 + *(int *)(v8 + 40)) = 0;
  if (*(_BYTE *)(v0 + 80) == 1)
  {
    oslog = Logger.logObject.getter(v8);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "Already connecting", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

  }
  else
  {
    v11 = swift_allocObject(&unk_1000A9CD0, 24, 7);
    swift_weakInit(v11 + 16, v0);
    v12 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v19, 0, 0);
    if (*(_BYTE *)(v12 + *(int *)(type metadata accessor for HeadphoneModel(0) + 104)) == 1)
    {
      v14 = *(void (**)(void (*)(char), _QWORD *))(v1
                                                                       + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_unlockDevice);
      v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_unlockDevice + 8);
      v15 = swift_allocObject(&unk_1000A9CD0, 24, 7);
      swift_weakInit(v15 + 16, v1);
      v16 = (_QWORD *)swift_allocObject(&unk_1000A9E10, 40, 7);
      v16[2] = sub_100083B18;
      v16[3] = v11;
      v16[4] = v15;
      swift_retain(v13);
      swift_retain(v11);
      swift_retain(v15);
      v14(sub_100083B24, v16);
      swift_release(v13);
      swift_release(v15);
      swift_release(v16);
      swift_release(v11);
    }
    else
    {
      v17 = swift_retain(v11);
      sub_100072B1C(v17);
      swift_release_n(v11, 2);
    }
  }
}

double sub_100072B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[5];
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    *(_BYTE *)(Strong + 80) = 1;
    sub_100071680();
    swift_release(v3);
  }
  swift_beginAccess(v1, v10, 0, 0);
  v4 = swift_weakLoadStrong(v1);
  if (v4)
  {
    v6 = v4;
    v7 = v4 + 16;
    swift_beginAccess(v4 + 16, v9, 0, 0);
    if (*(_QWORD *)(v6 + 40))
    {
      sub_100015D34(v7, (uint64_t)v8);
      swift_release(v6);
      sub_100013410(v8, v8[3]);
      sub_100041530();
      sub_100015D14(v8);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v6).n128_u64[0];
    }
  }
  return result;
}

void sub_100072BF8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;
  _QWORD v22[5];
  char v23[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested customize announce notifications", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = v1[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 68)) = 1;
  v8 = (void *)objc_opt_self(HPSiriController);
  objc_msgSend(v8, "setHasUserSeenAnnounceCallsOptOutScreen:", 1);
  objc_msgSend(v8, "setHasUserSeenAnnounceNotificationsOptOutScreen:", 1);
  swift_beginAccess(v1 + 2, v23, 0, 0);
  v9 = v1[5];
  if (v9)
  {
    v10 = (_QWORD *)(*sub_100013410(v1 + 2, v9)
                   + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter);
    v11 = v10[3];
    v12 = v10[4];
    sub_100013410(v10, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(1, v11, v12);
    if (v1[5])
    {
      sub_100015D34((uint64_t)(v1 + 2), (uint64_t)v22);
      v13 = sub_100013410(v22, v22[3]);
      v14 = swift_allocObject(&unk_1000A9CD0, 24, 7);
      swift_weakInit(v14 + 16, v1);
      v15 = *(NSObject **)(*v13 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_workingQueue);
      v16 = swift_allocObject(&unk_1000A9CF8, 32, 7);
      *(_QWORD *)(v16 + 16) = sub_1000836D8;
      *(_QWORD *)(v16 + 24) = v14;
      v17 = swift_allocObject(&unk_1000A9D20, 32, 7);
      *(_QWORD *)(v17 + 16) = sub_100083704;
      *(_QWORD *)(v17 + 24) = v16;
      v20[4] = sub_10003CF88;
      v21 = v17;
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 1107296256;
      v20[2] = sub_1000713DC;
      v20[3] = &unk_1000A9D38;
      v18 = _Block_copy(v20);
      v19 = v21;
      swift_retain_n(v14, 2);
      swift_retain(v17);
      swift_release(v19);
      dispatch_sync(v15, v18);
      _Block_release(v18);
      LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v17, "", 120, 286, 21, 1);
      swift_release_n(v14, 2);
      swift_release(v16);
      swift_release(v17);
      if ((v15 & 1) != 0)
        __break(1u);
      else
        sub_100015D14(v22);
    }
  }
}

void sub_100072EF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  _QWORD v38[3];
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[24];
  _BYTE v45[24];
  _BYTE v46[32];

  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
  *v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v6);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v8 = a1 + 16;
  swift_beginAccess(v8, v46, 0, 0);
  Strong = swift_weakLoadStrong(v8);
  v10 = &OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink;
  if (Strong)
  {
    v11 = Strong;
    v12 = Strong + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess(Strong + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v45, 0, 0);
    if (*(_QWORD *)(v12 + 8))
    {
      v13 = *(_QWORD *)(v12 + 96);
      swift_bridgeObjectRetain(v13);
      swift_release(v11);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        swift_beginAccess(v8, v44, 0, 0);
        v15 = (void **)(v13 + 72);
        do
        {
          if ((*(_BYTE *)(v15 - 1) & 1) != 0)
          {
            v18 = (uint64_t)*(v15 - 5);
            v17 = (uint64_t)*(v15 - 4);
            v19 = (uint64_t)*(v15 - 2);
            v20 = *v15;
            v21 = swift_weakLoadStrong(v8);
            if (v21)
            {
              v22 = v21;
              v23 = v21 + 16;
              swift_beginAccess(v21 + 16, v37, 0, 0);
              if (*(_QWORD *)(v22 + 40))
              {
                sub_100015D34(v23, (uint64_t)v38);
                v16 = v20;
                swift_bridgeObjectRetain(v17);
                swift_bridgeObjectRetain(v19);
                swift_release(v22);
                sub_100013410(v38, v39);
                sub_100042668(1, v18, v17);

                swift_bridgeObjectRelease(v19);
                swift_bridgeObjectRelease(v17);
                sub_100015D14(v38);
              }
              else
              {
                swift_release(v22);
              }
            }
          }
          v15 += 6;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease(v13);
        v10 = &OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink;
      }
      else
      {
        swift_bridgeObjectRelease(v13);
      }
    }
    else
    {
      swift_release(v11);
    }
  }
  swift_beginAccess(v8, v43, 0, 0);
  v24 = swift_weakLoadStrong(v8);
  if (v24)
  {
    v25 = v24;
    v26 = v24 + v10[500];
    swift_beginAccess(v26, v42, 0, 0);
    v27 = *(_QWORD *)(v26 + 8);
    if (v27)
    {
      v28 = *(_QWORD *)v26;
      v29 = *(_QWORD *)(v26 + 24);
      v30 = *(id *)(v26 + 40);
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRetain(v29);
      swift_release(v25);
      swift_beginAccess(v8, v41, 0, 0);
      v31 = swift_weakLoadStrong(v8);
      if (v31)
      {
        v32 = v31;
        v33 = v31 + 16;
        swift_beginAccess(v31 + 16, v40, 0, 0);
        if (*(_QWORD *)(v32 + 40))
        {
          sub_100015D34(v33, (uint64_t)v38);
          swift_release(v32);
          sub_100013410(v38, v39);
          sub_100042668(1, v28, v27);

          swift_bridgeObjectRelease(v29);
          swift_bridgeObjectRelease(v27);
          sub_100015D14(v38);
          goto LABEL_23;
        }
        swift_release(v32);
      }

      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease(v27);
    }
    else
    {
      swift_release(v25);
    }
  }
LABEL_23:
  swift_beginAccess(v8, v38, 0, 0);
  v34 = swift_weakLoadStrong(v8);
  if (v34)
  {
    v35 = v34;
    v36 = swift_unknownObjectWeakLoadStrong(v34 + 56);
    swift_release(v35);
    if (v36)
    {
      sub_10002F084();
      swift_unknownObjectRelease(v36);
    }
  }
}

uint64_t sub_1000732C8()
{
  return sub_1000732E0(sub_100041B74);
}

uint64_t sub_1000732D4()
{
  return sub_1000732E0(sub_1000420F4);
}

uint64_t sub_1000732E0(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v11[24];

  v3 = v1;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000093F8(v4, (uint64_t)qword_1000B9F80);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Requested disconnect", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  *(_BYTE *)(v3 + 80) = 3;
  sub_100071680();
  result = swift_beginAccess(v3 + 16, v11, 0, 0);
  v10 = *(_QWORD *)(v3 + 40);
  if (v10)
  {
    sub_100013410((_QWORD *)(v3 + 16), v10);
    return a1();
  }
  return result;
}

uint64_t sub_100073404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested dismiss", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v1 + 56);
  if (result)
  {
    v8 = result;
    sub_10002ECCC();
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_1000734FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested launch of bluetooth settings", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 124)) = 1;
  result = swift_unknownObjectWeakLoadStrong(v1 + 56);
  if (result)
  {
    v9 = result;
    sub_100032090();
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

uint64_t sub_100073618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested non genuine don't connect", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 124)) = 0;
  result = swift_unknownObjectWeakLoadStrong(v1 + 56);
  if (result)
  {
    v9 = result;
    sub_10002ECCC();
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

uint64_t sub_100073730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Skip Config for Mute Call", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  result = swift_beginAccess(v1 + 16, v12, 0, 0);
  v8 = *(_QWORD *)(v1 + 40);
  if (v8)
  {
    sub_100013410((_QWORD *)(v1 + 16), v8);
    result = (uint64_t)sub_1000432C4();
    if ((result & 1) == 0)
    {
      result = swift_unknownObjectWeakLoadStrong(v1 + 56);
      if (!result)
        return result;
      v11 = result;
      sub_10002ECCC();
      return swift_unknownObjectRelease(v11);
    }
    v9 = *(_QWORD *)(v1 + 40);
    if (v9)
    {
      v10 = sub_100013410((_QWORD *)(v1 + 16), v9);
      result = swift_unknownObjectWeakLoadStrong(*v10 + 16);
      if (result)
      {
        v11 = result;
        sub_10002F7F0();
        return swift_unknownObjectRelease(v11);
      }
    }
  }
  return result;
}

void sub_100073884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  _BYTE v10[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Skip Config for Adaptive Controls", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v10, 0, 0);
  if ((*(_BYTE *)(v7 + 120) & 0xFE) == 2)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 56);
    if (Strong)
    {
      v9 = Strong;
      sub_10002ECCC();
      swift_unknownObjectRelease(v9);
    }
  }
  else
  {
    sub_100072410(0);
  }
}

uint64_t sub_1000739B8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[3];

  v2 = v1;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000093F8(v4, (uint64_t)qword_1000B9F80);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    *(_DWORD *)v8 = 136315138;
    v15[0] = v9;
    if ((a1 & 1) != 0)
      v10 = 0x6E4F206E727554;
    else
      v10 = 0x776F4E20746F4ELL;
    v14 = sub_10004B4F0(v10, 0xE700000000000000, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, v15);
    swift_bridgeObjectRelease(0xE700000000000000);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Requested %s For Adaptive Controls - Adaptive Mode", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    swift_beginAccess(v2 + 16, v15, 0, 0);
    v11 = *(_QWORD *)(v2 + 40);
    if (v11)
    {
      sub_100013410((_QWORD *)(v2 + 16), v11);
      sub_100043514(1);
    }
  }
  result = swift_unknownObjectWeakLoadStrong(v2 + 56);
  if (result)
  {
    v13 = result;
    sub_10002FAE8();
    return swift_unknownObjectRelease(v13);
  }
  return result;
}

uint64_t sub_100073BA0(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  id v16;
  unsigned int v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[3];

  v2 = v1;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000093F8(v4, (uint64_t)qword_1000B9F80);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    *(_DWORD *)v8 = 136315138;
    v22[0] = v9;
    if ((a1 & 1) != 0)
      v10 = 0x6E4F206E727554;
    else
      v10 = 0x776F4E20746F4ELL;
    v20 = sub_10004B4F0(v10, 0xE700000000000000, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
    swift_bridgeObjectRelease(0xE700000000000000);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Requested %s For Adaptive Controls - PersonalizedVolume", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  v11 = v2[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  v12 = *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 104);
  if ((a1 & 1) != 0)
  {
    *(_BYTE *)(v11 + v12) = 0;
    swift_beginAccess(v2 + 2, &v20, 0, 0);
    v13 = v2[5];
    if (v13)
    {
      sub_100013410(v2 + 2, v13);
      sub_100043538(1);
    }
  }
  else
  {
    *(_BYTE *)(v11 + v12) = 1;
  }
  v14 = (char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v22, 0, 0);
  v15 = *(_DWORD *)&v14[*(int *)(type metadata accessor for HeadphoneModel(0) + 124)];
  v16 = objc_msgSend((id)objc_opt_self(SFHeadphoneProduct), "b768e");
  v17 = objc_msgSend(v16, "productID");

  if (v17 == v15)
    return sub_100072410(0);
  result = swift_unknownObjectWeakLoadStrong(v2 + 7);
  if (result)
  {
    v19 = result;
    sub_10002FC64();
    return swift_unknownObjectRelease(v19);
  }
  return result;
}

uint64_t sub_100073E34(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[3];

  v2 = v1;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000093F8(v4, (uint64_t)qword_1000B9F80);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    *(_DWORD *)v8 = 136315138;
    v19[0] = v9;
    if ((a1 & 1) != 0)
      v10 = 0x6E4F206E727554;
    else
      v10 = 0x776F4E20746F4ELL;
    v17 = sub_10004B4F0(v10, 0xE700000000000000, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    swift_bridgeObjectRelease(0xE700000000000000);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Requested %s For Adaptive Controls - Conversation Awareness", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  v11 = v2[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  v12 = *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 108);
  if ((a1 & 1) != 0)
  {
    *(_BYTE *)(v11 + v12) = 0;
    swift_beginAccess(v2 + 2, &v17, 0, 0);
    v13 = v2[5];
    if (v13)
    {
      sub_100013410(v2 + 2, v13);
      sub_10004355C(1);
    }
  }
  else
  {
    *(_BYTE *)(v11 + v12) = 1;
  }
  v14 = (char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v19, 0, 0);
  if ((v14[120] & 0xFE) != 2)
    return sub_100072410(0);
  result = swift_unknownObjectWeakLoadStrong(v2 + 7);
  if (result)
  {
    v16 = result;
    sub_10002ECCC();
    return swift_unknownObjectRelease(v16);
  }
  return result;
}

uint64_t sub_100074088()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Continue for Whats New", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = v1[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 168)) = 0;
  v8 = (char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v21, 0, 0);
  if (v8[120] != 4)
    return sub_100072410(0);
  result = swift_beginAccess(v1 + 2, v20, 0, 0);
  v10 = v1[5];
  if (!v10)
    return result;
  v11 = sub_100013410(v1 + 2, v10);
  v12 = *(_QWORD *)(*v11 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager);
  v13 = *v11 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess(v13, v19, 0, 0);
  v15 = *(_QWORD *)(v13 + 128);
  v14 = *(_QWORD *)(v13 + 136);
  swift_bridgeObjectRetain(v14);
  swift_retain(v12);
  LOBYTE(v15) = dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeadGesturesCard(deviceAddress:)(v15, v14);
  swift_release(v12);
  result = swift_bridgeObjectRelease(v14);
  if ((v15 & 1) == 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + 7);
    if (!result)
      return result;
    v18 = result;
    sub_10002ECCC();
    return swift_unknownObjectRelease(v18);
  }
  v16 = v1[5];
  if (v16)
  {
    v17 = sub_100013410(v1 + 2, v16);
    result = swift_unknownObjectWeakLoadStrong(*v17 + 16);
    if (result)
    {
      v18 = result;
      sub_10002FF5C();
      return swift_unknownObjectRelease(v18);
    }
  }
  return result;
}

uint64_t sub_1000742A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v11[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Not Now for Whats New", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 168)) = 1;
  v8 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v11, 0, 0);
  if (*(_BYTE *)(v8 + 120) != 4)
    return sub_100072410(0);
  result = swift_unknownObjectWeakLoadStrong(v1 + 56);
  if (result)
  {
    v10 = result;
    sub_10002ECCC();
    return swift_unknownObjectRelease(v10);
  }
  return result;
}

uint64_t sub_1000743F4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Turn On for Head Gestures", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = v1[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 164)) = 0;
  swift_beginAccess(v1 + 2, v19, 0, 0);
  v8 = v1[5];
  if (v8)
  {
    v9 = sub_100013410(v1 + 2, v8);
    v10 = *(_QWORD *)(*v9 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager);
    v11 = *v9 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess(v11, v17, 0, 0);
    v13 = *(_QWORD *)(v11 + 128);
    v12 = *(_QWORD *)(v11 + 136);
    swift_bridgeObjectRetain(v12);
    swift_retain(v10);
    dispatch thunk of HeadphoneProxFeatureManager.setHeadGesturesConfig(deviceAddress:enabled:)(v13, v12, 1);
    swift_release(v10);
    swift_bridgeObjectRelease(v12);
  }
  v14 = (char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v18, 0, 0);
  if ((v14[120] & 0xFE) != 4)
    return sub_100072410(0);
  result = swift_unknownObjectWeakLoadStrong(v1 + 7);
  if (result)
  {
    v16 = result;
    sub_10002ECCC();
    return swift_unknownObjectRelease(v16);
  }
  return result;
}

uint64_t sub_1000745D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Not Now for Head Gestures", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = v1[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 164)) = 1;
  swift_beginAccess(v1 + 2, v19, 0, 0);
  v8 = v1[5];
  if (v8)
  {
    v9 = sub_100013410(v1 + 2, v8);
    v10 = *(_QWORD *)(*v9 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager);
    v11 = *v9 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess(v11, v17, 0, 0);
    v13 = *(_QWORD *)(v11 + 128);
    v12 = *(_QWORD *)(v11 + 136);
    swift_bridgeObjectRetain(v12);
    swift_retain(v10);
    dispatch thunk of HeadphoneProxFeatureManager.setHeadGesturesConfig(deviceAddress:enabled:)(v13, v12, 0);
    swift_release(v10);
    swift_bridgeObjectRelease(v12);
  }
  v14 = (char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v18, 0, 0);
  if ((v14[120] & 0xFE) != 4)
    return sub_100072410(0);
  result = swift_unknownObjectWeakLoadStrong(v1 + 7);
  if (result)
  {
    v16 = result;
    sub_10002ECCC();
    return swift_unknownObjectRelease(v16);
  }
  return result;
}

double sub_1000747C0(char a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(void (*)(char), _QWORD *);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double result;
  _BYTE v20[24];

  v2 = v1;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000093F8(v4, (uint64_t)qword_1000B9F80);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Requested repair instructions", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = v2[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v9
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 132)) = 0;
  *((_BYTE *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_temporarilyPair) = a1 & 1;
  swift_beginAccess(v2 + 2, v20, 33, 0);
  v10 = v2[5];
  if (v10)
  {
    v11 = v2[6];
    sub_100062754((uint64_t)(v2 + 2), v2[5]);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v11 + 96))(a1 & 1, v10, v11);
  }
  swift_endAccess(v20);
  v12 = swift_allocObject(&unk_1000A9CD0, 24, 7);
  swift_weakInit(v12 + 16, v2);
  v13 = (char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v20, 0, 0);
  if (v13[*(int *)(type metadata accessor for HeadphoneModel(0) + 104)] == 1)
  {
    v15 = *(void (**)(void (*)(char), _QWORD *))((char *)v2
                                                                     + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_unlockDevice);
    v14 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_unlockDevice + 8);
    v16 = swift_allocObject(&unk_1000A9CD0, 24, 7);
    swift_weakInit(v16 + 16, v2);
    v17 = (_QWORD *)swift_allocObject(&unk_1000A9E38, 40, 7);
    v17[2] = sub_100083B40;
    v17[3] = v12;
    v17[4] = v16;
    swift_retain(v14);
    swift_retain(v12);
    swift_retain(v16);
    v15(sub_100083E04, v17);
    swift_release(v14);
    swift_release(v16);
  }
  else
  {
    v18 = swift_retain(v12);
    sub_100074A3C(v18);
    v17 = (_QWORD *)v12;
  }
  swift_release(v17);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

double sub_100074A3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  _QWORD aBlock[5];
  uint64_t v56;
  char v57[24];
  char v58[24];
  char v59[24];
  char v60[24];
  char v61[32];

  v53 = type metadata accessor for DispatchWorkItemFlags(0);
  v52 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53, v2);
  v49 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for DispatchQoS(0);
  v50 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51, v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  v10 = __chkstk_darwin(v7, v9);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  v15 = (char *)&v47 - v14;
  v16 = a1 + 16;
  swift_beginAccess(a1 + 16, v61, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (Strong)
  {
    v18 = Strong;
    v19 = swift_unknownObjectWeakLoadStrong(Strong + 56);
    swift_release(v18);
    if (v19)
    {
      sub_100030AD4();
      swift_unknownObjectRelease(v19);
    }
  }
  swift_beginAccess(v16, v60, 0, 0);
  v20 = swift_weakLoadStrong(v16);
  if (v20)
  {
    v21 = v20;
    v22 = v20 + 16;
    swift_beginAccess(v20 + 16, aBlock, 33, 0);
    v23 = *(_QWORD *)(v21 + 40);
    if (v23)
    {
      v24 = v6;
      v25 = v7;
      v26 = *(_QWORD *)(v21 + 48);
      sub_100062754(v22, *(_QWORD *)(v21 + 40));
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 72);
      v28 = v26;
      v7 = v25;
      v6 = v24;
      v27(1, v23, v28);
    }
    swift_endAccess(aBlock);
    swift_release(v21);
  }
  swift_beginAccess(v16, v59, 0, 0);
  v29 = swift_weakLoadStrong(v16);
  if (!v29
    || (v30 = v29,
        v31 = v29 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model,
        swift_beginAccess(v29 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v58, 0, 0),
        LODWORD(v31) = *(unsigned __int8 *)(v31 + *(int *)(type metadata accessor for HeadphoneModel(0) + 120)),
        *(_QWORD *)&result = swift_release(v30).n128_u64[0],
        (_DWORD)v31))
  {
    sub_100009F84(0, (unint64_t *)&qword_1000B82E0, OS_dispatch_queue_ptr);
    v33 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)(v12, 2.0);
    v48 = *(void (**)(char *, uint64_t))(v8 + 8);
    v48(v12, v7);
    v34 = swift_allocObject(&unk_1000A9CD0, 24, 7);
    swift_beginAccess(v16, v57, 0, 0);
    v35 = swift_weakLoadStrong(v16);
    swift_weakInit(v34 + 16, v35);
    swift_release(v35);
    aBlock[4] = sub_100083B78;
    v56 = v34;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100012FBC;
    aBlock[3] = &unk_1000A9E50;
    v36 = _Block_copy(aBlock);
    v37 = swift_retain(v34);
    static DispatchQoS.unspecified.getter(v37);
    v54 = &_swiftEmptyArrayStorage;
    v38 = v15;
    v39 = v7;
    v40 = sub_100015EB0();
    v41 = sub_100009F00(&qword_1000B8338);
    v42 = sub_100015EF8((unint64_t *)&qword_1000B8340, &qword_1000B8338, (uint64_t)&protocol conformance descriptor for [A]);
    v43 = v49;
    v44 = v41;
    v45 = v53;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v54, v44, v42, v53, v40);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v38, v6, v43, v36);
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v45);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v51);
    v48(v38, v39);
    v46 = v56;
    swift_release(v34);
    *(_QWORD *)&result = swift_release(v46).n128_u64[0];
  }
  return result;
}

void sub_100074E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    if (*(_BYTE *)(Strong + 80) || (sub_100072870(), (v4 = swift_unknownObjectWeakLoadStrong(v3 + 56)) == 0))
    {
      swift_release(v3);
    }
    else
    {
      v5 = v4;
      sub_10002F37C();
      swift_release(v3);
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_100074F18(char a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  if ((a1 & 1) != 0)
  {
    a2();
  }
  else
  {
    v4 = a4 + 16;
    swift_beginAccess(a4 + 16, v8, 0, 0);
    Strong = swift_weakLoadStrong(v4);
    if (Strong)
    {
      v6 = Strong;
      v7 = swift_unknownObjectWeakLoadStrong(Strong + 56);
      swift_release(v6);
      if (v7)
      {
        sub_10002ECCC();
        swift_unknownObjectRelease(v7);
      }
    }
  }
}

uint64_t sub_100074F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;
  _BYTE v17[24];

  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_1000093F8(v1, (uint64_t)qword_1000B9F80);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested skip features", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  v6 = swift_beginAccess(v0 + 16, v17, 0, 0);
  v7 = *(_QWORD *)(v0 + 40);
  if (v7)
  {
    v8 = *sub_100013410((_QWORD *)(v0 + 16), v7);
    if (qword_1000B7BE8 != -1)
      swift_once(&qword_1000B7BE8, sub_100065B10);
    v9 = (void *)qword_1000BC7D8;
    v10 = v8 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess(v10, &v16, 0, 0);
    v11 = type metadata accessor for HeadphoneModel(0);
    v6 = sub_100065658(*(unsigned int *)(v10 + *(int *)(v11 + 124)), v9);
  }
  v12 = Logger.logObject.getter(v6);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Requested post pairing view", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return sub_100072410(1);
}

void sub_100075184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested skip Hey Siri enrollment", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 148)) = 1;
  sub_100072410(0);
}

void sub_10007527C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Hey Siri enrollment finished", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 148)) = 0;
  sub_100072410(0);
}

uint64_t sub_100075370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Hey Siri enrollment privacy", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v1 + 56);
  if (result)
  {
    v8 = result;
    Strong = swift_unknownObjectWeakLoadStrong(result + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView);
    result = swift_unknownObjectRelease(v8);
    if (Strong)
    {
      v10 = objc_opt_self(UIViewController);
      v11 = swift_dynamicCastObjCClass(Strong, v10);
      if (v11)
      {
        v12 = v11;
        v13 = String._bridgeToObjectiveC()();
        v14 = objc_msgSend((id)objc_opt_self(OBPrivacyPresenter), "presenterForPrivacySplashWithIdentifier:", v13);

        if (v14)
          objc_msgSend(v14, "setPresentingViewController:", v12);
        objc_msgSend(v14, "present");

      }
      return swift_unknownObjectRelease(Strong);
    }
  }
  return result;
}

uint64_t sub_100075520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  _BYTE v9[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested to install Find My", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 88)) = 0;
  swift_beginAccess(v1 + 16, v9, 0, 0);
  if (*(_QWORD *)(v1 + 40))
    sub_10004DA00();
  return sub_100072410(0);
}

void sub_100075644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t Strong;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD v21[5];
  uint64_t v22;

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested spatial audio profile create", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 80)) = 0;
  v8 = objc_msgSend((id)objc_opt_self(HPSpatialProfileManagerWrapper), "profileEnrollmentViewController");
  v9 = swift_allocObject(&unk_1000A9CD0, 24, 7);
  swift_weakInit(v9 + 16, v1);
  v21[4] = sub_10008374C;
  v22 = v9;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_100012FBC;
  v21[3] = &unk_1000A9DD8;
  v10 = _Block_copy(v21);
  objc_msgSend(v8, "setDismissalHandler:", v10, swift_release(v22).n128_f64[0]);
  _Block_release(v10);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 56);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(void **)(Strong + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
    if (v13)
    {
      v14 = v8;
      objc_msgSend(v13, "presentViewController:animated:completion:", v14, 1, 0);

      swift_unknownObjectRelease(v12);
    }
    else
    {
      v15 = qword_1000B7B60;
      v16 = v8;
      if (v15 != -1)
        swift_once(&qword_1000B7B60, sub_10002EC3C);
      v17 = sub_1000093F8(v2, (uint64_t)qword_1000B8BC0);
      v18 = Logger.logObject.getter(v17);
      v19 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "No navigation controller", v20, 2u);
        swift_slowDealloc(v20, -1, -1);
      }

      swift_unknownObjectRelease(v12);
    }
  }
  else
  {

  }
}

double sub_10007591C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    if (qword_1000B7C00 != -1)
      swift_once(&qword_1000B7C00, sub_1000713FC);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_1000093F8(v5, (uint64_t)qword_1000B9F80);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Spatial profile enrollment dismissed", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    v10 = *(_QWORD *)(v4 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
    *(_BYTE *)(v10
             + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 80)) = 3;
    sub_100072410(0);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

id sub_100075A50(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  id result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[3];
  id v18;
  __int128 v19;

  v3 = v2;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v6 = type metadata accessor for Logger(0);
  sub_1000093F8(v6, (uint64_t)qword_1000B9F80);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v19 = *(_OWORD *)(a1 + 16);
  sub_10003CFDC(a1 + 40, (uint64_t)&v18, &qword_1000BA1B8);
  swift_bridgeObjectRetain(v8);
  sub_100083C7C((uint64_t)&v19);
  sub_100083CA4(&v18);
  swift_bridgeObjectRetain(v8);
  sub_100083C7C((uint64_t)&v19);
  v9 = sub_100083CA4(&v18);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(18, -1);
    v13 = swift_slowAlloc(32, -1);
    v17[0] = v13;
    *(_DWORD *)v12 = 136315394;
    swift_bridgeObjectRetain(v8);
    v16 = sub_10004B4F0(v7, v8, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17);
    swift_bridgeObjectRelease_n(v8, 2);
    sub_100083CCC((uint64_t)&v19);
    sub_100083CF4(&v18);
    swift_bridgeObjectRelease(v8);
    sub_100083CCC((uint64_t)&v19);
    sub_100083CF4(&v18);
    *(_WORD *)(v12 + 12) = 1024;
    LODWORD(v16) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, (char *)&v16 + 4);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Requested toggle announce for %s, enabled: %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease(v8);
    sub_100083CCC((uint64_t)&v19);
    sub_100083CF4(&v18);
    swift_bridgeObjectRelease(v8);
    sub_100083CCC((uint64_t)&v19);
    sub_100083CF4(&v18);
  }

  result = (id)swift_beginAccess(v3 + 16, v17, 0, 0);
  v15 = *(_QWORD *)(v3 + 40);
  if (v15)
  {
    sub_100013410((_QWORD *)(v3 + 16), v15);
    return sub_100042668(a2 & 1, v7, v8);
  }
  return result;
}

uint64_t sub_100075CE0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  os_log_type_t v25;
  uint8_t *v26;
  const char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  _QWORD *v40;
  _QWORD *v41;
  char v42[24];
  _BYTE v43[24];
  char v44[24];

  v1 = v0;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000093F8(v2, (uint64_t)qword_1000B9F80);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested turn off announce", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = v1[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(_BYTE *)(v7
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 72)) = 1;
  v8 = (char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  v9 = swift_beginAccess((char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v44, 0, 0);
  if (v8[120] != 9)
  {
    v12 = Logger.logObject.getter(v9);
    v25 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v12, v25))
      goto LABEL_23;
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    v27 = "Turning off Announce Notifications";
    v28 = v12;
    v29 = v25;
    goto LABEL_22;
  }
  v10 = type metadata accessor for HeadphoneModel(0);
  v11 = v8[*(int *)(v10 + 156)];
  v12 = Logger.logObject.getter(v10);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  if (v11 == 1)
  {
    if (v14)
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Announce Messages enabled, turning off everything but Messages", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    if (*((_QWORD *)v8 + 1))
    {
      v16 = *((_QWORD *)v8 + 12);
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
        v41 = v1;
        swift_bridgeObjectRetain(v16);
        v40 = v1 + 2;
        swift_beginAccess(v1 + 2, v43, 0, 0);
        v18 = (uint64_t *)(v16 + 40);
        do
        {
          v20 = *(v18 - 1);
          v19 = *v18;
          v21 = v18[2];
          v22 = (void *)v18[4];
          if ((v20 != 0xD000000000000013 || v19 != 0x800000010008EE00)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(*(v18 - 1), *v18, 0xD000000000000013, 0x800000010008EE00, 0) & 1) == 0)
          {
            v23 = v41[5];
            if (v23)
            {
              sub_100013410(v40, v23);
              v24 = v22;
              swift_bridgeObjectRetain(v19);
              swift_bridgeObjectRetain(v21);
              sub_100042668(0, v20, v19);

              swift_bridgeObjectRelease(v21);
              swift_bridgeObjectRelease(v19);
            }
          }
          v18 += 6;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease(v16);
        v1 = v41;
      }
    }
    goto LABEL_25;
  }
  if (v14)
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    v29 = v13;
    v27 = "Announce Messages not enabled, turning off Announce Notifications";
    v28 = v12;
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v28, v29, v27, v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }
LABEL_23:

  swift_beginAccess(v1 + 2, v43, 0, 0);
  v30 = v1[5];
  if (v30)
  {
    v31 = (_QWORD *)(*sub_100013410(v1 + 2, v30)
                   + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter);
    v32 = v31[3];
    v33 = v31[4];
    sub_100013410(v31, v32);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v33 + 8))(0, v32, v33);
  }
LABEL_25:
  v34 = type metadata accessor for HeadphoneModel(0);
  if (!*(_QWORD *)&v8[*(int *)(v34 + 152)])
  {
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Announce Calls not originally enabled, turning off", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

    swift_beginAccess(v1 + 2, v42, 0, 0);
    v38 = v1[5];
    if (v38)
    {
      sub_100013410(v1 + 2, v38);
      sub_100042668(0, 0xD000000000000015, 0x800000010008EBE0);
    }
  }
  return sub_100072410(0);
}

void sub_1000761A4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  NSString v21;
  id v22;
  unint64_t v23;
  NSDictionary v24;
  uint64_t v25;
  void *object;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  NSString v31;
  NSString v32;
  uint64_t v33;
  _BYTE v34[24];

  v2 = v1;
  switch(a1)
  {
    case 5:
      swift_beginAccess(v1 + 16, v34, 0, 0);
      v3 = *(_QWORD *)(v1 + 40);
      if (v3)
      {
        v4 = (_QWORD *)(v1 + 16);
        goto LABEL_7;
      }
      break;
    case 6:
      swift_beginAccess(v1 + 16, v34, 0, 0);
      v5 = *(_QWORD *)(v1 + 40);
      if (v5)
      {
        sub_100013410((_QWORD *)(v1 + 16), v5);
        sub_10004299C();
        v3 = *(_QWORD *)(v1 + 40);
        if (v3)
        {
          v4 = (_QWORD *)(v1 + 16);
LABEL_7:
          sub_100013410(v4, v3);
          sub_100042BF4();
        }
      }
      break;
    case 7:
      swift_beginAccess(v1 + 16, v34, 0, 0);
      v6 = *(_QWORD *)(v1 + 40);
      if (v6)
      {
        sub_100013410((_QWORD *)(v1 + 16), v6);
        sub_100042DD8();
      }
      break;
    case 8:
      swift_beginAccess(v1 + 16, v34, 0, 0);
      v7 = *(_QWORD *)(v1 + 40);
      if (v7)
      {
        sub_100013410((_QWORD *)(v1 + 16), v7);
        sub_1000432C4();
        v8 = *(_QWORD *)(v1 + 40);
        if (v8)
        {
          sub_100013410((_QWORD *)(v1 + 16), v8);
          sub_1000434F0();
        }
      }
      break;
    case 13:
      swift_beginAccess(v1 + 16, v34, 0, 0);
      v9 = *(_QWORD *)(v1 + 40);
      if (v9)
      {
        v10 = sub_100013410((_QWORD *)(v1 + 16), v9);
        v11 = *(_QWORD *)(*v10 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager);
        v12 = *v10 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
        swift_beginAccess(v12, &v33, 0, 0);
        v14 = *(_QWORD *)(v12 + 128);
        v13 = *(_QWORD *)(v12 + 136);
        swift_bridgeObjectRetain(v13);
        swift_retain(v11);
        dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeadGesturesCard(deviceAddress:)(v14, v13);
        swift_release(v11);
        swift_bridgeObjectRelease(v13);
      }
      break;
    case 17:
      if (*(_BYTE *)(v1 + 80))
      {
        if (qword_1000B7C00 != -1)
          swift_once(&qword_1000B7C00, sub_1000713FC);
        v15 = type metadata accessor for Logger(0);
        v16 = sub_1000093F8(v15, (uint64_t)qword_1000B9F80);
        v17 = Logger.logObject.getter(v16);
        v18 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "Non genuine card appeared, unpairing device", v19, 2u);
          swift_slowDealloc(v19, -1, -1);
        }

        sub_1000732E0(sub_1000420F4);
        v20 = objc_allocWithZone((Class)NSUserDefaults);
        v21 = String._bridgeToObjectiveC()();
        v22 = objc_msgSend(v20, "initWithSuiteName:", v21);

        if (v22)
        {
          v23 = sub_100070AC0((uint64_t)&off_1000A57A0);
          v24.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v23);
          v25 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
          swift_beginAccess(v25, v34, 0, 0);
          if (*(_QWORD *)(v25 + 136))
          {
            object = String.uppercased()()._object;
          }
          else
          {
            object = *(void **)(v25 + *(int *)(type metadata accessor for HeadphoneModel(0) + 52) + 8);
            swift_bridgeObjectRetain(object);
          }
          v32 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(object);
          objc_msgSend(v22, "setObject:forKey:", v24.super.isa, v32);

        }
      }
      break;
    case 23:
      v27 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v34, 0, 0);
      v28 = *(_QWORD *)(v27 + 136);
      if (v28)
        v29 = *(_QWORD *)(v27 + 136);
      else
        v29 = 0xE000000000000000;
      v30 = (void *)objc_opt_self(HPSpatialProfileManagerWrapper);
      swift_bridgeObjectRetain(v28);
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v29);
      objc_msgSend(v30, "setProxCardShowed:forDevice:", 1, v31);

      break;
    default:
      return;
  }
}

void sub_1000765E8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_100009F00(&qword_1000B7F18);
  v4 = __chkstk_darwin(v2, v3);
  __chkstk_darwin(v4, v5);
  __asm { BR              X10 }
}

uint64_t sub_100076680()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v6 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  v7 = v0 + v6[11];
  v8 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = v0 + v6[12];
  *(_QWORD *)(v9 + 32) = 0;
  *(_OWORD *)v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_WORD *)(v9 + 40) = -24576;
  v10 = (_OWORD *)(v0 + v6[13]);
  *v10 = 0u;
  v10[1] = 0u;
  v11 = v0 + v6[14];
  sub_10001F208(v5 - 296);
  sub_10003CFDC(v5 - 296, v11, &qword_1000B8508);
  *(_BYTE *)(v0 + v6[15]) = 0;
  *(_BYTE *)(v0 + v6[16]) = 0;
  *(_QWORD *)(v0 + v6[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + v6[18]) = &_swiftEmptyArrayStorage;
  v12 = (_OWORD *)(v0 + v6[19]);
  v12[5] = 0u;
  v12[6] = 0u;
  v12[3] = 0u;
  v12[4] = 0u;
  v12[1] = 0u;
  v12[2] = 0u;
  *v12 = 0u;
  *(_QWORD *)(v0 + v6[20]) = 0;
  *(_QWORD *)(v0 + v6[21]) = 0;
  *(_BYTE *)(v0 + v6[22]) = 0;
  *(_QWORD *)v0 = sub_10001FF98(0x35u);
  *(_QWORD *)(v0 + 8) = v13;
  *(_QWORD *)(v0 + 16) = sub_10001FF98(0x36u);
  *(_QWORD *)(v0 + 24) = v14;
  *(_QWORD *)(v0 + 32) = sub_10001FF98(0x38u);
  *(_QWORD *)(v0 + 40) = v15;
  *(_QWORD *)(v0 + 48) = sub_10001FF98(0x37u);
  *(_QWORD *)(v0 + 56) = v16;
  v17 = (int *)type metadata accessor for HeadphoneViewModel(0);
  v18 = v0 + v17[11];
  sub_10001B868(v18, v4, &qword_1000B7F18);
  v19 = type metadata accessor for HeadphoneAssets(0);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v4, 1, v19);
  sub_100017E48(v4, &qword_1000B7F18);
  if (v20 == 1)
  {
    sub_10007D53C(v2, v3);
    sub_1000631A0(v3, v18, &qword_1000B7F18);
  }
  v21 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v21, v5 - 320, 0, 0);
  v22 = type metadata accessor for HeadphoneModel(0);
  sub_10001E3D0(*(_DWORD *)(v21 + *(int *)(v22 + 124)), v5 - 296);
  result = sub_1000631A0(v5 - 296, v0 + v17[14], &qword_1000B8508);
  *(_QWORD *)(v0 + v17[20]) = *(unsigned int *)(v21 + *(int *)(v22 + 124));
  return result;
}

void sub_100077520(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  _BYTE v25[24];

  v2 = v1;
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000093F8(v4, (uint64_t)qword_1000B9F80);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Device did finish connecting", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  if ((a1 & 1) != 0)
    v9 = 2;
  else
    v9 = 4;
  *(_BYTE *)(v2 + 80) = v9;
  sub_100071680();
  if ((a1 & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 56);
    if (!Strong)
      return;
    v11 = Strong;
    sub_1000300D8();
    goto LABEL_14;
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_temporarilyPair) == 1)
  {
    v10 = swift_unknownObjectWeakLoadStrong(v2 + 56);
    if (!v10)
      return;
    v11 = v10;
    sub_100030DCC();
LABEL_14:
    swift_unknownObjectRelease(v11);
    return;
  }
  v13 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v25, 0, 0);
  v14 = type metadata accessor for HeadphoneModel(0);
  if (*(_BYTE *)(v13 + *(int *)(v14 + 160)) == 1)
  {
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "User has already seen tutorials for this product, skipping cards", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    sub_100072410(1);
  }
  else
  {
    v18 = swift_unknownObjectWeakLoadStrong(v2 + 56);
    if (v18)
    {
      v19 = v18;
      v20 = v18 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
      v21 = swift_unknownObjectWeakLoadStrong(v18 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView);
      v22 = *(_QWORD *)(v20 + 8);
      swift_unknownObjectRelease(v19);
      if (v21)
      {
        ObjectType = swift_getObjectType(v21, v23);
        (*(void (**)(uint64_t, uint64_t))(v22 + 56))(ObjectType, v22);
        swift_unknownObjectRelease(v21);
      }
    }
  }
}

void sub_100077794()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  id v25;
  void *v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v45[24];

  v1 = v0;
  v2 = (int *)type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v2, v3);
  v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_hasAutoDismissed;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_hasAutoDismissed) & 1) != 0)
    return;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 56);
  if (Strong)
  {
    v8 = Strong;
    v9 = Strong + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
    v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView);
    v11 = *(_QWORD *)(v9 + 8);
    swift_unknownObjectRelease(v8);
    if (v10)
    {
      ObjectType = swift_getObjectType(v10, v12);
      v14 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
      swift_unknownObjectRelease(v10);
      if (v14 == 15)
        return;
    }
  }
  v15 = swift_unknownObjectWeakLoadStrong(v1 + 56);
  if (v15)
  {
    v16 = v15;
    v17 = v15 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
    v18 = swift_unknownObjectWeakLoadStrong(v15 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView);
    v19 = *(_QWORD *)(v17 + 8);
    swift_unknownObjectRelease(v16);
    if (v18)
    {
      v21 = swift_getObjectType(v18, v20);
      v22 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v19 + 32))(v21, v19);
      swift_unknownObjectRelease(v18);
      if (v22 == 17)
        return;
    }
  }
  v23 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v45, 0, 0);
  v24 = *(_BYTE *)(v23 + 120);
  sub_10003CC88(v23, (uint64_t)v5, type metadata accessor for HeadphoneModel);
  v25 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", *(unsigned int *)&v5[v2[31]]);
  if (v25)
  {
    v26 = v25;
    v27 = objc_msgSend(v25, "hasLid");

  }
  else
  {
    v27 = 0;
  }
  sub_10000EC60((uint64_t)v5, type metadata accessor for HeadphoneModel);
  if (*(_BYTE *)(v23 + v2[22]) != 1)
  {
    if (*(_DWORD *)(v23 + v2[28]) & 0x400 | (0x1181u >> v24) & 1)
      v33 = 1;
    else
      v33 = v27;
    if ((v33 & 1) != 0 || *(_BYTE *)(v23 + v2[30]))
      return;
    if (qword_1000B7C00 != -1)
      swift_once(&qword_1000B7C00, sub_1000713FC);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_1000093F8(v34, (uint64_t)qword_1000B9F80);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v36, v37))
      goto LABEL_34;
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    v39 = "Dismissing because device does not want status";
    goto LABEL_33;
  }
  if ((*(_BYTE *)(v23 + v2[41]) & 1) == 0 && ((0x1181u >> v24) & 1) != 0)
  {
    if (qword_1000B7C00 != -1)
      swift_once(&qword_1000B7C00, sub_1000713FC);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_1000093F8(v28, (uint64_t)qword_1000B9F80);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Skipping auto dismiss while waiting for genuine check", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    return;
  }
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v40 = type metadata accessor for Logger(0);
  v41 = sub_1000093F8(v40, (uint64_t)qword_1000B9F80);
  v36 = Logger.logObject.getter(v41);
  v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    v39 = "Auto dismissing on lid close";
LABEL_33:
    _os_log_impl((void *)&_mh_execute_header, v36, v37, v39, v38, 2u);
    swift_slowDealloc(v38, -1, -1);
  }
LABEL_34:

  *(_BYTE *)(v1 + v6) = 1;
  v42 = swift_unknownObjectWeakLoadStrong(v1 + 56);
  if (v42)
  {
    v43 = v42;
    sub_10002ECCC();
    swift_unknownObjectRelease(v43);
  }
}

void sub_100077BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _BYTE v9[24];

  v1 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v9, 0, 0);
  v2 = v1 + *(int *)(type metadata accessor for HeadphoneModel(0) + 168);
  v3 = *(unsigned __int8 *)(v2 + 8);
  if (v3 != 255)
  {
    v4 = *(void **)v2;
    if ((v3 & 1) != 0)
    {
      v8 = *(void **)v2;
      v7 = sub_100009F00((uint64_t *)&unk_1000B8740);
      swift_willThrowTypedImpl(&v8, v7, &protocol self-conformance witness table for Error);
    }
    else
    {
      Strong = swift_unknownObjectWeakLoadStrong(v0 + 56);
      if (Strong)
      {
        v6 = Strong;
        sub_1000304F8(v4);
        swift_unknownObjectRelease(v6);
        sub_10004D75C(v4, v3);
      }
    }
  }
}

uint64_t sub_100077C88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  id v23;
  uint64_t v24;
  void *v26;
  _BYTE v27[24];

  switch(a1)
  {
    case 0:
      v2 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v27, 0, 0);
      if (*(_BYTE *)(v2 + 120) == 1)
      {
        if (qword_1000B7C00 != -1)
          swift_once(&qword_1000B7C00, sub_1000713FC);
        v3 = type metadata accessor for Logger(0);
        v4 = sub_1000093F8(v3, (uint64_t)qword_1000B9F80);
        v5 = Logger.logObject.getter(v4);
        v6 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v5, v6))
        {
          v7 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v7 = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, v6, "End Call upsell finished", v7, 2u);
          swift_slowDealloc(v7, -1, -1);

          v8 = 0;
          goto LABEL_20;
        }
        goto LABEL_29;
      }
      return 1;
    case 1:
      return 11;
    case 2:
      return 3;
    case 3:
      v10 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v27, 0, 0);
      if (*(_BYTE *)(v10 + 120) != 9)
        return 9;
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v11 = type metadata accessor for Logger(0);
      v12 = sub_1000093F8(v11, (uint64_t)qword_1000B9F80);
      v5 = Logger.logObject.getter(v12);
      v13 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v5, v13))
        goto LABEL_29;
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v13, "Announce notifications upsell finished", v14, 2u);
      swift_slowDealloc(v14, -1, -1);

      v8 = 3;
      goto LABEL_20;
    case 4:
      v15 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v27, 0, 0);
      if (*(_BYTE *)(v15 + 120) != 10)
        return 7;
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v16 = type metadata accessor for Logger(0);
      v17 = sub_1000093F8(v16, (uint64_t)qword_1000B9F80);
      v5 = Logger.logObject.getter(v17);
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v18, "Spatial audio profile upsell finished", v19, 2u);
        swift_slowDealloc(v19, -1, -1);

        v8 = 4;
LABEL_20:
        sub_100079B6C((id)v8);
      }
      else
      {
LABEL_29:

      }
      return 12;
    case 5:
      return 6;
    case 6:
      return 2;
    case 7:
      return 5;
    case 8:
      return 9;
    case 9:
      return 10;
    case 10:
      v20 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v27, 0, 0);
      v21 = v20 + *(int *)(type metadata accessor for HeadphoneModel(0) + 168);
      v22 = *(unsigned __int8 *)(v21 + 8);
      if (v22 == 255)
        return 12;
      v9 = *(void **)v21;
      if ((v22 & 1) != 0)
      {
        v26 = *(void **)v21;
        v24 = sub_100009F00((uint64_t *)&unk_1000B8740);
        swift_willThrowTypedImpl(&v26, v24, &protocol self-conformance witness table for Error);
        return 12;
      }
      else
      {
        v23 = v9;
      }
      return (uint64_t)v9;
    case 11:
      return 4;
    default:
      return 12;
  }
}

uint64_t sub_100078044(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  id v13;
  NSString v14;
  id v15;
  NSString v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  void *v34;
  id v35;
  unsigned int v36;
  int v37;
  id v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  int v51;
  unsigned __int8 *v52;
  int v53;
  int v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  void *v97;
  NSString v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  id v109;
  uint64_t v110;
  id v111;
  void *v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t v119;
  id v120;
  void *v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  NSObject *v129;
  os_log_type_t v130;
  uint8_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  os_log_type_t v135;
  uint8_t *v136;
  uint64_t v137;
  unsigned int v138;
  uint64_t v139;
  id v140;
  void *v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  uint8_t *v147;
  uint64_t v148;
  uint64_t v149;
  NSObject *v150;
  os_log_type_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168[3];

  v2 = v1;
  v4 = (int *)type metadata accessor for HeadphoneModel(0);
  v6 = __chkstk_darwin(v4, v5);
  v8 = (char *)&v160 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  v11 = (char *)&v160 - v10;
  LOBYTE(v12) = 0;
  switch(a1)
  {
    case 0:
      v13 = objc_allocWithZone((Class)NSUserDefaults);
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend(v13, "initWithSuiteName:", v14);

      if (!v15)
        goto LABEL_85;
      v16 = String._bridgeToObjectiveC()();
      v17 = objc_msgSend(v15, "BOOLForKey:", v16);

      if (v17)
      {
        if (qword_1000B7C00 != -1)
          swift_once(&qword_1000B7C00, sub_1000713FC);
        v18 = type metadata accessor for Logger(0);
        v19 = sub_1000093F8(v18, (uint64_t)qword_1000B9F80);
        v20 = Logger.logObject.getter(v19);
        v21 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v20, v21))
        {

          goto LABEL_107;
        }
        v22 = (uint8_t *)swift_slowAlloc(12, -1);
        v23 = swift_slowAlloc(32, -1);
        v168[0] = v23;
        *(_DWORD *)v22 = 136315138;
        v24 = sub_1000714A0(0);
        v26 = v25;
        v166 = sub_10004B4F0(v24, v25, v168);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167);
        swift_bridgeObjectRelease(v26);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Should show %s? overridingEndCall prox", v22, 0xCu);
        LOBYTE(v12) = 1;
        swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v23, -1, -1);
        swift_slowDealloc(v22, -1, -1);

      }
      else
      {

LABEL_85:
        swift_beginAccess(v2 + 16, v168, 0, 0);
        v137 = *(_QWORD *)(v2 + 40);
        if (v137)
        {
          sub_100013410((_QWORD *)(v2 + 16), v137);
          v138 = sub_10004299C();
          v139 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
          swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, &v166, 0, 0);
          v140 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", *(unsigned int *)(v139 + v4[31]));
          if (v140)
          {
            v141 = v140;
            v142 = objc_msgSend(v140, "supportsEndCallProx");

          }
          else
          {
            v142 = 0;
          }
          if (qword_1000B7C00 != -1)
            swift_once(&qword_1000B7C00, sub_1000713FC);
          v148 = type metadata accessor for Logger(0);
          v149 = sub_1000093F8(v148, (uint64_t)qword_1000B9F80);
          v150 = Logger.logObject.getter(v149);
          v151 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v150, v151))
          {
            v152 = swift_slowAlloc(34, -1);
            v153 = swift_slowAlloc(64, -1);
            v164 = v153;
            *(_DWORD *)v152 = 136315906;
            v154 = sub_1000714A0(0);
            v156 = v155;
            v163 = sub_10004B4F0(v154, v155, &v164);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, &v164);
            swift_bridgeObjectRelease(v156);
            *(_WORD *)(v152 + 12) = 2080;
            LOBYTE(v12) = v142 & v138;
            if ((v142 & v138) != 0)
              v157 = 5457241;
            else
              v157 = 20302;
            if ((v142 & v138) != 0)
              v158 = 0xE300000000000000;
            else
              v158 = 0xE200000000000000;
            v163 = sub_10004B4F0(v157, v158, &v164);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, &v164);
            swift_bridgeObjectRelease(v158);
            *(_WORD *)(v152 + 22) = 1024;
            LODWORD(v163) = v142;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, (char *)&v163 + 4);
            *(_WORD *)(v152 + 28) = 1024;
            LODWORD(v163) = v138 & 1;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v163, (char *)&v163 + 4);
            _os_log_impl((void *)&_mh_execute_header, v150, v151, "Should show %s? %s \n supportsEndCallProx:%{BOOL}d, endCallStatus:%{BOOL}d ", (uint8_t *)v152, 0x22u);
            swift_arrayDestroy(v153, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v153, -1, -1);
            swift_slowDealloc(v152, -1, -1);

          }
          else
          {

            LOBYTE(v12) = v142 & v138;
          }
        }
        else
        {
          if (qword_1000B7C00 != -1)
            swift_once(&qword_1000B7C00, sub_1000713FC);
          v143 = type metadata accessor for Logger(0);
          v144 = sub_1000093F8(v143, (uint64_t)qword_1000B9F80);
          v145 = Logger.logObject.getter(v144);
          v146 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v145, v146))
          {
            v147 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v147 = 0;
            _os_log_impl((void *)&_mh_execute_header, v145, v146, "Should show endCall status is nil", v147, 2u);
            swift_slowDealloc(v147, -1, -1);

            v132 = 0;
            goto LABEL_93;
          }

          LOBYTE(v12) = 0;
        }
      }
      return v12 & 1;
    case 1:
      LOBYTE(v163) = 0;
      v31 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v168, 0, 0);
      v32 = *(_DWORD *)(v31 + v4[31]);
      if (v32 != 8217 && v32 != 8222)
      {
        v34 = (void *)objc_opt_self(SFHeadphoneProduct);
        v35 = objc_msgSend(v34, "b688");
        v36 = objc_msgSend(v35, "productID");

        if (v32 != v36)
        {
          v37 = *(_DWORD *)(v31 + v4[31]);
          v38 = objc_msgSend(v34, "b487");
          v39 = objc_msgSend(v38, "productID");

          if (v37 != v39)
          {
            if (qword_1000B7BE8 != -1)
              swift_once(&qword_1000B7BE8, sub_100065B10);
            if ((sub_10006533C(*(unsigned int *)(v31 + v4[31]), (void *)qword_1000BC7D8) & 1) == 0)
              LOBYTE(v163) = 1;
          }
        }
      }
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v40 = type metadata accessor for Logger(0);
      v41 = sub_1000093F8(v40, (uint64_t)qword_1000B9F80);
      v42 = v163;
      v43 = Logger.logObject.getter(v41);
      v44 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc(18, -1);
        v46 = swift_slowAlloc(32, -1);
        v166 = v46;
        *(_DWORD *)v45 = 136315394;
        v47 = sub_1000714A0(1);
        v49 = v48;
        v164 = sub_10004B4F0(v47, v48, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165);
        swift_bridgeObjectRelease(v49);
        *(_WORD *)(v45 + 12) = 1024;
        LODWORD(v164) = v42;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4);
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Should show %s? %{BOOL}d", (uint8_t *)v45, 0x12u);
        swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v46, -1, -1);
        swift_slowDealloc(v45, -1, -1);
      }

      swift_beginAccess(&v163, &v166, 0, 0);
      LOBYTE(v12) = v163;
      return v12 & 1;
    case 2:
      v50 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v168, 0, 0);
      v51 = *(unsigned __int8 *)(v50 + v4[25]);
      v52 = (unsigned __int8 *)(v50 + v4[23]);
      v53 = v52[1];
      v54 = v52[2];
      LODWORD(v55) = v52[3];
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v56 = type metadata accessor for Logger(0);
      v57 = sub_1000093F8(v56, (uint64_t)qword_1000B9F80);
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc(36, -1);
        v61 = swift_slowAlloc(32, -1);
        v162 = v51;
        v62 = v61;
        v166 = v61;
        *(_DWORD *)v60 = 136316162;
        v63 = sub_1000714A0(2);
        v51 = v55;
        v55 = v64;
        v164 = sub_10004B4F0(v63, v64, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165);
        swift_bridgeObjectRelease(v55);
        *(_WORD *)(v60 + 12) = 1024;
        LODWORD(v164) = v162 ^ 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4);
        *(_WORD *)(v60 + 18) = 1024;
        LODWORD(v164) = v53 ^ 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4);
        *(_WORD *)(v60 + 24) = 1024;
        LODWORD(v164) = v54;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4);
        *(_WORD *)(v60 + 30) = 1024;
        LOBYTE(v55) = v51;
        LODWORD(v164) = v51;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Should show %s? not temporarily paired = %{BOOL}d, HS not enabled = %{BOOL}d, locale supported = %{BOOL}d, accessory supported = %{BOOL}d", (uint8_t *)v60, 0x24u);
        swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
        LOBYTE(v51) = v162;
        swift_slowDealloc(v62, -1, -1);
        swift_slowDealloc(v60, -1, -1);
      }

      LOBYTE(v12) = v54 & ~(v51 | v53) & v55;
      return v12 & 1;
    case 3:
      v65 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v65, v168, 0, 0);
      LODWORD(v66) = *(unsigned __int8 *)(v65 + v4[25]);
      v67 = *(unsigned __int8 *)(v65 + v4[32]);
      v12 = *(unsigned __int8 *)(v65 + v4[37]);
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v68 = type metadata accessor for Logger(0);
      v69 = sub_1000093F8(v68, (uint64_t)qword_1000B9F80);
      v70 = Logger.logObject.getter(v69);
      v71 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v70, v71))
      {
        v72 = swift_slowAlloc(30, -1);
        v162 = v66;
        v66 = v72;
        v161 = swift_slowAlloc(32, -1);
        v166 = v161;
        *(_DWORD *)v66 = 136315906;
        v73 = sub_1000714A0(3);
        v75 = v74;
        v164 = sub_10004B4F0(v73, v74, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165);
        swift_bridgeObjectRelease(v75);
        *(_WORD *)(v66 + 12) = 1024;
        LODWORD(v164) = v162 ^ 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4);
        *(_WORD *)(v66 + 18) = 1024;
        LODWORD(v164) = v67;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4);
        *(_WORD *)(v66 + 24) = 1024;
        LODWORD(v164) = v12;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4);
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "Should show %s? not temporarily paired = %{BOOL}d, has software volume = %{BOOL}d, needs announce = %{BOOL}d", (uint8_t *)v66, 0x1Eu);
        v76 = v161;
        swift_arrayDestroy(v161, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v76, -1, -1);
        v77 = v66;
        LOBYTE(v66) = v162;
        swift_slowDealloc(v77, -1, -1);
      }

      if ((v66 & 1) != 0 || !*(_BYTE *)(v65 + v4[30]) && (v67 & 1) == 0)
        goto LABEL_51;
      return v12 & 1;
    case 4:
      v78 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v168, 0, 0);
      v79 = v4[25];
      v80 = *(_QWORD *)(v78 + 136);
      if (v80)
        v81 = *(_QWORD *)(v78 + 136);
      else
        v81 = 0xE000000000000000;
      v96 = *(unsigned __int8 *)(v78 + v79);
      v97 = (void *)objc_opt_self(HPSpatialProfileManagerWrapper);
      swift_bridgeObjectRetain(v80);
      v98 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v81);
      v99 = objc_msgSend(v97, "isProxCardEnrollmentSupportedForDevice:", v98);

      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v100 = type metadata accessor for Logger(0);
      v101 = sub_1000093F8(v100, (uint64_t)qword_1000B9F80);
      v102 = Logger.logObject.getter(v101);
      v103 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v102, v103))
      {
        v104 = swift_slowAlloc(24, -1);
        v105 = swift_slowAlloc(32, -1);
        v166 = v105;
        *(_DWORD *)v104 = 136315650;
        v106 = sub_1000714A0(4);
        v108 = v107;
        v164 = sub_10004B4F0(v106, v107, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165);
        swift_bridgeObjectRelease(v108);
        *(_WORD *)(v104 + 12) = 1024;
        LODWORD(v164) = v96 ^ 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4);
        *(_WORD *)(v104 + 18) = 1024;
        LODWORD(v164) = v99;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4);
        _os_log_impl((void *)&_mh_execute_header, v102, v103, "Should show %s? not temporarily paired = %{BOOL}d, needs spatial profile setup = %{BOOL}d", (uint8_t *)v104, 0x18u);
        swift_arrayDestroy(v105, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v105, -1, -1);
        swift_slowDealloc(v104, -1, -1);
      }

      LOBYTE(v12) = (v96 ^ 1) & v99;
      return v12 & 1;
    case 5:
      v82 = objc_allocWithZone((Class)LSApplicationRecord);
      v109 = sub_100081870(0xD000000000000010, 0x800000010008BDA0, 0);
      v110 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v168, 0, 0);
      sub_10003CC88(v110, (uint64_t)v11, type metadata accessor for HeadphoneModel);
      v111 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", *(unsigned int *)&v11[v4[31]]);
      if (v111)
      {
        v112 = v111;
        v113 = objc_msgSend(v111, "supportsFindMyNetwork");

        sub_10000EC60((uint64_t)v11, type metadata accessor for HeadphoneModel);
        if (!v109 && v113)
        {
          if (qword_1000B7C00 != -1)
            swift_once(&qword_1000B7C00, sub_1000713FC);
          v114 = type metadata accessor for Logger(0);
          v115 = sub_1000093F8(v114, (uint64_t)qword_1000B9F80);
          v116 = Logger.logObject.getter(v115);
          v117 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v116, v117))
          {
            v118 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v118 = 0;
            _os_log_impl((void *)&_mh_execute_header, v116, v117, "FindMy not installed and device supports Find My, will show Install Find My view", v118, 2u);
            swift_slowDealloc(v118, -1, -1);

            sub_100079B6C((id)5);
            goto LABEL_107;
          }
          goto LABEL_88;
        }
      }
      else
      {
        sub_10000EC60((uint64_t)v11, type metadata accessor for HeadphoneModel);
      }
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v127 = type metadata accessor for Logger(0);
      v128 = sub_1000093F8(v127, (uint64_t)qword_1000B9F80);
      v129 = Logger.logObject.getter(v128);
      v130 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v129, v130))
      {
        v131 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v131 = 0;
        _os_log_impl((void *)&_mh_execute_header, v129, v130, "FindMy is installed, won't show Install Find My view", v131, 2u);
        swift_slowDealloc(v131, -1, -1);

        v132 = 5;
        goto LABEL_93;
      }
      goto LABEL_83;
    case 6:
      v83 = objc_allocWithZone((Class)LSApplicationRecord);
      v109 = sub_100081870(0xD000000000000010, 0x800000010008BDA0, 0);
      v119 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v168, 0, 0);
      sub_10003CC88(v119, (uint64_t)v8, type metadata accessor for HeadphoneModel);
      v120 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", *(unsigned int *)&v8[v4[31]]);
      if (v120)
      {
        v121 = v120;
        v122 = objc_msgSend(v120, "supportsFindMyNetwork");

        sub_10000EC60((uint64_t)v8, type metadata accessor for HeadphoneModel);
        if (!v109 && v122)
        {
          if (qword_1000B7C00 != -1)
            swift_once(&qword_1000B7C00, sub_1000713FC);
          v123 = type metadata accessor for Logger(0);
          v124 = sub_1000093F8(v123, (uint64_t)qword_1000B9F80);
          v116 = Logger.logObject.getter(v124);
          v125 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v116, v125))
          {
            v126 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v126 = 0;
            _os_log_impl((void *)&_mh_execute_header, v116, v125, "FindMy not installed and device supports Find My, will show AirPods Linking view", v126, 2u);
            swift_slowDealloc(v126, -1, -1);

            sub_100079B6C((id)6);
          }
          else
          {
LABEL_88:

          }
          goto LABEL_107;
        }
      }
      else
      {
        sub_10000EC60((uint64_t)v8, type metadata accessor for HeadphoneModel);
      }
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v133 = type metadata accessor for Logger(0);
      v134 = sub_1000093F8(v133, (uint64_t)qword_1000B9F80);
      v129 = Logger.logObject.getter(v134);
      v135 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v129, v135))
      {
        v136 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v136 = 0;
        _os_log_impl((void *)&_mh_execute_header, v129, v135, "FindMy is installed, won't show AirPods Linking view", v136, 2u);
        swift_slowDealloc(v136, -1, -1);

        v132 = 6;
LABEL_93:
        sub_100079B6C((id)v132);
        LOBYTE(v12) = 0;
      }
      else
      {
LABEL_83:

        LOBYTE(v12) = 0;
      }
      break;
    case 7:
      swift_beginAccess(v2 + 16, v168, 0, 0);
      v84 = *(_QWORD *)(v2 + 40);
      if (!v84)
        goto LABEL_51;
      sub_100013410((_QWORD *)(v2 + 16), v84);
      LOBYTE(v12) = sub_1000432C4();
      return v12 & 1;
    case 8:
      swift_beginAccess(v2 + 16, v168, 0, 0);
      LOBYTE(v12) = 0;
      return v12 & 1;
    case 9:
      swift_beginAccess(v2 + 16, v168, 0, 0);
      v85 = *(_QWORD *)(v2 + 40);
      if (!v85)
        goto LABEL_51;
      v86 = sub_100013410((_QWORD *)(v2 + 16), v85);
      v87 = *(_QWORD *)(*v86 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager);
      v88 = *v86 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v88, &v166, 0, 0);
      v90 = *(_QWORD *)(v88 + 128);
      v89 = *(_QWORD *)(v88 + 136);
      swift_bridgeObjectRetain(v89);
      swift_retain(v87);
      v91 = dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeadGesturesCard(deviceAddress:)(v90, v89);
      goto LABEL_50;
    case 10:
      goto LABEL_107;
    case 11:
      swift_beginAccess(v2 + 16, v168, 0, 0);
      v92 = *(_QWORD *)(v2 + 40);
      if (!v92)
        goto LABEL_51;
      v93 = sub_100013410((_QWORD *)(v2 + 16), v92);
      v87 = *(_QWORD *)(*v93 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager);
      v94 = *v93 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess(v94, &v166, 0, 0);
      v95 = *(_QWORD *)(v94 + 128);
      v89 = *(_QWORD *)(v94 + 136);
      swift_bridgeObjectRetain(v89);
      swift_retain(v87);
      v91 = dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeartRateMonitor(deviceAddress:)(v95, v89);
LABEL_50:
      LOBYTE(v12) = v91;
      swift_release(v87);
      swift_bridgeObjectRelease(v89);
      return v12 & 1;
    case 12:
      return v12 & 1;
    default:
      v27 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v168, 0, 0);
      v28 = v27 + v4[42];
      v29 = *(unsigned __int8 *)(v28 + 8);
      if (v29 == 255)
      {
LABEL_51:
        LOBYTE(v12) = 0;
      }
      else if ((v29 & 1) != 0)
      {
        v166 = *(_QWORD *)v28;
        v30 = sub_100009F00((uint64_t *)&unk_1000B8740);
        swift_willThrowTypedImpl(&v166, v30, &protocol self-conformance witness table for Error);
        LOBYTE(v12) = 0;
      }
      else
      {
LABEL_107:
        LOBYTE(v12) = 1;
      }
      break;
  }
  return v12 & 1;
}

uint64_t sub_100079590()
{
  uint64_t v0;

  sub_100017E48(v0 + 16, &qword_1000B81E0);
  sub_100009FD0(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  sub_10000EC60(v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, type metadata accessor for HeadphoneModel);
  sub_100079B6C(*(id *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_spatialProfileEnrollmentViewController));

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_unlockDevice + 8));
  return v0;
}

uint64_t sub_100079620()
{
  uint64_t v0;

  sub_100079590();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100079644()
{
  return type metadata accessor for HeadphonePresenter(0);
}

uint64_t type metadata accessor for HeadphonePresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_1000BA008;
  if (!qword_1000BA008)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HeadphonePresenter);
  return result;
}

uint64_t sub_100079688(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[14];

  v4[0] = "(";
  v4[1] = &unk_10008AA80;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = &unk_10008AA98;
  v4[4] = &unk_10008AAB0;
  result = type metadata accessor for HeadphoneModel(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = &unk_10008AAB0;
    v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[8] = &unk_10008AAB0;
    v4[9] = &unk_10008AAC8;
    v4[10] = &unk_10008AAB0;
    v4[11] = &unk_10008AAE0;
    v4[12] = &unk_10008AAF8;
    v4[13] = (char *)&value witness table for () + 64;
    return swift_updateClassMetadata2(a1, 256, 14, v4, a1 + 80);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for HeadphonePresenter.PostPairStep(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for HeadphonePresenter.PostPairStep(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for HeadphonePresenter.PostPairStep(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

_QWORD *initializeWithTake for HeadphonePresenter.PostPairStep(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for HeadphonePresenter.PostPairStep(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphonePresenter.PostPairStep(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF3 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483636);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 11;
  if (v4 >= 0xD)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HeadphonePresenter.PostPairStep(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF4)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483636;
    if (a3 >= 0x7FFFFFF4)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF4)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 11;
  }
  return result;
}

_QWORD *sub_10007994C(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePresenter.PostPairStep()
{
  return &type metadata for HeadphonePresenter.PostPairStep;
}

uint64_t getEnumTagSinglePayload for HeadphonePresenter.ConnectionState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphonePresenter.ConnectionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100079A58 + 4 * byte_10008A997[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100079A8C + 4 * byte_10008A992[v4]))();
}

uint64_t sub_100079A8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100079A94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100079A9CLL);
  return result;
}

uint64_t sub_100079AA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100079AB0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100079AB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100079ABC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePresenter.ConnectionState()
{
  return &type metadata for HeadphonePresenter.ConnectionState;
}

unint64_t sub_100079ADC()
{
  unint64_t result;

  result = qword_1000BA0F8;
  if (!qword_1000BA0F8)
  {
    result = swift_getWitnessTable(&unk_10008AB70, &type metadata for HeadphonePresenter.ConnectionState);
    atomic_store(result, (unint64_t *)&qword_1000BA0F8);
  }
  return result;
}

uint64_t sub_100079B20()
{
  return sub_100015EF8(&qword_1000BA100, &qword_1000BA108, (uint64_t)&protocol conformance descriptor for [A]);
}

id sub_100079B4C(id result)
{
  if (result != (id)12)
    return sub_100079B5C(result);
  return result;
}

id sub_100079B5C(id result)
{
  if ((unint64_t)result >= 0xC)
    return result;
  return result;
}

void sub_100079B6C(id a1)
{
  if (a1 != (id)12)
    sub_100079B7C(a1);
}

void sub_100079B7C(id a1)
{
  if ((unint64_t)a1 >= 0xC)

}

const char *sub_100079B8C()
{
  return "AppleAccount";
}

const char *sub_100079BA0()
{
  return "AABranding";
}

uint64_t sub_100079BB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  int *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _OWORD *v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  _BYTE v35[216];

  v3 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v3, v4);
  v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0xE000000000000000;
  a1[12] = 0;
  v7 = (int *)type metadata accessor for HeadphoneViewModel(0);
  a1[8] = 0;
  a1[9] = 0;
  v8 = (char *)a1 + v7[11];
  v9 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (char *)a1 + v7[12];
  *((_QWORD *)v10 + 4) = 0;
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_WORD *)v10 + 20) = -24576;
  v11 = (_OWORD *)((char *)a1 + v7[13]);
  *v11 = 0u;
  v11[1] = 0u;
  v12 = (uint64_t)a1 + v7[14];
  sub_10001F208((uint64_t)v35);
  sub_10003CFDC((uint64_t)v35, v12, &qword_1000B8508);
  *((_BYTE *)a1 + v7[15]) = 0;
  *((_BYTE *)a1 + v7[16]) = 0;
  *(uint64_t *)((char *)a1 + v7[17]) = (uint64_t)&_swiftEmptyArrayStorage;
  *(uint64_t *)((char *)a1 + v7[18]) = (uint64_t)&_swiftEmptyArrayStorage;
  v13 = (_OWORD *)((char *)a1 + v7[19]);
  v13[5] = 0u;
  v13[6] = 0u;
  v13[3] = 0u;
  v13[4] = 0u;
  v13[1] = 0u;
  v13[2] = 0u;
  *v13 = 0u;
  *(uint64_t *)((char *)a1 + v7[20]) = 0;
  *(uint64_t *)((char *)a1 + v7[21]) = 0;
  *((_BYTE *)a1 + v7[22]) = 0;
  *a1 = sub_10001FF98(0xDu);
  a1[1] = v14;
  a1[10] = sub_10001FF98(0x10u);
  a1[11] = v15;
  v16 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v16, v34, 0, 0);
  if (*(_BYTE *)(v16 + *(int *)(v3 + 92)) == 1)
  {
    v17 = sub_100009F00(&qword_1000B9340);
    v18 = swift_allocObject(v17, 72, 7);
    *(_OWORD *)(v18 + 16) = xmmword_100087710;
    sub_10003CC88(v16, (uint64_t)v6, type metadata accessor for HeadphoneModel);
    v19 = sub_10003714C(0x5F544355444F5250, 0xEC000000454D414ELL, (uint64_t)v6);
    v21 = v20;
    sub_10000EC60((uint64_t)v6, type metadata accessor for HeadphoneModel);
    *(_QWORD *)(v18 + 56) = &type metadata for String;
    *(_QWORD *)(v18 + 64) = sub_1000835D0();
    *(_QWORD *)(v18 + 32) = v19;
    *(_QWORD *)(v18 + 40) = v21;
    v22 = sub_100021B70(v18, 0xEu);
    v24 = v23;
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(a1[3]);
    a1[2] = v22;
    a1[3] = v24;
    v25 = sub_10001FF98(0x11u);
    v27 = v26;
    swift_bridgeObjectRelease(a1[5]);
    a1[4] = v25;
    a1[5] = v27;
    v28 = sub_10001FF98(0x12u);
    v30 = v29;
    result = swift_bridgeObjectRelease(a1[7]);
    a1[6] = v28;
    a1[7] = v30;
  }
  else
  {
    a1[2] = sub_10001FF98(0xFu);
    a1[3] = v32;
    result = sub_10001FF98(4u);
    a1[4] = result;
    a1[5] = v33;
  }
  return result;
}

uint64_t sub_100079E74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[24];
  _BYTE v63[48];

  v3 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  v7 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v8 = a1 + v7[11];
  v9 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a1 + v7[12];
  *(_QWORD *)(v10 + 32) = 0;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_WORD *)(v10 + 40) = -24576;
  v11 = (_OWORD *)(a1 + v7[13]);
  *v11 = 0u;
  v11[1] = 0u;
  v12 = a1 + v7[14];
  sub_10001F208((uint64_t)v63);
  sub_10003CFDC((uint64_t)v63, v12, &qword_1000B8508);
  *(_BYTE *)(a1 + v7[15]) = 0;
  *(_BYTE *)(a1 + v7[16]) = 0;
  *(_QWORD *)(a1 + v7[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v7[18]) = &_swiftEmptyArrayStorage;
  v13 = a1 + v7[19];
  *(_OWORD *)(v13 + 80) = 0u;
  *(_OWORD *)(v13 + 96) = 0u;
  *(_OWORD *)(v13 + 48) = 0u;
  *(_OWORD *)(v13 + 64) = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)v13 = 0u;
  *(_QWORD *)(a1 + v7[20]) = 0;
  *(_QWORD *)(a1 + v7[21]) = 0;
  *(_BYTE *)(a1 + v7[22]) = 0;
  *(_QWORD *)a1 = sub_10001FF98(0xDu);
  *(_QWORD *)(a1 + 8) = v14;
  v15 = sub_100009F00(&qword_1000B9340);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100087710;
  v17 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v17, v62, 0, 0);
  sub_10003CC88(v17, (uint64_t)v6, type metadata accessor for HeadphoneModel);
  v18 = sub_10003714C(0x5F544355444F5250, 0xEC000000454D414ELL, (uint64_t)v6);
  v20 = v19;
  sub_10000EC60((uint64_t)v6, type metadata accessor for HeadphoneModel);
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  *(_QWORD *)(v16 + 64) = sub_1000835D0();
  *(_QWORD *)(v16 + 32) = v18;
  *(_QWORD *)(v16 + 40) = v20;
  v21 = sub_100021B70(v16, 0xEu);
  v23 = v22;
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v23;
  v24 = sub_10001FF98(1u);
  v26 = v25;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  *(_QWORD *)(a1 + 48) = v24;
  *(_QWORD *)(a1 + 56) = v26;
  v27 = *(_QWORD *)v17;
  v28 = *(_QWORD *)(v17 + 8);
  v29 = *(_QWORD *)(v17 + 16);
  v30 = *(_QWORD *)(v17 + 24);
  v31 = *(_QWORD *)(v17 + 32);
  v46 = *(void **)(v17 + 40);
  v32 = *(_QWORD *)(v17 + 56);
  v45 = *(_QWORD *)(v17 + 48);
  v44 = v32;
  v48 = *(_QWORD *)(v17 + 64);
  v57 = *(_QWORD *)(v17 + 72);
  v58 = *(_QWORD *)(v17 + 80);
  v59 = *(void **)(v17 + 88);
  v60 = *(_QWORD *)(v17 + 96);
  v61 = *(_QWORD *)(v17 + 104);
  v56 = *(_QWORD *)v13;
  v55 = *(_QWORD *)(v13 + 8);
  v54 = *(_QWORD *)(v13 + 16);
  v53 = *(_QWORD *)(v13 + 24);
  v52 = *(_QWORD *)(v13 + 32);
  v51 = *(void **)(v13 + 40);
  v50 = *(_QWORD *)(v13 + 48);
  v49 = *(_QWORD *)(v13 + 56);
  v47 = *(_OWORD *)(v13 + 64);
  v43 = *(_OWORD *)(v13 + 80);
  v33 = *(_QWORD *)(v13 + 96);
  v34 = *(_QWORD *)(v13 + 104);
  sub_10005B274(v27, v28, v29, v30, v31, v46, v45, v32, v48, v57, v58, v59, v60, v61);
  sub_10004DFCC(v56, v55, v54, v53, v52, v51, v50, v49, v47, *((uint64_t *)&v47 + 1), v43, *((void **)&v43 + 1), v33, v34);
  *(_QWORD *)v13 = v27;
  *(_QWORD *)(v13 + 8) = v28;
  *(_QWORD *)(v13 + 16) = v29;
  *(_QWORD *)(v13 + 24) = v30;
  v35 = v46;
  *(_QWORD *)(v13 + 32) = v31;
  *(_QWORD *)(v13 + 40) = v35;
  *(_QWORD *)(v13 + 48) = v45;
  *(_QWORD *)(v13 + 56) = v44;
  *(_QWORD *)(v13 + 64) = v48;
  *(_QWORD *)(v13 + 72) = v57;
  *(_QWORD *)(v13 + 80) = v58;
  *(_QWORD *)(v13 + 88) = v59;
  *(_QWORD *)(v13 + 96) = v60;
  *(_QWORD *)(v13 + 104) = v61;
  v36 = sub_10001FF98(0x10u);
  v38 = v37;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));
  *(_QWORD *)(a1 + 80) = v36;
  *(_QWORD *)(a1 + 88) = v38;
  v39 = sub_10001FF98(2 * (*(_BYTE *)(v17 + 120) == 9));
  v41 = v40;
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  *(_QWORD *)(a1 + 32) = v39;
  *(_QWORD *)(a1 + 40) = v41;
  return result;
}

uint64_t sub_10007A320@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v44[24];
  _BYTE v45[224];

  v2 = v1;
  v4 = sub_100009F00(&qword_1000BA118);
  __chkstk_darwin(v4, v5);
  v7 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (int *)type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v8, v9);
  v11 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  v12 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v13 = a1 + v12[11];
  v14 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = a1 + v12[12];
  *(_QWORD *)(v15 + 32) = 0;
  *(_OWORD *)v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_WORD *)(v15 + 40) = -24576;
  v16 = (_OWORD *)(a1 + v12[13]);
  *v16 = 0u;
  v16[1] = 0u;
  v17 = a1 + v12[14];
  sub_10001F208((uint64_t)v45);
  sub_10003CFDC((uint64_t)v45, v17, &qword_1000B8508);
  *(_BYTE *)(a1 + v12[15]) = 0;
  *(_BYTE *)(a1 + v12[16]) = 0;
  *(_QWORD *)(a1 + v12[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v12[18]) = &_swiftEmptyArrayStorage;
  v18 = (_OWORD *)(a1 + v12[19]);
  v18[5] = 0u;
  v18[6] = 0u;
  v18[3] = 0u;
  v18[4] = 0u;
  v18[1] = 0u;
  v18[2] = 0u;
  *v18 = 0u;
  *(_QWORD *)(a1 + v12[20]) = 0;
  *(_QWORD *)(a1 + v12[21]) = 0;
  v19 = v12[22];
  *(_BYTE *)(a1 + v19) = 0;
  v20 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v44, 0, 0);
  if (*(_BYTE *)(v20 + v8[19]) == 1)
  {
    sub_10003CC88(v20, (uint64_t)v11, type metadata accessor for HeadphoneModel);
    v21 = sub_10003714C(0x5F544355444F5250, 0xEC000000454D414ELL, (uint64_t)v11);
    v23 = v22;
    sub_10000EC60((uint64_t)v11, type metadata accessor for HeadphoneModel);
  }
  else
  {
    v21 = sub_10001FF98(0x21u);
    v23 = v24;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  *(_QWORD *)a1 = v21;
  *(_QWORD *)(a1 + 8) = v23;
  if (*(_BYTE *)(v20 + v8[26]))
    v25 = 10;
  else
    v25 = 8;
  if (*(_BYTE *)(v20 + v8[26]))
    v26 = 11;
  else
    v26 = 9;
  if (*(_BYTE *)(v20 + v8[27]))
    v27 = v26;
  else
    v27 = v25;
  v28 = sub_10001FF98(v27);
  v30 = v29;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  *(_QWORD *)(a1 + 32) = v28;
  *(_QWORD *)(a1 + 40) = v30;
  v31 = sub_10001FF98(3u);
  v33 = v32;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  *(_QWORD *)(a1 + 48) = v31;
  *(_QWORD *)(a1 + 56) = v33;
  v34 = v8[34];
  v35 = *(_QWORD *)(v20 + v34);
  if (v35)
  {
    v36 = swift_retain(*(_QWORD *)(v20 + v34));
    dispatch thunk of HeadphonePairing2.Assets.personalizationAsset.getter(v36);
    swift_release(v35);
    v37 = type metadata accessor for PersonalizationAssetManager.Asset(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v7, 1, v37) != 1)
    {
      result = sub_100017E48((uint64_t)v7, &qword_1000BA118);
      *(_BYTE *)(a1 + v19) = 1;
      goto LABEL_18;
    }
  }
  else
  {
    v39 = type metadata accessor for PersonalizationAssetManager.Asset(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v7, 1, 1, v39);
  }
  result = sub_100017E48((uint64_t)v7, &qword_1000BA118);
LABEL_18:
  if (*(_BYTE *)(v2 + 80) == 1)
  {
    v40 = sub_10001FF98(0x28u);
    v42 = v41;
    result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
    *(_QWORD *)(a1 + 64) = v40;
    *(_QWORD *)(a1 + 72) = v42;
  }
  return result;
}

uint64_t sub_10007A6A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  void *v13;
  id v14;
  id v15;
  unsigned int v16;
  unsigned __int8 v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[216];

  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  v3 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v4 = a1 + v3[11];
  v5 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1 + v3[12];
  *(_QWORD *)(v6 + 32) = 0;
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_WORD *)(v6 + 40) = -24576;
  v7 = (_OWORD *)(a1 + v3[13]);
  *v7 = 0u;
  v7[1] = 0u;
  v8 = a1 + v3[14];
  sub_10001F208((uint64_t)v24);
  sub_10003CFDC((uint64_t)v24, v8, &qword_1000B8508);
  *(_BYTE *)(a1 + v3[15]) = 0;
  *(_BYTE *)(a1 + v3[16]) = 0;
  *(_QWORD *)(a1 + v3[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v3[18]) = &_swiftEmptyArrayStorage;
  v9 = (_OWORD *)(a1 + v3[19]);
  v9[5] = 0u;
  v9[6] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  *v9 = 0u;
  *(_QWORD *)(a1 + v3[20]) = 0;
  *(_QWORD *)(a1 + v3[21]) = 0;
  *(_BYTE *)(a1 + v3[22]) = 0;
  *(_QWORD *)a1 = sub_10001FF98(0x29u);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v11, &v23, 0, 0);
  v12 = *(_DWORD *)(v11 + *(int *)(type metadata accessor for HeadphoneModel(0) + 124));
  v13 = (void *)objc_opt_self(SFHeadphoneProduct);
  v14 = objc_msgSend(v13, "b465");
  LODWORD(v8) = objc_msgSend(v14, "productID");

  if ((_DWORD)v8 == v12)
  {
LABEL_5:
    v17 = 43;
    goto LABEL_6;
  }
  v15 = objc_msgSend(v13, "b463");
  v16 = objc_msgSend(v15, "productID");

  if (v16 != v12)
  {
    v18 = objc_msgSend(v13, "b498");
    v19 = objc_msgSend(v18, "productID");

    if (v19 != v12)
    {
      v17 = 42;
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  v17 = 44;
LABEL_6:
  *(_QWORD *)(a1 + 16) = sub_10001FF98(v17);
  *(_QWORD *)(a1 + 24) = v20;
  result = sub_10001FF98(3u);
  *(_QWORD *)(a1 + 48) = result;
  *(_QWORD *)(a1 + 56) = v22;
  return result;
}

uint64_t sub_10007A8E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void *v14;
  id v15;
  unsigned int v16;
  id v17;
  unsigned int v18;
  unsigned __int8 v19;
  id v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  id v25;
  unsigned int v26;
  unsigned __int8 v27;
  uint64_t v28;
  id v29;
  unsigned int v30;
  id v31;
  unsigned int v32;
  uint64_t v33;
  _BYTE v34[216];

  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  v3 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v4 = a1 + v3[11];
  v5 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1 + v3[12];
  *(_QWORD *)(v6 + 32) = 0;
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_WORD *)(v6 + 40) = -24576;
  v7 = (_OWORD *)(a1 + v3[13]);
  *v7 = 0u;
  v7[1] = 0u;
  v8 = a1 + v3[14];
  sub_10001F208((uint64_t)v34);
  sub_10003CFDC((uint64_t)v34, v8, &qword_1000B8508);
  *(_BYTE *)(a1 + v3[15]) = 0;
  *(_BYTE *)(a1 + v3[16]) = 0;
  *(_QWORD *)(a1 + v3[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v3[18]) = &_swiftEmptyArrayStorage;
  v9 = (_OWORD *)(a1 + v3[19]);
  v9[5] = 0u;
  v9[6] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  *v9 = 0u;
  *(_QWORD *)(a1 + v3[20]) = 0;
  v10 = v3[21];
  *(_QWORD *)(a1 + v10) = 0;
  *(_BYTE *)(a1 + v3[22]) = 0;
  *(_QWORD *)a1 = sub_10001FF98(0x39u);
  *(_QWORD *)(a1 + 8) = v11;
  v12 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, &v33, 0, 0);
  v13 = *(_DWORD *)(v12 + *(int *)(type metadata accessor for HeadphoneModel(0) + 124));
  v14 = (void *)objc_opt_self(SFHeadphoneProduct);
  v15 = objc_msgSend(v14, "airPodsMax");
  v16 = objc_msgSend(v15, "productID");

  if (v16 == v13
    || (v17 = objc_msgSend(v14, "airPodsMax"),
        v18 = objc_msgSend(v17, "altProductID"),
        v17,
        v18 == v13))
  {
    v19 = 59;
  }
  else
  {
    v20 = objc_msgSend(v14, "b688");
    v21 = objc_msgSend(v20, "productID");

    if (v21 != v13 && v13 != 8219 && v13 != 8217)
    {
      v25 = objc_msgSend(v14, "powerBeatsPro");
      v26 = objc_msgSend(v25, "productID");

      if (v26 == v13 || v13 == 8221)
      {
        v27 = 61;
      }
      else
      {
        v29 = objc_msgSend(v14, "b494");
        v30 = objc_msgSend(v29, "productID");

        if (v30 == v13)
        {
          v27 = 62;
        }
        else
        {
          v31 = objc_msgSend(v14, "b465");
          v32 = objc_msgSend(v31, "productID");

          if (v32 != v13)
          {
            v19 = 58;
            goto LABEL_8;
          }
          v27 = 63;
        }
      }
      *(_QWORD *)(a1 + 16) = sub_10001FF98(v27);
      *(_QWORD *)(a1 + 24) = v28;
      *(_QWORD *)(a1 + v10) = sub_10008007C();
      goto LABEL_9;
    }
    v19 = 60;
  }
LABEL_8:
  *(_QWORD *)(a1 + 16) = sub_10001FF98(v19);
  *(_QWORD *)(a1 + 24) = v22;
LABEL_9:
  result = sub_10001FF98(0x40u);
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v24;
  return result;
}

uint64_t sub_10007AC10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void *v17;
  id v18;
  unsigned int v19;
  int v20;
  id v21;
  unsigned int v22;
  int v23;
  id v24;
  unsigned int v25;
  int v26;
  id v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[224];

  v3 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v4 = a1 + v3[11];
  v5 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1 + v3[12];
  *(_QWORD *)(v6 + 32) = 0;
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_WORD *)(v6 + 40) = -24576;
  v7 = (_OWORD *)(a1 + v3[13]);
  *v7 = 0u;
  v7[1] = 0u;
  v8 = a1 + v3[14];
  sub_10001F208((uint64_t)v36);
  sub_10003CFDC((uint64_t)v36, v8, &qword_1000B8508);
  *(_BYTE *)(a1 + v3[15]) = 0;
  *(_BYTE *)(a1 + v3[16]) = 0;
  *(_QWORD *)(a1 + v3[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v3[18]) = &_swiftEmptyArrayStorage;
  v9 = (_OWORD *)(a1 + v3[19]);
  v9[5] = 0u;
  v9[6] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  *v9 = 0u;
  *(_QWORD *)(a1 + v3[20]) = 0;
  *(_QWORD *)(a1 + v3[21]) = 0;
  *(_BYTE *)(a1 + v3[22]) = 0;
  *(_QWORD *)a1 = sub_10001FF98(0x51u);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = sub_10001FF98(0x52u);
  v13 = v12;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v12;
  v14 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v35, 0, 0);
  v15 = type metadata accessor for HeadphoneModel(0);
  v16 = *(_DWORD *)(v14 + *(int *)(v15 + 124));
  v17 = (void *)objc_opt_self(SFHeadphoneProduct);
  v18 = objc_msgSend(v17, "b768e");
  v19 = objc_msgSend(v18, "productID");

  if (v16 == v19)
    goto LABEL_5;
  v20 = *(_DWORD *)(v14 + *(int *)(v15 + 124));
  v21 = objc_msgSend(v17, "b768m");
  v22 = objc_msgSend(v21, "productID");

  if (v20 == v22)
    goto LABEL_5;
  v23 = *(_DWORD *)(v14 + *(int *)(v15 + 124));
  v24 = objc_msgSend(v17, "b768e");
  v25 = objc_msgSend(v24, "altProductID");

  if (v23 == v25
    || (v26 = *(_DWORD *)(v14 + *(int *)(v15 + 124)),
        v27 = objc_msgSend(v17, "b768m"),
        v28 = objc_msgSend(v27, "altProductID"),
        v27,
        v26 == v28))
  {
LABEL_5:
    v29 = sub_10001FF98(0x53u);
    v31 = v30;
    swift_bridgeObjectRelease(v13);
    *(_QWORD *)(a1 + 16) = v29;
    *(_QWORD *)(a1 + 24) = v31;
  }
  *(_QWORD *)(a1 + 32) = sub_10001FF98(0x54u);
  *(_QWORD *)(a1 + 40) = v32;
  result = sub_10001FF98(0x44u);
  *(_QWORD *)(a1 + 48) = result;
  *(_QWORD *)(a1 + 56) = v34;
  return result;
}

uint64_t sub_10007AEBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  void (*v11)(void);
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  int *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  id v27;
  unsigned int v28;
  int v29;
  id v30;
  unsigned int v31;
  int v32;
  id v33;
  unsigned int v34;
  int v35;
  id v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  const char *v46;
  id v47;
  id v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  id v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  unint64_t v84;
  BOOL v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  id v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  unint64_t v103;
  unint64_t v104;
  char *v105;
  unsigned __int8 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  void *v139;
  void *v140;
  id v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  id v148;
  int v149;
  uint64_t v150;
  const char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  uint64_t v157;
  unint64_t v158;
  NSString v159;
  id v160;
  void *v161;
  char *v162;
  uint64_t v163;
  void (*v164)(char *, char *, uint64_t);
  uint64_t v165;
  uint64_t v166;
  int *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t result;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(void);
  uint64_t v182;
  char *v183;
  int *v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  id v190;
  uint64_t v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  id v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _BYTE v205[224];

  v3 = type metadata accessor for HeadphoneAssets(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  v7 = (char *)&v177 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for URL(0);
  v180 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182, v8);
  v178 = (char *)&v177 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  v10 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v11 = *(void (**)(void))(v4 + 56);
  v179 = a1 + v10[11];
  v181 = v11;
  v11();
  v12 = a1 + v10[12];
  *(_QWORD *)(v12 + 32) = 0;
  *(_OWORD *)v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_WORD *)(v12 + 40) = -24576;
  v13 = (_OWORD *)(a1 + v10[13]);
  *v13 = 0u;
  v13[1] = 0u;
  v14 = a1 + v10[14];
  sub_10001F208((uint64_t)v205);
  sub_10003CFDC((uint64_t)v205, v14, &qword_1000B8508);
  *(_BYTE *)(a1 + v10[15]) = 0;
  *(_BYTE *)(a1 + v10[16]) = 0;
  v15 = v10[17];
  *(_QWORD *)(a1 + v15) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v10[18]) = &_swiftEmptyArrayStorage;
  v16 = (_OWORD *)(a1 + v10[19]);
  v16[5] = 0u;
  v16[6] = 0u;
  v16[3] = 0u;
  v16[4] = 0u;
  v16[1] = 0u;
  v16[2] = 0u;
  *v16 = 0u;
  *(_QWORD *)(a1 + v10[20]) = 0;
  *(_QWORD *)(a1 + v10[21]) = 0;
  *(_BYTE *)(a1 + v10[22]) = 0;
  v17 = sub_10001FF98(0x1Bu);
  v19 = v18;
  *(_QWORD *)(a1 + 16) = v17;
  *(_QWORD *)(a1 + 24) = v18;
  v197 = v1;
  v20 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, &v204, 0, 0);
  v21 = (int *)type metadata accessor for HeadphoneModel(0);
  v22 = *(_DWORD *)(v20 + v21[28]);
  v23 = *(_DWORD *)(v20 + v21[31]);
  v187 = v15;
  v183 = v7;
  v184 = (int *)v3;
  v195 = v19;
  if ((v23 - 8217) <= 7 && ((1 << (v23 - 25)) & 0xA5) != 0)
  {
    sub_1000709C4(v23);
    v24 = 1;
    goto LABEL_4;
  }
  if (sub_1000709C4(v23))
  {
    v24 = 0;
LABEL_4:
    v25 = *(_DWORD *)(v20 + v21[31]);
    v26 = *(_DWORD *)(v20 + v21[29]);
    v198 = (id)objc_opt_self(SFHeadphoneProduct);
    v27 = objc_msgSend(v198, "b698");
    v28 = objc_msgSend(v27, "productID");

    v189 = v24;
    if (v25 == v28)
    {
      if (v25 != v26 && *(_BYTE *)(v20 + 146) != 3)
      {
LABEL_7:
        if ((v24 & 1) != 0)
          goto LABEL_18;
        goto LABEL_14;
      }
    }
    else if (v25 != v26)
    {
      goto LABEL_7;
    }
    v29 = *(_DWORD *)(v20 + v21[31]);
    v30 = objc_msgSend(v198, "airPodsPro");
    v31 = objc_msgSend(v30, "productID");

    if (v29 != v31 || *(_BYTE *)(v20 + 146) != 3)
    {
      v32 = *(_DWORD *)(v20 + v21[31]);
      v33 = objc_msgSend(v198, "b698");
      v34 = objc_msgSend(v33, "productID");

      if (v32 != v34 || *(_BYTE *)(v20 + 146) != 2)
      {
LABEL_18:
        v47 = v198;
        v48 = objc_msgSend(v198, "b698");
        v49 = objc_msgSend(v48, "productID");

        v50 = sub_100036F10(0x52554F595F544F4ELL, (void *)0xE900000000000053, v49);
        v52 = v51;
        v53 = *(unsigned __int8 *)(v20 + v21[16]);
        LODWORD(v194) = v22;
        v186 = v50;
        if (v53 == 1)
        {
          v54 = v50;
          v55 = (void *)objc_opt_self(UIColor);
          swift_bridgeObjectRetain(v52);
          v199 = objc_msgSend(v55, "systemRedColor");
          v56 = objc_msgSend(v47, "b698");
          v57 = v52;
          v58 = objc_msgSend(v56, "productID");

          v59 = sub_100036F10(0xD00000000000001CLL, (void *)0x8000000100090270, v58);
          v61 = v60;
          swift_bridgeObjectRelease(v195);
          LODWORD(v188) = 0;
          *(_QWORD *)(a1 + 16) = v59;
          *(_QWORD *)(a1 + 24) = v61;
          v62 = 2;
          v193 = v54;
          v63 = v57;
LABEL_51:
          v120 = *(_QWORD *)(v20 + 136);
          v196 = v57;
          v192 = v62;
          if (v120
            && (v121 = *(_QWORD *)(v20 + 128),
                v122 = v197,
                swift_beginAccess(v197 + 16, &v201, 0, 0),
                *(_QWORD *)(v122 + 40)))
          {
            swift_bridgeObjectRetain(v120);
            v123 = sub_10004CFA0(v121, v120);
            v125 = v124;
            swift_bridgeObjectRelease(v120);
            v79 = v125;
            if (v125)
              v126 = v123;
            else
              v126 = 0;
          }
          else
          {
            v126 = 0;
            v79 = 0;
          }
          v127 = (uint64_t *)(v20 + v21[17]);
          v128 = v127[1];
          v129 = v189;
          v191 = v63;
          if (v128
            && (v130 = *v127, v131 = v197, swift_beginAccess(v197 + 16, &v202, 0, 0), *(_QWORD *)(v131 + 40)))
          {
            swift_bridgeObjectRetain(v128);
            v132 = sub_10004CFA0(v130, v128);
            v134 = v133;
            swift_bridgeObjectRelease(v128);
            if (v134)
              v135 = v132;
            else
              v135 = 0;
          }
          else
          {
            v135 = 0;
            v134 = 0;
          }
          if ((v194 & 0x80) == 0)
          {
            v136 = v196;
            if (v79)
            {
              v190 = 0;
              if (v134)
              {
LABEL_66:
                swift_bridgeObjectRelease(v136);
                v195 = 0;
                v80 = v126;
                v40 = v79;
                v126 = v135;
                v79 = v134;
LABEL_72:
                v44 = v190;
LABEL_76:
                v91 = v129;
                if (v129)
                  v142 = 0xD000000000000012;
                else
                  v142 = 0xD000000000000030;
                v143 = 0x8000000100090210;
                if (v129)
                  v143 = 0x8000000100090250;
                v185 = v142;
                v186 = v143;
                v197 = v126;
                if ((v188 & 1) != 0)
                {
                  v82 = v44;
                  v83 = v195;
                  goto LABEL_83;
                }
                v188 = v79;
                v42 = v191;
                v43 = v199;
                v90 = v192;
                sub_100011368(v193, v191, v199, v192);
                v194 = v80;
                v45 = v195;
                goto LABEL_86;
              }
            }
            else
            {
              v137 = objc_opt_self(UIColor);
              swift_bridgeObjectRetain(v136);
              v138 = (void *)v137;
              v139 = v199;
              v190 = objc_msgSend(v138, "systemRedColor");
              v126 = v186;
              v79 = v136;
              v199 = v139;
              if (v134)
                goto LABEL_66;
            }
            v195 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
            v80 = v126;
            v40 = v79;
            v126 = v186;
            v79 = v136;
            goto LABEL_72;
          }
          v40 = v196;
          if (v79)
          {
            v80 = v186;
            v195 = 0;
            if (v134)
            {
LABEL_69:
              swift_bridgeObjectRelease(v40);
              v80 = v135;
              v40 = v134;
              v44 = 0;
LABEL_75:
              v129 = v189;
              goto LABEL_76;
            }
          }
          else
          {
            v140 = (void *)objc_opt_self(UIColor);
            swift_bridgeObjectRetain(v40);
            v141 = objc_msgSend(v140, "systemRedColor");
            v80 = v186;
            v126 = v186;
            v79 = v40;
            v195 = v141;
            if (v134)
              goto LABEL_69;
          }
          v44 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
          goto LABEL_75;
        }
        v64 = v51;
        v65 = objc_msgSend(v47, "b698");
        v66 = objc_msgSend(v65, "productID");

        v67 = sub_100036F10(0xD00000000000001CLL, (void *)0x80000001000901F0, v66);
        v69 = v68;
        swift_bridgeObjectRelease(v195);
        *(_QWORD *)(a1 + 16) = v67;
        *(_QWORD *)(a1 + 24) = v69;
        v70 = *(_QWORD *)(v20 + 136);
        if (!v70)
        {
          v193 = 0;
          v63 = 0;
          v199 = 0;
          v62 = 255;
          LODWORD(v188) = 1;
          v57 = v64;
          goto LABEL_51;
        }
        v71 = *(_QWORD *)(v20 + 128);
        v72 = v197;
        swift_beginAccess(v197 + 16, &v200, 0, 0);
        v73 = *(_QWORD *)(v72 + 40);
        v57 = v64;
        if (v73)
        {
          swift_bridgeObjectRetain(v70);
          v193 = sub_10004CFA0(v71, v70);
          v63 = v74;
          swift_bridgeObjectRelease(v70);
          if (v63)
          {
            v199 = 0;
            LODWORD(v188) = 0;
            v62 = 2;
            goto LABEL_51;
          }
          v193 = 0;
        }
        else
        {
          v193 = 0;
          v63 = 0;
        }
        v199 = 0;
        v62 = 255;
        LODWORD(v188) = 1;
        goto LABEL_51;
      }
    }
LABEL_14:
    if (v25 != v26)
    {
      if ((v22 & 0x80) != 0
        && (v75 = *(_DWORD *)(v20 + v21[31]),
            v76 = objc_msgSend(v198, "airPodsPro"),
            v77 = objc_msgSend(v76, "productID"),
            v76,
            v75 == v77))
      {
        v197 = sub_10001FF98(0x1Fu);
        v79 = v78;
        v80 = sub_10001FF98(0x20u);
        v40 = v81;
        v193 = 0;
        v191 = 0;
        v199 = 0;
        v82 = 0;
        v83 = 0;
        v84 = 0x80000001000900F0;
        v85 = *(_BYTE *)(v20 + 146) == 3;
        v86 = "AirPodsPro_case-open_leftBud-1_rightBud-2_case-2";
      }
      else
      {
        v197 = sub_10001FF98(0x20u);
        v79 = v92;
        v80 = sub_10001FF98(0x1Fu);
        v40 = v93;
        v193 = 0;
        v191 = 0;
        v199 = 0;
        v82 = 0;
        v83 = 0;
        v84 = 0x8000000100090050;
        v85 = *(_BYTE *)(v20 + 146) == 3;
        v86 = "AirPodsPro_case-open_leftBud-2_rightBud-1_case-2";
      }
      v94 = (unint64_t)(v86 - 32) | 0x8000000000000000;
      if (v85)
        v95 = v94;
      else
        v95 = v84;
      v185 = 0xD000000000000030;
      v186 = v95;
      LOBYTE(v91) = v189;
LABEL_83:
      v144 = sub_100009F00(&qword_1000BA120);
      v102 = (char *)swift_allocObject(v144, 96, 7);
      *((_OWORD *)v102 + 1) = xmmword_100088470;
      v145 = v197;
      *((_QWORD *)v102 + 4) = v197;
      *((_QWORD *)v102 + 5) = v79;
      *((_QWORD *)v102 + 6) = v83;
      v102[56] = 0;
      *((_QWORD *)v102 + 8) = v80;
      *((_QWORD *)v102 + 9) = v40;
      *((_QWORD *)v102 + 10) = v82;
      v102[88] = 1;
      v192 = 255;
      v146 = v83;
      v44 = v82;
      v147 = v145;
      if ((v91 & 1) != 0)
      {
LABEL_84:
        v195 = v146;
        sub_100011368(v147, v79, v146, 0);
        v194 = v80;
        v196 = v40;
        v190 = v44;
        sub_100011368(v80, v40, v44, 1u);
        v148 = objc_msgSend(v198, "airPods");
        v149 = objc_msgSend(v148, "productID");

        v150 = 0xD000000000000016;
        v151 = "MISMATCH_AIRPODS_TITLE";
LABEL_88:
        *(_QWORD *)a1 = sub_100036F10(v150, (void *)((unint64_t)(v151 - 32) | 0x8000000000000000), v149);
        *(_QWORD *)(a1 + 8) = v157;
        v158 = v186;
        v159 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v158);
        v160 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v159);

        v161 = v199;
        if (v160)
        {
          v197 = v147;
          v162 = v178;
          URL.init(fileURLWithPath:)(0, 0xE000000000000000);
          v199 = v161;
          v188 = v79;
          v163 = v180;
          v164 = *(void (**)(char *, char *, uint64_t))(v180 + 16);
          v166 = v182;
          v165 = (uint64_t)v183;
          v164(v183, v162, v182);
          v167 = v184;
          v164((char *)(v165 + v184[5]), v162, v166);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v163 + 56))(v165 + v167[6], 1, 1, v166);
          v168 = v165 + v167[7];
          v169 = type metadata accessor for HeadphoneAssets.Feature(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 56))(v168, 1, 1, v169);
          v170 = v167[8];
          *(_QWORD *)(v165 + v170) = &_swiftEmptyArrayStorage;
          *(_QWORD *)(v165 + v167[9]) = 0;
          v171 = (_QWORD *)(v165 + v167[10]);
          *v171 = 0;
          v171[1] = 0;
          v172 = sub_100009F00((uint64_t *)&unk_1000B8730);
          v173 = swift_allocObject(v172, 40, 7);
          *(_OWORD *)(v173 + 16) = xmmword_1000893B0;
          *(_QWORD *)(v173 + 32) = v160;
          v203 = v173;
          specialized Array._endMutation()();
          v174 = v203;
          sub_1000113B0(v197, v188, v195, 0);
          sub_1000113B0(v194, v196, v190, 1u);
          sub_100083614(v193, v191, v199, v192);
          (*(void (**)(char *, uint64_t))(v163 + 8))(v162, v166);
          swift_bridgeObjectRelease(*(_QWORD *)(v165 + v170));
          *(_QWORD *)(v165 + v170) = v174;
          v175 = v179;
          sub_100017E48(v179, &qword_1000B7F18);
          sub_10003CC88(v165, v175, type metadata accessor for HeadphoneAssets);
          ((void (*)(uint64_t, _QWORD, uint64_t, int *))v181)(v175, 0, 1, v167);
          sub_10000EC60(v165, type metadata accessor for HeadphoneAssets);
        }
        else
        {
          sub_100083614(v193, v191, v199, v192);
          sub_1000113B0(v194, v196, v190, 1u);
          sub_1000113B0(v147, v79, v195, 0);
        }
        v15 = v187;
        goto LABEL_92;
      }
LABEL_87:
      v195 = v146;
      sub_100011368(v147, v79, v146, 0);
      v194 = v80;
      v196 = v40;
      v190 = v44;
      sub_100011368(v80, v40, v44, 1u);
      v156 = objc_msgSend(v198, "b698");
      v149 = objc_msgSend(v156, "productID");

      v150 = 0xD000000000000014;
      v151 = "MISMATCH_AIRPODS_PRO";
      goto LABEL_88;
    }
    v35 = *(_DWORD *)(v20 + v21[31]);
    v36 = objc_msgSend(v198, "airPodsPro");
    v37 = objc_msgSend(v36, "productID");

    if (v35 == v37 && *(_BYTE *)(v20 + 146) == 3)
    {
      v197 = sub_10001FF98(0x1Fu);
      v188 = v38;
      v194 = sub_10001FF98(0x1Fu);
      v40 = v39;
      v193 = sub_10001FF98(0x20u);
      v42 = v41;
      swift_bridgeObjectRetain(v41);
      v43 = 0;
      v44 = 0;
      v45 = 0;
      v46 = "AirPodsPro_case-open_leftBud-1_rightBud-1_case-2";
    }
    else
    {
      v197 = sub_10001FF98(0x20u);
      v188 = v87;
      v194 = sub_10001FF98(0x20u);
      v40 = v88;
      v193 = sub_10001FF98(0x1Fu);
      v42 = v89;
      swift_bridgeObjectRetain(v89);
      v43 = 0;
      v44 = 0;
      v45 = 0;
      v46 = "AirPodsPro_case-open_leftBud-2_rightBud-2_case-1";
    }
    v90 = 2;
    v185 = 0xD000000000000030;
    v186 = (unint64_t)(v46 - 32) | 0x8000000000000000;
    v91 = v189;
LABEL_86:
    v152 = sub_100009F00(&qword_1000BA120);
    v102 = (char *)swift_allocObject(v152, 128, 7);
    *((_OWORD *)v102 + 1) = xmmword_100089C70;
    v153 = v197;
    v154 = v188;
    *((_QWORD *)v102 + 4) = v197;
    *((_QWORD *)v102 + 5) = v154;
    *((_QWORD *)v102 + 6) = v45;
    v102[56] = 0;
    v155 = v194;
    *((_QWORD *)v102 + 8) = v194;
    *((_QWORD *)v102 + 9) = v40;
    *((_QWORD *)v102 + 10) = v44;
    v102[88] = 1;
    *((_QWORD *)v102 + 12) = v193;
    *((_QWORD *)v102 + 13) = v42;
    v191 = v42;
    v199 = v43;
    *((_QWORD *)v102 + 14) = v43;
    v192 = v90;
    v102[120] = v90;
    v79 = v154;
    v147 = v153;
    v146 = v45;
    v80 = v155;
    if (v91)
      goto LABEL_84;
    goto LABEL_87;
  }
  if ((v22 & 0x80) != 0
    && (v96 = *(_DWORD *)(v20 + v21[31]),
        v97 = objc_msgSend((id)objc_opt_self(SFHeadphoneProduct), "airPods"),
        v98 = objc_msgSend(v97, "productID"),
        v97,
        v96 == v98))
  {
    v99 = sub_10001FF98(0x1Fu);
    v101 = v100;
    v102 = sub_100081948(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
    v104 = *((_QWORD *)v102 + 2);
    v103 = *((_QWORD *)v102 + 3);
    if (v104 >= v103 >> 1)
      v102 = sub_100081948((char *)(v103 > 1), v104 + 1, 1, v102);
    *((_QWORD *)v102 + 2) = v104 + 1;
    v105 = &v102[32 * v104];
    *((_QWORD *)v105 + 4) = v99;
    *((_QWORD *)v105 + 5) = v101;
    *((_QWORD *)v105 + 6) = 0;
    v105[56] = 0;
    v106 = 32;
  }
  else
  {
    v107 = sub_10001FF98(0x20u);
    v109 = v108;
    v102 = sub_100081948(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
    v111 = *((_QWORD *)v102 + 2);
    v110 = *((_QWORD *)v102 + 3);
    if (v111 >= v110 >> 1)
      v102 = sub_100081948((char *)(v110 > 1), v111 + 1, 1, v102);
    *((_QWORD *)v102 + 2) = v111 + 1;
    v112 = &v102[32 * v111];
    *((_QWORD *)v112 + 4) = v107;
    *((_QWORD *)v112 + 5) = v109;
    *((_QWORD *)v112 + 6) = 0;
    v112[56] = 0;
    v106 = 31;
  }
  v113 = sub_10001FF98(v106);
  v115 = v114;
  v117 = *((_QWORD *)v102 + 2);
  v116 = *((_QWORD *)v102 + 3);
  if (v117 >= v116 >> 1)
    v102 = sub_100081948((char *)(v116 > 1), v117 + 1, 1, v102);
  *((_QWORD *)v102 + 2) = v117 + 1;
  v118 = &v102[32 * v117];
  *((_QWORD *)v118 + 4) = v113;
  *((_QWORD *)v118 + 5) = v115;
  v118 += 32;
  *((_QWORD *)v118 + 2) = 0;
  v118[24] = 1;
  *(_QWORD *)a1 = sub_10001FF98(0x1Au);
  *(_QWORD *)(a1 + 8) = v119;
LABEL_92:
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + v15));
  *(_QWORD *)(a1 + v15) = v102;
  return result;
}

uint64_t sub_10007BF18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[216];

  v3 = (uint64_t *)(a1 + 32);
  *(_QWORD *)(a1 + 48) = 0;
  v4 = (uint64_t *)(a1 + 48);
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  v5 = (_QWORD *)(a1 + 56);
  v6 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v7 = a1 + v6[11];
  v8 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = a1 + v6[12];
  *(_QWORD *)(v9 + 32) = 0;
  *(_OWORD *)v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_WORD *)(v9 + 40) = -24576;
  v10 = (_OWORD *)(a1 + v6[13]);
  *v10 = 0u;
  v10[1] = 0u;
  v11 = a1 + v6[14];
  sub_10001F208((uint64_t)v22);
  sub_10003CFDC((uint64_t)v22, v11, &qword_1000B8508);
  *(_BYTE *)(a1 + v6[15]) = 0;
  *(_BYTE *)(a1 + v6[16]) = 0;
  *(_QWORD *)(a1 + v6[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v6[18]) = &_swiftEmptyArrayStorage;
  v12 = (_OWORD *)(a1 + v6[19]);
  v12[5] = 0u;
  v12[6] = 0u;
  v12[3] = 0u;
  v12[4] = 0u;
  v12[1] = 0u;
  v12[2] = 0u;
  *v12 = 0u;
  *(_QWORD *)(a1 + v6[20]) = 0;
  *(_QWORD *)(a1 + v6[21]) = 0;
  *(_BYTE *)(a1 + v6[22]) = 0;
  *(_QWORD *)a1 = sub_10001FF98(0x5Cu);
  *(_QWORD *)(a1 + 8) = v13;
  *(_QWORD *)(a1 + 16) = sub_10001FF98(0x5Du);
  *(_QWORD *)(a1 + 24) = v14;
  v15 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v15, &v21, 0, 0);
  v16 = (_QWORD *)(a1 + 40);
  if (*(_BYTE *)(v15 + 120))
  {
    *v3 = sub_10001FF98(0x61u);
    *v16 = v17;
    v18 = 98;
    v3 = v4;
    v16 = v5;
  }
  else
  {
    v18 = 2;
  }
  result = sub_10001FF98(v18);
  *v3 = result;
  *v16 = v20;
  return result;
}

uint64_t sub_10007C0CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[216];

  v3 = (int *)type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  v7 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v8 = a1 + v7[11];
  v9 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a1 + v7[12];
  *(_QWORD *)(v10 + 32) = 0;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_WORD *)(v10 + 40) = -24576;
  v11 = (_OWORD *)(a1 + v7[13]);
  *v11 = 0u;
  v11[1] = 0u;
  v12 = a1 + v7[14];
  sub_10001F208((uint64_t)v39);
  sub_10003CFDC((uint64_t)v39, v12, &qword_1000B8508);
  *(_BYTE *)(a1 + v7[15]) = 0;
  *(_BYTE *)(a1 + v7[16]) = 0;
  *(_QWORD *)(a1 + v7[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v7[18]) = &_swiftEmptyArrayStorage;
  v13 = (_OWORD *)(a1 + v7[19]);
  v13[5] = 0u;
  v13[6] = 0u;
  v13[3] = 0u;
  v13[4] = 0u;
  v13[1] = 0u;
  v13[2] = 0u;
  *v13 = 0u;
  *(_QWORD *)(a1 + v7[20]) = 0;
  *(_QWORD *)(a1 + v7[21]) = 0;
  *(_BYTE *)(a1 + v7[22]) = 0;
  v14 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, &v38, 0, 0);
  sub_10003CC88(v14, (uint64_t)v6, type metadata accessor for HeadphoneModel);
  v15 = sub_10003714C(0x52554F595F544F4ELL, 0xE800000000000000, (uint64_t)v6);
  v17 = v16;
  sub_10000EC60((uint64_t)v6, type metadata accessor for HeadphoneModel);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  *(_QWORD *)a1 = v15;
  *(_QWORD *)(a1 + 8) = v17;
  if (*(_BYTE *)(v14 + v3[26]))
    v18 = 10;
  else
    v18 = 8;
  if (*(_BYTE *)(v14 + v3[26]))
    v19 = 11;
  else
    v19 = 9;
  if (*(_BYTE *)(v14 + v3[27]))
    v20 = v19;
  else
    v20 = v18;
  v21 = sub_10001FF98(v20);
  v23 = v22;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  *(_QWORD *)(a1 + 48) = v21;
  *(_QWORD *)(a1 + 56) = v23;
  sub_10003CC88(v14, (uint64_t)v6, type metadata accessor for HeadphoneModel);
  v24 = sub_100036DC0(0x52554F595F544F4ELL, 0xE800000000000000, (uint64_t)v6);
  v26 = v25;
  sub_10000EC60((uint64_t)v6, type metadata accessor for HeadphoneModel);
  v36 = v24;
  v37 = v26;
  swift_bridgeObjectRetain(v26);
  v27._countAndFlagsBits = 0x4F464E495FLL;
  v27._object = (void *)0xE500000000000000;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v26);
  v28 = v37;
  v29 = sub_100020F00(v36, v37);
  v31 = v30;
  swift_bridgeObjectRelease(v28);
  sub_10003CC88(v14, (uint64_t)v6, type metadata accessor for HeadphoneModel);
  v32 = sub_100036F10(v29, v31, *(_DWORD *)&v6[v3[31]]);
  v34 = v33;
  sub_10000EC60((uint64_t)v6, type metadata accessor for HeadphoneModel);
  swift_bridgeObjectRelease(v31);
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  *(_QWORD *)(a1 + 16) = v32;
  *(_QWORD *)(a1 + 24) = v34;
  return result;
}

uint64_t sub_10007C3DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  unsigned __int8 v34;
  _BYTE v35[24];
  _BYTE v36[216];

  v3 = type metadata accessor for HeadphoneModel(0);
  v5 = __chkstk_darwin(v3, v4);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v8);
  v10 = &v35[-v9];
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  v11 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v12 = a1 + v11[11];
  v13 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = a1 + v11[12];
  *(_QWORD *)(v14 + 32) = 0;
  *(_OWORD *)v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  *(_WORD *)(v14 + 40) = -24576;
  v15 = (_OWORD *)(a1 + v11[13]);
  *v15 = 0u;
  v15[1] = 0u;
  v16 = a1 + v11[14];
  sub_10001F208((uint64_t)v36);
  sub_10003CFDC((uint64_t)v36, v16, &qword_1000B8508);
  *(_BYTE *)(a1 + v11[15]) = 0;
  *(_BYTE *)(a1 + v11[16]) = 0;
  *(_QWORD *)(a1 + v11[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v11[18]) = &_swiftEmptyArrayStorage;
  v17 = (_OWORD *)(a1 + v11[19]);
  v17[5] = 0u;
  v17[6] = 0u;
  v17[3] = 0u;
  v17[4] = 0u;
  v17[1] = 0u;
  v17[2] = 0u;
  *v17 = 0u;
  v18 = v11[20];
  *(_QWORD *)(a1 + v11[21]) = 0;
  *(_BYTE *)(a1 + v11[22]) = 0;
  v19 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v19, v35, 0, 0);
  v20 = *(unsigned int *)(v19 + *(int *)(v3 + 124));
  *(_QWORD *)(a1 + v18) = v20;
  v21 = v20 - 8217;
  if (v21 > 7 || ((1 << v21) & 0xA5) == 0)
  {
    *(_QWORD *)a1 = sub_10001FF98(6u);
    *(_QWORD *)(a1 + 8) = v28;
    sub_10003CC88(v19, (uint64_t)v10, type metadata accessor for HeadphoneModel);
    v29 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", *(unsigned int *)&v10[*(int *)(v3 + 124)]);
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(v29, "buttonLocation");

      sub_10000EC60((uint64_t)v10, type metadata accessor for HeadphoneModel);
      if (!v31)
      {
        v23 = 49;
        goto LABEL_4;
      }
    }
    else
    {
      sub_10000EC60((uint64_t)v10, type metadata accessor for HeadphoneModel);
    }
    sub_10003CC88(v19, (uint64_t)v7, type metadata accessor for HeadphoneModel);
    v32 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", *(unsigned int *)&v7[*(int *)(v3 + 124)]);
    if (v32)
    {
      v33 = v32;
      v34 = objc_msgSend(v32, "isAirPods");

      sub_10000EC60((uint64_t)v7, type metadata accessor for HeadphoneModel);
      if ((v34 & 1) != 0)
      {
        v23 = 47;
        goto LABEL_4;
      }
    }
    else
    {
      sub_10000EC60((uint64_t)v7, type metadata accessor for HeadphoneModel);
    }
    v23 = 46;
    goto LABEL_4;
  }
  *(_QWORD *)a1 = sub_10001FF98(7u);
  *(_QWORD *)(a1 + 8) = v22;
  v23 = 48;
LABEL_4:
  v24 = sub_10001FF98(v23);
  v26 = v25;
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  *(_QWORD *)(a1 + 16) = v24;
  *(_QWORD *)(a1 + 24) = v26;
  return result;
}

uint64_t sub_10007C6EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  _BYTE v50[224];
  Swift::String v51;

  v3 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v3, v4);
  v6 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  v7 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v8 = a1 + v7[11];
  v9 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a1 + v7[12];
  *(_QWORD *)(v10 + 32) = 0;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_WORD *)(v10 + 40) = -24576;
  v11 = (_OWORD *)(a1 + v7[13]);
  *v11 = 0u;
  v11[1] = 0u;
  v12 = a1 + v7[14];
  sub_10001F208((uint64_t)v50);
  sub_10003CFDC((uint64_t)v50, v12, &qword_1000B8508);
  *(_BYTE *)(a1 + v7[15]) = 0;
  v13 = v7[16];
  *(_BYTE *)(a1 + v13) = 0;
  *(_QWORD *)(a1 + v7[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v7[18]) = &_swiftEmptyArrayStorage;
  v14 = (_OWORD *)(a1 + v7[19]);
  v14[5] = 0u;
  v14[6] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  *v14 = 0u;
  *(_QWORD *)(a1 + v7[20]) = 0;
  *(_QWORD *)(a1 + v7[21]) = 0;
  *(_BYTE *)(a1 + v7[22]) = 0;
  v48 = v1;
  v15 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  v16 = v3;
  swift_beginAccess(v15, v49, 0, 0);
  sub_10003CC88(v15, (uint64_t)v6, type metadata accessor for HeadphoneModel);
  v17 = sub_10003714C(0x5F544355444F5250, 0xEC000000454D414ELL, (uint64_t)v6);
  v19 = v18;
  sub_10000EC60((uint64_t)v6, type metadata accessor for HeadphoneModel);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  *(_QWORD *)a1 = v17;
  *(_QWORD *)(a1 + 8) = v19;
  LODWORD(v17) = *(unsigned __int8 *)(v15 + *(int *)(v16 + 100));
  sub_10003CC88(v15, (uint64_t)v6, type metadata accessor for HeadphoneModel);
  if ((_DWORD)v17 == 1)
  {
    v20 = sub_100036DC0(0xD000000000000010, 0x80000001000902F0, (uint64_t)v6);
    v22 = v21;
    sub_10000EC60((uint64_t)v6, type metadata accessor for HeadphoneModel);
    v23 = sub_10001FF98(0x26u);
    v25 = v24;
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
    *(_QWORD *)(a1 + 32) = v23;
    *(_QWORD *)(a1 + 40) = v25;
    *(_BYTE *)(a1 + v13) = 1;
  }
  else
  {
    v26 = sub_100036DC0(0xD000000000000010, 0x80000001000902D0, (uint64_t)v6);
    v28 = v27;
    sub_10000EC60((uint64_t)v6, type metadata accessor for HeadphoneModel);
    v20 = sub_100020F00(v26, v28);
    v22 = v29;
    swift_bridgeObjectRelease(v28);
    v30 = sub_10001FF98(0x23u);
    v32 = v31;
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
    *(_QWORD *)(a1 + 32) = v30;
    *(_QWORD *)(a1 + 40) = v32;
    v33 = sub_100020F00(0x5F5443454E4E4F43, 0xEA00000000004F54);
    v35 = v34;
    v36 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v51._object = (void *)0xE000000000000000;
    v37._countAndFlagsBits = v33;
    v37._object = v35;
    v38.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v38.value._object = (void *)0xEB00000000656C62;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    v51._countAndFlagsBits = 0;
    v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v51);
    swift_bridgeObjectRelease(v35);

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
    *(Swift::String *)(a1 + 48) = v40;
  }
  sub_10003CC88(v15, (uint64_t)v6, type metadata accessor for HeadphoneModel);
  v41 = sub_100036F10(v20, v22, *(_DWORD *)&v6[*(int *)(v16 + 124)]);
  v43 = v42;
  sub_10000EC60((uint64_t)v6, type metadata accessor for HeadphoneModel);
  swift_bridgeObjectRelease(v22);
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  *(_QWORD *)(a1 + 16) = v41;
  *(_QWORD *)(a1 + 24) = v43;
  if (*(_BYTE *)(v48 + 80) == 3)
  {
    v45 = sub_10001FF98(0x27u);
    v47 = v46;
    result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
    *(_QWORD *)(a1 + 64) = v45;
    *(_QWORD *)(a1 + 72) = v47;
  }
  return result;
}

uint64_t sub_10007CB0C@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  char v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[5];
  _BYTE v23[216];

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  v2 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v3 = a1 + v2[11];
  v4 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = a1 + v2[12];
  *(_QWORD *)(v5 + 32) = 0;
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_WORD *)(v5 + 40) = -24576;
  v6 = (_OWORD *)(a1 + v2[13]);
  *v6 = 0u;
  v6[1] = 0u;
  v7 = a1 + v2[14];
  sub_10001F208((uint64_t)v23);
  sub_10003CFDC((uint64_t)v23, v7, &qword_1000B8508);
  *(_BYTE *)(a1 + v2[15]) = 0;
  *(_BYTE *)(a1 + v2[16]) = 0;
  *(_QWORD *)(a1 + v2[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v2[18]) = &_swiftEmptyArrayStorage;
  v8 = (_OWORD *)(a1 + v2[19]);
  v8[5] = 0u;
  v8[6] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  *v8 = 0u;
  *(_QWORD *)(a1 + v2[20]) = 0;
  *(_QWORD *)(a1 + v2[21]) = 0;
  *(_BYTE *)(a1 + v2[22]) = 0;
  v22[3] = &type metadata for HeadphonePresenter.AppleAccountFeatureFlags;
  v22[4] = sub_100083628();
  v9 = isFeatureEnabled(_:)(v22);
  sub_100015D14(v22);
  if ((v9 & 1) != 0)
    v10 = 104;
  else
    v10 = 102;
  if ((v9 & 1) != 0)
    v11 = 105;
  else
    v11 = 103;
  v12 = sub_10001FF98(v10);
  v14 = v13;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  *(_QWORD *)a1 = v12;
  *(_QWORD *)(a1 + 8) = v14;
  v15 = sub_10001FF98(v11);
  v17 = v16;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v17;
  v18 = sub_10001FF98(0);
  v20 = v19;
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  *(_QWORD *)(a1 + 32) = v18;
  *(_QWORD *)(a1 + 40) = v20;
  return result;
}

_OWORD *sub_10007CCD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSString v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  Class isa;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  Swift::String v56;
  uint64_t v57;
  id v58;
  NSString v59;
  id v60;
  uint64_t v61;
  _OWORD *result;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71[3];
  _BYTE v72[224];

  v3 = sub_100009F00(&qword_1000B8A38);
  __chkstk_darwin(v3, v4);
  v65 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  v67 = v7;
  __chkstk_darwin(v6, v8);
  v64 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v10, v11);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  v14 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  v15 = a1 + v14[11];
  v16 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = a1 + v14[12];
  *(_QWORD *)(v17 + 32) = 0;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_WORD *)(v17 + 40) = -24576;
  v18 = (_OWORD *)(a1 + v14[13]);
  *v18 = 0u;
  v18[1] = 0u;
  v19 = a1 + v14[14];
  sub_10001F208((uint64_t)v72);
  sub_10003CFDC((uint64_t)v72, v19, &qword_1000B8508);
  v68 = v14[15];
  *(_BYTE *)(a1 + v68) = 0;
  *(_BYTE *)(a1 + v14[16]) = 0;
  *(_QWORD *)(a1 + v14[17]) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + v14[18]) = &_swiftEmptyArrayStorage;
  v20 = (_OWORD *)(a1 + v14[19]);
  v20[5] = 0u;
  v20[6] = 0u;
  v20[3] = 0u;
  v20[4] = 0u;
  v20[1] = 0u;
  v20[2] = 0u;
  *v20 = 0u;
  *(_QWORD *)(a1 + v14[20]) = 0;
  *(_QWORD *)(a1 + v14[21]) = 0;
  *(_BYTE *)(a1 + v14[22]) = 0;
  v69 = v1;
  v21 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, &v70, 0, 0);
  v22 = (uint64_t *)(v21 + v10[13]);
  v24 = *v22;
  v23 = v22[1];
  v25 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0)
    v25 = v24 & 0xFFFFFFFFFFFFLL;
  if (v25)
  {
    swift_bridgeObjectRetain(v23);
  }
  else if (*(_BYTE *)(v21 + v10[19]) == 1)
  {
    sub_10003CC88(v21, (uint64_t)v13, type metadata accessor for HeadphoneModel);
    v24 = sub_10003714C(0x5F544355444F5250, 0xEC000000454D414ELL, (uint64_t)v13);
    v23 = v26;
    sub_10000EC60((uint64_t)v13, type metadata accessor for HeadphoneModel);
  }
  else
  {
    v24 = sub_10001FF98(0x21u);
    v23 = v27;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  *(_QWORD *)a1 = v24;
  *(_QWORD *)(a1 + 8) = v23;
  if (*(_BYTE *)(v21 + 120) != 11)
  {
    v28 = *(_BYTE *)(v21 + v10[42] + 8);
    if (v28 == -1)
      v29 = 0;
    else
      v29 = 2 * (v28 & 1);
    v30 = sub_10001FF98(v29);
    v32 = v31;
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
    *(_QWORD *)(a1 + 32) = v30;
    *(_QWORD *)(a1 + 40) = v32;
  }
  if (*(_BYTE *)(v21 + v10[20]) == 1)
  {
    v33 = sub_10001FF98(0x18u);
    v35 = v34;
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
    *(_QWORD *)(a1 + 48) = v33;
    *(_QWORD *)(a1 + 56) = v35;
    v36 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v37);

    if (v38)
    {
      v39 = objc_msgSend(v38, "imageWithRenderingMode:", 2);

    }
    else
    {
      v39 = 0;
    }
    objc_msgSend(v36, "setImage:", v39);

    v40 = sub_100009F84(0, &qword_1000BA138, NSMutableAttributedString_ptr);
    v41 = objc_msgSend((id)swift_getObjCClassFromMetadata(v40), "attributedStringWithAttachment:", v36);
    v42 = v65;
    sub_10001B868(v21 + v10[35], v65, &qword_1000B8A38);
    v44 = v66;
    v43 = v67;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v42, 1, v66) == 1)
    {

      sub_100017E48(v42, &qword_1000B8A38);
    }
    else
    {
      (*(void (**)(void))(v43 + 32))();
      v45 = (void *)objc_opt_self(NSDateFormatter);
      isa = Date._bridgeToObjectiveC()().super.isa;
      v47 = objc_msgSend(v45, "localizedStringFromDate:dateStyle:timeStyle:", isa, 0, 1);

      v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
      v50 = v49;

      *(_QWORD *)&v71[0] = 32;
      *((_QWORD *)&v71[0] + 1) = 0xE100000000000000;
      v51 = sub_100009F00(&qword_1000B9340);
      v52 = swift_allocObject(v51, 72, 7);
      *(_OWORD *)(v52 + 16) = xmmword_100087710;
      *(_QWORD *)(v52 + 56) = &type metadata for String;
      *(_QWORD *)(v52 + 64) = sub_1000835D0();
      *(_QWORD *)(v52 + 32) = v48;
      *(_QWORD *)(v52 + 40) = v50;
      v53 = sub_100021B70(v52, 0x19u);
      v55 = v54;
      swift_bridgeObjectRelease(v52);
      v56._countAndFlagsBits = v53;
      v56._object = v55;
      String.append(_:)(v56);
      swift_bridgeObjectRelease(v55);
      v57 = *((_QWORD *)&v71[0] + 1);
      v58 = objc_allocWithZone((Class)NSAttributedString);
      v59 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v57);
      v60 = objc_msgSend(v58, "initWithString:", v59);

      objc_msgSend(v41, "appendAttributedString:", v60);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v44);
    }

    *(_QWORD *)(a1 + 96) = v41;
  }
  v61 = v69;
  sub_100080784((double *)v71);
  result = sub_1000112C0(v71, (_OWORD *)v17);
  *(_BYTE *)(a1 + v68) = *(_BYTE *)(v61
                                  + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_useMovieForNextBatteryView);
  return result;
}

uint64_t sub_10007D2E8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[224];

  v29 = a2;
  v3 = (int *)type metadata accessor for HeadphoneViewModel(0);
  v5 = __chkstk_darwin(v3, v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0xE000000000000000;
  *((_QWORD *)v7 + 2) = 0;
  v8 = (uint64_t *)(v7 + 16);
  *((_QWORD *)v7 + 3) = 0xE000000000000000;
  v9 = v7 + 24;
  *((_QWORD *)v7 + 4) = 0;
  v10 = (uint64_t *)(v7 + 32);
  *((_QWORD *)v7 + 5) = 0xE000000000000000;
  v11 = v7 + 40;
  *((_QWORD *)v7 + 6) = 0;
  *((_QWORD *)v7 + 7) = 0xE000000000000000;
  *((_OWORD *)v7 + 4) = 0u;
  *((_OWORD *)v7 + 5) = 0u;
  *((_QWORD *)v7 + 12) = 0;
  v12 = &v7[*(int *)(v5 + 44)];
  v13 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = &v7[v3[12]];
  *((_QWORD *)v14 + 4) = 0;
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_WORD *)v14 + 20) = -24576;
  v15 = &v7[v3[13]];
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v16 = (uint64_t)&v7[v3[14]];
  sub_10001F208((uint64_t)v30);
  sub_10003CFDC((uint64_t)v30, v16, &qword_1000B8508);
  v7[v3[15]] = 0;
  v7[v3[16]] = 0;
  *(_QWORD *)&v7[v3[17]] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v7[v3[18]] = &_swiftEmptyArrayStorage;
  v17 = &v7[v3[19]];
  *((_OWORD *)v17 + 5) = 0u;
  *((_OWORD *)v17 + 6) = 0u;
  *((_OWORD *)v17 + 3) = 0u;
  *((_OWORD *)v17 + 4) = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((_OWORD *)v17 + 2) = 0u;
  *(_OWORD *)v17 = 0u;
  *(_QWORD *)&v7[v3[20]] = 0;
  *(_QWORD *)&v7[v3[21]] = 0;
  v7[v3[22]] = 0;
  switch(a1)
  {
    case 29:
      *(_QWORD *)v7 = sub_10001FF98(0x72u);
      *((_QWORD *)v7 + 1) = v21;
      v23 = sub_10001FF98(0x73u);
      v19 = 117;
      v20 = 116;
LABEL_7:
      *((_QWORD *)v7 + 2) = v23;
      *((_QWORD *)v7 + 3) = v22;
      v8 = (uint64_t *)(v7 + 32);
      v9 = v7 + 40;
      v10 = (uint64_t *)(v7 + 48);
      v11 = v7 + 56;
      goto LABEL_8;
    case 28:
      *(_QWORD *)v7 = sub_10001FF98(0x6Eu);
      *((_QWORD *)v7 + 1) = v24;
      v23 = sub_10001FF98(0x6Fu);
      v19 = 113;
      v20 = 112;
      goto LABEL_7;
    case 27:
      *(_QWORD *)v7 = sub_10001FF98(0x6Au);
      *((_QWORD *)v7 + 1) = v18;
      v19 = 109;
      v20 = 107;
LABEL_8:
      *v8 = sub_10001FF98(v20);
      *v9 = v25;
      *v10 = sub_10001FF98(v19);
      *v11 = v26;
      break;
  }
  return sub_10001B7C4((uint64_t)v7, v29);
}

uint64_t sub_10007D53C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(_QWORD);
  char *v157;
  char *v158;
  uint64_t v159;
  void (*v160)(char *, unint64_t);
  uint64_t v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v164)(char *, uint64_t, uint64_t);
  void (*v165)(char *, char *, uint64_t);
  char *v166;
  int v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  Class isa;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  NSString *urlString;
  char *v177;
  uint64_t v178;
  int *v179;
  uint64_t v180;
  char *v181;
  uint64_t v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  void (*v201)(char *, uint64_t);
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  void (*v214)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t (*v219)(char *, uint64_t);
  uint64_t v220;
  char *v221;
  uint64_t v222;
  unsigned int v223;
  char *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  unsigned int v234;
  int *v235;
  void *v236;
  void *v237;
  id v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  Swift::String v245;
  void *object;
  Swift::String v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  Swift::String v254;
  void *v255;
  Swift::String v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  unint64_t v263;
  char *v264;
  NSURL *baseURL;
  char *v266;
  void (*v267)(void *, char *, uint64_t);
  char *v268;
  char *v269;
  uint64_t v270;
  void *v271;
  char *v272;
  int v273;
  void *v274;
  id v275;
  id v276;
  uint64_t v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  char *v292;
  char *v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  unint64_t v299;
  void *clients;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  void *v306;
  unsigned int *v307;
  uint64_t v308;
  NSString v309;
  id v310;
  id v311;
  unint64_t v312;
  unint64_t v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  void (*v317)(NSURL *, uint64_t);
  uint64_t v318;
  uint64_t v319;
  unint64_t v320;
  unint64_t v321;
  void *v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  char *v328;
  char *v329;
  uint64_t v330;
  char *v331;
  uint64_t v332;
  uint64_t v333;
  unint64_t v334;
  unint64_t v335;
  _QWORD *v336;
  uint64_t v337;
  uint64_t v338;
  _QWORD *v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  unint64_t v344;
  unint64_t v345;
  unint64_t v346;
  char *v347;
  uint64_t v348;
  void (*v349)(char *, uint64_t, uint64_t, uint64_t);
  char *v350;
  void (*v351)(char *, char *, uint64_t);
  char *v352;
  int *v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  char *v358;
  char *v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  char *v363;
  char *v364;
  char *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  void (*v369)(char *, uint64_t);
  NSString v370;
  uint64_t v371;
  uint64_t v372;
  void *v373;
  unint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  NSString v380;
  uint64_t v381;
  uint64_t v382;
  void *v383;
  id v384;
  void *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  NSString v390;
  uint64_t v391;
  uint64_t v392;
  void *v393;
  id v394;
  void *v395;
  id v396;
  unint64_t v397;
  unint64_t v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  char *v402;
  unint64_t v403;
  unint64_t v404;
  uint64_t v405;
  id v406;
  unint64_t v407;
  unint64_t v408;
  uint64_t v409;
  char *v410;
  uint64_t v411;
  void *v412;
  uint64_t v413;
  void (*v414)(char *, uint64_t);
  id v415;
  uint64_t v416;
  uint64_t v417;
  unsigned int *v418;
  uint64_t v419;
  void (*v420)(char *, uint64_t, uint64_t);
  uint64_t v421;
  char *v422;
  char *v423;
  uint64_t v424;
  void *v425;
  uint64_t v426;
  uint64_t v427;
  void (*v428)(char *, uint64_t);
  uint64_t v429;
  void (*v430)(char *, uint64_t);
  uint64_t v431;
  void *v432;
  id v433;
  void *v434;
  void (*v435)(char *, uint64_t);
  uint64_t v436;
  void (*v437)(char *, uint64_t);
  uint64_t v438;
  char *v439;
  uint64_t v440;
  char *v441;
  char *v442;
  uint64_t v443;
  char *v444;
  char *v445;
  _QWORD *v446;
  void (*v447)(char *, uint64_t);
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  void (*v452)(char *, char *, uint64_t);
  char *v453;
  char *v454;
  char *v455;
  char *v456;
  uint64_t v457;
  char *v458;
  char *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  char *v464;
  uint64_t v465;
  char *v466;
  char *v467;
  uint64_t v468;
  uint64_t v469;
  char *v470;
  void (*v471)(char *, uint64_t);
  char *v472;
  void (*v473)(char *, uint64_t);
  uint64_t v474;
  uint64_t v475;
  void (*v476)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v477)(char *, unint64_t);
  char *v478;
  unsigned int v479;
  void (*v480)(char *, _QWORD, char *);
  uint64_t (*v481)(char *, char *);
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  char *v485;
  char *v486;
  char *v487;
  char *v488;
  char *v489;
  char *v490;
  char *v491;
  uint64_t v492;
  char *v493;
  char *v494;
  char *v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  char *v500;
  char *v501;
  uint64_t v502;
  char *v503;
  char *v504;
  char *v505;
  char *v506;
  char *v507;
  char *v508;
  char *v509;
  char *v510;
  char *v511;
  char *v512;
  char *v513;
  uint64_t v514;
  uint64_t v515;
  char *v516;
  char *v517;
  uint64_t v518;
  char *v519;
  char *v520;
  char *v521;
  NSString *v522;
  char *v523;
  char *v524;
  NSURL v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  char *v529;
  uint64_t v530;
  char *v531;
  char *v532;
  char *v533;
  char *v534;
  unint64_t v535;
  char *v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  int *v540;
  char *v541;
  uint64_t v542;
  uint64_t v543;
  char *v544;
  char *v545;
  uint64_t v546;
  unint64_t v547;
  char v548[8];

  LODWORD(v541) = a1;
  v544 = (char *)a2;
  v515 = type metadata accessor for HeadphonePairing2.Assets.ViewIdentifier(0);
  v514 = *(_QWORD *)(v515 - 8);
  __chkstk_darwin(v515, v3);
  v513 = (char *)&v475 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v527 = type metadata accessor for HeadphonePairing2.Assets.AdjustedImageIdentifier(0);
  v526 = *(_QWORD *)(v527 - 8);
  v6 = __chkstk_darwin(v527, v5);
  v507 = (char *)&v475 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  v525._reserved = (char *)&v475 - v9;
  v498 = type metadata accessor for HeadphonePairing2.Assets.VideoViewIdentifier(0);
  v497 = *(_QWORD *)(v498 - 8);
  v11 = __chkstk_darwin(v498, v10);
  v495 = (char *)&v475 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  v489 = (char *)&v475 - v14;
  v15 = type metadata accessor for HeadphoneAssets(0);
  v539 = *(_QWORD *)(v15 - 8);
  v540 = (int *)v15;
  v17 = __chkstk_darwin(v15, v16);
  v525._clients = (char *)&v475 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17, v19);
  v524 = (char *)&v475 - v21;
  __chkstk_darwin(v20, v22);
  v500 = (char *)&v475 - v23;
  v24 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v24, v25);
  v499 = (uint64_t)&v475 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v496 = type metadata accessor for HeadphonePairing2.Assets.FileIdentifier(0);
  v492 = *(_QWORD *)(v496 - 8);
  __chkstk_darwin(v496, v27);
  v491 = (char *)&v475 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100009F00(&qword_1000B7F10);
  v31 = __chkstk_darwin(v29, v30);
  v33 = (char *)&v475 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v34);
  v502 = (uint64_t)&v475 - v35;
  v530 = type metadata accessor for GenericAsset(0);
  v528 = *(_QWORD *)(v530 - 8);
  v37 = __chkstk_darwin(v530, v36);
  v490 = (char *)&v475 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37, v39);
  v529 = (char *)&v475 - v40;
  v534 = (char *)type metadata accessor for HeadphonePairing2.Assets.VideoIdentifier(0);
  v41 = *((_QWORD *)v534 - 1);
  __chkstk_darwin(v534, v42);
  v533 = (char *)&v475 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v535 = type metadata accessor for AdjustedAsset(0);
  v44 = *(_QWORD *)(v535 - 8);
  v46 = __chkstk_darwin(v535, v45);
  v506 = (char *)&v475 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __chkstk_darwin(v46, v48);
  v512 = (char *)&v475 - v50;
  v52 = __chkstk_darwin(v49, v51);
  v503 = (char *)&v475 - v53;
  v55 = __chkstk_darwin(v52, v54);
  v509 = (char *)&v475 - v56;
  v58 = __chkstk_darwin(v55, v57);
  v486 = (char *)&v475 - v59;
  v61 = __chkstk_darwin(v58, v60);
  v501 = (char *)&v475 - v62;
  v64 = __chkstk_darwin(v61, v63);
  v511 = (char *)&v475 - v65;
  v67 = __chkstk_darwin(v64, v66);
  v525.super.isa = (Class)((char *)&v475 - v68);
  v70 = __chkstk_darwin(v67, v69);
  v510 = (char *)&v475 - v71;
  __chkstk_darwin(v70, v72);
  v74 = (char *)&v475 - v73;
  v75 = sub_100009F00(&qword_1000B7F08);
  v518 = *(_QWORD *)(v75 - 8);
  v77 = __chkstk_darwin(v75, v76);
  v538 = (uint64_t)&v475 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __chkstk_darwin(v77, v79);
  v537 = (uint64_t)&v475 - v81;
  v83 = __chkstk_darwin(v80, v82);
  v522 = (NSString *)((char *)&v475 - v84);
  v86 = __chkstk_darwin(v83, v85);
  v521 = (char *)&v475 - v87;
  v89 = __chkstk_darwin(v86, v88);
  v508 = (char *)&v475 - v90;
  v92 = __chkstk_darwin(v89, v91);
  v517 = (char *)&v475 - v93;
  v95 = __chkstk_darwin(v92, v94);
  v488 = (char *)&v475 - v96;
  v98 = __chkstk_darwin(v95, v97);
  v494 = (char *)&v475 - v99;
  v101 = __chkstk_darwin(v98, v100);
  v505 = (char *)&v475 - v102;
  v104 = __chkstk_darwin(v101, v103);
  v520 = (char *)&v475 - v105;
  v107 = __chkstk_darwin(v104, v106);
  v525._urlString = (NSString *)((char *)&v475 - v108);
  v110 = __chkstk_darwin(v107, v109);
  v519 = (char *)&v475 - v111;
  __chkstk_darwin(v110, v112);
  v114 = (char *)&v475 - v113;
  v115 = type metadata accessor for URL(0);
  v116 = *(_QWORD *)(v115 - 8);
  v542 = v115;
  v543 = v116;
  v118 = __chkstk_darwin(v115, v117);
  v525._baseURL = (NSURL *)((char *)&v475 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0));
  v121 = __chkstk_darwin(v118, v120);
  v536 = (char *)&v475 - v122;
  v124 = __chkstk_darwin(v121, v123);
  v531 = (char *)&v475 - v125;
  v127 = __chkstk_darwin(v124, v126);
  v523 = (char *)&v475 - v128;
  v130 = __chkstk_darwin(v127, v129);
  v485 = (char *)&v475 - v131;
  v133 = __chkstk_darwin(v130, v132);
  v487 = (char *)&v475 - v134;
  v136 = __chkstk_darwin(v133, v135);
  v493 = (char *)&v475 - v137;
  v139 = __chkstk_darwin(v136, v138);
  v504 = (char *)&v475 - v140;
  v142 = __chkstk_darwin(v139, v141);
  v516 = (char *)&v475 - v143;
  v145 = __chkstk_darwin(v142, v144);
  v147 = (char *)&v475 - v146;
  v149 = __chkstk_darwin(v145, v148);
  v151 = (char *)&v475 - v150;
  __chkstk_darwin(v149, v152);
  v532 = (char *)&v475 - v153;
  v154 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v548, 0, 0);
  if (*(_BYTE *)(v154 + *(int *)(v24 + 76)) != 1)
    return sub_100081598((char)v541, (uint64_t)v544);
  v482 = v2;
  v155 = *(_QWORD *)(v154 + *(int *)(v24 + 136));
  if (!v155)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v543 + 56))(v114, 1, 1, v542);
    goto LABEL_10;
  }
  v478 = v33;
  v484 = v154;
  v483 = v24;
  v156 = *(void (**)(_QWORD))(v41 + 104);
  v157 = v533;
  v479 = enum case for HeadphonePairing2.Assets.VideoIdentifier.connectLoop(_:);
  v158 = v534;
  v480 = (void (*)(char *, _QWORD, char *))v156;
  v156(v533);
  swift_retain(v155);
  dispatch thunk of HeadphonePairing2.Assets.video(_:)(v157);
  swift_release(v155);
  v481 = *(uint64_t (**)(char *, char *))(v41 + 8);
  v159 = v481(v157, v158);
  AdjustedAsset.adjustmentURL.getter(v159);
  v160 = *(void (**)(char *, unint64_t))(v44 + 8);
  v160(v74, v535);
  v162 = v542;
  v161 = v543;
  v163 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v543 + 56);
  v163(v114, 0, 1, v542);
  v164 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48);
  if (v164(v114, 1, v162) == 1)
  {
LABEL_10:
    v183 = (uint64_t)v114;
    goto LABEL_11;
  }
  v477 = (uint64_t (*)(char *, unint64_t))v160;
  v165 = *(void (**)(char *, char *, uint64_t))(v161 + 32);
  v166 = v532;
  v165(v532, v114, v162);
  v167 = v541 - 2;
  v541 = (char *)v165;
  switch(v167)
  {
    case 0:
      v184 = *(unsigned __int8 *)(v484 + 145);
      if (v184 == 4 || v184 == 2)
      {
        v185 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
        v186 = v530;
        if (v185)
        {
          v188 = v533;
          v187 = v534;
          v480(v533, enum case for HeadphonePairing2.Assets.VideoIdentifier.loopCharging(_:), v534);
          swift_retain(v185);
          v189 = v509;
          dispatch thunk of HeadphonePairing2.Assets.video(_:)(v188);
          swift_release(v185);
          v190 = v481(v188, v187);
          v191 = v529;
          AdjustedAsset.asset.getter(v190);
          v192 = v477(v189, v535);
          v193 = (uint64_t)v517;
          GenericAsset.fileURL.getter(v192);
          (*(void (**)(char *, uint64_t))(v528 + 8))(v191, v186);
        }
        else
        {
          v193 = (uint64_t)v517;
          v163(v517, 1, 1, v162);
        }
        v525._clients = (void *)sub_100081C5C(0, 1, 1, (unint64_t)&_swiftEmptyArrayStorage);
        v299 = *((_QWORD *)v525._clients + 2);
        v298 = *((_QWORD *)v525._clients + 3);
        if (v299 >= v298 >> 1)
          v525._clients = (void *)sub_100081C5C(v298 > 1, v299 + 1, 1, (unint64_t)v525._clients);
        clients = v525._clients;
        *((_QWORD *)v525._clients + 2) = v299 + 1;
        v301 = *(unsigned __int8 *)(v518 + 80);
        v302 = *(_QWORD *)(v518 + 72);
        sub_10003CFDC(v193, (uint64_t)clients + ((v301 + 32) & ~v301) + v302 * v299, &qword_1000B7F08);
        v525._urlString = *(NSString **)(v526 + 104);
        ((void (*)(void *, _QWORD, uint64_t))v525._urlString)(v525._reserved, enum case for HeadphonePairing2.Assets.AdjustedImageIdentifier.caseClosedCharging(_:), v527);
        v303 = v483;
        v304 = v484;
        v305 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
        LODWORD(v525.super.isa) = 1;
        if (!v305)
        {
          v525._baseURL = 0;
          LODWORD(v308) = v301;
          goto LABEL_73;
        }
        v306 = v525._clients;
        v307 = (unsigned int *)&enum case for HeadphonePairing2.Assets.ViewIdentifier.caseClosedCharging(_:);
        LODWORD(v308) = v301;
        goto LABEL_72;
      }
      v289 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
      v290 = v530;
      if (v289)
      {
        v292 = v533;
        v291 = v534;
        v480(v533, enum case for HeadphonePairing2.Assets.VideoIdentifier.loopCharged(_:), v534);
        swift_retain(v289);
        v293 = v503;
        dispatch thunk of HeadphonePairing2.Assets.video(_:)(v292);
        swift_release(v289);
        v294 = v481(v292, v291);
        v295 = v529;
        AdjustedAsset.asset.getter(v294);
        v296 = v477(v293, v535);
        v297 = (uint64_t)v508;
        GenericAsset.fileURL.getter(v296);
        (*(void (**)(char *, uint64_t))(v528 + 8))(v295, v290);
      }
      else
      {
        v297 = (uint64_t)v508;
        v163(v508, 1, 1, v162);
      }
      v525._clients = (void *)sub_100081C5C(0, 1, 1, (unint64_t)&_swiftEmptyArrayStorage);
      v321 = *((_QWORD *)v525._clients + 2);
      v320 = *((_QWORD *)v525._clients + 3);
      if (v321 >= v320 >> 1)
        v525._clients = (void *)sub_100081C5C(v320 > 1, v321 + 1, 1, (unint64_t)v525._clients);
      v322 = v525._clients;
      *((_QWORD *)v525._clients + 2) = v321 + 1;
      v308 = *(unsigned __int8 *)(v518 + 80);
      v302 = *(_QWORD *)(v518 + 72);
      sub_10003CFDC(v297, (uint64_t)v322 + ((v308 + 32) & ~v308) + v302 * v321, &qword_1000B7F08);
      v525._urlString = *(NSString **)(v526 + 104);
      ((void (*)(void *, _QWORD, uint64_t))v525._urlString)(v525._reserved, enum case for HeadphonePairing2.Assets.AdjustedImageIdentifier.caseClosedCharged(_:), v527);
      LODWORD(v525.super.isa) = 0;
      v303 = v483;
      v304 = v484;
      v305 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
      if (v305)
      {
        v306 = v525._clients;
        v307 = (unsigned int *)&enum case for HeadphonePairing2.Assets.ViewIdentifier.caseClosedCharged(_:);
LABEL_72:
        v525._clients = v306;
        v323 = v514;
        v324 = v513;
        v325 = v515;
        (*(void (**)(char *, _QWORD, uint64_t))(v514 + 104))(v513, *v307, v515);
        swift_retain(v305);
        v525._baseURL = (NSURL *)dispatch thunk of HeadphonePairing2.Assets.view(_:)(v324);
        swift_release(v305);
        (*(void (**)(char *, uint64_t))(v323 + 8))(v324, v325);
        v303 = v483;
        v304 = v484;
        goto LABEL_73;
      }
      v525._baseURL = 0;
LABEL_73:
      v326 = *(_QWORD *)(v304 + *(int *)(v303 + 136));
      if (v326)
      {
        v328 = v533;
        v327 = v534;
        v480(v533, v479, v534);
        swift_retain(v326);
        v329 = v512;
        dispatch thunk of HeadphonePairing2.Assets.video(_:)(v328);
        swift_release(v326);
        v330 = v481(v328, v327);
        v331 = v529;
        AdjustedAsset.asset.getter(v330);
        v332 = v477(v329, v535);
        v333 = (uint64_t)v521;
        GenericAsset.fileURL.getter(v332);
        (*(void (**)(char *, uint64_t))(v528 + 8))(v331, v530);
      }
      else
      {
        v333 = (uint64_t)v521;
        v163(v521, 1, 1, v162);
      }
      v335 = *((_QWORD *)v525._clients + 2);
      v334 = *((_QWORD *)v525._clients + 3);
      v476 = v163;
      if (v335 >= v334 >> 1)
        v525._clients = (void *)sub_100081C5C(v334 > 1, v335 + 1, 1, (unint64_t)v525._clients);
      v336 = v525._clients;
      *((_QWORD *)v525._clients + 2) = v335 + 1;
      v337 = (uint64_t)v336 + ((v308 + 32) & ~(unint64_t)v308);
      sub_10003CFDC(v333, v337 + v302 * v335, &qword_1000B7F08);
      v338 = v336[2];
      v339 = &_swiftEmptyArrayStorage;
      if (v338)
      {
        swift_bridgeObjectRetain(v525._clients);
        v340 = v531;
        do
        {
          v341 = v537;
          sub_10001B868(v337, v537, &qword_1000B7F08);
          v342 = v341;
          v343 = v538;
          sub_10003CFDC(v342, v538, &qword_1000B7F08);
          if (v164((char *)v343, 1, v162) == 1)
          {
            sub_100017E48(v343, &qword_1000B7F08);
          }
          else
          {
            v165(v340, (char *)v343, v162);
            v165(v536, v340, v162);
            if ((swift_isUniquelyReferenced_nonNull_native(v339) & 1) == 0)
              v339 = (_QWORD *)sub_100081A54(0, v339[2] + 1, 1, (unint64_t)v339);
            v345 = v339[2];
            v344 = v339[3];
            if (v345 >= v344 >> 1)
              v339 = (_QWORD *)sub_100081A54(v344 > 1, v345 + 1, 1, (unint64_t)v339);
            v339[2] = v345 + 1;
            v346 = (unint64_t)v339
                 + ((*(unsigned __int8 *)(v543 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v543 + 80))
                 + *(_QWORD *)(v543 + 72) * v345;
            v165 = (void (*)(char *, char *, uint64_t))v541;
            v162 = v542;
            ((void (*)(unint64_t, char *, uint64_t))v541)(v346, v536, v542);
          }
          v337 += v302;
          --v338;
        }
        while (v338);
        swift_bridgeObjectRelease(v525._clients);
      }
      v347 = v532;
      urlString = v522;
      if (v339[2])
      {
        (*(void (**)(NSString *, unint64_t, uint64_t))(v543 + 16))(v522, (unint64_t)v339+ ((*(unsigned __int8 *)(v543 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v543 + 80)), v162);
        v348 = 0;
      }
      else
      {
        v348 = 1;
      }
      v349 = v476;
      v476((char *)urlString, v348, 1, v162);
      swift_bridgeObjectRelease(v339);
      if (v164((char *)urlString, 1, v162) != 1)
      {
        v350 = v523;
        v165(v523, (char *)urlString, v162);
        v351 = *(void (**)(char *, char *, uint64_t))(v543 + 16);
        v352 = v524;
        v351(v524, v347, v162);
        v353 = v540;
        v351(&v352[v540[5]], v350, v162);
        v349(&v352[v353[6]], 1, 1, v162);
        v354 = &v352[v353[7]];
        v355 = type metadata accessor for HeadphoneAssets.Feature(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v355 - 8) + 56))(v354, 1, 1, v355);
        v356 = v353[8];
        *(_QWORD *)&v352[v356] = &_swiftEmptyArrayStorage;
        v357 = v353[9];
        *(_QWORD *)&v352[v357] = 0;
        v358 = &v352[v353[10]];
        *(_QWORD *)v358 = 0;
        *((_QWORD *)v358 + 1) = 0;
        v359 = *(char **)(v484 + *(int *)(v483 + 136));
        if (v359)
        {
          v536 = v358;
          v537 = v356;
          v538 = v357;
          v360 = v507;
          v361 = v530;
          v362 = v527;
          ((void (*)(char *, _QWORD, uint64_t))v525._urlString)(v507, enum case for HeadphonePairing2.Assets.AdjustedImageIdentifier.leftBud(_:), v527);
          swift_retain(v359);
          v363 = v506;
          v541 = v359;
          dispatch thunk of HeadphonePairing2.Assets.adjustedImage(_:)(v360);
          v534 = *(char **)(v526 + 8);
          ((void (*)(char *, uint64_t))v534)(v360, v362);
          v364 = (char *)objc_opt_self(UIImage);
          v531 = v364;
          v365 = v529;
          v366 = AdjustedAsset.asset.getter(v364);
          GenericAsset.fileName.getter(v366);
          v368 = v367;
          v369 = *(void (**)(char *, uint64_t))(v528 + 8);
          v369(v365, v361);
          v370 = String._bridgeToObjectiveC()();
          v371 = swift_bridgeObjectRelease(v368);
          v372 = AdjustedAsset.asset.getter(v371);
          v373 = (void *)GenericAsset.bundle.getter(v372);
          v369(v365, v361);
          v533 = (char *)objc_msgSend(v364, "imageNamed:inBundle:", v370, v373);

          v374 = v535;
          v477(v363, v535);
          ((void (*)(char *, _QWORD, uint64_t))v525._urlString)(v360, enum case for HeadphonePairing2.Assets.AdjustedImageIdentifier.rightBud(_:), v362);
          dispatch thunk of HeadphonePairing2.Assets.adjustedImage(_:)(v360);
          v375 = ((uint64_t (*)(char *, uint64_t))v534)(v360, v362);
          v376 = AdjustedAsset.asset.getter(v375);
          GenericAsset.fileName.getter(v376);
          v378 = v377;
          v379 = v361;
          v369(v365, v361);
          v380 = String._bridgeToObjectiveC()();
          v381 = swift_bridgeObjectRelease(v378);
          v382 = AdjustedAsset.asset.getter(v381);
          v383 = (void *)GenericAsset.bundle.getter(v382);
          v369(v365, v361);
          v384 = v531;
          v534 = (char *)objc_msgSend(v531, "imageNamed:inBundle:", v380, v383);

          v477(v363, v374);
          v385 = v533;
          v386 = dispatch thunk of HeadphonePairing2.Assets.adjustedImage(_:)(v525._reserved);
          v387 = AdjustedAsset.asset.getter(v386);
          GenericAsset.fileName.getter(v387);
          v389 = v388;
          v369(v365, v361);
          v390 = String._bridgeToObjectiveC()();
          v391 = swift_bridgeObjectRelease(v389);
          v392 = AdjustedAsset.asset.getter(v391);
          v393 = (void *)GenericAsset.bundle.getter(v392);
          v369(v365, v379);
          v394 = objc_msgSend(v384, "imageNamed:inBundle:", v390, v393);

          v477(v363, v374);
          v546 = (uint64_t)&_swiftEmptyArrayStorage;
          v395 = v385;
          if (v385)
          {
            v396 = v385;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            v398 = *(_QWORD *)((v546 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v397 = *(_QWORD *)((v546 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v398 >= v397 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v397 > 1, v398 + 1, 1);
            v399 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v398, v396);
            specialized Array._endMutation()(v399);
          }
          v347 = v532;
          v400 = v482;
          v358 = v536;
          v401 = v534;
          if (v534)
          {
            v402 = v534;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            v404 = *(_QWORD *)((v546 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v403 = *(_QWORD *)((v546 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v404 >= v403 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v403 > 1, v404 + 1, 1);
            v405 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v404, v402);
            specialized Array._endMutation()(v405);
          }
          if (v394)
          {
            v406 = v394;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            v408 = *(_QWORD *)((v546 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v407 = *(_QWORD *)((v546 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v408 >= v407 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v407 > 1, v408 + 1, 1);
            v409 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v408, v406);
            specialized Array._endMutation()(v409);
          }
          v410 = (char *)v546;
          swift_bridgeObjectRelease(v525._clients);

          swift_release(v541);
          v353 = v540;
          v356 = v537;
          v357 = v538;
        }
        else
        {
          swift_bridgeObjectRelease(v525._clients);
          v410 = (char *)&_swiftEmptyArrayStorage;
          v400 = v482;
        }
        v411 = v400 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_batteryVideoView;
        v412 = *(void **)v411;
        if (*(_QWORD *)v411)
        {
          v413 = *(_QWORD *)(v411 + 8);
          v414 = *(void (**)(char *, uint64_t))(v543 + 8);
          v415 = v412;
          v416 = v542;
          v414(v523, v542);
          (*(void (**)(void *, uint64_t))(v526 + 8))(v525._reserved, v527);
          v414(v347, v416);

          *(_QWORD *)v358 = v412;
          *((_QWORD *)v358 + 1) = v413;
        }
        else
        {
          v417 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
          if (v417)
          {
            v418 = (unsigned int *)&enum case for HeadphonePairing2.Assets.VideoViewIdentifier.loopCharging(_:);
            v537 = v356;
            v419 = v497;
            v420 = *(void (**)(char *, uint64_t, uint64_t))(v497 + 104);
            if (!LODWORD(v525.super.isa))
              v418 = (unsigned int *)&enum case for HeadphonePairing2.Assets.VideoViewIdentifier.loopCharged(_:);
            v421 = *v418;
            v541 = v410;
            v422 = v358;
            v423 = v495;
            v538 = v357;
            v424 = v498;
            v420(v495, v421, v498);
            swift_retain(v417);
            v425 = (void *)dispatch thunk of HeadphonePairing2.Assets.videoView(_:)(v423);
            v427 = v426;
            swift_release(v417);
            v428 = *(void (**)(char *, uint64_t))(v419 + 8);
            v356 = v537;
            v428(v423, v424);
            v429 = v542;
            v430 = *(void (**)(char *, uint64_t))(v543 + 8);
            v430(v523, v542);
            (*(void (**)(void *, uint64_t))(v526 + 8))(v525._reserved, v527);
            v431 = v429;
            v357 = v538;
            v430(v347, v431);
            v432 = *(void **)v422;
            v433 = v425;

            *(_QWORD *)v422 = v425;
            *((_QWORD *)v422 + 1) = v427;
            v410 = v541;
            v434 = *(void **)v411;
            *(_QWORD *)v411 = v425;
            *(_QWORD *)(v411 + 8) = v427;

          }
          else
          {
            v436 = v542;
            v437 = *(void (**)(char *, uint64_t))(v543 + 8);
            v437(v523, v542);
            (*(void (**)(void *, uint64_t))(v526 + 8))(v525._reserved, v527);
            v437(v347, v436);
          }
        }
        v318 = (uint64_t)v524;
        swift_bridgeObjectRelease(*(_QWORD *)&v524[v356]);
        *(_QWORD *)(v318 + v356) = v410;

        *(_QWORD *)(v318 + v357) = v525._baseURL;
        v438 = (uint64_t)v544;
        sub_10003CC88(v318, (uint64_t)v544, type metadata accessor for HeadphoneAssets);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v539 + 56))(v438, 0, 1, v353);
        return sub_10000EC60(v318, type metadata accessor for HeadphoneAssets);
      }
      (*(void (**)(void *, uint64_t))(v526 + 8))(v525._reserved, v527);
      swift_bridgeObjectRelease(v525._clients);

      (*(void (**)(char *, uint64_t))(v543 + 8))(v347, v162);
LABEL_94:
      v183 = (uint64_t)urlString;
      goto LABEL_11;
    case 1:
      v194 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
      if (!v194)
      {
        v114 = v520;
        v163(v520, 1, 1, v162);
        goto LABEL_49;
      }
      v196 = v533;
      v195 = v534;
      v480(v533, enum case for HeadphonePairing2.Assets.VideoIdentifier.connectEngage(_:), v534);
      swift_retain(v194);
      v197 = v511;
      dispatch thunk of HeadphonePairing2.Assets.video(_:)(v196);
      swift_release(v194);
      v198 = v481(v196, v195);
      v199 = v529;
      AdjustedAsset.asset.getter(v198);
      v200 = v477(v197, v535);
      v114 = v520;
      GenericAsset.fileURL.getter(v200);
      v201 = *(void (**)(char *, uint64_t))(v528 + 8);
      v202 = v199;
      v203 = v530;
      v201(v202, v530);
      if (v164(v114, 1, v162) == 1)
      {
LABEL_49:
        (*(void (**)(char *, uint64_t))(v543 + 8))(v532, v162);
        goto LABEL_10;
      }
      v165(v516, v114, v162);
      v204 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
      if (!v204)
      {
        v211 = v505;
        v163(v505, 1, 1, v162);
        goto LABEL_118;
      }
      v206 = v533;
      v205 = v534;
      v480(v533, v479, v534);
      swift_retain(v204);
      v207 = v501;
      dispatch thunk of HeadphonePairing2.Assets.video(_:)(v206);
      swift_release(v204);
      v208 = v481(v206, v205);
      v209 = v529;
      AdjustedAsset.asset.getter(v208);
      v210 = v477(v207, v535);
      v211 = v505;
      GenericAsset.fileURL.getter(v210);
      v201(v209, v203);
      if (v164(v211, 1, v162) == 1)
      {
LABEL_118:
        v435 = *(void (**)(char *, uint64_t))(v543 + 8);
        v435(v516, v162);
        v435(v532, v162);
        v183 = (uint64_t)v211;
LABEL_11:
        sub_100017E48(v183, &qword_1000B7F08);
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, int *))(v539 + 56))(v544, 1, 1, v540);
      }
      v212 = v504;
      v165(v504, v211, v162);
      v213 = type metadata accessor for HeadphoneAssets.Feature(0);
      v214 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v213 - 8) + 56);
      v214(v502, 1, 1, v213);
      v215 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
      v536 = (char *)v214;
      v537 = v213;
      if (!v215)
      {
        v222 = (uint64_t)v494;
        v163(v494, 1, 1, v162);
        v224 = v516;
        goto LABEL_123;
      }
      v216 = v492;
      v217 = v491;
      (*(void (**)(char *, _QWORD, uint64_t))(v492 + 104))(v491, enum case for HeadphonePairing2.Assets.FileIdentifier.featureTimings(_:), v496);
      swift_retain(v215);
      v218 = v490;
      dispatch thunk of HeadphonePairing2.Assets.file(_:)(v217);
      swift_release(v215);
      v219 = *(uint64_t (**)(char *, uint64_t))(v216 + 8);
      v212 = v504;
      v220 = v219(v217, v496);
      v221 = v494;
      GenericAsset.fileURL.getter(v220);
      v222 = (uint64_t)v221;
      v201(v218, v203);
      v223 = v164(v221, 1, v162);
      v224 = v516;
      if (v223 == 1)
      {
LABEL_123:
        v439 = v212;
        sub_100017E48(v222, &qword_1000B7F08);
        v235 = v540;
        v440 = v543;
        v441 = v532;
        goto LABEL_128;
      }
      v165(v493, (char *)v222, v162);
      v225 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
      if (v225)
      {
        v227 = v533;
        v226 = v534;
        v480(v533, enum case for HeadphonePairing2.Assets.VideoIdentifier.features(_:), v534);
        swift_retain(v225);
        v228 = v486;
        dispatch thunk of HeadphonePairing2.Assets.video(_:)(v227);
        swift_release(v225);
        v229 = v227;
        v224 = v516;
        v230 = v481(v229, v226);
        v231 = v529;
        AdjustedAsset.asset.getter(v230);
        v232 = v477(v228, v535);
        GenericAsset.fileURL.getter(v232);
        v212 = v504;
        v201(v231, v203);
        v233 = (uint64_t)v488;
        v234 = v164(v488, 1, v162);
        v235 = v540;
        if (v234 != 1)
        {
          v165(v487, (char *)v233, v162);
          URL._bridgeToObjectiveC()(&v525);
          v237 = v236;
          v238 = (id)SFPlaybackTimeRangesFromFeaturesTimeURL();

          v239 = sub_100009F84(0, &qword_1000BA140, NSValue_ptr);
          v240 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v238, v239);

          if ((unint64_t)v240 >> 62)
          {
            if (v240 < 0)
              v474 = v240;
            else
              v474 = v240 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v240);
            v241 = _CocoaArrayWrapper.endIndex.getter(v474);
          }
          else
          {
            v241 = *(_QWORD *)((v240 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain(v240);
          }
          v476 = v163;
          v533 = (char *)v240;
          if (v241)
          {
            if (v241 < 1)
            {
              __break(1u);
              JUMPOUT(0x100080030);
            }
            v242 = 0;
            v535 = v240 & 0xC000000000000001;
            v243 = (char *)&_swiftEmptyArrayStorage;
            v534 = (char *)v241;
            do
            {
              if (v535)
              {
                v244 = specialized _ArrayBuffer._getElementSlowPath(_:)(v242, v533);
                swift_unknownObjectRelease(v244);
              }
              v546 = 0;
              v547 = 0xE000000000000000;
              _StringGuts.grow(_:)(16);
              swift_bridgeObjectRelease(v547);
              v545 = v242;
              v546 = 0x5F45525554414546;
              v547 = 0xE800000000000000;
              v245._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
              object = v245._object;
              String.append(_:)(v245);
              swift_bridgeObjectRelease(object);
              v247._countAndFlagsBits = 0x454C5449545FLL;
              v247._object = (void *)0xE600000000000000;
              String.append(_:)(v247);
              v248 = v546;
              v249 = v547;
              v250 = v484;
              v251 = v499;
              sub_10003CC88(v484, v499, type metadata accessor for HeadphoneModel);
              v538 = sub_10003714C(v248, v249, v251);
              v253 = v252;
              sub_10000EC60(v251, type metadata accessor for HeadphoneModel);
              swift_bridgeObjectRelease(v249);
              v546 = 0;
              v547 = 0xE000000000000000;
              _StringGuts.grow(_:)(22);
              swift_bridgeObjectRelease(v547);
              v545 = v242;
              v546 = 0x5F45525554414546;
              v547 = 0xE800000000000000;
              v254._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
              v255 = v254._object;
              String.append(_:)(v254);
              swift_bridgeObjectRelease(v255);
              v256._countAndFlagsBits = 0x504952435345445FLL;
              v256._object = (void *)0xEC0000004E4F4954;
              String.append(_:)(v256);
              v257 = v546;
              v258 = v547;
              sub_10003CC88(v250, v251, type metadata accessor for HeadphoneModel);
              v259 = sub_10003714C(v257, v258, v251);
              v261 = v260;
              sub_10000EC60(v251, type metadata accessor for HeadphoneModel);
              swift_bridgeObjectRelease(v258);
              if ((swift_isUniquelyReferenced_nonNull_native(v243) & 1) == 0)
                v243 = sub_100081E6C(0, *((_QWORD *)v243 + 2) + 1, 1, v243);
              v263 = *((_QWORD *)v243 + 2);
              v262 = *((_QWORD *)v243 + 3);
              if (v263 >= v262 >> 1)
                v243 = sub_100081E6C((char *)(v262 > 1), v263 + 1, 1, v243);
              ++v242;
              *((_QWORD *)v243 + 2) = v263 + 1;
              v264 = &v243[32 * v263];
              *((_QWORD *)v264 + 4) = v538;
              *((_QWORD *)v264 + 5) = v253;
              *((_QWORD *)v264 + 6) = v259;
              *((_QWORD *)v264 + 7) = v261;
              v235 = v540;
            }
            while (v534 != v242);
          }
          else
          {
            v243 = (char *)&_swiftEmptyArrayStorage;
          }
          v442 = v533;
          swift_bridgeObjectRelease(v533);
          v162 = v542;
          v443 = v543;
          v444 = v485;
          v445 = v487;
          (*(void (**)(char *, char *, uint64_t))(v543 + 16))(v485, v487, v542);
          v446 = sub_100070F44((uint64_t)v243);
          swift_bridgeObjectRelease(v243);
          v447 = *(void (**)(char *, uint64_t))(v443 + 8);
          v447(v445, v162);
          v447(v493, v162);
          v448 = v502;
          sub_100017E48(v502, &qword_1000B7F10);
          v449 = (uint64_t)v478;
          ((void (*)(char *, char *, uint64_t))v541)(v478, v444, v162);
          v450 = v537;
          *(_QWORD *)(v449 + *(int *)(v537 + 20)) = v442;
          *(_QWORD *)(v449 + *(int *)(v450 + 24)) = v446;
          ((void (*)(uint64_t, _QWORD, uint64_t))v536)(v449, 0, 1);
          v451 = v448;
          v440 = v443;
          sub_10003CFDC(v449, v451, &qword_1000B7F10);
          v441 = v532;
          v163 = v476;
          v224 = v516;
          v439 = v504;
          goto LABEL_128;
        }
      }
      else
      {
        v233 = (uint64_t)v488;
        v163(v488, 1, 1, v162);
        v235 = v540;
      }
      v439 = v212;
      v440 = v543;
      (*(void (**)(char *, uint64_t))(v543 + 8))(v493, v162);
      sub_100017E48(v233, &qword_1000B7F08);
      v441 = v532;
LABEL_128:
      v452 = *(void (**)(char *, char *, uint64_t))(v440 + 16);
      v453 = v500;
      v452(v500, v441, v162);
      v454 = v224;
      v452(&v453[v235[5]], v224, v162);
      v455 = v441;
      v456 = &v453[v235[6]];
      v452(v456, v439, v162);
      v163(v456, 0, 1, v162);
      v457 = (uint64_t)&v453[v235[7]];
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v536)(v457, 1, 1, v537);
      *(_QWORD *)&v453[v235[8]] = &_swiftEmptyArrayStorage;
      *(_QWORD *)&v453[v235[9]] = 0;
      v458 = v439;
      v459 = &v453[v235[10]];
      *(_QWORD *)v459 = 0;
      *((_QWORD *)v459 + 1) = 0;
      v460 = v502;
      sub_10008366C(v502, v457);
      v461 = v484;
      swift_beginAccess(v484, &v546, 32, 0);
      v462 = *(_QWORD *)(v461 + *(int *)(v483 + 136));
      if (v462)
      {
        swift_endAccess(&v546);
        v463 = v497;
        v464 = v489;
        v465 = v460;
        v466 = v454;
        v467 = v455;
        v468 = v498;
        (*(void (**)(char *, _QWORD, uint64_t))(v497 + 104))(v489, enum case for HeadphonePairing2.Assets.VideoViewIdentifier.intro(_:), v498);
        swift_retain(v462);
        v469 = dispatch thunk of HeadphonePairing2.Assets.videoView(_:)(v464);
        v541 = v470;
        v542 = v469;
        swift_release(v462);
        (*(void (**)(char *, uint64_t))(v463 + 8))(v464, v468);
        sub_100017E48(v465, &qword_1000B7F10);
        v471 = *(void (**)(char *, uint64_t))(v543 + 8);
        v471(v504, v162);
        v471(v466, v162);
        v471(v467, v162);

        v472 = v541;
        *(_QWORD *)v459 = v542;
        *((_QWORD *)v459 + 1) = v472;
      }
      else
      {
        sub_100017E48(v460, &qword_1000B7F10);
        v473 = *(void (**)(char *, uint64_t))(v543 + 8);
        v473(v458, v162);
        v473(v454, v162);
        v473(v455, v162);
        swift_endAccess(&v546);
      }
      v318 = (uint64_t)v500;
      v319 = (uint64_t)v500;
      v316 = (uint64_t)v544;
LABEL_65:
      sub_10003CC88(v319, v316, type metadata accessor for HeadphoneAssets);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v539 + 56))(v316, 0, 1, v235);
      return sub_10000EC60(v318, type metadata accessor for HeadphoneAssets);
    case 14:
      baseURL = v525._baseURL;
      URL.init(fileURLWithPath:)(0, 0xE000000000000000);
      v266 = v166;
      v267 = *(void (**)(void *, char *, uint64_t))(v161 + 16);
      v268 = (char *)v525._clients;
      v267(v525._clients, v266, v162);
      v235 = v540;
      v267(&v268[v540[5]], (char *)baseURL, v162);
      v163(&v268[v235[6]], 1, 1, v162);
      v269 = &v268[v235[7]];
      v270 = type metadata accessor for HeadphoneAssets.Feature(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v270 - 8) + 56))(v269, 1, 1, v270);
      v271 = &_swiftEmptyArrayStorage;
      v541 = (char *)v235[8];
      *(_QWORD *)&v541[(_QWORD)v268] = &_swiftEmptyArrayStorage;
      *(_QWORD *)&v268[v235[9]] = 0;
      v272 = &v268[v235[10]];
      *(_QWORD *)v272 = 0;
      *((_QWORD *)v272 + 1) = 0;
      v273 = *(_DWORD *)(v484 + *(int *)(v483 + 124));
      v274 = (void *)objc_opt_self(SFHeadphoneProduct);
      v275 = objc_msgSend(v274, "airPods");
      LODWORD(baseURL) = objc_msgSend(v275, "productID");

      if (v273 != (_DWORD)baseURL)
      {
        v276 = objc_msgSend(v274, "airPodsSecondGeneration");
        objc_msgSend(v276, "productID");

      }
      v309 = String._bridgeToObjectiveC()();
      v310 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v309);

      v546 = (uint64_t)&_swiftEmptyArrayStorage;
      if (v310)
      {
        v311 = v310;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v313 = *(_QWORD *)((v546 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v312 = *(_QWORD *)((v546 & 0xFFFFFFFFFFFFFF8) + 0x18);
        v314 = v541;
        if (v313 >= v312 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v312 > 1, v313 + 1, 1);
        v315 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v313, v311);
        specialized Array._endMutation()(v315);
        v271 = (void *)v546;
      }
      else
      {
        v314 = v541;
      }

      v316 = (uint64_t)v544;
      v317 = *(void (**)(NSURL *, uint64_t))(v543 + 8);
      v317(v525._baseURL, v162);
      v317((NSURL *)v532, v162);
      v318 = (uint64_t)v525._clients;
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v525._clients + (unint64_t)v314));
      *(_QWORD *)&v314[v318] = v271;
      v319 = v318;
      goto LABEL_65;
    case 16:
    case 18:
      v168 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
      if (v168)
      {
        v169 = v533;
        v170 = v166;
        v171 = v534;
        v480(v533, v479, v534);
        swift_retain(v168);
        isa = v525.super.isa;
        dispatch thunk of HeadphonePairing2.Assets.video(_:)(v169);
        swift_release(v168);
        v173 = v481(v169, v171);
        v174 = v529;
        AdjustedAsset.asset.getter(v173);
        v175 = v477((char *)isa, v535);
        urlString = v525._urlString;
        GenericAsset.fileURL.getter(v175);
        v177 = v174;
        v166 = v170;
        (*(void (**)(char *, uint64_t))(v528 + 8))(v177, v530);
        if (v164((char *)urlString, 1, v162) != 1)
        {
          v165(v147, (char *)urlString, v162);
          v178 = (uint64_t)v544;
          v165(v544, v170, v162);
          v179 = v540;
          v180 = v178 + v540[5];
          v181 = v147;
          goto LABEL_45;
        }
      }
      else
      {
        urlString = v525._urlString;
        v163((char *)v525._urlString, 1, 1, v162);
      }
      (*(void (**)(char *, uint64_t))(v543 + 8))(v166, v162);
      goto LABEL_94;
    case 17:
      v277 = *(_QWORD *)(v484 + *(int *)(v483 + 136));
      if (v277)
      {
        v278 = v166;
        v279 = v533;
        v280 = v534;
        v480(v533, enum case for HeadphonePairing2.Assets.VideoIdentifier.repairLoop(_:), v534);
        swift_retain(v277);
        v281 = v510;
        dispatch thunk of HeadphonePairing2.Assets.video(_:)(v279);
        swift_release(v277);
        v282 = v279;
        v166 = v278;
        v283 = v481(v282, v280);
        v284 = v529;
        AdjustedAsset.asset.getter(v283);
        v285 = v477(v281, v535);
        v114 = v519;
        GenericAsset.fileURL.getter(v285);
        (*(void (**)(char *, uint64_t))(v528 + 8))(v284, v530);
        if (v164(v114, 1, v162) != 1)
        {
          v165(v151, v114, v162);
          v178 = (uint64_t)v544;
          v165(v544, v166, v162);
          v179 = v540;
          v180 = v178 + v540[5];
          v181 = v151;
LABEL_45:
          v165((char *)v180, v181, v162);
          v163((char *)(v178 + v179[6]), 1, 1, v162);
          v286 = v178 + v179[7];
          v287 = type metadata accessor for HeadphoneAssets.Feature(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v287 - 8) + 56))(v286, 1, 1, v287);
          *(_QWORD *)(v178 + v179[8]) = &_swiftEmptyArrayStorage;
          *(_QWORD *)(v178 + v179[9]) = 0;
          v288 = (_QWORD *)(v178 + v179[10]);
          *v288 = 0;
          v288[1] = 0;
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v539 + 56))(v178, 0, 1, v179);
        }
      }
      else
      {
        v114 = v519;
        v163(v519, 1, 1, v162);
      }
      (*(void (**)(char *, uint64_t))(v543 + 8))(v166, v162);
      goto LABEL_10;
    default:
      (*(void (**)(char *, uint64_t))(v161 + 8))(v166, v162);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, int *))(v539 + 56))(v544, 1, 1, v540);
  }
}

CGColorRef sub_10008007C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  int v5;
  void *v6;
  id v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  _BYTE v47[24];

  v1 = v0;
  swift_beginAccess(v0 + 16, v47, 0, 0);
  v2 = *(_QWORD *)(v0 + 40);
  if (v2)
  {
    sub_100013410((_QWORD *)(v0 + 16), v2);
    v3 = sub_100042FBC();
    v4 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v46, 0, 0);
    v5 = *(_DWORD *)(v4 + *(int *)(type metadata accessor for HeadphoneModel(0) + 124));
    v6 = (void *)objc_opt_self(SFHeadphoneProduct);
    v7 = objc_msgSend(v6, "powerBeatsPro");
    v8 = objc_msgSend(v7, "productID");

    if (v8 == v5)
    {
      if ((v3 & 0xFu) > 0xD)
        v9 = 0;
      else
        v9 = dword_10008AD78[v3 & 0xF];
      if (qword_1000B7C00 != -1)
        swift_once(&qword_1000B7C00, sub_1000713FC);
      v18 = type metadata accessor for Logger(0);
      v19 = sub_1000093F8(v18, (uint64_t)qword_1000B9F80);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v20, v21))
        goto LABEL_33;
      v22 = swift_slowAlloc(18, -1);
      v23 = swift_slowAlloc(32, -1);
      v45 = v23;
      *(_DWORD *)v22 = 16777986;
      LOBYTE(v44) = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 1);
      *(_WORD *)(v22 + 5) = 256;
      LOBYTE(v44) = v3 & 0xF;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 1);
      *(_WORD *)(v22 + 8) = 2080;
      v24 = sub_100009F00(&qword_1000B9340);
      v25 = swift_allocObject(v24, 72, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100087710;
      *(_QWORD *)(v25 + 56) = &type metadata for UInt32;
      *(_QWORD *)(v25 + 64) = &protocol witness table for UInt32;
      *(_DWORD *)(v25 + 32) = v9;
      v26 = String.init(format:_:)(2016817189, 0xE400000000000000, v25);
      v28 = v27;
      v44 = sub_10004B4F0(v26, v27, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      swift_bridgeObjectRelease(v28);
      v29 = "Mute Call: B444 Color Code: %hhu, Color ID: %hhu, Color Hex: %s";
    }
    else
    {
      v16 = objc_msgSend(v6, "b494");
      v17 = objc_msgSend(v16, "productID");

      if (v17 == v5)
      {
        if ((v3 & 0xFu) > 9)
          v9 = 0;
        else
          v9 = dword_10008AD50[v3 & 0xF];
        if (qword_1000B7C00 != -1)
          swift_once(&qword_1000B7C00, sub_1000713FC);
        v30 = type metadata accessor for Logger(0);
        v31 = sub_1000093F8(v30, (uint64_t)qword_1000B9F80);
        v20 = Logger.logObject.getter(v31);
        v21 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v20, v21))
          goto LABEL_33;
        v22 = swift_slowAlloc(18, -1);
        v23 = swift_slowAlloc(32, -1);
        v45 = v23;
        *(_DWORD *)v22 = 16777986;
        LOBYTE(v44) = v3;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 1);
        *(_WORD *)(v22 + 5) = 256;
        LOBYTE(v44) = v3 & 0xF;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 1);
        *(_WORD *)(v22 + 8) = 2080;
        v32 = sub_100009F00(&qword_1000B9340);
        v33 = swift_allocObject(v32, 72, 7);
        *(_OWORD *)(v33 + 16) = xmmword_100087710;
        *(_QWORD *)(v33 + 56) = &type metadata for UInt32;
        *(_QWORD *)(v33 + 64) = &protocol witness table for UInt32;
        *(_DWORD *)(v33 + 32) = v9;
        v34 = String.init(format:_:)(2016817189, 0xE400000000000000, v33);
        v36 = v35;
        v44 = sub_10004B4F0(v34, v35, &v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
        swift_bridgeObjectRelease(v36);
        v29 = "Mute Call: B494 Color Code: %hhu, Color ID: %hhu, Color Hex: %s";
      }
      else
      {
        if (v5 != 8221)
        {
          v9 = 0;
          return CGColorCreateGenericRGB((double)HIWORD(v9) / 255.0, (double)BYTE1(v9) / 255.0, (double)v9 / 255.0, 1.0);
        }
        if ((v3 & 0xFu) > 0xD)
          v9 = 0;
        else
          v9 = dword_10008AD78[v3 & 0xF];
        if (qword_1000B7C00 != -1)
          swift_once(&qword_1000B7C00, sub_1000713FC);
        v37 = type metadata accessor for Logger(0);
        v38 = sub_1000093F8(v37, (uint64_t)qword_1000B9F80);
        v20 = Logger.logObject.getter(v38);
        v21 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v20, v21))
        {
LABEL_33:

          return CGColorCreateGenericRGB((double)HIWORD(v9) / 255.0, (double)BYTE1(v9) / 255.0, (double)v9 / 255.0, 1.0);
        }
        v22 = swift_slowAlloc(18, -1);
        v23 = swift_slowAlloc(32, -1);
        v45 = v23;
        *(_DWORD *)v22 = 16777986;
        LOBYTE(v44) = v3;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 1);
        *(_WORD *)(v22 + 5) = 256;
        LOBYTE(v44) = v3 & 0xF;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 1);
        *(_WORD *)(v22 + 8) = 2080;
        v39 = sub_100009F00(&qword_1000B9340);
        v40 = swift_allocObject(v39, 72, 7);
        *(_OWORD *)(v40 + 16) = xmmword_100087710;
        *(_QWORD *)(v40 + 56) = &type metadata for UInt32;
        *(_QWORD *)(v40 + 64) = &protocol witness table for UInt32;
        *(_DWORD *)(v40 + 32) = v9;
        v41 = String.init(format:_:)(2016817189, 0xE400000000000000, v40);
        v43 = v42;
        v44 = sub_10004B4F0(v41, v42, &v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
        swift_bridgeObjectRelease(v43);
        v29 = "Mute Call: B498 Color Code: %hhu, Color ID: %hhu, Color Hex: %s";
      }
    }
    _os_log_impl((void *)&_mh_execute_header, v20, v21, v29, (uint8_t *)v22, 0x12u);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);
    goto LABEL_33;
  }
  if (qword_1000B7C00 != -1)
    swift_once(&qword_1000B7C00, sub_1000713FC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_1000093F8(v10, (uint64_t)qword_1000B9F80);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Cannot Get Tint Color", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return 0;
}

void sub_100080784(double *a1@<X8>)
{
  uint64_t v1;
  unint64_t p_type;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  double v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  double v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _UNKNOWN **v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  BOOL v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  unsigned int v53;
  unsigned int v54;
  BOOL v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  uint64_t v63;
  __int16 v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;
  double *v75;
  uint64_t v76;
  uint64_t v77;
  os_log_type_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  id v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  double *v93;
  uint64_t v94;
  double v95;
  _BYTE v96[24];

  v4 = type metadata accessor for HeadphoneModel(0);
  __chkstk_darwin(v4, v5);
  v7 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = v1;
  v8 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, v96, 0, 0);
  v9 = *(_QWORD *)(v8 + 112);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = 0.0;
  v93 = a1;
  if (!v10)
  {
    v21 = 2;
    v22 = 0.0;
    v18 = 0.0;
    v17 = 2;
    v23 = 2;
    goto LABEL_34;
  }
  v12 = v9 + 32;
  v13 = (unsigned __int8 *)(v9 + 40);
  v14 = *(unsigned __int8 *)(v9 + 41);
  v15 = v9 + 32;
  v16 = (unsigned __int8 *)(v9 + 40);
  if (!*(_BYTE *)(v9 + 41))
  {
LABEL_22:
    v17 = *v16;
    v18 = *(double *)v15;
    if (v14 == 1)
    {
LABEL_23:
      v19 = v9 + 32;
      v20 = (unsigned __int8 *)(v9 + 40);
      goto LABEL_25;
    }
    goto LABEL_12;
  }
  if (v10 != 1)
  {
    v15 = v9 + 48;
    v24 = 1;
    do
    {
      v25 = v24 + 1;
      if (__OFADD__(v24, 1))
      {
        __break(1u);
        goto LABEL_153;
      }
      if (!*(_BYTE *)(v15 + 9))
      {
        v16 = (unsigned __int8 *)(v15 + 8);
        goto LABEL_22;
      }
      v15 += 16;
      ++v24;
    }
    while (v25 != v10);
    v17 = 2;
    v18 = 0.0;
    if (v14 == 1)
      goto LABEL_23;
LABEL_12:
    if (v10 != 1)
    {
      v19 = v9 + 48;
      v26 = 1;
      while (1)
      {
        v27 = v26 + 1;
        if (__OFADD__(v26, 1))
          break;
        if (*(_BYTE *)(v19 + 9) == 1)
        {
          v20 = (unsigned __int8 *)(v19 + 8);
          goto LABEL_25;
        }
        v19 += 16;
        ++v26;
        if (v27 == v10)
        {
          v21 = 2;
          v22 = 0.0;
          if (v14 != 2)
            goto LABEL_26;
          goto LABEL_33;
        }
      }
LABEL_153:
      __break(1u);
      goto LABEL_154;
    }
LABEL_13:
    v21 = 2;
    v22 = 0.0;
    v11 = 0.0;
    v23 = 2;
    if (v14 != 2)
    {
LABEL_34:
      v30 = NSUserDefaults_ptr;
      p_type = (unint64_t)&stru_1000B2FF0.type;
      v31 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", *(unsigned int *)(v8 + *(int *)(v4 + 124)));
      if (v31)
      {
        v32 = v31;
        sub_10003CC88(v8, (uint64_t)v7, type metadata accessor for HeadphoneModel);
        v33 = objc_msgSend(objc_allocWithZone((Class)SFHeadphoneProduct), "initWithProductID:", *(unsigned int *)&v7[*(int *)(v4 + 124)]);
        if (v33)
        {
          v34 = v33;
          v35 = objc_msgSend(v33, "hasSplitBattery");

          sub_10000EC60((uint64_t)v7, type metadata accessor for HeadphoneModel);
          if ((v35 & 1) != 0)
          {
            v36 = OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_batteryDebounceTime;
            v37 = v94;
            if (!*(_QWORD *)(v94 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_batteryDebounceTime))
              *(_QWORD *)(v37 + v36) = mach_absolute_time();
            v38 = mach_absolute_time();
            v39 = *(_QWORD *)(v37 + v36);
            v40 = v38 >= v39;
            v41 = v38 - v39;
            if (!v40)
            {
              __break(1u);
              goto LABEL_156;
            }
            if ((unint64_t)UpTicksToSeconds(v41) > 2)
            {

              LODWORD(p_type) = v17 & 1;
              if (v17 == 2)
                v18 = 0.0;
              if (v21 == 2)
                v22 = 0.0;
              v54 = v21 & 1;
              if (v21 == 2)
                v56 = 1;
              else
                v56 = v21 >> 8;
              if (v23 != 2)
                goto LABEL_147;
              v53 = 0;
              v57 = 2;
              v11 = 0.0;
            }
            else
            {
              if (qword_1000B7C00 != -1)
                swift_once(&qword_1000B7C00, sub_1000713FC);
              v42 = type metadata accessor for Logger(0);
              v43 = sub_1000093F8(v42, (uint64_t)qword_1000B9F80);
              v44 = Logger.logObject.getter(v43);
              v45 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v44, v45))
              {
                v46 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v46 = 0;
                _os_log_impl((void *)&_mh_execute_header, v44, v45, "Workaround for invalid battery data soon after powering on", v46, 2u);
                swift_slowDealloc(v46, -1, -1);
              }

              if (v17 == 2 || v18 < 0.01)
              {
                if (v21 == 2 || v22 < 0.01)
                {
                  v48 = objc_msgSend(v32, "hasCaseWithoutBattery", v93);
                  v49 = (char)v48;
                  v11 = 1.0;
                  if ((_DWORD)v48)
                    v22 = 0.0;
                  else
                    v22 = 1.0;
                  v50 = Logger.logObject.getter(v48);
                  v51 = static os_log_type_t.debug.getter();
                  if (os_log_type_enabled(v50, v51))
                  {
                    v52 = (uint8_t *)swift_slowAlloc(2, -1);
                    *(_WORD *)v52 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Use default battery levels for invalid left, right and case battery data", v52, 2u);
                    swift_slowDealloc(v52, -1, -1);
                  }

                  v53 = 0;
                  v54 = 0;
                  LODWORD(p_type) = 0;
                  v55 = vabdd_f64(1.0, v22) > 0.1;
                  v56 = 1;
                  v57 = 2;
                  v18 = 1.0;
                  goto LABEL_84;
                }
                v54 = v21 & 1;
                if (v17 == 2 || v18 < 0.01)
                {
                  v82 = objc_msgSend(v32, "hasCaseWithoutBattery", v93);
                  if ((_DWORD)v82)
                    v18 = 0.0;
                  else
                    v18 = v22;
                  v83 = Logger.logObject.getter(v82);
                  v84 = static os_log_type_t.debug.getter();
                  if (os_log_type_enabled(v83, v84))
                  {
                    v85 = (uint8_t *)swift_slowAlloc(2, -1);
                    *(_WORD *)v85 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v83, v84, "Use right battery for invalid left battery data", v85, 2u);
                    swift_slowDealloc(v85, -1, -1);
                  }

                  LODWORD(p_type) = 0;
                }
                else
                {
                  LODWORD(p_type) = v17 & 1;
                }
                if (v23 != 2 && v11 >= 0.01)
                {
                  v56 = v21 >> 8;
LABEL_146:

LABEL_147:
                  v57 = v23 >> 8;
                  v53 = v23 & 1;
                  goto LABEL_73;
                }
                v90 = Logger.logObject.getter(v47);
                v91 = static os_log_type_t.debug.getter();
                v56 = v21 >> 8;
                if (os_log_type_enabled(v90, v91))
                {
                  v57 = 2;
                  v92 = (uint8_t *)swift_slowAlloc(2, -1);
                  *(_WORD *)v92 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v90, v91, "Use right battery for invalid case battery data", v92, 2u);
                  swift_slowDealloc(v92, -1, -1);

                  v53 = 0;
                }
                else
                {

                  v53 = 0;
                  v57 = 2;
                }
                v11 = v22;
              }
              else
              {
                LODWORD(p_type) = v17 & 1;
                if (v21 == 2 || v22 < 0.01)
                {
                  v79 = Logger.logObject.getter(v47);
                  v80 = static os_log_type_t.debug.getter();
                  if (os_log_type_enabled(v79, v80))
                  {
                    v81 = (uint8_t *)swift_slowAlloc(2, -1);
                    *(_WORD *)v81 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v79, v80, "Use left battery for invalid right battery data", v81, 2u);
                    swift_slowDealloc(v81, -1, -1);
                  }

                  v54 = 0;
                  v56 = 1;
                  v22 = v18;
                }
                else
                {
                  v54 = v21 & 1;
                  v56 = v21 >> 8;
                }
                if (v23 != 2 && v11 >= 0.01)
                  goto LABEL_146;
                v86 = objc_msgSend(v32, "hasCaseWithoutBattery", v93);
                if ((_DWORD)v86)
                  v11 = 0.0;
                else
                  v11 = v18;
                v87 = Logger.logObject.getter(v86);
                v88 = static os_log_type_t.debug.getter();
                if (os_log_type_enabled(v87, v88))
                {
                  v57 = 2;
                  v89 = (uint8_t *)swift_slowAlloc(2, -1);
                  *(_WORD *)v89 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v87, v88, "Use left battery for case right battery data", v89, 2u);
                  swift_slowDealloc(v89, -1, -1);

                  v53 = 0;
                }
                else
                {

                  v53 = 0;
                  v57 = 2;
                }
              }
            }
LABEL_73:
            v49 = v22 == 0.0;
            if (v18 == 0.0 && v22 == 0.0)
            {
              p_type = v53 | ((unint64_t)v57 << 8);
              if (qword_1000B7C00 == -1)
                goto LABEL_76;
              goto LABEL_155;
            }
            v65 = vabdd_f64(v18, v22);
            v55 = v65 > 0.1;
            if (v18 == 0.0)
            {
              if (v65 <= 0.1 && v22 == 0.0 && v54 == p_type)
              {
LABEL_87:
                if (v11 <= 0.0)
                {
                  p_type = p_type;
                  v37 = v94;
                  if (qword_1000B7C00 != -1)
                    swift_once(&qword_1000B7C00, sub_1000713FC);
                  v72 = type metadata accessor for Logger(0);
                  v73 = sub_1000093F8(v72, (uint64_t)qword_1000B9F80);
                  v60 = Logger.logObject.getter(v73);
                  v74 = static os_log_type_t.debug.getter();
                  if (!os_log_type_enabled(v60, v74))
                  {
                    v23 = 0;
                    LOBYTE(v30) = 0;
                    v64 = 0x2000;
                    v22 = 0.0;
                    v11 = 0.0;
                    goto LABEL_102;
                  }
                  v63 = swift_slowAlloc(12, -1);
                  *(_DWORD *)v63 = 134217984;
                  v95 = v18;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96);
                  _os_log_impl((void *)&_mh_execute_header, v60, v74, "Create battery configuration: combined buds without case(combined l&r: %f)", (uint8_t *)v63, 0xCu);
                  v23 = 0;
                  LOBYTE(v30) = 0;
                  v64 = 0x2000;
                  v22 = 0.0;
                  goto LABEL_100;
                }
                v37 = v94;
                LOBYTE(v30) = *(_BYTE *)(v94
                                       + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_useMovieForNextBatteryView);
                p_type = p_type;
                v23 = v53 | ((unint64_t)v57 << 8);
                if (qword_1000B7C00 == -1)
                {
LABEL_89:
                  v66 = type metadata accessor for Logger(0);
                  v67 = sub_1000093F8(v66, (uint64_t)qword_1000B9F80);
                  v60 = Logger.logObject.getter(v67);
                  v68 = static os_log_type_t.debug.getter();
                  if (!os_log_type_enabled(v60, v68))
                  {
                    v64 = 0;
                    v22 = v11;
                    v11 = 0.0;
                    goto LABEL_102;
                  }
                  v63 = swift_slowAlloc(22, -1);
                  *(_DWORD *)v63 = 134218240;
                  v95 = v18;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96);
                  *(_WORD *)(v63 + 12) = 2048;
                  v95 = v11;
                  v37 = v94;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96);
                  _os_log_impl((void *)&_mh_execute_header, v60, v68, "Create battery configuration: combined buds with case(combined l&r: %f, c: %f)", (uint8_t *)v63, 0x16u);
                  v64 = 0;
                  v22 = v11;
                  goto LABEL_100;
                }
LABEL_156:
                swift_once(&qword_1000B7C00, sub_1000713FC);
                goto LABEL_89;
              }
LABEL_91:
              p_type = p_type;
              v23 = v54 | ((unint64_t)v56 << 8);
              if (v11 <= 0.0)
              {
                if (qword_1000B7C00 != -1)
                  swift_once(&qword_1000B7C00, sub_1000713FC);
                v76 = type metadata accessor for Logger(0);
                v77 = sub_1000093F8(v76, (uint64_t)qword_1000B9F80);
                v60 = Logger.logObject.getter(v77);
                v78 = static os_log_type_t.debug.getter();
                if (!os_log_type_enabled(v60, v78))
                {
                  LOBYTE(v30) = 0;
                  v64 = 24576;
                  v11 = 0.0;
                  v37 = v94;
                  goto LABEL_102;
                }
                v63 = swift_slowAlloc(22, -1);
                *(_DWORD *)v63 = 134218240;
                v95 = v18;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96);
                *(_WORD *)(v63 + 12) = 2048;
                v95 = v22;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96);
                _os_log_impl((void *)&_mh_execute_header, v60, v78, "Create battery configuration: split without case(l: %f, r: %f)", (uint8_t *)v63, 0x16u);
                LOBYTE(v30) = 0;
                v64 = 24576;
                v11 = 0.0;
                v37 = v94;
              }
              else
              {
                v64 = v53 | ((_WORD)v57 << 8) | 0x4000;
                if (qword_1000B7C00 != -1)
                  swift_once(&qword_1000B7C00, sub_1000713FC);
                v69 = type metadata accessor for Logger(0);
                v70 = sub_1000093F8(v69, (uint64_t)qword_1000B9F80);
                v60 = Logger.logObject.getter(v70);
                v71 = static os_log_type_t.debug.getter();
                if (!os_log_type_enabled(v60, v71))
                {
                  LOBYTE(v30) = 0;
                  v37 = v94;
                  goto LABEL_102;
                }
                v63 = swift_slowAlloc(32, -1);
                *(_DWORD *)v63 = 134218496;
                v95 = v18;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96);
                *(_WORD *)(v63 + 12) = 2048;
                v95 = v22;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96);
                *(_WORD *)(v63 + 22) = 2048;
                v95 = v11;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96);
                _os_log_impl((void *)&_mh_execute_header, v60, v71, "Create battery configuration: split with case(l: %f, r: %f, c: %f)", (uint8_t *)v63, 0x20u);
                LOBYTE(v30) = 0;
                v37 = v94;
              }
              goto LABEL_101;
            }
LABEL_84:
            if (!v49 && !v55 && ((v54 ^ p_type) & 1) == 0)
              goto LABEL_87;
            goto LABEL_91;
          }
        }
        else
        {
          sub_10000EC60((uint64_t)v7, type metadata accessor for HeadphoneModel);
        }

      }
      LODWORD(p_type) = v17 & 1;
      if (v17 == 2)
        v18 = 0.0;
      if (v21 == 2)
        v22 = 0.0;
      v54 = v21 & 1;
      if (v21 == 2)
        v56 = 1;
      else
        v56 = v21 >> 8;
      if (v23 == 2)
        v57 = 2;
      else
        v57 = v23 >> 8;
      if (v23 == 2)
        v53 = 0;
      else
        v53 = v23 & 1;
      if (v23 == 2)
        v11 = 0.0;
      goto LABEL_73;
    }
LABEL_33:
    v11 = *(double *)v12;
    v23 = *v13 | 0x200u;
    goto LABEL_34;
  }
  v17 = 2;
  v18 = 0.0;
  v19 = v9 + 32;
  v20 = (unsigned __int8 *)(v9 + 40);
  if (v14 != 1)
    goto LABEL_13;
LABEL_25:
  v22 = *(double *)v19;
  v21 = *v20 | 0x100;
  if (v14 == 2)
    goto LABEL_33;
LABEL_26:
  if (v10 == 1)
  {
LABEL_31:
    v23 = 2;
    goto LABEL_34;
  }
  v12 = v9 + 48;
  v28 = 1;
  while (1)
  {
    v29 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (*(_BYTE *)(v12 + 9) == 2)
    {
      v13 = (unsigned __int8 *)(v12 + 8);
      goto LABEL_33;
    }
    v12 += 16;
    ++v28;
    if (v29 == v10)
      goto LABEL_31;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  swift_once(&qword_1000B7C00, sub_1000713FC);
LABEL_76:
  v58 = type metadata accessor for Logger(0);
  v59 = sub_1000093F8(v58, (uint64_t)qword_1000B9F80);
  v60 = Logger.logObject.getter(v59);
  v61 = static os_log_type_t.debug.getter();
  v62 = os_log_type_enabled(v60, v61);
  v37 = v94;
  if (v62)
  {
    v63 = swift_slowAlloc(12, -1);
    *(_DWORD *)v63 = 134217984;
    v95 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96);
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "Create battery configuration: headset only(battery: %f)", (uint8_t *)v63, 0xCu);
    v23 = 0;
    LOBYTE(v30) = 0;
    v64 = 0x8000;
    v22 = 0.0;
    v18 = v11;
LABEL_100:
    v11 = 0.0;
LABEL_101:
    swift_slowDealloc(v63, -1, -1);
    goto LABEL_102;
  }
  v23 = 0;
  LOBYTE(v30) = 0;
  v64 = 0x8000;
  v22 = 0.0;
  v18 = v11;
  v11 = 0.0;
LABEL_102:

  *(_BYTE *)(v37 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_useMovieForNextBatteryView) = (_BYTE)v30;
  v75 = v93;
  *v93 = v18;
  *((_QWORD *)v75 + 1) = p_type;
  v75[2] = v22;
  *((_QWORD *)v75 + 3) = v23;
  v75[4] = v11;
  *((_WORD *)v75 + 20) = v64;
}

uint64_t sub_100081598@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (int *)type metadata accessor for HeadphoneAssets(0);
  v5 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xFE) != 2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a2, 1, 1, v4);
  v27 = a2;
  URL.init(fileURLWithPath:)(0, 0xE000000000000000);
  v14 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v14(v8, v13, v9);
  v14(&v8[v4[5]], v13, v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(&v8[v4[6]], 1, 1, v9);
  v15 = &v8[v4[7]];
  v16 = type metadata accessor for HeadphoneAssets.Feature(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v4[8];
  *(_QWORD *)&v8[v17] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v8[v4[9]] = 0;
  v18 = &v8[v4[10]];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v19 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 88.0);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v20, v19);

  if (v21)
  {
    v22 = sub_100009F00((uint64_t *)&unk_1000B8730);
    v23 = swift_allocObject(v22, 40, 7);
    *(_OWORD *)(v23 + 16) = xmmword_1000893B0;
    *(_QWORD *)(v23 + 32) = v21;
    v28 = v23;
    specialized Array._endMutation()();
    v24 = v28;

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    swift_bridgeObjectRelease(*(_QWORD *)&v8[v17]);
    *(_QWORD *)&v8[v17] = v24;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);

  }
  v26 = v27;
  sub_10003CC88((uint64_t)v8, v27, type metadata accessor for HeadphoneAssets);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v5 + 56))(v26, 0, 1, v4);
  return sub_10000EC60((uint64_t)v8, type metadata accessor for HeadphoneAssets);
}

id sub_100081870(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12 = 0;
  v7 = objc_msgSend(v3, "initWithBundleIdentifier:allowPlaceholder:error:", v6, a3 & 1, &v12);

  v8 = v12;
  if (v7)
  {
    v9 = v12;
  }
  else
  {
    v10 = v12;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow();
  }
  return v7;
}

char *sub_100081948(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100009F00(&qword_1000BA120);
      v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[32 * v8 + 32])
          memmove(v14, a4 + 32, 32 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1000831A4(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100081A54(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100009F00(&qword_1000BA168);
  v11 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000834B8(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

uint64_t sub_100081C5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100009F00(&qword_1000BA170);
  v11 = *(_QWORD *)(sub_100009F00(&qword_1000B7F08) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = sub_100009F00(&qword_1000B7F08);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10008339C(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

char *sub_100081E6C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100009F00(&qword_1000BA160);
      v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[32 * v8 + 32])
          memmove(v14, a4 + 32, 32 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_100083294(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_100081F78(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100009F00(&qword_1000BA178);
      v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[16 * v8 + 32])
          memmove(v14, a4 + 32, 16 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_100083754(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100082084(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100009F00(&qword_1000B95C8);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10008385C(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100082190(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100009F00(&qword_1000BA180);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100083944(0, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_1000822B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100009F00(&qword_1000B9D38);
      v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 29;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 32])
          memmove(v14, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_100083A30(0, v8, v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_1000823C0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100009F00(&qword_1000BA128);
      v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[16 * v8 + 32])
          memmove(v14, a4 + 32, 16 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1000830B4(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1000824CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100009F00(&qword_1000BA1A8);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100083B80(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1000825F0(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawBufferPointer.copyMemory source has too many elements", 69, 2, "Swift/UnsafeRawBufferPointer.swift", 34, 2, 487, 0);
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_100082684(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1000826A8@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1000826D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10008275C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1000826EC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1000828E4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100082708(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100082A40(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100082724(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100082BA8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100082740(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100082ECC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10008275C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100009F00(&qword_1000BA158);
    v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 5);
  }
  else
  {
    v11 = &_swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 32 * v8)
      memmove(v11 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 32 * v8 || v14 >= v15 + 32 * v8)
  {
    sub_100009F00(&qword_1000BA150);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000828E4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100009F00(&qword_1000B9D38);
    v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v8])
      memmove(v14, v15, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[4 * v8] || v14 >= &v15[4 * v8])
  {
    memcpy(v14, v15, 4 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100082A40(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100009F00(&qword_1000BA128);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100082BA8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100009F00(&qword_1000BA1D0);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    sub_100009F00(&qword_1000BA1D8);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100082D48(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100009F00(&qword_1000BA1A8);
    v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[48 * v8])
      memmove(v13, v14, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[48 * v8] || v13 >= &v14[48 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100082ECC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100009F00(&qword_1000B9718);
  v11 = *(_QWORD *)(sub_100009F00(&qword_1000B9708) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = sub_100009F00(&qword_1000B9708);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v15 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v21);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v8;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000830B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1000831A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100083294(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 32 * a1 + 32;
    v7 = a3 + 32 * v4;
    if (v6 >= v7 || v6 + 32 * v4 <= a3)
    {
      sub_100009F00(&qword_1000BA148);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10008339C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(sub_100009F00(&qword_1000B7F08) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000834B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000835D0()
{
  unint64_t result;

  result = qword_1000BA110;
  if (!qword_1000BA110)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000BA110);
  }
  return result;
}

void sub_100083614(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 0xFF)
    sub_1000113B0(a1, a2, a3, a4);
}

unint64_t sub_100083628()
{
  unint64_t result;

  result = qword_1000BA130;
  if (!qword_1000BA130)
  {
    result = swift_getWitnessTable(&unk_10008ACB4, &type metadata for HeadphonePresenter.AppleAccountFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1000BA130);
  }
  return result;
}

uint64_t sub_10008366C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100009F00(&qword_1000B7F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000836B4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000836D8()
{
  uint64_t v0;

  sub_100072EF4(v0);
}

uint64_t sub_1000836E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100083704()
{
  uint64_t v0;

  return sub_10004244C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10008370C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008371C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008372C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100083734()
{
  uint64_t v0;

  sub_10007212C(v0);
}

uint64_t sub_10008373C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_10008374C()
{
  uint64_t v0;

  return sub_10007591C(v0);
}

uint64_t sub_100083754(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_100009F00(&qword_1000B9E68);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_10008385C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_100083944(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = (char *)(a4 + 48 * a1 + 32);
  v6 = 48 * v4;
  v7 = &__dst[v6];
  if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
  {
    memcpy(__dst, v5, v6);
    return v7;
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_100083A30(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

double sub_100083B18()
{
  uint64_t v0;

  return sub_100072B1C(v0);
}

void sub_100083B24(char a1)
{
  uint64_t v1;

  sub_100074F18(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

double sub_100083B40()
{
  uint64_t v0;

  return sub_100074A3C(v0);
}

uint64_t sub_100083B4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100083B78()
{
  uint64_t v0;

  sub_100074E90(v0);
}

uint64_t sub_100083B80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 48 * a1 + 32;
  v6 = a3 + 48 * v4;
  if (v5 >= v6 || v5 + 48 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100083C74(char a1)
{
  uint64_t v1;

  return sub_100071AB0(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_100083C7C(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

id *sub_100083CA4(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_100083CCC(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

id *sub_100083CF4(id *a1)
{

  return a1;
}

uint64_t storeEnumTagSinglePayload for HeadphonePresenter.AppleAccountFeatureFlags(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100083D5C + 4 * byte_10008A99C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100083D7C + 4 * byte_10008A9A1[v4]))();
}

_BYTE *sub_100083D5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100083D7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100083D84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100083D8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100083D94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100083D9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePresenter.AppleAccountFeatureFlags()
{
  return &type metadata for HeadphonePresenter.AppleAccountFeatureFlags;
}

unint64_t sub_100083DBC()
{
  unint64_t result;

  result = qword_1000BA1E0;
  if (!qword_1000BA1E0)
  {
    result = swift_getWitnessTable(&unk_10008AC8C, &type metadata for HeadphonePresenter.AppleAccountFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1000BA1E0);
  }
  return result;
}

id sub_100083E34()
{
  id *v0;

  return objc_msgSend(*v0, "isHiddenFromSettings");
}

uint64_t sub_100083E54(uint64_t a1, uint64_t a2)
{
  return sub_100083E6C(a1, a2, (SEL *)&selRef_displayName);
}

uint64_t sub_100083E60(uint64_t a1, uint64_t a2)
{
  return sub_100083E6C(a1, a2, (SEL *)&selRef_sourceIdentifier);
}

uint64_t sub_100083E6C(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(*v3, *a3);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  return v5;
}

BOOL sub_100083EBC()
{
  return sub_100083EE0();
}

BOOL sub_100083EE0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5;
  id v6;
  id v7;

  v1 = objc_msgSend(v0, "sourceSettings");
  v2 = objc_msgSend(v1, "notificationSettings");

  v3 = objc_msgSend(v2, "timeSensitiveSetting");
  if (v3)
    return 1;
  v5 = objc_msgSend(v0, "sourceSettings");
  v6 = objc_msgSend(v5, "notificationSettings");

  v7 = objc_msgSend(v6, "directMessagesSetting");
  return v7 != 0;
}

BOOL sub_100083FB4()
{
  id *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(*v0, "sourceSettings");
  v2 = objc_msgSend(v1, "notificationSettings");

  v3 = objc_msgSend(v2, "announcementSetting");
  return v3 == (id)2 || sub_100083EE0();
}

BOOL sub_100084040()
{
  id *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(*v0, "sourceSettings");
  v2 = objc_msgSend(v1, "notificationSettings");

  v3 = objc_msgSend(v2, "announcementSetting");
  return v3 == (id)2;
}

void sub_1000840B0(char a1)
{
  sub_1000840D0(a1);
}

void sub_1000840D0(char a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char **v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  const char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  id v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34[4];

  v2 = v1;
  v4 = objc_msgSend(v2, "sourceSettings");
  v5 = objc_msgSend(v4, "notificationSettings");

  v6 = objc_msgSend(v5, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v34, v6);
  swift_unknownObjectRelease(v6);
  v7 = sub_100009F84(0, &qword_1000BA1F0, UNMutableNotificationSettings_ptr);
  if ((swift_dynamicCast(&v33, v34, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    goto LABEL_19;
  v8 = v33;
  if ((a1 & 1) != 0)
    v9 = 2;
  else
    v9 = 1;
  objc_msgSend(v33, "setAnnouncementSetting:", v9);
  v10 = &selRef_configureWithContext_completion_;
  if ((a1 & 1) == 0)
  {
    if (qword_1000B7B08 != -1)
      swift_once(&qword_1000B7B08, sub_10001FF20);
    v21 = type metadata accessor for Logger(0);
    sub_1000093F8(v21, (uint64_t)qword_1000BC740);
    v12 = v2;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v32 = v8;
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v34[0] = v31;
      *(_DWORD *)v15 = 136315138;
      v22 = objc_msgSend(v12, "sourceIdentifier");
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v25 = v24;

      v10 = &selRef_configureWithContext_completion_;
      v33 = (id)sub_10004B4F0(v23, v25, v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34);

      swift_bridgeObjectRelease(v25);
      v20 = "Disabling Announce Notification for %s";
      goto LABEL_14;
    }
LABEL_15:

    goto LABEL_16;
  }
  if (qword_1000B7B08 != -1)
    swift_once(&qword_1000B7B08, sub_10001FF20);
  v11 = type metadata accessor for Logger(0);
  sub_1000093F8(v11, (uint64_t)qword_1000BC740);
  v12 = v2;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v13, v14))
    goto LABEL_15;
  v32 = v8;
  v15 = (uint8_t *)swift_slowAlloc(12, -1);
  v31 = swift_slowAlloc(32, -1);
  v34[0] = v31;
  *(_DWORD *)v15 = 136315138;
  v16 = objc_msgSend(v12, "sourceIdentifier");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v10 = &selRef_configureWithContext_completion_;
  v33 = (id)sub_10004B4F0(v17, v19, v34);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34);

  swift_bridgeObjectRelease(v19);
  v20 = "Enabling Announce Notification for %s";
LABEL_14:
  _os_log_impl((void *)&_mh_execute_header, v13, v14, v20, v15, 0xCu);
  swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v31, -1, -1);
  v26 = v15;
  v8 = v32;
  swift_slowDealloc(v26, -1, -1);

LABEL_16:
  v27 = objc_msgSend((id)objc_opt_self(UNNotificationSettingsCenter), "currentNotificationSettingsCenter");
  v28 = objc_msgSend(v2, v10[474]);
  if (!v28)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v30 = v29;
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
  }
  objc_msgSend(v27, "replaceNotificationSettings:forNotificationSourceIdentifier:", v8, v28);

LABEL_19:
}

void sub_100084508(char a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD v18[4];

  v2 = v1;
  v4 = objc_msgSend(v2, "notificationSystemSettings");
  v5 = objc_msgSend(v4, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v18, v5);
  swift_unknownObjectRelease(v5);
  v6 = sub_100009F84(0, &qword_1000BA1E8, UNMutableNotificationSystemSettings_ptr);
  if ((swift_dynamicCast(&v17, v18, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
  {
    v7 = v17;
    objc_msgSend(v17, "setShowPreviewsSetting:", objc_msgSend(v4, "showPreviewsSetting"));
    if ((a1 & 1) != 0)
      v8 = 2;
    else
      v8 = 1;
    objc_msgSend(v7, "setAnnouncementSetting:", v8);
    objc_msgSend(v7, "setAnnouncementHeadphonesSetting:", v8);
    if ((a1 & 1) != 0)
    {
      if (qword_1000B7B08 != -1)
        swift_once(&qword_1000B7B08, sub_10001FF20);
      v9 = type metadata accessor for Logger(0);
      v10 = sub_1000093F8(v9, (uint64_t)qword_1000BC740);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v11, v12))
        goto LABEL_15;
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      v14 = "Enabling Announce Notifications";
    }
    else
    {
      if (qword_1000B7B08 != -1)
        swift_once(&qword_1000B7B08, sub_10001FF20);
      v15 = type metadata accessor for Logger(0);
      v16 = sub_1000093F8(v15, (uint64_t)qword_1000BC740);
      v11 = Logger.logObject.getter(v16);
      v12 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v11, v12))
        goto LABEL_15;
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      v14 = "Disabling Announce Notifications";
    }
    _os_log_impl((void *)&_mh_execute_header, v11, v12, v14, v13, 2u);
    swift_slowDealloc(v13, -1, -1);
LABEL_15:

    objc_msgSend(v2, "setNotificationSystemSettings:", v7);
  }

}

void sub_10008475C(char a1)
{
  sub_100084508(a1);
}

uint64_t sub_10008477C@<X0>(_QWORD *a1@<X8>)
{
  void **v1;
  void *v3;
  NSString v4;
  id v5;
  uint64_t result;

  v3 = *v1;
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "notificationSourceWithIdentifier:", v4);

  result = sub_100009F84(0, &qword_1000B9D48, UNNotificationSource_ptr);
  a1[3] = result;
  a1[4] = &off_1000A9FE0;
  *a1 = v5;
  return result;
}

uint64_t sub_1000847F8()
{
  id *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t **v5;
  uint64_t v6;

  v1 = objc_msgSend(*v0, "allNotificationSources");
  v2 = sub_100009F84(0, &qword_1000B9D48, UNNotificationSource_ptr);
  v3 = sub_100084890();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  v5 = sub_1000673BC(v4);
  swift_bridgeObjectRelease(v4);
  v6 = sub_1000710AC((uint64_t)v5);
  swift_release(v5);
  return v6;
}

unint64_t sub_100084890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B9D50;
  if (!qword_1000B9D50)
  {
    v1 = sub_100009F84(255, &qword_1000B9D48, UNNotificationSource_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1000B9D50);
  }
  return result;
}

uint64_t sub_1000848E8()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC20HeadphoneProxServiceP33_CF8E79CC8181B736E964BFD7FFA0881219ResourceBundleClass);
}

void sub_100084918(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000787C((void *)&_mh_execute_header, a2, a3, "Unhandled TUConfigurationAnnounceCalls state %d, assume Never", a5, a6, a7, a8, 0);
}

void sub_100084980(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000787C((void *)&_mh_execute_header, a2, a3, "Unhandled SFAnnounceCallsState state %d, assume Never", a5, a6, a7, a8, 0);
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:");
}

id objc_msgSend__isAudioProductCertsProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAudioProductCertsProtocol:");
}

id objc_msgSend__isBluetoothClassicTransport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isBluetoothClassicTransport:");
}

id objc_msgSend__typeOfCurrentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_typeOfCurrentDevice");
}

id objc_msgSend_accessoryAttached(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessoryAttached");
}

id objc_msgSend_accessoryInfoForConnection_withReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessoryInfoForConnection:withReply:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "address");
}

id objc_msgSend_allowedEndpointUUIDs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowedEndpointUUIDs");
}

id objc_msgSend_ams_dictionaryByAddingEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_dictionaryByAddingEntriesFromDictionary:");
}

id objc_msgSend_announceCalls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceCalls");
}

id objc_msgSend_announceCallsState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announceCallsState");
}

id objc_msgSend_announcementHeadphonesSetting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announcementHeadphonesSetting");
}

id objc_msgSend_announcementSetting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "announcementSetting");
}

id objc_msgSend_assistantIsEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantIsEnabled");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentNotificationSettingsCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentNotificationSettingsCenter");
}

id objc_msgSend_disableAssistantWhilePasscodeLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableAssistantWhilePasscodeLocked");
}

id objc_msgSend_getAACPCapabilityBit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAACPCapabilityBit:");
}

id objc_msgSend_getCallManagementConfig(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCallManagementConfig");
}

id objc_msgSend_getDeviceColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getDeviceColor:");
}

id objc_msgSend_getFeatureName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getFeatureName:");
}

id objc_msgSend_hasUserSeenAnnounceCallsOptOutScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasUserSeenAnnounceCallsOptOutScreen");
}

id objc_msgSend_hasUserSeenAnnounceMessagesOptOutScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasUserSeenAnnounceMessagesOptOutScreen");
}

id objc_msgSend_hasUserSeenAnnounceNotificationsOptOutScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasUserSeenAnnounceNotificationsOptOutScreen");
}

id objc_msgSend_hasW1Chip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasW1Chip");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_initWithProductID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProductID:");
}

id objc_msgSend_isAnnounceEnabledForHeadphones(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnnounceEnabledForHeadphones");
}

id objc_msgSend_isAnnounceMessagesEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnnounceMessagesEnabled");
}

id objc_msgSend_isAnnounceMessagesSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnnounceMessagesSupported");
}

id objc_msgSend_isAnnounceSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnnounceSupported");
}

id objc_msgSend_isCurrentLocaleNativelySupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentLocaleNativelySupported");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isProxCardEnrollmentSupportedForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProxCardEnrollmentSupportedForDevice:");
}

id objc_msgSend_isProxCardShowedForFeature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProxCardShowedForFeature:");
}

id objc_msgSend_isProxCardSupportedForFeature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProxCardSupportedForFeature:");
}

id objc_msgSend_isSiriAllowedWhileLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSiriAllowedWhileLocked");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_notificationSystemSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationSystemSettings");
}

id objc_msgSend_packageWithContentsOfURL_type_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "packageWithContentsOfURL:type:options:error:");
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairedDevices");
}

id objc_msgSend_productHasW1Chip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "productHasW1Chip:");
}

id objc_msgSend_registerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDelegate:");
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "semanticContentAttribute");
}

id objc_msgSend_setAdaptiveVolumeMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdaptiveVolumeMode:");
}

id objc_msgSend_setAllowedEndpointUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedEndpointUUIDs:");
}

id objc_msgSend_setAnnounceCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnounceCalls:");
}

id objc_msgSend_setAnnouncementSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnouncementSetting:");
}

id objc_msgSend_setListeningMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListeningMode:");
}

id objc_msgSend_setListeningModeConfigs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListeningModeConfigs:");
}

id objc_msgSend_setNotificationSystemSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationSystemSettings:");
}

id objc_msgSend_setProxCardShowed_forDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxCardShowed:forDevice:");
}

id objc_msgSend_setShowPreviewsSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowPreviewsSetting:");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedPreferences");
}

id objc_msgSend_showPreviewsSetting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPreviewsSetting");
}

id objc_msgSend_siriNotificationsPrompted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriNotificationsPrompted");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_symbolForTypeIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "symbolForTypeIdentifier:error:");
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceIdiom");
}

id objc_msgSend_userInterfaceLayoutDirectionForSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLayoutDirectionForSemanticContentAttribute:");
}

id objc_msgSend_voiceTriggerEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceTriggerEnabled");
}
