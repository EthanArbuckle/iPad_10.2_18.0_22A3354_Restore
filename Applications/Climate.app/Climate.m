uint64_t sub_100004250()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned __int8 v5;
  uint64_t v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate25ClimateCabinServiceButton_cabin);
  v2 = objc_msgSend(v1, "compressorOn");
  v3 = objc_msgSend(v1, "compressorOnRestricted");
  v4 = objc_msgSend(v1, "compressorOnInvalid");
  v5 = objc_msgSend(v1, "compressorOnDisabled");
  if (v2)
  {
    if ((v3 & 1) != 0)
    {
      v6 = 5;
      if (v4)
        v6 = 13;
      if ((v5 & 1) == 0)
        return v6;
      return v6 | 0x10;
    }
    v6 = 9;
    if (!v4)
      v6 = 1;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  else if (v3)
  {
    v6 = 4;
    if (v4)
      v6 = 12;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  else
  {
    v6 = 8;
    if (!v4)
      v6 = 0;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  return v6;
}

char *sub_100004328(void *a1, char a2)
{
  char *v2;
  id v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  int v20;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  void **v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  char *v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  char v57;
  char v58;
  char *v59;
  id v61;
  void *v62;
  uint64_t v63;
  id v64;
  void *v65;
  void *v66;
  char v67[24];
  char v68[24];
  objc_super v69;

  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate25ClimateCabinServiceButton_cabin] = a1;
  v69.receiver = v2;
  v69.super_class = (Class)type metadata accessor for ClimateCabinServiceButton();
  v5 = a1;
  v6 = (char *)objc_msgSendSuper2(&v69, "init");
  objc_msgSend(v5, "registerObserver:", v6);

  v7 = &v6[OBJC_IVAR____TtC7Climate13ClimateButton_title];
  swift_beginAccess(&v6[OBJC_IVAR____TtC7Climate13ClimateButton_title], v68, 1, 0);
  v9 = *(_QWORD *)v7;
  v8 = *((_QWORD *)v7 + 1);
  *(_OWORD *)v7 = xmmword_1000886E0;
  v10 = v6;
  if (!v8
    || (v9 == 4403009 ? (v11 = v8 == 0xE300000000000000) : (v11 = 0),
        !v11 && (_stringCompareWithSmolCheck(_:_:expecting:)(4403009, 0xE300000000000000, v9, v8, 0) & 1) == 0))
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v8);
  if (a2 != 1)
  {
    v12 = swift_allocObject(&unk_10009DB38, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16, v10);
    v13 = swift_allocObject(&unk_10009DB60, 32, 7);
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = v5;
    v14 = (uint64_t *)&v10[OBJC_IVAR____TtC7Climate13ClimateButton_action];
    swift_beginAccess(&v10[OBJC_IVAR____TtC7Climate13ClimateButton_action], v67, 1, 0);
    v15 = *v14;
    v16 = v14[1];
    *v14 = (uint64_t)sub_100005110;
    v14[1] = v13;
    v17 = v5;
    sub_100005118(v15, v16);
  }
  v18 = objc_msgSend(v10, "titleLabel");
  if (v18)
  {
    v19 = v18;
    if (qword_1000B7008 != -1)
      swift_once(&qword_1000B7008, sub_10006A3D0);
    objc_msgSend(v19, "setFont:", qword_1000BC9B0);

  }
  v20 = v10[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v10[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if (v20 != 1)
  {
    v21 = *(void **)&v10[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v22 = v10;
    objc_msgSend(v21, "removeFromSuperview");
    sub_100066C24();

  }
  v23 = qword_1000B6FE0;
  v24 = v10;
  if (v23 != -1)
    swift_once(&qword_1000B6FE0, sub_100047678);
  v62 = v5;
  v25 = (void *)qword_1000BC910;
  v26 = *(void **)algn_1000BC918;
  v27 = qword_1000BC920;
  v28 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  if (!v28)
    v28 = v26;
  v29 = (void **)&v24[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v30 = *(void **)&v24[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v63 = *(_QWORD *)&v24[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
  v65 = *(void **)&v24[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
  *v29 = v25;
  v29[1] = v28;
  v29[2] = (void *)v27;
  v31 = v25;
  swift_bridgeObjectRetain_n(v27, 2);
  v61 = v31;
  v32 = *v29;
  v33 = v29[1];
  v34 = (uint64_t)v29[2];
  sub_100005128();
  v35 = v32;
  v36 = v33;
  swift_bridgeObjectRetain(v34);
  v37 = v28;
  if ((static NSObject.== infix(_:_:)(v35) & 1) == 0 || (static NSObject.== infix(_:_:)(v36) & 1) == 0)
  {
    swift_bridgeObjectRelease(v34);

    goto LABEL_25;
  }
  sub_10005B490(v34, v63);
  v39 = v38;
  swift_bridgeObjectRelease(v34);

  if ((v39 & 1) == 0)
LABEL_25:
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *(_QWORD *)v24) + 0x228))(v40, v41);

  swift_bridgeObjectRelease(v63);
  swift_bridgeObjectRelease(v27);
  v42 = qword_1000B6FD8;
  v43 = v24;
  if (v42 != -1)
    swift_once(&qword_1000B6FD8, sub_10004765C);
  v44 = (void *)qword_1000BC8F8;
  v45 = (void *)qword_1000BC900;
  v46 = qword_1000BC908;
  v47 = &v43[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
  v48 = *(void **)&v43[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
  v66 = *(void **)&v43[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8];
  v49 = *(_QWORD *)&v43[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16];
  *(_QWORD *)v47 = qword_1000BC8F8;
  *((_QWORD *)v47 + 1) = v45;
  *((_QWORD *)v47 + 2) = v46;
  v50 = v44;
  v51 = v45;
  swift_bridgeObjectRetain_n(v46, 2);
  v64 = v50;
  v52 = v51;
  v53 = (void *)*((_QWORD *)v47 + 1);
  v54 = *((_QWORD *)v47 + 2);
  v55 = *(id *)v47;
  v56 = v53;
  swift_bridgeObjectRetain(v54);
  if ((static NSObject.== infix(_:_:)(v55) & 1) != 0 && (static NSObject.== infix(_:_:)(v56) & 1) != 0)
  {
    sub_10005B490(v54, v49);
    v58 = v57;
    swift_bridgeObjectRelease(v54);

    if ((v58 & 1) != 0)
      goto LABEL_34;
  }
  else
  {
    swift_bridgeObjectRelease(v54);

  }
  (*(void (**)(void))((swift_isaMask & *(_QWORD *)v43) + 0x228))();
LABEL_34:

  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v46);
  v59 = v43;
  sub_10007813C();
  objc_msgSend(v59, "setEnabled:", (unint64_t)sub_100004250() < 8);
  sub_100066A90();
  sub_100066C24();

  return v59;
}

void sub_1000048D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    objc_msgSend(a3, "setCompressorOn:", objc_msgSend(a3, "compressorOn") ^ 1);
    sub_10007813C();
    objc_msgSend(v6, "setEnabled:", (unint64_t)sub_100004250() < 8);
    sub_100066A90();
    sub_100066C24();

  }
}

id sub_1000049E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateCompressorButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t variable initialization expression of ClimateStepper.accessibilityIdentifierModifier()
{
  return 0;
}

uint64_t variable initialization expression of ClimateStepper.backgroundView()
{
  return 0;
}

uint64_t variable initialization expression of ClimateStepper.disableSelectedBackgroundMaterial()
{
  return 0;
}

double variable initialization expression of ClimateButton.spaceBetweenSymbolAndTitle()
{
  return 3.0;
}

uint64_t variable initialization expression of ClimateButton.accessibilityLabelShouldIncludeStates()
{
  return 1;
}

void *variable initialization expression of ClimateStepper.activeConstraints()
{
  return &_swiftEmptyArrayStorage;
}

id sub_100004A54()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "clearColor");
  v2 = objc_msgSend(v0, "systemWhiteColor");
  return v1;
}

double variable initialization expression of ClimateStepper.primaryButtonHeight()
{
  return 32.0;
}

double variable initialization expression of ClimateStepper.primaryButtonWidth()
{
  return 62.0;
}

uint64_t type metadata accessor for ClimateCompressorButton()
{
  return objc_opt_self(_TtC7Climate23ClimateCompressorButton);
}

void type metadata accessor for Axis(uint64_t a1)
{
  sub_100005470(a1, &qword_1000B7050, (uint64_t)&unk_10009DAF0);
}

void type metadata accessor for UIRectEdge(uint64_t a1)
{
  sub_100005470(a1, &qword_1000B7058, (uint64_t)&unk_10009DB10);
}

_QWORD *sub_100004B1C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_100004B2C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_100004B38(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100088B78, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_100004B74(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100088B78, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_100004BBC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  WitnessTable = swift_getWitnessTable(&unk_100088B78, a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

BOOL sub_100004C14(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100004C28(uint64_t a1, uint64_t a2)
{
  return sub_100004D04(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100004C40(uint64_t a1, uint64_t a2)
{
  return sub_100004D04(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100004C54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100004C94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  _QWORD v6[9];

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v0);
  v3 = v2;
  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, v1, v3);
  v4 = Hasher._finalize()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_100004D04(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100004D40(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_100004DB4(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_100004E30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

uint64_t sub_100004E70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_100088B78, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

uint64_t sub_100004EC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000052AC((unint64_t *)&qword_1000B7130, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100088B34);
  v3 = sub_1000052AC(&qword_1000B7138, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100088A88);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004F48(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_100004FD0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100004FF8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_10000503C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1000052AC((unint64_t *)&qword_1000B7140, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100088BE8);
  v3 = sub_1000052AC(&qword_1000B7148, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_10008892C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000050C0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000050E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100005110(uint64_t a1)
{
  uint64_t v1;

  sub_1000048D0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100005118(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

unint64_t sub_100005128()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B70C0;
  if (!qword_1000B70C0)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B70C0);
  }
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_100005470(a1, &qword_1000B70C8, (uint64_t)&unk_10009DB88);
}

uint64_t initializeBufferWithCopyOfBuffer for ClimateProgressViewColorConfig(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 initializeWithTake for ClimateProgressViewColorConfig(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000051B8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1000051D8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_100005470(a1, &qword_1000B70D0, (uint64_t)&unk_10009DC08);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_100005470(a1, &qword_1000B70D8, (uint64_t)&unk_10009DC38);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_100005470(a1, &qword_1000B70E0, (uint64_t)&unk_10009DCC0);
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
  sub_100005470(a1, &qword_1000B70E8, (uint64_t)&unk_10009DCE8);
}

uint64_t sub_100005254()
{
  return sub_1000052AC(&qword_1000B70F0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_1000888F0);
}

uint64_t sub_100005280()
{
  return sub_1000052AC(&qword_1000B70F8, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_1000888C4);
}

uint64_t sub_1000052AC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000052EC()
{
  return sub_1000052AC(&qword_1000B7100, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100088A4C);
}

uint64_t sub_100005318()
{
  return sub_1000052AC(&qword_1000B7108, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100088A20);
}

uint64_t sub_100005344()
{
  return sub_1000052AC((unint64_t *)&unk_1000B7110, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100088ABC);
}

uint64_t sub_100005370()
{
  return sub_1000052AC((unint64_t *)&qword_1000B7D20, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100088BA4);
}

uint64_t sub_10000539C()
{
  return sub_1000052AC(&qword_1000B7120, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1000889E8);
}

uint64_t sub_1000053C8()
{
  return sub_1000052AC(&qword_1000B7128, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100088960);
}

__n128 initializeWithTake for ClimateAssetImages(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_100005400(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100005420(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_100005470(a1, &qword_1000B7150, (uint64_t)&unk_10009DD68);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_100005470(a1, &qword_1000B7158, (uint64_t)&unk_10009DDE8);
}

void sub_100005470(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

char *sub_1000054DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  int v14;
  void *v15;
  id v16;
  char *v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  char *v23;
  char *v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  char *v29;
  int v30;
  void *v31;
  id v32;
  id v33;
  char *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  char v42;
  char v43;
  id v44;
  uint64_t v46;

  v2 = v1;
  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CAUPhysicalControlBarsButton(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a1, v9, v11);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v14 == enum case for CAUPhysicalControlBarsButton.temperature(_:))
  {
    v15 = *(void **)(v2 + *(int *)(type metadata accessor for ClimateZone(0) + 28));
    v16 = objc_allocWithZone((Class)type metadata accessor for ClimateTemperatureIndicator(0));
    sub_10006D0C0(v15, 1, 0x4040800000000000, 0, 5);
    v18 = v17;
    objc_msgSend(v17, "setUserInteractionEnabled:", 0);
    return v18;
  }
  if (v14 != enum case for CAUPhysicalControlBarsButton.fan(_:))
  {
    if (v14 == enum case for CAUPhysicalControlBarsButton.seatFan(_:))
    {
      v20 = *(void **)(v2 + *(int *)(type metadata accessor for ClimateZone(0) + 44));
      if (v20)
      {
        v21 = objc_allocWithZone((Class)type metadata accessor for ClimateSeatFanServiceButton());
        v22 = v20;
        v23 = sub_100032FB4(v22);
        v24 = sub_10000594C(v23, sub_1000338A0, &OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_progressView);
LABEL_12:
        v18 = v24;

        return v18;
      }
      return 0;
    }
    if (v14 == enum case for CAUPhysicalControlBarsButton.seatHeatingCooling(_:))
    {
      v25 = *(void **)(v2 + *(int *)(type metadata accessor for ClimateZone(0) + 40));
      if (v25)
      {
        v26 = objc_allocWithZone((Class)type metadata accessor for ClimateSeatHeatingCoolingServiceButton());
        v22 = v25;
        v23 = sub_10003D3A4(v22);
        v24 = sub_10000594C(v23, sub_10003DA2C, &OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_progressView);
        goto LABEL_12;
      }
      return 0;
    }
    if (v14 != enum case for CAUPhysicalControlBarsButton.deepLink(_:))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, v4);
    v27 = objc_allocWithZone((Class)type metadata accessor for ClimateDeepLinkButton());
    v28 = sub_10003C70C((uint64_t)v8);
    v29 = v28;
    v30 = v28[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
    v28[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
    if (v30 != 1)
    {
      objc_msgSend(*(id *)&v28[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView], "removeFromSuperview");
      sub_100066C24();
    }
    v31 = (void *)objc_opt_self(UIColor);
    v18 = v29;
    v32 = objc_msgSend(v31, "clearColor");
    v33 = objc_msgSend(v31, "labelColor");
    v34 = &v18[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
    v35 = *(void **)&v18[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
    v36 = *(void **)&v18[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
    v37 = *(_QWORD *)&v18[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16];
    *(_QWORD *)v34 = v32;
    *((_QWORD *)v34 + 1) = v33;
    *((_QWORD *)v34 + 2) = &_swiftEmptyDictionarySingleton;
    sub_100005128();
    v38 = v32;
    v39 = v33;
    swift_bridgeObjectRetain(&_swiftEmptyDictionarySingleton);
    v40 = v38;
    v41 = v39;
    if ((static NSObject.== infix(_:_:)(v40) & 1) != 0 && (static NSObject.== infix(_:_:)(v41) & 1) != 0)
    {
      sub_10005B490((uint64_t)&_swiftEmptyDictionarySingleton, v37);
      v43 = v42;
      swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

      if ((v43 & 1) != 0)
        goto LABEL_24;
    }
    else
    {
      swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

    }
    sub_100066C24();
LABEL_24:

    swift_bridgeObjectRelease(v37);
    v44 = objc_msgSend(v18, "layer");
    objc_msgSend(v44, "setHitTestsAsOpaque:", 1);

    return v18;
  }
  v18 = *(char **)(v2 + *(int *)(type metadata accessor for ClimateZone(0) + 32));
  if (v18)
  {
    v19 = objc_allocWithZone((Class)type metadata accessor for ClimateFanIndicator());
    return sub_1000454D0(v18);
  }
  return v18;
}

char *sub_10000594C(char *a1, void (*a2)(void), _QWORD *a3)
{
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  char v20;
  char v21;
  char *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  char v36;
  char v37;
  char v38;
  _QWORD *v39;
  char *v40;
  id v41;
  id v42;
  void *v43;
  void (*v44)(id, id, void *, void *);
  id v45;
  _QWORD *v47;

  objc_msgSend(a1, "setUserInteractionEnabled:", 0);
  v5 = &a1[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
  v6 = *(void **)&a1[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
  v7 = *(void **)&a1[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8];
  v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16];
  v9 = (void *)objc_opt_self(UIColor);
  v10 = v6;
  v11 = v7;
  swift_bridgeObjectRetain(v8);
  v12 = objc_msgSend(v9, "labelColor");
  v47 = a3;
  if (v12)
  {
    v13 = v12;

    v11 = v13;
  }
  v14 = *(void **)v5;
  v15 = (void *)*((_QWORD *)v5 + 1);
  v16 = *((_QWORD *)v5 + 2);
  *(_QWORD *)v5 = v10;
  *((_QWORD *)v5 + 1) = v11;
  *((_QWORD *)v5 + 2) = v8;
  v17 = v10;
  swift_bridgeObjectRetain_n(v8, 2);
  sub_100005128();
  v18 = v17;
  v19 = v11;
  if ((static NSObject.== infix(_:_:)(v18) & 1) == 0 || (static NSObject.== infix(_:_:)(v19) & 1) == 0)
  {
    swift_bridgeObjectRelease(v8);

    goto LABEL_8;
  }
  sub_10005B490(v8, v16);
  v21 = v20;
  swift_bridgeObjectRelease(v8);

  if ((v21 & 1) == 0)
LABEL_8:
    a2();

  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v8);
  v22 = &a1[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v23 = *(void **)&a1[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
  v24 = *(_QWORD *)&a1[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
  v25 = *(id *)&a1[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v26 = v23;
  swift_bridgeObjectRetain(v24);
  v27 = objc_msgSend(v9, "clearColor");
  if (v27)
  {
    v28 = v27;

    v25 = v28;
  }
  v29 = *(void **)v22;
  v30 = (void *)*((_QWORD *)v22 + 1);
  v31 = *((_QWORD *)v22 + 2);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v26;
  *((_QWORD *)v22 + 2) = v24;
  v32 = v26;
  swift_bridgeObjectRetain_n(v24, 2);
  v33 = v25;
  v34 = v32;
  v35 = v33;
  if ((static NSObject.== infix(_:_:)(v35) & 1) == 0 || (static NSObject.== infix(_:_:)(v34) & 1) == 0)
  {
    swift_bridgeObjectRelease(v24);

    goto LABEL_16;
  }
  sub_10005B490(v24, v31);
  v37 = v36;
  swift_bridgeObjectRelease(v24);

  if ((v37 & 1) == 0)
LABEL_16:
    a2();

  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v24);
  v38 = a1[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  a1[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if ((v38 & 1) == 0)
  {
    objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView], "removeFromSuperview");
    sub_100066C24();
    v39 = *(_QWORD **)&a1[*v47];
    v40 = &a1[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
    v41 = *(id *)&a1[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
    v42 = objc_msgSend(v41, "colorWithAlphaComponent:", 0.25);
    v43 = (void *)*((_QWORD *)v40 + 1);
    v44 = *(void (**)(id, id, void *, void *))((swift_isaMask & *v39) + 0xD0);
    v45 = v43;
    v44(v41, v42, v43, &_swiftEmptyDictionarySingleton);
  }
  return a1;
}

void sub_100005D18()
{
  void *v0;
  id v1;
  NSString v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  objc_super v21;

  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for ClimateRoleViewController();
  objc_msgSendSuper2(&v21, "viewDidLoad");
  v1 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v2);

  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = v3;
  objc_msgSend(v3, "addSubview:", v1);

  v5 = sub_100006058((uint64_t *)&unk_1000B7590);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100088C40;
  v7 = objc_msgSend(v1, "centerXAnchor");
  v8 = objc_msgSend(v0, "view");
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "centerXAnchor");

  v11 = objc_msgSend(v7, "constraintEqualToAnchor:", v10);
  *(_QWORD *)(v6 + 32) = v11;
  v12 = objc_msgSend(v1, "centerYAnchor");
  v13 = objc_msgSend(v0, "view");
  if (v13)
  {
    v14 = v13;
    v15 = (void *)objc_opt_self(NSLayoutConstraint);
    v16 = objc_msgSend(v14, "centerYAnchor");

    v17 = objc_msgSend(v12, "constraintEqualToAnchor:", v16);
    *(_QWORD *)(v6 + 40) = v17;
    specialized Array._endMutation()(v18);
    v19 = v6;
    sub_100006098();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v19);
    objc_msgSend(v15, "activateConstraints:", isa);

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_100005FF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateRoleViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateRoleViewController()
{
  return objc_opt_self(_TtC7Climate25ClimateRoleViewController);
}

uint64_t sub_100006058(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_100006098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B77A0;
  if (!qword_1000B77A0)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B77A0);
  }
  return result;
}

uint64_t sub_1000060D4()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate27ClimateDefrostServiceButton_defrost);
  v2 = objc_msgSend(v1, "level");
  v3 = objc_msgSend(v1, "levelInvalid");
  v4 = 9;
  if (!v3)
    v4 = 1;
  v5 = 8;
  if (!v3)
    v5 = 0;
  if (v2)
    return v4;
  else
    return v5;
}

unint64_t sub_100006138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v1 = type metadata accessor for CAUVehicleLayoutKey(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v14 - v6;
  v8 = *(void **)(v0 + OBJC_IVAR____TtC7Climate27ClimateDefrostServiceButton_defrost);
  v9 = sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
  CAFPositionedRequired.layoutKey.getter(v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for CAUVehicleLayoutKey.windshield_rear(_:), v1);
  v10 = sub_100006B3C();
  v11 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v4, v1, v10);
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v4, v1);
  v12(v7, v1);
  if ((v11 & 1) != 0)
    return 0xD00000000000001ELL;
  if (objc_msgSend(v8, "hasBlownAir"))
    return 0xD00000000000001FLL;
  return 0xD000000000000017;
}

char *sub_1000062AC(void *a1, unsigned __int8 a2)
{
  char *v2;
  id v5;
  id v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  int v23;
  void *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void **v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  char v41;
  char v42;
  uint64_t v43;
  char *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void **v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  char v59;
  char v60;
  char *v61;
  void *v62;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  void *v68;
  void *v69;
  char v70[24];
  char v71[24];
  objc_super v72;

  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate27ClimateDefrostServiceButton_defrost] = a1;
  v72.receiver = v2;
  v72.super_class = (Class)type metadata accessor for ClimateDefrostServiceButton();
  v5 = a1;
  v6 = objc_msgSendSuper2(&v72, "init");
  objc_msgSend(v5, "registerObserver:", v6);
  v7 = (char *)v6;
  v8 = sub_100006138();
  v10 = v9;
  v11 = (unint64_t *)&v7[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v7[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v71, 1, 0);
  v12 = *v11;
  v13 = v11[1];
  *v11 = v8;
  v11[1] = v10;
  if (v10)
  {
    if (v13)
    {
      v14 = v8 == v12 && v13 == v10;
      if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v12, v13, 0) & 1) != 0)
        goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v13)
  {
LABEL_10:
    ClimateButton.updateClimateConfiguration()();
LABEL_11:

    swift_bridgeObjectRelease(v13);
    goto LABEL_12;
  }

LABEL_12:
  v15 = swift_allocObject(&unk_10009DEF0, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v7);
  v16 = swift_allocObject(&unk_10009DF18, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v5;
  v17 = (uint64_t *)&v7[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v7[OBJC_IVAR____TtC7Climate13ClimateButton_action], v70, 1, 0);
  v18 = *v17;
  v19 = v17[1];
  *v17 = (uint64_t)sub_100006A9C;
  v17[1] = v16;
  v20 = v5;
  sub_100005118(v18, v19);
  if ((a2 | 2) == 3)
  {
    v21 = objc_msgSend(v7, "titleLabel");
    if (v21)
    {
      v22 = v21;
      if (qword_1000B7008 != -1)
        swift_once(&qword_1000B7008, sub_10006A3D0);
      objc_msgSend(v22, "setFont:", qword_1000BC9B0);

    }
    v65 = v20;
    v23 = v7[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
    v7[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
    if (v23 != 1)
    {
      v24 = *(void **)&v7[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
      v25 = v7;
      objc_msgSend(v24, "removeFromSuperview");
      sub_100066C24();

    }
    v26 = qword_1000B6FE0;
    v27 = v7;
    if (v26 != -1)
      swift_once(&qword_1000B6FE0, sub_100047678);
    v28 = (void *)qword_1000BC910;
    v29 = *(void **)algn_1000BC918;
    v30 = qword_1000BC920;
    v31 = (void **)&v27[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    v32 = *(void **)&v27[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    v66 = *(_QWORD *)&v27[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
    v68 = *(void **)&v27[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
    *v31 = (void *)qword_1000BC910;
    v31[1] = v29;
    v31[2] = (void *)v30;
    v33 = v28;
    v34 = v29;
    swift_bridgeObjectRetain_n(v30, 2);
    v64 = v33;
    v35 = v34;
    v36 = *v31;
    v37 = v31[1];
    v38 = (uint64_t)v31[2];
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v39 = v36;
    v40 = v37;
    swift_bridgeObjectRetain(v38);
    if ((static NSObject.== infix(_:_:)(v39) & 1) != 0 && (static NSObject.== infix(_:_:)(v40) & 1) != 0)
    {
      sub_10005B490(v38, v66);
      v42 = v41;
      swift_bridgeObjectRelease(v38);

      if ((v42 & 1) != 0)
      {
LABEL_27:

        swift_bridgeObjectRelease(v66);
        swift_bridgeObjectRelease(v30);
        v43 = qword_1000B6FD8;
        v44 = v27;
        if (v43 != -1)
          swift_once(&qword_1000B6FD8, sub_10004765C);
        v45 = (void *)qword_1000BC8F8;
        v46 = (void *)qword_1000BC900;
        v47 = qword_1000BC908;
        v48 = (void **)&v44[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
        v49 = *(void **)&v44[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
        v69 = *(void **)&v44[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8];
        v50 = *(_QWORD *)&v44[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16];
        *v48 = (void *)qword_1000BC8F8;
        v48[1] = v46;
        v48[2] = (void *)v47;
        v51 = v45;
        v52 = v46;
        swift_bridgeObjectRetain_n(v47, 2);
        v67 = v51;
        v53 = v52;
        v54 = *v48;
        v55 = v48[1];
        v56 = (uint64_t)v48[2];
        v57 = v54;
        v58 = v55;
        swift_bridgeObjectRetain(v56);
        if ((static NSObject.== infix(_:_:)(v57) & 1) != 0 && (static NSObject.== infix(_:_:)(v58) & 1) != 0)
        {
          sub_10005B490(v56, v50);
          v60 = v59;
          swift_bridgeObjectRelease(v56);

          if ((v60 & 1) != 0)
            goto LABEL_35;
        }
        else
        {
          swift_bridgeObjectRelease(v56);

        }
        (*(void (**)(void))((swift_isaMask & *(_QWORD *)v44) + 0x228))();
LABEL_35:

        swift_bridgeObjectRelease(v50);
        swift_bridgeObjectRelease(v47);
        v20 = v65;
        goto LABEL_36;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v38);

    }
    (*(void (**)(void))((swift_isaMask & *(_QWORD *)v27) + 0x228))();
    goto LABEL_27;
  }
LABEL_36:
  v61 = v7;
  sub_10007813C();
  v62 = *(void **)&v61[OBJC_IVAR____TtC7Climate27ClimateDefrostServiceButton_defrost];
  objc_msgSend(v62, "level");
  objc_msgSend(v61, "setEnabled:", objc_msgSend(v62, "levelInvalid") ^ 1);
  sub_100066A90();
  sub_100066C24();

  return v61;
}

void sub_100006864(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  void *v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    objc_msgSend(a3, "setLevel:", objc_msgSend(a3, "level") == 0);
    sub_10007813C();
    v7 = *(void **)&v6[OBJC_IVAR____TtC7Climate27ClimateDefrostServiceButton_defrost];
    objc_msgSend(v7, "level");
    objc_msgSend(v6, "setEnabled:", objc_msgSend(v7, "levelInvalid") ^ 1);
    sub_100066A90();
    sub_100066C24();

  }
}

void sub_100006984()
{
  uint64_t v0;

}

id sub_100006994()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateDefrostServiceButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateDefrostServiceButton()
{
  return objc_opt_self(_TtC7Climate27ClimateDefrostServiceButton);
}

uint64_t sub_100006A4C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100006A70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100006A9C(uint64_t a1)
{
  uint64_t v1;

  sub_100006864(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_100006AA4()
{
  char *v0;
  void *v1;

  sub_10007813C();
  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate27ClimateDefrostServiceButton_defrost];
  objc_msgSend(v1, "level");
  objc_msgSend(v0, "setEnabled:", objc_msgSend(v1, "levelInvalid") ^ 1);
  sub_100066A90();
  return sub_100066C24();
}

uint64_t sub_100006B04(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_100006B3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7340;
  if (!qword_1000B7340)
  {
    v1 = type metadata accessor for CAUVehicleLayoutKey(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CAUVehicleLayoutKey, v1);
    atomic_store(result, (unint64_t *)&qword_1000B7340);
  }
  return result;
}

void **sub_100006B84(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  id v19;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for CAUVehicleLayout(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = (void **)((char *)v7 + v14);
    v16 = (char *)a2 + v14;
    v17 = *(void **)v16;
    v18 = *((_QWORD *)v16 + 1);
    *v15 = *(_QWORD *)v16;
    v15[1] = v18;
    v19 = v17;
    swift_bridgeObjectRetain(v18);
  }
  return v7;
}

uint64_t sub_100006C48(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for CAUVehicleLayout(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);

  return swift_bridgeObjectRelease(*((_QWORD *)v6 + 1));
}

void **sub_100006CB0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for CAUVehicleLayout(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (void **)((char *)a1 + v13);
  v15 = (char *)a2 + v13;
  v16 = *(void **)v15;
  v17 = *((_QWORD *)v15 + 1);
  *v14 = *(_QWORD *)v15;
  v14[1] = v17;
  v18 = v16;
  swift_bridgeObjectRetain(v17);
  return a1;
}

void **sub_100006D4C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for CAUVehicleLayout(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(void **)((char *)a2 + v13);
  v17 = *(void **)v14;
  *(_QWORD *)v14 = v16;
  v18 = v16;

  v19 = *((_QWORD *)v15 + 1);
  v20 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v14 + 1) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  return a1;
}

_QWORD *sub_100006DFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for CAUVehicleLayout(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void **sub_100006E74(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void **v13;
  void *v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for CAUVehicleLayout(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (void **)((char *)a2 + v11);
  v14 = *(void **)((char *)a1 + v11);
  *(void **)((char *)a1 + v11) = *v13;

  v15 = *((_QWORD *)v12 + 1);
  *((_QWORD *)v12 + 1) = v13[1];
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_100006F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100006F20);
}

uint64_t sub_100006F20(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for CAUVehicleLayout(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100006F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100006FA8);
}

char *sub_100006FA8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for CAUVehicleLayout(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ClimateAssets(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B7408;
  if (!qword_1000B7408)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateAssets);
  return result;
}

uint64_t sub_100007058(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for CAUVehicleLayout(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100088CC8;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1000070D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v31;
  _QWORD *v32;

  v5 = type metadata accessor for CAUResource(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CAUVehicleLayout(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v31 - v15;
  v17 = dispatch thunk of CAUAssetLibraryManager.assetLibrary.getter(v14);
  if (v17)
  {
    v18 = (void *)v17;
    v32 = a2;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for CAUResource.vehicleLayout(_:), v5);
    v19 = sub_100007624();
    dispatch thunk of CAUAssetLibrary.asset<A>(for:)(v8, v9, v19);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22(v16, v12, v9);
    v23 = v18;
    swift_bridgeObjectRetain(a1);
    v24 = sub_10000766C(v23, a1);
    v26 = v25;
    v27 = type metadata accessor for ClimateAssets(0);
    v28 = v32;
    v22((char *)v32 + *(int *)(v27 + 20), v16, v9);
    *v28 = v23;
    v29 = (_QWORD *)((char *)v28 + *(int *)(v27 + 24));
    *v29 = v24;
    v29[1] = v26;
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v28, 0, 1, v27);
  }
  else
  {
    v20 = static os_log_type_t.error.getter(0);
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    os_log(_:dso:log:_:_:)(v20, &_mh_execute_header, qword_1000BC938, "no assetLibrary available", 25, 2, _swiftEmptyArrayStorage);
    v21 = type metadata accessor for ClimateAssets(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
  }
}

unint64_t sub_100007624()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7448;
  if (!qword_1000B7448)
  {
    v1 = type metadata accessor for CAUVehicleLayout(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CAUVehicleLayout, v1);
    atomic_store(result, (unint64_t *)&qword_1000B7448);
  }
  return result;
}

uint64_t sub_10000766C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, _QWORD, uint64_t, __n128);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  _QWORD *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  unsigned int v54;
  unsigned int v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(char *, _QWORD, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;

  v52 = a2;
  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  v60 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v63 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CAUResource(0, v5);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v50 - v13;
  v15 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104);
  v15((char *)&v50 - v13, enum case for CAUResource.cabin(_:), v7, v12);
  v16 = CAUAssetLibrary.asset(for:)(v14);
  v17 = v2;
  if (v2)
  {

    swift_bridgeObjectRelease(v52);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    return (uint64_t)v14;
  }
  v18 = (void *)v16;
  v57 = (void (*)(char *, _QWORD, uint64_t))v15;
  v58 = v7;
  v59 = v10;
  v56 = *(void (**)(char *, uint64_t))(v8 + 8);
  v56(v14, v7);
  v14 = v18;
  v19 = sub_100023AB0((uint64_t)_swiftEmptyArrayStorage);
  v20 = v52;
  v66 = v19;
  v21 = *(_QWORD *)(v52 + 16);
  if (!v21)
  {
LABEL_19:

    swift_bridgeObjectRelease(v20);
    return (uint64_t)v14;
  }
  v51 = v14;
  v22 = v52 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
  v61 = *(_QWORD *)(v60 + 72);
  v55 = enum case for CAUAsset.Seat.State.selected(_:);
  v54 = enum case for CAUResource.seat(_:);
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
  v23 = swift_bridgeObjectRetain(v52);
  v24 = v58;
  v25 = v59;
  v26 = v63;
  v53 = a1;
  while (1)
  {
    v65 = v21;
    v28 = v4;
    v29 = v4;
    v30 = v62;
    ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v62)(v26, v22, v28, v23);
    v31 = &v25[*(int *)(sub_100006058(&qword_1000B7450) + 48)];
    v30(v25, v22, v29);
    v32 = type metadata accessor for CAUAsset.Seat.State(0);
    (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v55, v32);
    v57(v25, v54, v24);
    v33 = CAUAssetLibrary.asset(for:)(v25);
    if (v17)
    {
      v56(v25, v24);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v26, v29);

      v14 = v51;
      swift_bridgeObjectRelease_n(v52, 2);
      swift_bridgeObjectRelease(v66);
      return (uint64_t)v14;
    }
    v34 = v33;
    v64 = 0;
    v56(v25, v24);
    v35 = (_QWORD *)v66;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v66);
    v67 = v35;
    v38 = sub_10005B798(v26);
    v39 = v35[2];
    v40 = (v37 & 1) == 0;
    v41 = v39 + v40;
    if (__OFADD__(v39, v40))
      break;
    v42 = v37;
    if (v35[3] >= v41)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_10002B280();
    }
    else
    {
      sub_100029584(v41, isUniquelyReferenced_nonNull_native);
      v43 = sub_10005B798(v63);
      if ((v42 & 1) != (v44 & 1))
        goto LABEL_23;
      v38 = v43;
    }
    v4 = v29;
    v45 = v67;
    v26 = v63;
    v25 = v59;
    v66 = (unint64_t)v67;
    if ((v42 & 1) != 0)
    {
      v27 = v67[7];

      *(_QWORD *)(v27 + 8 * v38) = v34;
    }
    else
    {
      v67[(v38 >> 6) + 8] |= 1 << v38;
      v62((char *)(v45[6] + v38 * v61), v26, v29);
      *(_QWORD *)(v45[7] + 8 * v38) = v34;
      v46 = v45[2];
      v47 = __OFADD__(v46, 1);
      v48 = v46 + 1;
      if (v47)
        goto LABEL_22;
      v45[2] = v48;
    }
    swift_bridgeObjectRelease(0x8000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v26, v29);
    v22 += v61;
    v17 = v64;
    v21 = v65 - 1;
    a1 = v53;
    v24 = v58;
    if (v65 == 1)
    {
      v20 = v52;
      swift_bridgeObjectRelease(v52);
      v14 = v51;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v29);
  __break(1u);
  return result;
}

uint64_t sub_100007AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a3 + 16))
  {
    v10 = sub_10005B798(a1);
    if ((v11 & 1) != 0)
      return *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v10);
  }
  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v12 = qword_1000BC938;
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v12, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v24 = a2;
    v17 = v16;
    v26 = v16;
    *(_DWORD *)v15 = 136315138;
    v18 = CAUVehicleLayoutKey.rawValue.getter(v16);
    v20 = v19;
    v25 = sub_10005DB58(v18, v19, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl((void *)&_mh_execute_header, v12, v14, "Missing selected zone asset for %s", v15, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    v21 = v17;
    a2 = v24;
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for ClimateAssetImages(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t destroy for ClimateAssetImages(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t assignWithCopy for ClimateAssetImages(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for ClimateAssetImages(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClimateAssetImages(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClimateAssetImages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClimateAssetImages()
{
  return &type metadata for ClimateAssetImages;
}

void sub_100007E30()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void **v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  char v25;
  char v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id *v30;
  id v31;
  id v32;
  id v33;
  unsigned int v34;
  unsigned int v35;
  char v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  _BYTE v45[24];

  v1 = (void *)objc_opt_self(UIApplication);
  v2 = v0;
  v3 = objc_msgSend(v1, "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (v4)
  {
    v5 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
    v6 = (unsigned __int8 *)sub_10006B490();
    swift_unknownObjectRelease(v4);
    v7 = v6[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

    v8 = objc_allocWithZone((Class)type metadata accessor for ClimateZoneTargetTemperatureStepper(0));
    v9 = sub_10001C6FC(v2, v7, 2);
    objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v10 = qword_1000B6FC8;
    v11 = v9;
    if (v10 != -1)
      swift_once(&qword_1000B6FC8, sub_1000475D0);
    v12 = (void *)qword_1000BC8C8;
    v13 = (void *)qword_1000BC8D0;
    v14 = qword_1000BC8D8;
    v15 = (void **)&v11[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig];
    v16 = *(void **)&v11[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig];
    v17 = *(void **)&v11[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 8];
    v44 = *(_QWORD *)&v11[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 16];
    *v15 = (void *)qword_1000BC8C8;
    v15[1] = v13;
    v15[2] = (void *)v14;
    v18 = v12;
    v19 = v13;
    swift_bridgeObjectRetain_n(v14, 2);
    v42 = v18;
    v40 = v19;
    v20 = *v15;
    v21 = v15[1];
    v22 = (uint64_t)v15[2];
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v23 = v20;
    v24 = v21;
    swift_bridgeObjectRetain(v22);
    if ((static NSObject.== infix(_:_:)(v23) & 1) != 0 && (static NSObject.== infix(_:_:)(v24) & 1) != 0)
    {
      sub_10005B490(v22, v44);
      v26 = v25;
      swift_bridgeObjectRelease(v22);

      if ((v26 & 1) != 0)
      {

LABEL_22:
        swift_bridgeObjectRelease(v44);

        swift_bridgeObjectRelease(v14);
        v38 = sub_100006058(&qword_1000B7460);
        v39 = swift_allocObject(v38, 48, 7);
        *(_OWORD *)(v39 + 16) = xmmword_100088D00;
        *(_QWORD *)(v39 + 32) = v11;
        *(_QWORD *)(v39 + 40) = &off_10009F4B8;
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v22);

    }
    if (v11[OBJC_IVAR____TtC7Climate14ClimateStepper_disableSelectedBackgroundMaterial] != 1)
    {
      v37 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor", v40, v42);
LABEL_21:
      objc_msgSend(v11, "setBackgroundColor:", v37);

      goto LABEL_22;
    }
    v27 = *v15;
    v28 = v15[1];
    v29 = (uint64_t)v15[2];
    v30 = (id *)&v11[OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature];
    swift_beginAccess(&v11[OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature], v45, 0, 0);
    v31 = *v30;
    v32 = v27;
    v33 = v28;
    swift_bridgeObjectRetain(v29);
    LODWORD(v27) = objc_msgSend(v31, "targetTemperatureRestricted", v40, v42);
    v34 = objc_msgSend(*v30, "targetTemperatureInvalid");
    v35 = objc_msgSend(*v30, "targetTemperatureDisabled");
    if ((_DWORD)v27)
    {
      v36 = 4;
      if (v34)
        v36 = 12;
      if ((v35 & 1) == 0)
        goto LABEL_20;
    }
    else
    {
      v36 = 8;
      if (!v34)
        v36 = 0;
      if (!v35)
        goto LABEL_20;
    }
    v36 |= 0x10u;
LABEL_20:
    v37 = sub_1000477D8(v36, v32, v29);
    swift_bridgeObjectRelease(v29);

    goto LABEL_21;
  }
  __break(1u);
}

void sub_1000081FC()
{
  sub_100007E30();
}

void sub_10000821C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for CAUVehicleLayoutKey(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v10 = objc_msgSend(v9, "delegate");

  if (v10)
  {
    v11 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v10, v11, 0, 0, 0);
    v12 = sub_10006B490();
    swift_unknownObjectRelease(v10);
    KeyPath = swift_getKeyPath(&unk_100088D10);
    v14 = swift_getKeyPath(&unk_100088D38);
    static Published.subscript.getter(v12, KeyPath, v14);

    swift_release(KeyPath);
    swift_release(v14);
    v15 = type metadata accessor for ClimateSystemManager(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v8, 1, v15) == 1)
    {
      sub_100008B88((uint64_t)v8, (uint64_t *)&unk_1000BA180);
      v16 = type metadata accessor for ClimateZone(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
    }
    else
    {
      v17 = sub_100006B04(0, &qword_1000B7458, CAFTemperature_ptr);
      CAFPositionedRequired.layoutKey.getter(v17);
      v18 = *(_QWORD *)&v8[*(int *)(v15 + 36)];
      if (*(_QWORD *)(v18 + 16) && (v19 = sub_10005B798((uint64_t)v5), (v20 & 1) != 0))
      {
        v21 = v19;
        v22 = *(_QWORD *)(v18 + 56);
        v23 = type metadata accessor for ClimateZone(0);
        v24 = *(_QWORD *)(v23 - 8);
        sub_100008C1C(v22 + *(_QWORD *)(v24 + 72) * v21, a1);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
      }
      else
      {
        v25 = type metadata accessor for ClimateZone(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 1, 1, v25);
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_100008BC4((uint64_t)v8);
    }
  }
  else
  {
    __break(1u);
  }
}

void CAFTemperature.zoneSynced.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  char *v18;
  id v19;
  unsigned int *v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  id v26;
  id v27;
  id v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  id v41;

  v0 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v0);
  v40 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100006058(&qword_1000B8D00);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CAUVehicleLayoutKey(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v39 - v10;
  v41 = (id)objc_opt_self(UIApplication);
  v12 = objc_msgSend(v41, "sharedApplication");
  v13 = objc_msgSend(v12, "delegate");

  if (!v13)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  v14 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v13, v14, 0, 0, 0);
  v15 = (char *)sub_10006B490();
  swift_unknownObjectRelease(v13);
  v16 = objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC7Climate18ClimateCoordinator_sessionStatus], "currentSession");
  if (v16)
  {
    v17 = v16;
    v18 = v9;
    v19 = objc_msgSend(v16, "configuration");

    LOBYTE(v17) = objc_msgSend(v19, "rightHandDrive");
    v9 = v18;
    if ((v17 & 1) != 0)
    {
      v20 = (unsigned int *)&enum case for CAUVehicleLayoutKey.seat_front_right(_:);
      goto LABEL_7;
    }
  }
  else
  {

  }
  v20 = (unsigned int *)&enum case for CAUVehicleLayoutKey.seat_front_left(_:);
LABEL_7:
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v11, *v20, v5);
  v21 = sub_100006B04(0, &qword_1000B7458, CAFTemperature_ptr);
  CAFPositioned.layoutKey.getter(v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    v22 = &qword_1000B8D00;
LABEL_9:
    sub_100008B88((uint64_t)v4, v22);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  v23 = sub_100006B3C();
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v11, v9, v5, v23) & 1) != 0)
  {
    v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v9, v5);
LABEL_12:
    v24(v11, v5);
    return;
  }
  v25 = v9;
  v26 = objc_msgSend(v41, "sharedApplication");
  v27 = objc_msgSend(v26, "delegate");

  if (!v27)
    goto LABEL_20;
  swift_dynamicCastClassUnconditional(v27, v14, 0, 0, 0);
  v28 = sub_10006B490();
  swift_unknownObjectRelease(v27);
  KeyPath = swift_getKeyPath(&unk_100088D10);
  v30 = swift_getKeyPath(&unk_100088D38);
  v4 = v40;
  static Published.subscript.getter(v28, KeyPath, v30);

  swift_release(KeyPath);
  swift_release(v30);
  v31 = type metadata accessor for ClimateSystemManager(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v4, 1, v31) == 1)
  {
    v32 = *(void (**)(char *, uint64_t))(v6 + 8);
    v32(v25, v5);
    v32(v11, v5);
    v22 = (uint64_t *)&unk_1000BA180;
    goto LABEL_9;
  }
  v33 = *((id *)v4 + 1);
  sub_100008BC4((uint64_t)v4);
  v34 = objc_msgSend(v33, "zonesSynceds");

  if (!v34)
  {
    v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v25, v5);
    goto LABEL_12;
  }
  v35 = sub_100006B04(0, (unint64_t *)&qword_1000B7B40, CAFZonesSynced_ptr);
  v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v35);

  __chkstk_darwin(v37);
  *(&v39 - 2) = (uint64_t)v25;
  sub_10000897C((uint64_t (*)(id *))sub_100008C00, (uint64_t)(&v39 - 4), v36);
  swift_bridgeObjectRelease(v36);
  v38 = *(void (**)(char *, uint64_t))(v6 + 8);
  v38(v25, v5);
  v38(v11, v5);
}

void *sub_10000897C(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  id v15;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v8 = 4;
    while (1)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a3)
         : *(id *)(a3 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v15 = v9;
      v12 = a1(&v15);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v10;
      }
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        return v10;
      }

      ++v8;
      if (v11 == v7)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  return 0;
}

uint64_t sub_100008A9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = *a1;
  KeyPath = swift_getKeyPath(&unk_100088D10);
  v3 = swift_getKeyPath(&unk_100088D38);
  static Published.subscript.getter(v1, KeyPath, v3);
  swift_release(KeyPath);
  return swift_release(v3);
}

uint64_t sub_100008B08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008C60(a1, (uint64_t)v4);
  return sub_100024C6C((uint64_t)v4);
}

uint64_t sub_100008B88(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100006058(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100008BC4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClimateSystemManager(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100008C00()
{
  return sub_10005EB50() & 1;
}

uint64_t sub_100008C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClimateZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100008C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058((uint64_t *)&unk_1000BA180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100008CA8(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void *v19;
  objc_class *v20;
  id v21;
  uint64_t v22;
  char *v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54[3];
  objc_super v55;

  v3 = sub_100006058((uint64_t *)&unk_1000B7B60);
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006058(&qword_1000B74A0);
  v47 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006058((uint64_t *)&unk_1000B7B70);
  v48 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006058(&qword_1000B74A8);
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100006058(&qword_1000B74B0);
  v52 = *(_QWORD *)(v15 - 8);
  v53 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v1;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v19 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v19 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v18[OBJC_IVAR____TtC7Climate40ClimatePhysicalControlBarsViewController_cancellables] = v19;
  *(_QWORD *)&v18[OBJC_IVAR____TtC7Climate40ClimatePhysicalControlBarsViewController_physicalControls] = a1;

  v20 = (objc_class *)type metadata accessor for ClimatePhysicalControlBarsViewController();
  v55.receiver = v18;
  v55.super_class = v20;
  v21 = objc_msgSendSuper2(&v55, "initWithNibName:bundle:", 0, 0);
  v22 = qword_1000B6FE8;
  v23 = (char *)v21;
  v24 = v23;
  if (v22 != -1)
    v23 = (char *)swift_once(&qword_1000B6FE8, sub_10005CB60);
  v25 = qword_1000BC938;
  v26 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Physical control bars created", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }
  v28 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v29 = objc_msgSend(v28, "delegate");

  if (v29)
  {
    v30 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v29, v30, 0, 0, 0);
    v31 = (char *)sub_10006B490();
    swift_unknownObjectRelease(v29);
    swift_beginAccess(&v31[OBJC_IVAR____TtC7Climate18ClimateCoordinator__climateSystem], v54, 33, 0);
    v32 = sub_100006058(&qword_1000B74B8);
    Published.projectedValue.getter(v32);
    swift_endAccess(v54);

    v54[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v33 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v5, 1, 1, v33);
    v34 = sub_100006B04(0, (unint64_t *)&unk_1000B7B80, NSRunLoop_ptr);
    v35 = sub_10000AA10(&qword_1000B74C0, &qword_1000B74A0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v36 = sub_10000A98C();
    Publisher.receive<A>(on:options:)(v54, v5, v6, v34, v35, v36);
    sub_100008B88((uint64_t)v5, (uint64_t *)&unk_1000B7B60);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v6);
    v37 = type metadata accessor for ClimateSystemManager(0);
    v38 = sub_10000AA10(&qword_1000B74C8, (uint64_t *)&unk_1000B7B70, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v39 = v49;
    Publisher.compactMap<A>(_:)(sub_100009238, 0, v49, v37, v38);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v39);
    v40 = sub_10000AA10(&qword_1000B74D0, &qword_1000B74A8, (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
    v41 = v51;
    Publisher.filter(_:)(sub_100009258, 0, v51, v40);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v41);
    v42 = swift_allocObject(&unk_10009DFF0, 24, 7);
    swift_unknownObjectWeakInit(v42 + 16, v24);
    v43 = sub_10000AA10(&qword_1000B74D8, &qword_1000B74B0, (uint64_t)&protocol conformance descriptor for Publishers.Filter<A>);
    v44 = v53;
    v45 = Publisher<>.sink(receiveValue:)(sub_10000AA08, v42, v53, v43);
    swift_release(v42);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v44);
    v46 = &v24[OBJC_IVAR____TtC7Climate40ClimatePhysicalControlBarsViewController_cancellables];
    swift_beginAccess(&v24[OBJC_IVAR____TtC7Climate40ClimatePhysicalControlBarsViewController_cancellables], v54, 33, 0);
    AnyCancellable.store(in:)(v46);
    swift_endAccess(v54);
    swift_release(v45);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100009238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10000AA50(a1, a2, (uint64_t *)&unk_1000BA180);
}

uint64_t sub_100009258(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  _BOOL8 v14;
  uint64_t v16;

  v2 = type metadata accessor for ClimateSystemManager(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006058((uint64_t *)&unk_1000B7C40);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v16 - v9;
  sub_10000AA50(a1 + *(int *)(v2 + 28), (uint64_t)&v16 - v9, (uint64_t *)&unk_1000B7C40);
  v11 = type metadata accessor for ClimateZone(0);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  v13 = v12(v10, 1, v11);
  sub_100008B88((uint64_t)v10, (uint64_t *)&unk_1000B7C40);
  sub_10000AAD8(a1, (uint64_t)v4, type metadata accessor for ClimateSystemManager);
  if (v13 == 1)
  {
    sub_10000AA50((uint64_t)&v4[*(int *)(v2 + 32)], (uint64_t)v8, (uint64_t *)&unk_1000B7C40);
    sub_10000AB60((uint64_t)v4, type metadata accessor for ClimateSystemManager);
    v14 = v12(v8, 1, v11) != 1;
    sub_100008B88((uint64_t)v8, (uint64_t *)&unk_1000B7C40);
  }
  else
  {
    sub_10000AB60((uint64_t)v4, type metadata accessor for ClimateSystemManager);
    return 1;
  }
  return v14;
}

void sub_1000093FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  char *v9;
  _BYTE *v10;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100009EF4(a1);
    v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v7 = objc_msgSend(v6, "delegate");

    if (v7)
    {
      v8 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0);
      v9 = (char *)sub_10006B490();
      swift_unknownObjectRelease(v7);
      v10 = *(id *)&v9[OBJC_IVAR____TtC7Climate18ClimateCoordinator_signpostManager];

      v10[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_overlayViewControllerDidLoad] = 1;
      sub_10007012C();

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000095C4(void *a1)
{
  void *v1;
  id v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __objc2_prot **v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  double v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  double v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v2 = v1;
  v4 = (_QWORD *)type metadata accessor for CAUEdge(0);
  v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  v7 = (__objc2_prot **)((char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v9 = objc_msgSend(v8, "delegate");

  if (!v9)
    goto LABEL_65;
  v10 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0);
  v11 = sub_10006B490();
  swift_unknownObjectRelease(v9);
  v12 = sub_100024314();

  if (qword_1000B6FE8 != -1)
    v13 = swift_once(&qword_1000B6FE8, sub_10005CB60);
  v14 = qword_1000BC938;
  v15 = static os_log_type_t.default.getter(v13);
  v16 = os_log_type_enabled(v14, v15);
  if ((_DWORD)v16)
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v17 = 134217984;
    v83 = *(_QWORD *)&v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v17 + 4, v17 + 12);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Applying constraints to physical control bar items with screen scale: %f", v17, 0xCu);
    v16 = swift_slowDealloc(v17, -1, -1);
  }
  v18 = (double)(int)CAUPhysicalControlBarsButtonLayoutInfo.startingPoint.getter(v16) / v12;
  v19 = (double)(int)CAUPhysicalControlBarsButtonLayoutInfo.length.getter() / v12;
  v20 = sub_100006058((uint64_t *)&unk_1000B7590);
  v21 = swift_allocObject(v20, 48, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100088C40;
  v22 = objc_msgSend(a1, "widthAnchor");
  v23 = v22;
  if (v19 <= 45.0)
    v24 = v19;
  else
    v24 = 45.0;
  v25 = objc_msgSend(v22, "constraintEqualToConstant:", v24);

  *(_QWORD *)(v21 + 32) = v25;
  v26 = objc_msgSend(a1, "heightAnchor");
  v27 = objc_msgSend(v26, "constraintEqualToConstant:", 45.0);

  *(_QWORD *)(v21 + 40) = v27;
  v83 = v21;
  v29 = specialized Array._endMutation()(v28);
  CAUPhysicalControlBarsButtonLayoutInfo.edge.getter(v29);
  LODWORD(v30) = (*(uint64_t (**)(__objc2_prot **, _QWORD *))(v5 + 88))(v7, v4);
  if ((_DWORD)v30 == enum case for CAUEdge.top(_:))
  {
    v31 = objc_msgSend(a1, "leftAnchor");
    v32 = objc_msgSend(v2, "view");
    if (!v32)
    {
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    v33 = v32;
    v34 = objc_msgSend(v32, "leftAnchor");

    v4 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v34, v18);
    v7 = &off_1000AA000;
    v35 = objc_msgSend(a1, "topAnchor");
    v36 = objc_msgSend(v2, "view");
    if (!v36)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v37 = v36;
    v38 = objc_msgSend(v36, "topAnchor");

    v2 = objc_msgSend(v35, "constraintEqualToAnchor:", v38);
    v39 = v83;
    if ((unint64_t)v83 >> 62)
    {
      if (v83 < 0)
        v77 = v83;
      else
        v77 = v83 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v83);
      a1 = (void *)_CocoaArrayWrapper.endIndex.getter(v77);
      swift_bridgeObjectRelease(v39);
      v30 = (uint64_t)a1 + 2;
      if (!__OFADD__(a1, 2))
        goto LABEL_35;
    }
    else
    {
      a1 = *(void **)((v83 & 0xFFFFFFFFFFFFF8) + 0x10);
      v30 = (uint64_t)a1 + 2;
      if (!__OFADD__(a1, 2))
        goto LABEL_35;
    }
    __break(1u);
  }
  if ((_DWORD)v30 == enum case for CAUEdge.left(_:))
  {
    v40 = objc_msgSend(a1, "topAnchor");
    v41 = objc_msgSend(v2, "view");
    if (!v41)
    {
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    v42 = v41;
    v43 = objc_msgSend(v41, "topAnchor");

    v4 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v43, v18);
    v7 = &off_1000AA000;
    v44 = objc_msgSend(a1, "leftAnchor");
    v45 = objc_msgSend(v2, "view");
    if (!v45)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v46 = v45;
    v47 = objc_msgSend(v45, "leftAnchor");

    v2 = objc_msgSend(v44, "constraintEqualToAnchor:", v47);
    v48 = v83;
    if ((unint64_t)v83 >> 62)
    {
      if (v83 < 0)
        v78 = v83;
      else
        v78 = v83 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v83);
      a1 = (void *)_CocoaArrayWrapper.endIndex.getter(v78);
      swift_bridgeObjectRelease(v48);
      v30 = (uint64_t)a1 + 2;
      if (!__OFADD__(a1, 2))
        goto LABEL_35;
    }
    else
    {
      a1 = *(void **)((v83 & 0xFFFFFFFFFFFFF8) + 0x10);
      v30 = (uint64_t)a1 + 2;
      if (!__OFADD__(a1, 2))
        goto LABEL_35;
    }
    __break(1u);
  }
  if ((_DWORD)v30 == enum case for CAUEdge.bottom(_:))
  {
    v49 = objc_msgSend(a1, "leftAnchor");
    v50 = objc_msgSend(v2, "view");
    if (!v50)
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    v51 = v50;
    v52 = objc_msgSend(v50, "leftAnchor");

    v4 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v52, v18);
    v7 = &off_1000AA000;
    v53 = objc_msgSend(a1, "bottomAnchor");
    v54 = objc_msgSend(v2, "view");
    if (!v54)
    {
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    v55 = v54;
    v56 = objc_msgSend(v54, "bottomAnchor");

    v2 = objc_msgSend(v53, "constraintEqualToAnchor:", v56);
    v57 = v83;
    if ((unint64_t)v83 >> 62)
    {
      if (v83 < 0)
        v79 = v83;
      else
        v79 = v83 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v83);
      a1 = (void *)_CocoaArrayWrapper.endIndex.getter(v79);
      swift_bridgeObjectRelease(v57);
      v30 = (uint64_t)a1 + 2;
      if (!__OFADD__(a1, 2))
        goto LABEL_35;
    }
    else
    {
      a1 = *(void **)((v83 & 0xFFFFFFFFFFFFF8) + 0x10);
      v30 = (uint64_t)a1 + 2;
      if (!__OFADD__(a1, 2))
        goto LABEL_35;
    }
    __break(1u);
  }
  if ((_DWORD)v30 != enum case for CAUEdge.right(_:))
  {
    (*(void (**)(__objc2_prot **, _QWORD *))(v5 + 8))(v7, v4);
    return;
  }
  v58 = objc_msgSend(a1, "topAnchor");
  v59 = objc_msgSend(v2, "view");
  if (!v59)
    goto LABEL_72;
  v60 = v59;
  v61 = objc_msgSend(v59, "topAnchor");

  v4 = objc_msgSend(v58, "constraintEqualToAnchor:constant:", v61, v18);
  v62 = objc_msgSend(a1, "rightAnchor");
  v63 = objc_msgSend(v2, "view");
  if (!v63)
  {
LABEL_73:
    __break(1u);
    return;
  }
  v64 = v63;
  v65 = objc_msgSend(v63, "rightAnchor");

  v2 = objc_msgSend(v62, "constraintEqualToAnchor:", v65);
  v66 = v83;
  if ((unint64_t)v83 >> 62)
  {
    if (v83 < 0)
      v80 = v83;
    else
      v80 = v83 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v83);
    v81 = _CocoaArrayWrapper.endIndex.getter(v80);
    swift_bridgeObjectRelease(v66);
    v30 = v81 + 2;
    if (!__OFADD__(v81, 2))
      goto LABEL_35;
    goto LABEL_64;
  }
  v67 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10);
  v30 = v67 + 2;
  if (__OFADD__(v67, 2))
  {
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
LABEL_35:
  v68 = sub_1000761FC(v30, 1);
  specialized Array._endMutation()(v68);
  v69 = v4;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
  v71 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v70 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v71 >= v70 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
  v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v69);
  specialized Array._endMutation()(v72);
  v73 = v2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v73);
  v75 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v74 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v75 >= v74 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v74 > 1, v75 + 1, 1);
  v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v75, v73);
  specialized Array._endMutation()(v76);

}

id sub_100009EF4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  Class isa;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  id result;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  int64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  int64_t v81;
  char *v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  objc_class *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  int64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int64_t v100;
  uint64_t v101;
  uint64_t v102;

  v3 = type metadata accessor for ClimateZone(0);
  v92 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v91 = (uint64_t)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v95 = (uint64_t)&v76 - v7;
  v8 = type metadata accessor for CAUPhysicalControlBarsButtonLayoutInfo(0, v6);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CAUPhysicalControlBarsButton(0, v10);
  v101 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v102 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100006058(&qword_1000B74E0);
  __chkstk_darwin(v15);
  v99 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v76 - v18;
  isa = (Class)type metadata accessor for CAUVehicleLayoutKey(0);
  v87 = *((_QWORD *)isa - 1);
  __chkstk_darwin(isa);
  v96 = (uint64_t)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100006058(&qword_1000B74E8);
  __chkstk_darwin(v22);
  v82 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v25 = __chkstk_darwin(v24).n128_u64[0];
  v27 = (uint64_t)&v76 - v26;
  v93 = v1;
  result = objc_msgSend(v1, "view", v25);
  if (!result)
    goto LABEL_76;
  v29 = result;
  v30 = objc_msgSend(result, "subviews");

  v31 = sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
  v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);

  if ((unint64_t)v32 >> 62)
    goto LABEL_71;
  v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
  result = (id)swift_bridgeObjectRelease(v32);
  if (v33)
    return result;
  v34 = *(_QWORD *)&v93[OBJC_IVAR____TtC7Climate40ClimatePhysicalControlBarsViewController_physicalControls];
  v35 = *(_QWORD *)(v34 + 64);
  v78 = v34 + 64;
  v36 = 1 << *(_BYTE *)(v34 + 32);
  if (v36 < 64)
    v37 = ~(-1 << v36);
  else
    v37 = -1;
  v32 = v37 & v35;
  v79 = (unint64_t)(v36 + 63) >> 6;
  v77 = v79 - 1;
  v80 = v34;
  result = (id)swift_bridgeObjectRetain(v34);
  v83 = 0;
  v84 = v27;
  v38 = v101;
  v98 = v19;
  v88 = v13;
  v89 = v9;
  v86 = isa;
LABEL_10:
  if (!v32)
  {
    v45 = v83 + 1;
    if (__OFADD__(v83, 1))
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v41 = (uint64_t)v82;
    if (v45 >= v79)
    {
LABEL_30:
      isa = (Class)&qword_1000B74F0;
      v48 = sub_100006058(&qword_1000B74F0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v41, 1, 1, v48);
      v85 = 0;
      goto LABEL_31;
    }
    v46 = *(_QWORD *)(v78 + 8 * v45);
    if (v46)
      goto LABEL_16;
    v47 = v83 + 2;
    ++v83;
    if (v45 + 1 >= v79)
      goto LABEL_30;
    v46 = *(_QWORD *)(v78 + 8 * v47);
    if (v46)
      goto LABEL_19;
    v83 = v45 + 1;
    if (v45 + 2 >= v79)
      goto LABEL_30;
    v46 = *(_QWORD *)(v78 + 8 * (v45 + 2));
    if (v46)
    {
      v45 += 2;
      goto LABEL_16;
    }
    v47 = v45 + 3;
    v83 = v45 + 2;
    if (v45 + 3 >= v79)
      goto LABEL_30;
    v46 = *(_QWORD *)(v78 + 8 * v47);
    if (v46)
    {
LABEL_19:
      v45 = v47;
LABEL_16:
      v85 = (v46 - 1) & v46;
      v39 = __clz(__rbit64(v46)) + (v45 << 6);
      v83 = v45;
      goto LABEL_12;
    }
    while (1)
    {
      v45 = v47 + 1;
      if (__OFADD__(v47, 1))
        break;
      if (v45 >= v79)
      {
        v83 = v77;
        goto LABEL_30;
      }
      v46 = *(_QWORD *)(v78 + 8 * v45);
      ++v47;
      if (v46)
        goto LABEL_16;
    }
    __break(1u);
LABEL_76:
    __break(1u);
    return result;
  }
  v85 = (v32 - 1) & v32;
  v39 = __clz(__rbit64(v32)) | (v83 << 6);
LABEL_12:
  v40 = v80;
  v41 = (uint64_t)v82;
  (*(void (**)(char *, unint64_t, Class))(v87 + 16))(v82, *(_QWORD *)(v80 + 48) + *(_QWORD *)(v87 + 72) * v39, isa);
  v42 = *(_QWORD *)(v40 + 56);
  isa = (Class)&qword_1000B74F0;
  v43 = sub_100006058(&qword_1000B74F0);
  v44 = *(_QWORD *)(v42 + 8 * v39);
  *(_QWORD *)(v41 + *(int *)(v43 + 48)) = v44;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v41, 0, 1, v43);
  swift_bridgeObjectRetain(v44);
  v38 = v101;
  v27 = v84;
LABEL_31:
  sub_10000AA94(v41, v27, &qword_1000B74E8);
  v49 = sub_100006058(&qword_1000B74F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v27, 1, v49) != 1)
  {
    v32 = *(_QWORD *)(v27 + *(int *)(v49 + 48));
    (*(void (**)(uint64_t, uint64_t, objc_class *))(v87 + 32))(v96, v27, v86);
    v100 = 0;
    v50 = *(_QWORD *)(v32 + 64);
    v90 = v32 + 64;
    v97 = v32;
    v51 = 1 << *(_BYTE *)(v32 + 32);
    if (v51 < 64)
      v52 = ~(-1 << v51);
    else
      v52 = -1;
    v27 = v52 & v50;
    v94 = (unint64_t)(v51 + 63) >> 6;
    v81 = v94 - 1;
    while (!v27)
    {
      v61 = v100 + 1;
      if (__OFADD__(v100, 1))
      {
        __break(1u);
        goto LABEL_69;
      }
      v32 = (uint64_t)v99;
      if (v61 < v94)
      {
        v62 = *(_QWORD *)(v90 + 8 * v61);
        if (v62)
          goto LABEL_45;
        v63 = v100 + 2;
        ++v100;
        if (v61 + 1 < v94)
        {
          v62 = *(_QWORD *)(v90 + 8 * v63);
          if (v62)
            goto LABEL_48;
          v100 = v61 + 1;
          if (v61 + 2 < v94)
          {
            v62 = *(_QWORD *)(v90 + 8 * (v61 + 2));
            if (v62)
            {
              v61 += 2;
              goto LABEL_45;
            }
            v63 = v61 + 3;
            v100 = v61 + 2;
            if (v61 + 3 < v94)
            {
              v62 = *(_QWORD *)(v90 + 8 * v63);
              if (!v62)
              {
                while (1)
                {
                  v61 = v63 + 1;
                  if (__OFADD__(v63, 1))
                    break;
                  if (v61 >= v94)
                  {
                    v100 = v81;
                    goto LABEL_59;
                  }
                  v62 = *(_QWORD *)(v90 + 8 * v61);
                  ++v63;
                  if (v62)
                    goto LABEL_45;
                }
LABEL_70:
                __break(1u);
LABEL_71:
                if (v32 < 0)
                  v75 = v32;
                else
                  v75 = v32 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v32);
                v33 = _CocoaArrayWrapper.endIndex.getter(v75);
                swift_bridgeObjectRelease(v32);
                goto LABEL_4;
              }
LABEL_48:
              v61 = v63;
LABEL_45:
              v27 = (v62 - 1) & v62;
              v57 = __clz(__rbit64(v62)) + (v61 << 6);
              v100 = v61;
LABEL_41:
              v58 = v97;
              v32 = (uint64_t)v99;
              (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v99, *(_QWORD *)(v97 + 48) + *(_QWORD *)(v38 + 72) * v57, v13);
              v59 = *(_QWORD *)(v58 + 56) + *(_QWORD *)(v9 + 72) * v57;
              isa = (Class)&qword_1000B74F8;
              v60 = sub_100006058(&qword_1000B74F8);
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v32 + *(int *)(v60 + 48), v59, v8);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v32, 0, 1, v60);
              v19 = v98;
              goto LABEL_60;
            }
          }
        }
      }
LABEL_59:
      isa = (Class)&qword_1000B74F8;
      v64 = sub_100006058(&qword_1000B74F8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v32, 1, 1, v64);
      v27 = 0;
LABEL_60:
      sub_10000AA94(v32, (uint64_t)v19, &qword_1000B74E0);
      v65 = sub_100006058(&qword_1000B74F8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v19, 1, v65) == 1)
      {
        swift_release(v97);
        isa = v86;
        result = (id)(*(uint64_t (**)(uint64_t, objc_class *))(v87 + 8))(v96, v86);
        v38 = v101;
        v27 = v84;
        v32 = v85;
        goto LABEL_10;
      }
      v66 = &v19[*(int *)(v65 + 48)];
      v38 = v101;
      (*(void (**)(uint64_t, char *, uint64_t))(v101 + 32))(v102, v19, v13);
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v66, v8);
      v32 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ClimateSystemManager(0) + 36));
      if (*(_QWORD *)(v32 + 16))
      {
        v67 = sub_10005B798(v96);
        if ((v68 & 1) != 0)
        {
          v69 = *(_QWORD *)(v32 + 56);
          v70 = v91;
          sub_10000AAD8(v69 + *(_QWORD *)(v92 + 72) * v67, v91, type metadata accessor for ClimateZone);
          v71 = v70;
          v32 = v95;
          sub_10000AB1C(v71, v95);
          v72 = sub_1000054DC(v102);
          if (v72)
          {
            v73 = v72;
            objc_msgSend(v72, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
            v74 = objc_msgSend(v93, "view");
            if (!v74)
            {
              __break(1u);
              return (id)swift_release(v80);
            }
            v53 = v74;
            objc_msgSend(v74, "addSubview:", v73);

            sub_1000095C4(v73);
            v32 = v54;
            v55 = (void *)objc_opt_self(NSLayoutConstraint);
            sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v32);
            objc_msgSend(v55, "activateConstraints:", isa);

            v13 = v88;
            v9 = v89;
            v19 = v98;
          }
          sub_10000AB60(v95, type metadata accessor for ClimateZone);
          v38 = v101;
        }
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v102, v13);
    }
    v56 = __clz(__rbit64(v27));
    v27 &= v27 - 1;
    v57 = v56 | (v100 << 6);
    goto LABEL_41;
  }
  return (id)swift_release(v80);
}

id sub_10000A8C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimatePhysicalControlBarsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimatePhysicalControlBarsViewController()
{
  return objc_opt_self(_TtC7Climate40ClimatePhysicalControlBarsViewController);
}

uint64_t sub_10000A948(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_10000A98C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7B90;
  if (!qword_1000B7B90)
  {
    v1 = sub_100006B04(255, (unint64_t *)&unk_1000B7B80, NSRunLoop_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSRunLoop, v1);
    atomic_store(result, (unint64_t *)&qword_1000B7B90);
  }
  return result;
}

uint64_t sub_10000A9E4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10000AA08(uint64_t a1)
{
  uint64_t v1;

  sub_1000093FC(a1, v1);
}

uint64_t sub_10000AA10(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10000A948(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000AA50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100006058(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000AA94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100006058(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000AAD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000AB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClimateZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000AB60(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000AB9C()
{
  uint64_t v0;
  int v1;
  void *v2;
  unsigned int v3;
  unsigned int v4;
  unsigned __int8 v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_temperature);
  v3 = objc_msgSend(v2, "targetTemperatureRestricted");
  v4 = objc_msgSend(v2, "targetTemperatureInvalid");
  v5 = objc_msgSend(v2, "targetTemperatureDisabled");
  if (v1 == 1)
  {
    if ((v3 & 1) != 0)
    {
      v6 = 5;
      if (v4)
        v6 = 13;
      if ((v5 & 1) == 0)
        return v6;
      return v6 | 0x10;
    }
    v6 = 9;
    if (!v4)
      v6 = 1;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  else if (v3)
  {
    v6 = 4;
    if (v4)
      v6 = 12;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  else
  {
    v6 = 8;
    if (!v4)
      v6 = 0;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  return v6;
}

uint64_t sub_10000AD44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_title);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

void sub_10000AD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSString v12;
  _BYTE v13[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC7Climate13ClimateButton_title);
  swift_beginAccess(v2 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v13, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  if (!a2)
  {
    if (!v7)
    {
      v10 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_labelsView)
                     + OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel);
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  if (!v7
    || (v6 == a1 ? (v8 = v7 == a2) : (v8 = 0),
        !v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v6, v7, 0) & 1) == 0))
  {
LABEL_10:
    ClimateButton.updateClimateConfiguration()();
  }
  swift_bridgeObjectRelease(v7);
  v9 = v5[1];
  v10 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_labelsView)
                 + OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel);
  if (!v9)
  {
LABEL_14:
    v11 = v10;
    v12 = 0;
    goto LABEL_15;
  }
  v11 = v10;
  swift_bridgeObjectRetain(v9);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
LABEL_15:
  objc_msgSend(v11, "setText:", v12);

}

void (*sub_10000AED0(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = ClimateButton.title.modify(v3);
  return sub_10000AF18;
}

void sub_10000AF18(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;

  v3 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  if ((a2 & 1) == 0)
  {
    v4 = v3[4];
    v5 = *(void **)(*(_QWORD *)(v4 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_labelsView)
                  + OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel);
    v6 = v4 + OBJC_IVAR____TtC7Climate13ClimateButton_title;
    swift_beginAccess(v4 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v3, 0, 0);
    v7 = *(_QWORD *)(v6 + 8);
    v8 = v5;
    if (v7)
    {
      swift_bridgeObjectRetain(v7);
      v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v7);
    }
    else
    {
      v9 = 0;
    }
    objc_msgSend(v5, "setText:", v9);

  }
  free(v3);
}

_QWORD *sub_10000AFF0(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t inited;
  id v17;
  id v18;
  unint64_t v19;
  id v20;
  id v21;
  _QWORD *v22;
  id v23;
  id v24;
  _QWORD *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  char v35;
  char v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  unint64_t v42;
  id v43;
  id v44;
  _QWORD *v45;
  id v46;
  id v47;
  _QWORD *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  char v56;
  char v57;
  void *v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  Class isa;
  uint64_t v78;
  char v79;
  void *v80;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  void *v86;
  char v87[96];
  char v88[96];
  objc_super v89;

  v3 = OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_unselectedBackgroundView;
  v4 = (void *)objc_opt_self(MTMaterialView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "materialViewWithRecipe:", 21);
  v5[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_temperature] = a1;
  v6 = objc_allocWithZone((Class)type metadata accessor for ClimateTargetTemperatureZoneSelectionButton.LabelsView());
  v7 = a1;
  v8 = objc_msgSend(v6, "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_labelsView] = v8;

  v89.receiver = v5;
  v89.super_class = (Class)type metadata accessor for ClimateTargetTemperatureZoneSelectionButton();
  v9 = objc_msgSendSuper2(&v89, "init");
  objc_msgSend(v7, "registerObserver:", v9);
  v85 = v7;
  v10 = objc_msgSend(v7, "car");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "dimensionManager");

    objc_msgSend(v12, "registerObserver:", v9);
  }
  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "systemWhiteColor");
  v15 = objc_msgSend(v13, "systemBlackColor");
  v83 = sub_100006058((uint64_t *)&unk_1000B9CC0);
  inited = swift_initStackObject(v83, v88);
  *(_OWORD *)(inited + 16) = xmmword_100088DE0;
  *(_QWORD *)(inited + 32) = 16;
  *(_QWORD *)(inited + 40) = v14;
  *(_QWORD *)(inited + 48) = v15;
  *(_QWORD *)(inited + 56) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(inited + 64) = 8;
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = v15;
  *(_QWORD *)(inited + 88) = &_swiftEmptyDictionarySingleton;
  v17 = v14;
  v18 = v15;
  v19 = sub_10002C0E8(inited);
  swift_setDeallocating(inited);
  v20 = v17;
  v21 = v18;
  v22 = v9;
  v23 = v20;
  v24 = v21;
  v82 = sub_100006058((uint64_t *)&unk_1000B7580);
  swift_arrayDestroy(inited + 32, 2, v82);
  v25 = (_QWORD *)((char *)v22 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor);
  v26 = *(void **)((char *)v22 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor);
  v27 = *(void **)((char *)v22 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8);
  v28 = *(_QWORD *)((char *)v22 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16);
  *v25 = v23;
  v25[1] = v24;
  v25[2] = v19;
  v29 = v23;
  v30 = v24;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v31 = v29;
  v32 = v30;
  v33 = v31;
  v34 = v32;
  swift_bridgeObjectRetain_n(v19, 2);
  v86 = v34;
  if ((static NSObject.== infix(_:_:)(v31) & 1) != 0 && (static NSObject.== infix(_:_:)(v34) & 1) != 0)
  {
    sub_10005B490(v19, v28);
    v36 = v35;
    swift_bridgeObjectRelease(v19);

    if ((v36 & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    swift_bridgeObjectRelease(v19);

  }
  (*(void (**)(void))((swift_isaMask & *v22) + 0x228))();
LABEL_9:

  v84 = v33;
  swift_bridgeObjectRelease(v28);

  swift_bridgeObjectRelease(v19);
  v37 = objc_msgSend(v13, "clearColor");
  v38 = objc_msgSend(v13, "systemWhiteColor");
  v39 = swift_initStackObject(v83, v87);
  *(_OWORD *)(v39 + 16) = xmmword_100088DE0;
  *(_QWORD *)(v39 + 32) = 16;
  *(_QWORD *)(v39 + 40) = v37;
  *(_QWORD *)(v39 + 48) = v38;
  *(_QWORD *)(v39 + 56) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v39 + 64) = 8;
  *(_QWORD *)(v39 + 72) = v37;
  *(_QWORD *)(v39 + 80) = v38;
  *(_QWORD *)(v39 + 88) = &_swiftEmptyDictionarySingleton;
  v40 = v37;
  v41 = v38;
  v42 = sub_10002C0E8(v39);
  swift_setDeallocating(v39);
  v43 = v40;
  v44 = v41;
  v45 = v22;
  v46 = v43;
  v47 = v44;
  swift_arrayDestroy(v39 + 32, 2, v82);
  v48 = (_QWORD *)((char *)v45 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor);
  v49 = *(void **)((char *)v45 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor);
  v50 = *(void **)((char *)v45 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8);
  v51 = *(_QWORD *)((char *)v45 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16);
  *v48 = v46;
  v48[1] = v47;
  v48[2] = v42;
  v52 = v46;
  v53 = v47;
  v54 = v52;
  v55 = v53;
  swift_bridgeObjectRetain_n(v42, 2);
  if ((static NSObject.== infix(_:_:)(v54) & 1) == 0 || (static NSObject.== infix(_:_:)(v55) & 1) == 0)
  {
    swift_bridgeObjectRelease(v42);

    goto LABEL_14;
  }
  sub_10005B490(v42, v51);
  v57 = v56;
  swift_bridgeObjectRelease(v42);

  if ((v57 & 1) == 0)
LABEL_14:
    (*(void (**)(void))((swift_isaMask & *v45) + 0x228))();

  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v42);
  v58 = *(void **)((char *)v45
                 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_unselectedBackgroundView);
  if (v58)
  {
    v59 = v58;
    objc_msgSend(v59, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v45, "insertSubview:atIndex:", v59, 0);
    v60 = (void *)objc_opt_self(NSLayoutConstraint);
    v61 = sub_100006058((uint64_t *)&unk_1000B7590);
    v62 = swift_allocObject(v61, 64, 7);
    *(_OWORD *)(v62 + 16) = xmmword_100088DF0;
    v63 = objc_msgSend(v59, "leadingAnchor");
    v64 = objc_msgSend(v45, "leadingAnchor");
    v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

    *(_QWORD *)(v62 + 32) = v65;
    v66 = objc_msgSend(v59, "trailingAnchor");
    v67 = objc_msgSend(v45, "trailingAnchor");
    v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

    *(_QWORD *)(v62 + 40) = v68;
    v69 = objc_msgSend(v59, "topAnchor");
    v70 = objc_msgSend(v45, "topAnchor");
    v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

    *(_QWORD *)(v62 + 48) = v71;
    v72 = objc_msgSend(v59, "bottomAnchor");
    v73 = objc_msgSend(v45, "bottomAnchor");
    v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

    *(_QWORD *)(v62 + 56) = v74;
    specialized Array._endMutation()(v75);
    v76 = v62;
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v76);
    objc_msgSend(v60, "activateConstraints:", isa);

  }
  sub_10000B898();
  v78 = OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn;
  v79 = *((_BYTE *)v45 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn);
  v80 = *(void **)((char *)v45 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_temperature);
  objc_msgSend(v80, "targetTemperatureRestricted");
  objc_msgSend(v80, "targetTemperatureInvalid");
  objc_msgSend(v80, "targetTemperatureDisabled");
  *((_BYTE *)v45 + v78) = v79;
  sub_10000BE7C();

  return v45;
}

void sub_10000B898()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;
  id v23;
  void *v24;
  id v25;
  id v26;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_labelsView;
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_labelsView]);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100006058((uint64_t *)&unk_1000B7590);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100088E00;
  v6 = objc_msgSend(*(id *)&v1[v2], "leadingAnchor");
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(*(id *)&v1[v2], "trailingAnchor");
  v10 = objc_msgSend(v1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(*(id *)&v1[v2], "widthAnchor");
  v13 = objc_msgSend(v1, "widthAnchor");
  v14 = objc_msgSend(v12, "constraintLessThanOrEqualToAnchor:", v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(*(id *)&v1[v2], "centerXAnchor");
  v16 = objc_msgSend(v1, "centerXAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v5 + 56) = v17;
  v18 = objc_msgSend(*(id *)&v1[v2], "centerYAnchor");
  v19 = objc_msgSend(v1, "centerYAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v5 + 64) = v20;
  specialized Array._endMutation()(v21);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v3, "activateConstraints:", isa);

  v23 = objc_msgSend(v1, "titleLabel");
  if (v23)
  {
    v24 = v23;
    v25 = objc_retain(*(id *)(*(_QWORD *)&v1[v2]
                            + OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel));
    objc_msgSend(v25, "setLineBreakMode:", objc_msgSend(v24, "lineBreakMode"));

    v26 = objc_retain(*(id *)(*(_QWORD *)&v1[v2]
                            + OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel));
    objc_msgSend(v26, "setTextAlignment:", objc_msgSend(v24, "textAlignment"));

  }
}

uint64_t sub_10000BC28()
{
  uint64_t v0;

  v0 = sub_100006B04(0, &qword_1000B7458, CAFTemperature_ptr);
  return CAFPositioned.layoutKey.getter(v0);
}

void sub_10000BC70()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  int v6;
  void *v7;
  id v8;
  id v9;
  unsigned __int8 v10;
  unsigned int v11;
  unsigned int v12;
  BOOL v13;
  char v14;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;

  sub_100066C24();
  v1 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  objc_msgSend(v0, "setBackgroundColor:", *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig]);
  v2 = objc_msgSend(v0, "imageView");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setTintColor:", *((_QWORD *)v1 + 1));

  }
  v4 = (void *)*((_QWORD *)v1 + 1);
  v5 = *((_QWORD *)v1 + 2);
  v6 = v0[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn];
  v7 = *(void **)&v0[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_temperature];
  v8 = *(id *)v1;
  v9 = v4;
  v10 = objc_msgSend(v7, "targetTemperatureRestricted", swift_bridgeObjectRetain(v5).n128_f64[0]);
  v11 = objc_msgSend(v7, "targetTemperatureInvalid");
  v12 = objc_msgSend(v7, "targetTemperatureDisabled");
  if (v6 == 1)
  {
    v13 = v11 == 0;
    if ((v10 & 1) == 0)
    {
      v14 = 9;
      if (!v11)
        v14 = 1;
      if (v12)
        goto LABEL_11;
      goto LABEL_12;
    }
    v14 = 5;
    v15 = 13;
  }
  else
  {
    v13 = v11 == 0;
    if ((v10 & 1) == 0)
    {
      v14 = 8;
      if (!v11)
        v14 = 0;
      if ((v12 & 1) != 0)
        goto LABEL_11;
      goto LABEL_12;
    }
    v14 = 4;
    v15 = 12;
  }
  if (!v13)
    v14 = v15;
  if ((v12 & 1) != 0)
LABEL_11:
    v14 |= 0x10u;
LABEL_12:
  v21 = sub_100047864(v14, v9, v5);
  swift_bridgeObjectRelease(v5);

  v16 = OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_labelsView;
  v17 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_labelsView]
                 + OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel);
  v18 = (void *)objc_opt_self(UIColor);
  v19 = v17;
  v20 = objc_msgSend(v18, "clearColor");
  objc_msgSend(v19, "setBackgroundColor:", v20);

  objc_msgSend(*(id *)(*(_QWORD *)&v0[v16]+ OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel), "setTextColor:", v21);
}

void sub_10000BE7C()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void **v6;
  void *v7;
  int v8;
  void *v9;
  unsigned __int8 v10;
  unsigned int v11;
  unsigned int v12;
  BOOL v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  char *v29;
  id v30;
  NSString v31;
  void *v32;
  uint64_t v33;
  double v34;
  char v36[24];

  v1 = v0;
  v2 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v36[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (void **)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_attributedTitle];
  swift_beginAccess(v6, v36, 1, 0);
  v7 = *v6;
  *v6 = 0;

  ClimateButton.updateClimateConfiguration()();
  v8 = v1[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn];
  v9 = *(void **)&v1[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_temperature];
  v10 = objc_msgSend(v9, "targetTemperatureRestricted");
  v11 = objc_msgSend(v9, "targetTemperatureInvalid");
  v12 = objc_msgSend(v9, "targetTemperatureDisabled");
  if (v8 == 1)
  {
    v13 = v11 == 0;
    if ((v10 & 1) == 0)
    {
      if (v11)
        v16 = 9;
      else
        v16 = 1;
      if (v12)
        goto LABEL_10;
      goto LABEL_11;
    }
    v14 = 5;
    v15 = 13;
  }
  else
  {
    v13 = v11 == 0;
    if ((v10 & 1) == 0)
    {
      if (v11)
        v16 = 8;
      else
        v16 = 0;
      if ((v12 & 1) != 0)
        goto LABEL_10;
      goto LABEL_11;
    }
    v14 = 4;
    v15 = 12;
  }
  if (v13)
    v16 = v14;
  else
    v16 = v15;
  if ((v12 & 1) != 0)
LABEL_10:
    v16 |= 0x10u;
LABEL_11:
  v17 = OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_labelsView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_labelsView], "setHidden:", (v16 & 0x18) != 0);
  if ((v16 & 0x18) != 0)
  {
    v18 = objc_msgSend(v9, "targetTemperature");
    sub_100006B04(0, &qword_1000B7CE0, NSUnitTemperature_ptr);
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v18);

    v20 = Measurement<>.invalidString.getter(v19);
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_10000AD9C(v20, v22);
  }
  else
  {
    sub_10000AD9C(0, 0);
    v23 = objc_msgSend(v9, "targetTemperature");
    sub_100006B04(0, &qword_1000B7CE0, NSUnitTemperature_ptr);
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v23);

    v24 = objc_msgSend(v9, "targetTemperatureRange");
    Measurement<>.readableString(in:)();
    v26 = v25;

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v26)
    {
      v27 = *(char **)&v1[v17];
      v28 = *(void **)&v27[OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel];
      v29 = v27;
      v30 = v28;
      v31 = String._bridgeToObjectiveC()();
      objc_msgSend(v30, "setText:", v31);
      swift_bridgeObjectRelease(v26);

    }
  }
  v32 = *(void **)&v1[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_unselectedBackgroundView];
  if (v32)
  {
    v33 = v16 & 1;
    v34 = 0.0;
    if ((v16 & 1) == 0)
      v34 = 1.0;
    objc_msgSend(v32, "setAlpha:", v34);
  }
  else
  {
    v33 = v16 & 1;
  }
  objc_msgSend(v1, "setUserInteractionEnabled:", v33 == 0);
  sub_10007813C();
  objc_msgSend(v9, "targetTemperatureRestricted");
  objc_msgSend(v1, "setEnabled:", (objc_msgSend(v9, "targetTemperatureDisabled") | objc_msgSend(v9, "targetTemperatureInvalid")) ^ 1);
  sub_10000C21C();
  sub_10000BC70();
}

uint64_t sub_10000C21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  int v11;
  void *v12;
  unsigned __int8 v13;
  unsigned int v14;
  unsigned int v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  void *v21;
  uint64_t *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  char **v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t inited;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  unint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  char v57;
  char v58;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[96];

  v60 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v1 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v60 - v5;
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v60 - v9;
  v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn);
  v61 = v0;
  v12 = *(void **)(v0 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_temperature);
  v13 = objc_msgSend(v12, "targetTemperatureRestricted", v8);
  v14 = objc_msgSend(v12, "targetTemperatureInvalid");
  v15 = objc_msgSend(v12, "targetTemperatureDisabled");
  if (v11 == 1)
  {
    if ((v13 & 1) != 0)
    {
      v16 = 5;
      if (v14)
        v16 = 13;
      v17 = v61;
      if ((v15 & 1) == 0)
        goto LABEL_21;
    }
    else
    {
      v16 = 9;
      if (!v14)
        v16 = 1;
      v17 = v61;
      if (!v15)
        goto LABEL_21;
    }
  }
  else if ((v13 & 1) != 0)
  {
    v16 = 4;
    if (v14)
      v16 = 12;
    v17 = v61;
    if ((v15 & 1) == 0)
      goto LABEL_20;
  }
  else
  {
    v16 = 8;
    if (!v14)
      v16 = 0;
    v17 = v61;
    if ((v15 & 1) == 0)
      goto LABEL_20;
  }
  v18 = v16;
  v16 |= 0x10u;
  if ((v18 & 1) == 0)
  {
LABEL_20:
    v19 = v1;
    v20 = &OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor;
    goto LABEL_22;
  }
LABEL_21:
  v19 = v1;
  v20 = &OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor;
LABEL_22:
  v21 = *(void **)(v17 + *v20);
  if ((v16 & 1) != 0)
    v22 = &OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor;
  else
    v22 = &OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor;
  v23 = *(void **)(v17 + *v22 + 8);
  v24 = v21;
  v25 = v23;
  v26 = objc_msgSend(v12, "currentTemperature");
  if (v26)
  {
    v27 = v26;
    v28 = sub_100006B04(0, &qword_1000B7CE0, NSUnitTemperature_ptr);
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v27);

    v29 = v60;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v10, v6, v60);
    v30 = objc_msgSend(v12, "targetTemperature");
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v30);

    v31 = sub_10000D0A8();
    LOBYTE(v30) = dispatch thunk of static Comparable.< infix(_:_:)(v3, v10, v29, v31);
    v32 = *(void (**)(char *, uint64_t))(v19 + 8);
    v32(v3, v29);
    if ((v30 & 1) != 0)
    {
      v33 = &selRef_systemBlueColor;
    }
    else
    {
      v34 = objc_msgSend(v12, "targetTemperature");
      static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v34);

      LOBYTE(v34) = static Measurement.< infix<A, B>(_:_:)(v10, v3, v28, v28, v28);
      v32(v3, v29);
      if ((v34 & 1) == 0)
      {
        v17 = v61;
        goto LABEL_32;
      }
      v33 = &selRef_systemRedColor;
    }
    v17 = v61;
    v35 = objc_msgSend((id)objc_opt_self(UIColor), *v33);

    v25 = v35;
LABEL_32:
    v32(v10, v29);
  }
  v36 = sub_100006058((uint64_t *)&unk_1000B9CC0);
  inited = swift_initStackObject(v36, v62);
  *(_OWORD *)(inited + 16) = xmmword_100088DE0;
  *(_QWORD *)(inited + 32) = 16;
  v38 = inited + 32;
  *(_QWORD *)(inited + 40) = v24;
  *(_QWORD *)(inited + 48) = v25;
  *(_QWORD *)(inited + 56) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(inited + 64) = 8;
  *(_QWORD *)(inited + 72) = v24;
  *(_QWORD *)(inited + 80) = v25;
  *(_QWORD *)(inited + 88) = &_swiftEmptyDictionarySingleton;
  v39 = v24;
  v40 = v25;
  v41 = v39;
  v42 = v40;
  v43 = sub_10002C0E8(inited);
  swift_setDeallocating(inited);
  v44 = v41;
  v45 = v42;
  v46 = v44;
  v47 = v45;
  v48 = sub_100006058((uint64_t *)&unk_1000B7580);
  swift_arrayDestroy(v38, 2, v48);
  v49 = (_QWORD *)(v17 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v50 = *(void **)(v17 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v51 = *(void **)(v17 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v52 = *(_QWORD *)(v17 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  *v49 = v46;
  v49[1] = v47;
  v49[2] = v43;
  v53 = v46;
  v54 = v47;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v55 = v53;
  v56 = v54;
  swift_bridgeObjectRetain_n(v43, 2);
  if ((static NSObject.== infix(_:_:)(v55) & 1) != 0 && (static NSObject.== infix(_:_:)(v56) & 1) != 0)
  {
    sub_10005B490(v43, v52);
    v58 = v57;
    swift_bridgeObjectRelease(v43);

    if ((v58 & 1) != 0)
      goto LABEL_39;
  }
  else
  {
    swift_bridgeObjectRelease(v43);

  }
  sub_10000BC70();
LABEL_39:

  swift_bridgeObjectRelease(v52);
  return swift_bridgeObjectRelease(v43);
}

void sub_10000C71C()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_unselectedBackgroundView));

}

id sub_10000C758()
{
  return sub_10000D008(type metadata accessor for ClimateTargetTemperatureZoneSelectionButton);
}

uint64_t type metadata accessor for ClimateTargetTemperatureZoneSelectionButton()
{
  return objc_opt_self(_TtC7Climate43ClimateTargetTemperatureZoneSelectionButton);
}

char *sub_10000CAE4()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  Class isa;
  objc_super v23;

  v1 = OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel;
  v2 = objc_allocWithZone((Class)UILabel);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");

  v23.receiver = v3;
  v23.super_class = (Class)type metadata accessor for ClimateTargetTemperatureZoneSelectionButton.LabelsView();
  v4 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v4, "setClipsToBounds:", 1);
  v5 = OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView_temperatureLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = qword_1000B6F50;
  v7 = *(id *)&v4[v5];
  if (v6 != -1)
    swift_once(&qword_1000B6F50, sub_10000CF88);
  objc_msgSend(v7, "setFont:", qword_1000BC7A0);

  objc_msgSend(v4, "addSubview:", *(_QWORD *)&v4[v5]);
  v8 = (void *)objc_opt_self(NSLayoutConstraint);
  v9 = sub_100006058((uint64_t *)&unk_1000B7590);
  v10 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100088E10;
  v11 = objc_msgSend(*(id *)&v4[v5], "centerXAnchor");
  v12 = objc_msgSend(v4, "centerXAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(*(id *)&v4[v5], "centerYAnchor");
  v15 = objc_msgSend(v4, "centerYAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v10 + 40) = v16;
  v17 = objc_msgSend(*(id *)&v4[v5], "heightAnchor");
  v18 = objc_msgSend(v4, "heightAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v10 + 48) = v19;
  specialized Array._endMutation()(v20);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v8, "activateConstraints:", isa);

  return v4;
}

id sub_10000CF88()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "monospacedDigitSystemFontOfSize:weight:", 24.0, UIFontWeightSemibold);
  qword_1000BC7A0 = (uint64_t)result;
  return result;
}

id sub_10000CFFC()
{
  return sub_10000D008(type metadata accessor for ClimateTargetTemperatureZoneSelectionButton.LabelsView);
}

id sub_10000D008(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for ClimateTargetTemperatureZoneSelectionButton.LabelsView()
{
  return objc_opt_self(_TtCC7Climate43ClimateTargetTemperatureZoneSelectionButton10LabelsView);
}

uint64_t sub_10000D068(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006058(&qword_1000B78D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10000D0A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B75C0;
  if (!qword_1000B75C0)
  {
    v1 = sub_10000A948((uint64_t *)&unk_1000B75B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Measurement<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1000B75C0);
  }
  return result;
}

double sub_10000D0F4()
{
  void **v0;
  void *v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v1 = *v0;
  v2 = objc_allocWithZone((Class)type metadata accessor for ClimateControlsLockButton());
  v3 = sub_10006A590(v1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = sub_100006058(&qword_1000B7460);
  v5 = swift_allocObject(v4, 48, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v5 + 16) = xmmword_100088D00;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = &off_10009FD00;
  return result;
}

id sub_10000D2A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateLoadingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateLoadingViewController()
{
  return objc_opt_self(_TtC7Climate28ClimateLoadingViewController);
}

void sub_10000D2F8()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  objc_super v21;

  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for ClimateLoadingViewController();
  objc_msgSendSuper2(&v21, "viewDidLoad");
  v1 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = v2;
  objc_msgSend(v2, "addSubview:", v1);

  v4 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v1, "setColor:", v4);

  objc_msgSend(v1, "startAnimating");
  v5 = sub_100006058((uint64_t *)&unk_1000B7590);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100088C40;
  v7 = objc_msgSend(v1, "centerXAnchor");
  v8 = objc_msgSend(v0, "view");
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "centerXAnchor");

  v11 = objc_msgSend(v7, "constraintEqualToAnchor:", v10);
  *(_QWORD *)(v6 + 32) = v11;
  v12 = objc_msgSend(v1, "centerYAnchor");
  v13 = objc_msgSend(v0, "view");
  if (v13)
  {
    v14 = v13;
    v15 = (void *)objc_opt_self(NSLayoutConstraint);
    v16 = objc_msgSend(v14, "centerYAnchor");

    v17 = objc_msgSend(v12, "constraintEqualToAnchor:", v16);
    *(_QWORD *)(v6 + 40) = v17;
    specialized Array._endMutation()(v18);
    v19 = v6;
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v19);
    objc_msgSend(v15, "activateConstraints:", isa);

    return;
  }
LABEL_7:
  __break(1u);
}

double sub_10000D5CC()
{
  void **v0;
  void *v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v1 = *v0;
  v2 = objc_allocWithZone((Class)type metadata accessor for ClimateSteeringWheelButton());
  v3 = sub_100034828(v1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = sub_100006058(&qword_1000B7460);
  v5 = swift_allocObject(v4, 48, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v5 + 16) = xmmword_100088D00;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = &off_10009ECB8;
  return result;
}

void sub_10000D644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  objc_class *v10;
  char *v11;
  char *v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  char *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  Class isa;
  void *v54;
  _QWORD aBlock[5];
  uint64_t v56;
  objc_super v57;

  v5 = v4;
  v10 = (objc_class *)type metadata accessor for ClimateGridSource();
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Climate17ClimateGridSource_viewableSettingItems] = _swiftEmptyArrayStorage;
  v12 = &v11[OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  *((_QWORD *)v12 + 6) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Climate17ClimateGridSource_presentedSetting] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsObserver] = 0;
  v13 = &v11[OBJC_IVAR____TtC7Climate17ClimateGridSource_climateGrid];
  swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC7Climate17ClimateGridSource_climateGrid], 0);
  swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC7Climate17ClimateGridSource_navigationController], 0);
  swift_unknownObjectWeakAssign(v13, v5);
  v57.receiver = v11;
  v57.super_class = v10;
  v14 = objc_msgSendSuper2(&v57, "init");
  sub_10000E43C(a1, a2, a3, a4);
  v15 = swift_allocObject(&unk_10009E160, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v5;
  v16 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_100011A7C;
  v56 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001152C;
  aBlock[3] = &unk_10009E178;
  v17 = _Block_copy(aBlock);
  v18 = v14;
  v19 = v5;
  v20 = objc_msgSend(v16, "initWithSectionProvider:", v17);
  _Block_release(v17);
  v21 = v56;

  swift_release(v21);
  v22 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v20, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v22, "setDataSource:", v18);
  objc_msgSend(v22, "setDelegate:", v18);
  v23 = type metadata accessor for ClimateSlotCell();
  if (qword_1000B6F58 != -1)
    swift_once(&qword_1000B6F58, sub_100010CFC);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v23);
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v25);

  v26 = type metadata accessor for CAFUIProminentSettingCell(0);
  v27 = swift_getObjCClassFromMetadata(v26);
  static CAFUICellProtocol.reuseIdentifier.getter(v26, &protocol witness table for CAFUIProminentSettingCell);
  v29 = v28;
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  objc_msgSend(v22, "registerClass:forCellWithReuseIdentifier:", v27, v30);

  v31 = (void *)objc_opt_self(UIColor);
  v32 = v22;
  v33 = objc_msgSend(v31, "clearColor");
  objc_msgSend(v32, "setBackgroundColor:", v33);

  objc_msgSend(v32, "setShowsVerticalScrollIndicator:", 0);
  objc_msgSend(v32, "setBounces:", 0);
  objc_msgSend(v32, "setPagingEnabled:", 1);
  v34 = v32;
  sub_1000115D8();
  objc_msgSend(v34, "setSemanticContentAttribute:", v35);

  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v19, "addSubview:", v34);
  v36 = (void *)objc_opt_self(NSLayoutConstraint);
  v37 = sub_100006058((uint64_t *)&unk_1000B7590);
  v38 = swift_allocObject(v37, 64, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100088DF0;
  v39 = objc_msgSend(v34, "topAnchor");
  v40 = objc_msgSend(v19, "topAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v38 + 32) = v41;
  v42 = objc_msgSend(v34, "leftAnchor");
  v43 = objc_msgSend(v19, "leftAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v38 + 40) = v44;
  v45 = objc_msgSend(v34, "rightAnchor");
  v46 = objc_msgSend(v19, "rightAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v38 + 48) = v47;
  v48 = objc_msgSend(v34, "bottomAnchor");
  v49 = objc_msgSend(v19, "bottomAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

  *(_QWORD *)(v38 + 56) = v50;
  aBlock[0] = v38;
  specialized Array._endMutation()(v51);
  v52 = aBlock[0];
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v52);
  objc_msgSend(v36, "activateConstraints:", isa);

  v54 = *(void **)&v19[OBJC_IVAR____TtC7Climate11ClimateGrid_grid];
  *(_QWORD *)&v19[OBJC_IVAR____TtC7Climate11ClimateGrid_grid] = v34;

}

void sub_10000DC44(uint64_t a1, id a2, void *a3)
{
  id v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  unsigned __int8 *v22;
  int v23;
  double v24;
  double v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  _QWORD v38[5];
  uint64_t v39;

  v5 = objc_msgSend(a2, "container");
  objc_msgSend(v5, "contentSize");
  v7 = v6;
  swift_unknownObjectRelease(v5);
  if (a1 == 1)
  {
    v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v20 = objc_msgSend(v19, "delegate");

    if (v20)
    {
      v21 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v20, v21, 0, 0, 0);
      v22 = (unsigned __int8 *)sub_10006B490();
      swift_unknownObjectRelease(v20);
      v23 = v22[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      v24 = 230.0;
      if (v23)
        v24 = 188.0;
      v25 = (v7 - v24) * 0.5;
      v26 = (void *)objc_opt_self(NSCollectionLayoutDimension);
      v27 = objc_msgSend(v26, "fractionalWidthDimension:", 1.0);
      v28 = objc_msgSend(v26, "fractionalHeightDimension:", 1.0);
      v29 = (void *)objc_opt_self(NSCollectionLayoutSize);
      v30 = objc_msgSend(v29, "sizeWithWidthDimension:heightDimension:", v27, v28);

      v31 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v30);
      v32 = objc_msgSend(v26, "fractionalWidthDimension:", 1.0);
      v33 = objc_msgSend(v26, "estimatedDimension:", 52.0);
      v34 = objc_msgSend(v29, "sizeWithWidthDimension:heightDimension:", v32, v33);

      v35 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutGroup), "horizontalGroupWithLayoutSize:repeatingSubitem:count:", v34, v31, 1);
      v36 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSpacing), "fixedSpacing:", 8.0);
      objc_msgSend(v35, "setInterItemSpacing:", v36);

      v37 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v35);
      objc_msgSend(v37, "setInterGroupSpacing:", 8.0);
      objc_msgSend(v37, "setContentInsets:", 0.0, v25, 20.0, v25);

    }
    else
    {
      __break(1u);
    }
  }
  else if (!a1)
  {
    v8 = type metadata accessor for ClimateGridLayoutManager();
    v9 = swift_allocObject(v8, 64, 7);
    *(_QWORD *)(v9 + 56) = 0;
    *(_QWORD *)(v9 + 32) = 0;
    *(_QWORD *)(v9 + 40) = 0;
    *(_QWORD *)(v9 + 16) = a3;
    *(_QWORD *)(v9 + 24) = _swiftEmptyArrayStorage;
    *(double *)(v9 + 48) = v7;
    v10 = a3;
    sub_100052FE0();
    v11 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v12 = objc_msgSend(v11, "absoluteDimension:", *(double *)(v9 + 40));
    v13 = objc_msgSend(v11, "absoluteDimension:", *(double *)(v9 + 32));
    v14 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v12, v13);
    v15 = (void *)objc_opt_self(NSCollectionLayoutGroup);
    v38[4] = sub_100011A9C;
    v39 = v9;
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 1107296256;
    v38[2] = sub_10000E2D4;
    v38[3] = &unk_10009E1A0;
    v16 = _Block_copy(v38);
    v17 = v39;
    swift_retain(v9);
    v18 = objc_msgSend(v15, "customGroupWithLayoutSize:itemProvider:", v14, v16, swift_release(v17).n128_f64[0]);
    _Block_release(v16);
    objc_msgSend(objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v18), "setContentInsets:", 0.0, (v7 - *(double *)(v9 + 40)) * 0.5, 8.0, (v7 - *(double *)(v9 + 40)) * 0.5);
    swift_release(v9);

  }
}

void *sub_10000E130(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *result;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v16 = (unint64_t)&_swiftEmptyArrayStorage;
  swift_beginAccess(a2 + 24, &v15, 0, 0);
  v3 = *(_QWORD *)(a2 + 24);
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v3);
    return &_swiftEmptyArrayStorage;
  }
  if (v3 < 0)
    v14 = v3;
  else
    v14 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v4)
    goto LABEL_16;
LABEL_3:
  result = (void *)objc_opt_self(NSCollectionLayoutGroupCustomItem);
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    v6 = result;
    v7 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v3);
      else
        v8 = *(id *)(v3 + 8 * v7 + 32);
      v9 = v8;
      objc_msgSend(v8, "frame");
      v10 = objc_msgSend(v6, "customItemWithFrame:");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v12 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v11 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= v11 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
      ++v7;
      v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized Array._endMutation()(v13);

    }
    while (v4 != v7);
    swift_bridgeObjectRelease(v3);
    return (void *)v16;
  }
  return result;
}

Class sub_10000E2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  Class isa;

  v4 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v6 = v4(v5);
  swift_release(v3);
  swift_unknownObjectRelease(a2);
  sub_100006B04(0, &qword_1000B77D8, NSCollectionLayoutGroupCustomItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  return isa;
}

id sub_10000E420()
{
  return sub_10000D008(type metadata accessor for ClimateGrid);
}

void sub_10000E43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, _UNKNOWN **);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _QWORD *v36;
  _OWORD v37[3];
  uint64_t v38;

  v5 = v4;
  v9 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems) = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems) = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v10);
  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CAFUIAutomakerSettingObserver(0)), "init");
  v12 = *(void (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *v11) + 0x60);
  v13 = swift_unknownObjectRetain(v5);
  v12(v13, &off_10009E118);
  v14 = *(void **)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsObserver);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsObserver) = v11;
  v36 = v11;

  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  CAFUISettingsCache.init(settings:sections:)(v37, a3, a4);
  v34 = v37[1];
  v35 = v37[0];
  v33 = v37[2];
  v15 = v38;
  v16 = CAFUISettingsCache.rootSettings(in:visibleOnly:)(2, 0);
  v17 = v16;
  if (!((unint64_t)v16 >> 62))
  {
    v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v16);
    if (v18)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v17, 2);
    v23 = CAFUISettingsCache.rootSettings(in:visibleOnly:)(2, 1);
    v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_viewableSettingItems);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_viewableSettingItems) = v23;
    swift_bridgeObjectRelease(v24);
    v25 = v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache;
    v26 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache);
    v27 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache + 8);
    v28 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache + 16);
    v29 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache + 24);
    v30 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache + 32);
    v31 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache + 40);
    v32 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache + 48);
    *(_OWORD *)v25 = v35;
    *(_OWORD *)(v25 + 16) = v34;
    *(_OWORD *)(v25 + 32) = v33;
    *(_QWORD *)(v25 + 48) = v15;
    sub_100011920(v26, v27, v28, v29, v30, v31, v32);

    return;
  }
  if (v16 < 0)
    v22 = v16;
  else
    v22 = v16 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v16);
  v18 = _CocoaArrayWrapper.endIndex.getter(v22);
  if (!v18)
    goto LABEL_13;
LABEL_3:
  if (v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0)
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
      else
        v20 = *(id *)(v17 + 8 * i + 32);
      v21 = v20;
      objc_msgSend(v20, "registerObserver:", v36, v33, v34, v35);

    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_10000E764(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  Class v19;
  id v20;
  _QWORD *v21;
  _QWORD *v22;
  void (*v23)(id, uint64_t);
  id v24;
  NSString v25;
  Class isa;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  if (IndexPath.section.getter(a1) != 1)
  {
    if (qword_1000B6F58 != -1)
      swift_once(&qword_1000B6F58, sub_100010CFC);
    v25 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v8 = (unint64_t)objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v25, isa);

    v27 = type metadata accessor for ClimateSlotCell();
    v28 = swift_dynamicCastClass(v8, v27);
    if (v28)
    {
      v22 = (_QWORD *)v28;
      v24 = (id)sub_10000EA74(a2, v29, v30);
      sub_100010E0C(v24);
      goto LABEL_19;
    }
    goto LABEL_31;
  }
  v6 = IndexPath.item.getter();
  v7 = v6;
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC7Climate17ClimateGridSource_viewableSettingItems);
  if ((v8 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate17ClimateGridSource_viewableSettingItems));
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v8);
    swift_bridgeObjectRelease(v8);
    ObjectType = swift_getObjectType(v14);
    v33 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CAFListContentRepresentable);
    if (v33)
      v12 = v33;
    else
      v12 = 0;
    if (v33)
      v13 = v14;
    else
      v13 = 0;
    if (v13)
      goto LABEL_13;
    swift_unknownObjectRelease(v14);
    goto LABEL_28;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v6 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_30:
    __break(1u);
LABEL_31:

    v34 = 164;
LABEL_33:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000021, 0x800000010008C190, "Climate/ClimateGrid.swift", 25, 2, v34, 0);
    goto LABEL_34;
  }
  v9 = *(void **)(v8 + 8 * v6 + 32);
  v10 = swift_getObjectType(v9);
  v11 = swift_conformsToProtocol2(v10, &protocol descriptor for CAFListContentRepresentable);
  if (v11)
    v12 = v11;
  else
    v12 = 0;
  if (v11)
    v13 = v9;
  else
    v13 = 0;
  if (v13)
  {
    v14 = v9;
LABEL_13:
    v15 = type metadata accessor for CAFUIProminentSettingCell(0);
    static CAFUICellProtocol.reuseIdentifier.getter(v15, &protocol witness table for CAFUIProminentSettingCell);
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v19 = IndexPath._bridgeToObjectiveC()().super.isa;
    v20 = objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:", v18, v19);

    v21 = (_QWORD *)swift_dynamicCastClass(v20, v15);
    if (v21)
    {
      v22 = v21;
      v23 = *(void (**)(id, uint64_t))((swift_isaMask & *v21) + 0x98);
      v24 = v14;
      v23(v13, v12);
LABEL_19:

      return (uint64_t)v22;
    }

    v34 = 156;
    goto LABEL_33;
  }
LABEL_28:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003ALL, 0x800000010008C1C0, "Climate/ClimateGrid.swift", 25, 2, 152, 0);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10000EA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  v4 = v3;
  v6 = type metadata accessor for IndexPath(0, a2, a3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - v11;
  v14 = IndexPath.section.getter(v13);
  if (v14)
  {
    v15 = static os_log_type_t.default.getter(v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    v16 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v17 = static OS_os_log.default.getter(v16);
    v18 = v15;
    if (os_log_type_enabled(v17, v15))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v57 = v20;
      *(_DWORD *)v19 = 136315138;
      v23 = sub_100011590(v20, v21, v22);
      v24 = dispatch thunk of CustomStringConvertible.description.getter(v6, v23);
      v26 = v25;
      v56 = sub_10005DB58(v24, v25, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v19 + 4, v19 + 12);
      swift_bridgeObjectRelease(v26);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Requested climate slot for an invalid section - %s.", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return 0;
  }
  result = IndexPath.item.getter();
  v28 = OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems;
  v29 = *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems) + 16);
  v30 = OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems;
  v31 = *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems) + 16);
  v32 = __OFADD__(v29, v31);
  v33 = v29 + v31;
  if (v32)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (result >= v33)
  {
    v38 = static os_log_type_t.default.getter(result);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a1, v6);
    v39 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v40 = static OS_os_log.default.getter(v39);
    v41 = v38;
    if (os_log_type_enabled(v40, v38))
    {
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = swift_slowAlloc(32, -1);
      v57 = v43;
      *(_DWORD *)v42 = 136315138;
      v46 = sub_100011590(v43, v44, v45);
      v47 = dispatch thunk of CustomStringConvertible.description.getter(v6, v46);
      v49 = v48;
      v56 = sub_10005DB58(v47, v48, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v42 + 4, v42 + 12);
      swift_bridgeObjectRelease(v49);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Requested climate slot for an invalid item - %s.", v42, 0xCu);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    return 0;
  }
  v34 = IndexPath.item.getter();
  v35 = *(_QWORD *)(*(_QWORD *)(v4 + v28) + 16);
  result = IndexPath.item.getter();
  v36 = *(_QWORD *)(v4 + v28);
  if (v34 < v35)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if ((unint64_t)result < *(_QWORD *)(v36 + 16))
      {
        v37 = v36 + 16 * result;
LABEL_17:
        v55 = *(_OWORD *)(v37 + 32);
        v53 = (id)v55;
        return v55;
      }
      goto LABEL_23;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v50 = *(_QWORD *)(v36 + 16);
  v32 = __OFSUB__(result, v50);
  v51 = result - v50;
  if (v32)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((v51 & 0x8000000000000000) != 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v52 = *(_QWORD *)(v4 + v30);
  if (v51 < *(_QWORD *)(v52 + 16))
  {
    v37 = v52 + 16 * v51;
    goto LABEL_17;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_10000EF48(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  void *v15;
  void *v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t i;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Class isa;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;
  char *v75;
  NSObject *v76;
  uint8_t *v77;
  char **v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  id v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;

  v3 = v1;
  v5 = sub_100006058((uint64_t *)&unk_1000B77B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0, v8, v9);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC7Climate17ClimateGridSource_climateGrid);
  if (!Strong
    || (v15 = (void *)Strong,
        v16 = *(void **)(Strong + OBJC_IVAR____TtC7Climate11ClimateGrid_grid),
        v84 = v16,
        v15,
        !v16))
  {
    v34 = static os_log_type_t.default.getter(Strong);
    v35 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v87 = (char *)static OS_os_log.default.getter(v35);
    os_log(_:dso:log:_:_:)(v34, &_mh_execute_header, v87, "UICollectionView does not exist.", 32, 2, _swiftEmptyArrayStorage);
LABEL_20:

    return;
  }
  v83 = v13;
  v17 = (char *)OBJC_IVAR____TtC7Climate17ClimateGridSource_viewableSettingItems;
  v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate17ClimateGridSource_viewableSettingItems);
  swift_bridgeObjectRetain(v18);
  v19 = sub_10000F7C4((uint64_t)a1, v18);
  v20 = swift_bridgeObjectRelease(v18);
  v21 = CAFAutomakerSetting.isHidden.getter(v20);
  v86 = v3;
  v87 = v17;
  if (((v19 ^ v21) & 1) != 0)
  {
    v81 = v11;
    v82 = v10;
    v22 = *(_QWORD *)&v17[v3];
    v85 = a1;
    if (!((unint64_t)v22 >> 62))
    {
      v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v23)
        goto LABEL_6;
LABEL_66:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v7, 1, 1, v82);
LABEL_67:
      v73 = sub_100011A10((uint64_t)v7);
      v74 = static os_log_type_t.default.getter(v73);
      sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
      v75 = v85;
      v76 = static OS_os_log.default.getter(v75);
      if (os_log_type_enabled(v76, v74))
      {
        v77 = (uint8_t *)swift_slowAlloc(12, -1);
        v78 = (char **)swift_slowAlloc(8, -1);
        *(_DWORD *)v77 = 138412290;
        v88 = v75;
        v79 = v75;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89, v77 + 4, v77 + 12);
        *v78 = v75;

        _os_log_impl((void *)&_mh_execute_header, v76, v74, "Unable to match item to an index path: %@", v77, 0xCu);
        v80 = sub_100006058((uint64_t *)&unk_1000B8370);
        swift_arrayDestroy(v78, 1, v80);
        swift_slowDealloc(v78, -1, -1);
        swift_slowDealloc(v77, -1, -1);
      }
      else
      {

      }
      return;
    }
LABEL_53:
    if (v22 < 0)
      v37 = v22;
    else
      v37 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v23 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v22);
    if ((v23 & 0x8000000000000000) == 0)
      goto LABEL_65;
    __break(1u);
    goto LABEL_58;
  }
  v36 = (_QWORD *)(v3 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache);
  v37 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache);
  if (!v37)
  {
    v55 = static os_log_type_t.default.getter(v21);
    v56 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v87 = (char *)static OS_os_log.default.getter(v56);
    os_log(_:dso:log:_:_:)(v55, &_mh_execute_header, v87, "Settings cache not available.", 29, 2, _swiftEmptyArrayStorage);

    goto LABEL_20;
  }
  v22 = v36[1];
  v7 = (char *)v36[2];
  v38 = v36[3];
  v23 = v36[4];
  v39 = v36[5];
  v2 = v36[6];
  swift_bridgeObjectRetain(*(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache));
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v7);
  v83 = (char *)v38;
  swift_bridgeObjectRetain(v38);
  v82 = v23;
  swift_bridgeObjectRetain(v23);
  v81 = v39;
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v2);
  if ((CAFAutomakerSetting.isHidden.getter(v40) & 1) != 0)
  {
    v41 = OBJC_IVAR____TtC7Climate17ClimateGridSource_presentedSetting;
    v42 = *(char **)(v3 + OBJC_IVAR____TtC7Climate17ClimateGridSource_presentedSetting);
    if (v42)
    {
      if (v42 == a1)
      {
        v43 = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC7Climate17ClimateGridSource_navigationController);
        if (v43)
        {
          v44 = v43;

          v23 = (uint64_t)v7;
          v45 = *(void **)(v3 + v41);
          *(_QWORD *)(v3 + v41) = 0;

          v7 = (char *)v23;
        }
      }
    }
  }
  v88 = (char *)_swiftEmptyArrayStorage;
  v46 = v22 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)v22 >> 62))
  {
    v47 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v22);
    if (!v47)
    {
LABEL_62:
      swift_bridgeObjectRelease(v22);
      v54 = (char *)_swiftEmptyArrayStorage;
LABEL_63:
      sub_100011920(v37, v22, (uint64_t)v7, (uint64_t)v83, v82, v81, v2);
      v72 = *(_QWORD *)&v87[v3];
      *(_QWORD *)&v87[v3] = v54;
      swift_bridgeObjectRelease(v72);
      objc_msgSend(v84, "reloadData");

      return;
    }
    goto LABEL_30;
  }
LABEL_58:
  if (v22 >= 0)
    v71 = v46;
  else
    v71 = v22;
  swift_bridgeObjectRetain(v22);
  v47 = _CocoaArrayWrapper.endIndex.getter(v71);
  if (!v47)
    goto LABEL_62;
LABEL_30:
  v85 = v7;
  if (v47 >= 1)
  {
    for (i = 0; i != v47; ++i)
    {
      if ((v22 & 0xC000000000000001) != 0)
        v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v22);
      else
        v49 = *(id *)(v22 + 8 * i + 32);
      v50 = v49;
      v51 = objc_msgSend(v49, "category", v81);
      if ((_DWORD)v51 != 2 || (CAFAutomakerSetting.isHidden.getter(v51) & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        v52 = *((_QWORD *)v88 + 2);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v52);
        v53 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
        specialized ContiguousArray._endMutation()(v53);
      }
    }
    swift_bridgeObjectRelease(v22);
    v54 = v88;
    v7 = v85;
    v3 = v86;
    goto LABEL_63;
  }
  __break(1u);
LABEL_65:
  v3 = v86;
  v17 = v87;
  if (!v23)
    goto LABEL_66;
LABEL_6:
  v24 = 0;
  while (1)
  {
    if (v23 == v24)
    {
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v22 = *(_QWORD *)&v17[v3];
    if ((v22 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain(*(_QWORD *)&v17[v3]);
      v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v22);
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      if (v24 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_52;
      v25 = *(id *)(v22 + 8 * v24 + 32);
    }
    v26 = objc_msgSend(v25, "identifier", v81);
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v2 = v28;

    v29 = objc_msgSend(v85, "identifier");
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v22 = v31;

    if (v27 == v30 && v2 == v22)
      break;
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v2, v30, v22, 0);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v22);
    if ((v33 & 1) != 0)
      goto LABEL_43;
    ++v24;

    v3 = v86;
    v17 = v87;
    if (v23 == v24)
      goto LABEL_66;
  }
  swift_bridgeObjectRelease_n(v2, 2);
LABEL_43:
  IndexPath.init(item:section:)(v24, 1);

  v58 = v81;
  v57 = v82;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v7, 0, 1, v82);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v7, 1, v57) == 1)
    goto LABEL_67;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v83, v7, v57);
  v59 = v85;
  if (objc_msgSend(v85, "hasDisabled"))
  {
    if (objc_msgSend(v59, "disabled"))
    {
      v60 = OBJC_IVAR____TtC7Climate17ClimateGridSource_presentedSetting;
      v61 = *(char **)(v86 + OBJC_IVAR____TtC7Climate17ClimateGridSource_presentedSetting);
      if (v61)
      {
        if (v61 == v59)
        {
          v62 = (void *)swift_unknownObjectWeakLoadStrong(v86 + OBJC_IVAR____TtC7Climate17ClimateGridSource_navigationController);
          if (v62)
          {
            v63 = v62;

            v64 = *(void **)(v86 + v60);
            *(_QWORD *)(v86 + v60) = 0;

          }
        }
      }
    }
  }
  v65 = sub_100006058(&qword_1000B77C0);
  v66 = *(unsigned __int8 *)(v58 + 80);
  v67 = (v66 + 32) & ~v66;
  v68 = swift_allocObject(v65, v67 + *(_QWORD *)(v58 + 72), v66 | 7);
  *(_OWORD *)(v68 + 16) = xmmword_100088D00;
  v69 = (uint64_t)v83;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v68 + v67, v83, v57);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v68);
  objc_msgSend(v84, "reloadItemsAtIndexPaths:", isa);

  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v69, v57);
}

uint64_t sub_10000F7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  id v15;
  char v16;
  uint64_t v17;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v6 = v5;
      sub_100006B04(0, &qword_1000B77C8, CAFAutomakerSetting_ptr);
      v7 = static NSObject.== infix(_:_:)(v6);

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v14 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v15 = *(id *)(a2 + 8 * v4);
        v16 = static NSObject.== infix(_:_:)(v15);

        if ((v16 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v14 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a2);
      v11 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v12 = v10;
      v13 = static NSObject.== infix(_:_:)(v10);
      swift_unknownObjectRelease(v12);
      if ((v13 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v11 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v17 = a2;
    else
      v17 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

id sub_10000F974()
{
  return sub_10000D008(type metadata accessor for ClimateGridSource);
}

void sub_10000FA2C(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  Class isa;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t ObjectType;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t (*v39)(uint64_t, unint64_t);
  Class v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  void *v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  void *object;
  Swift::String v65;
  unint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  void (**v69)(id, _QWORD);
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  os_log_type_t v83;
  void (**v84)(_QWORD, _QWORD);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  os_log_type_t v96;
  void (**v97)(uint64_t, _QWORD);
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  char *v115;
  id v116;
  id v117;
  char *v118;
  id v119;
  uint64_t v120;
  id v121;
  id v122;
  char *v123;
  uint64_t v124;
  id v125;
  id v126;
  char *v127;
  uint64_t v128;
  id v129;
  id v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  id v137;
  uint64_t v138;
  char *v139;
  id v140;
  void *v141;
  id v142;
  id v143;
  void *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  os_log_type_t v149;
  uint64_t v150;
  NSObject *v151;
  uint64_t v152;
  uint8_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  id v173;
  char *v174;
  id v175;
  char *v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  _QWORD v180[8];

  v4 = v3;
  v7 = type metadata accessor for IndexPath(0, a2, a3);
  v175 = *(id *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v162 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v162 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v162 - v17;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 0);

  v176 = v4;
  v20 = (uint64_t *)&v4[OBJC_IVAR____TtC7Climate17ClimateGridSource_settingsCache];
  v21 = *v20;
  if (*v20)
  {
    v173 = a1;
    v174 = v9;
    v171 = v18;
    v172 = v12;
    v170 = v15;
    v22 = v20[1];
    v23 = (id)v20[2];
    v25 = v20[3];
    v24 = v20[4];
    v27 = v20[5];
    v26 = v20[6];
    v180[0] = v21;
    v180[1] = v22;
    v180[2] = v23;
    v180[3] = v25;
    v180[4] = v24;
    v180[5] = v27;
    v180[6] = v26;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v26);
    if (IndexPath.section.getter(v28) != 1)
    {
      sub_100011920(v21, v22, (uint64_t)v23, v25, v24, v27, v26);
      return;
    }
    v164 = v21;
    v166 = v22;
    v167 = (uint64_t)v23;
    v168 = v25;
    v169 = v27;
    v165 = v26;
    v163 = v7;
    v29 = IndexPath.item.getter();
    v30 = v29;
    v31 = *(_QWORD *)&v176[OBJC_IVAR____TtC7Climate17ClimateGridSource_viewableSettingItems];
    v32 = a2;
    if ((v31 & 0xC000000000000001) == 0)
    {
      v33 = v174;
      if ((v29 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v29 < *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v27 = v24;
        v34 = *(char **)(v31 + 8 * v29 + 32);
        ObjectType = swift_getObjectType(v34);
        v36 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CAFListContentRepresentable);
        if (v36)
          v30 = v36;
        else
          v30 = 0;
        if (v36)
          v37 = v34;
        else
          v37 = 0;
        v38 = v34;
        if (v37)
        {
LABEL_13:
          v24 = swift_getObjectType(v37);
          v39 = *(uint64_t (**)(uint64_t, unint64_t))(v30 + 16);
          v174 = v38;
          if ((v39(v24, v30) & 1) == 0)
          {
            sub_100011920(v164, v166, v167, v168, v27, v169, v165);
            v177 = 0;
            v178 = 0xE000000000000000;
            _StringGuts.grow(_:)(40);
            swift_bridgeObjectRelease(v178);
            v177 = 0x206D657449;
            v178 = 0xE500000000000000;
            v63._countAndFlagsBits = (*(uint64_t (**)(uint64_t, unint64_t))(v30 + 8))(v24, v30);
            object = v63._object;
            String.append(_:)(v63);
            swift_bridgeObjectRelease(object);
            v65._object = (void *)0x800000010008C030;
            v65._countAndFlagsBits = 0xD000000000000021;
            String.append(_:)(v65);
            v66 = v178;
            static CAFUILogger.default(_:function:file:line:)(v177, v178, 0xD000000000000022, 0x800000010008C060, 0xD000000000000057, 0x800000010008C090, 243);

            swift_bridgeObjectRelease(v66);
            return;
          }
          v40 = IndexPath._bridgeToObjectiveC()().super.isa;
          v41 = objc_msgSend(v173, "cellForItemAtIndexPath:", v40);

          if (v41)
          {
            v42 = type metadata accessor for CAFUIProminentSettingCell(0);
            v43 = swift_dynamicCastClass(v41, v42);

            if (v43)
            {
              v44 = objc_msgSend(v173, "window");
              if (v44)
              {
                v23 = v44;
                v45 = objc_msgSend(v44, "rootViewController");
                if (v45)
                {
                  v46 = v45;
                  v47 = objc_opt_self(UINavigationController);
                  v48 = swift_dynamicCastObjCClass(v46, v47);
                  v49 = (uint64_t)v171;
                  if (v48)
                  {
                    v50 = v48;
                    v175 = v46;
                    swift_unknownObjectWeakAssign(&v176[OBJC_IVAR____TtC7Climate17ClimateGridSource_navigationController], v48);
                    v26 = CAFUISettingsCache.visibleChildren(of:)(v174);
                    v172 = (char *)v50;
                    if (!((unint64_t)v26 >> 62))
                    {
                      v51 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
                      goto LABEL_21;
                    }
LABEL_67:
                    if (v26 < 0)
                      v161 = v26;
                    else
                      v161 = v26 & 0xFFFFFFFFFFFFFF8;
                    v51 = _CocoaArrayWrapper.endIndex.getter(v161);
LABEL_21:
                    swift_bridgeObjectRelease(v26);
                    v52 = (*(uint64_t (**)(_QWORD, BOOL, uint64_t, unint64_t))(v30 + 72))(0, v51 != 0, v24, v30);
                    v55 = (void *)v52;
                    v56 = v53;
                    v57 = v54;
                    if (!(_BYTE)v54)
                    {
                      v130 = (id)v52;
                      v131 = v176;
                      v133 = v168;
                      v132 = v169;
                      v171 = (char *)v56;
                      v135 = v166;
                      v134 = v167;
                      goto LABEL_48;
                    }
                    v59 = v168;
                    v58 = v169;
                    v61 = v166;
                    v60 = v167;
                    if (v54 != 1)
                    {
                      v62 = v165;
                      if (v54 != 3)
                        goto LABEL_50;
                      if (!(v52 | v53))
                      {

                        sub_100011920(v164, v61, v60, v59, v27, v58, v62);
LABEL_51:

                        return;
                      }
                      if (v52 ^ 1 | v53)
                      {
LABEL_50:

                        sub_100011920(v164, v61, v60, v59, v27, v58, v62);
                        sub_100011998(v55, v56, v57);
                        goto LABEL_51;
                      }
                      goto LABEL_74;
                    }
                    v171 = (char *)v53;
                    LODWORD(v170) = v54;
                    v110 = (void *)objc_opt_self(UIApplication);
                    v111 = v55;
                    v112 = objc_msgSend(v110, "sharedApplication");
                    v113 = objc_msgSend(v112, "delegate");

                    if (v113)
                    {
                      v173 = v23;
                      v114 = type metadata accessor for ClimateAppDelegate();
                      swift_dynamicCastClassUnconditional(v113, v114, 0, 0, 0);
                      v115 = (char *)sub_10006B490();
                      swift_unknownObjectRelease(v113);
                      v116 = objc_msgSend(*(id *)&v115[OBJC_IVAR____TtC7Climate18ClimateCoordinator_sessionStatus], "currentSession");
                      v117 = v116;
                      if (v116)
                      {
                        v118 = (char *)objc_msgSend(v116, "configuration");

                        v117 = objc_msgSend(v118, "rightHandDrive");
                        v115 = v118;
                      }

                      v119 = v111;
                      v120 = CAFUISettingsCache.sections(for:)(v55);
                      sub_100011998(v55, (uint64_t)v171, 1u);
                      swift_bridgeObjectRetain(v164);
                      swift_bridgeObjectRetain(v166);
                      swift_bridgeObjectRetain(v167);
                      swift_bridgeObjectRetain(v168);
                      swift_bridgeObjectRetain(v27);
                      swift_bridgeObjectRetain(v169);
                      v121 = objc_msgSend(v110, "sharedApplication", swift_bridgeObjectRetain(v165).n128_f64[0]);
                      v122 = objc_msgSend(v121, "delegate");

                      if (v122)
                      {
                        swift_dynamicCastClassUnconditional(v122, v114, 0, 0, 0);
                        v123 = (char *)sub_10006B490();
                        swift_unknownObjectRelease(v122);
                        v124 = *(_QWORD *)&v123[OBJC_IVAR____TtC7Climate18ClimateCoordinator_assetManager];
                        swift_retain(v124);

                        v125 = objc_msgSend(v110, "sharedApplication");
                        v126 = objc_msgSend(v125, "delegate");

                        if (v126)
                        {
                          swift_dynamicCastClassUnconditional(v126, v114, 0, 0, 0);
                          v127 = (char *)sub_10006B490();
                          swift_unknownObjectRelease(v126);
                          v128 = *(_QWORD *)&v127[OBJC_IVAR____TtC7Climate18ClimateCoordinator_requestContentManager];
                          swift_retain(v128);

                          v129 = objc_allocWithZone((Class)type metadata accessor for CAFUITileViewController(0));
                          v130 = (id)CAFUITileViewController.init(isRHD:prominentCategories:listItems:settingsSections:settingsCache:assetManager:requestContentManager:preventVolumeNotification:)(v117, _swiftEmptyArrayStorage, _swiftEmptyArrayStorage, v120, v180, v124, v128, 0);
                          sub_100011998(v55, (uint64_t)v171, 1u);
                          v131 = v176;
                          v23 = v173;
                          v133 = v168;
                          v132 = v169;
                          v135 = v166;
                          v134 = v167;
                          v57 = v170;
LABEL_48:
                          v136 = v130;
                          sub_100011920(v164, v135, v134, v133, v27, v132, v165);
                          v137 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, 0, 0);
                          sub_100006B04(0, &qword_1000B77A8, UIAction_ptr);
                          v138 = swift_allocObject(&unk_10009E138, 24, 7);
                          v139 = v172;
                          *(_QWORD *)(v138 + 16) = v172;
                          v140 = v175;
                          v141 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1000119E4, v138);
                          objc_msgSend(v137, "setPrimaryAction:", v141);

                          v142 = objc_msgSend(v136, "navigationItem");
                          objc_msgSend(v142, "setLeftBarButtonItem:", v137);

                          v143 = objc_msgSend(v136, "navigationItem");
                          objc_msgSend(v143, "setHidesBackButton:", 1);

                          v144 = *(void **)&v131[OBJC_IVAR____TtC7Climate17ClimateGridSource_presentedSetting];
                          v145 = v174;
                          *(_QWORD *)&v131[OBJC_IVAR____TtC7Climate17ClimateGridSource_presentedSetting] = v174;
                          v176 = v145;

                          objc_msgSend(v139, "setNavigationBarHidden:", 0);
                          objc_msgSend(v139, "pushViewController:animated:", v136, 1);

                          sub_100011998(v55, (uint64_t)v171, v57);
                          return;
                        }
LABEL_73:
                        __break(1u);
LABEL_74:
                        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x800000010008C110, "Climate/ClimateGrid.swift", 25, 2, 272, 0);
                        __break(1u);
                        return;
                      }
                    }
                    else
                    {
                      __break(1u);
                    }
                    __break(1u);
                    goto LABEL_73;
                  }
                  sub_100011920(v164, v166, v167, v168, v27, v169, v165);

                }
                else
                {
                  v95 = sub_100011920(v164, v166, v167, v168, v27, v169, v165);
                  v49 = (uint64_t)v171;
                }
                v96 = static os_log_type_t.default.getter(v95);
                v97 = (void (**)(uint64_t, _QWORD))v175;
                v98 = v163;
                (*((void (**)(uint64_t, uint64_t, uint64_t))v175 + 2))(v49, v32, v163);
                v99 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
                v100 = static OS_os_log.default.getter(v99);
                v101 = v96;
                if (!os_log_type_enabled(v100, v96))
                {

                  v97[1](v49, v98);
                  return;
                }
                v102 = (uint8_t *)swift_slowAlloc(12, -1);
                v103 = swift_slowAlloc(32, -1);
                v177 = v103;
                *(_DWORD *)v102 = 136315138;
                v173 = v23;
                v106 = sub_100011590(v103, v104, v105);
                v107 = dispatch thunk of CustomStringConvertible.description.getter(v98, v106);
                v109 = v108;
                v179 = sub_10005DB58(v107, v108, &v177);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180, v102 + 4, v102 + 12);
                swift_bridgeObjectRelease(v109);
                v97[1](v49, v98);
                _os_log_impl((void *)&_mh_execute_header, v100, v101, "App window does not have a root navigation controller - %s.", v102, 0xCu);
                swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v103, -1, -1);
                swift_slowDealloc(v102, -1, -1);

LABEL_31:
                return;
              }
              v82 = sub_100011920(v164, v166, v167, v168, v27, v169, v165);
              v83 = static os_log_type_t.default.getter(v82);
              v84 = (void (**)(_QWORD, _QWORD))v175;
              v85 = v170;
              v86 = v163;
              (*((void (**)(char *, uint64_t, uint64_t))v175 + 2))(v170, v32, v163);
              v87 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
              v72 = static OS_os_log.default.getter(v87);
              if (!os_log_type_enabled(v72, v83))
              {

                ((void (**)(char *, uint64_t))v84)[1](v85, v86);
                return;
              }
              v73 = (uint8_t *)swift_slowAlloc(12, -1);
              v88 = swift_slowAlloc(32, -1);
              v177 = v88;
              *(_DWORD *)v73 = 136315138;
              v91 = sub_100011590(v88, v89, v90);
              v92 = dispatch thunk of CustomStringConvertible.description.getter(v86, v91);
              v94 = v93;
              v179 = sub_10005DB58(v92, v93, &v177);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180, v73 + 4, v73 + 12);
              swift_bridgeObjectRelease(v94);
              ((void (**)(char *, uint64_t))v84)[1](v85, v86);
              _os_log_impl((void *)&_mh_execute_header, v72, v83, "CollectionView window DNE - %s.", v73, 0xCu);
              swift_arrayDestroy(v88, 1, (char *)&type metadata for Any + 8);
              v81 = v88;
LABEL_30:
              swift_slowDealloc(v81, -1, -1);
              swift_slowDealloc(v73, -1, -1);

              goto LABEL_31;
            }
          }
          v67 = sub_100011920(v164, v166, v167, v168, v27, v169, v165);
          v68 = static os_log_type_t.default.getter(v67);
          v69 = (void (**)(id, _QWORD))v175;
          v33 = v172;
          v70 = v163;
          (*((void (**)(char *, uint64_t, uint64_t))v175 + 2))(v172, v32, v163);
          v71 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
          v72 = static OS_os_log.default.getter(v71);
          if (os_log_type_enabled(v72, v68))
          {
            v73 = (uint8_t *)swift_slowAlloc(12, -1);
            v74 = swift_slowAlloc(32, -1);
            v177 = v74;
            *(_DWORD *)v73 = 136315138;
            v77 = sub_100011590(v74, v75, v76);
            v78 = dispatch thunk of CustomStringConvertible.description.getter(v70, v77);
            v80 = v79;
            v179 = sub_10005DB58(v78, v79, &v177);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180, v73 + 4, v73 + 12);
            swift_bridgeObjectRelease(v80);
            v69[1](v33, v70);
            _os_log_impl((void *)&_mh_execute_header, v72, v68, "The cell is not of the expected type - %s.", v73, 0xCu);
            swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
            v81 = v74;
            goto LABEL_30;
          }

          goto LABEL_63;
        }
LABEL_60:
        v148 = sub_100011920(v164, v166, v167, v168, v27, v169, v165);
        v149 = static os_log_type_t.default.getter(v148);
        v69 = (void (**)(id, _QWORD))v175;
        v70 = v163;
        (*((void (**)(char *, uint64_t, uint64_t))v175 + 2))(v33, v32, v163);
        v150 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
        v151 = static OS_os_log.default.getter(v150);
        if (os_log_type_enabled(v151, v149))
        {
          v152 = swift_slowAlloc(12, -1);
          v176 = v38;
          v153 = (uint8_t *)v152;
          v154 = swift_slowAlloc(32, -1);
          v177 = v154;
          *(_DWORD *)v153 = 136315138;
          v157 = sub_100011590(v154, v155, v156);
          v158 = dispatch thunk of CustomStringConvertible.description.getter(v70, v157);
          v160 = v159;
          v179 = sub_10005DB58(v158, v159, &v177);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180, v153 + 4, v153 + 12);
          swift_bridgeObjectRelease(v160);
          v69[1](v33, v70);
          _os_log_impl((void *)&_mh_execute_header, v151, v149, "Setting is expected to be a CAFListContentRepresentable - %s.", v153, 0xCu);
          swift_arrayDestroy(v154, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v154, -1, -1);
          swift_slowDealloc(v153, -1, -1);

          return;
        }

LABEL_63:
        v69[1](v33, v70);
        return;
      }
      __break(1u);
      goto LABEL_67;
    }
    swift_bridgeObjectRetain(*(_QWORD *)&v176[OBJC_IVAR____TtC7Climate17ClimateGridSource_viewableSettingItems]);
    v38 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v31);
    swift_bridgeObjectRelease(v31);
    v146 = swift_getObjectType(v38);
    v147 = swift_conformsToProtocol2(v146, &protocol descriptor for CAFListContentRepresentable);
    if (v147)
      v30 = v147;
    else
      v30 = 0;
    if (v147)
      v37 = v38;
    else
      v37 = 0;
    v27 = v24;
    if (v37)
      goto LABEL_13;
    v33 = v174;
    goto LABEL_60;
  }
}

uint64_t sub_100010CFC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  v3 = type metadata accessor for ClimateSlotCell();
  v0 = sub_100006058(&qword_1000B77D0);
  result = String.init<A>(describing:)(&v3, v0);
  qword_1000BC7A8 = result;
  unk_1000BC7B0 = v2;
  return result;
}

void sub_100010E0C(void *a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  Class isa;

  if (a1)
  {
    v2 = a1;
    v3 = objc_msgSend(v1, "contentView");
    objc_msgSend(v3, "addSubview:", v2);

    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = sub_100006058((uint64_t *)&unk_1000B7590);
    v6 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100088DF0;
    v7 = objc_msgSend(v2, "topAnchor");
    v8 = objc_msgSend(v1, "contentView");
    v9 = objc_msgSend(v8, "topAnchor");

    v10 = objc_msgSend(v7, "constraintEqualToAnchor:", v9);
    *(_QWORD *)(v6 + 32) = v10;
    v11 = objc_msgSend(v2, "bottomAnchor");
    v12 = objc_msgSend(v1, "contentView");
    v13 = objc_msgSend(v12, "bottomAnchor");

    v14 = objc_msgSend(v11, "constraintEqualToAnchor:", v13);
    *(_QWORD *)(v6 + 40) = v14;
    v15 = objc_msgSend(v2, "leftAnchor");
    v16 = objc_msgSend(v1, "contentView");
    v17 = objc_msgSend(v16, "leftAnchor");

    v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);
    *(_QWORD *)(v6 + 48) = v18;
    v19 = objc_msgSend(v2, "rightAnchor");
    v20 = objc_msgSend(v1, "contentView");
    v21 = objc_msgSend(v20, "rightAnchor");

    v22 = objc_msgSend(v19, "constraintEqualToAnchor:", v21);
    *(_QWORD *)(v6 + 56) = v22;
    specialized Array._endMutation()(v23);
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v6);
    objc_msgSend(v4, "activateConstraints:", isa);

  }
}

id sub_1000111F0()
{
  return sub_10000D008(type metadata accessor for ClimateSlotCell);
}

uint64_t ClimateGridError.errorDescription.getter(uint64_t a1, void *a2)
{
  id v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t countAndFlagsBits;
  Swift::String v9;

  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = a1;
  v5._object = a2;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v9._countAndFlagsBits = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v9)._countAndFlagsBits;

  return countAndFlagsBits;
}

unint64_t sub_1000112B4()
{
  unint64_t result;

  result = qword_1000B75F0;
  if (!qword_1000B75F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ClimateGridError, &type metadata for ClimateGridError);
    atomic_store(result, (unint64_t *)&qword_1000B75F0);
  }
  return result;
}

uint64_t sub_1000112F8()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t countAndFlagsBits;
  Swift::String v8;

  v1 = *v0;
  v2 = (void *)v0[1];
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v8._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = v1;
  v4._object = v2;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v8._countAndFlagsBits = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t type metadata accessor for ClimateGrid()
{
  return objc_opt_self(_TtC7Climate11ClimateGrid);
}

uint64_t type metadata accessor for ClimateGridSource()
{
  return objc_opt_self(_TtC7Climate17ClimateGridSource);
}

uint64_t type metadata accessor for ClimateSlotCell()
{
  return objc_opt_self(_TtC7Climate15ClimateSlotCell);
}

_QWORD *initializeBufferWithCopyOfBuffer for ClimateGridError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for ClimateGridError(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for ClimateGridError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for ClimateGridError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClimateGridError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClimateGridError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClimateGridError()
{
  return &type metadata for ClimateGridError;
}

id sub_10001152C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a3);
  v7 = (void *)v6(a2, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);
  return v7;
}

unint64_t sub_100011590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result;
  uint64_t v4;

  result = qword_1000B7790;
  if (!qword_1000B7790)
  {
    v4 = type metadata accessor for IndexPath(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v4);
    atomic_store(result, (unint64_t *)&qword_1000B7790);
  }
  return result;
}

void sub_1000115D8()
{
  id v0;
  id v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "delegate");

  if (v1)
  {
    v2 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v1, v2, 0, 0, 0);
    v3 = (char *)sub_10006B490();
    swift_unknownObjectRelease(v1);
    v4 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC7Climate18ClimateCoordinator_sessionStatus], "currentSession");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "configuration");

      objc_msgSend(v6, "rightHandDrive");
    }
    else
    {

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000116E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  Swift::String v11;

  if (a1 != 1)
  {
    if (!a1)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems) + 16);
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems) + 16);
      result = v4 + v5;
      if (!__OFADD__(v4, v5))
        return result;
      __break(1u);
    }
    _StringGuts.grow(_:)(53);
    v8._object = (void *)0x800000010008C230;
    v8._countAndFlagsBits = 0xD000000000000032;
    String.append(_:)(v8);
    v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v9._object;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(object);
    v11._countAndFlagsBits = 46;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Climate/ClimateGrid.swift", 25, 2, 146, 0);
    __break(1u);
    return result;
  }
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate17ClimateGridSource_viewableSettingItems);
  if (!((unint64_t)v2 >> 62))
    return *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2 < 0)
    v6 = v2;
  else
    v6 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v2);
  return v7;
}

void *sub_100011848(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;

  v3 = OBJC_IVAR____TtC7Climate15ClimateSlotCell_isHeightCalculated;
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC7Climate15ClimateSlotCell_isHeightCalculated) & 1) == 0)
  {
    objc_msgSend(v1, "setNeedsLayout");
    objc_msgSend(v1, "layoutIfNeeded");
    v4 = objc_msgSend(v1, "contentView");
    objc_msgSend(a1, "size");
    objc_msgSend(v4, "systemLayoutSizeFittingSize:");

    objc_msgSend(a1, "frame");
    objc_msgSend(a1, "setFrame:");
    *((_BYTE *)v1 + v3) = 1;
  }
  return a1;
}

uint64_t sub_100011920(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a6);
    return swift_bridgeObjectRelease(a7);
  }
  return result;
}

void sub_100011998(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2)
  {
    swift_bridgeObjectRelease(a2);
  }
  else if (a3 <= 1u)
  {

  }
}

uint64_t sub_1000119C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1000119E4()
{
  uint64_t v0;

}

uint64_t sub_100011A10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006058((uint64_t *)&unk_1000B77B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100011A50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100011A7C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_10000DC44(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100011A84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100011A94(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void *sub_100011A9C(uint64_t a1)
{
  uint64_t v1;

  return sub_10000E130(a1, v1);
}

uint64_t ClimateZoneServiceStepper.presentationStates.getter()
{
  uint64_t v0;
  id *v1;
  unsigned __int8 v2;
  unsigned int v3;
  unsigned __int8 v4;
  uint64_t v5;
  _BYTE v7[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature);
  swift_beginAccess(v1, v7, 0, 0);
  v2 = objc_msgSend(*v1, "targetTemperatureRestricted");
  v3 = objc_msgSend(*v1, "targetTemperatureInvalid");
  v4 = objc_msgSend(*v1, "targetTemperatureDisabled");
  if ((v2 & 1) != 0)
  {
    v5 = 4;
    if (v3)
      v5 = 12;
    if ((v4 & 1) == 0)
      return v5;
    return v5 | 0x10;
  }
  v5 = 8;
  if (!v3)
    v5 = 0;
  if ((v4 & 1) != 0)
    return v5 | 0x10;
  return v5;
}

float ClimateZoneServiceStepper.characteristicValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id *v5;
  id v6;
  double v7;
  _BYTE v10[24];

  v1 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (id *)(v0 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature);
  swift_beginAccess(v5, v10, 0, 0);
  v6 = objc_msgSend(*v5, "targetTemperature");
  sub_100006B04(0, &qword_1000B7CE0, NSUnitTemperature_ptr);
  static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v6);

  v7 = Measurement.value.getter(v1);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v7;
}

id ClimateZoneServiceStepper.temperature.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature, v3, 0, 0);
  return *v1;
}

void ClimateZoneServiceStepper.temperature.setter(void *a1)
{
  sub_100012290(a1);

}

void (*ClimateZoneServiceStepper.temperature.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (void **)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = *v5;
  v3[3] = *v5;
  v7 = v6;
  return sub_100011DC0;
}

void sub_100011DC0(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;

  v2 = *(void **)a1;
  v4 = (void **)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v7 = *(void **)(v5 + v6);
  if ((a2 & 1) != 0)
  {
    v8 = v3;
    objc_msgSend(v7, "unregisterObserver:", v5);
    v9 = *(void **)(v5 + v6);
    *(_QWORD *)(v5 + v6) = v8;
    v10 = v8;

    objc_msgSend(*(id *)(v5 + v6), "registerObserver:", v5);
    v11 = *v4;
  }
  else
  {
    objc_msgSend(*(id *)(v5 + v6), "unregisterObserver:", v5);
    v12 = *(void **)(v5 + v6);
    *(_QWORD *)(v5 + v6) = v3;
    v11 = v3;

    objc_msgSend(*(id *)(v5 + v6), "registerObserver:", v5);
  }

  free(v2);
}

char *ClimateZoneServiceStepper.__allocating_init(_:primaryButton:axis:)(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  id v8;
  id v9;
  char *v10;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature] = a1;
  v8 = a1;
  v9 = a2;
  v10 = ClimateStepper.init(primaryButton:axis:range:)(v9, a3, objc_msgSend(v8, "targetTemperatureRange"));
  objc_msgSend(v8, "registerObserver:", v10);

  return v10;
}

char *ClimateZoneServiceStepper.init(_:primaryButton:axis:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  id v7;
  char *v8;

  *(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature) = a1;
  v6 = a1;
  v7 = a2;
  v8 = ClimateStepper.init(primaryButton:axis:range:)(v7, a3, objc_msgSend(v6, "targetTemperatureRange"));
  objc_msgSend(v6, "registerObserver:", v8);

  return v8;
}

void ClimateZoneServiceStepper.init(primaryButton:axis:range:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000038, 0x800000010008C330, "Climate/ClimateZoneServiceStepper.swift", 39, 2, 42, 0);
  __break(1u);
}

void sub_100012034()
{
  uint64_t v0;

}

id ClimateZoneServiceStepper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateZoneServiceStepper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100012204()
{
  _QWORD *v0;
  void **v1;
  void *v2;
  uint64_t v3;
  id v4;
  _BYTE v5[24];

  v1 = (void **)(*v0 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature);
  swift_beginAccess(v1, v5, 0, 0);
  v2 = *v1;
  v3 = sub_100006B04(0, &qword_1000B7458, CAFTemperature_ptr);
  v4 = v2;
  CAFPositioned.layoutKey.getter(v3);

}

id sub_100012290(void *a1)
{
  uint64_t v1;
  id *v3;
  id v4;
  id v5;
  _BYTE v7[24];

  v3 = (id *)(v1 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature);
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature, v7, 1, 0);
  objc_msgSend(*v3, "unregisterObserver:", v1);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  return objc_msgSend(*v3, "registerObserver:", v1);
}

uint64_t type metadata accessor for ClimateZoneServiceStepper()
{
  return objc_opt_self(_TtC7Climate25ClimateZoneServiceStepper);
}

void sub_100012338()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(_BYTE *, _QWORD);
  _BYTE v15[32];

  objc_msgSend(v0, "dismissIfModal");
  v1 = (void *)objc_opt_self(UIApplication);
  v2 = objc_msgSend(v1, "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
  v5 = sub_10006B490();
  swift_unknownObjectRelease(v3);
  KeyPath = swift_getKeyPath(&unk_100089050);
  v7 = swift_getKeyPath(&unk_100089078);
  static Published.subscript.getter(v5, KeyPath, v7);

  swift_release(KeyPath);
  swift_release(v7);
  if (v15[0] != 1)
    return;
  v8 = objc_msgSend(v1, "sharedApplication");
  v9 = objc_msgSend(v8, "delegate");

  if (!v9)
  {
LABEL_9:
    __break(1u);
    return;
  }
  swift_dynamicCastClassUnconditional(v9, v4, 0, 0, 0);
  v10 = sub_10006B490();
  swift_unknownObjectRelease(v9);
  v11 = swift_getKeyPath(&unk_100089098);
  v12 = swift_getKeyPath(&unk_1000890C0);
  v14 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v15, v10, v11, v12);
  if ((*v13 & 1) != 0)
    *v13 &= ~1uLL;
  v14(v15, 0);

  swift_release(v11);
  swift_release(v12);
}

void sub_100012524(id a1, SEL a2)
{
  id v2;

  v2 = a1;
  sub_100012338();

}

void *sub_100012568(char a1, uint64_t a2, char a3)
{
  char *v3;
  char *v7;
  unsigned __int8 *v8;
  void *v9;
  int v10;
  unsigned __int8 *v11;
  void *v12;
  unsigned __int8 *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  objc_super v21;

  *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate16ClimateIndicator_circularBackgroundView] = 0;
  v7 = &v3[OBJC_IVAR____TtC7Climate16ClimateIndicator_circleDiameter];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v21.receiver = v3;
  v21.super_class = (Class)type metadata accessor for ClimateIndicator();
  v8 = (unsigned __int8 *)objc_msgSendSuper2(&v21, "init");
  v9 = v8;
  v10 = v8[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v8[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if (v10 == 1)
  {
    v11 = v8;
  }
  else
  {
    v12 = *(void **)&v8[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v13 = v8;
    v14 = objc_msgSend(v12, "removeFromSuperview");
    (*(void (**)(id))((swift_isaMask & *(_QWORD *)v13) + 0x230))(v14);
  }
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v15 = objc_msgSend(v9, "layer");
  objc_msgSend(v15, "setHitTestsAsOpaque:", 1);

  v16 = objc_msgSend(v9, "layer");
  objc_msgSend(v16, "setCornerRadius:", 0.0);

  v17 = objc_msgSend(v9, "titleLabel");
  objc_msgSend(v17, "setAdjustsFontSizeToFitWidth:", 1);

  v18 = objc_msgSend(v9, "titleLabel");
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "setNumberOfLines:", 1);

  }
  if ((a1 & 1) != 0)
    sub_1000127BC(a2, a3 & 1);

  return v9;
}

void sub_1000127BC(uint64_t a1, char a2)
{
  char *v2;
  char *v3;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  double v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  Class isa;
  void *v43;
  CGRect v44;

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = objc_msgSend(v6, "layer");
  objc_msgSend(v6, "bounds");
  objc_msgSend(v7, "setCornerRadius:", CGRectGetWidth(v44) * 0.5);

  v8 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v9 = objc_msgSend(v8, "colorWithAlphaComponent:", 0.15);

  objc_msgSend(v6, "setBackgroundColor:", v9);
  v10 = objc_msgSend(v6, "layer");
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
  v12 = v11;
  v13 = objc_allocWithZone((Class)CAFilter);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v15 = objc_msgSend(v13, "initWithType:", v14);

  objc_msgSend(v10, "setCompositingFilter:", v15);
  objc_msgSend(v6, "setUserInteractionEnabled:", 0);
  objc_msgSend(v3, "insertSubview:atIndex:", v6, 0);
  if ((a2 & 1) != 0)
  {
    v17 = (void *)objc_opt_self(NSLayoutConstraint);
    v29 = sub_100006058((uint64_t *)&unk_1000B7590);
    v19 = swift_allocObject(v29, 64, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100088DF0;
    v30 = objc_msgSend(v6, "leadingAnchor");
    v31 = objc_msgSend(v3, "leadingAnchor");
    v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

    *(_QWORD *)(v19 + 32) = v32;
    v33 = objc_msgSend(v6, "trailingAnchor");
    v34 = objc_msgSend(v3, "trailingAnchor");
    v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

    *(_QWORD *)(v19 + 40) = v35;
    v36 = objc_msgSend(v6, "bottomAnchor");
    v37 = objc_msgSend(v3, "bottomAnchor");
    v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

    *(_QWORD *)(v19 + 48) = v38;
    v27 = objc_msgSend(v6, "topAnchor");
    v28 = objc_msgSend(v3, "topAnchor");
  }
  else
  {
    v16 = *(double *)&a1;
    v17 = (void *)objc_opt_self(NSLayoutConstraint);
    v18 = sub_100006058((uint64_t *)&unk_1000B7590);
    v19 = swift_allocObject(v18, 64, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100088DF0;
    v20 = objc_msgSend(v6, "widthAnchor");
    v21 = objc_msgSend(v20, "constraintEqualToConstant:", v16);

    *(_QWORD *)(v19 + 32) = v21;
    v22 = objc_msgSend(v6, "heightAnchor");
    v23 = objc_msgSend(v22, "constraintEqualToConstant:", v16);

    *(_QWORD *)(v19 + 40) = v23;
    v24 = objc_msgSend(v6, "centerYAnchor");
    v25 = objc_msgSend(v3, "centerYAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

    *(_QWORD *)(v19 + 48) = v26;
    v27 = objc_msgSend(v6, "centerXAnchor");
    v28 = objc_msgSend(v3, "centerXAnchor");
  }
  v39 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v19 + 56) = v39;
  specialized Array._endMutation()(v40);
  v41 = v19;
  sub_100006098();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v41);
  objc_msgSend(v17, "activateConstraints:", isa);

  v43 = *(void **)&v3[OBJC_IVAR____TtC7Climate16ClimateIndicator_circularBackgroundView];
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate16ClimateIndicator_circularBackgroundView] = v6;

}

void sub_100012D0C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  objc_super v4;
  CGRect v5;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ClimateIndicator();
  objc_msgSendSuper2(&v4, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate16ClimateIndicator_circularBackgroundView];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "layer");
    objc_msgSend(v2, "bounds");
    objc_msgSend(v3, "setCornerRadius:", CGRectGetWidth(v5) * 0.5);

  }
}

void sub_100012DDC()
{
  uint64_t v0;

}

id sub_100012DEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateIndicator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateIndicator()
{
  return objc_opt_self(_TtC7Climate16ClimateIndicator);
}

_BYTE *initializeBufferWithCopyOfBuffer for ClimateIndicator.Style(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ClimateIndicator.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClimateIndicator.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100012F34 + 4 * byte_1000890E5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100012F68 + 4 * byte_1000890E0[v4]))();
}

uint64_t sub_100012F68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100012F70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100012F78);
  return result;
}

uint64_t sub_100012F84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100012F8CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100012F90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100012F98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100012FA4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100012FAC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClimateIndicator.Style()
{
  return &type metadata for ClimateIndicator.Style;
}

unint64_t sub_100012FC8()
{
  unint64_t result;

  result = qword_1000B7910;
  if (!qword_1000B7910)
  {
    result = swift_getWitnessTable(&unk_100089148, &type metadata for ClimateIndicator.Style);
    atomic_store(result, (unint64_t *)&qword_1000B7910);
  }
  return result;
}

BOOL sub_10001300C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100013020()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100013064()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10001308C()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_1000130CC()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned __int8 v5;
  uint64_t v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate31ClimateZonesSyncedServiceButton_zonesSynced);
  v2 = objc_msgSend(v1, "on");
  v3 = objc_msgSend(v1, "onRestricted");
  v4 = objc_msgSend(v1, "onInvalid");
  v5 = objc_msgSend(v1, "onDisabled");
  if (v2)
  {
    if ((v3 & 1) != 0)
    {
      v6 = 5;
      if (v4)
        v6 = 13;
      if ((v5 & 1) == 0)
        return v6;
      return v6 | 0x10;
    }
    v6 = 9;
    if (!v4)
      v6 = 1;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  else if (v3)
  {
    v6 = 4;
    if (v4)
      v6 = 12;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  else
  {
    v6 = 8;
    if (!v4)
      v6 = 0;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  return v6;
}

char *sub_1000131A0(void *a1, unsigned __int8 a2)
{
  char *v2;
  id v5;
  char *v6;
  char *v7;
  char v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  BOOL v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  int v24;
  void *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  void **v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void **v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  char v61;
  char v62;
  char *v63;
  id v65;
  id v66;
  uint64_t v67;
  id v68;
  void *v69;
  void *v70;
  char v71[24];
  char v72[24];
  char v73[24];
  objc_super v74;

  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate31ClimateZonesSyncedServiceButton_zonesSynced] = a1;
  v74.receiver = v2;
  v74.super_class = (Class)type metadata accessor for ClimateZonesSyncedServiceButton();
  v5 = a1;
  v6 = (char *)objc_msgSendSuper2(&v74, "init");
  objc_msgSend(v5, "registerObserver:", v6);
  v7 = &v6[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle];
  swift_beginAccess(&v6[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle], v73, 1, 0);
  v8 = *v7;
  *v7 = 1;
  if ((v8 & 1) == 0)
  {
    v9 = v6;
    ClimateButton.updateClimateConfiguration()();

  }
  v10 = &v6[OBJC_IVAR____TtC7Climate13ClimateButton_title];
  swift_beginAccess(&v6[OBJC_IVAR____TtC7Climate13ClimateButton_title], v72, 1, 0);
  v11 = *(_QWORD *)v10;
  v12 = *((_QWORD *)v10 + 1);
  *(_OWORD *)v10 = xmmword_100089190;
  v13 = v6;
  if (!v12
    || (v11 == 1129208147 ? (v14 = v12 == 0xE400000000000000) : (v14 = 0),
        !v14
     && (_stringCompareWithSmolCheck(_:_:expecting:)(1129208147, 0xE400000000000000, v11, v12, 0) & 1) == 0))
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v12);
  v15 = a2;
  if (a2 == 1)
    goto LABEL_12;
  v16 = swift_allocObject(&unk_10009E358, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v13);
  v17 = swift_allocObject(&unk_10009E380, 32, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v5;
  v18 = (uint64_t *)&v13[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v13[OBJC_IVAR____TtC7Climate13ClimateButton_action], v71, 1, 0);
  v19 = *v18;
  v20 = v18[1];
  *v18 = (uint64_t)sub_1000139BC;
  v18[1] = v17;
  v21 = v5;
  sub_100005118(v19, v20);
  if (v15 == 3)
  {
LABEL_12:
    v22 = objc_msgSend(v13, "titleLabel");
    if (v22)
    {
      v23 = v22;
      if (qword_1000B7008 != -1)
        swift_once(&qword_1000B7008, sub_10006A3D0);
      objc_msgSend(v23, "setFont:", qword_1000BC9B0);

    }
    v24 = v13[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
    v13[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
    if (v24 != 1)
    {
      v25 = *(void **)&v13[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
      v26 = v13;
      objc_msgSend(v25, "removeFromSuperview");
      sub_100066C24();

    }
    v27 = qword_1000B6FE0;
    v28 = v13;
    if (v27 != -1)
      swift_once(&qword_1000B6FE0, sub_100047678);
    v66 = v5;
    v29 = (void *)qword_1000BC910;
    v30 = *(void **)algn_1000BC918;
    v31 = qword_1000BC920;
    v32 = objc_msgSend((id)objc_opt_self(UIColor), "systemGreenColor");
    if (!v32)
      v32 = v30;
    v33 = (void **)&v28[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    v34 = *(void **)&v28[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    v67 = *(_QWORD *)&v28[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
    v69 = *(void **)&v28[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
    *v33 = v29;
    v33[1] = v32;
    v33[2] = (void *)v31;
    v35 = v29;
    swift_bridgeObjectRetain_n(v31, 2);
    v65 = v35;
    v36 = *v33;
    v37 = v33[1];
    v38 = (uint64_t)v33[2];
    sub_100005128();
    v39 = v36;
    v40 = v37;
    swift_bridgeObjectRetain(v38);
    v41 = v32;
    if ((static NSObject.== infix(_:_:)(v39) & 1) != 0 && (static NSObject.== infix(_:_:)(v40) & 1) != 0)
    {
      sub_10005B490(v38, v67);
      v43 = v42;
      swift_bridgeObjectRelease(v38);

      if ((v43 & 1) != 0)
      {
LABEL_28:

        swift_bridgeObjectRelease(v67);
        swift_bridgeObjectRelease(v31);
        v45 = qword_1000B6FD8;
        v46 = v28;
        if (v45 != -1)
          swift_once(&qword_1000B6FD8, sub_10004765C);
        v47 = (void *)qword_1000BC8F8;
        v48 = (void *)qword_1000BC900;
        v49 = qword_1000BC908;
        v50 = (void **)&v46[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
        v51 = *(void **)&v46[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
        v70 = *(void **)&v46[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8];
        v52 = *(_QWORD *)&v46[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16];
        *v50 = (void *)qword_1000BC8F8;
        v50[1] = v48;
        v50[2] = (void *)v49;
        v53 = v47;
        v54 = v48;
        swift_bridgeObjectRetain_n(v49, 2);
        v68 = v53;
        v55 = v54;
        v56 = *v50;
        v57 = v50[1];
        v58 = (uint64_t)v50[2];
        v59 = v56;
        v60 = v57;
        swift_bridgeObjectRetain(v58);
        if ((static NSObject.== infix(_:_:)(v59) & 1) != 0 && (static NSObject.== infix(_:_:)(v60) & 1) != 0)
        {
          sub_10005B490(v58, v52);
          v62 = v61;
          swift_bridgeObjectRelease(v58);

          if ((v62 & 1) != 0)
            goto LABEL_36;
        }
        else
        {
          swift_bridgeObjectRelease(v58);

        }
        (*(void (**)(void))((swift_isaMask & *(_QWORD *)v46) + 0x228))();
LABEL_36:

        swift_bridgeObjectRelease(v52);
        swift_bridgeObjectRelease(v49);
        v5 = v66;
        goto LABEL_37;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v38);

    }
    (*(void (**)(uint64_t))((swift_isaMask & *(_QWORD *)v28) + 0x228))(v44);
    goto LABEL_28;
  }
LABEL_37:
  v63 = v13;
  sub_10007813C();
  objc_msgSend(v63, "setEnabled:", (unint64_t)sub_1000130CC() < 8);
  sub_100066A90();
  sub_100066C24();

  return v63;
}

void sub_100013784(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    objc_msgSend(a3, "setOn:", objc_msgSend(a3, "on") ^ 1);
    sub_10007813C();
    objc_msgSend(v6, "setEnabled:", (unint64_t)sub_1000130CC() < 8);
    sub_100066A90();
    sub_100066C24();

  }
}

void sub_100013878()
{
  uint64_t v0;

}

id sub_100013888()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateZonesSyncedServiceButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateZonesSyncedServiceButton()
{
  return objc_opt_self(_TtC7Climate31ClimateZonesSyncedServiceButton);
}

uint64_t sub_10001396C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100013990()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000139BC(uint64_t a1)
{
  uint64_t v1;

  sub_100013784(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1000139C4()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  char v26;
  char v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;

  v1 = (void *)objc_opt_self(UIApplication);
  v2 = v0;
  v3 = objc_msgSend(v1, "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (v4)
  {
    v5 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
    v6 = (unsigned __int8 *)sub_10006B490();
    swift_unknownObjectRelease(v4);
    v7 = v6[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

    v8 = objc_allocWithZone((Class)type metadata accessor for ClimateFanContinuousStepper());
    v9 = sub_100078A54(v2, v7, 2);
    objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v10 = qword_1000B6FC8;
    v11 = v9;
    if (v10 != -1)
      swift_once(&qword_1000B6FC8, sub_1000475D0);
    v12 = (void *)qword_1000BC8C8;
    v13 = (void *)qword_1000BC8D0;
    v14 = qword_1000BC8D8;
    v15 = &v11[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig];
    v16 = *(void **)&v11[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig];
    v39 = *(void **)&v11[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 8];
    v17 = *(_QWORD *)&v11[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 16];
    *(_QWORD *)v15 = qword_1000BC8C8;
    *((_QWORD *)v15 + 1) = v13;
    *((_QWORD *)v15 + 2) = v14;
    v18 = v12;
    v19 = v13;
    v37 = v14;
    swift_bridgeObjectRetain_n(v14, 2);
    v20 = v18;
    v38 = v19;
    v21 = *(id *)v15;
    v22 = (void *)*((_QWORD *)v15 + 1);
    v23 = *((_QWORD *)v15 + 2);
    sub_100005128();
    v24 = v21;
    v25 = v22;
    swift_bridgeObjectRetain(v23);
    if ((static NSObject.== infix(_:_:)(v24) & 1) != 0 && (static NSObject.== infix(_:_:)(v25) & 1) != 0)
    {
      sub_10005B490(v23, v17);
      v27 = v26;
      swift_bridgeObjectRelease(v23);

      v28 = v37;
      if ((v27 & 1) != 0)
      {
LABEL_13:

        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v28);
        v35 = sub_100006058(&qword_1000B7460);
        v36 = swift_allocObject(v35, 48, 7);
        *(_OWORD *)(v36 + 16) = xmmword_100088D00;
        *(_QWORD *)(v36 + 32) = v11;
        *(_QWORD *)(v36 + 40) = &off_1000A0000;
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v23);

      v28 = v37;
    }
    if (v11[OBJC_IVAR____TtC7Climate14ClimateStepper_disableSelectedBackgroundMaterial] == 1)
    {
      v29 = (void *)*((_QWORD *)v15 + 1);
      v30 = *((_QWORD *)v15 + 2);
      v31 = *(id *)v15;
      v32 = v29;
      swift_bridgeObjectRetain(v30);
      v33 = sub_1000783CC();
      v34 = sub_1000477D8(v33, v31, v30);
      swift_bridgeObjectRelease(v30);

    }
    else
    {
      v34 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    }
    objc_msgSend(v11, "setBackgroundColor:", v34);

    sub_100079BB4();
    goto LABEL_13;
  }
  __break(1u);
}

void sub_100013D08()
{
  sub_1000139C4();
}

char *sub_100013D28(void *a1, double a2)
{
  char *v2;
  char *v5;
  char *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  char *v18;
  id v19;
  Class isa;
  char *v21;
  uint64_t v22;
  objc_super v24;

  v5 = &v2[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_scene];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_scene], 0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftPopover] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightPopover] = 0;
  v6 = v2;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v7 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v7 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_cancellables] = v7;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_activeConstraints] = _swiftEmptyArrayStorage;
  *(double *)&v6[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_height] = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  if (a1)
  {
    v8 = objc_opt_self(UIWindowScene);
    v9 = (void *)swift_dynamicCastObjCClass(a1, v8);
    if (v9)
      v10 = a1;
  }
  else
  {
    v9 = 0;
  }
  v11 = type metadata accessor for ClimatePopoverManager();
  v12 = swift_allocObject(v11, 72, 7);
  swift_unknownObjectWeakInit(v12 + 16, 0);
  *(_QWORD *)(v12 + 64) = 0;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  swift_unknownObjectWeakInit(v12 + 56, 0);
  swift_unknownObjectWeakAssign(v12 + 16, v9);

  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_popoverManager] = v12;
  v24.receiver = v6;
  v24.super_class = (Class)type metadata accessor for ClimateOverlayViewController();
  v13 = (char *)objc_msgSendSuper2(&v24, "initWithNibName:bundle:", 0, 0);
  if (a1)
  {
    v14 = sub_100006058((uint64_t *)&unk_1000B7590);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1000891F0;
    v16 = objc_allocWithZone((Class)CRSUIClimatePopoverBSActionsHandler);
    v17 = a1;
    v18 = v13;
    v19 = objc_msgSend(v16, "initWithDelegate:", v18);
    *(_QWORD *)(v15 + 32) = v19;
    specialized Array._endMutation()(v19);
    sub_100006058(&qword_1000B7AE8);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v15);
    v21 = v18;
    objc_msgSend(v17, "_registerSceneActionsHandlerArray:forKey:", isa, v21);

  }
  v22 = *(_QWORD *)&v13[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_popoverManager];
  *(_QWORD *)(v22 + 64) = &off_10009E3C0;
  swift_unknownObjectWeakAssign(v22 + 56, v13);
  return v13;
}

void sub_100013FEC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  id v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char *v29;
  double v30;
  id v31;
  id v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  char *v56;
  id v57[3];
  objc_super v58;

  v1 = sub_100006058(&qword_1000B7B50);
  v49 = *(_QWORD *)(v1 - 8);
  v50 = v1;
  __chkstk_darwin(v1);
  v48 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006058(&qword_1000B7B58);
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  __chkstk_darwin(v3);
  v51 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006058((uint64_t *)&unk_1000B7B60);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006058(&qword_1000B74A0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006058((uint64_t *)&unk_1000B7B70);
  v55 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (objc_class *)type metadata accessor for ClimateOverlayViewController();
  v58.receiver = v0;
  v58.super_class = v15;
  objc_msgSendSuper2(&v58, "viewDidLoad");
  v56 = v0;
  sub_1000145E0();
  v54 = (id)objc_opt_self(UIApplication);
  v16 = objc_msgSend(v54, "sharedApplication");
  v17 = objc_msgSend(v16, "delegate");

  if (v17)
  {
    v47 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v17, v47, 0, 0, 0);
    v18 = (char *)sub_10006B490();
    swift_unknownObjectRelease(v17);
    swift_beginAccess(&v18[OBJC_IVAR____TtC7Climate18ClimateCoordinator__climateSystem], v57, 33, 0);
    v19 = sub_100006058(&qword_1000B74B8);
    Published.projectedValue.getter(v19);
    swift_endAccess(v57);

    v46 = (id)objc_opt_self(NSRunLoop);
    v57[0] = objc_msgSend(v46, "mainRunLoop");
    v20 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
    v45(v7, 1, 1, v20);
    v21 = sub_100006B04(0, (unint64_t *)&unk_1000B7B80, NSRunLoop_ptr);
    v22 = sub_10000AA10(&qword_1000B74C0, &qword_1000B74A0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v23 = sub_10000A98C();
    Publisher.receive<A>(on:options:)(v57, v7, v8, v21, v22, v23);
    sub_100008B88((uint64_t)v7, (uint64_t *)&unk_1000B7B60);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v24 = swift_allocObject(&unk_10009E460, 24, 7);
    v25 = v56;
    swift_unknownObjectWeakInit(v24 + 16, v56);
    v26 = sub_10000AA10(&qword_1000B74C8, (uint64_t *)&unk_1000B7B70, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v27 = Publisher<>.sink(receiveValue:)(sub_100018D00, v24, v12, v26);
    v28 = swift_release(v24);
    (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v14, v12, v28);
    v29 = &v25[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_cancellables];
    swift_beginAccess(&v25[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_cancellables], v57, 33, 0);
    AnyCancellable.store(in:)(v29);
    swift_endAccess(v57);
    *(_QWORD *)&v30 = swift_release(v27).n128_u64[0];
    v31 = objc_msgSend(v54, "sharedApplication", v30);
    v32 = objc_msgSend(v31, "delegate");

    if (v32)
    {
      swift_dynamicCastClassUnconditional(v32, v47, 0, 0, 0);
      v33 = (char *)sub_10006B490();
      swift_unknownObjectRelease(v32);
      swift_beginAccess(&v33[OBJC_IVAR____TtC7Climate18ClimateCoordinator__statusBarSteppersState], v57, 33, 0);
      v34 = sub_100006058((uint64_t *)&unk_1000B7BA0);
      v35 = v48;
      Published.projectedValue.getter(v34);
      swift_endAccess(v57);

      v57[0] = objc_msgSend(v46, "mainRunLoop");
      v45(v7, 1, 1, v20);
      v36 = sub_10000AA10((unint64_t *)&unk_1000B9CD0, &qword_1000B7B50, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v37 = v50;
      v38 = v51;
      Publisher.receive<A>(on:options:)(v57, v7, v50, v21, v36, v23);
      sub_100008B88((uint64_t)v7, (uint64_t *)&unk_1000B7B60);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v37);
      v39 = swift_allocObject(&unk_10009E460, 24, 7);
      swift_unknownObjectWeakInit(v39 + 16, v25);
      v40 = sub_10000AA10((unint64_t *)&unk_1000B7BB0, &qword_1000B7B58, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v41 = v53;
      v42 = Publisher<>.sink(receiveValue:)(sub_100018D08, v39, v53, v40);
      v43 = swift_release(v39);
      (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v38, v41, v43);
      swift_beginAccess(v29, v57, 33, 0);
      AnyCancellable.store(in:)(v29);
      swift_endAccess(v57);
      swift_release(v42);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1000145E0()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  __objc2_prot **v15;
  __objc2_prot **v16;
  uint64_t v17;
  id v18;
  char v19;
  void **v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  unsigned __int8 *v28;
  int v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  Class v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE v109[24];
  __int128 v110;
  _QWORD v111[4];
  char v112[24];

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_activeConstraints];
  swift_beginAccess(&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_activeConstraints], v112, 1, 0);
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
LABEL_60:
    if (v3 < 0)
      v107 = v3;
    else
      v107 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v107);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4)
  {
    v5 = (void *)objc_opt_self(NSLayoutConstraint);
    v6 = *v2;
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    swift_bridgeObjectRetain(v6);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v6);
    objc_msgSend(v5, "deactivateConstraints:", isa);

    v8 = *v2;
    *v2 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v8);
  }
  v110 = xmmword_100088DE0;
  v10 = *(void **)&v1[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView];
  v111[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView];
  v9 = (void *)v111[0];
  v111[1] = 2;
  v111[2] = v10;
  v111[3] = 8;
  v108 = OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_height;
  v11 = v10;
  v12 = v9;
  v13 = 0;
  v14 = 0;
  v15 = &off_1000AA000;
  v16 = &off_1000AA000;
  while (1)
  {
    v19 = v13;
    v20 = (void **)&v111[2 * v14];
    v21 = *v20;
    if (!*v20)
      goto LABEL_8;
    v22 = v20[1];
    v23 = (void *)objc_opt_self(UIApplication);
    v24 = v21;
    v25 = objc_msgSend(v23, "sharedApplication");
    v26 = objc_msgSend(v25, "delegate");

    if (!v26)
      break;
    v27 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v26, v27, 0, 0, 0);
    v28 = (unsigned __int8 *)sub_10006B490();
    swift_unknownObjectRelease(v26);
    v29 = v28[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

    if (v29 == 1)
    {
      if (v22 == (void *)2)
      {
        v30 = objc_msgSend(v24, (SEL)v15[221]);
        v31 = objc_msgSend(v1, (SEL)v16[192]);
        if (!v31)
          goto LABEL_67;
        v32 = v31;
        v33 = objc_msgSend(v31, (SEL)v15[221]);

        v34 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v33, 0.0, v108);
      }
      else
      {
        v30 = objc_msgSend(v24, "rightAnchor");
        v40 = objc_msgSend(v1, (SEL)v16[192]);
        if (!v40)
          goto LABEL_69;
        v41 = v40;
        v33 = objc_msgSend(v40, "rightAnchor");

        v34 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v33, -0.0, v108);
      }
      v42 = v34;

      v43 = objc_msgSend(v24, "topAnchor");
      v44 = objc_msgSend(v1, (SEL)v16[192]);
      if (!v44)
        goto LABEL_65;
      v45 = v44;
      v46 = objc_msgSend(v44, "topAnchor");

      v47 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v46, 27.0);
      v48 = v42;
      v49 = objc_msgSend(v24, "widthAnchor");
      v50 = objc_msgSend(v49, "constraintEqualToConstant:", 45.0);

      v51 = objc_msgSend(v24, "heightAnchor");
      v52 = objc_msgSend(v51, "constraintEqualToConstant:", 33.0);

      swift_beginAccess(v2, v109, 33, 0);
      v3 = *v2;
      if ((unint64_t)*v2 >> 62)
      {
        if (v3 < 0)
          v99 = *v2;
        else
          v99 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v2);
        v100 = _CocoaArrayWrapper.endIndex.getter(v99);
        swift_bridgeObjectRelease(v3);
        v54 = v100 + 4;
        if (__OFADD__(v100, 4))
        {
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
      }
      else
      {
        v53 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        v54 = v53 + 4;
        if (__OFADD__(v53, 4))
          goto LABEL_58;
      }
      v55 = sub_1000761FC(v54, 1);
      specialized Array._endMutation()(v55);
      v56 = v47;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
      v58 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v57 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v58 >= v57 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
      v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v56);
      specialized Array._endMutation()(v59);
      v60 = v48;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
      v62 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v61 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v62 >= v61 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
      v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
      specialized Array._endMutation()(v63);
      v64 = v50;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
      v66 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v65 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v66 >= v65 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
      v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v64);
      specialized Array._endMutation()(v67);
      v68 = v52;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
      v70 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v69 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v70 >= v69 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1);
      v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v68);
      specialized Array._endMutation()(v17);
      swift_endAccess(v109);
      v18 = v60;
    }
    else
    {
      if (v22 == (void *)2)
      {
        v35 = objc_msgSend(v24, (SEL)v15[221]);
        v36 = objc_msgSend(v1, (SEL)v16[192]);
        if (!v36)
          goto LABEL_68;
        v37 = v36;
        v38 = objc_msgSend(v36, (SEL)v15[221]);

        v39 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v38, 0.0, v108);
      }
      else
      {
        v35 = objc_msgSend(v24, "rightAnchor");
        v71 = objc_msgSend(v1, (SEL)v16[192]);
        if (!v71)
          goto LABEL_70;
        v72 = v71;
        v38 = objc_msgSend(v71, "rightAnchor");

        v39 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v38, -0.0, v108);
      }
      v73 = v39;

      v74 = v73;
      v75 = objc_msgSend(v24, "bottomAnchor");
      v76 = objc_msgSend(v1, (SEL)v16[192]);
      if (!v76)
        goto LABEL_66;
      v77 = v76;
      v78 = objc_msgSend(v76, "bottomAnchor");

      v79 = objc_msgSend(v75, "constraintEqualToAnchor:", v78);
      v80 = objc_msgSend(v24, "heightAnchor");
      v81 = objc_msgSend(v80, "constraintEqualToConstant:", *(double *)&v1[v108]);

      v82 = objc_msgSend(v24, "widthAnchor");
      sub_1000173E4();
      v83 = objc_msgSend(v82, "constraintEqualToConstant:");

      swift_beginAccess(v2, v109, 33, 0);
      v3 = *v2;
      if ((unint64_t)*v2 >> 62)
      {
        if (v3 < 0)
          v101 = *v2;
        else
          v101 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v2);
        v102 = _CocoaArrayWrapper.endIndex.getter(v101);
        swift_bridgeObjectRelease(v3);
        v85 = v102 + 4;
        if (__OFADD__(v102, 4))
          goto LABEL_59;
      }
      else
      {
        v84 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        v85 = v84 + 4;
        if (__OFADD__(v84, 4))
          goto LABEL_59;
      }
      v86 = sub_1000761FC(v85, 1);
      specialized Array._endMutation()(v86);
      v56 = v74;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
      v88 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v87 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v88 >= v87 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v87 > 1, v88 + 1, 1);
      v89 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v88, v56);
      specialized Array._endMutation()(v89);
      v18 = v79;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v91 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v90 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v91 >= v90 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1, v91 + 1, 1);
      v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v18);
      specialized Array._endMutation()(v92);
      v60 = v81;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
      v94 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v93 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v94 >= v93 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v93 > 1, v94 + 1, 1);
      v95 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v94, v60);
      specialized Array._endMutation()(v95);
      v64 = v83;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
      v97 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v96 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v97 >= v96 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v96 > 1, v97 + 1, 1);
      v98 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v97, v64);
      specialized Array._endMutation()(v98);
      swift_endAccess(v109);
      v68 = v56;
    }

    v15 = &off_1000AA000;
    v16 = &off_1000AA000;
LABEL_8:
    v13 = 1;
    v14 = 1;
    if ((v19 & 1) != 0)
    {
      v103 = sub_100006058(&qword_1000B7B48);
      swift_arrayDestroy(v111, 2, v103);
      v104 = (void *)objc_opt_self(NSLayoutConstraint);
      v105 = *v2;
      sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
      swift_bridgeObjectRetain(v105);
      v106 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v105);
      objc_msgSend(v104, "activateConstraints:", v106);

      return;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
}

void sub_100015044(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v31;
  _BYTE *v32;
  _QWORD aBlock[5];
  uint64_t v35;
  char v36[24];

  v4 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v4);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ClimateSystemManager(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v36, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    goto LABEL_4;
  v12 = (char *)Strong;
  sub_10000AA50(a1, (uint64_t)v6, (uint64_t *)&unk_1000BA180);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    sub_100018D10((uint64_t)v6, (uint64_t)v10, type metadata accessor for ClimateSystemManager);
    sub_1000158FC((uint64_t)v10);
    v17 = v16;
    v19 = v18;
    v20 = (_QWORD *)swift_unknownObjectWeakLoadStrong(&v12[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_scene]);
    v21 = v20;
    if (v20)
    {
      v22 = objc_msgSend(v20, "_FBSScene");

      v23 = swift_allocObject(&unk_10009E460, 24, 7);
      swift_unknownObjectWeakInit(v23 + 16, v12);
      v21 = (_QWORD *)swift_allocObject(&unk_10009E5A0, 56, 7);
      v21[2] = v23;
      v21[3] = 0;
      v21[4] = v17;
      v21[5] = 0;
      v21[6] = v19;
      v24 = swift_allocObject(&unk_10009E5C8, 32, 7);
      v25 = sub_100018D78;
      *(_QWORD *)(v24 + 16) = sub_100018D78;
      *(_QWORD *)(v24 + 24) = v21;
      aBlock[4] = sub_100018DC0;
      v35 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000154FC;
      aBlock[3] = &unk_10009E5E0;
      v26 = _Block_copy(aBlock);
      v27 = v35;
      swift_retain(v24);
      objc_msgSend(v22, "updateClientSettingsWithBlock:", v26, swift_release(v27).n128_f64[0]);

      _Block_release(v26);
      LOBYTE(v22) = swift_isEscapingClosureAtFileLocation(v24, "", 101, 60, 60, 1);
      swift_release(v24);
      if ((v22 & 1) == 0)
        goto LABEL_12;
      __break(1u);
    }
    v25 = 0;
LABEL_12:
    v28 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v29 = objc_msgSend(v28, "delegate");

    if (v29)
    {
      v30 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v29, v30, 0, 0, 0);
      v31 = (char *)sub_10006B490();
      swift_unknownObjectRelease(v29);
      v32 = *(id *)&v31[OBJC_IVAR____TtC7Climate18ClimateCoordinator_signpostManager];

      v32[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_overlayViewControllerDidLoad] = 1;
      sub_10007012C();

      sub_10000AB60((uint64_t)v10, type metadata accessor for ClimateSystemManager);
      sub_100005118((uint64_t)v25, (uint64_t)v21);
    }
    else
    {
      __break(1u);
    }
    return;
  }

  Strong = sub_100008B88((uint64_t)v6, (uint64_t *)&unk_1000BA180);
LABEL_4:
  if (qword_1000B6FE8 != -1)
    Strong = swift_once(&qword_1000B6FE8, sub_10005CB60);
  v13 = qword_1000BC938;
  v14 = static os_log_type_t.default.getter(Strong);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Can't update temperature steppers, climate system is nil.", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }
}

void sub_100015454(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  void *v15;
  _BYTE v16[24];

  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = objc_opt_self(CRSUIMutableClimateOverlaySceneClientSettings);
    v15 = (void *)swift_dynamicCastObjCClass(a1, v14);
    if (v15)
      objc_msgSend(v15, "setStepperInsets:", a3, a4, a5, a6);

  }
}

void sub_1000154FC(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void sub_100015530(unint64_t *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  double v15;
  double v16;
  double v17;
  char v20;
  char v21[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView);
    if (!v6)
      goto LABEL_22;
    v7 = type metadata accessor for ClimateCompactStatusBarView(0);
    v8 = swift_dynamicCastClass(v6, v7);
    if (!v8)
      goto LABEL_22;
    v9 = *(void **)&v5[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView];
    if (!v9)
      goto LABEL_22;
    v10 = (void *)v8;
    v11 = swift_dynamicCastClass(*(_QWORD *)&v5[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView], v7);
    if (!v11)
      goto LABEL_22;
    v12 = (void *)v11;
    v13 = v6;
    v14 = v9;
    if ((v2 & 2) == 0)
      sub_1000156A4();
    objc_msgSend(v12, "setUserInteractionEnabled:", (v2 >> 1) & 1);
    objc_msgSend(v10, "setUserInteractionEnabled:", (v2 >> 1) & 1);
    objc_msgSend(v12, "alpha");
    v16 = v15;
    objc_msgSend(v10, "alpha");
    if ((v2 & 1) != 0)
    {
      if (v16 > 0.5 && v17 > 0.5)
        goto LABEL_21;
    }
    else if (v16 <= 0.5 && v17 <= 0.5)
    {
      goto LABEL_21;
    }
    v20 = (v2 & 1) == 0;
    sub_10003978C(v20);
    sub_10003978C(v20);
LABEL_21:

    v5 = v14;
LABEL_22:

  }
}

void sub_1000156A4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  void *v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  void *v20;
  _BYTE v21[24];
  char v22[24];

  v1 = type metadata accessor for ClimateZone(0);
  __chkstk_darwin(v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v21[-v5];
  v7 = *(char **)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView];
  if (v7)
  {
    v8 = *(void **)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftPopover];
    if (v8)
    {
      v9 = (uint64_t)&v7[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone];
      swift_beginAccess(&v7[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone], v21, 0, 0);
      sub_100008C1C(v9, (uint64_t)v6);
      v10 = v8;
      v11 = v7;
      v12 = objc_msgSend(v0, "view");
      if (!v12)
      {
        __break(1u);
        goto LABEL_11;
      }
      v13 = v12;
      sub_100045EE8((uint64_t)v8, (uint64_t)v6, v12, (void **)2, 1);

      sub_10000AB60((uint64_t)v6, type metadata accessor for ClimateZone);
    }
  }
  v14 = *(char **)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView];
  if (v14)
  {
    v15 = *(void **)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightPopover];
    if (v15)
    {
      v16 = (uint64_t)&v14[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone];
      swift_beginAccess(&v14[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone], v22, 0, 0);
      sub_100008C1C(v16, (uint64_t)v3);
      v17 = v15;
      v18 = v14;
      v19 = objc_msgSend(v0, "view");
      if (v19)
      {
        v20 = v19;
        sub_100045EE8((uint64_t)v15, (uint64_t)v3, v19, (void **)8, 1);

        sub_10000AB60((uint64_t)v3, type metadata accessor for ClimateZone);
        return;
      }
LABEL_11:
      __break(1u);
    }
  }
}

double sub_1000158FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int *v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  int *v68;
  id v69;
  int v70;
  id v71;
  uint64_t v72;
  unsigned __int8 v73;
  char v74[24];
  id v75;
  _BYTE v76[16];

  v2 = v1;
  v4 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v4);
  v65 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v64 = (uint64_t)&v60 - v7;
  __chkstk_darwin(v8);
  v72 = (uint64_t)&v60 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v60 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - v17;
  sub_10002F3D8();
  v20 = v19;
  v21 = (int *)type metadata accessor for ClimateSystemManager(0);
  sub_10000AA50(a1 + v21[7], (uint64_t)v18, (uint64_t *)&unk_1000B7C40);
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v70 = v20;
  if ((v20 & 1) == 0)
  {
    v25 = *(void **)(a1 + 8);
    v24 = objc_msgSend(v25, "cabin");
    v23 = objc_msgSend(v25, "recirculation");
    v22 = (uint64_t)objc_msgSend(v25, "zonesSynceds");
    if (v22)
    {
      v26 = sub_100006B04(0, (unint64_t *)&qword_1000B7B40, CAFZonesSynced_ptr);
      v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v26);

      if ((unint64_t)v27 >> 62)
      {
        if (v27 < 0)
          v38 = v27;
        else
          v38 = v27 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v27);
        v22 = _CocoaArrayWrapper.endIndex.getter(v38);
        swift_bridgeObjectRelease(v27);
        if (v22)
          goto LABEL_5;
      }
      else
      {
        v22 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v22)
        {
LABEL_5:
          if ((v27 & 0xC000000000000001) != 0)
          {
            v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
          }
          else
          {
            if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_50;
            }
            v28 = *(id *)(v27 + 32);
          }
          v22 = (uint64_t)v28;
        }
      }
      swift_bridgeObjectRelease(v27);
    }
  }
  v69 = (id)v22;
  LOBYTE(v22) = sub_100016198((uint64_t)v18, 2, v24, v23, (void *)v22);
  sub_10000AA50(a1 + v21[8], (uint64_t)v15, (uint64_t *)&unk_1000B7C40);
  if ((v70 & 1) != 0)
  {
    v29 = *(void **)(a1 + 8);
    v21 = (int *)objc_msgSend(v29, "cabin");
    v71 = objc_msgSend(v29, "recirculation");
    v30 = objc_msgSend(v29, "zonesSynceds");
    if (v30)
    {
      v31 = v30;
      v32 = sub_100006B04(0, (unint64_t *)&qword_1000B7B40, CAFZonesSynced_ptr);
      v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);

      if ((unint64_t)v27 >> 62)
      {
        if (v27 < 0)
          v39 = v27;
        else
          v39 = v27 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v27);
        v40 = _CocoaArrayWrapper.endIndex.getter(v39);
        swift_bridgeObjectRelease(v27);
        if (v40)
        {
LABEL_14:
          v63 = v2;
          if ((v27 & 0xC000000000000001) == 0)
          {
            if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
              __break(1u);
            v33 = *(id *)(v27 + 32);
            goto LABEL_17;
          }
LABEL_50:
          v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v27);
LABEL_17:
          v34 = v33;
          v35 = v72;
          swift_bridgeObjectRelease(v27);
          v36 = v71;
          v37 = v34;
          v2 = v63;
          goto LABEL_30;
        }
      }
      else if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_14;
      }
      swift_bridgeObjectRelease(v27);
    }
    v37 = 0;
    v36 = v71;
    v35 = v72;
  }
  else
  {
    v37 = 0;
    v36 = 0;
    v21 = 0;
    v35 = v72;
  }
LABEL_30:
  v68 = v21;
  v71 = v36;
  v66 = v37;
  v73 = (sub_100016198((uint64_t)v15, 8, v21, v36, v37) | v22) & 1;
  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v41 = qword_1000BC938;
  sub_10000AA50((uint64_t)v18, (uint64_t)v12, (uint64_t *)&unk_1000B7C40);
  v42 = sub_10000AA50((uint64_t)v15, v35, (uint64_t *)&unk_1000B7C40);
  v43 = static os_log_type_t.default.getter(v42);
  v44 = os_log_type_enabled(v41, v43);
  v67 = v23;
  if (v44)
  {
    v62 = v24;
    v63 = v2;
    v61 = v15;
    v45 = swift_slowAlloc(34, -1);
    v46 = (_QWORD *)swift_slowAlloc(16, -1);
    *(_DWORD *)v45 = 138413058;
    v47 = v64;
    sub_10000AA50((uint64_t)v12, v64, (uint64_t *)&unk_1000B7C40);
    v48 = type metadata accessor for ClimateZone(0);
    v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48);
    if (v49(v47, 1, v48) == 1)
    {
      sub_100008B88(v47, (uint64_t *)&unk_1000B7C40);
      v75 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v45 + 4, v45 + 12);
      v50 = 0;
    }
    else
    {
      v51 = *(id *)(v47 + *(int *)(v48 + 28));
      v52 = v47;
      v50 = v51;
      sub_10000AB60(v52, type metadata accessor for ClimateZone);
      v75 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v45 + 4, v45 + 12);
    }
    *v46 = v50;
    sub_100008B88((uint64_t)v12, (uint64_t *)&unk_1000B7C40);
    *(_WORD *)(v45 + 12) = 2112;
    v53 = v65;
    sub_10000AA50(v72, v65, (uint64_t *)&unk_1000B7C40);
    if (v49(v53, 1, v48) == 1)
    {
      sub_100008B88(v53, (uint64_t *)&unk_1000B7C40);
      v75 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v45 + 14, v45 + 22);
      v54 = 0;
    }
    else
    {
      v54 = *(id *)(v53 + *(int *)(v48 + 28));
      sub_10000AB60(v53, type metadata accessor for ClimateZone);
      v75 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v45 + 14, v45 + 22);
    }
    v15 = v61;
    v46[1] = v54;
    sub_100008B88(v72, (uint64_t *)&unk_1000B7C40);
    *(_WORD *)(v45 + 22) = 1024;
    LODWORD(v75) = v70 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, (char *)&v75 + 4, v45 + 24, v45 + 28);
    *(_WORD *)(v45 + 28) = 1024;
    swift_beginAccess(&v73, v74, 0, 0);
    LODWORD(v75) = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, (char *)&v75 + 4, v45 + 30, v45 + 34);
    _os_log_impl((void *)&_mh_execute_header, v41, v43, "Update steppers for leftZone: %@, rightZone: %@ isRHD: %{BOOL}d didCreateNewView:%{BOOL}d.", (uint8_t *)v45, 0x22u);
    v55 = sub_100006058((uint64_t *)&unk_1000B8370);
    swift_arrayDestroy(v46, 2, v55);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v45, -1, -1);
    v24 = v62;
  }
  else
  {
    sub_100008B88((uint64_t)v12, (uint64_t *)&unk_1000B7C40);
    sub_100008B88(v35, (uint64_t *)&unk_1000B7C40);
  }
  swift_beginAccess(&v73, &v75, 0, 0);
  v56 = v68;
  if (v73 == 1)
    sub_1000145E0();
  v57 = type metadata accessor for ClimateZone(0);
  v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48);
  if (v58(v18, 1, v57) != 1)
    sub_1000173E4();
  if (v58(v15, 1, v57) != 1)
    sub_1000173E4();

  sub_100008B88((uint64_t)v15, (uint64_t *)&unk_1000B7C40);
  sub_100008B88((uint64_t)v18, (uint64_t *)&unk_1000B7C40);
  return 0.0;
}

uint64_t sub_100016198(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  void *v26;
  void *v27;
  _BYTE v28[24];

  v26 = a4;
  v27 = a5;
  v9 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ClimateZone(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v25 - v17;
  sub_10000AA50(a1, (uint64_t)v11, (uint64_t *)&unk_1000B7C40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100008B88((uint64_t)v11, (uint64_t *)&unk_1000B7C40);
    sub_100016738(a2);
    return 0;
  }
  sub_100018D10((uint64_t)v11, (uint64_t)v18, type metadata accessor for ClimateZone);
  v19 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView;
  if (a2 != 2)
    v19 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView;
  v20 = *(char **)(v5 + *v19);
  if (v20)
  {
    sub_100008C1C((uint64_t)v18, (uint64_t)v15);
    v21 = (uint64_t)&v20[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone];
    swift_beginAccess(&v20[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone], v28, 33, 0);
    v22 = v20;
    sub_100018B9C((uint64_t)v15, v21);
    v23 = swift_endAccess(v28);
    (*(void (**)(uint64_t))((swift_isaMask & *(_QWORD *)v22) + 0xA0))(v23);
    sub_10000AB60((uint64_t)v15, type metadata accessor for ClimateZone);

    sub_10000AB60((uint64_t)v18, type metadata accessor for ClimateZone);
    return 0;
  }
  sub_1000163B8((uint64_t)v18, a2, a3, v26, v27);
  sub_10000AB60((uint64_t)v18, type metadata accessor for ClimateZone);
  return 1;
}

void sub_1000163B8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  char *v5;
  char *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  unsigned __int8 *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  char *v26;
  char *v27;
  id v28;
  char *v29;
  void *v30;
  char *v31;
  id *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  _QWORD v40[4];

  v6 = v5;
  v12 = type metadata accessor for ClimateZone(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v16 = objc_msgSend(v15, "delegate");

  if (!v16)
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v16, v17, 0, 0, 0);
  v18 = (unsigned __int8 *)sub_10006B490();
  swift_unknownObjectRelease(v16);
  v19 = v18[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

  sub_100008C1C(a1, (uint64_t)v14);
  if (v19 == 1)
  {
    v20 = swift_allocObject(&unk_10009E460, 24, 7);
    swift_unknownObjectWeakInit(v20 + 16, v6);
    v21 = swift_allocObject(&unk_10009E578, 32, 7);
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = a2;
    v22 = objc_allocWithZone((Class)type metadata accessor for ClimateCompactStatusBarView(0));
    v39 = a5;
    v23 = a2;
    v24 = a3;
    v25 = a4;
    v26 = sub_10003B7EC((uint64_t)v14, a3, a4, a5, (uint64_t)sub_100018C04, v21);

    a2 = v23;
    swift_release(v21);
    v40[3] = type metadata accessor for ClimateOverlayViewController();
    v40[0] = v6;
    v27 = v6;
    sub_10003A2B4((uint64_t)v40, (uint64_t)"didTapClimateStatusBarButton:", 64);
    sub_100008B88((uint64_t)v40, (uint64_t *)&unk_1000B7B30);
  }
  else
  {
    v28 = objc_allocWithZone((Class)type metadata accessor for ClimateRegularStatusBarView(0));
    v26 = sub_100063218((uint64_t)v14);
    v29 = *(char **)&v26[OBJC_IVAR____TtC7Climate27ClimateRegularStatusBarView_stepper];
    if (v29)
    {
      v30 = *(void **)&v29[OBJC_IVAR____TtC7Climate14ClimateStepper_upButton];
      v31 = v29;
      objc_msgSend(v30, "addTarget:action:forControlEvents:", v6, "didTapClimateStatusBarButton:", 64);
      objc_msgSend(*(id *)&v31[OBJC_IVAR____TtC7Climate14ClimateStepper_downButton], "addTarget:action:forControlEvents:", v6, "didTapClimateStatusBarButton:", 64);
      v32 = (id *)&v31[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton];
      swift_beginAccess(&v31[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton], v40, 0, 0);
      objc_msgSend(*v32, "addTarget:action:forControlEvents:", v6, "didTapClimateStatusBarButton:", 64);
      objc_msgSend(v31, "_setCornerRadius:", 0.0);

    }
  }
  if (a2 == 8)
  {
    v33 = OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView;
  }
  else
  {
    if (a2 != 2)
      goto LABEL_11;
    v33 = OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView;
  }
  v34 = *(void **)&v6[v33];
  *(_QWORD *)&v6[v33] = v26;
  v35 = v26;

LABEL_11:
  objc_msgSend(v26, "setAlpha:", 1.0);
  v36 = objc_msgSend(v6, "view");
  if (v36)
  {
    v37 = v36;
    objc_msgSend(v36, "addSubview:", v26);

    return;
  }
LABEL_14:
  __break(1u);
}

void sub_100016738(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void *v4;

  if (a1 == 2)
    v2 = OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView;
  else
    v2 = OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView;
  v3 = (void **)(v1 + v2);
  v4 = *(void **)(v1 + v2);
  if (v4)
  {
    objc_msgSend(v4, "removeFromSuperview");
    v4 = *v3;
  }
  *v3 = 0;

}

id sub_1000167BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateOverlayViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateOverlayViewController()
{
  return objc_opt_self(_TtC7Climate28ClimateOverlayViewController);
}

void sub_1000168A4(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100016904(1, a3, 0);

  }
}

void sub_100016904(uint64_t a1, void **a2, char a3)
{
  char *v3;
  char *v4;
  char v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  uint64_t *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  void *Strong;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char isEscapingClosureAtFileLocation;
  void **v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;

  v4 = v3;
  v7 = a1;
  if (qword_1000B6FE8 != -1)
    a1 = swift_once(&qword_1000B6FE8, sub_10005CB60);
  v8 = qword_1000BC938;
  v9 = static os_log_type_t.default.getter(a1);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(18, -1);
    *(_DWORD *)v10 = 134218240;
    v57 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v10 + 4, v10 + 12);
    *(_WORD *)(v10 + 12) = 1024;
    LODWORD(v57) = v7 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, (char *)&v57 + 4, v10 + 14, v10 + 18);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Asking to update popover for side: %lu, isHidden: %{BOOL}d", (uint8_t *)v10, 0x12u);
    swift_slowDealloc(v10, -1, -1);
  }
  v11 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftPopover;
  if (a2 != (void **)2)
    v11 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightPopover;
  v12 = *(void **)&v4[*v11];
  v13 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView;
  if (a2 != (void **)2)
    v13 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView;
  v14 = *(void **)&v4[*v13];
  if ((v7 & 1) != 0)
  {
    if (!v12)
    {
      v15 = v14;
      v16 = 0;
      goto LABEL_21;
    }
    v15 = v14;
    v16 = v12;
    v17 = objc_msgSend(v16, "view");
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v17, "alpha");
      v20 = v19;

      if (v20 < 1.0)
      {
        v22 = qword_1000BC938;
        v23 = static os_log_type_t.default.getter(v21);
        if (os_log_type_enabled(v22, v23))
        {
          v24 = (uint8_t *)swift_slowAlloc(12, -1);
          *(_DWORD *)v24 = 134217984;
          v57 = a2;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v24 + 4, v24 + 12);
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "Early return, popover already hidden for side: %lu", v24, 0xCu);
          swift_slowDealloc(v24, -1, -1);
        }

        return;
      }
LABEL_21:
      v28 = (void *)objc_opt_self(UIView);
      v29 = swift_allocObject(&unk_10009E460, 24, 7);
      swift_unknownObjectWeakInit(v29 + 16, v4);
      v30 = swift_allocObject(&unk_10009E488, 41, 7);
      *(_QWORD *)(v30 + 16) = v29;
      *(_QWORD *)(v30 + 24) = v12;
      *(_QWORD *)(v30 + 32) = v14;
      *(_BYTE *)(v30 + 40) = a3 & 1;
      v61 = sub_100018B18;
      v62 = v30;
      v57 = _NSConcreteStackBlock;
      v58 = 1107296256;
      v59 = sub_100070390;
      v60 = &unk_10009E4A0;
      v31 = _Block_copy(&v57);
      v32 = v62;
      v33 = v16;
      v34 = v15;
      swift_release(v32);
      v35 = swift_allocObject(&unk_10009E460, 24, 7);
      swift_unknownObjectWeakInit(v35 + 16, v4);
      v61 = sub_100018B28;
      v62 = v35;
      v57 = _NSConcreteStackBlock;
      v58 = 1107296256;
      v59 = sub_100039970;
      v60 = &unk_10009E4C8;
      v36 = _Block_copy(&v57);
      swift_release(v62);
      objc_msgSend(v28, "animateWithDuration:delay:options:animations:completion:", 0, v31, v36, 0.35, 0.0);

      _Block_release(v36);
      _Block_release(v31);
      return;
    }
    goto LABEL_37;
  }
  if (!v12)
  {
    v37 = v14;
    if (!v14)
      goto LABEL_26;
    goto LABEL_23;
  }
  v25 = v14;
  v26 = objc_msgSend(v12, "view");
  if (!v26)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v27 = v26;
  objc_msgSend(v26, "setAlpha:", 1.0);

  if (v14)
  {
LABEL_23:
    v38 = type metadata accessor for ClimateCompactStatusBarView(0);
    v39 = swift_dynamicCastClass(v14, v38);
    if (v39 && (a3 & 1) == 0)
    {
      v40 = *(_BYTE *)(v39 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator);
      *(_BYTE *)(v39 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator) = 5;
      v41 = v14;
      sub_1000399AC(v40);

    }
  }
LABEL_26:
  if (v12)
  {
    v42 = objc_msgSend(v12, "view");
    if (v42)
    {
      v43 = v42;
      v44 = objc_msgSend(v4, "view");
      if (!v44)
      {
LABEL_39:
        __break(1u);
        return;
      }
      v45 = v44;
      objc_msgSend(v44, "bringSubviewToFront:", v43);

    }
  }
  v46 = objc_msgSend(v4, "view");
  if (!v46)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v47 = v46;
  objc_msgSend(v46, "layoutIfNeeded");

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_scene]);
  if (Strong)
  {
    v49 = Strong;
    v50 = objc_msgSend(Strong, "_FBSScene");

    v51 = swift_allocObject(&unk_10009E3E8, 24, 7);
    *(_QWORD *)(v51 + 16) = v4;
    v52 = swift_allocObject(&unk_10009E410, 32, 7);
    *(_QWORD *)(v52 + 16) = sub_100018A70;
    *(_QWORD *)(v52 + 24) = v51;
    v61 = sub_100018A88;
    v62 = v52;
    v57 = _NSConcreteStackBlock;
    v58 = 1107296256;
    v59 = sub_1000154FC;
    v60 = &unk_10009E428;
    v53 = _Block_copy(&v57);
    v54 = v62;
    v55 = v4;
    swift_retain(v52);
    objc_msgSend(v50, "updateClientSettingsWithBlock:", v53, swift_release(v54).n128_f64[0]);

    _Block_release(v53);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v52, "", 101, 536, 47, 1);
    swift_release(v51);
    swift_release(v52);

    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }

}

void sub_100016F38(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char *v10;
  id v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void **v29;
  void *v30;
  char *v31;
  id v32;
  char v33;
  char *v34;
  id v35;
  void *v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  char *v46;
  id v47;
  _QWORD v48[3];
  _BYTE v49[32];

  v2 = v1;
  v4 = type metadata accessor for ClimateZone(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018B60(a1, (uint64_t)v49);
  v7 = type metadata accessor for ClimateButton();
  if (swift_dynamicCast(v48, v49, (char *)&type metadata for Any + 8, v7, 6))
  {
    v8 = (void *)v48[0];
    v9 = *(void **)&v1[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView];
    if (v9)
    {
      type metadata accessor for ClimateStatusBarView(0);
      v10 = v9;
      v11 = v8;
      v12 = ((uint64_t (*)(void))UIFocusEnvironment.contains(_:))();

      if ((v12 & 1) != 0)
      {
        v13 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftPopover;
        v14 = 2;
        goto LABEL_9;
      }

    }
    v15 = *(void **)&v2[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView];
    if (v15)
    {
      v16 = type metadata accessor for ClimateStatusBarView(0);
      v17 = v8;
      v10 = v15;
      LOBYTE(v16) = UIFocusEnvironment.contains(_:)(v17, v16);

      if ((v16 & 1) != 0)
      {
        v13 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightPopover;
        v14 = 8;
LABEL_9:
        v18 = *(void **)&v2[*v13];
        v19 = (void *)objc_opt_self(UIApplication);
        v20 = v18;
        v21 = objc_msgSend(v19, "sharedApplication");
        v22 = (unint64_t)objc_msgSend(v21, "delegate");

        if (v22)
        {
          v23 = type metadata accessor for ClimateAppDelegate();
          swift_dynamicCastClassUnconditional(v22, v23, 0, 0, 0);
          v24 = sub_10006B490();
          swift_unknownObjectRelease(v22);
          v25 = v24[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

          v22 = 0;
          if ((v25 & 1) == 0 && v18)
          {
            v26 = type metadata accessor for ClimateRegularStatusBarView(0);
            v27 = swift_dynamicCastClass(v10, v26);
            if (v27 && (v28 = *(char **)(v27 + OBJC_IVAR____TtC7Climate27ClimateRegularStatusBarView_stepper)) != 0)
            {
              v45 = v14;
              sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
              v29 = (void **)&v28[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton];
              swift_beginAccess(&v28[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton], v48, 0, 0);
              v30 = *v29;
              v47 = v20;
              v46 = v10;
              v31 = v28;
              v32 = v30;
              v33 = static NSObject.== infix(_:_:)(v32);

              if ((v33 & 1) != 0)
              {
                v34 = v46;
                v22 = (unint64_t)v47;
                v35 = objc_msgSend(v47, "view");
                if (!v35)
                {
LABEL_27:

                  __break(1u);
                  return;
                }
                v36 = v35;
                objc_msgSend(v35, "alpha");
                v38 = v37;

                v22 = v38 == 1.0;
              }
              else
              {

                v22 = 0;
              }
              v14 = v45;
            }
            else
            {
              v22 = 0;
            }
          }
          v42 = (uint64_t)&v10[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone];
          swift_beginAccess(&v10[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone], v49, 0, 0);
          sub_100008C1C(v42, (uint64_t)v6);
          v43 = objc_msgSend(v2, "view");
          if (v43)
          {
            v44 = v43;
            sub_100045EE8((uint64_t)v18, (uint64_t)v6, v43, (void **)v14, v22);

            sub_10000AB60((uint64_t)v6, type metadata accessor for ClimateZone);
            return;
          }
        }
        else
        {
          __break(1u);
        }

        __break(1u);
        goto LABEL_27;
      }

    }
    v39 = static os_log_type_t.error.getter();
    v40 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v41 = (void *)static OS_os_log.default.getter(v40);
    os_log(_:dso:log:_:_:)(v39, &_mh_execute_header, v41, "A tap was detected but no stepper associated", 44, 2, _swiftEmptyArrayStorage);

  }
}

void sub_1000173E4()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  id v7;
  void *v8;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
  v5 = sub_10006B490();
  swift_unknownObjectRelease(v3);
  v6 = v5[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

  if ((v6 & 1) != 0)
    return;
  v7 = objc_msgSend(v1, "view");
  if (!v7)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v8 = v7;
  objc_msgSend(v7, "bounds");

}

void sub_10001750C(void *a1, uint64_t a2)
{
  char *v2;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  Class isa;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint8_t *v27;
  os_log_type_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  os_log_t log;
  uint64_t v33;
  uint64_t v34;

  v5 = objc_msgSend(a1, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_19;
  }
  v6 = v5;
  objc_msgSend(v5, "setAlpha:", 0.0);

  objc_msgSend(v2, "addChildViewController:", a1);
  v7 = objc_msgSend(v2, "view");
  if (!v7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = v7;
  v9 = objc_msgSend(a1, "view");
  if (!v9)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v10 = v9;
  objc_msgSend(v8, "addSubview:", v9);

  objc_msgSend(a1, "didMoveToParentViewController:", v2);
  v11 = objc_msgSend(a1, "view");
  if (!v11)
  {
LABEL_21:
    __break(1u);
    return;
  }
  v12 = v11;
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v13 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView;
  if (a2 != 2)
    v13 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView;
  v14 = *(void **)&v2[*v13];
  if (v14)
  {
    log = v14;
    sub_100017874(a1, log, a2);
    v16 = v15;
    v17 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v16);
    objc_msgSend(v17, "activateConstraints:", isa);

    v19 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftPopover;
    if (a2 != 2)
      v19 = &OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightPopover;
    v20 = *v19;
    v21 = *(void **)&v2[v20];
    *(_QWORD *)&v2[v20] = a1;
    v22 = a1;

    if (qword_1000B6FE8 != -1)
      v23 = swift_once(&qword_1000B6FE8, sub_10005CB60);
    v24 = qword_1000BC938;
    v25 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v26 = 134217984;
      v33 = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v26 + 4, v26 + 12);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Popover added to hiearchy for side: %lu", v26, 0xCu);
      v27 = v26;
LABEL_16:
      swift_slowDealloc(v27, -1, -1);

      return;
    }
  }
  else
  {
    v28 = static os_log_type_t.error.getter();
    v29 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v30 = v28;
    log = (os_log_t)static OS_os_log.default.getter(v29);
    if (os_log_type_enabled(log, v28))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v31 = 134217984;
      v33 = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v31 + 4, v31 + 12);
      _os_log_impl((void *)&_mh_execute_header, log, v30, "Unable to create popover for side: %lu", v31, 0xCu);
      v27 = v31;
      goto LABEL_16;
    }
  }

}

void sub_100017874(void *a1, id a2, uint64_t a3)
{
  void *v3;
  void *v4;
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  char *v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  id v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;

  v4 = v3;
  v8 = _swiftEmptyArrayStorage;
  v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v10 = objc_msgSend(v9, "delegate");

  if (!v10)
  {
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v11 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v10, v11, 0, 0, 0);
  v12 = sub_10006B490();
  swift_unknownObjectRelease(v10);
  v13 = v12[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

  v14 = objc_msgSend(a1, "view");
  v15 = v14;
  if ((v13 & 1) == 0)
  {
    if (a3 == 2)
    {
      if (!v14)
      {
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      v22 = objc_msgSend(v14, "leftAnchor");

      v23 = objc_msgSend(v4, "view");
      if (!v23)
      {
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      v24 = v23;
      v25 = objc_msgSend(v23, "leftAnchor");

      v26 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v25, 6.0);
    }
    else
    {
      if (!v14)
      {
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      v22 = objc_msgSend(v14, "rightAnchor");

      v52 = objc_msgSend(v4, "view");
      if (!v52)
      {
LABEL_64:
        __break(1u);
        return;
      }
      v53 = v52;
      v25 = objc_msgSend(v52, "rightAnchor");

      v26 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v25, -6.0);
    }
    v39 = (char *)v26;

    v54 = objc_msgSend(a1, "view");
    if (v54)
    {
      v55 = v54;
      v56 = objc_msgSend(v54, "heightAnchor");

      v33 = objc_msgSend(v56, "constraintEqualToConstant:", 64.0);
      v57 = objc_msgSend(a1, "view");
      if (v57)
      {
        v58 = v57;
        v59 = objc_msgSend(v57, "bottomAnchor");

        v60 = objc_msgSend(a2, "topAnchor");
        v40 = objc_msgSend(v59, "constraintEqualToAnchor:constant:", v60, -6.0);

        if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
        {
          v61 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
          v62 = v39;
          v63 = v61 + 3;
          if (!__OFADD__(v61, 3))
          {
LABEL_30:
            v64 = sub_1000761FC(v63, 1);
            specialized Array._endMutation()(v64);
            v8 = v33;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
            v66 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v65 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v66 >= v65 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
            v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v8);
            specialized Array._endMutation()(v67);
            v47 = v40;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
            v69 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v68 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v69 >= v68 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
            v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v47);
            specialized Array._endMutation()(v70);
            v51 = v39;
            goto LABEL_35;
          }
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
LABEL_44:
        if ((uint64_t)_swiftEmptyArrayStorage < 0)
          v78 = _swiftEmptyArrayStorage;
        else
          v78 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
        v79 = v39;
        swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        v80 = _CocoaArrayWrapper.endIndex.getter(v78);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v63 = v80 + 3;
        if (!__OFADD__(v80, 3))
          goto LABEL_30;
        goto LABEL_49;
      }
      goto LABEL_56;
    }
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (a3 == 2)
  {
    if (!v14)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v16 = objc_msgSend(v14, "leftAnchor");

    v17 = objc_msgSend(v4, "view");
    if (!v17)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v18 = v17;
    v19 = objc_msgSend(v17, "safeAreaLayoutGuide");

    v20 = objc_msgSend(v19, "leftAnchor");
    v21 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v20, 12.0);
  }
  else
  {
    if (!v14)
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    v16 = objc_msgSend(v14, "rightAnchor");

    v27 = objc_msgSend(v4, "view");
    if (!v27)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    v28 = v27;
    v29 = objc_msgSend(v27, "safeAreaLayoutGuide");

    v20 = objc_msgSend(v29, "rightAnchor");
    v21 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v20, -12.0);
  }
  a2 = v21;

  v30 = objc_msgSend(a1, "view");
  if (!v30)
    goto LABEL_52;
  v31 = v30;
  v32 = objc_msgSend(v30, "heightAnchor");

  v33 = objc_msgSend(v32, "constraintEqualToConstant:", 216.0);
  v34 = objc_msgSend(a1, "view");
  if (!v34)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, "topAnchor");

  v37 = objc_msgSend(v4, "view");
  if (!v37)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v38 = v37;
  v39 = (char *)objc_msgSend(v37, "topAnchor");

  v40 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v39, 12.0);
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    v41 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
    v42 = a2;
    v43 = v41 + 3;
    if (!__OFADD__(v41, 3))
      goto LABEL_19;
    goto LABEL_43;
  }
  if ((uint64_t)_swiftEmptyArrayStorage < 0)
    v75 = _swiftEmptyArrayStorage;
  else
    v75 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
  v76 = a2;
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v77 = _CocoaArrayWrapper.endIndex.getter(v75);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v43 = v77 + 3;
  if (__OFADD__(v77, 3))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
LABEL_19:
  v44 = sub_1000761FC(v43, 1);
  specialized Array._endMutation()(v44);
  v8 = v33;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v39 = *(char **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v45 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if ((unint64_t)v39 >= v45 >> 1)
LABEL_50:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v39 + 1, 1);
  v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v8);
  specialized Array._endMutation()(v46);
  v47 = v40;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
  v49 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v48 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v49 >= v48 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
  v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
  specialized Array._endMutation()(v50);
  v51 = (char *)a2;
LABEL_35:
  v71 = v51;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
  v73 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v72 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v73 >= v72 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1);
  v74 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v71);
  specialized Array._endMutation()(v74);

}

void sub_100018048(uint64_t a1, void *a2, void *a3, char a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  _BYTE v16[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    if (a2)
    {
      v10 = objc_msgSend(a2, "view");
      if (!v10)
      {
        __break(1u);
        return;
      }
      v11 = v10;
      objc_msgSend(v10, "setAlpha:", 0.0);

    }
    if (a3)
    {
      v12 = type metadata accessor for ClimateCompactStatusBarView(0);
      v13 = swift_dynamicCastClass(a3, v12);
      if (v13)
      {
        if ((a4 & 1) == 0)
        {
          v14 = *(_BYTE *)(v13 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator);
          *(_BYTE *)(v13 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator) = 0;
          v15 = a3;
          sub_1000399AC(v14);

        }
      }
    }

  }
}

void sub_100018134(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD aBlock[5];
  uint64_t v14;
  char v15[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (id)Strong;
    if ((a1 & 1) != 0)
    {
      v6 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_scene);
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, "_FBSScene");

        v9 = swift_allocObject(&unk_10009E500, 24, 7);
        *(_QWORD *)(v9 + 16) = v5;
        v10 = swift_allocObject(&unk_10009E528, 32, 7);
        *(_QWORD *)(v10 + 16) = sub_100018D98;
        *(_QWORD *)(v10 + 24) = v9;
        aBlock[4] = sub_100018DC0;
        v14 = v10;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000154FC;
        aBlock[3] = &unk_10009E540;
        v11 = _Block_copy(aBlock);
        v12 = v14;
        v5 = v5;
        swift_retain(v10);
        objc_msgSend(v8, "updateClientSettingsWithBlock:", v11, swift_release(v12).n128_f64[0]);

        _Block_release(v11);
        LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(v10, "", 101, 536, 47, 1);

        swift_release(v9);
        swift_release(v10);
        if ((v8 & 1) == 0)
          return;
        __break(1u);
      }
    }

  }
}

void sub_1000182CC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  id v20;
  id v21;
  double v22;
  double v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  double v52;
  double v53;
  double v54;
  double v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  Class isa;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  char v66[48];
  uint64_t v67;
  char v68[48];
  unint64_t v69;

  v4 = objc_opt_self(CRSUIMutableClimateOverlaySceneClientSettings);
  v5 = swift_dynamicCastObjCClass(a1, v4);
  if (!v5)
    return;
  v65 = (id)v5;
  v69 = (unint64_t)_swiftEmptyArrayStorage;
  v6 = sub_100006058(&qword_1000B7B08);
  inited = swift_initStackObject(v6, v68);
  *(_OWORD *)(inited + 16) = xmmword_100088DE0;
  v8 = *(void **)(a2 + OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftPopover);
  *(_QWORD *)(inited + 32) = v8;
  v9 = *(void **)(a2 + OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightPopover);
  *(_QWORD *)(inited + 40) = v9;
  v67 = inited;
  v64 = a1;
  v10 = (uint64_t)&v67;
  specialized Array._endMutation()(v64);
  v11 = v67;
  v12 = v67 + 32;
  v13 = v9;
  v14 = v8;
  v15 = 0;
  v16 = 0;
  while (1)
  {
    v18 = v15;
    if (v16 >= *(_QWORD *)(v11 + 16))
    {
      __break(1u);
      goto LABEL_28;
    }
    v19 = *(void **)(v12 + 8 * v16);
    if (v19)
      break;
LABEL_5:
    v15 = 1;
    v16 = 1;
    if ((v18 & 1) != 0)
    {
      swift_bridgeObjectRelease(v11);
      v10 = v69;
      if (!(v69 >> 62))
      {
        if (!*(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_25:
          sub_100006B04(0, &qword_1000B7B18, NSValue_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v10);
          objc_msgSend(v65, "setPresentedPopoverFrames:", isa);

          return;
        }
LABEL_15:
        v37 = sub_100006058(&qword_1000B7B10);
        v38 = swift_initStackObject(v37, v66);
        *(_OWORD *)(v38 + 16) = xmmword_100088DE0;
        v39 = *(void **)(a2 + OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView);
        *(_QWORD *)(v38 + 32) = v39;
        v40 = *(void **)(a2 + OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView);
        *(_QWORD *)(v38 + 40) = v40;
        if (v39)
        {
          v41 = v40;
          v42 = v39;
          objc_msgSend(v42, "frame");
          v47 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGRect:", v43, v44, v45, v46);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
          v49 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v48 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v49 >= v48 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
          v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
          specialized Array._endMutation()(v50);

          if (v40)
            goto LABEL_19;
        }
        else
        {
          v60 = v40;
          if (v40)
          {
LABEL_19:
            v51 = v40;
            objc_msgSend(v51, "frame");
            v56 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGRect:", v52, v53, v54, v55);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
            v58 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v57 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v58 >= v57 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
            v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v56);
            specialized Array._endMutation()(v59);
            swift_release(v38);

            goto LABEL_24;
          }
        }
        swift_release(v38);
LABEL_24:
        v10 = v69;
        goto LABEL_25;
      }
LABEL_28:
      if (v10 < 0)
        v62 = v10;
      else
        v62 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v63 = _CocoaArrayWrapper.endIndex.getter(v62);
      swift_bridgeObjectRelease(v10);
      if (!v63)
        goto LABEL_25;
      goto LABEL_15;
    }
  }
  v20 = v19;
  v21 = objc_msgSend(v20, "view");
  if (v21)
  {
    v10 = (uint64_t)v21;
    objc_msgSend(v21, "alpha");
    v23 = v22;

    if (v23 != 0.0)
    {
      v24 = objc_msgSend(v20, "view");
      if (!v24)
        goto LABEL_34;
      v25 = v24;
      objc_msgSend(v24, "frame");
      v27 = v26;
      v29 = v28;
      v31 = v30;
      v33 = v32;

      v34 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGRect:", v27, v29, v31, v33);
      v10 = (uint64_t)&v69;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
      v36 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v35 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v36 >= v35 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
      v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
      specialized Array._endMutation()(v17);

    }
    goto LABEL_5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_100018798(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = result;
  v2 = (unint64_t)result >> 62;
  if ((unint64_t)result >> 62)
  {
    if (result < 0)
      v6 = result;
    else
      v6 = result & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(result);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    result = swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_100006058(&qword_1000B7AF0);
      result = static _SetStorage.allocate(capacity:)(v3);
      v4 = (_QWORD *)result;
      if (!v2)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (!v2)
  {
LABEL_4:
    v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      return (uint64_t)v4;
    goto LABEL_15;
  }
LABEL_11:
  if (v1 < 0)
    v7 = v1;
  else
    v7 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v7);
  result = swift_bridgeObjectRelease(v1);
  if (!v5)
    return (uint64_t)v4;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v27 = v1 & 0xC000000000000001;
  v24 = v1 + 32;
  v25 = v1 & 0xFFFFFFFFFFFFFF8;
  v26 = v1;
  while (v27)
  {
    result = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v1);
    v10 = result;
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_100018A0C(&qword_1000B7AF8, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v15 = -1 << *((_BYTE *)v4 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    v18 = *(_QWORD *)&v9[8 * (v16 >> 6)];
    v19 = 1 << v16;
    if (((1 << v16) & v18) != 0)
    {
      v20 = ~v15;
      v21 = sub_100018A0C(&qword_1000B7B00, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v16);
        result = dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v21);
        if ((result & 1) != 0)
        {
          result = swift_release(v10);
          v1 = v26;
          goto LABEL_17;
        }
        v16 = (v16 + 1) & v20;
        v17 = v16 >> 6;
        v18 = *(_QWORD *)&v9[8 * (v16 >> 6)];
        v19 = 1 << v16;
      }
      while ((v18 & (1 << v16)) != 0);
      v1 = v26;
    }
    *(_QWORD *)&v9[8 * v17] = v19 | v18;
    *(_QWORD *)(v4[6] + 8 * v16) = v10;
    v22 = v4[2];
    v11 = __OFADD__(v22, 1);
    v23 = v22 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v23;
LABEL_17:
    if (v8 == v5)
      return (uint64_t)v4;
  }
  if (v8 >= *(_QWORD *)(v25 + 16))
    goto LABEL_34;
  v10 = *(_QWORD *)(v24 + 8 * v8);
  result = swift_retain(v10);
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100018A0C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AnyCancellable(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100018A4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100018A70(void *a1)
{
  uint64_t v1;

  sub_1000182CC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100018A78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100018A88()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100018AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100018AB8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100018AC0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100018AE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 41, 7);
}

void sub_100018B18()
{
  uint64_t v0;

  sub_100018048(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
}

void sub_100018B28(char a1)
{
  uint64_t v1;

  sub_100018134(a1, v1);
}

uint64_t sub_100018B30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100018B40(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100018B60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100018B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClimateZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100018BE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100018C04(uint64_t a1)
{
  uint64_t v1;

  sub_1000168A4(a1, *(_QWORD *)(v1 + 16), *(void ***)(v1 + 24));
}

void sub_100018C0C()
{
  char *v0;
  void *v1;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_scene], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_leftPopover] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_rightPopover] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v1 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v1 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_cancellables] = v1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateOverlayViewController_activeConstraints] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BA30, "Climate/ClimateOverlayViewController.swift", 42, 2, 40, 0);
  __break(1u);
}

void sub_100018D00(uint64_t a1)
{
  uint64_t v1;

  sub_100015044(a1, v1);
}

void sub_100018D08(unint64_t *a1)
{
  uint64_t v1;

  sub_100015530(a1, v1);
}

uint64_t sub_100018D10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100018D54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100018D78(uint64_t a1)
{
  uint64_t v1;

  sub_100015454(a1, *(_QWORD *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48));
}

uint64_t sub_100018D88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100018DC4(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_delegate);
    if (v6)
    {
      v7 = v6;
      sub_1000467DC(v5, a1 & 1);

      swift_unknownObjectRelease(v7);
    }
    else
    {

    }
  }
}

void sub_100018E74()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  id v6;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v6 = objc_msgSend(v1, "layer");

    v3 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v4 = objc_msgSend(v3, "CGColor");

    objc_msgSend(v6, "setShadowColor:", v4);
    LODWORD(v5) = 1045220557;
    objc_msgSend(v6, "setShadowOpacity:", v5);
    objc_msgSend(v6, "setShadowOffset:", 0.0, 0.0);
    objc_msgSend(v6, "setShadowRadius:", 17.0);

  }
  else
  {
    __break(1u);
  }
}

void sub_100018F78()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  id v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = v0;
  v13 = _swiftEmptyArrayStorage;
  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (v3)
  {
    v4 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
    v5 = sub_10006B490();
    swift_unknownObjectRelease(v3);
    v6 = v5[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

    if ((v6 & 1) != 0)
    {
      if (qword_1000B6F70 != -1)
        swift_once(&qword_1000B6F70, sub_100031CD4);
      v7 = &qword_1000BC830;
    }
    else
    {
      if (qword_1000B6F68 != -1)
        swift_once(&qword_1000B6F68, sub_100031CB0);
      v7 = &qword_1000BC828;
    }
    v8 = *v7;
    v9 = *(_QWORD *)(*v7 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain(*v7);
      v10 = 0;
      do
      {
        v11 = *(_QWORD *)(v8 + 8 * v10++ + 32);
        v12 = v11;
        swift_bridgeObjectRetain(v11);
        sub_10001911C(&v12, v1, (uint64_t *)&v13);
        swift_bridgeObjectRelease(v11);
      }
      while (v9 != v10);
      swift_bridgeObjectRelease(v8);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10001911C(uint64_t *a1, _QWORD *a2, uint64_t *a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  void **v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t result;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;

  v4 = *a1;
  v5 = _swiftEmptyArrayStorage;
  v35 = _swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v32 = v4 + 32;
    swift_bridgeObjectRetain(v4);
    v8 = 0;
    v30 = a2;
    v31 = v4;
    v29 = v6;
    while (1)
    {
      if (v8 >= *(_QWORD *)(v4 + 16))
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        result = (uint64_t)sub_10007A848(0, v5[2] + 1, 1, v5);
        v5 = (_QWORD *)result;
        *a3 = result;
LABEL_29:
        v27 = v5[2];
        v26 = v5[3];
        if (v27 >= v26 >> 1)
        {
          result = (uint64_t)sub_10007A848((_QWORD *)(v26 > 1), v27 + 1, 1, v5);
          v5 = (_QWORD *)result;
          *a3 = result;
        }
        v5[2] = v27 + 1;
        v5[v27 + 4] = v3;
        return result;
      }
      v9 = *(_BYTE *)(v32 + v8);
      v3 = a2;
      v10 = (uint64_t)sub_1000193F0(v9);
      if (v10)
        break;
LABEL_5:
      if (++v8 == v6)
      {
        swift_bridgeObjectRelease(v4);
        v5 = v35;
        goto LABEL_27;
      }
    }
    v11 = v10;
    if ((unint64_t)v10 >> 62)
    {
      if (v10 >= 0)
        v10 &= 0xFFFFFFFFFFFFFF8uLL;
      v12 = _CocoaArrayWrapper.endIndex.getter(v10);
      v33 = v8;
      if (v12)
        goto LABEL_10;
    }
    else
    {
      v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v33 = v8;
      if (v12)
      {
LABEL_10:
        v34 = _swiftEmptyArrayStorage;
        v3 = &v34;
        sub_10006890C(0, v12 & ~(v12 >> 63), 0);
        if (v12 < 0)
          goto LABEL_34;
        v13 = v34;
        if ((v11 & 0xC000000000000001) != 0)
        {
          v14 = 0;
          do
          {
            v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v11);
            v34 = v13;
            v17 = v13[2];
            v16 = v13[3];
            if (v17 >= v16 >> 1)
            {
              sub_10006890C(v16 > 1, v17 + 1, 1);
              v13 = v34;
            }
            ++v14;
            v13[2] = v17 + 1;
            v18 = &v13[2 * v17];
            *((_BYTE *)v18 + 32) = v9;
            v18[5] = v15;
          }
          while (v12 != v14);
        }
        else
        {
          v19 = (void **)(v11 + 32);
          do
          {
            v20 = *v19;
            v34 = v13;
            v22 = v13[2];
            v21 = v13[3];
            v23 = v20;
            if (v22 >= v21 >> 1)
            {
              sub_10006890C(v21 > 1, v22 + 1, 1);
              v13 = v34;
            }
            v13[2] = v22 + 1;
            v24 = &v13[2 * v22];
            *((_BYTE *)v24 + 32) = v9;
            v24[5] = v23;
            ++v19;
            --v12;
          }
          while (v12);
        }
        swift_bridgeObjectRelease(v11);
        v5 = _swiftEmptyArrayStorage;
        a2 = v30;
        v4 = v31;
        v6 = v29;
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease(v11);
    v13 = _swiftEmptyArrayStorage;
LABEL_4:
    v3 = &v35;
    sub_100072C78((uint64_t)v13);
    v8 = v33;
    goto LABEL_5;
  }
LABEL_27:
  if (v5[2])
  {
    v3 = sub_100077FE8((uint64_t)v5);
    swift_bridgeObjectRelease(v5);
    v5 = (_QWORD *)*a3;
    result = swift_isUniquelyReferenced_nonNull_native(*a3);
    *a3 = (uint64_t)v5;
    if ((result & 1) == 0)
      goto LABEL_35;
    goto LABEL_29;
  }
  return swift_bridgeObjectRelease(v5);
}

_QWORD *sub_1000193F0(unsigned int a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t KeyPath;
  uint64_t v18;
  __n128 v19;
  unsigned int v20;
  int v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  unsigned __int8 *v39;
  uint64_t v40;
  id v41;
  char *v42;
  char *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  unsigned __int8 *v49;
  int v50;
  id v51;
  id v52;
  id v53;
  unsigned __int8 *v54;
  uint64_t v55;
  id v56;
  char *v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  char *v64;
  char *v65;
  void *v66;
  uint64_t v67;
  id v68;
  char *v69;
  void *v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void *v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char *v86;
  id v87;
  id v88;
  char *v89;
  id v90;
  void *v91;
  id v92;
  uint64_t v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  id v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t i;
  id v110;
  void *v111;
  id v112;
  char *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  void *v119;
  uint64_t v120;
  id v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;

  v2 = v1;
  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v7);
  v9 = (char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ClimateSystemManager(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v135 = (uint64_t)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)objc_opt_self(UIApplication);
  v14 = objc_msgSend(v13, "sharedApplication");
  v15 = objc_msgSend(v14, "delegate");

  if (!v15)
    goto LABEL_95;
  v134 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v15, v134, 0, 0, 0);
  v16 = sub_10006B490();
  swift_unknownObjectRelease(v15);
  KeyPath = swift_getKeyPath(&unk_100089378);
  v18 = swift_getKeyPath(&unk_1000893A0);
  static Published.subscript.getter(v16, KeyPath, v18);

  swift_release(KeyPath);
  v19 = swift_release(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48))(v9, 1, v10, v19) == 1)
  {
    sub_100008B88((uint64_t)v9, (uint64_t *)&unk_1000BA180);
    return 0;
  }
  sub_10001BDE0((uint64_t)v9, v135);
  v20 = a1;
  v21 = a1;
  v22 = v2;
  switch(v21)
  {
    case 0:
      v23 = &v2[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_climateZone];
      v24 = type metadata accessor for ClimateZone(0);
      v25 = *(_QWORD *)&v23[*(int *)(v24 + 36)];
      if ((unint64_t)v25 >> 62)
      {
        if (v25 < 0)
          v125 = *(_QWORD *)&v23[*(int *)(v24 + 36)];
        else
          v125 = v25 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*(_QWORD *)&v23[*(int *)(v24 + 36)]);
        v26 = _CocoaArrayWrapper.endIndex.getter(v125);
        if (v26)
          goto LABEL_7;
      }
      else
      {
        v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*(_QWORD *)&v23[*(int *)(v24 + 36)]);
        if (v26)
        {
LABEL_7:
          v136 = (unint64_t)_swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)(v26);
          if ((v26 & 0x8000000000000000) == 0)
          {
            v27 = 0;
            do
            {
              if ((v25 & 0xC000000000000001) != 0)
                v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v25);
              else
                v28 = *(id *)(v25 + 8 * v27 + 32);
              v29 = v28;
              ++v27;
              v30 = objc_allocWithZone((Class)type metadata accessor for ClimateVentServiceButton());
              v31 = sub_10004843C(v29, 4);
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
              v32 = *(_QWORD *)(v136 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
              v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v31);
              specialized ContiguousArray._endMutation()(v33);
            }
            while (v26 != v27);
LABEL_57:
            v73 = v136;
LABEL_58:
            swift_bridgeObjectRelease(v25);
            goto LABEL_78;
          }
          __break(1u);
LABEL_73:
          if (v25 < 0)
            v126 = v25;
          else
            v126 = v25 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v25);
          v97 = _CocoaArrayWrapper.endIndex.getter(v126);
          swift_bridgeObjectRelease(v25);
          if (!v97)
            goto LABEL_77;
LABEL_39:
          v136 = (unint64_t)_swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)(v97);
          if ((v97 & 0x8000000000000000) == 0)
          {
            v98 = 0;
            do
            {
              if ((v25 & 0xC000000000000001) != 0)
                v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v98, v25);
              else
                v99 = *(id *)(v25 + 8 * v98 + 32);
              v100 = v99;
              ++v98;
              v101 = objc_allocWithZone((Class)type metadata accessor for ClimateZonesSyncedServiceButton());
              v102 = sub_1000131A0(v100, 4u);
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v102);
              v103 = *(_QWORD *)(v136 + 16);
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v103);
              v104 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v103, v102);
              specialized ContiguousArray._endMutation()(v104);
            }
            while (v97 != v98);
            goto LABEL_57;
          }
          __break(1u);
          goto LABEL_94;
        }
      }
LABEL_77:
      swift_bridgeObjectRelease(v25);
      v73 = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_78;
    case 1:
      v34 = sub_100006058((uint64_t *)&unk_1000B7590);
      v35 = swift_allocObject(v34, 40, 7);
      *(_OWORD *)(v35 + 16) = xmmword_1000891F0;
      v36 = objc_retain(*(id *)&v2[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_climateZone
                                 + *(int *)(type metadata accessor for ClimateZone(0) + 28)]);
      v37 = objc_msgSend(v13, "sharedApplication");
      v38 = objc_msgSend(v37, "delegate");

      if (!v38)
        goto LABEL_96;
      swift_dynamicCastClassUnconditional(v38, v134, 0, 0, 0);
      v39 = (unsigned __int8 *)sub_10006B490();
      swift_unknownObjectRelease(v38);
      v40 = v39[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      v41 = objc_allocWithZone((Class)type metadata accessor for ClimateZoneTargetTemperatureStepper(0));
      v42 = sub_10001C6FC(v36, v40, 4);
      *(_QWORD *)(v35 + 32) = v42;
      v136 = v35;
LABEL_28:
      specialized Array._endMutation()(v42);
      v73 = v136;
      goto LABEL_78;
    case 2:
      v43 = &v2[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_climateZone];
      v44 = *(void **)&v43[*(int *)(type metadata accessor for ClimateZone(0) + 32)];
      if (!v44)
        goto LABEL_64;
      v45 = v44;
      v46 = objc_msgSend(v13, "sharedApplication");
      v47 = objc_msgSend(v46, "delegate");

      if (!v47)
        goto LABEL_98;
      v48 = v134;
      swift_dynamicCastClassUnconditional(v47, v134, 0, 0, 0);
      v49 = (unsigned __int8 *)sub_10006B490();
      swift_unknownObjectRelease(v47);
      v50 = v49[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      if (v50 == 1)
      {
        v51 = v45;
        v52 = objc_msgSend(v13, "sharedApplication");
        v53 = objc_msgSend(v52, "delegate");

        if (!v53)
          goto LABEL_99;
        swift_dynamicCastClassUnconditional(v53, v48, 0, 0, 0);
        v54 = (unsigned __int8 *)sub_10006B490();
        swift_unknownObjectRelease(v53);
        v55 = v54[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

        v56 = objc_allocWithZone((Class)type metadata accessor for ClimateFanContinuousStepper());
        v57 = sub_100078A54(v51, v55, 4);
      }
      else
      {
        v121 = objc_allocWithZone((Class)type metadata accessor for ClimateFanServiceStepper());
        v57 = sub_1000636A4(v45, 4u);
      }
      v122 = v57;
      v123 = sub_100006058((uint64_t *)&unk_1000B7590);
      v124 = swift_allocObject(v123, 40, 7);
      *(_OWORD *)(v124 + 16) = xmmword_1000891F0;
      *(_QWORD *)(v124 + 32) = v122;
      v136 = v124;
      specialized Array._endMutation()(v124);
      v73 = v136;

      goto LABEL_78;
    case 4:
      v58 = &v2[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_climateZone];
      v59 = *(void **)&v58[*(int *)(type metadata accessor for ClimateZone(0) + 40)];
      if (!v59)
        goto LABEL_64;
      v60 = sub_100006058((uint64_t *)&unk_1000B7590);
      v61 = swift_allocObject(v60, 40, 7);
      *(_OWORD *)(v61 + 16) = xmmword_1000891F0;
      v62 = objc_allocWithZone((Class)type metadata accessor for ClimateSeatHeatingCoolingServiceButton());
      v63 = v59;
      v64 = sub_10003D3A4(v63);
      goto LABEL_26;
    case 5:
      v65 = &v2[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_climateZone];
      v66 = *(void **)&v65[*(int *)(type metadata accessor for ClimateZone(0) + 44)];
      if (!v66)
        goto LABEL_64;
      v67 = sub_100006058((uint64_t *)&unk_1000B7590);
      v61 = swift_allocObject(v67, 40, 7);
      *(_OWORD *)(v61 + 16) = xmmword_1000891F0;
      v68 = objc_allocWithZone((Class)type metadata accessor for ClimateSeatFanServiceButton());
      v63 = v66;
      v64 = sub_100032FB4(v63);
      goto LABEL_26;
    case 7:
      v69 = &v2[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_climateZone];
      v70 = *(void **)&v69[*(int *)(type metadata accessor for ClimateZone(0) + 48)];
      if (!v70)
        goto LABEL_64;
      v71 = sub_100006058((uint64_t *)&unk_1000B7590);
      v61 = swift_allocObject(v71, 40, 7);
      *(_OWORD *)(v61 + 16) = xmmword_1000891F0;
      v72 = objc_allocWithZone((Class)type metadata accessor for ClimateSteeringWheelButton());
      v63 = v70;
      v64 = sub_100034828(v63);
LABEL_26:
      *(_QWORD *)(v61 + 32) = v64;
      v136 = v61;
      specialized Array._endMutation()(v64);
      v73 = v136;

      goto LABEL_78;
    case 9:
      v74 = sub_100006058((uint64_t *)&unk_1000B7590);
      v75 = swift_allocObject(v74, 40, 7);
      *(_OWORD *)(v75 + 16) = xmmword_1000891F0;
      v76 = &v2[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_climateZone];
      v77 = *(void **)&v76[*(int *)(type metadata accessor for ClimateZone(0) + 28)];
      v78 = sub_100006B04(0, &qword_1000B7458, CAFTemperature_ptr);
      v79 = v77;
      CAFPositionedRequired.layoutKey.getter(v78);

      v80 = objc_allocWithZone((Class)type metadata accessor for ClimateDeepLinkButton());
      v42 = sub_10003C70C((uint64_t)v6);
      *(_QWORD *)(v75 + 32) = v42;
      v136 = v75;
      goto LABEL_28;
    case 10:
      v81 = objc_msgSend(*(id *)(v135 + 8), "recirculation");
      if (!v81)
        goto LABEL_64;
      v82 = v81;
      v83 = sub_100006058((uint64_t *)&unk_1000B7590);
      v84 = swift_allocObject(v83, 40, 7);
      *(_OWORD *)(v84 + 16) = xmmword_1000891F0;
      objc_allocWithZone((Class)type metadata accessor for ClimateRecirculationServiceButton());
      v85 = v82;
      v86 = sub_10006C02C(v85, 4);
      goto LABEL_63;
    case 11:
      v87 = objc_msgSend(v13, "sharedApplication");
      v88 = objc_msgSend(v87, "delegate");

      if (!v88)
        goto LABEL_97;
      swift_dynamicCastClassUnconditional(v88, v134, 0, 0, 0);
      v89 = (char *)sub_10006B490();
      swift_unknownObjectRelease(v88);
      v90 = objc_msgSend(*(id *)&v89[OBJC_IVAR____TtC7Climate18ClimateCoordinator_sessionStatus], "currentSession");
      if (v90)
      {
        v91 = v90;
        v92 = objc_msgSend(v90, "configuration");

        LOBYTE(v91) = objc_msgSend(v92, "rightHandDrive");
        if ((v91 & 1) != 0)
        {
          sub_10001A17C();
          if (v93 != 8)
            goto LABEL_64;
          goto LABEL_61;
        }
      }
      else
      {

      }
      sub_10001A17C();
      if (v117 != 2)
      {
LABEL_64:
        sub_10000AB60(v135, type metadata accessor for ClimateSystemManager);
        return 0;
      }
LABEL_61:
      v118 = objc_msgSend(*(id *)(v135 + 8), "cabin");
      if (!v118)
        goto LABEL_64;
      v119 = v118;
      v120 = sub_100006058((uint64_t *)&unk_1000B7590);
      v84 = swift_allocObject(v120, 40, 7);
      *(_OWORD *)(v84 + 16) = xmmword_1000891F0;
      objc_allocWithZone((Class)type metadata accessor for ClimateMaxACButton());
      v85 = v119;
      v86 = sub_10005E388(v85, 4u);
LABEL_63:
      *(_QWORD *)(v84 + 32) = v86;
      v136 = v84;
      specialized Array._endMutation()(v86);
      v73 = v136;

LABEL_78:
      if ((unint64_t)v73 >> 62)
      {
        if (v73 < 0)
          v129 = v73;
        else
          v129 = v73 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v73);
        v130 = _CocoaArrayWrapper.endIndex.getter(v129);
        swift_bridgeObjectRelease(v73);
        if (v130)
          goto LABEL_80;
LABEL_85:
        sub_10000AB60(v135, type metadata accessor for ClimateSystemManager);
        swift_bridgeObjectRelease(v73);
        return 0;
      }
      if (!*(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_85;
LABEL_80:
      v127 = v22;
      v128 = sub_10001BE24(v73, v127, v20);

      sub_10000AB60(v135, type metadata accessor for ClimateSystemManager);
      swift_bridgeObjectRelease(v73);
      return v128;
    case 12:
      v94 = objc_msgSend(*(id *)(v135 + 8), "zonesSynceds");
      if (!v94)
        goto LABEL_64;
      v95 = v94;
      v96 = sub_100006B04(0, (unint64_t *)&qword_1000B7B40, CAFZonesSynced_ptr);
      v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v95, v96);

      if ((unint64_t)v25 >> 62)
        goto LABEL_73;
      v97 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v97)
        goto LABEL_39;
      goto LABEL_77;
    case 13:
      v105 = objc_msgSend(*(id *)(v135 + 8), "defrosts");
      if (!v105)
        goto LABEL_64;
      v106 = v105;
      v107 = sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
      v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v106, v107);

      v136 = (unint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v25 >> 62)
      {
        if (v25 < 0)
          v132 = v25;
        else
          v132 = v25 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v25);
        v108 = _CocoaArrayWrapper.endIndex.getter(v132);
        if (v108)
        {
LABEL_48:
          if (v108 >= 1)
          {
            for (i = 0; i != v108; ++i)
            {
              if ((v25 & 0xC000000000000001) != 0)
                v110 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v25);
              else
                v110 = *(id *)(v25 + 8 * i + 32);
              v111 = v110;
              v112 = objc_allocWithZone((Class)type metadata accessor for ClimateDefrostServiceButton());
              v113 = sub_1000062AC(v111, 4u);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v113);
              v115 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v114 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v115 >= v114 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v114 > 1, v115 + 1, 1);
              v116 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v115, v113);
              specialized Array._endMutation()(v116);
            }
            swift_bridgeObjectRelease(v25);
            goto LABEL_57;
          }
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
          JUMPOUT(0x10001A144);
        }
      }
      else
      {
        v108 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v25);
        if (v108)
          goto LABEL_48;
      }
      swift_bridgeObjectRelease(v25);
      v73 = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_58;
    default:
      goto LABEL_64;
  }
}

void sub_10001A17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  unint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v0 = type metadata accessor for CAUVehicleLayoutKey(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v39 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100006058((uint64_t *)&unk_1000B7C30);
  __chkstk_darwin(v41);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006058(&qword_1000B8D00);
  __chkstk_darwin(v11);
  v40 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v39 - v17;
  v19 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v20 = objc_msgSend(v19, "delegate");

  if (!v20)
  {
    __break(1u);
    return;
  }
  v21 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v20, v21, 0, 0, 0);
  v22 = sub_10006B490();
  swift_unknownObjectRelease(v20);
  KeyPath = swift_getKeyPath(&unk_100089378);
  v24 = swift_getKeyPath(&unk_1000893A0);
  static Published.subscript.getter(v22, KeyPath, v24);

  swift_release(KeyPath);
  swift_release(v24);
  v25 = type metadata accessor for ClimateSystemManager(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v7, 1, v25) == 1)
  {
    v26 = (uint64_t *)&unk_1000BA180;
    v27 = (uint64_t)v7;
  }
  else
  {
    sub_10000AA50((uint64_t)&v7[*(int *)(v25 + 28)], (uint64_t)v10, (uint64_t *)&unk_1000B7C40);
    sub_10000AB60((uint64_t)v7, type metadata accessor for ClimateSystemManager);
    v28 = type metadata accessor for ClimateZone(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v10, 1, v28) != 1)
    {
      v32 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
      v32(v18, v10, v0);
      sub_10000AB60((uint64_t)v10, type metadata accessor for ClimateZone);
      v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
      v31(v18, 0, 1, v0);
      v30 = v41;
      v32(v15, (char *)(v42 + OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_climateZone), v0);
      goto LABEL_8;
    }
    v26 = (uint64_t *)&unk_1000B7C40;
    v27 = (uint64_t)v10;
  }
  sub_100008B88(v27, v26);
  v30 = v41;
  v29 = v42;
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
  v31(v18, 1, 1, v0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v15, v29 + OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_climateZone, v0);
LABEL_8:
  v31(v15, 0, 1, v0);
  v33 = (uint64_t)&v4[*(int *)(v30 + 48)];
  sub_10000AA50((uint64_t)v18, (uint64_t)v4, &qword_1000B8D00);
  sub_10000AA50((uint64_t)v15, v33, &qword_1000B8D00);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v34((uint64_t)v4, 1, v0) == 1)
  {
    sub_100008B88((uint64_t)v15, &qword_1000B8D00);
    sub_100008B88((uint64_t)v18, &qword_1000B8D00);
    if (v34(v33, 1, v0) == 1)
    {
      sub_100008B88((uint64_t)v4, &qword_1000B8D00);
      return;
    }
    goto LABEL_13;
  }
  v35 = v40;
  sub_10000AA50((uint64_t)v4, v40, &qword_1000B8D00);
  if (v34(v33, 1, v0) == 1)
  {
    sub_100008B88((uint64_t)v15, &qword_1000B8D00);
    sub_100008B88((uint64_t)v18, &qword_1000B8D00);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v35, v0);
LABEL_13:
    sub_100008B88((uint64_t)v4, (uint64_t *)&unk_1000B7C30);
    return;
  }
  v36 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v39, v33, v0);
  v37 = sub_100006B3C();
  dispatch thunk of static Equatable.== infix(_:_:)(v35, v36, v0, v37);
  v38 = *(void (**)(char *, uint64_t))(v1 + 8);
  v38(v36, v0);
  sub_100008B88((uint64_t)v15, &qword_1000B8D00);
  sub_100008B88((uint64_t)v18, &qword_1000B8D00);
  v38((char *)v35, v0);
  sub_100008B88((uint64_t)v4, &qword_1000B8D00);
}

id sub_10001A6A8(void *a1, unsigned __int8 a2)
{
  id v2;

  sub_10001B510(a1, a2);
  return v2;
}

id sub_10001A760()
{
  return sub_10001ABE4(0, (uint64_t (*)(void))type metadata accessor for ClimateQuickActionPopover);
}

uint64_t sub_10001A7E0()
{
  return type metadata accessor for ClimateQuickActionPopover(0);
}

uint64_t type metadata accessor for ClimateQuickActionPopover(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B7BF0;
  if (!qword_1000B7BF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateQuickActionPopover);
  return result;
}

uint64_t sub_10001A824(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  result = type metadata accessor for ClimateZone(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100089308;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = &unk_100089320;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_10001A8C0()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;

  v0 = (void *)objc_opt_self(UIApplication);
  v1 = objc_msgSend(v0, "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");

  if (v2)
  {
    v3 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
    v4 = sub_10006B490();
    swift_unknownObjectRelease(v2);
    v5 = objc_msgSend(v0, "sharedApplication");
    v6 = objc_msgSend(v5, "userInterfaceLayoutDirection");

    sub_10001A17C();
    if (v7 != 8 || v6 == (id)1)
      sub_10001A17C();
  }
  else
  {
    __break(1u);
  }
}

id sub_10001ABD8(uint64_t a1)
{
  return sub_10001ABE4(a1, type metadata accessor for ClimatePopoverTapView);
}

id sub_10001ABE4(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for ClimatePopoverTapView()
{
  return objc_opt_self(_TtC7Climate21ClimatePopoverTapView);
}

uint64_t sub_10001AC48(uint64_t result)
{
  uint64_t v1;
  void (*v2)(_QWORD);
  char v3;
  uint64_t v4;

  v2 = *(void (**)(_QWORD))(v1 + OBJC_IVAR____TtC7Climate21ClimatePopoverTapView_tapHandler);
  if (v2)
  {
    v3 = result;
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate21ClimatePopoverTapView_tapHandler + 8);
    swift_retain(v4);
    v2(v3 & 1);
    return sub_100005118((uint64_t)v2, v4);
  }
  return result;
}

void sub_10001ACB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t i;
  id v18;
  void *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  Class isa;
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (**v54)(char);
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  Class v73;
  uint64_t v74;
  uint64_t v75;
  objc_super v76;

  *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_sourceView] = 0;
  v3[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_isSet] = 0;
  v7 = OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_contentView;
  v8 = objc_allocWithZone((Class)UIView);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, "init");
  v10 = &v9[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10, 0);
  v11 = OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_popoverTapView;
  *(_QWORD *)&v9[v11] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimatePopoverTapView()), "init");
  sub_100008C1C(a1, (uint64_t)&v9[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_climateZone]);
  *((_QWORD *)v10 + 1) = a3;
  swift_unknownObjectWeakAssign(v10, a2);

  v76.receiver = v9;
  v76.super_class = (Class)type metadata accessor for ClimateQuickActionPopover(0);
  v12 = (char *)objc_msgSendSuper2(&v76, "initWithNibName:bundle:", 0, 0);
  v13 = type metadata accessor for ClimateZone(0);
  v14 = *(_QWORD *)(a1 + *(int *)(v13 + 24));
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v20 = *(_QWORD *)(a1 + *(int *)(v13 + 24));
    else
      v20 = v14 & 0xFFFFFFFFFFFFFF8;
    v21 = v12;
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (!v15)
      goto LABEL_13;
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v12;
    swift_bridgeObjectRetain(v14);
    if (!v15)
      goto LABEL_13;
  }
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_21;
  }
  for (i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
    else
      v18 = *(id *)(v14 + 8 * i + 32);
    v19 = v18;
    objc_msgSend(v18, "registerObserver:", v12);

  }
LABEL_13:
  swift_bridgeObjectRelease(v14);
  v22 = OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_contentView;
  objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_contentView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v23 = objc_msgSend(v12, "view");
  if (!v23)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v24 = v23;
  objc_msgSend(v23, "addSubview:", *(_QWORD *)&v12[v22]);

  v25 = sub_100006058((uint64_t *)&unk_1000B7590);
  v26 = swift_allocObject(v25, 64, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100088DF0;
  v27 = objc_msgSend(*(id *)&v12[v22], "leftAnchor");
  v28 = objc_msgSend(v12, "view");
  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, "leftAnchor");

  v31 = objc_msgSend(v27, "constraintEqualToAnchor:", v30);
  *(_QWORD *)(v26 + 32) = v31;
  v32 = objc_msgSend(*(id *)&v12[v22], "rightAnchor");
  v33 = objc_msgSend(v12, "view");
  if (!v33)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v34 = v33;
  v75 = v25;
  v35 = objc_msgSend(v33, "rightAnchor");

  v36 = objc_msgSend(v32, "constraintEqualToAnchor:", v35);
  *(_QWORD *)(v26 + 40) = v36;
  v37 = objc_msgSend(*(id *)&v12[v22], "topAnchor");
  v38 = objc_msgSend(v12, "view");
  if (!v38)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v39 = v38;
  v74 = a1;
  v40 = objc_msgSend(v38, "topAnchor");

  v41 = objc_msgSend(v37, "constraintEqualToAnchor:", v40);
  *(_QWORD *)(v26 + 48) = v41;
  v42 = objc_msgSend(*(id *)&v12[v22], "bottomAnchor");
  v43 = objc_msgSend(v12, "view");
  if (!v43)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v44 = v43;
  v45 = (void *)objc_opt_self(NSLayoutConstraint);
  v46 = objc_msgSend(v44, "bottomAnchor");

  v47 = objc_msgSend(v42, "constraintEqualToAnchor:", v46);
  *(_QWORD *)(v26 + 56) = v47;
  specialized Array._endMutation()(v48);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  objc_msgSend(v45, "activateConstraints:", isa);

  objc_msgSend(*(id *)&v12[v22], "_setContinuousCornerRadius:", 20.0);
  v50 = objc_msgSend(*(id *)&v12[v22], "layer");
  objc_msgSend(v50, "setMasksToBounds:", 1);

  v51 = OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_popoverTapView;
  v52 = *(char **)&v12[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_popoverTapView];
  objc_msgSend(v52, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v53 = swift_allocObject(&unk_10009E668, 24, 7);
  swift_unknownObjectWeakInit(v53 + 16, v12);
  v54 = (void (**)(char))&v52[OBJC_IVAR____TtC7Climate21ClimatePopoverTapView_tapHandler];
  v55 = *(_QWORD *)&v52[OBJC_IVAR____TtC7Climate21ClimatePopoverTapView_tapHandler];
  v56 = *(_QWORD *)&v52[OBJC_IVAR____TtC7Climate21ClimatePopoverTapView_tapHandler + 8];
  *v54 = sub_10001BFD4;
  v54[1] = (void (*)(char))v53;
  sub_100005118(v55, v56);
  v57 = objc_msgSend(v12, "view");
  if (v57)
  {
    v58 = v57;
    objc_msgSend(v57, "addSubview:", *(_QWORD *)&v12[v51]);

    v59 = swift_allocObject(v75, 64, 7);
    *(_OWORD *)(v59 + 16) = xmmword_100088DF0;
    v60 = objc_msgSend(*(id *)&v12[v51], "leftAnchor");
    v61 = objc_msgSend(*(id *)&v12[v22], "leftAnchor");
    v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

    *(_QWORD *)(v59 + 32) = v62;
    v63 = objc_msgSend(*(id *)&v12[v51], "trailingAnchor");
    v64 = objc_msgSend(*(id *)&v12[v22], "trailingAnchor");
    v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

    *(_QWORD *)(v59 + 40) = v65;
    v66 = objc_msgSend(*(id *)&v12[v51], "topAnchor");
    v67 = objc_msgSend(*(id *)&v12[v22], "topAnchor");
    v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

    *(_QWORD *)(v59 + 48) = v68;
    v69 = objc_msgSend(*(id *)&v12[v51], "bottomAnchor");
    v70 = objc_msgSend(*(id *)&v12[v22], "bottomAnchor");
    v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

    *(_QWORD *)(v59 + 56) = v71;
    specialized Array._endMutation()(v72);
    v73 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v59);
    objc_msgSend(v45, "activateConstraints:", v73);

    sub_10000AB60(v74, type metadata accessor for ClimateZone);
    return;
  }
LABEL_26:
  __break(1u);
}

void sub_10001B43C()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_sourceView] = 0;
  v0[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_isSet] = 0;
  v1 = OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_contentView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v2 = &v0[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v3 = OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_popoverTapView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimatePopoverTapView()), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BA30, "Climate/ClimateQuickActionPopover.swift", 39, 2, 74, 0);
  __break(1u);
}

void sub_10001B510(void *a1, unsigned __int8 a2)
{
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  char v30;
  char v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  int v39;
  double v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  unsigned __int8 *v56;
  int v57;
  double v58;
  id v59;
  id v60;
  id v61;
  id v62;
  unsigned __int8 *v63;
  int v64;
  double v65;
  void *v66;
  id v67;
  uint64_t v68;
  Class isa;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  unsigned __int8 *v78;
  int v79;
  double v80;
  id v81;
  id v82;
  id v83;
  unsigned __int8 *v84;
  int v85;

  ObjectType = swift_getObjectType(a1);
  v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ClimateOnOffColoredProtocol);
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    v6 = a1;
  else
    v6 = 0;
  if (v6)
  {
    v7 = swift_getObjectType(v6);
    v8 = (void *)objc_opt_self(UIColor);
    v9 = a1;
    v10 = objc_msgSend(v8, "clearColor");
    v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v7, v5);
    v13 = v12;
    v15 = v14;

    swift_bridgeObjectRelease(v15);
    (*(void (**)(id, uint64_t, void *, uint64_t, uint64_t))(v5 + 40))(v10, v13, &_swiftEmptyDictionarySingleton, v7, v5);
LABEL_17:

    goto LABEL_18;
  }
  v16 = type metadata accessor for ClimateStepper();
  v17 = swift_dynamicCastClass(a1, v16);
  if (v17)
  {
    v18 = (_QWORD *)v17;
    v19 = (void *)objc_opt_self(UIColor);
    v20 = a1;
    v21 = objc_msgSend(v19, "clearColor");
    v22 = objc_msgSend(v19, "systemWhiteColor");
    v23 = (_QWORD *)((char *)v18 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig);
    v9 = *(id *)((char *)v18 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig);
    v24 = *(void **)((char *)v18 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 8);
    v25 = *(_QWORD *)((char *)v18 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 16);
    *v23 = v21;
    v23[1] = v22;
    v23[2] = &_swiftEmptyDictionarySingleton;
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v26 = v21;
    v27 = v22;
    swift_bridgeObjectRetain(&_swiftEmptyDictionarySingleton);
    v28 = v26;
    v29 = v27;
    if ((static NSObject.== infix(_:_:)(v28) & 1) != 0 && (static NSObject.== infix(_:_:)(v29) & 1) != 0)
    {
      sub_10005B490((uint64_t)&_swiftEmptyDictionarySingleton, v25);
      v31 = v30;
      swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

      if ((v31 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

    }
    (*(void (**)(void))((swift_isaMask & *v18) + 0x1F0))();
LABEL_16:

    swift_bridgeObjectRelease(v25);
    goto LABEL_17;
  }
LABEL_18:
  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v32 = objc_msgSend(a1, "layer");
  v33 = (void *)objc_opt_self(UIApplication);
  v34 = objc_msgSend(v33, "sharedApplication");
  v35 = objc_msgSend(v34, "delegate");

  if (!v35)
  {
    __break(1u);
    goto LABEL_44;
  }
  v36 = 0xEA00000000007265;
  v37 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v35, v37, 0, 0, 0);
  v38 = (unsigned __int8 *)sub_10006B490();
  swift_unknownObjectRelease(v35);
  v39 = v38[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

  v40 = 10.0;
  if (v39)
    v40 = 12.0;
  objc_msgSend(v32, "setCornerRadius:", v40);

  v41 = objc_msgSend(a1, "layer");
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusD);
  v43 = v42;
  v44 = objc_allocWithZone((Class)CAFilter);
  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v43);
  v46 = objc_msgSend(v44, "initWithType:", v45);

  objc_msgSend(v41, "setCompositingFilter:", v46);
  v47 = sub_100031D58(a2);
  v49 = v48;
  if (v47 == 0x70706574536E6166 && v48 == 0xEA00000000007265)
    goto LABEL_23;
  v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, 0x70706574536E6166, 0xEA00000000007265, 0);
  swift_bridgeObjectRelease(v49);
  if ((v50 & 1) != 0)
    goto LABEL_25;
  v70 = sub_100031D58(a2);
  v72 = v71;
  v36 = 0x800000010008B880;
  if (v70 == 0xD000000000000012 && v71 == 0x800000010008B880)
  {
LABEL_23:
    swift_bridgeObjectRelease(v36);
    goto LABEL_25;
  }
  v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, v71, 0xD000000000000012, 0x800000010008B880, 0);
  swift_bridgeObjectRelease(v72);
  if ((v73 & 1) != 0)
  {
LABEL_25:
    v51 = sub_100006058((uint64_t *)&unk_1000B7590);
    v52 = swift_allocObject(v51, 48, 7);
    *(_OWORD *)(v52 + 16) = xmmword_100088C40;
    v53 = objc_msgSend(a1, "widthAnchor");
    v54 = objc_msgSend(v33, "sharedApplication");
    v55 = objc_msgSend(v54, "delegate");

    if (v55)
    {
      swift_dynamicCastClassUnconditional(v55, v37, 0, 0, 0);
      v56 = (unsigned __int8 *)sub_10006B490();
      swift_unknownObjectRelease(v55);
      v57 = v56[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      v58 = 120.0;
      if (v57)
        v58 = 44.0;
      v59 = objc_msgSend(v53, "constraintEqualToConstant:", v58);

      *(_QWORD *)(v52 + 32) = v59;
      v60 = objc_msgSend(a1, "heightAnchor");
      v61 = objc_msgSend(v33, "sharedApplication");
      v62 = objc_msgSend(v61, "delegate");

      if (v62)
      {
        swift_dynamicCastClassUnconditional(v62, v37, 0, 0, 0);
        v63 = (unsigned __int8 *)sub_10006B490();
        swift_unknownObjectRelease(v62);
        v64 = v63[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

        if (v64)
          v65 = 144.0;
        else
          v65 = 40.0;
LABEL_32:
        v66 = (void *)objc_opt_self(NSLayoutConstraint);
        v67 = objc_msgSend(v60, "constraintEqualToConstant:", v65);

        *(_QWORD *)(v52 + 40) = v67;
        specialized Array._endMutation()(v68);
        sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v52);
        objc_msgSend(v66, "activateConstraints:", isa);

        return;
      }
      goto LABEL_45;
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v74 = sub_100006058((uint64_t *)&unk_1000B7590);
  v52 = swift_allocObject(v74, 48, 7);
  *(_OWORD *)(v52 + 16) = xmmword_100088C40;
  v75 = objc_msgSend(a1, "widthAnchor");
  v76 = objc_msgSend(v33, "sharedApplication");
  v77 = objc_msgSend(v76, "delegate");

  if (!v77)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  swift_dynamicCastClassUnconditional(v77, v37, 0, 0, 0);
  v78 = (unsigned __int8 *)sub_10006B490();
  swift_unknownObjectRelease(v77);
  v79 = v78[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

  v80 = 40.0;
  if (v79)
    v80 = 44.0;
  v81 = objc_msgSend(v75, "constraintEqualToConstant:", v80);

  *(_QWORD *)(v52 + 32) = v81;
  v60 = objc_msgSend(a1, "heightAnchor");
  v82 = objc_msgSend(v33, "sharedApplication");
  v83 = objc_msgSend(v82, "delegate");

  if (v83)
  {
    swift_dynamicCastClassUnconditional(v83, v37, 0, 0, 0);
    v84 = (unsigned __int8 *)sub_10006B490();
    swift_unknownObjectRelease(v83);
    v85 = v84[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

    if (v85)
      v65 = 44.0;
    else
      v65 = 40.0;
    goto LABEL_32;
  }
LABEL_47:
  __break(1u);
}

uint64_t sub_10001BDD0(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_10001BDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClimateSystemManager(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10001BE24(uint64_t a1, _QWORD *a2, unsigned int a3)
{
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  uint64_t (*v8)(id, _QWORD);
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v5)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v5);
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    v7 = 0;
    v8 = *(uint64_t (**)(id, _QWORD))((swift_isaMask & *a2) + 0x120);
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      else
        v9 = *(id *)(a1 + 8 * v7 + 32);
      v10 = v9;
      ++v7;
      v11 = v8(v9, a3);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v12 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
      if (v5 == v7)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

uint64_t sub_10001BF8C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

uint64_t sub_10001BFB0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10001BFD4(char a1)
{
  uint64_t v1;

  sub_100018DC4(a1, v1);
}

double sub_10001BFDC()
{
  void **v0;
  void *v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v1 = *v0;
  v2 = objc_allocWithZone((Class)type metadata accessor for ClimateVentServiceButton());
  v3 = sub_10004843C(v1, 2);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = sub_100006058(&qword_1000B7460);
  v5 = swift_allocObject(v4, 48, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v5 + 16) = xmmword_100088D00;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = &off_10009E008;
  return result;
}

uint64_t ClimateStepperButton.presentationStates.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(uint64_t (**)(uint64_t))(v0 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8);
  v3 = swift_retain(v2);
  v4 = v1(v3);
  sub_100005118((uint64_t)v1, v2);
  return v4;
}

uint64_t ClimateStepperButton.shouldBeHighlighted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted);
}

id ClimateStepperButton.shouldBeHighlighted.setter(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  int v3;
  id result;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t ObjectType;

  v2 = OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted;
  v3 = v1[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted];
  v1[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted] = a1;
  result = objc_msgSend(v1, "setHighlighted:", a1 & 1);
  v5 = v1[v2];
  if (v3 != (_DWORD)v5)
  {
    v6 = &v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate];
    result = (id)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate]);
    if (result)
    {
      v7 = result;
      v8 = *((_QWORD *)v6 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v5, ObjectType, v8);
      return (id)swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

id (*ClimateStepperButton.shouldBeHighlighted.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v1 + v2);
  return sub_10001C194;
}

id sub_10001C194(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  int v3;
  id result;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t ObjectType;

  v2 = *(_BYTE **)a1;
  v1 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + v1);
  v2[v1] = *(_BYTE *)(a1 + 16);
  result = objc_msgSend(v2, "setHighlighted:");
  v5 = v2[v1];
  if (((v3 ^ v5) & 1) != 0)
  {
    v6 = &v2[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate];
    result = (id)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate]);
    if (result)
    {
      v7 = result;
      v8 = *((_QWORD *)v6 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v5, ObjectType, v8);
      return (id)swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

id ClimateButton.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

id ClimateStepperButton.init()()
{
  char *v0;
  char *v1;
  char *v2;
  objc_super v4;

  v1 = &v0[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ClimateStepperButton();
  return objc_msgSendSuper2(&v4, "init");
}

uint64_t type metadata accessor for ClimateStepperButton()
{
  return objc_opt_self(_TtC7Climate20ClimateStepperButton);
}

uint64_t sub_10001C330()
{
  uint64_t v0;

  sub_100005118(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock), *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8));
  return sub_10001BF8C(v0 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate);
}

id ClimateStepperButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateStepperButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10001C3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id *v6;
  unsigned __int8 v7;
  unsigned int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];
  char v29[24];

  v1 = v0;
  v2 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = (id *)(v0 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature, v29, 0, 0);
  objc_msgSend(*v6, "targetTemperatureRestricted");
  v7 = objc_msgSend(*v6, "targetTemperatureInvalid");
  v8 = objc_msgSend(*v6, "targetTemperatureDisabled");
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_temperatureButton);
  if ((v7 & 1) != 0 || v8)
  {
    v12 = (_QWORD *)(v9 + OBJC_IVAR____TtC7Climate13ClimateButton_title);
    swift_beginAccess(v9 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v28, 1, 0);
    v13 = v12[1];
    *v12 = 0;
    v12[1] = 0;
    if (v13)
    {
      ClimateButton.updateClimateConfiguration()();
      swift_bridgeObjectRelease(v13);
    }
    v25 = (uint64_t *)(v9 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
    swift_beginAccess(v9 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v27, 1, 0);
    v21 = *v25;
    v22 = v25[1];
    *v25 = 0xD000000000000012;
    v25[1] = 0x800000010008C940;
    if (v22)
    {
      if (v21 == 0xD000000000000012 && v22 == 0x800000010008C940)
        return swift_bridgeObjectRelease(v22);
      v24 = 0x800000010008C940;
      v23 = 0xD000000000000012;
      goto LABEL_18;
    }
  }
  else
  {
    v10 = (_QWORD *)(v9 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
    swift_beginAccess(v9 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v28, 1, 0);
    v11 = v10[1];
    *v10 = 0;
    v10[1] = 0;
    if (v11)
    {
      ClimateButton.updateClimateConfiguration()();
      swift_bridgeObjectRelease(v11);
    }
    v14 = v1 + OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_currentValue;
    swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_currentValue, v27, 0, 0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
    v15 = objc_msgSend(*v6, "targetTemperatureRange");
    v16 = Measurement<>.readableString(in:)();
    v18 = v17;

    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    v19 = (uint64_t *)(v9 + OBJC_IVAR____TtC7Climate13ClimateButton_title);
    result = swift_beginAccess(v9 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v26, 1, 0);
    v21 = *v19;
    v22 = v19[1];
    *v19 = v16;
    v19[1] = v18;
    if (v18)
    {
      if (v22)
      {
        if (v16 == v21 && v18 == v22)
          return swift_bridgeObjectRelease(v22);
        v23 = v16;
        v24 = v18;
LABEL_18:
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v21, v22, 0) & 1) != 0)
          return swift_bridgeObjectRelease(v22);
      }
    }
    else if (!v22)
    {
      return result;
    }
  }
  ClimateButton.updateClimateConfiguration()();
  return swift_bridgeObjectRelease(v22);
}

void sub_10001C6E8()
{
  sub_10001C3D0();
  ClimateStepper.updatePresentation()();
}

char *sub_10001C6FC(void *a1, uint64_t a2, int a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _BYTE *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  char *v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  char *v25;
  id v26;
  id v27;
  char *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  id v36;
  char *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  __objc2_prot **v44;
  id *v45;
  char v46;
  void *v47;
  char *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v57;
  id v58;
  uint64_t v59;
  char *v60;
  int v61;
  char v62[24];

  v7 = sub_100006058(&qword_1000B78D0);
  __chkstk_darwin(v7);
  v60 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)objc_opt_self(NSUnitTemperature);
  v10 = v3;
  v58 = v9;
  v11 = objc_msgSend(v9, "celsius");
  v59 = sub_100006B04(0, &qword_1000B7CE0, NSUnitTemperature_ptr);
  Measurement.init(value:unit:)(v11, 0.0);
  v10[OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_style] = a3;
  v12 = objc_allocWithZone((Class)type metadata accessor for ClimateTemperatureIndicator(0));
  v13 = a1;
  v61 = a3;
  sub_10006D0C0(v13, 0, 0, 1, a3);
  *(_QWORD *)&v10[OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_temperatureButton] = v14;

  v15 = *(void **)&v10[OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_temperatureButton];
  *(_QWORD *)&v10[OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature] = v13;
  v16 = v15;
  v17 = v13;
  v18 = v16;
  v19 = ClimateStepper.init(primaryButton:axis:range:)(v18, a2, objc_msgSend(v17, "targetTemperatureRange"));
  objc_msgSend(v17, "registerObserver:", v19);

  v20 = v19;
  v21 = objc_msgSend(v17, "car");
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, "dimensionManager");

    objc_msgSend(v23, "registerObserver:", v20);
  }
  v24 = (void *)objc_opt_self(UIColor);
  v25 = v20;
  v26 = objc_msgSend(v24, "clearColor");
  v27 = objc_msgSend(v24, "systemBlueColor");
  v28 = &v25[OBJC_IVAR____TtC7Climate14ClimateStepper_downColorConfig];
  v30 = *(void **)&v25[OBJC_IVAR____TtC7Climate14ClimateStepper_downColorConfig];
  v29 = *(void **)&v25[OBJC_IVAR____TtC7Climate14ClimateStepper_downColorConfig + 8];
  v31 = *(_QWORD *)&v25[OBJC_IVAR____TtC7Climate14ClimateStepper_downColorConfig + 16];
  *(_QWORD *)v28 = v26;
  *((_QWORD *)v28 + 1) = v27;
  *((_QWORD *)v28 + 2) = &_swiftEmptyDictionarySingleton;
  v32 = v26;
  v33 = v27;
  swift_bridgeObjectRelease(v31);

  sub_10005A894();
  v34 = v25;
  v35 = objc_msgSend(v24, "clearColor");
  v36 = objc_msgSend(v24, "systemRedColor");
  v37 = &v34[OBJC_IVAR____TtC7Climate14ClimateStepper_upColorConfig];
  v38 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_upColorConfig];
  v39 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_upColorConfig + 8];
  v40 = *(_QWORD *)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_upColorConfig + 16];
  *(_QWORD *)v37 = v35;
  *((_QWORD *)v37 + 1) = v36;
  *((_QWORD *)v37 + 2) = &_swiftEmptyDictionarySingleton;
  v41 = v35;
  v42 = v36;
  swift_bridgeObjectRelease(v40);

  sub_10005A8A8();
  if ((_BYTE)v61)
  {
    v43 = (uint64_t)v60;
    v44 = &off_1000AA000;
    if (v61 == 4 || v61 == 2)
    {
      v45 = (id *)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton];
      swift_beginAccess(&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton], v62, 0, 0);
      objc_msgSend(*v45, "setUserInteractionEnabled:", 0);
    }
  }
  else
  {
    v46 = v34[OBJC_IVAR____TtC7Climate14ClimateStepper_disableSelectedBackgroundMaterial];
    v34[OBJC_IVAR____TtC7Climate14ClimateStepper_disableSelectedBackgroundMaterial] = 1;
    v43 = (uint64_t)v60;
    v44 = &off_1000AA000;
    if ((v46 & 1) == 0)
    {
      v47 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_backgroundView];
      v48 = v34;
      v49 = objc_msgSend(v47, "removeFromSuperview");
      (*(void (**)(id))((swift_isaMask & *(_QWORD *)v48) + 0x148))(v49);

    }
  }
  v50 = objc_msgSend(v17, (SEL)v44[224]);
  if (!v50
    || (v51 = v50,
        v52 = objc_msgSend(v50, "dimensionManager"),
        v51,
        v53 = objc_msgSend(v52, "unitTemperature"),
        v52,
        !v53))
  {
    v53 = objc_msgSend(v58, "celsius");
  }
  sub_10001CF44((uint64_t)v53);

  v54 = objc_msgSend(v17, "targetTemperature");
  static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v54);

  v55 = sub_100006058((uint64_t *)&unk_1000B75B0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v43, 0, 1, v55);
  sub_10001D5B8(v43);
  sub_100008B88(v43, &qword_1000B78D0);
  sub_10001C3D0();
  ClimateStepper.updatePresentation()();

  return v34;
}

uint64_t sub_10001CC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id *v12;
  id v13;
  void *v14;
  void (*v15)(char *, uint64_t);
  id v16;
  id v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  Class isa;
  uint64_t v25;
  _BYTE v26[24];
  NSMeasurement v27;

  v25 = a1;
  v2 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v26[-v7 - 8];
  __chkstk_darwin(v9);
  v11 = &v26[-v10 - 8];
  v12 = (id *)(v1 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature);
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature, v26, 0, 0);
  v13 = objc_msgSend(*v12, "targetTemperature");
  sub_100006B04(0, &qword_1000B7CE0, NSUnitTemperature_ptr);
  static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v13);

  v14 = (void *)Measurement.unit.getter(v2);
  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v11, v2);
  v16 = objc_msgSend(*v12, "targetTemperatureRange");
  v17 = objc_msgSend(v16, "step");

  objc_msgSend(v17, "doubleValue");
  v19 = v18;

  v20 = v14;
  Measurement.init(value:unit:)(v20, v19);
  v21 = *v12;
  v22 = objc_msgSend(v21, "targetTemperature");
  static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v22);

  Measurement<>.localeStep(_:by:)(v25, v11);
  v15(v5, v2);
  v27 = Measurement._bridgeToObjectiveC()();
  isa = v27.super.isa;
  ((void (*)(char *, uint64_t, __n128))v15)(v8, v2, *(__n128 *)&v27._doubleValue);
  objc_msgSend(v21, "setTargetTemperature:", isa);

  return ((uint64_t (*)(char *, uint64_t))v15)(v11, v2);
}

void sub_10001CE78()
{
  objc_class *v0;
  id v1;
  id v2;

  v1 = objc_allocWithZone(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSUnitTemperature), "celsius");
  sub_100006B04(0, &qword_1000B7CE0, NSUnitTemperature_ptr);
  Measurement.init(value:unit:)(v2, 0.0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003BLL, 0x800000010008C8C0, "Climate/ClimateZoneTargetTemperatureStepper.swift", 49, 2, 87, 0);
  __break(1u);
}

void sub_10001CF44(uint64_t a1)
{
  uint64_t v1;
  id v3;
  int v4;
  CTFontRef v5;
  id v6;
  char v7;
  CTFontRef v8;
  id v9;

  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_temperatureButton), "titleLabel");
  if (v3)
  {
    v4 = 1 << *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_style);
    v9 = v3;
    if ((v4 & 0x23) != 0)
    {
      v5 = (CTFontRef)objc_msgSend((id)objc_opt_self(UIFont), "monospacedDigitSystemFontOfSize:weight:", 17.0, UIFontWeightSemibold);
    }
    else if ((v4 & 0xC) != 0)
    {
      v5 = (CTFontRef)objc_msgSend((id)objc_opt_self(UIFont), "monospacedDigitSystemFontOfSize:weight:", 20.0, UIFontWeightSemibold);
    }
    else
    {
      sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
      v6 = objc_msgSend((id)objc_opt_self(NSUnitTemperature), "fahrenheit");
      v7 = static NSObject.== infix(_:_:)(a1);

      if ((v7 & 1) != 0)
        v5 = (CTFontRef)objc_msgSend((id)objc_opt_self(UIFont), "monospacedDigitSystemFontOfSize:weight:", 22.0, UIFontWeightMedium);
      else
        v5 = sub_10001DD90();
    }
    v8 = v5;
    objc_msgSend(v9, "setFont:", v5);

  }
}

void sub_10001D0EC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  objc_class *v14;
  NSObject *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  os_log_t v36;
  int v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  objc_super v45;

  v3 = v2;
  v6 = sub_100006058(&qword_1000B78D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)Measurement._bridgeToObjectiveC()();
  v14 = (objc_class *)type metadata accessor for ClimateZoneTargetTemperatureStepper(0);
  v45.receiver = v3;
  v45.super_class = v14;
  objc_msgSendSuper2(&v45, "temperatureService:didUpdateTargetTemperature:", a1, v13);

  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v15 = qword_1000BC938;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16(v12, a2, v9);
  v17 = v3;
  v18 = static os_log_type_t.default.getter(v17);
  v19 = v18;
  if (os_log_type_enabled(v15, v18))
  {
    v20 = swift_slowAlloc(32, -1);
    v37 = v19;
    v21 = v20;
    v38 = swift_slowAlloc(96, -1);
    v43 = 0;
    v44 = v38;
    *(_DWORD *)v21 = 136315650;
    v39 = v16;
    v40 = a2;
    memset(v42, 0, sizeof(v42));
    v22 = ClimateLogPrefix(file:function:line:_:)(0xD000000000000031, 0x800000010008C880, (uint64_t)"temperatureService(_:didUpdateTargetTemperature:)", 49, 2, 108, (uint64_t)v42);
    v36 = v15;
    v24 = v23;
    sub_100008B88((uint64_t)v42, &qword_1000B7CE8);
    *(_QWORD *)&v42[0] = sub_10005DB58(v22, v24, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v42, (char *)v42 + 8, v21 + 4, v21 + 12);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2080;
    v25 = (id *)&v17[OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature];
    swift_beginAccess(&v17[OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature], v42, 0, 0);
    v26 = objc_msgSend(*v25, "vehicleLayoutKey");
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = v28;

    v41 = sub_10005DB58(v27, v29, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v21 + 14, v21 + 22);

    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v21 + 22) = 2080;
    v30 = sub_10001E184(&qword_1000B7D28, (uint64_t)&protocol conformance descriptor for Measurement<A>);
    v31 = dispatch thunk of CustomStringConvertible.description.getter(v9, v30);
    v33 = v32;
    v41 = sub_10005DB58(v31, v32, &v44);
    a2 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v21 + 24, v21 + 32);
    v34 = v33;
    v16 = v39;
    swift_bridgeObjectRelease(v34);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v37, "%s Update zone: %s with target temperature: %s.", (uint8_t *)v21, 0x20u);
    v35 = v38;
    swift_arrayDestroy(v38, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v16(v8, a2, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  sub_10001D5B8((uint64_t)v8);
  sub_100008B88((uint64_t)v8, &qword_1000B78D0);
  sub_10001C3D0();
  ClimateStepper.updatePresentation()();
}

void sub_10001D5B8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  NSObject *v19;
  char *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BYTE v32[24];
  uint64_t v33;
  _OWORD v34[2];
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = sub_100006058(&qword_1000B78D0);
  __chkstk_darwin(v4);
  v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v32[-v12];
  sub_10001E0F4(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100008B88((uint64_t)v6, &qword_1000B78D0);
  }
  else
  {
    (*(void (**)(char *, _BYTE *, uint64_t))(v8 + 32))(v13, v6, v7);
    v14 = &v2[OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_currentValue];
    swift_beginAccess(&v2[OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_currentValue], v32, 0, 0);
    v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v15(v11, v14, v7);
    v16 = sub_10001E184((unint64_t *)&unk_1000B7CF0, (uint64_t)&protocol conformance descriptor for Measurement<A>);
    v17 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v11, v7, v16);
    v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18(v11, v7);
    if ((v17 & 1) == 0)
    {
      v15(v11, v13, v7);
      swift_beginAccess(v14, v34, 33, 0);
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v14, v11, v7);
      swift_endAccess(v34);
      v18(v13, v7);
      return;
    }
    v18(v13, v7);
  }
  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v19 = qword_1000BC938;
  v20 = v2;
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v21))
  {
    v22 = swift_slowAlloc(22, -1);
    v23 = swift_slowAlloc(64, -1);
    v35 = 0;
    v36 = v23;
    *(_DWORD *)v22 = 136315394;
    memset(v34, 0, sizeof(v34));
    v24 = ClimateLogPrefix(file:function:line:_:)(0xD000000000000031, 0x800000010008C880, (uint64_t)"updateCurrentValue(with:)", 25, 2, 116, (uint64_t)v34);
    v26 = v25;
    sub_100008B88((uint64_t)v34, &qword_1000B7CE8);
    *(_QWORD *)&v34[0] = sub_10005DB58(v24, v26, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, (char *)v34 + 8, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v22 + 12) = 2080;
    v27 = (id *)&v20[OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature];
    swift_beginAccess(&v20[OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature], v34, 0, 0);
    v28 = objc_msgSend(*v27, "vehicleLayoutKey");
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    v33 = sub_10005DB58(v29, v31, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34, v22 + 14, v22 + 22);

    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v19, v21, "%s Target temperature is nil or already set for zone: %s.", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {

  }
}

void sub_10001DA94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_currentValue;
  v2 = sub_100006058((uint64_t *)&unk_1000B75B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_10001DAE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateZoneTargetTemperatureStepper(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10001DB6C()
{
  return type metadata accessor for ClimateZoneTargetTemperatureStepper(0);
}

uint64_t type metadata accessor for ClimateZoneTargetTemperatureStepper(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B7CC8;
  if (!qword_1000B7CC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateZoneTargetTemperatureStepper);
  return result;
}

void sub_10001DBB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10001DC34(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = &unk_100089498;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 728);
  }
}

void sub_10001DC34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000B9C50)
  {
    v2 = sub_100006B04(255, &qword_1000B7CE0, NSUnitTemperature_ptr);
    v3 = type metadata accessor for Measurement(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000B9C50);
  }
}

CTFontRef sub_10001DD90()
{
  __CFString *v0;
  const __CTFont *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const __CFString *v8;
  const __CFString *v9;
  const __CFString *v10;
  unint64_t v11;
  const __CFDictionary *isa;
  const __CTFontDescriptor *v13;
  CTFontRef CopyWithAttributes;
  _BYTE v16[64];
  _BYTE v17[48];

  v0 = (__CFString *)String._bridgeToObjectiveC()();
  v1 = CTFontCreateWithNameAndOptions(v0, 18.0, 0, 0x20000uLL);

  v2 = sub_100006058(&qword_1000B7D00);
  inited = swift_initStackObject(v2, v17);
  *(_OWORD *)(inited + 16) = xmmword_100088D00;
  *(_QWORD *)(inited + 32) = kCTFontFeatureSettingsAttribute;
  v4 = sub_100006058(&qword_1000B7D08);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100088D00;
  v6 = sub_100006058(&qword_1000B7D10);
  v7 = swift_initStackObject(v6, v16);
  *(_OWORD *)(v7 + 16) = xmmword_100088DE0;
  *(_QWORD *)(v7 + 32) = kCTFontFeatureTypeIdentifierKey;
  *(_QWORD *)(v7 + 40) = 6;
  *(_QWORD *)(v7 + 48) = kCTFontFeatureSelectorIdentifierKey;
  *(_QWORD *)(v7 + 56) = 0;
  v8 = (id)kCTFontFeatureSettingsAttribute;
  v9 = (id)kCTFontFeatureTypeIdentifierKey;
  v10 = (id)kCTFontFeatureSelectorIdentifierKey;
  *(_QWORD *)(v5 + 32) = sub_100023C44(v7);
  *(_QWORD *)(inited + 40) = v5;
  v11 = sub_100023D40(inited);
  type metadata accessor for CFString(0);
  sub_100006058(&qword_1000B7D18);
  sub_10001E13C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v13 = CTFontDescriptorCreateWithAttributes(isa);

  CopyWithAttributes = CTFontCreateCopyWithAttributes(v1, 18.0, 0, v13);
  return CopyWithAttributes;
}

uint64_t sub_10001DF40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  id *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  _BYTE v20[24];
  char v21[24];

  v3 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CF44(a1);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate35ClimateZoneTargetTemperatureStepper_temperatureButton);
  v8 = (id *)(v1 + OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature);
  swift_beginAccess(v8, v21, 0, 0);
  v9 = *v8;
  v10 = objc_msgSend(v9, "targetTemperature");
  sub_100006B04(0, &qword_1000B7CE0, NSUnitTemperature_ptr);
  static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v10);

  v11 = objc_msgSend(v9, "targetTemperatureRange");
  v12 = Measurement<>.readableString(in:)();
  v14 = v13;

  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v15 = (uint64_t *)(v7 + OBJC_IVAR____TtC7Climate13ClimateButton_title);
  result = swift_beginAccess(v7 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v20, 1, 0);
  v17 = *v15;
  v18 = v15[1];
  *v15 = v12;
  v15[1] = v14;
  if (v14)
  {
    if (v18)
    {
      v19 = v12 == v17 && v14 == v18;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v17, v18, 0) & 1) != 0)
        return swift_bridgeObjectRelease(v18);
    }
  }
  else if (!v18)
  {
    return result;
  }
  ClimateButton.updateClimateConfiguration()();
  return swift_bridgeObjectRelease(v18);
}

uint64_t sub_10001E0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058(&qword_1000B78D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10001E13C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7D20;
  if (!qword_1000B7D20)
  {
    type metadata accessor for CFString(255);
    result = swift_getWitnessTable(&unk_100088BA4, v1);
    atomic_store(result, (unint64_t *)&qword_1000B7D20);
  }
  return result;
}

uint64_t sub_10001E184(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_10000A948((uint64_t *)&unk_1000B75B0);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10001E1C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  id v6;
  int v7;
  BOOL v8;
  int v9;
  int v10;
  id v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  int v15;
  unsigned int v16;
  double v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  int v25;
  int v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  id v30;
  void *v31;
  int v32;
  void *v33;
  id v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_dots);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_dots, v40, 0, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v2 < 0)
      v36 = *v1;
    else
      v36 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue;
  v5 = *(_DWORD *)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue);
  v6 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_range), "maximum");
  v7 = objc_msgSend(v6, "intValue");

  v8 = v5 < 0;
  v39 = v4;
  v9 = *(_DWORD *)(v0 + v4);
  if (v8)
    v10 = v7 & (v7 >> 31);
  else
    v10 = v7 & ~(v7 >> 31);
  v11 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_range), "minimum");
  v12 = (uint64_t)objc_msgSend(v11, "intValue");

  v13 = v12 & ~((int)v12 >> 31);
  if (v9 < 0)
    v13 = v12 & ((int)v12 >> 31);
  v14 = __OFSUB__(v10, v13);
  v15 = v10 - v13;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    if (v3 != v15)
    {
      v16 = *(_DWORD *)(v0 + v39);
      v17 = *(double *)(v0 + OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_diameter);
      v18 = *(id *)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_range);
      sub_10001EA80(v16, v18, v17);

    }
    v12 = *v1;
    if (!((unint64_t)*v1 >> 62))
    {
      v19 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v12);
      if (v19)
        goto LABEL_13;
LABEL_35:
      swift_bridgeObjectRelease(v12);
      return;
    }
  }
  if (v12 < 0)
    v37 = v12;
  else
    v37 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v19 = _CocoaArrayWrapper.endIndex.getter(v37);
  if (!v19)
    goto LABEL_35;
LABEL_13:
  if (v19 >= 1)
  {
    v20 = 0;
    v38 = v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig;
    v21 = OBJC_IVAR____TtC7Climate19ClimateProgressView_range;
    v22 = v12 & 0xC000000000000001;
    v23 = v12;
    do
    {
      if (v22)
        v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v12);
      else
        v30 = *(id *)(v12 + 8 * v20 + 32);
      v31 = v30;
      v32 = *(_DWORD *)(v0 + v39);
      v33 = *(void **)(v0 + v21);
      if (v32 < 0)
      {
        v34 = objc_msgSend(v33, "maximum");
        v35 = objc_msgSend(v34, "intValue");

        v26 = v32 - (v35 & (v35 >> 31));
        if (v26 < 0)
          v26 = (v35 & (v35 >> 31)) - v32;
      }
      else
      {
        v24 = objc_msgSend(v33, "minimum");
        v25 = objc_msgSend(v24, "intValue");

        v26 = v32 - (v25 & ~(v25 >> 31));
      }
      v27 = v20 + 1;
      v28 = v20 < v26;
      v29 = 8;
      if (v28)
        v29 = 16;
      objc_msgSend(v31, "setBackgroundColor:", *(_QWORD *)(v38 + v29));

      ++v20;
      v12 = v23;
    }
    while (v19 != v27);
    goto LABEL_35;
  }
  __break(1u);
}

void sub_10001E4D0(int a1)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue);
  *(_DWORD *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue) = a1;
  sub_100021918(v2);
  sub_10001E1C8();
}

void sub_10001E4FC(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v4;
  void **v8;
  void **v9;
  void *v10;
  void **v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  int v38;
  int v39;
  uint64_t v40;
  BOOL v41;
  void **v42;
  id v43;
  void *v44;
  int v45;
  void *v46;
  id v47;
  int v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  void **v54;
  void **v55;
  uint64_t v56;
  char v57[24];

  v8 = (void **)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig);
  v9 = (void **)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig + 8);
  v10 = *v9;
  v11 = (void **)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig + 16);
  v12 = *v11;
  v13 = *(void **)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig);
  v14 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig + 24);
  *v8 = a1;
  v54 = v11;
  v55 = v9;
  *v9 = a2;
  *v11 = a3;
  v8[3] = a4;
  v15 = a3;
  swift_bridgeObjectRetain_n(a4, 2);
  v16 = a1;
  v17 = a2;
  v53 = v15;
  v51 = v16;
  v52 = v17;
  swift_bridgeObjectRelease(v14);

  v56 = v4;
  v18 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView);
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v20 = *v8;
  v21 = (_QWORD *)(v18 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v23 = *(void **)(v18 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v22 = *(void **)(v18 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v24 = *(_QWORD *)(v18 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  *v21 = v19;
  v21[1] = v20;
  v21[2] = &_swiftEmptyDictionarySingleton;
  v25 = v20;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v26 = v19;
  v27 = v25;
  swift_bridgeObjectRetain(&_swiftEmptyDictionarySingleton);
  v28 = v26;
  if ((static NSObject.== infix(_:_:)(v28) & 1) == 0 || (static NSObject.== infix(_:_:)(v27) & 1) == 0)
  {
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

    goto LABEL_6;
  }
  sub_10005B490((uint64_t)&_swiftEmptyDictionarySingleton, v24);
  v30 = v29;
  swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

  if ((v30 & 1) == 0)
LABEL_6:
    ClimateButton.refreshColorConfig()();

  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(v24);

  v31 = (uint64_t *)(v56 + OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_dots);
  swift_beginAccess(v56 + OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_dots, v57, 0, 0);
  v32 = *v31;
  v50 = a4;
  if (!((unint64_t)*v31 >> 62))
  {
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v32);
    if (v33)
      goto LABEL_9;
LABEL_26:

    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v50);

    return;
  }
  if (v32 < 0)
    v49 = *v31;
  else
    v49 = v32 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v32);
  v33 = _CocoaArrayWrapper.endIndex.getter(v49);
  if (!v33)
    goto LABEL_26;
LABEL_9:
  if (v33 >= 1)
  {
    v34 = 0;
    v35 = OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue;
    v36 = OBJC_IVAR____TtC7Climate19ClimateProgressView_range;
    do
    {
      if ((v32 & 0xC000000000000001) != 0)
        v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v32);
      else
        v43 = *(id *)(v32 + 8 * v34 + 32);
      v44 = v43;
      v45 = *(_DWORD *)(v56 + v35);
      v46 = *(void **)(v56 + v36);
      if (v45 < 0)
      {
        v47 = objc_msgSend(v46, "maximum");
        v48 = objc_msgSend(v47, "intValue");

        v39 = v45 - (v48 & (v48 >> 31));
        if (v39 < 0)
          v39 = (v48 & (v48 >> 31)) - v45;
      }
      else
      {
        v37 = objc_msgSend(v46, "minimum", v50);
        v38 = objc_msgSend(v37, "intValue");

        v39 = v45 - (v38 & ~(v38 >> 31));
      }
      v40 = v34 + 1;
      v41 = v34 < v39;
      v42 = v55;
      if (v41)
        v42 = v54;
      objc_msgSend(v44, "setBackgroundColor:", *v42, v50);

      ++v34;
    }
    while (v33 != v40);
    goto LABEL_26;
  }
  __break(1u);
}

id sub_10001E8BC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;

  v2 = OBJC_IVAR____TtC7Climate19ClimateProgressView_isHighlighted;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_isHighlighted) = a1;
  if ((a1 & 1) != 0)
    v3 = 0.2;
  else
    v3 = 1.0;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView), "setAlpha:", v3);
  if (*(_BYTE *)(v1 + v2))
    v4 = 0.2;
  else
    v4 = 1.0;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_stackView), "setAlpha:", v4);
}

void sub_10001E944()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  id v3;
  int v4;
  int v5;
  int v6;
  id v7;
  int v8;
  int v9;
  int v10;
  id v11;
  unsigned int v12;

  v1 = OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue;
  v2 = *(_DWORD *)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue);
  v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_range), "maximum");
  v4 = objc_msgSend(v3, "intValue");

  v5 = *(_DWORD *)(v0 + v1);
  if (v2 >= 0)
    v6 = v4 & ~(v4 >> 31);
  else
    v6 = v4 & (v4 >> 31);
  v7 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_range), "minimum");
  v8 = objc_msgSend(v7, "intValue");

  v9 = v8 & ~(v8 >> 31);
  if (v5 < 0)
    v9 = v8 & (v8 >> 31);
  v10 = v6 - v9;
  if (__OFSUB__(v6, v9))
  {
    __break(1u);
    goto LABEL_14;
  }
  v11 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_range), "step");
  v12 = objc_msgSend(v11, "intValue");

  if (!v12)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  if (v10 == 0x80000000 && v12 == -1)
    goto LABEL_15;
}

void sub_10001EA80(unsigned int a1, void *a2, double a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int v15;
  BOOL v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  id v23;
  BOOL v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  int v36;
  os_log_type_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  char *v42;
  objc_class *v43;
  int v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  Class isa;
  id v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  Class v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  int v80;
  int v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  id v85;
  void *v86;
  uint64_t v87;
  int v88;
  void *v89;
  id v90;
  int v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD v97[3];
  objc_super v98;
  char v99[24];

  v4 = v3;
  v8 = OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_stackView;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_stackView], "removeFromSuperview");
  sub_100006B04(0, &qword_1000B7D98, UIStackView_ptr);
  v9 = UIStackView.init(axis:spacing:arrangedSubviews:)(0, _swiftEmptyArrayStorage, 0.0);
  v10 = *(void **)&v3[v8];
  v95 = v8;
  *(_QWORD *)&v3[v8] = v9;

  v11 = (uint64_t *)&v3[OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_dots];
  swift_beginAccess(&v3[OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_dots], v99, 1, 0);
  v12 = *v11;
  *v11 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue;
  LODWORD(v8) = *(_DWORD *)&v3[OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue];
  v14 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC7Climate19ClimateProgressView_range], "maximum");
  v15 = objc_msgSend(v14, "intValue");

  v16 = (int)v8 < 0;
  v94 = v13;
  v17 = *(_DWORD *)&v4[v13];
  if (v16)
    v18 = v15 & (v15 >> 31);
  else
    v18 = v15 & ~(v15 >> 31);
  v96 = v4;
  v19 = (uint64_t)objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC7Climate19ClimateProgressView_range], "minimum");
  v20 = objc_msgSend((id)v19, "intValue");

  v21 = v20 & ~(v20 >> 31);
  if (v17 < 0)
    v21 = v20 & (v20 >> 31);
  v22 = (v18 - v21);
  if (__OFSUB__(v18, v21))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v23 = objc_msgSend(a2, "step");
  v19 = (uint64_t)objc_msgSend(v23, "intValue");

  if (!(_DWORD)v19)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v24 = (_DWORD)v22 == 0x80000000 && (_DWORD)v19 == -1;
  if (v24)
    goto LABEL_48;
  v25 = (int)v22 / (int)v19;
  if ((int)v22 / (int)v19 >= 4)
  {
    v26 = static os_log_type_t.error.getter();
    v27 = sub_100006058(&qword_1000B7DA0);
    v28 = swift_allocObject(v27, 112, 7);
    *(_OWORD *)(v28 + 16) = xmmword_100088DE0;
    *(_QWORD *)(v28 + 56) = &type metadata for Int;
    *(_QWORD *)(v28 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v28 + 32) = 3;
    v29 = *v11;
    *(_QWORD *)(v28 + 96) = sub_100006058(&qword_1000B7DA8);
    *(_QWORD *)(v28 + 104) = sub_10001FA9C();
    *(_QWORD *)(v28 + 72) = v29;
    sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v30 = swift_bridgeObjectRetain(v29);
    v31 = (void *)static OS_os_log.default.getter(v30);
    os_log(_:dso:log:_:_:)(v26, &_mh_execute_header, v31, "Not able to draw more than %@ dots, %@ dots were asked.", 55, 2, v28);
    swift_bridgeObjectRelease(v28);

  }
  sub_10001E944();
  if ((v32 & 1) != 0)
  {
    v33 = static os_log_type_t.default.getter();
    v34 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v35 = (void *)static OS_os_log.default.getter(v34);
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v35, "Progress view working as On/Off toggle", 38, 2, _swiftEmptyArrayStorage);

    return;
  }
  if (v25 >= 3)
    v36 = 3;
  else
    v36 = v25;
  v37 = static os_log_type_t.default.getter();
  v38 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
  v19 = static OS_os_log.default.getter(v38);
  v39 = v37;
  if (os_log_type_enabled((os_log_t)v19, v37))
  {
    v22 = 8;
    v40 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v40 = 67109120;
    LODWORD(v97[0]) = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v97, (char *)v97 + 4, v40 + 4, v40 + 8);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v19, v39, "Drawing %d dots.", v40, 8u);
    swift_slowDealloc(v40, -1, -1);
  }

  if (v36 < 0)
    goto LABEL_49;
  v93 = __PAIR64__(v36, a1);
  if (v36)
  {
    v41 = (void *)objc_opt_self(NSLayoutConstraint);
    v42 = &v96[OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig];
    v43 = (objc_class *)type metadata accessor for ClimateDotsProgressView.Dot();
    v44 = HIDWORD(v93);
    v22 = (uint64_t)&off_1000AA000;
    while (v44)
    {
      v98.receiver = objc_allocWithZone(v43);
      v98.super_class = v43;
      v45 = objc_msgSendSuper2(&v98, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      objc_msgSend(v45, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v45, "_setCornerRadius:", a3 * 0.5);
      v46 = sub_100006058((uint64_t *)&unk_1000B7590);
      v47 = swift_allocObject(v46, 48, 7);
      *(_OWORD *)(v47 + 16) = xmmword_100088C40;
      v48 = objc_msgSend(v45, "widthAnchor");
      v49 = objc_msgSend(v48, "constraintEqualToConstant:", a3);

      *(_QWORD *)(v47 + 32) = v49;
      v50 = objc_msgSend(v45, "heightAnchor");

      v51 = objc_msgSend(v50, "constraintEqualToConstant:", a3);
      *(_QWORD *)(v47 + 40) = v51;
      v97[0] = v47;
      specialized Array._endMutation()(v52);
      v53 = v97[0];
      sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v53);
      objc_msgSend(v41, "activateConstraints:", isa);

      objc_msgSend(v45, "setBackgroundColor:", *((_QWORD *)v42 + 1));
      swift_beginAccess(v11, v97, 33, 0);
      v55 = v45;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
      v57 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v56 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v57 >= v56 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
      v19 = (uint64_t)v11;
      v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
      specialized Array._endMutation()(v58);
      swift_endAccess(v97);
      objc_msgSend(*(id *)&v96[v95], "addArrangedSubview:", v55);

      if (!--v44)
        goto LABEL_28;
    }
    __break(1u);
    goto LABEL_46;
  }
LABEL_28:
  objc_msgSend(*(id *)&v96[v95], "setTranslatesAutoresizingMaskIntoConstraints:", 0, v93);
  objc_msgSend(*(id *)&v96[v95], "setDistribution:", 3);
  objc_msgSend(v96, "addSubview:", *(_QWORD *)&v96[v95]);
  v59 = (void *)objc_opt_self(NSLayoutConstraint);
  v60 = sub_100006058((uint64_t *)&unk_1000B7590);
  v61 = swift_allocObject(v60, 64, 7);
  *(_OWORD *)(v61 + 16) = xmmword_100088DF0;
  v62 = objc_msgSend(*(id *)&v96[v95], "topAnchor");
  v63 = objc_msgSend(*(id *)&v96[OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView], "bottomAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v61 + 32) = v64;
  v65 = objc_msgSend(*(id *)&v96[v95], "widthAnchor");
  v66 = objc_msgSend(v65, "constraintEqualToConstant:", (double)HIDWORD(v93) * a3 + ((double)HIDWORD(v93) + -1.0) * 5.0);

  *(_QWORD *)(v61 + 40) = v66;
  v67 = objc_msgSend(*(id *)&v96[v95], "heightAnchor");
  v68 = objc_msgSend(v67, "constraintEqualToConstant:", a3);

  *(_QWORD *)(v61 + 48) = v68;
  v69 = objc_msgSend(*(id *)&v96[v95], "centerXAnchor");
  v22 = (uint64_t)v96;
  v70 = objc_msgSend(v96, "centerXAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

  *(_QWORD *)(v61 + 56) = v71;
  v97[0] = v61;
  specialized Array._endMutation()(v72);
  v73 = v97[0];
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  v74 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v73);
  objc_msgSend(v59, "activateConstraints:", v74);

  if (!(_DWORD)v93)
  {
    sub_10001F6D4(0);
    return;
  }
  v19 = *v11;
  if ((unint64_t)*v11 >> 62)
  {
LABEL_50:
    if (v19 < 0)
      v92 = v19;
    else
      v92 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v75 = _CocoaArrayWrapper.endIndex.getter(v92);
    if (!v75)
      goto LABEL_54;
    goto LABEL_31;
  }
  v75 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*v11);
  if (!v75)
  {
LABEL_54:
    swift_bridgeObjectRelease(v19);
    return;
  }
LABEL_31:
  if (v75 >= 1)
  {
    v76 = 0;
    v77 = OBJC_IVAR____TtC7Climate19ClimateProgressView_range;
    v78 = v22 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig;
    do
    {
      if ((v19 & 0xC000000000000001) != 0)
        v85 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v76, v19);
      else
        v85 = *(id *)(v19 + 8 * v76 + 32);
      v86 = v85;
      v87 = v22;
      v88 = *(_DWORD *)(v22 + v94);
      v89 = *(void **)(v87 + v77);
      if (v88 < 0)
      {
        v90 = objc_msgSend(v89, "maximum");
        v91 = objc_msgSend(v90, "intValue");

        v81 = v88 - (v91 & (v91 >> 31));
        if (v81 < 0)
          v81 = (v91 & (v91 >> 31)) - v88;
      }
      else
      {
        v79 = objc_msgSend(v89, "minimum");
        v80 = objc_msgSend(v79, "intValue");

        v81 = v88 - (v80 & ~(v80 >> 31));
      }
      v82 = v76 + 1;
      v83 = v76 < v81;
      v84 = 8;
      if (v83)
        v84 = 16;
      objc_msgSend(v86, "setBackgroundColor:", *(_QWORD *)(v78 + v84), v93);

      ++v76;
      v24 = v75 == v82;
      v22 = (uint64_t)v96;
    }
    while (!v24);
    goto LABEL_54;
  }
  __break(1u);
}

double sub_10001F49C(char a1)
{
  char *v1;
  double result;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _QWORD v13[6];

  sub_10001E944();
  if ((v4 & 1) == 0)
  {
    v5 = OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_stackView;
    v6 = *(void **)&v1[OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_stackView];
    v13[0] = 0x3FF0000000000000;
    v13[1] = 0;
    v13[2] = 0;
    v13[3] = 0x3FF0000000000000;
    v13[4] = 0;
    v13[5] = 0;
    objc_msgSend(v6, "setTransform:", v13);
    objc_msgSend(*(id *)&v1[v5], "setAlpha:", 0.0);
    v7 = swift_allocObject(&unk_10009E780, 24, 7);
    *(_QWORD *)(v7 + 16) = v1;
    if ((a1 & 1) != 0)
    {
      v8 = swift_allocObject(&unk_10009E7A8, 32, 7);
      *(_QWORD *)(v8 + 16) = sub_10001FA94;
      *(_QWORD *)(v8 + 24) = v7;
      v9 = v1;
      swift_retain(v7);
      objc_msgSend(v9, "_removeAllAnimations:", 1);
      v10 = sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
      __chkstk_darwin(v10);
      static UIView.animate(springDuration:bounce:initialSpringVelocity:delay:options:animations:completion:)(0, sub_10001FAE8, 0.513, -0.02, 0.0, 0.0);
      swift_release(v7);
      *(_QWORD *)&result = swift_release(v8).n128_u64[0];
    }
    else
    {
      v11 = *(void **)&v1[OBJC_IVAR____TtC7Climate19ClimateProgressView_centerSymbolYConstraint];
      v12 = v1;
      if (v11)
        objc_msgSend(v11, "setConstant:", -3.0);
      objc_msgSend(v1, "layoutIfNeeded");
      objc_msgSend(*(id *)&v1[v5], "setAlpha:", 1.0);
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    }
  }
  return result;
}

id sub_10001F66C(char *a1)
{
  void *v2;

  v2 = *(void **)&a1[OBJC_IVAR____TtC7Climate19ClimateProgressView_centerSymbolYConstraint];
  if (v2)
    objc_msgSend(v2, "setConstant:", -3.0);
  objc_msgSend(a1, "layoutIfNeeded");
  return objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_stackView], "setAlpha:", 1.0);
}

void sub_10001F6D4(char a1)
{
  char *v1;
  char v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  _OWORD v12[3];

  sub_10001E944();
  if ((v3 & 1) == 0)
  {
    v4 = qword_1000B6F60;
    v5 = *(id *)&v1[OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_stackView];
    if (v4 != -1)
      swift_once(&qword_1000B6F60, sub_100021E80);
    v12[0] = *(_OWORD *)byte_1000BC7F0;
    v12[1] = *(_OWORD *)&byte_1000BC7F0[16];
    v12[2] = *(_OWORD *)&byte_1000BC7F0[32];
    objc_msgSend(v5, "setTransform:", v12);

    v6 = swift_allocObject(&unk_10009E730, 24, 7);
    *(_QWORD *)(v6 + 16) = v1;
    if ((a1 & 1) != 0)
    {
      v7 = swift_allocObject(&unk_10009E758, 32, 7);
      *(_QWORD *)(v7 + 16) = sub_10001FA1C;
      *(_QWORD *)(v7 + 24) = v6;
      v8 = v1;
      swift_retain(v6);
      objc_msgSend(v8, "_removeAllAnimations:", 1);
      v9 = sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
      __chkstk_darwin(v9);
      static UIView.animate(springDuration:bounce:initialSpringVelocity:delay:options:animations:completion:)(0, sub_10001FA8C, 0.513, -0.02, 0.0, 0.0);
      swift_release(v6);
      swift_release(v7);
    }
    else
    {
      v10 = *(void **)&v1[OBJC_IVAR____TtC7Climate19ClimateProgressView_centerSymbolYConstraint];
      v11 = v1;
      if (v10)
        objc_msgSend(v10, "setConstant:", 0.0);
      objc_msgSend(v1, "layoutIfNeeded");
      swift_release(v6);
    }
  }
}

uint64_t sub_10001F8B8()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_dots));
}

id sub_10001F8E4()
{
  return sub_10000D008(type metadata accessor for ClimateDotsProgressView);
}

uint64_t type metadata accessor for ClimateDotsProgressView()
{
  return objc_opt_self(_TtC7Climate23ClimateDotsProgressView);
}

id sub_10001F9CC()
{
  return sub_10000D008(type metadata accessor for ClimateDotsProgressView.Dot);
}

uint64_t type metadata accessor for ClimateDotsProgressView.Dot()
{
  return objc_opt_self(_TtCC7Climate23ClimateDotsProgressView3Dot);
}

uint64_t sub_10001F9F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10001FA1C()
{
  uint64_t v0;
  char *v1;
  void *v2;

  v1 = *(char **)(v0 + 16);
  v2 = *(void **)&v1[OBJC_IVAR____TtC7Climate19ClimateProgressView_centerSymbolYConstraint];
  if (v2)
    objc_msgSend(v2, "setConstant:", 0.0);
  return objc_msgSend(v1, "layoutIfNeeded");
}

uint64_t sub_10001FA68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001FA8C()
{
  uint64_t v0;

  return sub_100021C94(*(uint64_t (**)(void))(v0 + 16));
}

id sub_10001FA94()
{
  uint64_t v0;

  return sub_10001F66C(*(char **)(v0 + 16));
}

unint64_t sub_10001FA9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7DB0;
  if (!qword_1000B7DB0)
  {
    v1 = sub_10000A948(&qword_1000B7DA8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000B7DB0);
  }
  return result;
}

void sub_10001FAF4(uint64_t a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void (*v14)(char *, uint64_t);
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  Class isa;
  uint64_t v24;
  Class v25;
  uint64_t v26;
  uint64_t v27;

  v3 = type metadata accessor for CAUVehicleLayoutInfo(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006058((uint64_t *)&unk_1000B7590);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100088C40;
  v9 = *(void **)(a1 + OBJC_IVAR____TtC7Climate14ClimateCarView_carImageView);
  v10 = objc_msgSend(v9, "heightAnchor");
  v11 = type metadata accessor for ClimateAssets(0);
  v12 = CAUVehicleLayout.cabinSeatsImage.getter(v11);
  v13 = CAUVehicleLayoutInfo.height.getter(v12);
  v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v6, v3);
  v15 = objc_msgSend(v10, "constraintEqualToConstant:", (double)v13);

  *(_QWORD *)(v8 + 32) = v15;
  v16 = objc_msgSend(v9, "widthAnchor");
  v17 = CAUVehicleLayout.cabinSeatsImage.getter(v16);
  LODWORD(v15) = CAUVehicleLayoutInfo.width.getter(v17);
  v14(v6, v3);
  v18 = objc_msgSend(v16, "constraintEqualToConstant:", (double)(int)v15);

  *(_QWORD *)(v8 + 40) = v18;
  v27 = v8;
  specialized Array._endMutation()(v19);
  v20 = OBJC_IVAR____TtC7Climate14ClimateCarView_imageActiveHeightConstraint;
  v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Climate14ClimateCarView_imageActiveHeightConstraint);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC7Climate14ClimateCarView_imageActiveHeightConstraint) = v27;
  v22 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100006098();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v22, "deactivateConstraints:", isa);

  v24 = *(_QWORD *)(a1 + v20);
  swift_bridgeObjectRetain(v24);
  v25 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v24);
  objc_msgSend(v22, "activateConstraints:", v25);
  swift_bridgeObjectRelease(v21);

}

void sub_10001FD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10001FDA8(a1);

  }
}

id sub_10001FDA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;

  v3 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ClimateZone(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020FF0(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100021038((uint64_t)v5);
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate14ClimateCarView_carImageView), "setImage:", *(_QWORD *)(v1+ OBJC_IVAR____TtC7Climate14ClimateCarView_assets+ *(int *)(type metadata accessor for ClimateAssets(0) + 24)));
  }
  else
  {
    sub_10000AB1C((uint64_t)v5, (uint64_t)v9);
    v11 = *(void **)(v1 + OBJC_IVAR____TtC7Climate14ClimateCarView_carImageView);
    v12 = v1 + OBJC_IVAR____TtC7Climate14ClimateCarView_assets;
    v13 = v12 + *(int *)(type metadata accessor for ClimateAssets(0) + 24);
    v14 = *(_QWORD *)(v13 + 8);
    v15 = *(id *)v13;
    swift_bridgeObjectRetain(v14);
    v16 = (id)sub_100007AA8((uint64_t)v9, (uint64_t)v15, v14);
    swift_bridgeObjectRelease(v14);

    objc_msgSend(v11, "setImage:", v16);
    return (id)sub_10000AB60((uint64_t)v9, type metadata accessor for ClimateZone);
  }
}

void sub_10001FF4C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _BYTE *v5;
  void (*v6)(_BYTE *, _QWORD, uint64_t, __n128);
  void (*v7)(_BYTE *, uint64_t);
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  _BYTE v28[40];
  _BYTE v29[40];
  CGRect v30;
  char v31;
  CGRect v32;
  char v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  v1 = type metadata accessor for CAUVehicleLayoutKey(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v2 + 104);
  v6(v5, enum case for CAUVehicleLayoutKey.seat_front(_:), v1, v3);
  sub_100069800((uint64_t)v5, (uint64_t)v28);
  v7 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v7(v5, v1);
  sub_100020F8C((uint64_t)v28, (uint64_t)&v32);
  if ((v33 & 1) == 0)
  {
    CGRectGetMidY(v32);
    ((void (*)(_BYTE *, _QWORD, uint64_t))v6)(v5, enum case for CAUVehicleLayoutKey.seat_2ndRow(_:), v1);
    sub_100069800((uint64_t)v5, (uint64_t)v29);
    v7(v5, v1);
    sub_100020F8C((uint64_t)v29, (uint64_t)&v30);
    if ((v31 & 1) != 0)
    {
      objc_msgSend(v0, "bounds");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;
      objc_msgSend(v0, "safeAreaInsets");
      v34.origin.x = sub_100020FD4(v9, v11, v13, v15, v16, v17);
      CGRectGetHeight(v34);
      v35.origin.x = sub_100020C98();
      CGRectGetMidY(v35);
    }
    else
    {
      CGRectGetMidY(v30);
      objc_msgSend(v0, "bounds");
      v19 = v18;
      v21 = v20;
      v23 = v22;
      v25 = v24;
      objc_msgSend(v0, "safeAreaInsets");
      v36.origin.x = sub_100020FD4(v19, v21, v23, v25, v26, v27);
      CGRectGetHeight(v36);
    }
  }
}

id sub_1000202E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateCarView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000203AC()
{
  return type metadata accessor for ClimateCarView(0);
}

uint64_t type metadata accessor for ClimateCarView(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B7E20;
  if (!qword_1000B7E20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateCarView);
  return result;
}

uint64_t sub_1000203F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[8];

  result = type metadata accessor for ClimateSystemManager(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100089548;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = type metadata accessor for ClimateAssets(319);
    if (v4 <= 0x3F)
    {
      v5[4] = *(_QWORD *)(result - 8) + 64;
      v5[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[6] = &unk_100089560;
      v5[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
      result = swift_updateClassMetadata2(a1, 256, 8, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_1000204A8()
{
  char *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  void *v12;
  char *v13;
  double Width;
  CGFloat v15;
  void (*v16)(char *, _QWORD, uint64_t);
  double v17;
  void (*v18)(char *, uint64_t);
  double MidY;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  CGFloat v31;
  __n128 v32;
  double v33;
  CGFloat v34;
  id v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  __n128 v54;
  id v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t (*v74)(char *, uint64_t);
  uint64_t v75;
  int v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  void *v89;
  Class isa;
  uint64_t v91;
  Class v92;
  uint64_t (*v93)(char *, char *, uint64_t);
  char *v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  objc_super v104;
  _BYTE v105[40];
  _BYTE v106[40];
  CGRect v107;
  char v108;
  CGRect v109;
  char v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;

  v1 = type metadata accessor for CAUVehicleLayout(0);
  v99 = *(_QWORD *)(v1 - 8);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for CAUVehicleLayoutInfo(0, v2);
  v5 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v101 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CAUVehicleLayoutKey(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for ClimateCarView(0);
  v104.receiver = v0;
  v104.super_class = v11;
  objc_msgSendSuper2(&v104, "layoutSubviews");
  v12 = *(void **)&v0[OBJC_IVAR____TtC7Climate14ClimateCarView_carImageView];
  objc_msgSend(v12, "layoutIfNeeded");
  v13 = *(char **)&v0[OBJC_IVAR____TtC7Climate14ClimateCarView_positionViews];
  objc_msgSend(v13, "layoutIfNeeded");
  if ((v0[OBJC_IVAR____TtC7Climate14ClimateCarView_hasAlreadyLayout] & 1) == 0)
  {
    v96 = v4;
    v97 = v1;
    v0[OBJC_IVAR____TtC7Climate14ClimateCarView_hasAlreadyLayout] = 1;
    v100 = v0;
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v111);
    v98 = v12;
    objc_msgSend(v12, "bounds");
    v15 = CGRectGetWidth(v112);
    v16 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
    v17 = Width / v15;
    v16(v10, enum case for CAUVehicleLayoutKey.seat_front(_:), v7);
    sub_100069800((uint64_t)v10, (uint64_t)v105);
    v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    v18(v10, v7);
    sub_100020F8C((uint64_t)v105, (uint64_t)&v109);
    if ((v110 & 1) != 0
      || (MidY = CGRectGetMidY(v109),
          v16(v10, enum case for CAUVehicleLayoutKey.seat_2ndRow(_:), v7),
          sub_100069800((uint64_t)v10, (uint64_t)v106),
          v18(v10, v7),
          sub_100020F8C((uint64_t)v106, (uint64_t)&v107),
          (v108 & 1) != 0))
    {
      v20 = v100;
      objc_msgSend(v100, "bounds");
      v22 = v21;
      v24 = v23;
      v26 = v25;
      v28 = v27;
      objc_msgSend(v20, "safeAreaInsets");
      v113.origin.x = sub_100020FD4(v22, v24, v26, v28, v29, v30);
      v31 = CGRectGetHeight(v113) + -60.0;
      sub_100068F7C();
      v32.n128_f64[0] = v31 / CGRectGetHeight(v114);
      if (v32.n128_f64[0] >= v17)
        v33 = v17;
      else
        v33 = v32.n128_f64[0];
    }
    else
    {
      v34 = CGRectGetMidY(v107) - MidY;
      v35 = v100;
      objc_msgSend(v100, "bounds");
      v37 = v36;
      v39 = v38;
      v41 = v40;
      v43 = v42;
      objc_msgSend(v35, "safeAreaInsets");
      v115.origin.x = sub_100020FD4(v37, v39, v41, v43, v44, v45);
      v32.n128_f64[0] = (CGRectGetHeight(v115) + -60.0 + -20.0 + -65.0) / v34;
      if (v17 >= v32.n128_f64[0])
        v33 = v32.n128_f64[0];
      else
        v33 = v17;
    }
    v46 = OBJC_IVAR____TtC7Climate20ClimatePositionViews_scale;
    *(double *)&v13[OBJC_IVAR____TtC7Climate20ClimatePositionViews_scale] = v33;
    v47 = sub_1000694A8(v32);
    v48 = type metadata accessor for ClimateAssets(0);
    v49 = v101;
    v50 = CAUVehicleLayout.cabinSeatsImage.getter(v48);
    v51 = CAUVehicleLayoutInfo.height.getter(v50);
    v52 = *(void (**)(char *, uint64_t))(v5 + 8);
    v53 = v102;
    v52(v49, v102);
    objc_msgSend(v47, "setConstant:", *(double *)&v13[v46] * (double)v51);

    v55 = sub_1000694C4(v54);
    v56 = CAUVehicleLayout.cabinSeatsImage.getter(v55);
    v57 = CAUVehicleLayoutInfo.width.getter(v56);
    v95 = v52;
    v52(v49, v53);
    objc_msgSend(v55, "setConstant:", *(double *)&v13[v46] * (double)v57);

    v58 = *(_QWORD *)&v13[OBJC_IVAR____TtC7Climate20ClimatePositionViews_positions];
    if ((unint64_t)v58 >> 62)
    {
      if (v58 < 0)
        v63 = *(_QWORD *)&v13[OBJC_IVAR____TtC7Climate20ClimatePositionViews_positions];
      else
        v63 = v58 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*(_QWORD *)&v13[OBJC_IVAR____TtC7Climate20ClimatePositionViews_positions], 2);
      v59 = _CocoaArrayWrapper.endIndex.getter(v63);
      if (v59)
        goto LABEL_12;
    }
    else
    {
      v59 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(*(_QWORD *)&v13[OBJC_IVAR____TtC7Climate20ClimatePositionViews_positions], 2);
      if (v59)
      {
LABEL_12:
        if (v59 < 1)
        {
          __break(1u);
          return;
        }
        v60 = 0;
        do
        {
          if ((v58 & 0xC000000000000001) != 0)
            v61 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v60, v58);
          else
            v61 = (char *)*(id *)(v58 + 8 * v60 + 32);
          v62 = v61;
          ++v60;
          *(_QWORD *)&v61[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_scale] = *(_QWORD *)&v13[v46];
          sub_100065D58();

        }
        while (v59 != v60);
      }
    }
    swift_bridgeObjectRelease_n(v58, 2);
    v64 = sub_100006058((uint64_t *)&unk_1000B7590);
    v65 = swift_allocObject(v64, 48, 7);
    *(_OWORD *)(v65 + 16) = xmmword_100088C40;
    v66 = objc_msgSend(v98, "heightAnchor");
    v94 = &v100[OBJC_IVAR____TtC7Climate14ClimateCarView_assets];
    v67 = v48;
    v68 = &v100[OBJC_IVAR____TtC7Climate14ClimateCarView_assets + *(int *)(v48 + 20)];
    v69 = v99;
    v93 = *(uint64_t (**)(char *, char *, uint64_t))(v99 + 16);
    v70 = v96;
    v71 = v97;
    v72 = v93(v96, v68, v97);
    v73 = v101;
    CAUVehicleLayout.cabinSeatsImage.getter(v72);
    v74 = *(uint64_t (**)(char *, uint64_t))(v69 + 8);
    v75 = v74(v70, v71);
    v76 = CAUVehicleLayoutInfo.height.getter(v75);
    v77 = v102;
    v78 = v95;
    v95(v73, v102);
    v79 = objc_msgSend(v66, "constraintEqualToConstant:", v33 * (double)v76);

    *(_QWORD *)(v65 + 32) = v79;
    v80 = objc_msgSend(v98, "widthAnchor");
    v81 = v93(v70, &v94[*(int *)(v67 + 20)], v71);
    CAUVehicleLayout.cabinSeatsImage.getter(v81);
    v82 = v74(v70, v71);
    LODWORD(v79) = CAUVehicleLayoutInfo.width.getter(v82);
    v78(v73, v77);
    v83 = objc_msgSend(v80, "constraintEqualToConstant:", v33 * (double)(int)v79);

    *(_QWORD *)(v65 + 40) = v83;
    v103 = v65;
    specialized Array._endMutation()(v84);
    v85 = OBJC_IVAR____TtC7Climate14ClimateCarView_imageActiveHeightConstraint;
    v86 = v100;
    v87 = *(_QWORD *)&v100[OBJC_IVAR____TtC7Climate14ClimateCarView_imageActiveHeightConstraint];
    *(_QWORD *)&v100[OBJC_IVAR____TtC7Climate14ClimateCarView_imageActiveHeightConstraint] = v103;
    v88 = v86;
    v89 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_100006098();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v89, "deactivateConstraints:", isa);

    v91 = *(_QWORD *)&v88[v85];
    swift_bridgeObjectRetain(v91);
    v92 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v91);
    objc_msgSend(v89, "activateConstraints:", v92);
    swift_bridgeObjectRelease(v87);

  }
}

double sub_100020C98()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  char *v31;
  double Width;
  double v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  CGRect v40;
  CGRect v41;

  v1 = type metadata accessor for CAUVehicleLayout(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for CAUVehicleLayoutInfo(0, v3);
  v6 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v38 = v0;
  v39 = (char *)&v36 - v10;
  v11 = *(double *)(*(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateCarView_positionViews]
                  + OBJC_IVAR____TtC7Climate20ClimatePositionViews_scale);
  v12 = &v0[OBJC_IVAR____TtC7Climate14ClimateCarView_assets];
  v13 = type metadata accessor for ClimateAssets(0);
  v14 = *(uint64_t (**)(char *, char *, uint64_t))(v2 + 16);
  v15 = v14(v5, &v12[*(int *)(v13 + 20)], v1);
  CAUVehicleLayout.cabin.getter(v15);
  v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16(v5, v1);
  v17 = v14(v5, &v12[*(int *)(v13 + 20)], v1);
  CAUVehicleLayout.cabin.getter(v17);
  v18 = ((uint64_t (*)(char *, uint64_t))v16)(v5, v1);
  v19 = CAUVehicleLayoutInfo.x.getter(v18);
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21 = v37;
  v20(v8, v37);
  v22 = (double)v19;
  v23 = v14(v5, &v12[*(int *)(v13 + 20)], v1);
  CAUVehicleLayout.cabinSeatsImage.getter(v23);
  v24 = ((uint64_t (*)(char *, uint64_t))v16)(v5, v1);
  v25 = CAUVehicleLayoutInfo.x.getter(v24);
  v20(v8, v21);
  v26 = v14(v5, &v12[*(int *)(v13 + 20)], v1);
  CAUVehicleLayout.cabin.getter(v26);
  v27 = ((uint64_t (*)(char *, uint64_t))v16)(v5, v1);
  CAUVehicleLayoutInfo.y.getter(v27);
  v20(v8, v21);
  v28 = v14(v5, &v12[*(int *)(v13 + 20)], v1);
  CAUVehicleLayout.cabinSeatsImage.getter(v28);
  v29 = ((uint64_t (*)(char *, uint64_t))v16)(v5, v1);
  CAUVehicleLayoutInfo.y.getter(v29);
  v20(v8, v21);
  v30 = v11 * (v22 - (double)v25);
  v31 = v38;
  objc_msgSend(v38, "bounds");
  Width = CGRectGetWidth(v40);
  objc_msgSend(*(id *)&v31[OBJC_IVAR____TtC7Climate14ClimateCarView_carImageView], "bounds");
  v33 = v30 + Width - CGRectGetWidth(v41);
  v34 = v39;
  CAUVehicleLayoutInfo.width.getter();
  CAUVehicleLayoutInfo.height.getter();
  v20(v34, v21);
  return v33;
}

uint64_t sub_100020F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058((uint64_t *)&unk_1000B7E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100020FD4(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_100020FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058((uint64_t *)&unk_1000B7C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100021038(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006058((uint64_t *)&unk_1000B7C40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100021078()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;

  v1 = OBJC_IVAR____TtC7Climate14ClimateCarView_carImageView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v2 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v2 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateCarView_cancellables] = v2;
  v0[OBJC_IVAR____TtC7Climate14ClimateCarView_hasAlreadyLayout] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateCarView_imageActiveHeightConstraint] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BA30, "Climate/ClimateCarView.swift", 28, 2, 119, 0);
  __break(1u);
}

uint64_t sub_100021158()
{
  return 3;
}

uint64_t sub_100021160()
{
  uint64_t v0;

  return _s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0((char)objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton)+ OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "on"), (char)objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton)+ OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "autoMode"), (char)objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton)+ OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onRestricted"), (char)objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton)+ OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onInvalid"), (char)objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton)+ OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation),
                   "onDisabled"));
}

char *sub_100021214(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  char *v5;
  id v6;
  char *v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  char *v14;
  void *v15;
  char *v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;

  v3 = &v1[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_autoModeGlyph] = 0;
  v4 = objc_allocWithZone((Class)type metadata accessor for ClimateRecirculationServiceButton());
  v5 = v1;
  v6 = a1;
  v7 = sub_10006C02C(v6, 1);
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton] = v7;
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculation] = v6;
  v8 = v6;

  v9 = (char *)sub_100012568(0, 0, 1);
  v10 = v9;
  v11 = OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton;
  v12 = *(_BYTE **)&v9[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton];
  v13 = v12[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v12[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if (v13 == 1)
  {
    v14 = v9;
  }
  else
  {
    v15 = *(void **)&v12[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v16 = v9;
    v17 = v12;
    objc_msgSend(v15, "removeFromSuperview");
    sub_100066C24();

  }
  objc_msgSend(v8, "registerObserver:", v10);
  v18 = *(_QWORD *)&v10[v11];
  objc_msgSend(v10, "addSubview:", v18);
  sub_10002144C();
  v19 = v10;
  sub_10007813C();
  objc_msgSend(v19, "setEnabled:", (_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0((char)objc_msgSend(*(id *)(v18 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "on"), (char)objc_msgSend(*(id *)(v18 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "autoMode"), (char)objc_msgSend(*(id *)(v18 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onRestricted"), (char)objc_msgSend(*(id *)(v18 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onInvalid"), (char)objc_msgSend(*(id *)(v18 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onDisabled")) & 0x18) == 0);
  sub_100066C24();
  ClimateButton.refreshColorConfig()();

  return v19;
}

void sub_10002144C()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100006058((uint64_t *)&unk_1000B7590);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100088DF0;
  v5 = *(void **)&v1[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton];
  v6 = objc_msgSend(v5, "leadingAnchor");
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "trailingAnchor");
  v10 = objc_msgSend(v1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v5, "topAnchor");
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(v5, "bottomAnchor");
  v16 = objc_msgSend(v1, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100006098();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_100021688()
{
  return sub_100066C24();
}

void sub_1000216B0()
{
  uint64_t v0;

  sub_10001BF8C(v0 + OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_delegate);

}

id sub_1000216FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateRecirculationIdicator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateRecirculationIdicator()
{
  return objc_opt_self(_TtC7Climate28ClimateRecirculationIdicator);
}

uint64_t sub_1000217F0()
{
  char *v0;
  uint64_t result;
  uint64_t v2;

  sub_10007813C();
  objc_msgSend(v0, "setEnabled:", (_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0((char)objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton]+ OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "on"), (char)objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton]+ OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "autoMode"), (char)objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton]+ OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onRestricted"), (char)objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton]+ OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onInvalid"),
       (char)objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton]+ OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onDisabled")) & 0x18) == 0);
  sub_100066C24();
  ClimateButton.refreshColorConfig()();
  result = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_delegate]);
  if (result)
  {
    v2 = result;
    sub_10003BC28();
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

void sub_100021918(int a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  int v11;
  uint64_t v12;

  v3 = OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue;
  v4 = *(int *)((char *)v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue);
  v5 = OBJC_IVAR____TtC7Climate19ClimateProgressView_range;
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v1
                                                             + OBJC_IVAR____TtC7Climate19ClimateProgressView_range), "maximum"));
  v7 = objc_msgSend(v6, "integerValue");

  if ((uint64_t)v7 >= v4)
  {
    v8 = *(int *)((char *)v1 + v3);
    v9 = objc_msgSend(*(id *)((char *)v1 + v5), "minimum");
    v10 = objc_msgSend(v9, "integerValue");

    if ((uint64_t)v10 <= v8)
    {
      v11 = *(_DWORD *)((char *)v1 + v3);
      if (v11 != a1)
      {
        if (v11)
        {
          if (a1)
            return;
          v12 = 37;
        }
        else
        {
          v12 = 36;
        }
        (*(void (**)(uint64_t))((swift_isaMask & *v1) + 8 * v12))(1);
      }
    }
  }
}

void sub_100021A24(int a1)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue);
  *(_DWORD *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue) = a1;
  sub_100021918(v2);
}

id sub_100021A3C(char a1)
{
  uint64_t v1;
  double v2;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_isHighlighted) = a1;
  v2 = 0.2;
  if ((a1 & 1) == 0)
    v2 = 1.0;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView), "setAlpha:", v2);
}

void sub_100021A78()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char v11;
  char v12;
  id v13;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig);
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v13 = *(id *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  *v4 = v2;
  v4[1] = v3;
  v4[2] = &_swiftEmptyDictionarySingleton;
  v7 = v3;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v8 = v2;
  v9 = v7;
  swift_bridgeObjectRetain(&_swiftEmptyDictionarySingleton);
  v10 = v8;
  if ((static NSObject.== infix(_:_:)(v10) & 1) != 0 && (static NSObject.== infix(_:_:)(v9) & 1) != 0)
  {
    sub_10005B490((uint64_t)&_swiftEmptyDictionarySingleton, v6);
    v12 = v11;
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

  }
  ClimateButton.refreshColorConfig()();
LABEL_7:

  swift_bridgeObjectRelease(v6);
}

void sub_100021BE0(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;

  v8 = (_QWORD *)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig);
  v9 = *(void **)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig);
  v10 = *(void **)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig + 8);
  v12 = *(void **)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig + 16);
  v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig + 24);
  *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8[3] = a4;
  v13 = a3;
  swift_bridgeObjectRetain(a4);
  v15 = a1;
  v14 = a2;
  swift_bridgeObjectRelease(v11);

  sub_100021A78();
  swift_bridgeObjectRelease(a4);

}

uint64_t sub_100021C94(uint64_t (*a1)(void))
{
  return a1();
}

void sub_100021CB4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000044, 0x800000010008CD70, "Climate/ClimateProgressView.swift", 33, 2, 112, 0);
  __break(1u);
}

void sub_100021D0C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000044, 0x800000010008CD20, "Climate/ClimateProgressView.swift", 33, 2, 116, 0);
  __break(1u);
}

id sub_100021DB4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateProgressView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateProgressView()
{
  return objc_opt_self(_TtC7Climate19ClimateProgressView);
}

CGFloat sub_100021E80()
{
  CGFloat result;
  CGAffineTransform v1;

  CGAffineTransformMakeScale(&v1, 0.01, 0.01);
  result = v1.a;
  *(CGAffineTransform *)byte_1000BC7F0 = v1;
  return result;
}

_QWORD *sub_100021EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6)
{
  char *v6;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  _QWORD *result;
  void *v24;
  char *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char v38;
  void *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  id v46;
  void *v47;
  char *v48;
  char *v49;
  char v50;
  char *v51;
  char *v52;
  id v53;
  void *v54;
  char *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  id v62;
  char v63;
  char v64;
  double v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  Class isa;
  void *v84;
  id v85;
  uint64_t v86;
  void *v87;
  uint64_t v90;
  void *v91;
  int v92;
  char v94[24];
  char v95[24];
  char v96[24];
  objc_super v97;

  v10 = OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView;
  v11 = objc_allocWithZone((Class)type metadata accessor for ClimatePassthroughButton());
  v12 = v6;
  *(_QWORD *)&v6[v10] = objc_msgSend(v11, "init");
  v12[OBJC_IVAR____TtC7Climate19ClimateProgressView_isHighlighted] = 0;
  v13 = &v12[OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig];
  v14 = (void *)objc_opt_self(UIColor);
  v15 = objc_msgSend(v14, "labelColor");
  v16 = objc_msgSend(v14, "labelColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.25);

  v18 = objc_msgSend(v14, "labelColor");
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v17;
  *((_QWORD *)v13 + 2) = v18;
  *((_QWORD *)v13 + 3) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Climate19ClimateProgressView_centerSymbolYConstraint] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Climate19ClimateProgressView_range] = a6;
  v92 = a5;
  *(_DWORD *)&v12[OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue] = a5;
  v19 = a6;

  v97.receiver = v12;
  v97.super_class = (Class)type metadata accessor for ClimateProgressView();
  v20 = objc_msgSendSuper2(&v97, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v21 = OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView;
  objc_msgSend(*(id *)((char *)v20 + OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v91 = v19;
  if (a4)
  {
    v22 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", -1);
  }
  else
  {
    result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleBody, UIFontWeightSemibold);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v24 = result;
    v22 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", result, 3);

  }
  v25 = (char *)*(id *)((char *)v20 + v21);
  v26 = v22;
  v27 = ClimateButton.imageSymbolConfiguration.getter();
  v28 = *(void **)&v25[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration];
  *(_QWORD *)&v25[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = v26;
  v29 = v26;

  v30 = ClimateButton.imageSymbolConfiguration.getter();
  sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
  LOBYTE(v28) = static NSObject.== infix(_:_:)(v30);

  if ((v28 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();

  v87 = v29;
  v31 = *(char **)((char *)v20 + v21);
  v32 = &v31[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v31[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v96, 1, 0);
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v32 = a1;
  *((_QWORD *)v32 + 1) = a2;
  v35 = v31;
  v36 = v35;
  if (a2)
  {
    if (v33
      && (v34 == a1 && v33 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v34, v33, 0) & 1) != 0))
    {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v33)
  {
LABEL_14:
    ClimateButton.updateClimateConfiguration()();
LABEL_15:

    swift_bridgeObjectRelease(v33);
    goto LABEL_16;
  }

LABEL_16:
  v37 = *(char **)((char *)v20 + v21);
  objc_msgSend(v37, "setContentMode:", 1);
  objc_msgSend(v37, "_setContinuousCornerRadius:", 0.0);
  v38 = v37[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v37[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if ((v38 & 1) == 0)
  {
    v39 = *(void **)&v37[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v40 = v37;
    objc_msgSend(v39, "removeFromSuperview");
    ClimateButton.refreshColorConfig()();

  }
  v41 = *(char **)((char *)v20 + v21);
  v42 = &v41[OBJC_IVAR____TtC7Climate13ClimateButton_title];
  swift_beginAccess(&v41[OBJC_IVAR____TtC7Climate13ClimateButton_title], v95, 1, 0);
  v44 = *(_QWORD *)v42;
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v42 = a3;
  *((_QWORD *)v42 + 1) = a4;
  v45 = v41;
  swift_bridgeObjectRetain(a4);
  if (a4)
  {
    if (v43
      && (v44 == a3 && v43 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, v44, v43, 0) & 1) != 0))
    {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v43)
  {
LABEL_25:
    ClimateButton.updateClimateConfiguration()();
LABEL_26:

    swift_bridgeObjectRelease(v43);
    goto LABEL_27;
  }

LABEL_27:
  v46 = objc_msgSend(*(id *)((char *)v20 + v21), "titleLabel");
  if (v46)
  {
    v47 = v46;
    objc_msgSend(v46, "setNumberOfLines:", 1);

  }
  v48 = *(char **)((char *)v20 + v21);
  v49 = &v48[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle];
  swift_beginAccess(&v48[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle], v94, 1, 0);
  v50 = *v49;
  *v49 = 1;
  if ((v50 & 1) == 0)
  {
    v51 = v48;
    ClimateButton.updateClimateConfiguration()();

  }
  v90 = v21;
  v52 = (char *)*(id *)((char *)v20 + v21);
  v53 = objc_msgSend(v14, "clearColor");
  v54 = *(void **)((char *)v20 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig);
  v55 = &v52[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  v56 = *(void **)&v52[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  v57 = *(void **)&v52[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
  v58 = *(_QWORD *)&v52[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16];
  *(_QWORD *)v55 = v53;
  *((_QWORD *)v55 + 1) = v54;
  *((_QWORD *)v55 + 2) = &_swiftEmptyDictionarySingleton;
  v59 = v54;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v60 = v53;
  v61 = v59;
  swift_bridgeObjectRetain(&_swiftEmptyDictionarySingleton);
  v62 = v60;
  if ((static NSObject.== infix(_:_:)(v62) & 1) != 0 && (static NSObject.== infix(_:_:)(v61) & 1) != 0)
  {
    sub_10005B490((uint64_t)&_swiftEmptyDictionarySingleton, v58);
    v64 = v63;
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

    if ((v64 & 1) != 0)
      goto LABEL_37;
  }
  else
  {
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

  }
  ClimateButton.refreshColorConfig()();
LABEL_37:

  swift_bridgeObjectRelease(v58);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)((char *)v20 + v90));
  if (a4)
  {
    swift_bridgeObjectRelease(a4);
    v65 = 45.0;
  }
  else
  {
    v65 = 30.0;
  }
  v66 = objc_msgSend(*(id *)((char *)v20 + v90), "centerYAnchor");
  v67 = objc_msgSend(v20, "centerYAnchor");
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

  v69 = (void *)objc_opt_self(NSLayoutConstraint);
  v70 = sub_100006058((uint64_t *)&unk_1000B7590);
  v71 = swift_allocObject(v70, 64, 7);
  *(_OWORD *)(v71 + 16) = xmmword_100088DF0;
  v72 = objc_msgSend(*(id *)((char *)v20 + v90), "widthAnchor");
  v73 = objc_msgSend(v72, "constraintEqualToConstant:", v65);

  *(_QWORD *)(v71 + 32) = v73;
  v74 = objc_msgSend(*(id *)((char *)v20 + v90), "heightAnchor");
  v75 = objc_msgSend(v74, "constraintEqualToConstant:", 30.0);

  *(_QWORD *)(v71 + 40) = v75;
  *(_QWORD *)(v71 + 48) = v68;
  v76 = *(void **)((char *)v20 + v90);
  v77 = v68;
  v78 = objc_msgSend(v76, "centerXAnchor");
  v79 = objc_msgSend(v20, "centerXAnchor");
  v80 = objc_msgSend(v78, "constraintEqualToAnchor:", v79);

  *(_QWORD *)(v71 + 56) = v80;
  specialized Array._endMutation()(v81);
  v82 = v71;
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v82);
  objc_msgSend(v69, "activateConstraints:", isa);

  v84 = *(void **)((char *)v20 + OBJC_IVAR____TtC7Climate19ClimateProgressView_centerSymbolYConstraint);
  *(_QWORD *)((char *)v20 + OBJC_IVAR____TtC7Climate19ClimateProgressView_centerSymbolYConstraint) = v77;
  v85 = v77;

  v86 = 296;
  if (!v92)
    v86 = 288;
  (*(void (**)(_QWORD))((swift_isaMask & *v20) + v86))(0);

  return v20;
}

void sub_10002278C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, id a6, double a7)
{
  id v11;
  unsigned int v12;
  id v13;
  int v14;
  int v15;
  int v16;
  id v17;
  unsigned int v18;
  id v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  unsigned int v24;
  id v26;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  id v31;
  _QWORD *v32;

  v11 = objc_msgSend(a6, "minimum");
  v12 = objc_msgSend(v11, "intValue");

  v13 = objc_msgSend(a6, "maximum");
  v14 = objc_msgSend(v13, "intValue");

  v15 = v14 & (v14 >> 31);
  v16 = v12 - v15;
  if (__OFSUB__(v12, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  v17 = objc_msgSend(a6, "maximum");
  v18 = objc_msgSend(v17, "intValue");

  v19 = objc_msgSend(a6, "minimum");
  v20 = objc_msgSend(v19, "intValue");

  v21 = v20 & ~(v20 >> 31);
  v22 = __OFSUB__(v18, v21);
  v23 = v18 - v21;
  if (v22)
  {
LABEL_15:
    __break(1u);
    return;
  }
  if (v16 >= 0)
    v24 = v16;
  else
    v24 = -v16;
  if (v23 < 0)
    v23 = -v23;
  if (v24 > 3 || v23 >= 4)
  {
    objc_allocWithZone((Class)type metadata accessor for ClimateBarProgressView());
    swift_bridgeObjectRetain(a4);
    v26 = a6;
    swift_bridgeObjectRetain(a2);
    sub_100055728(a1, a2, a3, a4, a5, v26, a7);
  }
  else
  {
    v27 = (char *)objc_allocWithZone((Class)type metadata accessor for ClimateDotsProgressView());
    v28 = OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_stackView;
    sub_100006B04(0, &qword_1000B7D98, UIStackView_ptr);
    swift_bridgeObjectRetain(a4);
    v29 = a6;
    v30 = v27;
    swift_bridgeObjectRetain(a2);
    *(_QWORD *)&v27[v28] = UIStackView.init(axis:spacing:arrangedSubviews:)(0, _swiftEmptyArrayStorage, 0.0);
    *(_QWORD *)&v30[OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_dots] = _swiftEmptyArrayStorage;
    *(double *)&v30[OBJC_IVAR____TtC7Climate23ClimateDotsProgressView_diameter] = a7;

    v31 = v29;
    v32 = sub_100021EC4(a1, a2, a3, a4, a5, v31);
    sub_10001EA80(a5, v31, a7);

  }
}

void sub_1000229F8()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v1 = OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimatePassthroughButton()), "init");
  v0[OBJC_IVAR____TtC7Climate19ClimateProgressView_isHighlighted] = 0;
  v2 = &v0[OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig];
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "labelColor");
  v5 = objc_msgSend(v3, "labelColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.25);

  v7 = objc_msgSend(v3, "labelColor");
  *v2 = v4;
  v2[1] = v6;
  v2[2] = v7;
  v2[3] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate19ClimateProgressView_centerSymbolYConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BA30, "Climate/ClimateProgressView.swift", 33, 2, 121, 0);
  __break(1u);
}

void sub_100022B88()
{
  uint64_t v0;

}

id sub_100022B98()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateCabinServiceButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateCabinServiceButton()
{
  return objc_opt_self(_TtC7Climate25ClimateCabinServiceButton);
}

_QWORD *initializeBufferWithCopyOfBuffer for ClimateHeatingCoolingVentingImages(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for ClimateHeatingCoolingVentingImages(id *a1)
{

}

uint64_t assignWithCopy for ClimateHeatingCoolingVentingImages(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  return a1;
}

__n128 initializeWithTake for ClimateColorConfig(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClimateHeatingCoolingVentingImages(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for ClimateHeatingCoolingVentingImages(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClimateHeatingCoolingVentingImages(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClimateHeatingCoolingVentingImages()
{
  return &type metadata for ClimateHeatingCoolingVentingImages;
}

uint64_t sub_100022E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  NSObject *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t (*v64)(char *, uint64_t);
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v94 = a2;
  v92 = type metadata accessor for CAUVehicleLayoutKey(0);
  v90 = *(_QWORD *)(v92 - 8);
  v4 = __chkstk_darwin(v92);
  v89 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CAUBaselineAnchor(0, v4);
  v95 = *(_QWORD *)(v6 - 8);
  v96 = v6;
  __chkstk_darwin(v6);
  v87 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006058(&qword_1000B7FD0);
  __chkstk_darwin(v8);
  v93 = (uint64_t)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v87 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v87 - v14;
  __chkstk_darwin(v16);
  v88 = (uint64_t)&v87 - v17;
  v18 = sub_100006058(&qword_1000B7FD8);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for CAUVehicleLayoutInfo(0, v19);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v87 - v28;
  v91 = v2;
  v30 = CAUVehicleLayout.infos.getter(v27);
  if (*(_QWORD *)(v30 + 16))
  {
    v31 = a1;
    v32 = sub_10005B798(a1);
    if ((v33 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v21, *(_QWORD *)(v30 + 56) + *(_QWORD *)(v23 + 72) * v32, v22);
      v34 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    v31 = a1;
  }
  v34 = 1;
LABEL_6:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, v34, 1, v22);
  swift_bridgeObjectRelease(v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) != 1)
  {
    v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))(v29, v21, v22);
    CAUVehicleLayoutInfo.baselineAnchor.getter(v52);
    v54 = v95;
    v53 = v96;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v12, 1, v96) == 1)
    {
      sub_100008B88((uint64_t)v12, &qword_1000B7FD0);
      v55 = 1;
    }
    else
    {
      v58 = v87;
      v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v54 + 32))(v87, v12, v53);
      v60 = CAUBaselineAnchor.x.getter(v59);
      v61 = v60;
      v62 = CAUVehicleLayout.cabinSeatsImage.getter(v60);
      v63 = CAUVehicleLayoutInfo.x.getter(v62);
      v64 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
      result = v64(v25, v22);
      v65 = __OFSUB__(v61, v63);
      v66 = (v61 - v63);
      if (v65)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      v67 = CAUBaselineAnchor.y.getter(result);
      v68 = v67;
      v69 = CAUVehicleLayout.cabinSeatsImage.getter(v67);
      v70 = CAUVehicleLayoutInfo.y.getter(v69);
      result = v64(v25, v22);
      if (__OFSUB__(v68, v70))
      {
LABEL_24:
        __break(1u);
        return result;
      }
      CAUBaselineAnchor.init(x:y:)(v66, (v68 - v70));
      v54 = v95;
      v53 = v96;
      (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v96);
      v55 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v15, v55, 1, v53);
    v71 = v88;
    v72 = sub_1000237B0((uint64_t)v15, v88);
    v73 = CAUVehicleLayoutInfo.x.getter(v72);
    v74 = v73;
    v75 = CAUVehicleLayout.cabinSeatsImage.getter(v73);
    v76 = CAUVehicleLayoutInfo.x.getter(v75);
    v77 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
    result = v77(v25, v22);
    v65 = __OFSUB__(v74, v76);
    v78 = (v74 - v76);
    if (v65)
    {
      __break(1u);
    }
    else
    {
      v79 = CAUVehicleLayoutInfo.y.getter(result);
      v80 = v79;
      v81 = CAUVehicleLayout.cabinSeatsImage.getter(v79);
      v82 = CAUVehicleLayoutInfo.y.getter(v81);
      result = v77(v25, v22);
      v83 = (v80 - v82);
      if (!__OFSUB__(v80, v82))
      {
        v84 = CAUVehicleLayoutInfo.height.getter(result);
        v85 = CAUVehicleLayoutInfo.width.getter(v84);
        v86 = v93;
        sub_1000237F8(v71, v93);
        CAUVehicleLayoutInfo.init(x:y:height:width:baselineAnchor:)(v78, v83, v84, v85, v86);
        sub_100008B88(v71, &qword_1000B7FD0);
        return v77(v29, v22);
      }
    }
    __break(1u);
    goto LABEL_23;
  }
  v35 = sub_100008B88((uint64_t)v21, &qword_1000B7FD8);
  v36 = static os_log_type_t.error.getter(v35);
  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v37 = qword_1000BC938;
  v39 = v89;
  v38 = v90;
  v40 = v31;
  v41 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v40, v92);
  v42 = v36;
  v43 = os_log_type_enabled(v37, v36);
  v45 = v95;
  v44 = v96;
  if (v43)
  {
    v46 = (uint8_t *)swift_slowAlloc(12, -1);
    v47 = swift_slowAlloc(32, -1);
    v98 = v47;
    *(_DWORD *)v46 = 136315138;
    v48 = CAUVehicleLayoutKey.rawValue.getter(v47);
    v50 = v49;
    v97 = sub_10005DB58(v48, v49, &v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98, v46 + 4, v46 + 12);
    v51 = v50;
    v44 = v96;
    swift_bridgeObjectRelease(v51);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v92);
    _os_log_impl((void *)&_mh_execute_header, v37, v42, "Unable to retrieve layoutInfo for %s", v46, 0xCu);
    swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v46, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v41);
  }
  v56 = v93;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v93, 1, 1, v44);
  return CAUVehicleLayoutInfo.init(x:y:height:width:baselineAnchor:)(0, 0, 0, 0, v56);
}

uint64_t sub_100023430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD v19[6];

  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v19[3] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CAUAsset.Seat.State(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v19[1] = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CAUResource(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v14[*(int *)(sub_100006058(&qword_1000B7450) + 48)];
  v19[4] = v5;
  v19[5] = v4;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v19[2] = a1;
  v16(v14, a1, v4);
  v19[0] = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v15, a2, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for CAUResource.seat(_:), v11);
  v17 = CAUAssetLibrary.asset(for:)(v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v17;
}

uint64_t sub_1000237B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058(&qword_1000B7FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000237F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058(&qword_1000B7FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100023840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_100006058((uint64_t *)&unk_1000B7FE0);
  v1 = type metadata accessor for CAUVehicleLayoutKey(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v4 | 7;
  v11 = swift_allocObject(v0, v5 + 4 * v3, v4 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100089670;
  v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104);
  v7(v11 + v5, enum case for CAUVehicleLayoutKey.seat_front_left(_:), v1);
  v7(v11 + v5 + v3, enum case for CAUVehicleLayoutKey.seat_front_middle(_:), v1);
  v7(v11 + v5 + 2 * v3, enum case for CAUVehicleLayoutKey.seat_front_right(_:), v1);
  v7(v11 + v5 + 3 * v3, enum case for CAUVehicleLayoutKey.seat_front(_:), v1);
  v8 = swift_allocObject(v0, v5 + 4 * v3, v6);
  *(_OWORD *)(v8 + 16) = xmmword_100089670;
  v7(v8 + v5, enum case for CAUVehicleLayoutKey.seat_2ndRow_left(_:), v1);
  v7(v8 + v5 + v3, enum case for CAUVehicleLayoutKey.seat_2ndRow_middle(_:), v1);
  v7(v8 + v5 + 2 * v3, enum case for CAUVehicleLayoutKey.seat_2ndRow_right(_:), v1);
  v7(v8 + v5 + 3 * v3, enum case for CAUVehicleLayoutKey.seat_2ndRow(_:), v1);
  sub_100072DE0(v8);
  v9 = swift_allocObject(v0, v5 + 4 * v3, v6);
  *(_OWORD *)(v9 + 16) = xmmword_100089670;
  v7(v9 + v5, enum case for CAUVehicleLayoutKey.seat_3rdRow_left(_:), v1);
  v7(v9 + v5 + v3, enum case for CAUVehicleLayoutKey.seat_3rdRow_middle(_:), v1);
  v7(v9 + v5 + 2 * v3, enum case for CAUVehicleLayoutKey.seat_3rdRow_right(_:), v1);
  v7(v9 + v5 + 3 * v3, enum case for CAUVehicleLayoutKey.seat_3rdRow(_:), v1);
  sub_100072DE0(v9);
  return v11;
}

unint64_t sub_100023AB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_100006058(&qword_1000B8368);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_100006058(&qword_1000B8358);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_10000AA50(v13, (uint64_t)v5, &qword_1000B8368);
    result = sub_10005B798((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for CAUVehicleLayoutKey(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100023C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006058(&qword_1000B83F8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    result = sub_10005B830((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v6 += 2;
    v4[2] = v14;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100023D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006058(&qword_1000B83F0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    swift_bridgeObjectRetain(v7);
    result = sub_10005B830((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100023E48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006058(&qword_1000B8328);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    v10 = v9;
    result = sub_10005B998(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v10;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100023F60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006058(&qword_1000B8400);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000AA50(v7, (uint64_t)&v14, &qword_1000B8408);
    v8 = v14;
    result = sub_10005B9FC(v14);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    result = (unint64_t)sub_10002CD60(&v15, (_OWORD *)(v4[7] + 32 * result));
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v7 += 40;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10002408C(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (!v1)
    return (uint64_t)v2;
  v33 = _swiftEmptyArrayStorage;
  sub_1000688C4(0, v1, 0);
  v2 = _swiftEmptyArrayStorage;
  result = sub_10002C038(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v25 = v1;
  v26 = v5;
  v27 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v28 = v7;
    v12 = *(_QWORD *)(a1 + 48) + 24 * v6;
    v13 = *(_BYTE *)(v12 + 16);
    v14 = *(_OWORD *)v12;
    v31 = 0;
    v32 = 0xE000000000000000;
    v29 = v14;
    v30 = v13;
    result = _print_unlocked<A, B>(_:_:)(&v29, &v31, &type metadata for ClimateSceneDelegateType, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v15 = v31;
    v16 = v32;
    v33 = v2;
    v18 = v2[2];
    v17 = v2[3];
    if (v18 >= v17 >> 1)
    {
      result = sub_1000688C4(v17 > 1, v18 + 1, 1);
      v2 = v33;
    }
    v2[2] = v18 + 1;
    v19 = &v2[2 * v18];
    v19[4] = v15;
    v19[5] = v16;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v20 = *(_QWORD *)(v27 + 8 * v11);
    if ((v20 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v26;
    if (*(_DWORD *)(a1 + 36) != v26)
      goto LABEL_27;
    v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v25;
    }
    else
    {
      v22 = v11 + 1;
      v23 = (unint64_t)(v9 + 63) >> 6;
      v10 = v25;
      if (v11 + 1 < v23)
      {
        v24 = *(_QWORD *)(v27 + 8 * v22);
        if (v24)
        {
LABEL_20:
          v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            v24 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v24)
            {
              v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v28 + 1;
    v6 = v9;
    if (v28 + 1 == v10)
      return (uint64_t)v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000242CC(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes, a1, 33, 0);
  return &j__swift_endAccess;
}

double sub_100024314()
{
  void *v0;
  void *v1;
  NSObject *v2;
  char *v3;
  os_log_type_t v4;
  uint64_t *v5;
  uint8_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  NSObject *v31;
  id v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  NSObject *v36;
  char *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  double v49;
  double v50;
  uint64_t v52;
  uint64_t v53;
  char v54[8];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];

  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v1 = &unk_1000BC000;
  v2 = qword_1000BC938;
  v3 = v0;
  v4 = static os_log_type_t.default.getter(v3);
  v5 = &OBJC_IVAR____TtC7Climate18ClimateCoordinator_signpostManager;
  if (os_log_type_enabled(v2, v4))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v57[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = &v3[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes];
    swift_beginAccess(&v3[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes], &v52, 0, 0);
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain(v9);
    v10 = sub_100006058(&qword_1000B82F0);
    v11 = sub_10002C6B4();
    v12 = Dictionary.description.getter(v9, &type metadata for ClimateSceneDelegateType, v10, v11);
    v14 = v13;
    v15 = v9;
    v5 = &OBJC_IVAR____TtC7Climate18ClimateCoordinator_signpostManager;
    swift_bridgeObjectRelease(v15);
    v16 = v12;
    v1 = &unk_1000BC000;
    v55 = sub_10005DB58(v16, v14, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v2, v4, "ActiveScenes = %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  v17 = &v3[v5[1]];
  swift_beginAccess(v17, v57, 0, 0);
  v18 = *(_QWORD *)v17;
  v19 = swift_bridgeObjectRetain(*(_QWORD *)v17);
  v20 = sub_1000247C4(v19);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  swift_bridgeObjectRelease(v18);
  if (v26
    && (sub_10002C6A0(v20, v22, v24), sub_10007BC1C(v26), v28 = v27, v30 = v29, swift_bridgeObjectRelease(v26), v28))
  {
    swift_bridgeObjectRelease(v28);
    v31 = *((_QWORD *)v1 + 295);
    v32 = v30;
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v31, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v34 = 134217984;
      sub_10007C03C();
      v55 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v34 + 4, v34 + 12);

      _os_log_impl((void *)&_mh_execute_header, v31, v33, "Returning main scale: %f", v34, 0xCu);
      swift_slowDealloc(v34, -1, -1);
    }
    else
    {

    }
    sub_10007C03C();
    v49 = v50;

  }
  else
  {
    v36 = *((_QWORD *)v1 + 295);
    v37 = v3;
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v36, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v55 = v40;
      *(_DWORD *)v39 = 136315138;
      v41 = *(_QWORD *)v17;
      v42 = swift_bridgeObjectRetain(v41);
      v43 = sub_10002408C(v42);
      swift_bridgeObjectRelease(v41);
      v53 = v43;
      v44 = sub_100006058((uint64_t *)&unk_1000B9650);
      v45 = sub_10000AA10((unint64_t *)&qword_1000B83B0, (uint64_t *)&unk_1000B9650, (uint64_t)&protocol conformance descriptor for [A]);
      v46 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v44, v45);
      v48 = v47;
      swift_bridgeObjectRelease(v43);
      v53 = sub_10005DB58(v46, v48, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54, v39 + 4, v39 + 12);

      swift_bridgeObjectRelease(v48);
      _os_log_impl((void *)&_mh_execute_header, v36, v38, "Unable to resolve a carplay sceneDelegate [%s]", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
    }
    else
    {

    }
    return 2.0;
  }
  return v49;
}

uint64_t sub_1000247C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = a1;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v7 = 0;
  v25 = v5;
  while (1)
  {
    if (v4)
    {
      v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_23;
    }
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v10 >= v5)
      goto LABEL_31;
    v11 = *(_QWORD *)(v26 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v5)
        goto LABEL_31;
      v11 = *(_QWORD *)(v26 + 8 * v7);
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v5)
          goto LABEL_31;
        v11 = *(_QWORD *)(v26 + 8 * v7);
        if (!v11)
        {
          v7 = v10 + 3;
          if (v10 + 3 >= v5)
            goto LABEL_31;
          v11 = *(_QWORD *)(v26 + 8 * v7);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v4 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_23:
    v13 = *(_QWORD *)(v1 + 48) + 24 * v9;
    v14 = *(unsigned __int8 *)(v13 + 16);
    if (*(_BYTE *)(v13 + 16))
    {
      v15 = *(_QWORD *)v13;
      v16 = *(_QWORD *)(v13 + 8);
      v17 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v9);
      if (v14 == 1 || __PAIR128__(v16, v15) < 2)
      {
        if (*(_QWORD *)(v17 + 16))
        {
          swift_bridgeObjectRetain(v17);
          goto LABEL_33;
        }
        v27 = *(_QWORD *)v13;
        v18 = qword_1000B6FE8;
        v19 = swift_bridgeObjectRetain(v17);
        if (v18 != -1)
          v19 = swift_once(&qword_1000B6FE8, sub_10005CB60);
        v20 = qword_1000BC938;
        v21 = static os_log_type_t.default.getter(v19);
        if (os_log_type_enabled(v20, v21))
        {
          v22 = v1;
          v23 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "empty dictionary, continue", v23, 2u);
          v24 = v23;
          v1 = v22;
          v5 = v25;
          swift_slowDealloc(v24, -1, -1);
        }
        sub_10002C6A0(v27, v16, v14);
        result = swift_bridgeObjectRelease(v17);
      }
    }
  }
  v12 = v10 + 4;
  if (v12 >= v5)
  {
LABEL_31:
    v15 = 0;
LABEL_33:
    swift_release(v1);
    return v15;
  }
  v11 = *(_QWORD *)(v26 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v5)
      goto LABEL_31;
    v11 = *(_QWORD *)(v26 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100024A6C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100089A28);
  v2 = swift_getKeyPath(&unk_100089A50);
  static Published.subscript.getter(v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_100024ADC()
{
  void *v0;
  NSObject *v1;
  char *v2;
  os_log_type_t v3;
  uint8_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10[32];
  uint64_t v11;
  uint64_t v12;

  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v1 = qword_1000BC938;
  v2 = v0;
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v1, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v4 = 134217984;
    v5 = &v2[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes];
    swift_beginAccess(&v2[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes], v10, 0, 0);
    v11 = *(_QWORD *)(*(_QWORD *)v5 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v4 + 4, v4 + 12);

    _os_log_impl((void *)&_mh_execute_header, v1, v3, "Updating view controllers for %ld scenes", v4, 0xCu);
    swift_slowDealloc(v4, -1, -1);
  }
  else
  {

  }
  v6 = &v2[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes];
  swift_beginAccess(&v2[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes], &v11, 0, 0);
  v7 = *(_QWORD *)v6;
  v8 = v2;
  swift_bridgeObjectRetain(v7);
  sub_10002C3D0(v9, v8);
  swift_bridgeObjectRelease(v7);

}

uint64_t sub_100024C58()
{
  return sub_100024E08((uint64_t)&unk_100089950, (uint64_t)&unk_100089978);
}

uint64_t sub_100024C6C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  KeyPath = swift_getKeyPath(&unk_100089950);
  v10 = swift_getKeyPath(&unk_100089978);
  sub_10000AA50(a1, (uint64_t)v8, (uint64_t *)&unk_1000BA180);
  v11 = v1;
  static Published.subscript.setter(v8, v11, KeyPath, v10);
  v12 = swift_getKeyPath(&unk_100089950);
  v13 = swift_getKeyPath(&unk_100089978);
  static Published.subscript.getter(v11, v12, v13);
  swift_release(v12);
  swift_release(v13);
  v14 = type metadata accessor for ClimateSystemManager(0);
  LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v5, 1, v14);
  sub_100008B88((uint64_t)v5, (uint64_t *)&unk_1000BA180);
  if ((_DWORD)v12 == 1)
  {
    sub_10006FD88();
    sub_100024ADC();
  }
  return sub_100008B88(a1, (uint64_t *)&unk_1000BA180);
}

uint64_t sub_100024DF4()
{
  return sub_100024E08((uint64_t)&unk_100089A70, (uint64_t)&unk_100089A98);
}

uint64_t sub_100024E08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(v2, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_100024E64()
{
  return sub_100024EFC((uint64_t)&unk_1000899E0, (uint64_t)&unk_100089A08);
}

uint64_t sub_100024E78()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  unsigned __int8 v4;

  KeyPath = swift_getKeyPath(&unk_100089998);
  v2 = swift_getKeyPath(&unk_1000899C0);
  static Published.subscript.getter(v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100024EE8()
{
  return sub_100024EFC((uint64_t)&unk_100089AB8, (uint64_t)&unk_100089AE0);
}

uint64_t sub_100024EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

char *sub_100024F64()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  void *v49;
  objc_class *v50;
  char *v51;
  uint64_t v52;
  void *v53;
  id v54;
  id v55;
  NSObject *v56;
  char *v57;
  os_log_type_t v58;
  uint8_t *v59;
  _QWORD *v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  objc_super v87;
  uint64_t v88;
  uint64_t v89;

  v1 = sub_100006058((uint64_t *)&unk_1000B7BA0);
  v85 = *(_QWORD *)(v1 - 8);
  v86 = v1;
  __chkstk_darwin(v1);
  v84 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006058(&qword_1000B83C0);
  v82 = *(_QWORD *)(v3 - 8);
  v83 = v3;
  __chkstk_darwin(v3);
  v81 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006058(&qword_1000B83C8);
  v79 = *(_QWORD *)(v5 - 8);
  v80 = v5;
  __chkstk_darwin(v5);
  v78 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006058((uint64_t *)&unk_1000B83D0);
  v76 = *(_QWORD *)(v7 - 8);
  v77 = v7;
  __chkstk_darwin(v7);
  v75 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v74);
  v73 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v72 = (char *)&v65 - v11;
  v12 = sub_100006058(&qword_1000B74B8);
  v70 = *(_QWORD *)(v12 - 8);
  v71 = v12;
  __chkstk_darwin(v12);
  v69 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v68);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v65 - v17;
  v67 = sub_100006058(&qword_1000B83E0);
  v66 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100006058(&qword_1000B83E8);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = OBJC_IVAR____TtC7Climate18ClimateCoordinator_carManager;
  v26 = objc_allocWithZone((Class)CAFCarManager);
  v27 = v0;
  *(_QWORD *)&v0[v25] = objc_msgSend(v26, "init");
  v28 = OBJC_IVAR____TtC7Climate18ClimateCoordinator_assetManager;
  v29 = type metadata accessor for CAUAssetLibraryManager(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  *(_QWORD *)&v27[v28] = CAUAssetLibraryManager.init()();
  v30 = OBJC_IVAR____TtC7Climate18ClimateCoordinator_sessionStatus;
  *(_QWORD *)&v27[v30] = objc_msgSend(objc_allocWithZone((Class)CARSessionStatus), "initWithOptions:", 1);
  *(_QWORD *)&v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator_requestContentManager] = 0;
  v31 = &v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator__appActive];
  LOBYTE(v88) = 0;
  Published.init(initialValue:)(&v88, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v31, v24, v21);
  v32 = &v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator__currentCar];
  v88 = 0;
  v33 = sub_100006058(&qword_1000B80A8);
  Published.init(initialValue:)(&v88, v33);
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v32, v20, v67);
  v34 = &v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator__climateSystem];
  v35 = type metadata accessor for ClimateSystemManager(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v18, 1, 1, v35);
  sub_10000AA50((uint64_t)v18, (uint64_t)v15, (uint64_t *)&unk_1000BA180);
  v36 = v69;
  Published.init(initialValue:)(v15, v68);
  sub_100008B88((uint64_t)v18, (uint64_t *)&unk_1000BA180);
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v34, v36, v71);
  v37 = &v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator__activeZone];
  v38 = type metadata accessor for ClimateZone(0);
  v39 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v72, 1, 1, v38);
  v40 = v73;
  sub_10000AA50(v39, v73, (uint64_t *)&unk_1000B7C40);
  v41 = v75;
  Published.init(initialValue:)(v40, v74);
  sub_100008B88(v39, (uint64_t *)&unk_1000B7C40);
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v37, v41, v77);
  v42 = &v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator__layoutSide];
  v88 = 2;
  type metadata accessor for UIRectEdge(0);
  v43 = v78;
  Published.init(initialValue:)(&v88, v44);
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v42, v43, v80);
  v45 = &v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator__layoutMode];
  LOBYTE(v88) = 0;
  v46 = v81;
  Published.init(initialValue:)(&v88, &type metadata for ClimateLayoutMode);
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v45, v46, v83);
  v47 = &v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator__statusBarSteppersState];
  v88 = 3;
  v48 = v84;
  Published.init(initialValue:)(&v88, &type metadata for ClimateCoordinator.StatusBarSteppersState);
  (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v47, v48, v86);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v49 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v49 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator_cancellables] = v49;
  v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar] = 0;
  *(_QWORD *)&v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v27[OBJC_IVAR____TtC7Climate18ClimateCoordinator_signpostManager] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimateSignpostManager()), "init");

  v50 = (objc_class *)type metadata accessor for ClimateCoordinator(0);
  v87.receiver = v27;
  v87.super_class = v50;
  v51 = (char *)objc_msgSendSuper2(&v87, "init");
  sub_100025754();
  objc_msgSend(*(id *)&v51[OBJC_IVAR____TtC7Climate18ClimateCoordinator_sessionStatus], "addSessionObserver:", v51);
  v52 = OBJC_IVAR____TtC7Climate18ClimateCoordinator_carManager;
  v53 = *(void **)&v51[OBJC_IVAR____TtC7Climate18ClimateCoordinator_carManager];
  objc_msgSend(v53, "registerObserver:", v51);
  v54 = v53;
  v55 = objc_msgSend(v54, "currentCar");
  objc_msgSend(v51, "carManager:didUpdateCurrentCar:", v54, v55);

  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v56 = qword_1000BC938;
  v57 = v51;
  v58 = static os_log_type_t.default.getter(v57);
  if (os_log_type_enabled(v56, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc(12, -1);
    v60 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v59 = 138412290;
    v61 = *(void **)&v51[v52];
    v88 = (uint64_t)v61;
    v62 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89, v59 + 4, v59 + 12);
    *v60 = v61;

    _os_log_impl((void *)&_mh_execute_header, v56, v58, "climate coordinator started carManager=%@", v59, 0xCu);
    v63 = sub_100006058((uint64_t *)&unk_1000B8370);
    swift_arrayDestroy(v60, 1, v63);
    swift_slowDealloc(v60, -1, -1);
    swift_slowDealloc(v59, -1, -1);
  }
  else
  {

  }
  return v57;
}

void sub_100025754()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Climate18ClimateCoordinator_sessionStatus], "currentSession");
  if (v2)
  {
    v3 = v2;
    if (qword_1000B6FE8 != -1)
      v2 = (id)swift_once(&qword_1000B6FE8, sub_10005CB60);
    v4 = qword_1000BC938;
    v5 = static os_log_type_t.default.getter(v2);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v25 = v7;
      *(_DWORD *)v6 = 136315138;
      v24 = sub_10005DB58(0xD000000000000016, 0x800000010008D010, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v6 + 4, v6 + 12);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s CARSession available", v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);
    }
    v8 = type metadata accessor for CAFUIRequestContentManager(0);
    swift_allocObject(v8, 25, 7);
    v9 = v3;
    v10 = CAFUIRequestContentManager.init(session:)();
    v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate18ClimateCoordinator_requestContentManager];
    *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate18ClimateCoordinator_requestContentManager] = v10;
    v12 = objc_msgSend(v9, "configuration", swift_release(v11).n128_f64[0]);
    v13 = objc_msgSend(v12, "rightHandDrive");

    if (v13)
      v14 = 8;
    else
      v14 = 2;
    KeyPath = swift_getKeyPath(&unk_1000899E0);
    v16 = swift_getKeyPath(&unk_100089A08);
    v25 = v14;
    static Published.subscript.setter(&v25, v1, KeyPath, v16);

  }
  else
  {
    if (qword_1000B6FE8 != -1)
      v2 = (id)swift_once(&qword_1000B6FE8, sub_10005CB60);
    v17 = qword_1000BC938;
    v18 = static os_log_type_t.default.getter(v2);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v25 = v20;
      *(_DWORD *)v19 = 136315138;
      v24 = sub_10005DB58(0xD000000000000016, 0x800000010008D010, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v19 + 4, v19 + 12);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s No CARSession available", v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }
    v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate18ClimateCoordinator_requestContentManager];
    *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate18ClimateCoordinator_requestContentManager] = 0;
    swift_release(v21);
    v22 = swift_getKeyPath(&unk_1000899E0);
    v23 = swift_getKeyPath(&unk_100089A08);
    v25 = 2;
    static Published.subscript.setter(&v25, v1, v22, v23);
  }
}

id sub_100025B20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateCoordinator(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100025D10()
{
  return type metadata accessor for ClimateCoordinator(0);
}

uint64_t type metadata accessor for ClimateCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B8088;
  if (!qword_1000B8088)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateCoordinator);
  return result;
}

void sub_100025D54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[15];

  v16[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v16[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v16[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v16[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v16[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v16[5] = "\b";
  sub_100025FAC(319, &qword_1000B8098, (uint64_t)&type metadata for Bool);
  if (v3 <= 0x3F)
  {
    v16[6] = *(_QWORD *)(v2 - 8) + 64;
    sub_100025F0C(319, &qword_1000B80A0, &qword_1000B80A8);
    if (v5 <= 0x3F)
    {
      v16[7] = *(_QWORD *)(v4 - 8) + 64;
      sub_100025F0C(319, (unint64_t *)&unk_1000B80B0, (uint64_t *)&unk_1000BA180);
      if (v7 <= 0x3F)
      {
        v16[8] = *(_QWORD *)(v6 - 8) + 64;
        sub_100025F0C(319, (unint64_t *)&unk_1000B80C0, (uint64_t *)&unk_1000B7C40);
        if (v9 <= 0x3F)
        {
          v16[9] = *(_QWORD *)(v8 - 8) + 64;
          sub_100025F58(319);
          if (v11 <= 0x3F)
          {
            v16[10] = *(_QWORD *)(v10 - 8) + 64;
            sub_100025FAC(319, &qword_1000B80D8, (uint64_t)&type metadata for ClimateLayoutMode);
            if (v13 <= 0x3F)
            {
              v16[11] = *(_QWORD *)(v12 - 8) + 64;
              sub_100025FAC(319, &qword_1000B80E0, (uint64_t)&type metadata for ClimateCoordinator.StatusBarSteppersState);
              if (v15 <= 0x3F)
              {
                v16[12] = *(_QWORD *)(v14 - 8) + 64;
                v16[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
                v16[14] = &unk_1000896F0;
                swift_updateClassMetadata2(a1, 256, 15, v16, a1 + 80);
              }
            }
          }
        }
      }
    }
  }
}

void sub_100025F0C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_10000A948(a3);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_100025F58(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000B80D0)
  {
    type metadata accessor for UIRectEdge(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000B80D0);
  }
}

void sub_100025FAC(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = type metadata accessor for Published(0, a3);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_100025FF0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for ClimateCoordinator(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

char *sub_10002602C(_BYTE *a1, void *a2)
{
  char *v2;
  char *v3;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  uint64_t *v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  NSObject *v18;
  char *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[3];
  char v38[56];

  v3 = v2;
  v6 = &a1[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
  v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
  v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 8];
  v9 = a1[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 16];
  v10 = sub_100006058(&qword_1000B82E8);
  inited = swift_initStackObject(v10, v38);
  *(_OWORD *)(inited + 16) = xmmword_100088D00;
  v12 = *(_QWORD *)&a1[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_persistentIdentifier + 8];
  *(_QWORD *)(inited + 32) = *(_QWORD *)&a1[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_persistentIdentifier];
  *(_QWORD *)(inited + 40) = v12;
  *(_QWORD *)(inited + 48) = a1;
  sub_10002C68C(v7, v8, v9);
  swift_bridgeObjectRetain(v12);
  v13 = a1;
  v14 = sub_100023E48(inited);
  v15 = (uint64_t *)&v3[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes];
  swift_beginAccess(&v3[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes], v37, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v15);
  v36 = *v15;
  *v15 = 0x8000000000000000;
  sub_10002AD74(v14, v7, v8, v9, isUniquelyReferenced_nonNull_native);
  v17 = *v15;
  *v15 = v36;
  swift_bridgeObjectRelease(v17);
  sub_10002C6A0(v7, v8, v9);
  swift_endAccess(v37);
  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v18 = qword_1000BC938;
  v19 = v3;
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v18, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = swift_slowAlloc(32, -1);
    v37[0] = v35;
    *(_DWORD *)v21 = 136315138;
    v22 = *v15;
    swift_bridgeObjectRetain(v22);
    v23 = a2;
    v24 = sub_100006058(&qword_1000B82F0);
    v25 = sub_10002C6B4();
    v26 = Dictionary.description.getter(v22, &type metadata for ClimateSceneDelegateType, v24, v25);
    v28 = v27;
    swift_bridgeObjectRelease(v22);
    v29 = v26;
    a2 = v23;
    v36 = sub_10005DB58(v29, v28, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v21 + 4, v21 + 12);

    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v18, v20, "Attach active scenes = %s", v21, 0xCu);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {

  }
  v30 = *(_QWORD *)v6;
  v31 = *((_QWORD *)v6 + 1);
  v32 = v6[16];
  sub_10002C68C(*(_QWORD *)v6, v31, v32);
  v33 = sub_100026344(v30, v31, v32, a2);
  sub_10002C6A0(v30, v31, v32);
  return v33;
}

char *sub_100026344(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  void *v4;
  void *v5;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  const char *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  objc_class *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  id v66;
  float v67;
  float v68;
  id v69;
  id v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  id v95;
  char *v96;
  id v97;
  uint64_t v98;
  char v99;
  objc_super v100;

  v5 = v4;
  v97 = a4;
  v98 = a1;
  v8 = sub_100006058((uint64_t *)&unk_1000BA180);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CAUResource(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006058((uint64_t *)&unk_1000B8300);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for CAUPhysicalControlBarsLayout(0, v17);
  *(_QWORD *)&v23 = __chkstk_darwin(v20).n128_u64[0];
  v25 = (char *)&v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    if (qword_1000B6FE8 != -1)
      v21 = swift_once(&qword_1000B6FE8, sub_10005CB60);
    v47 = qword_1000BC938;
    v48 = static os_log_type_t.default.getter(v21);
    if (!os_log_type_enabled(v47, v48))
      return 0;
    v49 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v49 = 0;
    v50 = "Unknown scene type";
    goto LABEL_54;
  }
  if (a3 == 2)
  {
    if (!(v98 | a2))
    {
      v57 = (uint64_t)v97;
      if (v97)
      {
        v58 = objc_msgSend(v97, "_FBSScene", v23);
        v59 = objc_msgSend(v58, "settings");

        if (v59)
        {
          v60 = objc_opt_self(CRSUIClimateOverlaySceneSettings);
          v61 = swift_dynamicCastObjCClass(v59, v60);
          if (v61)
          {
            v62 = (void *)v61;
            if (qword_1000B6FE8 != -1)
              v61 = swift_once(&qword_1000B6FE8, sub_10005CB60);
            v63 = qword_1000BC938;
            v64 = static os_log_type_t.default.getter(v61);
            if (os_log_type_enabled(v63, v64))
            {
              v65 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v65 = 0;
              _os_log_impl((void *)&_mh_execute_header, v63, v64, "Showing quick controls.", v65, 2u);
              swift_slowDealloc(v65, -1, -1);
            }
            v66 = objc_msgSend(v62, "containerHeight", v97);
            objc_msgSend(v66, "floatValue");
            v68 = v67;

            v69 = objc_allocWithZone((Class)type metadata accessor for ClimateOverlayViewController());
            v70 = v97;
            v71 = v97;
            v46 = sub_100013D28(v70, v68);

            return v46;
          }

        }
      }
      if (qword_1000B6FE8 != -1)
        v57 = swift_once(&qword_1000B6FE8, sub_10005CB60);
      v47 = qword_1000BC938;
      v48 = static os_log_type_t.default.getter(v57);
      if (!os_log_type_enabled(v47, v48))
        return 0;
      v49 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v49 = 0;
      v50 = "No scene settings for quick controls.";
      goto LABEL_54;
    }
    if (!(v98 ^ 1 | a2))
    {
      v98 = v21;
      v26 = (uint64_t)v97;
      if (v97)
      {
        v27 = v22;
        v28 = objc_msgSend(v97, "_FBSScene", v23);
        v29 = objc_msgSend(v28, "settings");

        if (v29)
        {
          v30 = objc_opt_self(CRSUIClimateOverlaySceneSettings);
          v31 = (void *)swift_dynamicCastObjCClass(v29, v30);
          if (v31)
          {
            v32 = objc_msgSend(v31, "hasPhysicalControlBars");
            if ((_DWORD)v32)
            {
              v33 = dispatch thunk of CAUAssetLibraryManager.assetLibrary.getter();
              if (v33)
              {
                v34 = (void *)v33;
                (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for CAUResource.physicalControlBarsLayout(_:), v12);
                v35 = sub_10002C708();
                v36 = v16;
                v37 = v34;
                dispatch thunk of CAUAssetLibrary.asset<A>(for:)(v15, v36, v35);
                (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
                v85 = v98;
                v86 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v19, 1, v98);
                if (v86 != 1)
                {
                  v90 = (*(uint64_t (**)(char *, char *, uint64_t))(v27 + 32))(v25, v19, v85);
                  v91 = static os_log_type_t.debug.getter(v90);
                  v92 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
                  v93 = (void *)static OS_os_log.default.getter(v92);
                  os_log(_:dso:log:_:_:)(v91, &_mh_execute_header, v93, "Climate Always On overlay visible", 33, 2, _swiftEmptyArrayStorage);

                  v94 = CAUPhysicalControlBarsLayout.climateLayouts.getter();
                  v95 = objc_allocWithZone((Class)type metadata accessor for ClimatePhysicalControlBarsViewController());
                  sub_100008CA8(v94);
                  v46 = v96;

                  (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v85);
                  return v46;
                }
                v87 = sub_100008B88((uint64_t)v19, (uint64_t *)&unk_1000B8300);
                v88 = static os_log_type_t.debug.getter(v87);
                v89 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
                v84 = (void *)static OS_os_log.default.getter(v89);
                os_log(_:dso:log:_:_:)(v88, &_mh_execute_header, v84, "Unable to retrieve Always On items", 34, 2, _swiftEmptyArrayStorage);

              }
              else
              {
                v82 = ((uint64_t (*)(void))static os_log_type_t.debug.getter)();
                v83 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
                v84 = (void *)static OS_os_log.default.getter(v83);
                os_log(_:dso:log:_:_:)(v82, &_mh_execute_header, v84, "Unable to retrieve asset library", 32, 2, _swiftEmptyArrayStorage);

              }
            }
            else
            {
              if (qword_1000B6FE8 != -1)
                v32 = (id)swift_once(&qword_1000B6FE8, sub_10005CB60);
              v79 = qword_1000BC938;
              v80 = static os_log_type_t.default.getter(v32);
              if (os_log_type_enabled(v79, v80))
              {
                v81 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v81 = 0;
                _os_log_impl((void *)&_mh_execute_header, v79, v80, "No physical controls.", v81, 2u);
                swift_slowDealloc(v81, -1, -1);
              }

            }
            return 0;
          }

        }
      }
      if (qword_1000B6FE8 != -1)
        v26 = swift_once(&qword_1000B6FE8, sub_10005CB60);
      v47 = qword_1000BC938;
      v48 = static os_log_type_t.default.getter(v26);
      if (!os_log_type_enabled(v47, v48))
        return 0;
      v49 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v49 = 0;
      v50 = "No scene settings for physical controls.";
LABEL_54:
      _os_log_impl((void *)&_mh_execute_header, v47, v48, v50, v49, 2u);
      swift_slowDealloc(v49, -1, -1);
      return 0;
    }
  }
  KeyPath = swift_getKeyPath(&unk_100089950);
  v39 = swift_getKeyPath(&unk_100089978);
  static Published.subscript.getter(v5, KeyPath, v39);
  swift_release(KeyPath);
  swift_release(v39);
  v40 = type metadata accessor for ClimateSystemManager(0);
  LODWORD(KeyPath) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v11, 1, v40);
  v41 = sub_100008B88((uint64_t)v11, (uint64_t *)&unk_1000BA180);
  if ((_DWORD)KeyPath == 1)
  {
    if (qword_1000B6FE8 != -1)
      v41 = swift_once(&qword_1000B6FE8, sub_10005CB60);
    v42 = qword_1000BC938;
    v43 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Showing loading view controller.", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }
    return (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimateLoadingViewController()), "init");
  }
  if (a3 == 1)
  {
    if (qword_1000B6FE8 != -1)
      v41 = swift_once(&qword_1000B6FE8, sub_10005CB60);
    v72 = qword_1000BC938;
    v73 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v72, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v74 = 0;
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "Showing app view controller.", v74, 2u);
      swift_slowDealloc(v74, -1, -1);
    }
    v75 = swift_getKeyPath(&unk_100089998);
    v76 = swift_getKeyPath(&unk_1000899C0);
    v99 = v98;
    static Published.subscript.setter(&v99, v5, v75, v76);
    v77 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimateAppViewController(0)), "init");
    v46 = (char *)objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v77);

    objc_msgSend(v46, "setNavigationBarHidden:", 1);
  }
  else
  {
    v46 = 0;
    if (a3 == 2 && v98 == 2 && !a2)
    {
      if (qword_1000B6FE8 != -1)
        v41 = swift_once(&qword_1000B6FE8, sub_10005CB60);
      v51 = qword_1000BC938;
      v52 = static os_log_type_t.default.getter(v41);
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "Showing phone view controller", v53, 2u);
        swift_slowDealloc(v53, -1, -1);
      }
      v54 = (objc_class *)type metadata accessor for ClimateRoleViewController();
      v55 = (char *)objc_allocWithZone(v54);
      v56 = &v55[OBJC_IVAR____TtC7Climate25ClimateRoleViewController_role];
      *(_QWORD *)v56 = 0x656E6F6850;
      *((_QWORD *)v56 + 1) = 0xE500000000000000;
      v100.receiver = v55;
      v100.super_class = v54;
      return (char *)objc_msgSendSuper2(&v100, "initWithNibName:bundle:", 0, 0);
    }
  }
  return v46;
}

id sub_100026E34(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void (*v8)(_QWORD *);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  char *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  objc_class *v26;
  char *v27;
  char *v28;
  uint64_t v30;
  objc_super v31;
  uint64_t v32[4];
  _BYTE v33[32];

  v2 = v1;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 8);
  v6 = *(_BYTE *)(a1 + OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 16);
  sub_10002C68C(v4, v5, v6);
  v7 = sub_1000242CC((uint64_t)v33);
  v8 = sub_100027154(v32, v4, v5, v6);
  if (*v9)
  {
    v10 = a1 + OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_persistentIdentifier;
    v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_persistentIdentifier);
    v12 = *(_QWORD *)(v10 + 8);
    swift_bridgeObjectRetain(v12);
    v13 = (void *)sub_100029264(v11, v12);
    swift_bridgeObjectRelease(v12);
    ((void (*)(uint64_t *, _QWORD))v8)(v32, 0);
    sub_10002C6A0(v4, v5, v6);
    ((void (*)(_BYTE *, _QWORD))v7)(v33, 0);

  }
  else
  {
    ((void (*)(uint64_t *, _QWORD))v8)(v32, 0);
    sub_10002C6A0(v4, v5, v6);
    ((void (*)(_BYTE *, _QWORD))v7)(v33, 0);
  }
  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v14 = qword_1000BC938;
  v15 = v2;
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v14, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    *(_DWORD *)v17 = 136315138;
    v32[0] = v18;
    v19 = &v15[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes];
    swift_beginAccess(&v15[OBJC_IVAR____TtC7Climate18ClimateCoordinator_activeScenes], v33, 0, 0);
    v20 = *(_QWORD *)v19;
    swift_bridgeObjectRetain(v20);
    v21 = sub_100006058(&qword_1000B82F0);
    v22 = sub_10002C6B4();
    v23 = Dictionary.description.getter(v20, &type metadata for ClimateSceneDelegateType, v21, v22);
    v25 = v24;
    swift_bridgeObjectRelease(v20);
    v30 = sub_10005DB58(v23, v25, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v17 + 4, v17 + 12);

    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v14, v16, "Detach active scenes = %s", v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {

  }
  v26 = (objc_class *)type metadata accessor for ClimateRoleViewController();
  v27 = (char *)objc_allocWithZone(v26);
  v28 = &v27[OBJC_IVAR____TtC7Climate25ClimateRoleViewController_role];
  *(_QWORD *)v28 = 0x74657320746F6ELL;
  *((_QWORD *)v28 + 1) = 0xE700000000000000;
  v31.receiver = v27;
  v31.super_class = v26;
  return objc_msgSendSuper2(&v31, "initWithNibName:bundle:", 0, 0);
}

void (*sub_100027154(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(_QWORD *a1)
{
  _BYTE *v8;

  v8 = malloc(0x40uLL);
  *a1 = v8;
  v8[56] = a4;
  *((_QWORD *)v8 + 4) = a2;
  *((_QWORD *)v8 + 5) = a3;
  sub_10002C68C(a2, a3, a4);
  *((_QWORD *)v8 + 6) = sub_10002BCA0(v8, a2, a3, a4);
  return sub_1000271D4;
}

void sub_1000271D4(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  v4 = *(_BYTE *)(*a1 + 56);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  sub_10002C6A0(v3, v2, v4);
  free(v1);
}

void sub_100027224(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  uint64_t v37;
  NSObject *v38;
  char *v39;
  os_log_type_t v40;
  uint8_t *v41;
  _QWORD *v42;
  void *v43;
  id v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void *v57;
  uint64_t v58;

  v4 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v54 - v8;
  v10 = type metadata accessor for ClimateSystemManager(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)*a1;
  KeyPath = swift_getKeyPath(&unk_100089950);
  v16 = swift_getKeyPath(&unk_100089978);
  static Published.subscript.getter(a2, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1)
  {
    sub_100008B88((uint64_t)v9, (uint64_t *)&unk_1000BA180);
LABEL_10:
    v32 = swift_getKeyPath(&unk_100089950);
    v33 = swift_getKeyPath(&unk_100089978);
    static Published.subscript.getter(a2, v32, v33);
    swift_release(v32);
    swift_release(v33);
    LODWORD(v32) = v17(v6, 1, v10);
    sub_100008B88((uint64_t)v6, (uint64_t *)&unk_1000BA180);
    if ((_DWORD)v32 != 1
      || (v34 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController,
          v35 = *(_QWORD *)&v14[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController],
          v36 = (objc_class *)type metadata accessor for ClimateLoadingViewController(),
          (v37 = swift_dynamicCastClass(v35, v36)) != 0)
      || v14[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 16] >= 2u
      && *(_OWORD *)&v14[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type] < 2uLL)
    {
      if (qword_1000B6FE8 != -1)
        swift_once(&qword_1000B6FE8, sub_10005CB60);
      v38 = qword_1000BC938;
      v39 = v14;
      v40 = static os_log_type_t.default.getter(v39);
      if (os_log_type_enabled(v38, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc(12, -1);
        v42 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v41 = 138412290;
        v43 = *(void **)&v39[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController];
        v57 = v43;
        v44 = v43;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v41 + 4, v41 + 12);
        *v42 = v43;

        _os_log_impl((void *)&_mh_execute_header, v38, v40, "using existing view controller %@", v41, 0xCu);
        v45 = sub_100006058((uint64_t *)&unk_1000B8370);
        swift_arrayDestroy(v42, 1, v45);
        swift_slowDealloc(v42, -1, -1);
        swift_slowDealloc(v41, -1, -1);
      }
      else
      {

      }
    }
    else
    {
      if (qword_1000B6FE8 != -1)
        v37 = swift_once(&qword_1000B6FE8, sub_10005CB60);
      v46 = qword_1000BC938;
      v47 = static os_log_type_t.default.getter(v37);
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "climate system nil, showing loading view controller.", v48, 2u);
        swift_slowDealloc(v48, -1, -1);
      }
      v49 = objc_msgSend(objc_allocWithZone(v36), "init");
      v50 = *(void **)&v14[v34];
      *(_QWORD *)&v14[v34] = v49;
      v51 = v49;

      v52 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window;
      v53 = *(void **)&v14[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window];
      if (v53)
      {
        objc_msgSend(v53, "setRootViewController:", *(_QWORD *)&v14[v34]);
        v53 = *(void **)&v14[v52];
      }
      objc_msgSend(v53, "makeKeyAndVisible");

    }
    return;
  }
  sub_100018D10((uint64_t)v9, (uint64_t)v13, type metadata accessor for ClimateSystemManager);
  if ((sub_10002F240() & 1) == 0
    || (v18 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController,
        v19 = *(_QWORD *)&v14[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController],
        v20 = type metadata accessor for ClimateLoadingViewController(),
        !swift_dynamicCastClass(v19, v20)))
  {
    sub_10000AB60((uint64_t)v13, type metadata accessor for ClimateSystemManager);
    goto LABEL_10;
  }
  v55 = v18;
  v21 = &v14[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
  v56 = v14;
  v22 = *(_QWORD *)&v14[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
  v23 = *(_QWORD *)&v14[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 8];
  v24 = v14[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 16];
  sub_10002C68C(*(_QWORD *)v21, *((_QWORD *)v21 + 1), v21[16]);
  v25 = sub_100026344(v22, v23, v24, 0);
  sub_10002C6A0(v22, v23, v24);
  if (!v25)
  {
    sub_10000AB60((uint64_t)v13, type metadata accessor for ClimateSystemManager);
    v14 = v56;
    goto LABEL_10;
  }
  v27 = v55;
  v26 = v56;
  v28 = *(void **)&v56[v55];
  *(_QWORD *)&v56[v55] = v25;
  v29 = v25;

  v30 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window;
  v31 = *(void **)&v26[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window];
  if (v31)
  {
    objc_msgSend(v31, "setRootViewController:", *(_QWORD *)&v26[v27]);
    v31 = *(void **)&v26[v30];
  }
  objc_msgSend(v31, "makeKeyAndVisible");

  sub_10000AB60((uint64_t)v13, type metadata accessor for ClimateSystemManager);
}

void sub_1000277A0(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t KeyPath;
  uint64_t v33;
  __n128 v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t, __n128);
  uint64_t v36;
  uint64_t v37;
  double v38;
  id v39;
  char *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  void *v48;
  unint64_t v49;
  char *v50;
  NSObject *v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  void *v55;
  NSObject *v56;
  unint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  uint8_t *v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  NSObject *v64;
  unint64_t v65;
  char *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  unint64_t v75;
  uint64_t v76;
  os_log_type_t v77;
  uint8_t *v78;
  void *v79;
  NSObject *v80;
  unint64_t v81;
  uint64_t v82;
  os_log_type_t v83;
  uint8_t *v84;
  void *v85;
  uint64_t v86;
  NSObject *v87;
  id v88;
  unint64_t v89;
  id v90;
  id v91;
  id v92;
  os_log_type_t v93;
  uint64_t v94;
  _QWORD *v95;
  id v96;
  id v97;
  uint64_t v98;
  unint64_t v99;
  void *v100;
  NSObject *v101;
  uint64_t v102;
  os_log_type_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  void *v109;
  uint64_t v110;
  id v111;
  void *v112;
  unsigned __int8 v113;
  int v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  void *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  void *v144;
  id v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  unint64_t v161;
  id aBlock[5];
  uint64_t v163;
  uint64_t v164;
  _QWORD v165[2];

  v3 = v2;
  v160 = a1;
  v161 = a2;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v158 = *(_QWORD *)(v4 - 8);
  v159 = (void *)v4;
  v5 = __chkstk_darwin(v4);
  v157 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0, v5);
  v155 = *(_QWORD *)(v7 - 8);
  v156 = v7;
  __chkstk_darwin(v7);
  v154 = (char *)&v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v9);
  v150 = (uint64_t)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v151 = (uint64_t)&v145 - v12;
  __chkstk_darwin(v13);
  v148 = (uint64_t)&v145 - v14;
  v15 = type metadata accessor for ClimateZone(0);
  v152 = *(_QWORD *)(v15 - 8);
  v153 = v15;
  __chkstk_darwin(v15);
  v147 = (uint64_t)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ClimateSystemManager(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v145 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v149 = (uint64_t)&v145 - v22;
  v23 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v23);
  v25 = (char *)&v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v145 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v145 - v30;
  KeyPath = swift_getKeyPath(&unk_100089950);
  v33 = swift_getKeyPath(&unk_100089978);
  static Published.subscript.getter(v2, KeyPath, v33);
  swift_release(KeyPath);
  v34 = swift_release(v33);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
  LODWORD(v33) = v35(v31, 1, v17, v34);
  sub_100008B88((uint64_t)v31, (uint64_t *)&unk_1000BA180);
  if ((_DWORD)v33 != 1)
  {
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v56 = qword_1000BC938;
    v57 = v161;
    v58 = swift_bridgeObjectRetain_n(v161, 2);
    v59 = static os_log_type_t.default.getter(v58);
    if (os_log_type_enabled(v56, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc(12, -1);
      v61 = (void *)swift_slowAlloc(32, -1);
      aBlock[0] = v61;
      *(_DWORD *)v60 = 136315138;
      swift_bridgeObjectRetain(v57);
      v164 = sub_10005DB58(v160, v57, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v60 + 4, v60 + 12);
      swift_bridgeObjectRelease_n(v57, 3);
      _os_log_impl((void *)&_mh_execute_header, v56, v59, "ClimateSystem Ready? (%s) Early exit, already have climate system.", v60, 0xCu);
      swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      v62 = (uint64_t)v60;
LABEL_38:
      swift_slowDealloc(v62, -1, -1);
      return;
    }
    v63 = v57;
LABEL_33:
    swift_bridgeObjectRelease_n(v63, 2);
    return;
  }
  v36 = swift_getKeyPath(&unk_100089A28);
  v37 = swift_getKeyPath(&unk_100089A50);
  static Published.subscript.getter(v3, v36, v37);
  swift_release(v36);
  *(_QWORD *)&v38 = swift_release(v37).n128_u64[0];
  v39 = aBlock[0];
  v40 = v3;
  if (!aBlock[0])
  {
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v64 = qword_1000BC938;
    v65 = v161;
    swift_bridgeObjectRetain_n(v161, 2);
    v66 = v3;
    v67 = static os_log_type_t.default.getter(v66);
    if (os_log_type_enabled(v64, v67))
    {
      v68 = swift_slowAlloc(22, -1);
      v69 = (uint64_t *)swift_slowAlloc(8, -1);
      v70 = (void *)swift_slowAlloc(32, -1);
      aBlock[0] = v70;
      *(_DWORD *)v68 = 136315394;
      swift_bridgeObjectRetain(v65);
      v164 = sub_10005DB58(v160, v65, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v68 + 4, v68 + 12);
      swift_bridgeObjectRelease_n(v65, 3);
      *(_WORD *)(v68 + 12) = 2112;
      v71 = swift_getKeyPath(&unk_100089A28);
      v72 = swift_getKeyPath(&unk_100089A50);
      static Published.subscript.getter(v66, v71, v72);
      swift_release(v71);
      swift_release(v72);
      v73 = v164;
      if (!v164)
        v164 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v68 + 14, v68 + 22);
      *v69 = v73;

      _os_log_impl((void *)&_mh_execute_header, v64, v67, "ClimateSystem Ready? (%s) currentCar=%@", (uint8_t *)v68, 0x16u);
      v86 = sub_100006058((uint64_t *)&unk_1000B8370);
      swift_arrayDestroy(v69, 1, v86);
      swift_slowDealloc(v69, -1, -1);
      swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v70, -1, -1);
      v62 = v68;
      goto LABEL_38;
    }

    v63 = v65;
    goto LABEL_33;
  }
  v41 = objc_msgSend(aBlock[0], "climate", v38);
  if (v41)
  {
    v42 = v41;
    objc_msgSend(v41, "registerObserver:", v3);
    if (objc_msgSend(v42, "receivedAllValues"))
    {
      objc_msgSend(v42, "unregisterObserver:", v3);
      v43 = objc_msgSend(v39, "positionManager");
      if (v43)
      {
        v44 = v43;
        if (objc_msgSend(v43, "accessoryIsTracked:", v42))
        {
          v146 = v44;
          v145 = v39;
          sub_10002FB68(v145, (uint64_t)v28);
          sub_100024C6C((uint64_t)v28);
          v45 = swift_getKeyPath(&unk_100089950);
          v46 = swift_getKeyPath(&unk_100089978);
          static Published.subscript.getter(v3, v45, v46);
          swift_release(v45);
          v47 = swift_release(v46);
          if (v35(v25, 1, v17, v47) == 1)
          {
            v48 = v42;
            sub_100008B88((uint64_t)v25, (uint64_t *)&unk_1000BA180);
            v49 = v161;
            if (qword_1000B6FE8 != -1)
              swift_once(&qword_1000B6FE8, sub_10005CB60);
            v50 = v3;
            v51 = qword_1000BC938;
            v52 = swift_bridgeObjectRetain_n(v49, 2);
            v53 = static os_log_type_t.default.getter(v52);
            if (os_log_type_enabled(v51, v53))
            {
              v54 = (uint8_t *)swift_slowAlloc(12, -1);
              v55 = (void *)swift_slowAlloc(32, -1);
              aBlock[0] = v55;
              *(_DWORD *)v54 = 136315138;
              swift_bridgeObjectRetain(v49);
              v164 = sub_10005DB58(v160, v49, (uint64_t *)aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v54 + 4, v54 + 12);
              swift_bridgeObjectRelease_n(v49, 3);
              _os_log_impl((void *)&_mh_execute_header, v51, v53, "ClimateSystem Ready? (%s) No climateSystem available.", v54, 0xCu);
              swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v55, -1, -1);
              swift_slowDealloc(v54, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n(v49, 2);
            }
            v117 = v151;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v152 + 56))(v151, 1, 1, v153);
            v118 = swift_getKeyPath(&unk_100089A70);
            v119 = swift_getKeyPath(&unk_100089A98);
            v120 = v150;
            sub_10000AA50(v117, v150, (uint64_t *)&unk_1000B7C40);
            v121 = v50;
            static Published.subscript.setter(v120, v50, v118, v119);
            sub_100008B88(v117, (uint64_t *)&unk_1000B7C40);
            v42 = v48;
          }
          else
          {
            v98 = v149;
            sub_100018D10((uint64_t)v25, v149, type metadata accessor for ClimateSystemManager);
            v99 = v161;
            if (qword_1000B6FE8 != -1)
              swift_once(&qword_1000B6FE8, sub_10005CB60);
            v100 = &unk_1000BC000;
            v101 = qword_1000BC938;
            sub_10000AAD8(v98, (uint64_t)v20, type metadata accessor for ClimateSystemManager);
            v102 = swift_bridgeObjectRetain_n(v99, 2);
            v103 = static os_log_type_t.default.getter(v102);
            if (os_log_type_enabled(v101, v103))
            {
              v104 = swift_slowAlloc(22, -1);
              v105 = (void *)swift_slowAlloc(64, -1);
              aBlock[0] = v105;
              *(_DWORD *)v104 = 136315394;
              swift_bridgeObjectRetain(v99);
              v164 = sub_10005DB58(v160, v99, (uint64_t *)aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v104 + 4, v104 + 12);
              swift_bridgeObjectRelease_n(v99, 3);
              *(_WORD *)(v104 + 12) = 2080;
              v106 = sub_1000313C0();
              v108 = v107;
              v164 = sub_10005DB58(v106, v107, (uint64_t *)aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v104 + 14, v104 + 22);
              swift_bridgeObjectRelease(v108);
              sub_10000AB60((uint64_t)v20, type metadata accessor for ClimateSystemManager);
              _os_log_impl((void *)&_mh_execute_header, v101, v103, "ClimateSystem Ready? (%s) Yes! climateSystem=%s", (uint8_t *)v104, 0x16u);
              swift_arrayDestroy(v105, 2, (char *)&type metadata for Any + 8);
              v109 = v105;
              v100 = &unk_1000BC000;
              swift_slowDealloc(v109, -1, -1);
              v110 = v104;
              v98 = v149;
              swift_slowDealloc(v110, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n(v99, 2);
              sub_10000AB60((uint64_t)v20, type metadata accessor for ClimateSystemManager);
            }
            v122 = v152;
            *(_BYTE *)(*(_QWORD *)&v40[OBJC_IVAR____TtC7Climate18ClimateCoordinator_signpostManager]
                     + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_climateSystemManagerCreated) = 1;
            sub_10007012C();
            v123 = v148;
            sub_1000304DC(v148);
            v124 = v153;
            v121 = v40;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v123, 1, v153) == 1)
            {
              v125 = sub_100008B88(v123, (uint64_t *)&unk_1000B7C40);
              v126 = *((_QWORD *)v100 + 295);
              v127 = static os_log_type_t.default.getter(v125);
              if (os_log_type_enabled(v126, v127))
              {
                v128 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v128 = 0;
                _os_log_impl((void *)&_mh_execute_header, v126, v127, "No front zone.", v128, 2u);
                swift_slowDealloc(v128, -1, -1);
              }
            }
            else
            {
              v129 = v147;
              sub_100018D10(v123, v147, type metadata accessor for ClimateZone);
              v130 = v151;
              sub_10000AAD8(v129, v151, type metadata accessor for ClimateZone);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v122 + 56))(v130, 0, 1, v124);
              v131 = swift_getKeyPath(&unk_100089A70);
              v132 = swift_getKeyPath(&unk_100089A98);
              v133 = v150;
              sub_10000AA50(v130, v150, (uint64_t *)&unk_1000B7C40);
              static Published.subscript.setter(v133, v40, v131, v132);
              sub_100008B88(v130, (uint64_t *)&unk_1000B7C40);
              sub_10000AB60(v129, type metadata accessor for ClimateZone);
            }
            sub_10000AB60(v98, type metadata accessor for ClimateSystemManager);
          }
          sub_100006B04(0, (unint64_t *)&qword_1000BA190, OS_dispatch_queue_ptr);
          v134 = (void *)static OS_dispatch_queue.main.getter();
          v135 = swift_allocObject(&unk_10009E9C0, 24, 7);
          swift_unknownObjectWeakInit(v135 + 16, v121);
          aBlock[4] = sub_10002C7C0;
          v163 = v135;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = (id)1107296256;
          aBlock[2] = sub_100070390;
          aBlock[3] = &unk_10009E9D8;
          v136 = _Block_copy(aBlock);
          swift_release(v163);
          v137 = v154;
          static DispatchQoS.unspecified.getter(v138);
          aBlock[0] = _swiftEmptyArrayStorage;
          v139 = sub_1000052AC((unint64_t *)&unk_1000B8380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v140 = sub_100006058((uint64_t *)&unk_1000BA1A0);
          v141 = sub_10000AA10(&qword_1000B8390, (uint64_t *)&unk_1000BA1A0, (uint64_t)&protocol conformance descriptor for [A]);
          v142 = v157;
          v143 = v140;
          v144 = v159;
          dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v143, v141, v159, v139);
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v137, v142, v136);
          _Block_release(v136);

          (*(void (**)(char *, void *))(v158 + 8))(v142, v144);
          (*(void (**)(char *, uint64_t))(v155 + 8))(v137, v156);
          return;
        }

      }
      if (qword_1000B6FE8 != -1)
        swift_once(&qword_1000B6FE8, sub_10005CB60);
      v87 = qword_1000BC938;
      v88 = v39;
      v89 = v161;
      swift_bridgeObjectRetain_n(v161, 2);
      v90 = v42;
      v91 = v88;
      v92 = v90;
      v93 = static os_log_type_t.default.getter(v92);
      if (!os_log_type_enabled(v87, v93))
      {
        swift_bridgeObjectRelease_n(v89, 2);

        return;
      }
      v94 = swift_slowAlloc(28, -1);
      v95 = (_QWORD *)swift_slowAlloc(8, -1);
      v159 = (void *)swift_slowAlloc(32, -1);
      aBlock[0] = v159;
      *(_DWORD *)v94 = 136315650;
      swift_bridgeObjectRetain(v89);
      v164 = sub_10005DB58(v160, v89, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v94 + 4, v94 + 12);
      swift_bridgeObjectRelease_n(v89, 3);
      *(_WORD *)(v94 + 12) = 2112;
      v96 = objc_msgSend(v91, "positionManager");
      v97 = v96;
      if (v96)
        v164 = (uint64_t)v96;
      else
        v164 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v94 + 14, v94 + 22);
      *v95 = v97;

      *(_WORD *)(v94 + 22) = 1024;
      v111 = objc_msgSend(v91, "positionManager");
      if (v111)
      {
        v112 = v111;
        v113 = objc_msgSend(v111, "accessoryIsTracked:", v92);

        if ((v113 & 1) != 0)
        {
          v114 = 1;
LABEL_56:
          LODWORD(v164) = v114;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, (char *)&v164 + 4, v94 + 24, v94 + 28);

          _os_log_impl((void *)&_mh_execute_header, v87, v93, "ClimateSystem Ready? (%s) positionManager=%@ climateTracked=%{BOOL}d", (uint8_t *)v94, 0x1Cu);
          v115 = sub_100006058((uint64_t *)&unk_1000B8370);
          swift_arrayDestroy(v95, 1, v115);
          swift_slowDealloc(v95, -1, -1);
          v116 = v159;
          swift_arrayDestroy(v159, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v116, -1, -1);
          swift_slowDealloc(v94, -1, -1);

          return;
        }
      }
      else
      {

      }
      v114 = 0;
      goto LABEL_56;
    }
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v80 = qword_1000BC938;
    v81 = v161;
    v82 = swift_bridgeObjectRetain_n(v161, 2);
    v83 = static os_log_type_t.default.getter(v82);
    if (os_log_type_enabled(v80, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc(12, -1);
      v85 = (void *)swift_slowAlloc(32, -1);
      aBlock[0] = v85;
      *(_DWORD *)v84 = 136315138;
      swift_bridgeObjectRetain(v81);
      v164 = sub_10005DB58(v160, v81, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v84 + 4, v84 + 12);
      swift_bridgeObjectRelease_n(v81, 3);
      _os_log_impl((void *)&_mh_execute_header, v80, v83, "ClimateSystem Ready? (%s) Climate accessory has not received all values", v84, 0xCu);
      swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v84, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v81, 2);
    }

  }
  else
  {
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v74 = qword_1000BC938;
    v75 = v161;
    v76 = swift_bridgeObjectRetain_n(v161, 2);
    v77 = static os_log_type_t.default.getter(v76);
    if (os_log_type_enabled(v74, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc(12, -1);
      v79 = (void *)swift_slowAlloc(32, -1);
      aBlock[0] = v79;
      *(_DWORD *)v78 = 136315138;
      swift_bridgeObjectRetain(v75);
      v164 = sub_10005DB58(v160, v75, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, v165, v78 + 4, v78 + 12);
      swift_bridgeObjectRelease_n(v75, 3);
      _os_log_impl((void *)&_mh_execute_header, v74, v77, "ClimateSystem Ready? (%s) Missing the Climate accessory", v78, 0xCu);
      swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v78, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v75, 2);
    }

  }
}

void sub_100028B60(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100024ADC();

  }
}

ValueMetadata *type metadata accessor for ClimateCoordinator.StatusBarSteppersState()
{
  return &type metadata for ClimateCoordinator.StatusBarSteppersState;
}

_QWORD *sub_100028E7C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_100028E88(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_100028E90@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_100028EA4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_100028EB8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_100028ECC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_100028EFC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100028F28@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_100028F4C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_100028F60(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_100028F74(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_100028F88@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100028F9C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_100028FB0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_100028FC4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_100028FD8()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_100028FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_100029000(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_100029014@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_10002C828(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

unint64_t sub_100029054()
{
  unint64_t result;

  result = qword_1000B82C8;
  if (!qword_1000B82C8)
  {
    result = swift_getWitnessTable(&unk_100089798, &type metadata for ClimateCoordinator.StatusBarSteppersState);
    atomic_store(result, (unint64_t *)&qword_1000B82C8);
  }
  return result;
}

unint64_t sub_10002909C()
{
  unint64_t result;

  result = qword_1000B82D0;
  if (!qword_1000B82D0)
  {
    result = swift_getWitnessTable(&unk_100089768, &type metadata for ClimateCoordinator.StatusBarSteppersState);
    atomic_store(result, (unint64_t *)&qword_1000B82D0);
  }
  return result;
}

unint64_t sub_1000290E4()
{
  unint64_t result;

  result = qword_1000B82D8;
  if (!qword_1000B82D8)
  {
    result = swift_getWitnessTable(&unk_1000897C0, &type metadata for ClimateCoordinator.StatusBarSteppersState);
    atomic_store(result, (unint64_t *)&qword_1000B82D8);
  }
  return result;
}

unint64_t sub_10002912C()
{
  unint64_t result;

  result = qword_1000B82E0;
  if (!qword_1000B82E0)
  {
    result = swift_getWitnessTable(&unk_1000897F8, &type metadata for ClimateCoordinator.StatusBarSteppersState);
    atomic_store(result, (unint64_t *)&qword_1000B82E0);
  }
  return result;
}

void *sub_100029170()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_10002917C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100089998);
  v5 = swift_getKeyPath(&unk_1000899C0);
  static Published.subscript.getter(v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1000291F8(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100089998);
  v5 = swift_getKeyPath(&unk_1000899C0);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100029264(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10005B998(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10002B454();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v7);
  sub_10002A62C(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_100029330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_10005B798(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10002B618(type metadata accessor for ClimateZone, (uint64_t *)&unk_1000B83A0);
      v10 = v19;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for ClimateZone(0);
    v15 = *(_QWORD *)(v14 - 8);
    sub_100018D10(v13 + *(_QWORD *)(v15 + 72) * v7, a2, type metadata accessor for ClimateZone);
    sub_10002A800(v7, v10);
    v16 = *v3;
    *v3 = v10;
    swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
  }
  else
  {
    v18 = type metadata accessor for ClimateZone(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

uint64_t sub_10002947C(uint64_t a1)
{
  return sub_100029494(a1, &qword_1000B8340);
}

uint64_t sub_100029488(uint64_t a1)
{
  return sub_100029494(a1, &qword_1000B8338);
}

uint64_t sub_100029494(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = v2;
  v6 = *v4;
  swift_bridgeObjectRetain(*v4);
  v7 = sub_10005BAD4(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
  v10 = *v4;
  v16 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10002BA78((uint64_t (*)(_QWORD))&type metadata accessor for UUID, a2);
    v10 = v16;
  }
  v11 = *(_QWORD *)(v10 + 48);
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v7);
  sub_10002AAD4(v7, v10);
  v14 = *v4;
  *v4 = v10;
  swift_bridgeObjectRelease(v14);
  return v13;
}

void sub_100029584(uint64_t a1, uint64_t a2)
{
  sub_10002A028(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for CAUVehicleLayoutKey, &qword_1000B8358, &qword_1000B8360, (uint64_t)&protocol conformance descriptor for CAUVehicleLayoutKey);
}

void sub_1000295A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  Swift::UInt v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  _QWORD v41[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100006058(&qword_1000B8320);
  v40 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_53;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = v3;
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_25;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      return;
    }
    if (v18 >= v38)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v39 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v38)
        goto LABEL_46;
      v20 = *(_QWORD *)(v39 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v38)
        {
LABEL_46:
          swift_release(v5);
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_53;
          goto LABEL_49;
        }
        v20 = *(_QWORD *)(v39 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_55;
            if (v13 >= v38)
              goto LABEL_46;
            v20 = *(_QWORD *)(v39 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_24;
          }
        }
        v13 = v21;
      }
    }
LABEL_24:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_25:
    v22 = *(_QWORD *)(v5 + 48) + 24 * v17;
    v24 = *(_QWORD *)v22;
    v23 = *(_QWORD *)(v22 + 8);
    v25 = *(unsigned __int8 *)(v22 + 16);
    v26 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    if ((v40 & 1) == 0)
    {
      sub_10002C68C(*(_QWORD *)v22, *(_QWORD *)(v22 + 8), *(_BYTE *)(v22 + 16));
      swift_bridgeObjectRetain(v26);
    }
    Hasher.init(_seed:)(v41);
    if (v25)
    {
      if (v25 == 1)
      {
        Hasher._combine(_:)(3uLL);
        v27 = v24;
      }
      else if (v24 | v23)
      {
        if (v24 ^ 1 | v23)
          v27 = 4;
        else
          v27 = 2;
      }
      else
      {
        v27 = 1;
      }
      Hasher._combine(_:)(v27);
    }
    else
    {
      Hasher._combine(_:)(0);
      String.hash(into:)(v41, v24, v23);
    }
    v28 = Hasher._finalize()();
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_54;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v8 + 48) + 24 * v14;
    *(_QWORD *)v15 = v24;
    *(_QWORD *)(v15 + 8) = v23;
    *(_BYTE *)(v15 + 16) = v25;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v26;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v37;
  v19 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_53;
LABEL_49:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v19, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_53:
  swift_release(v5);
  *v3 = v8;
}

void sub_100029938(uint64_t a1, uint64_t a2)
{
  sub_10002994C(a1, a2, type metadata accessor for ClimateDefrost, &qword_1000B8398);
}

void sub_10002994C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t i;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t (*v54)(_QWORD);

  v6 = v4;
  v54 = a3;
  v9 = a3(0);
  v51 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v53 = (uint64_t)&v47 - v10;
  v11 = type metadata accessor for CAUVehicleLayoutKey(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v6;
  if (*(_QWORD *)(*v6 + 24) > a1)
    a1 = *(_QWORD *)(*v6 + 24);
  sub_100006058(a4);
  v52 = a2;
  v16 = static _DictionaryStorage.resize(original:capacity:move:)(v15, a1, a2);
  v17 = v16;
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_43;
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = *(_QWORD *)(v15 + 64);
  v49 = (_QWORD *)(v15 + 64);
  if (v18 < 64)
    v20 = ~(-1 << v18);
  else
    v20 = -1;
  v21 = v20 & v19;
  v47 = v6;
  v48 = (unint64_t)(v18 + 63) >> 6;
  v22 = v16 + 64;
  swift_retain(v15);
  v23 = 0;
  for (i = v15; ; v15 = i)
  {
    if (v21)
    {
      v25 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_24;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v27 >= v48)
      break;
    v28 = v49;
    v29 = v49[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v48)
        goto LABEL_36;
      v29 = v49[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v48)
        {
LABEL_36:
          swift_release(v15);
          v6 = v47;
          if ((v52 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v29 = v49[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_45;
            if (v23 >= v48)
              goto LABEL_36;
            v29 = v49[v23];
            ++v30;
            if (v29)
              goto LABEL_23;
          }
        }
        v23 = v30;
      }
    }
LABEL_23:
    v21 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_24:
    v31 = *(_QWORD *)(v12 + 72);
    v32 = *(_QWORD *)(v15 + 48) + v31 * v26;
    if ((v52 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 32))(v14, v32, v11);
      v33 = *(_QWORD *)(v15 + 56);
      v34 = *(_QWORD *)(v51 + 72);
      sub_100018D10(v33 + v34 * v26, v53, v54);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v32, v11);
      v35 = *(_QWORD *)(v15 + 56);
      v34 = *(_QWORD *)(v51 + 72);
      sub_10000AAD8(v35 + v34 * v26, v53, v54);
    }
    v36 = *(_QWORD *)(v17 + 40);
    v37 = sub_1000052AC(&qword_1000B8360, (uint64_t (*)(uint64_t))&type metadata accessor for CAUVehicleLayoutKey, (uint64_t)&protocol conformance descriptor for CAUVehicleLayoutKey);
    v38 = dispatch thunk of Hashable._rawHashValue(seed:)(v36, v11, v37);
    v39 = -1 << *(_BYTE *)(v17 + 32);
    v40 = v38 & ~v39;
    v41 = v40 >> 6;
    if (((-1 << v40) & ~*(_QWORD *)(v22 + 8 * (v40 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v40) & ~*(_QWORD *)(v22 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v42 = 0;
      v43 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v44 = v41 == v43;
        if (v41 == v43)
          v41 = 0;
        v42 |= v44;
        v45 = *(_QWORD *)(v22 + 8 * v41);
      }
      while (v45 == -1);
      v24 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(_QWORD *)(v22 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(*(_QWORD *)(v17 + 48) + v31 * v24, v14, v11);
    sub_100018D10(v53, *(_QWORD *)(v17 + 56) + v34 * v24, v54);
    ++*(_QWORD *)(v17 + 16);
  }
  swift_release(v15);
  v6 = v47;
  v28 = v49;
  if ((v52 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v46 = 1 << *(_BYTE *)(v15 + 32);
  if (v46 >= 64)
    bzero(v28, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v46;
  *(_QWORD *)(v15 + 16) = 0;
LABEL_43:
  swift_release(v15);
  *v6 = v17;
}

Swift::Int sub_100029D40(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int result;
  Swift::Int v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  Swift::Int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int *v31;
  char v32;
  _QWORD *v33;
  uint64_t v34[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100006058(&qword_1000B8348);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = a2;
    v31 = v3;
    v9 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v33[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v33[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((v32 & 1) == 0)
              {
                result = swift_release(v5);
                v3 = v31;
                goto LABEL_41;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v33[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v9 >= v13)
                  goto LABEL_34;
                v19 = v33[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v17);
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v17);
      Hasher.init(_seed:)(v34);
      Hasher._combine(_:)(v21);
      result = Hasher._finalize()();
      v23 = -1 << *(_BYTE *)(v8 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v15) = v21;
      *(_BYTE *)(*(_QWORD *)(v8 + 56) + v15) = v22;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
LABEL_41:
  *v3 = v8;
  return result;
}

void sub_10002A004(uint64_t a1, uint64_t a2)
{
  sub_10002A028(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_1000B8340, &qword_1000B8330, (uint64_t)&protocol conformance descriptor for UUID);
}

void sub_10002A028(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t i;
  uint64_t (*v49)(uint64_t);
  unint64_t *v50;
  uint64_t v51;
  int v52;

  v50 = a5;
  v51 = a6;
  v8 = v6;
  v49 = a3;
  v11 = a3(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - v13;
  v15 = *v8;
  if (*(_QWORD *)(*v8 + 24) > a1)
    a1 = *(_QWORD *)(*v8 + 24);
  sub_100006058(a4);
  v52 = a2;
  v16 = static _DictionaryStorage.resize(original:capacity:move:)(v15, a1, a2);
  v17 = v16;
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_43;
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = *(_QWORD *)(v15 + 64);
  v47 = (_QWORD *)(v15 + 64);
  if (v18 < 64)
    v20 = ~(-1 << v18);
  else
    v20 = -1;
  v21 = v20 & v19;
  v45 = v8;
  v46 = (unint64_t)(v18 + 63) >> 6;
  v22 = v16 + 64;
  swift_retain(v15);
  v23 = 0;
  for (i = v15; ; v15 = i)
  {
    if (v21)
    {
      v25 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_24;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v27 >= v46)
      break;
    v28 = v47;
    v29 = v47[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v46)
        goto LABEL_36;
      v29 = v47[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v46)
        {
LABEL_36:
          swift_release(v15);
          v8 = v45;
          if ((v52 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v29 = v47[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_45;
            if (v23 >= v46)
              goto LABEL_36;
            v29 = v47[v23];
            ++v30;
            if (v29)
              goto LABEL_23;
          }
        }
        v23 = v30;
      }
    }
LABEL_23:
    v21 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_24:
    v31 = *(_QWORD *)(v12 + 72);
    v32 = *(_QWORD *)(v15 + 48) + v31 * v26;
    if ((v52 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 32))(v14, v32, v11);
      v33 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v26);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v32, v11);
      v33 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v26);
    }
    v34 = *(_QWORD *)(v17 + 40);
    v35 = sub_1000052AC(v50, v49, v51);
    v36 = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v11, v35);
    v37 = -1 << *(_BYTE *)(v17 + 32);
    v38 = v36 & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v22 + 8 * (v38 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v22 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v22 + 8 * v39);
      }
      while (v43 == -1);
      v24 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v22 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(*(_QWORD *)(v17 + 48) + v31 * v24, v14, v11);
    *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v24) = v33;
    ++*(_QWORD *)(v17 + 16);
  }
  swift_release(v15);
  v8 = v45;
  v28 = v47;
  if ((v52 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v44 = 1 << *(_BYTE *)(v15 + 32);
  if (v44 >= 64)
    bzero(v28, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v44;
  *(_QWORD *)(v15 + 16) = 0;
LABEL_43:
  swift_release(v15);
  *v8 = v17;
}

unint64_t sub_10002A3B4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  Swift::UInt v13;
  Swift::Int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v29 = (result + 1) & v7;
      do
      {
        v8 = 24 * v6;
        v9 = *(_QWORD *)(a2 + 48) + 24 * v6;
        v11 = *(_QWORD *)v9;
        v10 = *(_QWORD *)(v9 + 8);
        v12 = *(unsigned __int8 *)(v9 + 16);
        Hasher.init(_seed:)(v30);
        if (v12)
        {
          if (v12 == 1)
          {
            Hasher._combine(_:)(3uLL);
            v13 = v11;
          }
          else if (v11 | v10)
          {
            if (v11 ^ 1 | v10)
              v13 = 4;
            else
              v13 = 2;
          }
          else
          {
            v13 = 1;
          }
          Hasher._combine(_:)(v13);
        }
        else
        {
          Hasher._combine(_:)(0);
          swift_bridgeObjectRetain(v10);
          String.hash(into:)(v30, v11, v10);
        }
        v14 = Hasher._finalize()();
        result = sub_10002C6A0(v11, v10, v12);
        v15 = v14 & v7;
        if (v3 >= (uint64_t)v29)
        {
          if (v15 < v29)
            goto LABEL_5;
        }
        else if (v15 >= v29)
        {
          goto LABEL_21;
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_21:
          v16 = *(_QWORD *)(a2 + 48);
          v17 = v16 + 24 * v3;
          v18 = (__int128 *)(v16 + v8);
          if (24 * v3 < v8 || v17 >= (unint64_t)v18 + 24 || v3 != v6)
          {
            v19 = *v18;
            *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
            *(_OWORD *)v17 = v19;
          }
          v20 = *(_QWORD *)(a2 + 56);
          v21 = (_QWORD *)(v20 + 8 * v3);
          v22 = (_QWORD *)(v20 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v21 >= v22 + 1))
          {
            *v21 = *v22;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10002A62C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26);
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10002A800(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  unint64_t v44;
  uint64_t v45;

  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  v45 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v44 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v45 + 72);
      v43 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v43(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_1000052AC(&qword_1000B8360, (uint64_t (*)(uint64_t))&type metadata accessor for CAUVehicleLayoutKey, (uint64_t)&protocol conformance descriptor for CAUVehicleLayoutKey);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v44)
        {
          if (v21 >= v44 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = type metadata accessor for ClimateZone(0);
            v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72);
            v30 = v29 * a1;
            v31 = v27 + v29 * a1;
            v32 = v29 * v9;
            v33 = v27 + v29 * v9;
            v34 = v33 + v29;
            if (v30 < v32 || v31 >= v34)
            {
              swift_arrayInitWithTakeFrontToBack(v31, v33, 1, v28);
              a1 = v9;
              v13 = v17;
            }
            else
            {
              a1 = v9;
              v13 = v17;
              if (v30 != v32)
              {
                swift_arrayInitWithTakeBackToFront(v31);
                v13 = v17;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v44 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v36 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v36;
    v38 = (-1 << a1) - 1;
  }
  else
  {
    v36 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v38 = *v36;
    v37 = (-1 << a1) - 1;
  }
  *v36 = v38 & v37;
  v39 = *(_QWORD *)(a2 + 16);
  v40 = __OFSUB__(v39, 1);
  v41 = v39 - 1;
  if (v40)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v41;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10002AAD4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for UUID(0);
  v39 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v38 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v39 + 72);
      v37 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v37(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_1000052AC(&qword_1000B8330, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v38)
        {
          if (v21 >= v38 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || (v12 = v15, v25 >= v26 + v15))
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
              goto LABEL_21;
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = (_QWORD *)(v27 + 8 * a1);
            v29 = (_QWORD *)(v27 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v28 >= v29 + 1))
            {
              *v28 = *v29;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v38 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v30 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v30;
    v32 = (-1 << a1) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v30;
    v31 = (-1 << a1) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_10002AD74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v6 = v5;
  v12 = *v5;
  v14 = sub_10005B8B8(a2, a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10002B294();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease(*(_QWORD *)(v21 + 8 * v14));
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = v20[6] + 24 * v14;
    *(_QWORD *)v25 = a2;
    *(_QWORD *)(v25 + 8) = a3;
    *(_BYTE *)(v25 + 16) = a4;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return sub_10002C68C(a2, a3, a4);
    }
    goto LABEL_14;
  }
  sub_1000295A8(v17, a5 & 1);
  v23 = sub_10005B8B8(a2, a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ClimateSceneDelegateType);
  __break(1u);
  return result;
}

uint64_t sub_10002AEF8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for CAUVehicleLayoutKey(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_10005B798(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for ClimateZone(0);
        return sub_10002C7E0(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_10002B618(type metadata accessor for ClimateZone, (uint64_t *)&unk_1000B83A0);
      goto LABEL_7;
    }
    sub_10002994C(v17, a3 & 1, type metadata accessor for ClimateZone, (uint64_t *)&unk_1000B83A0);
    v24 = sub_10005B798(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_10002B1C8(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

uint64_t sub_10002B098(char a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_10005BA7C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_10002B8DC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v16[7] + v10) = a1 & 1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_BYTE *)(v16[7] + v10) = a1 & 1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_100029D40(result, a3 & 1);
  result = sub_10005BA7C(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ClimateSignpostManager.Signpost);
  __break(1u);
  return result;
}

uint64_t sub_10002B1C8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for ClimateZone(0);
  result = sub_100018D10(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for ClimateZone);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

void sub_10002B280()
{
  sub_10002BA78((uint64_t (*)(_QWORD))&type metadata accessor for CAUVehicleLayoutKey, &qword_1000B8358);
}

void sub_10002B294()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_100006058(&qword_1000B8320);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *(_QWORD *)(v4 + 48) + v16;
    v23 = *(_BYTE *)(v17 + 16);
    *(_QWORD *)v22 = *(_QWORD *)v17;
    *(_QWORD *)(v22 + 8) = v19;
    *(_BYTE *)(v22 + 16) = v23;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    sub_10002C68C(v18, v19, v23);
    swift_bridgeObjectRetain(v21);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10002B454()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_100006058(&qword_1000B8328);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    v22 = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10002B604()
{
  sub_10002B618(type metadata accessor for ClimateDefrost, &qword_1000B8398);
}

void sub_10002B618(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t i;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v4 = a1(0);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v39 = (char *)&v34 - v5;
  v38 = type metadata accessor for CAUVehicleLayoutKey(0);
  v6 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006058(a2);
  v34 = v2;
  v8 = *v2;
  v9 = static _DictionaryStorage.copy(original:)(*v2);
  v10 = *(_QWORD *)(v8 + 16);
  v43 = v9;
  if (!v10)
  {
    swift_release(v8);
    v33 = v43;
    v32 = v34;
LABEL_25:
    *v32 = v33;
    return;
  }
  v11 = v9;
  v12 = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)v12 >= v8 + 64 + 8 * v13)
  {
    memmove(v12, (const void *)(v8 + 64), 8 * v13);
    v11 = v43;
  }
  v14 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v42 = v8;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v35 = v8 + 64;
  v36 = (unint64_t)(v15 + 63) >> 6;
  v19 = v37;
  v18 = v38;
  v20 = (uint64_t)v39;
  for (i = v43; ; sub_100018D10(v20, *(_QWORD *)(i + 56) + v28, v27))
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v14 << 6);
      v24 = v42;
      goto LABEL_9;
    }
    v29 = v14 + 1;
    v24 = v42;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      v14 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_23;
      v30 = *(_QWORD *)(v35 + 8 * v14);
      if (!v30)
        break;
    }
LABEL_22:
    v17 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_9:
    v25 = *(_QWORD *)(v6 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(_QWORD *)(v24 + 48) + v25, v18);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = v41;
    v28 = *(_QWORD *)(v40 + 72) * v23;
    sub_10000AAD8(v26 + v28, v20, v41);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(i + 48) + v25, v19, v18);
  }
  v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    swift_release(v42);
    v32 = v34;
    v33 = v43;
    goto LABEL_25;
  }
  v30 = *(_QWORD *)(v35 + 8 * v31);
  if (v30)
  {
    v14 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v14 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v14);
    ++v31;
    if (v30)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void *sub_10002B8DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_100006058(&qword_1000B8348);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_10002BA64()
{
  sub_10002BA78((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_1000B8340);
}

void sub_10002BA78(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int64_t v30;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - v6;
  sub_100006058(a2);
  v28 = v2;
  v8 = *v2;
  v9 = static _DictionaryStorage.copy(original:)(*v2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    swift_release(v8);
    *v28 = v10;
    return;
  }
  v11 = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)v11 >= v8 + 64 + 8 * v12)
    memmove(v11, (const void *)(v8 + 64), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v29 = v8 + 64;
  v30 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v14;
    if (!v25)
    {
      v14 = v24 + 1;
      if (v24 + 1 >= v30)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v14);
      if (!v25)
        break;
    }
LABEL_25:
    v17 = (v25 - 1) & v25;
    v19 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = 8 * v19;
    v22 = *(void **)(*(_QWORD *)(v8 + 56) + v21);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v22;
    v23 = v22;
  }
  v26 = v24 + 2;
  if (v26 >= v30)
    goto LABEL_26;
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v14 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v14 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v14);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void (*sub_10002BCA0(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t a1)
{
  _QWORD *v4;
  _BYTE *v9;
  char isUniquelyReferenced_nonNull_native;

  v9 = malloc(0x68uLL);
  *a1 = v9;
  v9[96] = a4;
  *((_QWORD *)v9 + 8) = a2;
  *((_QWORD *)v9 + 9) = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
  sub_10002C68C(a2, a3, a4);
  *((_QWORD *)v9 + 10) = sub_10002BF34(v9);
  *((_QWORD *)v9 + 11) = sub_10002BDB0((_QWORD *)v9 + 4, a2, a3, a4, isUniquelyReferenced_nonNull_native);
  return sub_10002BD4C;
}

void sub_10002BD4C(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 96);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 88))(*(_QWORD *)a1 + 32, 0);
  sub_10002C6A0(v4, v3, v5);
  v2(v1, 0);
  free(v1);
}

void (*sub_10002BDB0(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, char a5))(uint64_t **a1)
{
  uint64_t *v5;
  uint64_t *v6;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*result)(uint64_t **);

  v6 = v5;
  v12 = malloc(0x30uLL);
  *a1 = v12;
  v12[2] = a3;
  v12[3] = v6;
  *((_BYTE *)v12 + 40) = a4;
  v12[1] = a2;
  v13 = *v6;
  v15 = sub_10005B8B8(a2, a3, a4);
  *((_BYTE *)v12 + 41) = v14 & 1;
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a5 & 1) != 0)
    {
LABEL_7:
      v12[4] = v15;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v21 = *(_QWORD *)(*(_QWORD *)(*v6 + 56) + 8 * v15);
LABEL_12:
        *v12 = v21;
        return sub_10002BEF4;
      }
LABEL_11:
      v21 = 0;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a5 & 1) == 0)
    {
      sub_10002B294();
      goto LABEL_7;
    }
    sub_1000295A8(v18, a5 & 1);
    v22 = sub_10005B8B8(a2, a3, a4);
    if ((v19 & 1) == (v23 & 1))
    {
      v15 = v22;
      v12[4] = v22;
      if ((v19 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ClimateSceneDelegateType);
  __break(1u);
  return result;
}

void sub_10002BEF4(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_10002BF60(*a1, *((_BYTE *)*a1 + 41), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2], *((_BYTE *)*a1 + 40));
  swift_bridgeObjectRelease(*v1);
  free(v1);
}

uint64_t (*sub_10002BF34(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_10002BF54;
}

uint64_t sub_10002BF54(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

void sub_10002BF60(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v9 = *a1;
  if (!*a1)
  {
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + 24 * a4, 1, &type metadata for ClimateSceneDelegateType);
      sub_10002A3B4(a4, *a3);
    }
    goto LABEL_8;
  }
  v10 = (_QWORD *)*a3;
  if ((a2 & 1) != 0)
  {
    *(_QWORD *)(v10[7] + 8 * a4) = v9;
LABEL_8:
    swift_bridgeObjectRetain(v9);
    return;
  }
  v10[(a4 >> 6) + 8] |= 1 << a4;
  v11 = v10[6] + 24 * a4;
  *(_QWORD *)v11 = a5;
  *(_QWORD *)(v11 + 8) = a6;
  *(_BYTE *)(v11 + 16) = a7;
  *(_QWORD *)(v10[7] + 8 * a4) = v9;
  v12 = v10[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    v10[2] = v14;
    sub_10002C68C(a5, a6, a7);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_10002C038(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_10002C0E8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v4;
  Swift::UInt v5;
  uint64_t v6;
  unint64_t result;
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  char v19;
  id v20;
  id v21;
  __int128 v22;
  __int128 v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100006058(&qword_1000B8350);
  v4 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  v5 = *(_QWORD *)(a1 + 32);
  v22 = *(_OWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 56);
  result = sub_10005B740(v5);
  v8 = v22;
  if ((v9 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v20 = (id)v8;
    v21 = v1;
    swift_bridgeObjectRetain(v6);
    return (unint64_t)v4;
  }
  v10 = a1 + 64;
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v5;
    v11 = v4[7] + 24 * result;
    *(_OWORD *)v11 = v8;
    *(_QWORD *)(v11 + 16) = v6;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v4[2] = v14;
    v1 = (void *)*((_QWORD *)&v8 + 1);
    if (!--v2)
      goto LABEL_8;
    v15 = v10 + 32;
    v5 = *(_QWORD *)v10;
    v23 = *(_OWORD *)(v10 + 8);
    v16 = *(_QWORD *)(v10 + 24);
    v17 = (id)v8;
    v18 = v1;
    swift_bridgeObjectRetain(v6);
    result = sub_10005B740(v5);
    v10 = v15;
    v6 = v16;
    v8 = v23;
    if ((v19 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_10002C238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  unint64_t v14;
  int64_t v15;
  void *v16;
  int64_t v17;
  void *v18;

  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v10 = 0;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * i);
    v16 = v18;
    sub_100027224(&v18, a2);
    if (v2)
    {
      swift_release(a1);

      return;
    }

    if (v8)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v9)
      goto LABEL_26;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    if (!v14)
    {
      v15 = v10 + 1;
      if (v10 + 1 >= v9)
        goto LABEL_26;
      v14 = *(_QWORD *)(v5 + 8 * v15);
      if (v14)
        goto LABEL_14;
      v15 = v10 + 2;
      if (v10 + 2 >= v9)
        goto LABEL_26;
      v14 = *(_QWORD *)(v5 + 8 * v15);
      if (v14)
        goto LABEL_14;
      v15 = v10 + 3;
      if (v10 + 3 >= v9)
        goto LABEL_26;
      v14 = *(_QWORD *)(v5 + 8 * v15);
      if (v14)
      {
LABEL_14:
        v10 = v15;
        goto LABEL_15;
      }
      v17 = v10 + 4;
      if (v10 + 4 >= v9)
      {
LABEL_26:
        swift_release(a1);
        return;
      }
      v14 = *(_QWORD *)(v5 + 8 * v17);
      v10 += 4;
      if (!v14)
        break;
    }
LABEL_15:
    v8 = (v14 - 1) & v14;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v9)
      goto LABEL_26;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v17;
    if (v14)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
}

void sub_10002C3D0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;

  v20 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v21 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v7 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v7 >= v21)
      goto LABEL_29;
    v12 = *(_QWORD *)(v20 + 8 * v7);
    if (!v12)
      break;
LABEL_20:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_21:
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    v15 = qword_1000B6FE8;
    swift_bridgeObjectRetain(v14);
    if (v15 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v16 = qword_1000BC938;
    swift_bridgeObjectRetain(v14);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v16, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v19 = 134217984;
      v22 = *(_QWORD *)(v14 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v19 + 4, v19 + 12);
      swift_bridgeObjectRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v16, v18, "Updating view controllers for %ld delegates", v19, 0xCu);
      swift_slowDealloc(v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease(v14);
    }
    swift_bridgeObjectRetain(v14);
    v8 = a2;
    sub_10002C238(v14, (uint64_t)v8);
    swift_bridgeObjectRelease_n(v14, 2);

  }
  v13 = v7 + 1;
  if (v7 + 1 >= v21)
    goto LABEL_29;
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
    goto LABEL_19;
  v13 = v7 + 2;
  if (v7 + 2 >= v21)
    goto LABEL_29;
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
    goto LABEL_19;
  v13 = v7 + 3;
  if (v7 + 3 >= v21)
    goto LABEL_29;
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
    goto LABEL_19;
  v13 = v7 + 4;
  if (v7 + 4 >= v21)
  {
LABEL_29:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v20 + 8 * v13);
  if (v12)
  {
LABEL_19:
    v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v21)
      goto LABEL_29;
    v12 = *(_QWORD *)(v20 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_10002C68C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_10002C6A0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease(a2);
  return result;
}

unint64_t sub_10002C6B4()
{
  unint64_t result;

  result = qword_1000B82F8;
  if (!qword_1000B82F8)
  {
    result = swift_getWitnessTable(&unk_10008B704, &type metadata for ClimateSceneDelegateType);
    atomic_store(result, (unint64_t *)&qword_1000B82F8);
  }
  return result;
}

unint64_t sub_10002C708()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B8310;
  if (!qword_1000B8310)
  {
    v1 = sub_10000A948((uint64_t *)&unk_1000B8300);
    sub_1000052AC(&qword_1000B8318, (uint64_t (*)(uint64_t))&type metadata accessor for CAUPhysicalControlBarsLayout, (uint64_t)&protocol conformance descriptor for CAUPhysicalControlBarsLayout);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1000B8310);
  }
  return result;
}

uint64_t sub_10002C79C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10002C7C0()
{
  uint64_t v0;

  sub_100028B60(v0);
}

uint64_t sub_10002C7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C7D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClimateZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002C828(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void sub_10002C860(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  id v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t KeyPath;
  uint64_t v25;
  double v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  char *v48;
  char *v49;
  char *v50;
  id v51;
  id v52;
  uint64_t v53;

  v2 = v1;
  v4 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v4);
  v50 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v49 = (char *)&v48 - v10;
  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v11 = qword_1000BC938;
  v12 = a1;
  v13 = static os_log_type_t.default.getter(v12);
  v14 = os_log_type_enabled(v11, v13);
  v51 = v12;
  if (v14)
  {
    v48 = v8;
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v15 = 138412290;
    v17 = a1;
    if (a1)
    {
      v18 = v51;
      v52 = v51;
      v19 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v15 + 4, v15 + 12);
    }
    else
    {
      v52 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v15 + 4, v15 + 12);
      v18 = v51;
    }
    *v16 = v17;

    a1 = v17;
    _os_log_impl((void *)&_mh_execute_header, v11, v13, "didUpdateCurrentCar %@", v15, 0xCu);
    v20 = sub_100006058((uint64_t *)&unk_1000B8370);
    swift_arrayDestroy(v16, 1, v20);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
    v8 = v48;
  }
  else
  {

  }
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate18ClimateCoordinator_signpostManager];
  v22 = OBJC_IVAR____TtC7Climate22ClimateSignpostManager_car;
  v23 = *(void **)(v21 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_car);
  *(_QWORD *)(v21 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_car) = 0;

  KeyPath = swift_getKeyPath(&unk_100089A28);
  v25 = swift_getKeyPath(&unk_100089A50);
  static Published.subscript.getter(v2, KeyPath, v25);
  swift_release(KeyPath);
  *(_QWORD *)&v26 = swift_release(v25).n128_u64[0];
  v27 = v52;
  if (v52)
  {
    v28 = objc_msgSend(v52, "positionManager", v26);

    if (v28)
    {
      objc_msgSend(v28, "unregisterObserver:", v2);

    }
  }
  v29 = swift_getKeyPath(&unk_100089A28);
  v30 = swift_getKeyPath(&unk_100089A50);
  static Published.subscript.getter(v2, v29, v30);
  swift_release(v29);
  *(_QWORD *)&v31 = swift_release(v30).n128_u64[0];
  v32 = v52;
  if (v52)
  {
    objc_msgSend(v52, "unregisterObserver:", v2, v31);

  }
  v33 = type metadata accessor for ClimateZone(0);
  v34 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v49, 1, 1, v33);
  v35 = swift_getKeyPath(&unk_100089A70);
  v36 = swift_getKeyPath(&unk_100089A98);
  sub_10000AA50(v34, (uint64_t)v8, (uint64_t *)&unk_1000B7C40);
  v37 = v2;
  static Published.subscript.setter(v8, v37, v35, v36);
  sub_100008B88(v34, (uint64_t *)&unk_1000B7C40);
  v38 = type metadata accessor for ClimateSystemManager(0);
  v39 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v50, 1, 1, v38);
  sub_100024C6C(v39);
  v40 = swift_getKeyPath(&unk_100089A28);
  v41 = swift_getKeyPath(&unk_100089A50);
  v52 = a1;
  v42 = v51;
  v43 = v37;
  static Published.subscript.setter(&v52, v43, v40, v41);
  v44 = *(void **)(v21 + v22);
  *(_QWORD *)(v21 + v22) = a1;
  v45 = v42;

  if (a1)
  {
    objc_msgSend(v45, "registerObserver:", v43);
    v46 = objc_msgSend(v45, "positionManager");
    if (v46)
    {
      v47 = v46;
      objc_msgSend(v46, "registerObserver:", v43);

    }
  }
  sub_1000277A0(0xD000000000000022, 0x800000010008D100);
}

_OWORD *sub_10002CD60(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10002CD78()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned __int8 v5;
  uint64_t v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate31ClimateAutoControlServiceButton_autoClimateControl);
  v2 = objc_msgSend(v1, "level");
  v3 = objc_msgSend(v1, "levelRestricted");
  v4 = objc_msgSend(v1, "levelInvalid");
  v5 = objc_msgSend(v1, "levelDisabled");
  if (v2)
  {
    if ((v3 & 1) != 0)
    {
      v6 = 5;
      if (v4)
        v6 = 13;
      if ((v5 & 1) == 0)
        return v6;
      return v6 | 0x10;
    }
    v6 = 9;
    if (!v4)
      v6 = 1;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  else if (v3)
  {
    v6 = 4;
    if (v4)
      v6 = 12;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  else
  {
    v6 = 8;
    if (!v4)
      v6 = 0;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  return v6;
}

char *sub_10002CF3C(void *a1)
{
  void *v1;
  char *v3;
  unsigned int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  void (*v10)(void);
  _QWORD *v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v21[24];
  objc_super v22;

  v3 = v1;
  v4 = objc_msgSend(a1, "level");
  v5 = objc_msgSend(a1, "levelRange");
  sub_10002278C(0x6C6C69662E6E6166, 0xE800000000000000, 1330926913, 0xE400000000000000, v4, v5, 5.0);
  v7 = v6;

  *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate26ClimateAutoModeLevelButton_progressView] = v7;
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate31ClimateAutoControlServiceButton_autoClimateControl] = a1;
  v22.receiver = v3;
  v22.super_class = (Class)type metadata accessor for ClimateAutoControlServiceButton();
  v8 = a1;
  v9 = objc_msgSendSuper2(&v22, "init");
  v10 = *(void (**)(void))((swift_isaMask & *v9) + 0x220);
  v11 = v9;
  v10();
  v12 = v11;
  objc_msgSend(v8, "registerObserver:", v12);

  v13 = v12;
  sub_10002D218();
  v14 = swift_allocObject(&unk_10009EB48, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v13);
  v15 = swift_allocObject(&unk_10009EB70, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v8;
  v16 = (uint64_t *)&v13[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v13[OBJC_IVAR____TtC7Climate13ClimateButton_action], v21, 1, 0);
  v17 = *v16;
  v18 = v16[1];
  *v16 = (uint64_t)sub_10002D764;
  v16[1] = v15;
  v19 = v8;
  sub_100005118(v17, v18);
  sub_10002D4C0();

  return v13;
}

void sub_10002D11C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  unsigned int v7;
  id v8;
  unsigned int v9;
  id v10;
  _BYTE v11[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend(a3, "level") + 1;
    if (((v7 >> 8) & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v8 = objc_msgSend(a3, "levelRange");
      v9 = objc_msgSend(v8, "maximumValue");

      if (v9 < v7)
      {
        v10 = objc_msgSend(a3, "levelRange");
        LOBYTE(v7) = objc_msgSend(v10, "minimumValue");

      }
      objc_msgSend(a3, "setLevel:", v7);
      sub_10002D4C0();

    }
  }
}

void sub_10002D218()
{
  char *v0;
  char *v1;
  _BYTE *v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;

  v1 = *(char **)&v0[OBJC_IVAR____TtC7Climate26ClimateAutoModeLevelButton_progressView];
  v2 = *(_BYTE **)&v1[OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView];
  v3 = v2[OBJC_IVAR____TtC7Climate13ClimateButton_textOnTopOfSymbol];
  v2[OBJC_IVAR____TtC7Climate13ClimateButton_textOnTopOfSymbol] = 1;
  if ((v3 & 1) == 0)
    objc_msgSend(v2, "setNeedsLayout");
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate13ClimateButton_spaceBetweenSymbolAndTitle] = 0xC000000000000000;
  objc_msgSend(v2, "setNeedsLayout");
  objc_msgSend(v0, "addSubview:", v1);
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = sub_100006058((uint64_t *)&unk_1000B7590);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100088DF0;
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v0, "leadingAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_msgSend(v1, "trailingAnchor");
  v11 = objc_msgSend(v0, "trailingAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v6 + 40) = v12;
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(v0, "topAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v6 + 48) = v15;
  v16 = objc_msgSend(v1, "bottomAnchor");
  v17 = objc_msgSend(v0, "bottomAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v6 + 56) = v18;
  specialized Array._endMutation()(v19);
  sub_100006098();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v4, "activateConstraints:", isa);

}

id sub_10002D4C0()
{
  char *v0;
  void *v1;
  _QWORD *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(id, id, uint64_t, void *);
  id v7;

  v1 = v0;
  v2 = *(_QWORD **)&v0[OBJC_IVAR____TtC7Climate26ClimateAutoModeLevelButton_progressView];
  if ((sub_10002CD78() & 1) != 0)
  {
    if (qword_1000B6F90 != -1)
      swift_once(&qword_1000B6F90, sub_100041F58);
    v3 = (id)qword_1000BC898;
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    if (qword_1000B6F90 != -1)
      swift_once(&qword_1000B6F90, sub_100041F58);
  }
  v4 = objc_msgSend((id)qword_1000BC898, "colorWithAlphaComponent:", 0.25);
  v5 = qword_1000BC898;
  v6 = *(void (**)(id, id, uint64_t, void *))((swift_isaMask & *v2) + 0xD0);
  v7 = (id)qword_1000BC898;
  v6(v3, v4, v5, &_swiftEmptyDictionarySingleton);
  sub_10007813C();
  objc_msgSend(v1, "setEnabled:", (unint64_t)sub_10002CD78() < 8);
  sub_100066A90();
  return sub_100066C24();
}

void sub_10002D6A4()
{
  uint64_t v0;

}

id sub_10002D6B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateAutoModeLevelButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateAutoModeLevelButton()
{
  return objc_opt_self(_TtC7Climate26ClimateAutoModeLevelButton);
}

uint64_t sub_10002D714()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002D738()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10002D764(uint64_t a1)
{
  uint64_t v1;

  sub_10002D11C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

char *sub_10002D76C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  BOOL v5;
  void *v6;
  char *v7;
  char *result;
  char *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  char v32;
  char v33;
  char v34[24];

  v0 = (char *)sub_100012568(1, 0x4036000000000000, 0);
  v1 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v0[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v34, 1, 0);
  v3 = *(_QWORD *)v1;
  v2 = *((_QWORD *)v1 + 1);
  *(_OWORD *)v1 = xmmword_100089B20;
  v4 = v0;
  if (!v2
    || (v3 == 0x6B72616D78 ? (v5 = v2 == 0xE500000000000000) : (v5 = 0),
        !v5 && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6B72616D78, 0xE500000000000000, v3, v2, 0) & 1) == 0))
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v2);
  v6 = (void *)objc_opt_self(UIFont);
  v7 = v4;
  result = (char *)objc_msgSend(v6, "_preferredFontForTextStyle:weight:", UIFontTextStyleFootnote, UIFontWeightSemibold);
  if (result)
  {
    v9 = result;
    v10 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", result, 1);

    v11 = ClimateButton.imageSymbolConfiguration.getter();
    v12 = *(void **)&v7[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration];
    *(_QWORD *)&v7[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = v10;
    v13 = v10;

    v14 = ClimateButton.imageSymbolConfiguration.getter();
    sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
    LOBYTE(v12) = static NSObject.== infix(_:_:)(v14);

    if ((v12 & 1) == 0)
      ClimateButton.updateClimateConfiguration()();

    v15 = &v7[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
    v16 = *(void **)&v7[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
    v17 = *(void **)&v7[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
    v18 = *(_QWORD *)&v7[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16];
    v19 = (void *)objc_opt_self(UIColor);
    v20 = v16;
    v21 = v17;
    v22 = objc_msgSend(v19, "clearColor", swift_bridgeObjectRetain(v18).n128_f64[0]);
    v23 = objc_msgSend(v19, "labelColor");
    v24 = v23;
    if (v22)
    {
      if (v23)
      {
LABEL_13:

        v25 = *(void **)v15;
        v26 = (void *)*((_QWORD *)v15 + 1);
        v27 = *((_QWORD *)v15 + 2);
        *(_QWORD *)v15 = v22;
        *((_QWORD *)v15 + 1) = v24;
        *((_QWORD *)v15 + 2) = v18;
        swift_bridgeObjectRetain_n(v18, 2);
        sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
        v28 = v22;
        v29 = v24;
        v30 = v28;
        v31 = v29;
        if ((static NSObject.== infix(_:_:)(v30) & 1) != 0 && (static NSObject.== infix(_:_:)(v31) & 1) != 0)
        {
          sub_10005B490(v18, v27);
          v33 = v32;
          swift_bridgeObjectRelease(v18);

          if ((v33 & 1) != 0)
            goto LABEL_19;
        }
        else
        {
          swift_bridgeObjectRelease(v18);

        }
        ClimateButton.refreshColorConfig()();
LABEL_19:

        swift_bridgeObjectRelease(v27);
        swift_bridgeObjectRelease(v18);
        return v7;
      }
    }
    else
    {
      v22 = v20;
      if (v24)
        goto LABEL_13;
    }
    v24 = v21;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

id sub_10002DAE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateCloseButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateCloseButton()
{
  return objc_opt_self(_TtC7Climate18ClimateCloseButton);
}

char *sub_10002DB34(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  unsigned int (*v14)(char *, uint64_t, int *);
  char *v15;
  unsigned int (*v16)(char *, uint64_t, int *);
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v72;
  void *v73;
  void (*v74)(char *, _QWORD, uint64_t, int *);
  void *v75;
  unsigned int (*v76)(char *, uint64_t, int *);
  void *v77;
  uint64_t v78;
  void (*v79)(char *, _QWORD, uint64_t, int *);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    v10 = a3[7];
    v11 = &a1[v10];
    v12 = (char *)a2 + v10;
    v13 = (int *)type metadata accessor for ClimateZone(0);
    v78 = *((_QWORD *)v13 - 1);
    v14 = *(unsigned int (**)(char *, uint64_t, int *))(v78 + 48);
    v15 = v4;
    v16 = v14;
    v17 = v8;
    v18 = v9;
    if (v14(v12, 1, v13))
    {
      v19 = sub_100006058((uint64_t *)&unk_1000B7C40);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = type metadata accessor for CAUVehicleLayoutKey(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v11, v12, v20);
      v21 = v13[5];
      v22 = *(_QWORD *)&v12[v21];
      *(_QWORD *)&v11[v21] = v22;
      v23 = v13[6];
      v76 = v14;
      v24 = *(_QWORD *)&v12[v23];
      *(_QWORD *)&v11[v23] = v24;
      v25 = v13[7];
      v26 = *(void **)&v12[v25];
      *(_QWORD *)&v11[v25] = v26;
      v27 = v13[8];
      v28 = *(void **)&v12[v27];
      *(_QWORD *)&v11[v27] = v28;
      v29 = v13[9];
      v30 = *(_QWORD *)&v12[v29];
      *(_QWORD *)&v11[v29] = v30;
      v31 = v13[10];
      v72 = *(void **)&v12[v31];
      *(_QWORD *)&v11[v31] = v72;
      v32 = v13[11];
      v33 = *(void **)&v12[v32];
      *(_QWORD *)&v11[v32] = v33;
      v34 = v13[12];
      v35 = *(void **)&v12[v34];
      *(_QWORD *)&v11[v34] = v35;
      v73 = v33;
      v74 = *(void (**)(char *, _QWORD, uint64_t, int *))(v78 + 56);
      swift_bridgeObjectRetain(v22);
      v36 = v24;
      v16 = v76;
      swift_bridgeObjectRetain(v36);
      v37 = v26;
      v38 = v28;
      swift_bridgeObjectRetain(v30);
      v39 = v72;
      v40 = v73;
      v41 = v35;
      v74(v11, 0, 1, v13);
    }
    v42 = a3[8];
    v43 = &v7[v42];
    v44 = (char *)a2 + v42;
    if (v16((char *)a2 + v42, 1, v13))
    {
      v45 = sub_100006058((uint64_t *)&unk_1000B7C40);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v46 = type metadata accessor for CAUVehicleLayoutKey(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v43, v44, v46);
      v47 = v13[5];
      v48 = *(_QWORD *)&v44[v47];
      *(_QWORD *)&v43[v47] = v48;
      v49 = v13[6];
      v50 = *(_QWORD *)&v44[v49];
      *(_QWORD *)&v43[v49] = v50;
      v51 = v13[7];
      v52 = *(void **)&v44[v51];
      *(_QWORD *)&v43[v51] = v52;
      v53 = v13[8];
      v54 = *(void **)&v44[v53];
      *(_QWORD *)&v43[v53] = v54;
      v55 = v13[9];
      v56 = *(_QWORD *)&v44[v55];
      *(_QWORD *)&v43[v55] = v56;
      v57 = v13[10];
      v75 = *(void **)&v44[v57];
      *(_QWORD *)&v43[v57] = v75;
      v58 = v13[11];
      v59 = *(void **)&v44[v58];
      *(_QWORD *)&v43[v58] = v59;
      v60 = v13[12];
      v61 = *(void **)&v44[v60];
      *(_QWORD *)&v43[v60] = v61;
      v77 = v59;
      v79 = *(void (**)(char *, _QWORD, uint64_t, int *))(v78 + 56);
      swift_bridgeObjectRetain(v48);
      swift_bridgeObjectRetain(v50);
      v62 = v52;
      v63 = v54;
      swift_bridgeObjectRetain(v56);
      v64 = v75;
      v65 = v77;
      v66 = v61;
      v79(v43, 0, 1, v13);
    }
    v67 = a3[9];
    v68 = a3[10];
    v69 = *(uint64_t *)((char *)a2 + v67);
    *(_QWORD *)&v7[v67] = v69;
    v70 = *(uint64_t *)((char *)a2 + v68);
    *(_QWORD *)&v7[v68] = v70;
    swift_bridgeObjectRetain(v69);
    swift_bridgeObjectRetain(v70);
  }
  return v7;
}

uint64_t sub_10002DE44(id *a1, int *a2)
{
  char *v4;
  int *v5;
  unsigned int (*v6)(char *, uint64_t, int *);
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v4 = (char *)a1 + a2[7];
  v5 = (int *)type metadata accessor for ClimateZone(0);
  v6 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    v7 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
    swift_bridgeObjectRelease(*(_QWORD *)&v4[v5[5]]);
    swift_bridgeObjectRelease(*(_QWORD *)&v4[v5[6]]);

    swift_bridgeObjectRelease(*(_QWORD *)&v4[v5[9]]);
  }
  v8 = (char *)a1 + a2[8];
  if (!v6(v8, 1, v5))
  {
    v9 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease(*(_QWORD *)&v8[v5[5]]);
    swift_bridgeObjectRelease(*(_QWORD *)&v8[v5[6]]);

    swift_bridgeObjectRelease(*(_QWORD *)&v8[v5[9]]);
  }
  swift_bridgeObjectRelease(*(id *)((char *)a1 + a2[9]));
  return swift_bridgeObjectRelease(*(id *)((char *)a1 + a2[10]));
}

_QWORD *sub_10002DFE4(_QWORD *a1, uint64_t a2, int *a3)
{
  int *v3;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  unsigned int (*v13)(_QWORD, _QWORD, _QWORD);
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v71;
  void (*v72)(char *, _QWORD, uint64_t, int *);
  unsigned int (*v73)(_QWORD, _QWORD, _QWORD);
  void *v74;
  int *v75;
  int *v76;
  uint64_t v77;
  void (*v78)(char *, _QWORD, uint64_t, int *);

  v3 = a3;
  v7 = *(void **)a2;
  v6 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(void **)(a2 + 16);
  a1[2] = v8;
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for ClimateZone(0);
  v77 = *((_QWORD *)v12 - 1);
  v13 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v77 + 48);
  v14 = v7;
  v15 = v6;
  v16 = v8;
  if (v13(v11, 1, v12))
  {
    v17 = sub_100006058((uint64_t *)&unk_1000B7C40);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
    v19 = v12[5];
    v20 = *(_QWORD *)&v11[v19];
    *(_QWORD *)&v10[v19] = v20;
    v21 = v12[6];
    v73 = v13;
    v75 = v3;
    v22 = *(_QWORD *)&v11[v21];
    *(_QWORD *)&v10[v21] = v22;
    v23 = v12[7];
    v24 = *(void **)&v11[v23];
    *(_QWORD *)&v10[v23] = v24;
    v25 = v12[8];
    v26 = *(void **)&v11[v25];
    *(_QWORD *)&v10[v25] = v26;
    v27 = v12[9];
    v28 = *(_QWORD *)&v11[v27];
    *(_QWORD *)&v10[v27] = v28;
    v29 = v12[10];
    v30 = *(void **)&v11[v29];
    *(_QWORD *)&v10[v29] = v30;
    v31 = v12[11];
    v32 = *(void **)&v11[v31];
    *(_QWORD *)&v10[v31] = v32;
    v33 = v12[12];
    v34 = *(void **)&v11[v33];
    *(_QWORD *)&v10[v33] = v34;
    v71 = v32;
    v72 = *(void (**)(char *, _QWORD, uint64_t, int *))(v77 + 56);
    swift_bridgeObjectRetain(v20);
    v35 = v22;
    v13 = v73;
    swift_bridgeObjectRetain(v35);
    v36 = v24;
    v37 = v26;
    v3 = v75;
    swift_bridgeObjectRetain(v28);
    v38 = v30;
    v39 = v71;
    v40 = v34;
    v72(v10, 0, 1, v12);
  }
  v41 = v3[8];
  v42 = (char *)a1 + v41;
  v43 = (char *)(a2 + v41);
  if (v13(a2 + v41, 1, v12))
  {
    v44 = sub_100006058((uint64_t *)&unk_1000B7C40);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v42, v43, v45);
    v46 = v12[5];
    v47 = *(_QWORD *)&v43[v46];
    *(_QWORD *)&v42[v46] = v47;
    v48 = v12[6];
    v49 = *(_QWORD *)&v43[v48];
    *(_QWORD *)&v42[v48] = v49;
    v50 = v12[7];
    v76 = v3;
    v51 = *(void **)&v43[v50];
    *(_QWORD *)&v42[v50] = v51;
    v52 = v12[8];
    v53 = *(void **)&v43[v52];
    *(_QWORD *)&v42[v52] = v53;
    v54 = v12[9];
    v55 = *(_QWORD *)&v43[v54];
    *(_QWORD *)&v42[v54] = v55;
    v56 = v12[10];
    v57 = *(void **)&v43[v56];
    *(_QWORD *)&v42[v56] = v57;
    v58 = v12[11];
    v74 = *(void **)&v43[v58];
    *(_QWORD *)&v42[v58] = v74;
    v59 = v12[12];
    v60 = *(void **)&v43[v59];
    *(_QWORD *)&v42[v59] = v60;
    v78 = *(void (**)(char *, _QWORD, uint64_t, int *))(v77 + 56);
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRetain(v49);
    v61 = v51;
    v3 = v76;
    v62 = v53;
    swift_bridgeObjectRetain(v55);
    v63 = v57;
    v64 = v74;
    v65 = v60;
    v78(v42, 0, 1, v12);
  }
  v66 = v3[9];
  v67 = v3[10];
  v68 = *(_QWORD *)(a2 + v66);
  *(_QWORD *)((char *)a1 + v66) = v68;
  v69 = *(_QWORD *)(a2 + v67);
  *(_QWORD *)((char *)a1 + v67) = v69;
  swift_bridgeObjectRetain(v68);
  swift_bridgeObjectRetain(v69);
  return a1;
}

uint64_t sub_10002E2C8(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, int *);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  id v93;
  uint64_t v94;
  void *v95;
  void *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  id v104;
  uint64_t v105;
  void *v106;
  void *v107;
  id v108;
  uint64_t v109;
  void *v110;
  void *v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  void *v122;
  id v123;
  uint64_t v124;
  void *v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  void *v133;
  id v134;
  uint64_t v135;
  void *v136;
  void *v137;
  id v138;
  uint64_t v139;
  void *v140;
  void *v141;
  id v142;
  void *v143;
  void *v144;
  void (*v145)(char *, _QWORD, uint64_t, int *);
  void *v146;
  uint64_t v147;
  void (*v148)(char *, _QWORD, uint64_t, int *);
  int *v149;
  int *v150;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 16);
  v13 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  v14 = v12;

  v15 = a3[7];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = (int *)type metadata accessor for ClimateZone(0);
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(char *, uint64_t, int *))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      v23 = type metadata accessor for CAUVehicleLayoutKey(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v16, v17, v23);
      v24 = v18[5];
      v25 = *(_QWORD *)&v17[v24];
      *(_QWORD *)&v16[v24] = v25;
      v26 = v18[6];
      v27 = *(_QWORD *)&v17[v26];
      *(_QWORD *)&v16[v26] = v27;
      v28 = v18[7];
      v29 = *(void **)&v17[v28];
      *(_QWORD *)&v16[v28] = v29;
      v30 = v18[8];
      v147 = v19;
      v149 = a3;
      v31 = *(void **)&v17[v30];
      *(_QWORD *)&v16[v30] = v31;
      v32 = v18[9];
      v33 = *(_QWORD *)&v17[v32];
      *(_QWORD *)&v16[v32] = v33;
      v34 = v18[10];
      v143 = *(void **)&v17[v34];
      *(_QWORD *)&v16[v34] = v143;
      v35 = v18[11];
      v36 = *(void **)&v17[v35];
      *(_QWORD *)&v16[v35] = v36;
      v37 = v18[12];
      v38 = *(void **)&v17[v37];
      *(_QWORD *)&v16[v37] = v38;
      v144 = v36;
      v145 = *(void (**)(char *, _QWORD, uint64_t, int *))(v147 + 56);
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v27);
      v39 = v29;
      v40 = v31;
      v41 = v33;
      v19 = v147;
      a3 = v149;
      swift_bridgeObjectRetain(v41);
      v42 = v143;
      v43 = v144;
      v44 = v38;
      v145(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    sub_10000AB60((uint64_t)v16, type metadata accessor for ClimateZone);
LABEL_6:
    v45 = sub_100006058((uint64_t *)&unk_1000B7C40);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_7;
  }
  v83 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 24))(v16, v17, v83);
  v84 = v18[5];
  v85 = *(_QWORD *)&v17[v84];
  v86 = *(_QWORD *)&v16[v84];
  *(_QWORD *)&v16[v84] = v85;
  swift_bridgeObjectRetain(v85);
  swift_bridgeObjectRelease(v86);
  v87 = v18[6];
  v88 = *(_QWORD *)&v17[v87];
  v89 = *(_QWORD *)&v16[v87];
  *(_QWORD *)&v16[v87] = v88;
  swift_bridgeObjectRetain(v88);
  swift_bridgeObjectRelease(v89);
  v90 = v18[7];
  v91 = *(void **)&v17[v90];
  v92 = *(void **)&v16[v90];
  *(_QWORD *)&v16[v90] = v91;
  v93 = v91;

  v94 = v18[8];
  v95 = *(void **)&v16[v94];
  v96 = *(void **)&v17[v94];
  *(_QWORD *)&v16[v94] = v96;
  v97 = v96;

  v98 = v18[9];
  v99 = *(_QWORD *)&v17[v98];
  v100 = *(_QWORD *)&v16[v98];
  *(_QWORD *)&v16[v98] = v99;
  swift_bridgeObjectRetain(v99);
  swift_bridgeObjectRelease(v100);
  v101 = v18[10];
  v102 = *(void **)&v16[v101];
  v103 = *(void **)&v17[v101];
  *(_QWORD *)&v16[v101] = v103;
  v104 = v103;

  v105 = v18[11];
  v106 = *(void **)&v16[v105];
  v107 = *(void **)&v17[v105];
  *(_QWORD *)&v16[v105] = v107;
  v108 = v107;

  v109 = v18[12];
  v110 = *(void **)&v16[v109];
  v111 = *(void **)&v17[v109];
  *(_QWORD *)&v16[v109] = v111;
  v112 = v111;

LABEL_7:
  v46 = a3[8];
  v47 = (char *)(a1 + v46);
  v48 = (char *)(a2 + v46);
  v49 = v20((char *)(a1 + v46), 1, v18);
  v50 = v20(v48, 1, v18);
  if (!v49)
  {
    if (!v50)
    {
      v113 = type metadata accessor for CAUVehicleLayoutKey(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 24))(v47, v48, v113);
      v114 = v18[5];
      v115 = *(_QWORD *)&v48[v114];
      v116 = *(_QWORD *)&v47[v114];
      *(_QWORD *)&v47[v114] = v115;
      swift_bridgeObjectRetain(v115);
      swift_bridgeObjectRelease(v116);
      v117 = v18[6];
      v118 = *(_QWORD *)&v48[v117];
      v119 = *(_QWORD *)&v47[v117];
      *(_QWORD *)&v47[v117] = v118;
      swift_bridgeObjectRetain(v118);
      swift_bridgeObjectRelease(v119);
      v120 = v18[7];
      v121 = *(void **)&v48[v120];
      v122 = *(void **)&v47[v120];
      *(_QWORD *)&v47[v120] = v121;
      v123 = v121;

      v124 = v18[8];
      v125 = *(void **)&v47[v124];
      v126 = *(void **)&v48[v124];
      *(_QWORD *)&v47[v124] = v126;
      v127 = v126;

      v128 = v18[9];
      v129 = *(_QWORD *)&v48[v128];
      v130 = *(_QWORD *)&v47[v128];
      *(_QWORD *)&v47[v128] = v129;
      swift_bridgeObjectRetain(v129);
      swift_bridgeObjectRelease(v130);
      v131 = v18[10];
      v132 = *(void **)&v47[v131];
      v133 = *(void **)&v48[v131];
      *(_QWORD *)&v47[v131] = v133;
      v134 = v133;

      v135 = v18[11];
      v136 = *(void **)&v47[v135];
      v137 = *(void **)&v48[v135];
      *(_QWORD *)&v47[v135] = v137;
      v138 = v137;

      v139 = v18[12];
      v140 = *(void **)&v47[v139];
      v141 = *(void **)&v48[v139];
      *(_QWORD *)&v47[v139] = v141;
      v142 = v141;

      goto LABEL_13;
    }
    sub_10000AB60((uint64_t)v47, type metadata accessor for ClimateZone);
    goto LABEL_12;
  }
  if (v50)
  {
LABEL_12:
    v75 = sub_100006058((uint64_t *)&unk_1000B7C40);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_13;
  }
  v51 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v47, v48, v51);
  v52 = v18[5];
  v53 = *(_QWORD *)&v48[v52];
  *(_QWORD *)&v47[v52] = v53;
  v54 = v18[6];
  v55 = *(_QWORD *)&v48[v54];
  *(_QWORD *)&v47[v54] = v55;
  v56 = v18[7];
  v57 = v19;
  v58 = *(void **)&v48[v56];
  *(_QWORD *)&v47[v56] = v58;
  v59 = v18[8];
  v60 = *(void **)&v48[v59];
  *(_QWORD *)&v47[v59] = v60;
  v61 = v18[9];
  v150 = a3;
  v62 = *(_QWORD *)&v48[v61];
  *(_QWORD *)&v47[v61] = v62;
  v63 = v18[10];
  v64 = *(void **)&v48[v63];
  *(_QWORD *)&v47[v63] = v64;
  v65 = v18[11];
  v66 = *(void **)&v48[v65];
  *(_QWORD *)&v47[v65] = v66;
  v67 = v18[12];
  v68 = *(void **)&v48[v67];
  *(_QWORD *)&v47[v67] = v68;
  v146 = v66;
  v148 = *(void (**)(char *, _QWORD, uint64_t, int *))(v57 + 56);
  swift_bridgeObjectRetain(v53);
  swift_bridgeObjectRetain(v55);
  v69 = v58;
  v70 = v60;
  v71 = v62;
  a3 = v150;
  swift_bridgeObjectRetain(v71);
  v72 = v64;
  v73 = v146;
  v74 = v68;
  v148(v47, 0, 1, v18);
LABEL_13:
  v76 = a3[9];
  v77 = *(_QWORD *)(a2 + v76);
  v78 = *(_QWORD *)(a1 + v76);
  *(_QWORD *)(a1 + v76) = v77;
  swift_bridgeObjectRetain(v77);
  swift_bridgeObjectRelease(v78);
  v79 = a3[10];
  v80 = *(_QWORD *)(a2 + v79);
  v81 = *(_QWORD *)(a1 + v79);
  *(_QWORD *)(a1 + v79) = v80;
  swift_bridgeObjectRetain(v80);
  swift_bridgeObjectRelease(v81);
  return a1;
}

uint64_t sub_10002E818(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, int *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = (int *)type metadata accessor for ClimateZone(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(unsigned int (**)(char *, uint64_t, int *))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = sub_100006058((uint64_t *)&unk_1000B7C40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
    *(_QWORD *)&v7[v9[5]] = *(_QWORD *)&v8[v9[5]];
    *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
    *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
    *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
    *(_QWORD *)&v7[v9[9]] = *(_QWORD *)&v8[v9[9]];
    *(_QWORD *)&v7[v9[10]] = *(_QWORD *)&v8[v9[10]];
    *(_QWORD *)&v7[v9[11]] = *(_QWORD *)&v8[v9[11]];
    *(_QWORD *)&v7[v9[12]] = *(_QWORD *)&v8[v9[12]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v14 = a3[8];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  if (v11((char *)(a2 + v14), 1, v9))
  {
    v17 = sub_100006058((uint64_t *)&unk_1000B7C40);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
    *(_QWORD *)&v15[v9[5]] = *(_QWORD *)&v16[v9[5]];
    *(_QWORD *)&v15[v9[6]] = *(_QWORD *)&v16[v9[6]];
    *(_QWORD *)&v15[v9[7]] = *(_QWORD *)&v16[v9[7]];
    *(_QWORD *)&v15[v9[8]] = *(_QWORD *)&v16[v9[8]];
    *(_QWORD *)&v15[v9[9]] = *(_QWORD *)&v16[v9[9]];
    *(_QWORD *)&v15[v9[10]] = *(_QWORD *)&v16[v9[10]];
    *(_QWORD *)&v15[v9[11]] = *(_QWORD *)&v16[v9[11]];
    *(_QWORD *)&v15[v9[12]] = *(_QWORD *)&v16[v9[12]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v15, 0, 1, v9);
  }
  v19 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  return a1;
}

uint64_t sub_10002EA48(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, int *);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  v9 = a3[7];
  v10 = (char *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = (int *)type metadata accessor for ClimateZone(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(char *, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      v17 = type metadata accessor for CAUVehicleLayoutKey(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
      *(_QWORD *)&v10[v12[5]] = *(_QWORD *)&v11[v12[5]];
      *(_QWORD *)&v10[v12[6]] = *(_QWORD *)&v11[v12[6]];
      *(_QWORD *)&v10[v12[7]] = *(_QWORD *)&v11[v12[7]];
      *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
      *(_QWORD *)&v10[v12[9]] = *(_QWORD *)&v11[v12[9]];
      *(_QWORD *)&v10[v12[10]] = *(_QWORD *)&v11[v12[10]];
      *(_QWORD *)&v10[v12[11]] = *(_QWORD *)&v11[v12[11]];
      *(_QWORD *)&v10[v12[12]] = *(_QWORD *)&v11[v12[12]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_10000AB60((uint64_t)v10, type metadata accessor for ClimateZone);
LABEL_6:
    v18 = sub_100006058((uint64_t *)&unk_1000B7C40);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v31 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v10, v11, v31);
  v32 = v12[5];
  v33 = *(_QWORD *)&v10[v32];
  *(_QWORD *)&v10[v32] = *(_QWORD *)&v11[v32];
  swift_bridgeObjectRelease(v33);
  v34 = v12[6];
  v35 = *(_QWORD *)&v10[v34];
  *(_QWORD *)&v10[v34] = *(_QWORD *)&v11[v34];
  swift_bridgeObjectRelease(v35);
  v36 = v12[7];
  v37 = *(void **)&v10[v36];
  *(_QWORD *)&v10[v36] = *(_QWORD *)&v11[v36];

  v38 = v12[8];
  v39 = *(void **)&v10[v38];
  *(_QWORD *)&v10[v38] = *(_QWORD *)&v11[v38];

  v40 = v12[9];
  v41 = *(_QWORD *)&v10[v40];
  *(_QWORD *)&v10[v40] = *(_QWORD *)&v11[v40];
  swift_bridgeObjectRelease(v41);
  v42 = v12[10];
  v43 = *(void **)&v10[v42];
  *(_QWORD *)&v10[v42] = *(_QWORD *)&v11[v42];

  v44 = v12[11];
  v45 = *(void **)&v10[v44];
  *(_QWORD *)&v10[v44] = *(_QWORD *)&v11[v44];

  v46 = v12[12];
  v47 = *(void **)&v10[v46];
  *(_QWORD *)&v10[v46] = *(_QWORD *)&v11[v46];

LABEL_7:
  v19 = a3[8];
  v20 = (char *)(a1 + v19);
  v21 = (char *)a2 + v19;
  v22 = v14((char *)(a1 + v19), 1, v12);
  v23 = v14(v21, 1, v12);
  if (!v22)
  {
    if (!v23)
    {
      v48 = type metadata accessor for CAUVehicleLayoutKey(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 40))(v20, v21, v48);
      v49 = v12[5];
      v50 = *(_QWORD *)&v20[v49];
      *(_QWORD *)&v20[v49] = *(_QWORD *)&v21[v49];
      swift_bridgeObjectRelease(v50);
      v51 = v12[6];
      v52 = *(_QWORD *)&v20[v51];
      *(_QWORD *)&v20[v51] = *(_QWORD *)&v21[v51];
      swift_bridgeObjectRelease(v52);
      v53 = v12[7];
      v54 = *(void **)&v20[v53];
      *(_QWORD *)&v20[v53] = *(_QWORD *)&v21[v53];

      v55 = v12[8];
      v56 = *(void **)&v20[v55];
      *(_QWORD *)&v20[v55] = *(_QWORD *)&v21[v55];

      v57 = v12[9];
      v58 = *(_QWORD *)&v20[v57];
      *(_QWORD *)&v20[v57] = *(_QWORD *)&v21[v57];
      swift_bridgeObjectRelease(v58);
      v59 = v12[10];
      v60 = *(void **)&v20[v59];
      *(_QWORD *)&v20[v59] = *(_QWORD *)&v21[v59];

      v61 = v12[11];
      v62 = *(void **)&v20[v61];
      *(_QWORD *)&v20[v61] = *(_QWORD *)&v21[v61];

      v63 = v12[12];
      v64 = *(void **)&v20[v63];
      *(_QWORD *)&v20[v63] = *(_QWORD *)&v21[v63];

      goto LABEL_13;
    }
    sub_10000AB60((uint64_t)v20, type metadata accessor for ClimateZone);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v25 = sub_100006058((uint64_t *)&unk_1000B7C40);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  v24 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v20, v21, v24);
  *(_QWORD *)&v20[v12[5]] = *(_QWORD *)&v21[v12[5]];
  *(_QWORD *)&v20[v12[6]] = *(_QWORD *)&v21[v12[6]];
  *(_QWORD *)&v20[v12[7]] = *(_QWORD *)&v21[v12[7]];
  *(_QWORD *)&v20[v12[8]] = *(_QWORD *)&v21[v12[8]];
  *(_QWORD *)&v20[v12[9]] = *(_QWORD *)&v21[v12[9]];
  *(_QWORD *)&v20[v12[10]] = *(_QWORD *)&v21[v12[10]];
  *(_QWORD *)&v20[v12[11]] = *(_QWORD *)&v21[v12[11]];
  *(_QWORD *)&v20[v12[12]] = *(_QWORD *)&v21[v12[12]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(v20, 0, 1, v12);
LABEL_13:
  v26 = a3[9];
  v27 = *(_QWORD *)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)((char *)a2 + v26);
  swift_bridgeObjectRelease(v27);
  v28 = a3[10];
  v29 = *(_QWORD *)(a1 + v28);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  swift_bridgeObjectRelease(v29);
  return a1;
}

uint64_t sub_10002EE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002EEA0);
}

uint64_t sub_10002EEA0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100006058((uint64_t *)&unk_1000B7C40);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_10002EF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002EF2C);
}

char *sub_10002EF2C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100006058((uint64_t *)&unk_1000B7C40);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ClimateSystemManager(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B8520;
  if (!qword_1000B8520)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateSystemManager);
  return result;
}

void sub_10002EFE0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10002F06C(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    v7 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8 = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

void sub_10002F06C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1000B8530)
  {
    v2 = type metadata accessor for ClimateZone(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1000B8530);
  }
}

uint64_t sub_10002F0C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ClimateZone(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_100008B88(a1, (uint64_t *)&unk_1000B7C40);
    sub_100029330(a2, (uint64_t)v8);
    v14 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_100008B88((uint64_t)v8, (uint64_t *)&unk_1000B7C40);
  }
  else
  {
    sub_100018D10(a1, (uint64_t)v12, type metadata accessor for ClimateZone);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v20 = *v3;
    *v3 = 0x8000000000000000;
    sub_10002AEF8((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    v17 = *v3;
    *v3 = v20;
    swift_bridgeObjectRelease(v17);
    v18 = type metadata accessor for CAUVehicleLayoutKey(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a2, v18);
  }
}

uint64_t sub_10002F240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  _BOOL8 v14;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for ClimateSystemManager(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - v9;
  sub_100020FF0(v1 + *(int *)(v2 + 28), (uint64_t)&v16 - v9);
  v11 = type metadata accessor for ClimateZone(0);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  v13 = v12(v10, 1, v11);
  sub_100008B88((uint64_t)v10, (uint64_t *)&unk_1000B7C40);
  sub_10000AAD8(v1, (uint64_t)v4, type metadata accessor for ClimateSystemManager);
  if (v13 == 1)
  {
    sub_100020FF0((uint64_t)&v4[*(int *)(v2 + 32)], (uint64_t)v7);
    sub_10000AB60((uint64_t)v4, type metadata accessor for ClimateSystemManager);
    v14 = v12(v7, 1, v11) != 1;
    sub_100008B88((uint64_t)v7, (uint64_t *)&unk_1000B7C40);
  }
  else
  {
    sub_10000AB60((uint64_t)v4, type metadata accessor for ClimateSystemManager);
    return 1;
  }
  return v14;
}

void sub_10002F3D8()
{
  id v0;
  id v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  char *v6;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "delegate");

  if (v1)
  {
    v2 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v1, v2, 0, 0, 0);
    v3 = (char *)sub_10006B490();
    swift_unknownObjectRelease(v1);
    v4 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC7Climate18ClimateCoordinator_sessionStatus], "currentSession");
    v5 = v4;
    if (v4)
    {
      v6 = (char *)objc_msgSend(v4, "configuration");

      objc_msgSend(v6, "rightHandDrive");
      v3 = v6;
    }

  }
  else
  {
    __break(1u);
  }
}

double sub_10002F4E0@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, _QWORD, uint64_t, __n128);
  uint64_t v23;
  unint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t);
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  double result;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;

  v4 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v4);
  v44 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - v7;
  v9 = type metadata accessor for CAUVehicleLayoutKey(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v45 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - v13;
  v15 = type metadata accessor for ClimateZone(0);
  v16 = *(_QWORD **)(v15 - 8);
  __chkstk_darwin(v15);
  v43 = (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v43 - v20;
  v22 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104);
  v22(v14, enum case for CAUVehicleLayoutKey.seat_front_left(_:), v9, v19);
  v23 = *(_QWORD *)(a1 + 16);
  v46 = a2;
  if (v23 && (v24 = sub_10005B798((uint64_t)v14), (v25 & 1) != 0))
  {
    sub_10000AAD8(*(_QWORD *)(a1 + 56) + v16[9] * v24, (uint64_t)v8, type metadata accessor for ClimateZone);
    v26 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v16[7];
    v26(v8, 0, 1, v15);
  }
  else
  {
    v26 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v16[7];
    v26(v8, 1, 1, v15);
  }
  v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27(v14, v9);
  v28 = (unsigned int (*)(char *, uint64_t, uint64_t))v16[6];
  if (v28(v8, 1, v15) != 1)
  {
    sub_100018D10((uint64_t)v8, (uint64_t)v21, type metadata accessor for ClimateZone);
    v35 = v46;
    v46[3] = v15;
    v35[4] = &off_10009F4D0;
    v36 = sub_1000318E8(v35);
    v37 = (uint64_t)v21;
    goto LABEL_11;
  }
  sub_100008B88((uint64_t)v8, (uint64_t *)&unk_1000B7C40);
  sub_10002F3D8();
  if ((v29 & 1) == 0)
  {
    v30 = (uint64_t)v45;
    ((void (*)(char *, _QWORD, uint64_t))v22)(v45, enum case for CAUVehicleLayoutKey.seat_front(_:), v9);
    if (*(_QWORD *)(a1 + 16))
    {
      v31 = sub_10005B798(v30);
      v32 = v44;
      if ((v33 & 1) != 0)
      {
        sub_10000AAD8(*(_QWORD *)(a1 + 56) + v16[9] * v31, v44, type metadata accessor for ClimateZone);
        v34 = 0;
      }
      else
      {
        v34 = 1;
      }
    }
    else
    {
      v34 = 1;
      v32 = v44;
    }
    v26((char *)v32, v34, 1, v15);
    v27((char *)v30, v9);
    if (v28((char *)v32, 1, v15) == 1)
    {
      sub_100008B88(v32, (uint64_t *)&unk_1000B7C40);
      goto LABEL_16;
    }
    v40 = v32;
    v41 = v43;
    sub_100018D10(v40, v43, type metadata accessor for ClimateZone);
    v42 = v46;
    v46[3] = v15;
    v42[4] = &off_10009F4D0;
    v36 = sub_1000318E8(v42);
    v37 = v41;
LABEL_11:
    sub_100018D10(v37, (uint64_t)v36, type metadata accessor for ClimateZone);
    return result;
  }
LABEL_16:
  v39 = v46;
  v46[4] = 0;
  result = 0.0;
  *v39 = 0u;
  v39[1] = 0u;
  return result;
}

double sub_10002F824@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, _QWORD, uint64_t, __n128);
  uint64_t v23;
  unint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t);
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  double result;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;

  v4 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v4);
  v44 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - v7;
  v9 = type metadata accessor for CAUVehicleLayoutKey(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v45 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - v13;
  v15 = type metadata accessor for ClimateZone(0);
  v16 = *(_QWORD **)(v15 - 8);
  __chkstk_darwin(v15);
  v43 = (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v43 - v20;
  v22 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104);
  v22(v14, enum case for CAUVehicleLayoutKey.seat_front_right(_:), v9, v19);
  v23 = *(_QWORD *)(a1 + 16);
  v46 = a2;
  if (v23 && (v24 = sub_10005B798((uint64_t)v14), (v25 & 1) != 0))
  {
    sub_10000AAD8(*(_QWORD *)(a1 + 56) + v16[9] * v24, (uint64_t)v8, type metadata accessor for ClimateZone);
    v26 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v16[7];
    v26(v8, 0, 1, v15);
  }
  else
  {
    v26 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v16[7];
    v26(v8, 1, 1, v15);
  }
  v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27(v14, v9);
  v28 = (unsigned int (*)(char *, uint64_t, uint64_t))v16[6];
  if (v28(v8, 1, v15) != 1)
  {
    sub_100018D10((uint64_t)v8, (uint64_t)v21, type metadata accessor for ClimateZone);
    v35 = v46;
    v46[3] = v15;
    v35[4] = &off_10009F4D0;
    v36 = sub_1000318E8(v35);
    v37 = (uint64_t)v21;
    goto LABEL_11;
  }
  sub_100008B88((uint64_t)v8, (uint64_t *)&unk_1000B7C40);
  sub_10002F3D8();
  if ((v29 & 1) != 0)
  {
    v30 = (uint64_t)v45;
    ((void (*)(char *, _QWORD, uint64_t))v22)(v45, enum case for CAUVehicleLayoutKey.seat_front(_:), v9);
    if (*(_QWORD *)(a1 + 16))
    {
      v31 = sub_10005B798(v30);
      v32 = v44;
      if ((v33 & 1) != 0)
      {
        sub_10000AAD8(*(_QWORD *)(a1 + 56) + v16[9] * v31, v44, type metadata accessor for ClimateZone);
        v34 = 0;
      }
      else
      {
        v34 = 1;
      }
    }
    else
    {
      v34 = 1;
      v32 = v44;
    }
    v26((char *)v32, v34, 1, v15);
    v27((char *)v30, v9);
    if (v28((char *)v32, 1, v15) == 1)
    {
      sub_100008B88(v32, (uint64_t *)&unk_1000B7C40);
      goto LABEL_16;
    }
    v40 = v32;
    v41 = v43;
    sub_100018D10(v40, v43, type metadata accessor for ClimateZone);
    v42 = v46;
    v46[3] = v15;
    v42[4] = &off_10009F4D0;
    v36 = sub_1000318E8(v42);
    v37 = v41;
LABEL_11:
    sub_100018D10(v37, (uint64_t)v36, type metadata accessor for ClimateZone);
    return result;
  }
LABEL_16:
  v39 = v46;
  v46[4] = 0;
  result = 0.0;
  *v39 = 0u;
  v39[1] = 0u;
  return result;
}

uint64_t sub_10002FB68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, _QWORD, uint64_t);
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  _QWORD *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  char *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  _QWORD *v105;
  int *v106;
  char *v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119[3];
  uint64_t v120;
  void *v121;

  v110 = type metadata accessor for CAUVehicleLayoutKey(0);
  v4 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v117 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v116 = (char *)&v99 - v7;
  v8 = sub_100006058(&qword_1000B8580);
  __chkstk_darwin(v8);
  v10 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for ClimateDefrost(0);
  v118 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v114 = (uint64_t)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v113 = (uint64_t)&v99 - v13;
  v14 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v14);
  v16 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v99 - v18;
  v20 = type metadata accessor for ClimateSystemManager(0);
  v21 = *(_QWORD *)(v20 - 8);
  *(_QWORD *)&v22 = __chkstk_darwin(v20).n128_u64[0];
  v24 = (id *)((char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = objc_msgSend(a1, "climate", v22);
  if (!v25)
    goto LABEL_8;
  v26 = v25;
  v107 = v19;
  v27 = objc_msgSend(a1, "positionManager");
  if (!v27)
  {

LABEL_8:
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(a2, 1, 1, v20);
  }
  v28 = v27;
  v104 = v16;
  v105 = v24;
  v106 = (int *)v20;
  *v24 = a1;
  v24[1] = v26;
  v24[2] = v27;
  v121 = &_swiftEmptyDictionarySingleton;
  v99 = a1;
  v108 = v26;
  v109 = v28;
  v29 = sub_100023840();
  v30 = v29;
  v31 = *(_QWORD *)(v29 + 16);
  v112 = v4;
  v101 = a2;
  v100 = v21;
  if (v31)
  {
    v32 = *(unsigned __int8 *)(v4 + 80);
    v33 = (v32 + 32) & ~v32;
    v34 = v29 + v33;
    v35 = *(_QWORD *)(v4 + 72);
    v37 = v108;
    v36 = (uint64_t)v109;
    do
    {
      sub_100030638(v34, v36, v37, (uint64_t)&v121);
      v34 += v35;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease(v30);
    v4 = v112;
  }
  else
  {
    swift_bridgeObjectRelease(v29);
    v35 = *(_QWORD *)(v4 + 72);
    v32 = *(unsigned __int8 *)(v4 + 80);
    v33 = (v32 + 32) & ~v32;
  }
  v39 = sub_100006058((uint64_t *)&unk_1000B7FE0);
  v40 = swift_allocObject(v39, v33 + v35 + 4 * v35, v32 | 7);
  *(_OWORD *)(v40 + 16) = xmmword_100089B50;
  v41 = v40 + v33;
  v42 = *(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104);
  v43 = v110;
  v42(v41, enum case for CAUVehicleLayoutKey.windshield_front(_:), v110);
  v42(v41 + v35, enum case for CAUVehicleLayoutKey.windshield_rear(_:), v43);
  v42(v41 + 2 * v35, enum case for CAUVehicleLayoutKey.mirror_leftSide(_:), v43);
  v111 = v35;
  v44 = v43;
  v42(v41 + 3 * v35, enum case for CAUVehicleLayoutKey.mirror_rightSide(_:), v43);
  v42(v41 + 4 * v35, enum case for CAUVehicleLayoutKey.mirror_sides(_:), v43);
  v103 = v40;
  v45 = swift_bridgeObjectRetain(v40);
  v46 = &_swiftEmptyDictionarySingleton;
  v47 = 5;
  v102 = v41;
  v48 = v109;
  do
  {
    v50 = CAFPositionManager.services(for:includeSharedServices:requireSpecificServices:filter:)(v41, 1, 1, sub_100031120, 0, v45);
    v51 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v52 = (uint64_t)v116;
    v51(v116, v41, v44);
    sub_100077288(v50, v52, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v10, 1, v115) == 1)
    {
      sub_100008B88((uint64_t)v10, &qword_1000B8580);
      v49 = v111;
      v4 = v112;
    }
    else
    {
      v53 = v113;
      sub_100018D10((uint64_t)v10, v113, type metadata accessor for ClimateDefrost);
      v54 = (uint64_t)v117;
      v51(v117, v41, v44);
      sub_10000AAD8(v53, v114, type metadata accessor for ClimateDefrost);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v46);
      v119[0] = (uint64_t)v46;
      v57 = sub_10005B798(v54);
      v58 = v46[2];
      v59 = (v56 & 1) == 0;
      v60 = v58 + v59;
      if (__OFADD__(v58, v59))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      v61 = v56;
      if (v46[3] >= v60)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_10002B604();
      }
      else
      {
        sub_100029938(v60, isUniquelyReferenced_nonNull_native);
        v62 = sub_10005B798((uint64_t)v117);
        if ((v61 & 1) != (v63 & 1))
          goto LABEL_36;
        v57 = v62;
      }
      v49 = v111;
      v46 = (_QWORD *)v119[0];
      if ((v61 & 1) != 0)
      {
        sub_1000318A4(v114, *(_QWORD *)(v119[0] + 56) + *(_QWORD *)(v118 + 72) * v57);
      }
      else
      {
        *(_QWORD *)(v119[0] + 8 * (v57 >> 6) + 64) |= 1 << v57;
        v51((char *)(v46[6] + v57 * v49), (uint64_t)v117, v110);
        sub_100018D10(v114, v46[7] + *(_QWORD *)(v118 + 72) * v57, type metadata accessor for ClimateDefrost);
        v64 = v46[2];
        v65 = __OFADD__(v64, 1);
        v66 = v64 + 1;
        if (v65)
          goto LABEL_34;
        v46[2] = v66;
        v46 = (_QWORD *)v119[0];
      }
      swift_bridgeObjectRelease(0x8000000000000000);
      v4 = v112;
      v44 = v110;
      (*(void (**)(char *, uint64_t))(v112 + 8))(v117, v110);
      sub_10000AB60(v113, type metadata accessor for ClimateDefrost);
      v48 = v109;
    }
    v41 += v49;
    --v47;
  }
  while (v47);
  v67 = v103;
  swift_bridgeObjectRelease(v103);
  swift_setDeallocating(v67);
  swift_arrayDestroy(v102, *(_QWORD *)(v67 + 16), v44);
  swift_deallocClassInstance(v67, 32, 7);
  v68 = (uint64_t)v121;
  v70 = (uint64_t)v105;
  v69 = v106;
  *(_QWORD *)((char *)v105 + v106[9]) = v121;
  *(_QWORD *)(v70 + v69[10]) = v46;
  swift_bridgeObjectRetain_n(v68, 2);
  swift_bridgeObjectRetain(v46);
  sub_10002F4E0(v68, v119);
  swift_bridgeObjectRelease(v68);
  if (v120)
  {
    v71 = sub_100006058(&qword_1000B8590);
    v72 = type metadata accessor for ClimateZone(0);
    v73 = v71;
    v74 = (uint64_t)v107;
    v75 = swift_dynamicCast(v107, v119, v73, v72, 6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v74, v75 ^ 1u, 1, v72);
  }
  else
  {
    sub_100008B88((uint64_t)v119, &qword_1000B8588);
    v76 = type metadata accessor for ClimateZone(0);
    v74 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v107, 1, 1, v76);
  }
  v77 = v108;
  v78 = (uint64_t)v104;
  sub_10003185C(v74, v70 + v69[7]);
  v79 = v121;
  swift_bridgeObjectRetain(v121);
  sub_10002F824(v80, v119);
  swift_bridgeObjectRelease(v79);
  if (v120)
  {
    v81 = sub_100006058(&qword_1000B8590);
    v82 = type metadata accessor for ClimateZone(0);
    v83 = swift_dynamicCast(v78, v119, v81, v82, 6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v78, v83 ^ 1u, 1, v82);
  }
  else
  {
    sub_100008B88((uint64_t)v119, &qword_1000B8588);
    v84 = type metadata accessor for ClimateZone(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v78, 1, 1, v84);
  }
  sub_10003185C(v78, v70 + v69[8]);
  v85 = v121;
  swift_bridgeObjectRetain(v121);
  sub_10003116C(v86, type metadata accessor for ClimateZone);
  v88 = v87;
  swift_bridgeObjectRelease(v85);
  v119[0] = v88;
  swift_bridgeObjectRetain(v46);
  sub_10003116C(v89, type metadata accessor for ClimateDefrost);
  v91 = v90;
  swift_bridgeObjectRelease(v46);
  sub_100072F54(v91);
  v92 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v93 = objc_msgSend(v92, "delegate");

  if (v93)
  {
    v94 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v93, v94, 0, 0, 0);
    v95 = (char *)sub_10006B490();
    swift_unknownObjectRelease(v93);
    v96 = *(id *)&v95[OBJC_IVAR____TtC7Climate18ClimateCoordinator_signpostManager];

    v97 = v119[0];
    sub_10006FB50(v119[0]);

    swift_bridgeObjectRelease(v97);
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v121);
    v98 = v101;
    sub_100018D10(v70, v101, type metadata accessor for ClimateSystemManager);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v100 + 56))(v98, 0, 1, v69);
  }
LABEL_35:
  __break(1u);
LABEL_36:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v110);
  __break(1u);
  return result;
}

uint64_t sub_1000304DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;

  v3 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - v7;
  sub_10002F3D8();
  v10 = v9;
  v11 = type metadata accessor for ClimateSystemManager(0);
  v12 = v11;
  if ((v10 & 1) != 0)
  {
    v13 = v1 + *(int *)(v11 + 32);
    sub_100020FF0(v13, (uint64_t)v8);
    v14 = type metadata accessor for ClimateZone(0);
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v8, 1, v14);
    sub_100008B88((uint64_t)v8, (uint64_t *)&unk_1000B7C40);
    if (v15 == 1)
    {
      v16 = 7;
LABEL_6:
      v13 = v1 + *(int *)(v12 + 4 * v16);
    }
  }
  else
  {
    v13 = v1 + *(int *)(v11 + 28);
    sub_100020FF0(v13, (uint64_t)v5);
    v17 = type metadata accessor for ClimateZone(0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v5, 1, v17);
    sub_100008B88((uint64_t)v5, (uint64_t *)&unk_1000B7C40);
    if (v18 == 1)
    {
      v16 = 8;
      goto LABEL_6;
    }
  }
  return sub_100020FF0(v13, a1);
}

void sub_100030638(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  void (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  void (*v38)(_QWORD, _QWORD, _QWORD);
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  _QWORD *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  __objc2_prot **v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  const char *v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  Swift::String v90;
  void *object;
  Swift::Bool v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  void (*v95)(_QWORD, _QWORD, _QWORD);
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  __objc2_prot **v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  void *v105;
  uint64_t v106;
  Swift::String v107;
  void (*v108)(_QWORD, _QWORD, _QWORD);
  void *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void (*v113)(char *, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int v122;
  void *v123;
  uint64_t v124;
  void (*v125)(char *, unint64_t, uint64_t);
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, unint64_t, uint64_t);
  char *v135;
  uint64_t v136;
  char *v137;
  _QWORD *v138;
  void (*v139)(_QWORD, _QWORD, _QWORD);
  char *v140;
  uint64_t v141;
  void (*v142)(char *, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v129 = a4;
  v6 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v6);
  v128 = (uint64_t)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v131 = (uint64_t)&v121 - v9;
  v10 = type metadata accessor for ClimateZone(0);
  v132 = *(_QWORD *)(v10 - 8);
  v133 = v10;
  __chkstk_darwin(v10);
  v127 = (uint64_t)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for CAUVehicleLayoutKey(0);
  v138 = *(_QWORD **)(v141 - 8);
  __chkstk_darwin(v141);
  v137 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v121 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v121 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v121 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v121 - v23;
  v26 = __chkstk_darwin(v25);
  v135 = (char *)&v121 - v27;
  v147 = CAFPositionManager.services(for:includeSharedServices:requireSpecificServices:filter:)(a1, 1, 1, sub_100031098, 0, v26);
  v28 = objc_msgSend(a3, "steeringWheelHeatingCooling");
  if (!v28)
    goto LABEL_43;
  v29 = v28;
  v30 = CAFPositionManager.layoutKeys.getter();
  sub_10002F3D8();
  v126 = v29;
  v130 = v30;
  if ((v31 & 1) == 0)
  {
    v37 = v138;
    v38 = (void (*)(_QWORD, _QWORD, _QWORD))v138[13];
    v39 = v141;
    goto LABEL_17;
  }
  v32 = v138;
  v33 = (void (*)(_QWORD))v138[13];
  v122 = enum case for CAUVehicleLayoutKey.seat_front_right(_:);
  v34 = v141;
  v139 = (void (*)(_QWORD, _QWORD, _QWORD))v33;
  v33(v24);
  v134 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
  if (!v134)
  {
    v40 = (void (*)(char *, uint64_t))v32[1];
    v37 = v32;
    goto LABEL_16;
  }
  v140 = v18;
  v121 = (*((unsigned __int8 *)v32 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v32 + 80);
  v125 = (void (*)(char *, unint64_t, uint64_t))v32[2];
  v125(v21, v30 + v121, v34);
  v35 = sub_1000052AC((unint64_t *)&qword_1000B7340, (uint64_t (*)(uint64_t))&type metadata accessor for CAUVehicleLayoutKey, (uint64_t)&protocol conformance descriptor for CAUVehicleLayoutKey);
  swift_bridgeObjectRetain(v30);
  v124 = v35;
  v36 = dispatch thunk of static Equatable.== infix(_:_:)(v21, v24, v34, v35);
  v142 = (void (*)(char *, uint64_t))v32[1];
  v142(v21, v34);
  if ((v36 & 1) != 0)
  {
    swift_bridgeObjectRelease(v30);
LABEL_33:
    v59 = v141;
    v53 = v142;
    v142(v24, v141);
    v61 = v135;
    v62 = v135;
    v63 = (char *)&v148 + 4;
    goto LABEL_34;
  }
  if (v134 == (void (*)(char *, unint64_t, uint64_t))1)
  {
    swift_bridgeObjectRelease(v130);
    v37 = v138;
    goto LABEL_15;
  }
  v123 = a3;
  v136 = a1;
  v41 = v138[9];
  v42 = v130 + v41 + v121;
  v43 = 1;
  v44 = v141;
  do
  {
    v125(v21, v42, v44);
    a1 = v43 + 1;
    if (__OFADD__(v43, 1))
      goto LABEL_61;
    v45 = dispatch thunk of static Equatable.== infix(_:_:)(v21, v24, v44, v124);
    v142(v21, v44);
    if ((v45 & 1) != 0)
    {
      v30 = v130;
      swift_bridgeObjectRelease(v130);
      a1 = v136;
      a3 = v123;
      goto LABEL_33;
    }
    ++v43;
    v42 += v41;
  }
  while ((void (*)(char *, unint64_t, uint64_t))a1 != v134);
  swift_bridgeObjectRelease(v130);
  a1 = v136;
  v37 = v138;
  a3 = v123;
LABEL_15:
  v18 = v140;
  v40 = v142;
LABEL_16:
  v46 = v24;
  v39 = v141;
  v40(v46, v141);
  v38 = v139;
LABEL_17:
  v47 = enum case for CAUVehicleLayoutKey.seat_front_left(_:);
  v139 = v38;
  v38(v18, enum case for CAUVehicleLayoutKey.seat_front_left(_:), v39);
  v30 = v130;
  v48 = *(_QWORD *)(v130 + 16);
  if (!v48)
  {
    v53 = (void (*)(char *, uint64_t))v37[1];
    goto LABEL_29;
  }
  LODWORD(v125) = v47;
  v123 = a3;
  v49 = (*((unsigned __int8 *)v37 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v37 + 80);
  v134 = (void (*)(char *, unint64_t, uint64_t))v37[2];
  v134(v15, v130 + v49, v39);
  v50 = v18;
  v42 = sub_1000052AC((unint64_t *)&qword_1000B7340, (uint64_t (*)(uint64_t))&type metadata accessor for CAUVehicleLayoutKey, (uint64_t)&protocol conformance descriptor for CAUVehicleLayoutKey);
  swift_bridgeObjectRetain(v30);
  v140 = v50;
  v51 = v37;
  v52 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v50, v39, v42);
  v142 = (void (*)(char *, uint64_t))v51[1];
  v142(v15, v39);
  if ((v52 & 1) != 0)
  {
    swift_bridgeObjectRelease(v30);
    goto LABEL_31;
  }
  if (v48 == 1)
  {
    v30 = v130;
    swift_bridgeObjectRelease(v130);
    goto LABEL_28;
  }
  v136 = a1;
  v54 = v138[9];
  v55 = v130 + v54 + v49;
  a1 = 1;
  v56 = v141;
  while (2)
  {
    v134(v15, v55, v56);
    v57 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      if (v42 < 0)
        v110 = v42;
      else
        v110 = v42 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v42);
      v76 = _CocoaArrayWrapper.endIndex.getter(v110);
      swift_bridgeObjectRelease(v42);
      if (!v76)
        goto LABEL_66;
LABEL_46:
      if (v76 < 1)
      {
        __break(1u);
        return;
      }
      v77 = 0;
      v78 = v42 & 0xC000000000000001;
      LODWORD(v135) = enum case for CAUVehicleLayoutKey.seat_front(_:);
      v79 = &off_1000AA000;
      v136 = a1;
      v134 = (void (*)(char *, unint64_t, uint64_t))(v42 & 0xC000000000000001);
      while (1)
      {
        if (v78)
          v83 = (void (*)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)(v77, v42);
        else
          v83 = (void (*)(char *, uint64_t))*(id *)(v42 + 8 * v77 + 32);
        v84 = (const char *)v79[355];
        v142 = v83;
        v85 = objc_msgSend(v83, v84);
        if (v85)
        {
          v86 = v85;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
          v88 = v87;

          v90._countAndFlagsBits = CAUVehicleLayoutKey.rawValue.getter(v89);
          object = v90._object;
          v92 = String.hasPrefix(_:)(v90);
          swift_bridgeObjectRelease(object);
          swift_bridgeObjectRelease(v88);
          v93 = v142;
          if (v92)
            goto LABEL_48;
        }
        else
        {
          v94 = CAUVehicleLayoutKey.rawValue.getter(0);
          v139 = v95;
          v140 = (char *)v94;
          v96 = v137;
          v97 = v138;
          v98 = v141;
          v99 = ((uint64_t (*)(char *, _QWORD, uint64_t))v138[13])(v137, v135, v141);
          v100 = v79;
          v101 = v76;
          v102 = v42;
          v103 = CAUVehicleLayoutKey.rawValue.getter(v99);
          v105 = v104;
          v106 = v98;
          v78 = (unint64_t)v134;
          ((void (*)(char *, uint64_t))v97[1])(v96, v106);
          v107._countAndFlagsBits = v103;
          v42 = v102;
          v76 = v101;
          v79 = v100;
          v107._object = v105;
          v108 = v139;
          LOBYTE(v96) = String.hasPrefix(_:)(v107);
          v109 = v105;
          a1 = v136;
          swift_bridgeObjectRelease(v109);
          swift_bridgeObjectRelease(v108);
          v93 = v142;
          if ((v96 & 1) == 0)
          {
LABEL_48:
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
            v81 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v80 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v81 >= v80 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1);
            v82 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v93);
            specialized Array._endMutation()(v82);
          }
        }
        ++v77;

        if (v76 == v77)
          goto LABEL_66;
      }
    }
    v58 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v140, v56, v42);
    v142(v15, v56);
    if ((v58 & 1) != 0)
    {
      v30 = v130;
      swift_bridgeObjectRelease(v130);
      a1 = v136;
LABEL_31:
      a3 = v123;
      v59 = v141;
      v53 = v142;
      v142(v140, v141);
      v61 = v135;
      v62 = v135;
      v63 = (char *)&v149;
LABEL_34:
      v60 = *((unsigned int *)v63 - 64);
      goto LABEL_35;
    }
    ++a1;
    v55 += v54;
    if (v57 != v48)
      continue;
    break;
  }
  v30 = v130;
  swift_bridgeObjectRelease(v130);
  a1 = v136;
LABEL_28:
  a3 = v123;
  v18 = v140;
  v53 = v142;
LABEL_29:
  v59 = v141;
  v53(v18, v141);
  v60 = enum case for CAUVehicleLayoutKey.seat_front(_:);
  v61 = v135;
  v62 = v135;
LABEL_35:
  v139(v62, v60, v59);
  swift_bridgeObjectRelease(v30);
  v64 = sub_1000052AC((unint64_t *)&qword_1000B85A0, (uint64_t (*)(uint64_t))&type metadata accessor for CAUVehicleLayoutKey, (uint64_t)&protocol conformance descriptor for CAUVehicleLayoutKey);
  dispatch thunk of RawRepresentable.rawValue.getter(&v145, v59, v64);
  dispatch thunk of RawRepresentable.rawValue.getter(&v143, v59, v64);
  v65 = v146;
  v66 = v144;
  if (v145 == v143 && v146 == v144)
  {
    swift_bridgeObjectRelease_n(v146, 2);
    v53(v61, v59);
    v67 = v126;
    goto LABEL_39;
  }
  v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v145, v146, v143, v144, 0);
  swift_bridgeObjectRelease(v65);
  swift_bridgeObjectRelease(v66);
  v53(v61, v59);
  v67 = v126;
  if ((v68 & 1) != 0)
  {
LABEL_39:
    v69 = v67;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
    v71 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v70 = *(_QWORD *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v71 >= v70 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
    v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v69);
    specialized Array._endMutation()(v72);
  }

LABEL_43:
  v73 = objc_msgSend(a3, "climateControlsLockeds");
  if (!v73)
    goto LABEL_67;
  v74 = v73;
  v75 = sub_100006B04(0, &qword_1000B8598, CAFClimateControlsLocked_ptr);
  v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v74, v75);

  if ((unint64_t)v42 >> 62)
    goto LABEL_62;
  v76 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v76)
    goto LABEL_46;
LABEL_66:
  swift_bridgeObjectRelease(v42);
LABEL_67:
  v111 = v147;
  v112 = v137;
  v113 = (void (*)(char *, uint64_t, uint64_t))v138[2];
  v114 = v141;
  v113(v137, a1, v141);
  v115 = v131;
  sub_10003F774(v111, v112, v131);
  v117 = v132;
  v116 = v133;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v115, 1, v133) == 1)
  {
    sub_100008B88(v115, (uint64_t *)&unk_1000B7C40);
  }
  else
  {
    v118 = v115;
    v119 = v127;
    sub_100018D10(v118, v127, type metadata accessor for ClimateZone);
    v113(v112, a1, v114);
    v120 = v128;
    sub_10000AAD8(v119, v128, type metadata accessor for ClimateZone);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v117 + 56))(v120, 0, 1, v116);
    sub_10002F0C0(v120, (uint64_t)v112);
    sub_10000AB60(v119, type metadata accessor for ClimateZone);
  }
}

id sub_100031098(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = sub_100031924();
  v3 = v2;
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(v2 + 32);
    v6 = v4 - 1;
    do
    {
      v7 = v6;
      v8 = *v5++;
      v9 = objc_msgSend(a1, "isKindOfClass:", swift_getObjCClassFromMetadata(v8));
      if ((v9 & 1) != 0)
        break;
      v6 = v7 - 1;
    }
    while (v7);
  }
  else
  {
    v9 = 0;
  }
  swift_bridgeObjectRelease(v3);
  return v9;
}

id sub_100031120(void *a1)
{
  uint64_t v2;

  v2 = sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
  return objc_msgSend(a1, "isKindOfClass:", swift_getObjCClassFromMetadata(v2));
}

void sub_10003116C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v4 = a2(0);
  v24 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - v8;
  v25 = _swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(a1 + 64);
  v22 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v23 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v23)
      goto LABEL_23;
    v19 = *(_QWORD *)(v22 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v23)
        goto LABEL_23;
      v19 = *(_QWORD *)(v22 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v23)
          goto LABEL_23;
        v19 = *(_QWORD *)(v22 + 8 * v14);
        if (!v19)
        {
          v14 = v18 + 3;
          if (v18 + 3 >= v23)
            goto LABEL_23;
          v19 = *(_QWORD *)(v22 + 8 * v14);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_5:
    sub_10000AAD8(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v24 + 72) * v16, (uint64_t)v9, a2);
    sub_100018D10((uint64_t)v9, (uint64_t)v6, a2);
    v17 = *(_QWORD *)&v6[*(int *)(v4 + 24)];
    swift_bridgeObjectRetain(v17);
    sub_10000AB60((uint64_t)v6, a2);
    sub_100072F54(v17);
  }
  v20 = v18 + 4;
  if (v20 >= v23)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v23)
      goto LABEL_23;
    v19 = *(_QWORD *)(v22 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1000313C0()
{
  id *v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  id v16;
  uint64_t v17;
  Swift::String v18;
  void *object;
  Swift::String v20;
  int *v21;
  Swift::String v22;
  void *v23;
  Swift::String v24;
  Swift::String v25;
  void *v26;
  Swift::String v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  void (*v39)(void);
  uint64_t v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  Swift::String v49;
  Swift::String v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;

  v1 = v0;
  v2 = type metadata accessor for CAUVehicleLayoutKey(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v6);
  v52 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - v9;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = 0;
  v55 = 0xE000000000000000;
  _StringGuts.grow(_:)(86);
  v15._countAndFlagsBits = 0xD00000000000001BLL;
  v15._object = (void *)0x800000010008D1B0;
  String.append(_:)(v15);
  v16 = objc_msgSend(*v0, "uniqueIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v17 = sub_1000052AC(&qword_1000B8578, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v11, v17);
  object = v18._object;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(object);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v20._countAndFlagsBits = 0x3D73656E6F7A20;
  v20._object = (void *)0xE700000000000000;
  String.append(_:)(v20);
  v21 = (int *)type metadata accessor for ClimateSystemManager(0);
  v53 = (*(_QWORD **)((char *)v1 + v21[9]))[2];
  v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v23 = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v23);
  v24._countAndFlagsBits = 0x74736F7266656420;
  v24._object = (void *)0xEA00000000003D73;
  String.append(_:)(v24);
  v53 = (*(_QWORD **)((char *)v1 + v21[10]))[2];
  v25._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v26 = v25._object;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v26);
  v27._countAndFlagsBits = 0x6F72467466656C20;
  v27._object = (void *)0xEF3D656E6F5A746ELL;
  String.append(_:)(v27);
  sub_100020FF0((uint64_t)v1 + v21[7], (uint64_t)v10);
  v28 = type metadata accessor for ClimateZone(0);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48);
  if (v29(v10, 1, v28) == 1)
  {
    v30 = v2;
    v31 = v5;
    v32 = v3;
    v33 = v30;
    sub_100008B88((uint64_t)v10, (uint64_t *)&unk_1000B7C40);
    v34 = (void *)0xE400000000000000;
    v35 = 1701736302;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v10, v2);
    v36 = sub_10000AB60((uint64_t)v10, type metadata accessor for ClimateZone);
    v35 = CAUVehicleLayoutKey.rawValue.getter(v36);
    v34 = v37;
    v38 = v5;
    v32 = v3;
    v39 = *(void (**)(void))(v3 + 8);
    v40 = v2;
    v31 = v38;
    v33 = v40;
    v39();
  }
  v41._countAndFlagsBits = v35;
  v41._object = v34;
  String.append(_:)(v41);
  swift_bridgeObjectRelease(v34);
  v42._object = (void *)0x800000010008D1D0;
  v42._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v42);
  v43 = (uint64_t)v1 + v21[8];
  v44 = v52;
  sub_100020FF0(v43, v52);
  if (v29((char *)v44, 1, v28) == 1)
  {
    sub_100008B88(v44, (uint64_t *)&unk_1000B7C40);
    v45 = (void *)0xE400000000000000;
    v46 = 1701736302;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v44, v33);
    v47 = sub_10000AB60(v44, type metadata accessor for ClimateZone);
    v46 = CAUVehicleLayoutKey.rawValue.getter(v47);
    v45 = v48;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
  }
  v49._countAndFlagsBits = v46;
  v49._object = v45;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v45);
  v50._countAndFlagsBits = 62;
  v50._object = (void *)0xE100000000000000;
  String.append(_:)(v50);
  return v54;
}

uint64_t sub_100031810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = sub_100006058(&qword_1000B85C0);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_1000B7590;
  else
    v2 = (uint64_t *)&unk_1000B85C8;
  return sub_100006058(v2);
}

uint64_t sub_10003185C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058((uint64_t *)&unk_1000B7C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000318A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClimateDefrost(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1000318E8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_100031924()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100031810();
  v1 = swift_allocObject(v0, ((*(unsigned int *)(v0 + 48) + 7) & 0x1FFFFFFF8) + 96, *(unsigned __int16 *)(v0 + 52) | 7);
  *(_OWORD *)(v1 + 16) = xmmword_100089B60;
  *(_QWORD *)(v1 + 32) = sub_100006B04(0, (unint64_t *)&qword_1000B7B40, CAFZonesSynced_ptr);
  *(_QWORD *)(v1 + 40) = sub_100006B04(0, (unint64_t *)&unk_1000B86A0, CAFAutoClimateControl_ptr);
  *(_QWORD *)(v1 + 48) = sub_100006B04(0, &qword_1000B85A8, CAFCabin_ptr);
  *(_QWORD *)(v1 + 56) = sub_100006B04(0, &qword_1000B8598, CAFClimateControlsLocked_ptr);
  *(_QWORD *)(v1 + 64) = sub_100006B04(0, (unint64_t *)&unk_1000B9FD0, CAFFan_ptr);
  *(_QWORD *)(v1 + 72) = sub_100006B04(0, &qword_1000B85B0, CAFRecirculation_ptr);
  *(_QWORD *)(v1 + 80) = sub_100006B04(0, &qword_1000B85B8, CAFSteeringWheelHeatingCooling_ptr);
  *(_QWORD *)(v1 + 88) = sub_100006B04(0, (unint64_t *)&unk_1000B91B0, CAFVent_ptr);
  *(_QWORD *)(v1 + 96) = sub_100006B04(0, &qword_1000B7458, CAFTemperature_ptr);
  *(_QWORD *)(v1 + 104) = sub_100006B04(0, &qword_1000B8B70, CAFSeatHeatingCooling_ptr);
  *(_QWORD *)(v1 + 112) = sub_100006B04(0, (unint64_t *)&unk_1000B87B0, CAFSeatFan_ptr);
  *(_QWORD *)(v1 + 120) = sub_100006B04(0, &qword_1000B77C8, CAFAutomakerSetting_ptr);
  return v1;
}

uint64_t getEnumTagSinglePayload for ClimateSlotType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClimateSlotType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_100031B9C + 4 * byte_100089BB5[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_100031BD0 + 4 * byte_100089BB0[v4]))();
}

uint64_t sub_100031BD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100031BD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100031BE0);
  return result;
}

uint64_t sub_100031BEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100031BF4);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_100031BF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100031C00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClimateSlotType()
{
  return &type metadata for ClimateSlotType;
}

BOOL sub_100031C1C(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(void))(a2 + 8))() - 4) < 5u;
}

BOOL sub_100031C44(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(void))(a2 + 8))() - 1) < 2u;
}

uint64_t sub_100031C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v5;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3) - 1;
  v5 = 2;
  if (a1)
    v5 = 3;
  if ((v4 & 0xFE) != 0)
    return 1;
  else
    return v5;
}

double sub_100031CB0(uint64_t a1)
{
  return sub_100031CF8(a1, (uint64_t)&off_10009D580, (uint64_t)&off_10009D5A8, (uint64_t)&off_10009D5D0, &qword_1000BC828);
}

double sub_100031CD4(uint64_t a1)
{
  return sub_100031CF8(a1, (uint64_t)&off_10009D5F8, (uint64_t)&off_10009D620, (uint64_t)&off_10009D648, &qword_1000BC830);
}

double sub_100031CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  double result;

  v9 = sub_100006058(&qword_1000B85D8);
  v10 = swift_allocObject(v9, 56, 7);
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v10 + 16) = xmmword_100089CB0;
  *(_QWORD *)(v10 + 32) = a2;
  *(_QWORD *)(v10 + 40) = a3;
  *(_QWORD *)(v10 + 48) = a4;
  *a5 = v10;
  return result;
}

uint64_t sub_100031D58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100031D84 + 4 * byte_100089BBA[a1]))(1953391990, 0xE400000000000000);
}

unint64_t sub_100031D84()
{
  return 0xD000000000000012;
}

uint64_t sub_100031DA0()
{
  return 0x70706574536E6166;
}

uint64_t sub_100031DBC()
{
  return 0x65646F4D6F747561;
}

uint64_t sub_100031DD4()
{
  return 0x7461654874616573;
}

uint64_t sub_100031DF4()
{
  return 0x6E614674616573;
}

uint64_t sub_100031E0C()
{
  return 0x7373614D74616573;
}

unint64_t sub_100031E2C()
{
  return 0xD000000000000014;
}

uint64_t sub_100031E4C()
{
  return 0x736C6F72746E6F63;
}

uint64_t sub_100031E6C()
{
  return 0x6B6E694C70656564;
}

uint64_t sub_100031E84()
{
  return 0x6C75637269636572;
}

uint64_t sub_100031EA8()
{
  return 0x434178616DLL;
}

uint64_t sub_100031EBC()
{
  return 1668184435;
}

uint64_t sub_100031EC8()
{
  return 0x74736F72666564;
}

uint64_t sub_100031EE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = sub_100031D58(*a1);
  v5 = v4;
  v6 = sub_100031D58(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_100031F68()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6);
  v2 = sub_100031D58(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100031FC8(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_100031D58(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100032008()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6);
  v2 = sub_100031D58(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

unint64_t sub_100032064@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100032100(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100032090@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100031D58(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000320BC()
{
  unint64_t result;

  result = qword_1000B85D0;
  if (!qword_1000B85D0)
  {
    result = swift_getWitnessTable(&unk_100089C80, &type metadata for ClimateSlotType);
    atomic_store(result, (unint64_t *)&qword_1000B85D0);
  }
  return result;
}

unint64_t sub_100032100(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10009D670, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xE)
    return 14;
  else
    return v3;
}

uint64_t sub_100032148()
{
  return 7;
}

uint64_t sub_100032150()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate25ClimateCabinServiceButton_cabin);
  v2 = objc_msgSend(v1, "hvacOn");
  v3 = objc_msgSend(v1, "hvacOnInvalid");
  v4 = 9;
  if (!v3)
    v4 = 1;
  v5 = 8;
  if (!v3)
    v5 = 0;
  if (v2)
    return v4;
  else
    return v5;
}

char *sub_1000321B8(void *a1)
{
  char *v1;
  id v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  int v17;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void **v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  char v54;
  char v55;
  char *v56;
  void *v57;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  void *v63;
  void *v64;
  char v65[24];
  char v66[24];
  objc_super v67;

  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate25ClimateCabinServiceButton_cabin] = a1;
  v67.receiver = v1;
  v67.super_class = (Class)type metadata accessor for ClimateCabinServiceButton();
  v3 = a1;
  v4 = (char *)objc_msgSendSuper2(&v67, "init");
  objc_msgSend(v3, "registerObserver:", v4);

  v5 = &v4[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v4[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v66, 1, 0);
  v6 = *(_QWORD *)v5;
  v7 = *((_QWORD *)v5 + 1);
  *(_OWORD *)v5 = xmmword_100089CD0;
  v8 = v4;
  if (!v7
    || (v6 == 0x7265776F70 ? (v9 = v7 == 0xE500000000000000) : (v9 = 0),
        !v9 && (_stringCompareWithSmolCheck(_:_:expecting:)(0x7265776F70, 0xE500000000000000, v6, v7, 0) & 1) == 0))
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v7);
  v10 = swift_allocObject(&unk_10009ECE0, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v8);
  v11 = swift_allocObject(&unk_10009ED08, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v3;
  v12 = (uint64_t *)&v8[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v8[OBJC_IVAR____TtC7Climate13ClimateButton_action], v65, 1, 0);
  v13 = *v12;
  v14 = v12[1];
  *v12 = (uint64_t)sub_10003290C;
  v12[1] = v11;
  v60 = v3;
  sub_100005118(v13, v14);
  v15 = objc_msgSend(v8, "titleLabel");
  if (v15)
  {
    v16 = v15;
    if (qword_1000B7008 != -1)
      swift_once(&qword_1000B7008, sub_10006A3D0);
    objc_msgSend(v16, "setFont:", qword_1000BC9B0);

  }
  v17 = v8[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v8[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if (v17 != 1)
  {
    v18 = *(void **)&v8[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v19 = v8;
    objc_msgSend(v18, "removeFromSuperview");
    sub_100066C24();

  }
  v20 = qword_1000B6FE0;
  v21 = v8;
  if (v20 != -1)
    swift_once(&qword_1000B6FE0, sub_100047678);
  v22 = (void *)qword_1000BC910;
  v23 = *(void **)algn_1000BC918;
  v24 = qword_1000BC920;
  v25 = (void **)&v21[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v26 = *(void **)&v21[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v61 = *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
  v63 = *(void **)&v21[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
  *v25 = (void *)qword_1000BC910;
  v25[1] = v23;
  v25[2] = (void *)v24;
  v27 = v22;
  v28 = v23;
  swift_bridgeObjectRetain_n(v24, 2);
  v59 = v27;
  v29 = v28;
  v30 = *v25;
  v31 = v25[1];
  v32 = (uint64_t)v25[2];
  sub_100005128();
  v33 = v30;
  v34 = v31;
  swift_bridgeObjectRetain(v32);
  if ((static NSObject.== infix(_:_:)(v33) & 1) == 0 || (static NSObject.== infix(_:_:)(v34) & 1) == 0)
  {
    swift_bridgeObjectRelease(v32);

    goto LABEL_21;
  }
  sub_10005B490(v32, v61);
  v36 = v35;
  swift_bridgeObjectRelease(v32);

  if ((v36 & 1) == 0)
LABEL_21:
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *(_QWORD *)v21) + 0x228))(v37, v38);

  swift_bridgeObjectRelease(v61);
  swift_bridgeObjectRelease(v24);
  v39 = qword_1000B6FD8;
  v40 = v21;
  if (v39 != -1)
    swift_once(&qword_1000B6FD8, sub_10004765C);
  v41 = (void *)qword_1000BC8F8;
  v42 = (void *)qword_1000BC900;
  v43 = qword_1000BC908;
  v44 = &v40[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
  v45 = *(void **)&v40[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
  v64 = *(void **)&v40[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8];
  v46 = *(_QWORD *)&v40[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16];
  *(_QWORD *)v44 = qword_1000BC8F8;
  *((_QWORD *)v44 + 1) = v42;
  *((_QWORD *)v44 + 2) = v43;
  v47 = v41;
  v48 = v42;
  swift_bridgeObjectRetain_n(v43, 2);
  v62 = v47;
  v49 = v48;
  v50 = (void *)*((_QWORD *)v44 + 1);
  v51 = *((_QWORD *)v44 + 2);
  v52 = *(id *)v44;
  v53 = v50;
  swift_bridgeObjectRetain(v51);
  if ((static NSObject.== infix(_:_:)(v52) & 1) != 0 && (static NSObject.== infix(_:_:)(v53) & 1) != 0)
  {
    sub_10005B490(v51, v46);
    v55 = v54;
    swift_bridgeObjectRelease(v51);

    if ((v55 & 1) != 0)
      goto LABEL_30;
  }
  else
  {
    swift_bridgeObjectRelease(v51);

  }
  (*(void (**)(void))((swift_isaMask & *(_QWORD *)v40) + 0x228))();
LABEL_30:

  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v43);
  v56 = v40;
  sub_10007813C();
  v57 = *(void **)&v56[OBJC_IVAR____TtC7Climate25ClimateCabinServiceButton_cabin];
  objc_msgSend(v57, "hvacOn");
  objc_msgSend(v56, "setEnabled:", objc_msgSend(v57, "hvacOnInvalid") ^ 1);
  sub_100066A90();
  sub_100066C24();

  return v56;
}

void sub_100032758(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  void *v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    objc_msgSend(a3, "setHvacOn:", objc_msgSend(a3, "hvacOn") ^ 1);
    sub_10007813C();
    v7 = *(void **)&v6[OBJC_IVAR____TtC7Climate25ClimateCabinServiceButton_cabin];
    objc_msgSend(v7, "hvacOn");
    objc_msgSend(v6, "setEnabled:", objc_msgSend(v7, "hvacOnInvalid") ^ 1);
    sub_100066A90();
    sub_100066C24();

  }
}

id sub_10003286C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateHVACButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateHVACButton()
{
  return objc_opt_self(_TtC7Climate17ClimateHVACButton);
}

uint64_t sub_1000328BC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000328E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10003290C(uint64_t a1)
{
  uint64_t v1;

  sub_100032758(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_100032914()
{
  char *v0;
  void *v1;

  sub_10007813C();
  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate25ClimateCabinServiceButton_cabin];
  objc_msgSend(v1, "hvacOn");
  objc_msgSend(v0, "setEnabled:", objc_msgSend(v1, "hvacOnInvalid") ^ 1);
  sub_100066A90();
  return sub_100066C24();
}

uint64_t sub_100032978()
{
  uint64_t v0;

  v0 = sub_100006B04(0, (unint64_t *)&unk_1000B86A0, CAFAutoClimateControl_ptr);
  return CAFPositioned.layoutKey.getter(v0);
}

void sub_100032A18()
{
  uint64_t v0;

}

id sub_100032A28()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateAutoControlServiceButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateAutoControlServiceButton()
{
  return objc_opt_self(_TtC7Climate31ClimateAutoControlServiceButton);
}

char *sub_100032AFC(void *a1)
{
  id v2;
  char *v3;
  id v4;
  char *v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char v18;
  char v19;
  char *v20;
  char v21;
  char *v22;
  char v24[24];

  if (objc_msgSend(a1, "hasLevel"))
  {
    v2 = objc_allocWithZone((Class)type metadata accessor for ClimateAutoModeLevelButton());
    v3 = sub_10002CF3C(a1);
  }
  else
  {
    v4 = objc_allocWithZone((Class)type metadata accessor for ClimateAutoModeIntensityButton());
    v3 = sub_100052AA8(a1);
  }
  v5 = v3;
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v5;
  v8 = objc_msgSend(v6, "clearColor");
  v9 = objc_msgSend(v6, "systemGreenColor");
  v10 = &v7[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v11 = *(void **)&v7[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v12 = *(void **)&v7[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
  *(_QWORD *)v10 = v8;
  *((_QWORD *)v10 + 1) = v9;
  *((_QWORD *)v10 + 2) = &_swiftEmptyDictionarySingleton;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v14 = v8;
  v15 = v9;
  swift_bridgeObjectRetain(&_swiftEmptyDictionarySingleton);
  v16 = v14;
  v17 = v15;
  if ((static NSObject.== infix(_:_:)(v16) & 1) == 0 || (static NSObject.== infix(_:_:)(v17) & 1) == 0)
  {
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

    goto LABEL_9;
  }
  sub_10005B490((uint64_t)&_swiftEmptyDictionarySingleton, v13);
  v19 = v18;
  swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

  if ((v19 & 1) == 0)
LABEL_9:
    sub_100066A90();

  swift_bridgeObjectRelease(v13);
  v20 = &v7[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle];
  swift_beginAccess(&v7[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle], v24, 1, 0);
  v21 = *v20;
  *v20 = 1;
  if ((v21 & 1) == 0)
  {
    v22 = v7;
    ClimateButton.updateClimateConfiguration()();

  }
  return v7;
}

uint64_t sub_100032D0C()
{
  uint64_t v0;
  void *v1;
  char v2;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned int v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_seatFan);
  if (!objc_msgSend(v1, "hasOn") || (objc_msgSend(v1, "on") & 1) != 0)
  {
    v2 = CAFSeatFan.isVenting.getter();
    return _s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(v2 & 1, (char)objc_msgSend(v1, "autoMode"), (char)objc_msgSend(v1, "fanLevelRestricted"), (char)objc_msgSend(v1, "fanLevelInvalid"), (char)objc_msgSend(v1, "fanLevelDisabled"));
  }
  v4 = objc_msgSend(v1, "autoMode");
  v5 = objc_msgSend(v1, "onRestricted");
  v6 = objc_msgSend(v1, "onInvalid");
  v7 = objc_msgSend(v1, "onDisabled");
  if ((v4 & 1) != 0)
  {
    if ((v5 & 1) != 0)
    {
      v8 = 6;
      v9 = 14;
    }
    else
    {
      v8 = 2;
      v9 = 10;
    }
    goto LABEL_10;
  }
  if ((v5 & 1) != 0)
  {
    v8 = 4;
    v9 = 12;
LABEL_10:
    if (v6)
      v8 = v9;
    if ((v7 & 1) == 0)
      return v8;
    return v8 | 0x10;
  }
  v8 = 8;
  if (!v6)
    v8 = 0;
  if ((v7 & 1) == 0)
    return v8;
  return v8 | 0x10;
}

uint64_t sub_100032F6C()
{
  uint64_t v0;

  v0 = sub_100006B04(0, (unint64_t *)&unk_1000B87B0, CAFSeatFan_ptr);
  return CAFPositioned.layoutKey.getter(v0);
}

char *sub_100032FB4(void *a1)
{
  _BYTE *v1;
  uint64_t *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unsigned int v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void **v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v43;
  id v44;
  id v45;
  char v46[24];
  objc_super v47;

  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_symbolName];
  *v3 = 0xD000000000000010;
  v3[1] = 0x800000010008D2D0;
  v1[OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_currentValue] = 0;
  v4 = OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_autoModeGlyph;
  v5 = objc_allocWithZone((Class)UIImageView);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_seatFan] = a1;
  v8 = *v3;
  v7 = v3[1];
  v9 = a1;
  swift_bridgeObjectRetain(v7);
  v10 = objc_msgSend(v9, "fanLevel");
  v11 = objc_msgSend(v9, "fanLevelRange");
  v12 = objc_msgSend(v11, "int32Range");

  sub_10002278C(v8, v7, 0, 0, v10, v12, 5.0);
  v14 = v13;

  swift_bridgeObjectRelease(v7);
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_progressView] = v14;

  v47.receiver = v6;
  v47.super_class = (Class)type metadata accessor for ClimateSeatFanServiceButton();
  v15 = (char *)objc_msgSendSuper2(&v47, "init");
  sub_1000334C4();
  objc_msgSend(v9, "registerObserver:", v15);
  v16 = swift_allocObject(&unk_10009EDA8, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v15);
  v17 = swift_allocObject(&unk_10009EDD0, 32, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v9;
  v18 = (uint64_t *)&v15[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v15[OBJC_IVAR____TtC7Climate13ClimateButton_action], v46, 1, 0);
  v19 = *v18;
  v20 = v18[1];
  *v18 = (uint64_t)sub_100033FE8;
  v18[1] = v17;
  v45 = v9;
  sub_100005118(v19, v20);
  v21 = qword_1000B6FD0;
  v22 = v15;
  if (v21 != -1)
    swift_once(&qword_1000B6FD0, sub_1000475EC);
  v23 = (void *)qword_1000BC8E0;
  v24 = qword_1000BC8F0;
  if (qword_1000B6FA0 != -1)
    swift_once(&qword_1000B6FA0, sub_100041F80);
  v25 = (void *)qword_1000BC8A8;
  v26 = (void **)&v22[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v27 = *(void **)&v22[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v28 = *(void **)&v22[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
  v29 = *(_QWORD *)&v22[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
  *v26 = v23;
  v26[1] = v25;
  v26[2] = (void *)v24;
  v30 = v25;
  v31 = v23;
  swift_bridgeObjectRetain_n(v24, 2);
  v44 = v31;
  v43 = v30;
  v33 = *v26;
  v32 = v26[1];
  v34 = (uint64_t)v26[2];
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v35 = v33;
  v36 = v32;
  swift_bridgeObjectRetain(v34);
  if ((static NSObject.== infix(_:_:)(v35) & 1) != 0 && (static NSObject.== infix(_:_:)(v36) & 1) != 0)
  {
    sub_10005B490(v34, v29);
    v38 = v37;
    swift_bridgeObjectRelease(v34);

    if ((v38 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRelease(v34);

  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *(_QWORD *)v22) + 0x228))(v39, v40, v41);
LABEL_11:

  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v24);
  sub_10006B880();
  sub_100033728();

  return v22;
}

void sub_100033384(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  unsigned __int8 *Strong;
  unsigned __int8 *v6;
  char v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    if (objc_msgSend(Strong, "isEnabled"))
    {
      sub_100047DE4();
      objc_msgSend(a3, "setFanLevel:", v6[OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_currentValue]);
      sub_100033728();
    }

  }
}

void sub_1000334C4()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_progressView];
  objc_msgSend(v0, "addSubview:", v1);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100006058((uint64_t *)&unk_1000B7590);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100088DF0;
  v5 = objc_msgSend(v1, "leadingAnchor");
  v6 = objc_msgSend(v0, "leadingAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(v1, "trailingAnchor");
  v9 = objc_msgSend(v0, "trailingAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(v1, "topAnchor");
  v12 = objc_msgSend(v0, "topAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(v1, "bottomAnchor");
  v15 = objc_msgSend(v0, "bottomAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v4 + 56) = v16;
  specialized Array._endMutation()(v17);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "activateConstraints:", isa);

}

uint64_t sub_100033728()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  char *v5;
  id v6;
  id v7;
  void *v8;
  void (*v9)(id, id, void *, void *);
  id v10;
  unsigned __int8 v11;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_autoModeGlyph];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, "setHidden:", (sub_100032D0C() & 0x1A) != 2);

  }
  sub_10007813C();
  objc_msgSend(v0, "setEnabled:", (sub_100032D0C() & 0x18) == 0);
  sub_1000338A0();
  sub_100066C24();
  v4 = *(_QWORD **)&v0[OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_progressView];
  v5 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  v6 = *(id *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.25);
  v8 = (void *)*((_QWORD *)v5 + 1);
  v9 = *(void (**)(id, id, void *, void *))((swift_isaMask & *v4) + 0xD0);
  v10 = v8;
  v9(v6, v7, v8, &_swiftEmptyDictionarySingleton);
  if ((sub_100032D0C() & 0x18) != 0)
    v11 = 0;
  else
    v11 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_seatFan], "fanLevel");
  v1[OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_currentValue] = v11;
  return (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x88))();
}

void sub_1000338A0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  char v15;
  char v16;
  _QWORD *v17;
  id v18;
  id v19;
  void *v20;
  void (*v21)(id, id, void *, void *);
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  char v34;
  char v35;
  _QWORD *v36;
  id v37;
  id v38;
  void *v39;
  void (*v40)(id, id, void *, void *);
  id v41;
  id v42;
  __int128 v43;
  __int128 v44;

  v1 = v0;
  sub_100066A90();
  v2 = sub_100032D0C();
  if ((v2 & 0x19) == 1)
  {
    if ((v2 & 2) != 0)
    {
      v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemOrangeColor");
    }
    else
    {
      if (qword_1000B6F98 != -1)
        swift_once(&qword_1000B6F98, sub_100041F6C);
      v3 = (id)qword_1000BC8A0;
    }
    v23 = v3;
    v24 = *(void **)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor);
    v44 = *(_OWORD *)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8);
    v25 = v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
    v43 = *(_OWORD *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
    *(_QWORD *)v25 = v24;
    *(_OWORD *)(v25 + 8) = v44;
    v26 = v24;
    v27 = (id)v44;
    swift_bridgeObjectRetain_n(*((_QWORD *)&v44 + 1), 2);
    v42 = v26;
    v28 = v27;
    v29 = *(void **)v25;
    v30 = *(void **)(v25 + 8);
    v31 = *(_QWORD *)(v25 + 16);
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v32 = v29;
    v33 = v30;
    swift_bridgeObjectRetain(v31);
    if ((static NSObject.== infix(_:_:)(v32) & 1) != 0 && (static NSObject.== infix(_:_:)(v33) & 1) != 0)
    {
      sub_10005B490(v31, v6);
      v35 = v34;
      swift_bridgeObjectRelease(v31);

      if ((v35 & 1) != 0)
        goto LABEL_19;
    }
    else
    {
      swift_bridgeObjectRelease(v31);

    }
    sub_100066C24();
    v36 = *(_QWORD **)(v1 + OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_progressView);
    v37 = *(id *)(v25 + 8);
    v38 = objc_msgSend(v37, "colorWithAlphaComponent:", 0.25);
    v39 = *(void **)(v25 + 8);
    v40 = *(void (**)(id, id, void *, void *))((swift_isaMask & *v36) + 0xD0);
    v41 = v39;
    v40(v37, v38, v39, &_swiftEmptyDictionarySingleton);
LABEL_19:

    goto LABEL_20;
  }
  v4 = *(void **)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor);
  v44 = *(_OWORD *)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8);
  v5 = v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
  v43 = *(_OWORD *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  *(_QWORD *)v5 = v4;
  *(_OWORD *)(v5 + 8) = v44;
  v7 = v4;
  v8 = (id)v44;
  swift_bridgeObjectRetain_n(*((_QWORD *)&v44 + 1), 2);
  v42 = v7;
  v9 = v8;
  v10 = *(void **)v5;
  v11 = *(void **)(v5 + 8);
  v12 = *(_QWORD *)(v5 + 16);
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v13 = v10;
  v14 = v11;
  swift_bridgeObjectRetain(v12);
  if ((static NSObject.== infix(_:_:)(v13) & 1) != 0 && (static NSObject.== infix(_:_:)(v14) & 1) != 0)
  {
    sub_10005B490(v12, v6);
    v16 = v15;
    swift_bridgeObjectRelease(v12);

    if ((v16 & 1) != 0)
      goto LABEL_20;
  }
  else
  {
    swift_bridgeObjectRelease(v12);

  }
  sub_100066C24();
  v17 = *(_QWORD **)(v1 + OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_progressView);
  v18 = *(id *)(v5 + 8);
  v19 = objc_msgSend(v18, "colorWithAlphaComponent:", 0.25);
  v20 = *(void **)(v5 + 8);
  v21 = *(void (**)(id, id, void *, void *))((swift_isaMask & *v17) + 0xD0);
  v22 = v20;
  v21(v18, v19, v20, &_swiftEmptyDictionarySingleton);
LABEL_20:
  swift_bridgeObjectRelease(v6);

  swift_bridgeObjectRelease(*((_QWORD *)&v44 + 1));
}

uint64_t sub_100033CA0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  uint64_t (*v6)(id, id, void *, void *);
  id v7;

  sub_100066C24();
  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_progressView);
  v2 = v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
  v3 = *(id *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.25);
  v5 = *(void **)(v2 + 8);
  v6 = *(uint64_t (**)(id, id, void *, void *))((swift_isaMask & *v1) + 0xD0);
  v7 = v5;
  return v6(v3, v4, v5, &_swiftEmptyDictionarySingleton);
}

void sub_100033D4C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_symbolName + 8));

}

id sub_100033D9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateSeatFanServiceButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateSeatFanServiceButton()
{
  return objc_opt_self(_TtC7Climate27ClimateSeatFanServiceButton);
}

unint64_t sub_100033EEC()
{
  unint64_t result;

  result = qword_1000B8760;
  if (!qword_1000B8760)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UInt8, &type metadata for UInt8);
    atomic_store(result, (unint64_t *)&qword_1000B8760);
  }
  return result;
}

unint64_t sub_100033F30(uint64_t a1)
{
  unint64_t result;

  result = sub_100033F54();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100033F54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B87A0;
  if (!qword_1000B87A0)
  {
    v1 = type metadata accessor for ClimateSeatFanServiceButton();
    result = swift_getWitnessTable(&unk_100089D5C, v1);
    atomic_store(result, (unint64_t *)&qword_1000B87A0);
  }
  return result;
}

uint64_t sub_100033F98()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100033FBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100033FE8(uint64_t a1)
{
  uint64_t v1;

  sub_100033384(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100033FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  int v8;
  int v9;
  int v10;
  id v11;
  id v12;
  int v13;
  int v14;
  id v15;
  int v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_currentValue;
  v3 = *(_DWORD *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_currentValue);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel);
  v5 = objc_msgSend(v4, "heatingCoolingLevelRange");
  CAFRange.maximumValue<A>()(&v24, &type metadata for Int32, &protocol witness table for Int32);

  if (v3 < (int)v24)
  {
    v6 = OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_isInPositiveRange;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_isInPositiveRange) == 1)
    {
      v7 = objc_msgSend(v4, "heatingCoolingLevelRange");
      CAFRange.stepValue<A>()(&v24, &type metadata for Int32, &protocol witness table for Int32);

      v8 = *(_DWORD *)(v1 + v2);
      v9 = v8 + v24;
      if (!__OFADD__(v8, (_DWORD)v24))
        goto LABEL_18;
      __break(1u);
    }
  }
  v10 = *(_DWORD *)(v1 + v2);
  v11 = objc_msgSend(v4, "heatingCoolingLevelRange");
  CAFRange.maximumValue<A>()(&v24, &type metadata for Int32, &protocol witness table for Int32);

  if (v10 == (_DWORD)v24)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_isInPositiveRange) = 0;
    v12 = objc_msgSend(v4, "heatingCoolingLevelRange");
    CAFRange.minimumValue<A>()(&v24, &type metadata for Int32, &protocol witness table for Int32);

    v13 = v24 & ~((int)v24 >> 31);
LABEL_8:
    sub_1000347A4(v13);
    return;
  }
  v14 = *(_DWORD *)(v1 + v2);
  v15 = objc_msgSend(v4, "heatingCoolingLevelRange");
  CAFRange.minimumValue<A>()(&v24, &type metadata for Int32, &protocol witness table for Int32);

  if ((int)v24 >= v14
    || (v6 = OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_isInPositiveRange,
        (*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_isInPositiveRange) & 1) != 0))
  {
    v16 = *(_DWORD *)(v1 + v2);
    v17 = objc_msgSend(v4, "heatingCoolingLevelRange");
    CAFRange.minimumValue<A>()(&v24, &type metadata for Int32, &protocol witness table for Int32);

    if (v16 != (_DWORD)v24)
      return;
    v6 = OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_isInPositiveRange;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_isInPositiveRange) = 1;
    v18 = objc_msgSend(v4, "heatingCoolingLevelRange");
    CAFRange.minimumValue<A>()(&v24, &type metadata for Int32, &protocol witness table for Int32);

    if ((_DWORD)v24)
    {
      v19 = objc_msgSend(v4, "heatingCoolingLevelRange");
      CAFRange.maximumValue<A>()(&v24, &type metadata for Int32, &protocol witness table for Int32);

      v13 = v24 & ((int)v24 >> 31);
      goto LABEL_8;
    }
LABEL_17:
    v21 = objc_msgSend(v4, "heatingCoolingLevelRange");
    CAFRange.stepValue<A>()(&v24, &type metadata for Int32, &protocol witness table for Int32);

    v8 = *(_DWORD *)(v1 + v2);
    v9 = v8 + v24;
    if (__OFADD__(v8, (_DWORD)v24))
    {
      __break(1u);
      return;
    }
    goto LABEL_18;
  }
  v20 = objc_msgSend(v4, "heatingCoolingLevelRange");
  CAFRange.stepValue<A>()(&v24, &type metadata for Int32, &protocol witness table for Int32);

  v8 = *(_DWORD *)(v1 + v2);
  v9 = v8 - v24;
  if (__OFSUB__(v8, (_DWORD)v24))
  {
    __break(1u);
    goto LABEL_17;
  }
LABEL_18:
  *(_DWORD *)(v1 + v2) = v9;
  if (v9 != v8)
  {
    if (!v8)
      *(_BYTE *)(v1 + v6) = v9 >= 0;
    v22 = *(_QWORD **)(v1 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_progressCircle);
    v23 = *(_QWORD *)((swift_isaMask & *v22) + 0x70);
    if (*(_DWORD *)((char *)v22 + v23) != v9)
    {
      *(_DWORD *)((char *)v22 + v23) = v9;
      sub_100062994(1);
    }
  }
}

void sub_100034384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void *v4;
  id v5;
  id v6;
  int v7;
  int v8;
  int v9;
  id v10;
  id v11;
  int v12;
  id v13;
  int v14;
  id v15;
  id v16;
  id v17;
  id v18;
  int v19;
  id v20;
  int v21;
  uint64_t v22;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_currentValue;
  v3 = *(_DWORD *)(v0 + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_currentValue);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_seatHeatingCooling);
  v5 = objc_msgSend(v4, "heatingCoolingLevelRange");
  CAFRange.maximumValue<A>()(&v22, &type metadata for Int32, &protocol witness table for Int32);

  if (v3 < (int)v22
    && *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_isInPositiveRange) == 1)
  {
    v6 = objc_msgSend(v4, "heatingCoolingLevelRange");
    CAFRange.stepValue<A>()(&v22, &type metadata for Int32, &protocol witness table for Int32);

    v7 = *(_DWORD *)(v1 + v2);
    v8 = v7 + v22;
    if (!__OFADD__(v7, (_DWORD)v22))
      goto LABEL_8;
    __break(1u);
  }
  v9 = *(_DWORD *)(v1 + v2);
  v10 = objc_msgSend(v4, "heatingCoolingLevelRange");
  CAFRange.maximumValue<A>()(&v22, &type metadata for Int32, &protocol witness table for Int32);

  if (v9 == (_DWORD)v22)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_isInPositiveRange) = 0;
    v11 = objc_msgSend(v4, "heatingCoolingLevelRange");
    CAFRange.minimumValue<A>()(&v22, &type metadata for Int32, &protocol witness table for Int32);

    v8 = v22 & ~((int)v22 >> 31);
LABEL_8:
    *(_DWORD *)(v1 + v2) = v8;
    (*(void (**)(void))((swift_isaMask & **(_QWORD **)(v1
                                                     + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_progressView))
                      + 0x88))();
    return;
  }
  v12 = *(_DWORD *)(v1 + v2);
  v13 = objc_msgSend(v4, "heatingCoolingLevelRange");
  CAFRange.minimumValue<A>()(&v22, &type metadata for Int32, &protocol witness table for Int32);

  if ((int)v22 < v12
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_isInPositiveRange) & 1) == 0)
  {
    v18 = objc_msgSend(v4, "heatingCoolingLevelRange");
    CAFRange.stepValue<A>()(&v22, &type metadata for Int32, &protocol witness table for Int32);

    v19 = *(_DWORD *)(v1 + v2);
    v8 = v19 - v22;
    if (!__OFSUB__(v19, (_DWORD)v22))
      goto LABEL_8;
    __break(1u);
    goto LABEL_18;
  }
  v14 = *(_DWORD *)(v1 + v2);
  v15 = objc_msgSend(v4, "heatingCoolingLevelRange");
  CAFRange.minimumValue<A>()(&v22, &type metadata for Int32, &protocol witness table for Int32);

  if (v14 == (_DWORD)v22)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_isInPositiveRange) = 1;
    v16 = objc_msgSend(v4, "heatingCoolingLevelRange");
    CAFRange.minimumValue<A>()(&v22, &type metadata for Int32, &protocol witness table for Int32);

    if ((_DWORD)v22)
    {
      v17 = objc_msgSend(v4, "heatingCoolingLevelRange");
      CAFRange.maximumValue<A>()(&v22, &type metadata for Int32, &protocol witness table for Int32);

      v8 = v22 & ((int)v22 >> 31);
      goto LABEL_8;
    }
LABEL_18:
    v20 = objc_msgSend(v4, "heatingCoolingLevelRange");
    CAFRange.stepValue<A>()(&v22, &type metadata for Int32, &protocol witness table for Int32);

    v21 = *(_DWORD *)(v1 + v2);
    v8 = v21 + v22;
    if (__OFADD__(v21, (_DWORD)v22))
    {
      __break(1u);
      return;
    }
    goto LABEL_8;
  }
}

uint64_t sub_1000346F8()
{
  uint64_t v0;

  return _s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel), "heatingCoolingLevel") != 0, (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel), "autoMode"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel), "heatingCoolingLevelRestricted"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel), "heatingCoolingLevelInvalid"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel), "heatingCoolingLevelDisabled"));
}

void sub_1000347A4(int a1)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = *(_DWORD *)(v1 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_currentValue);
  *(_DWORD *)(v1 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_currentValue) = a1;
  if (v2 != a1)
  {
    if (!v2)
      *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_isInPositiveRange) = a1 >= 0;
    v3 = *(_QWORD **)(v1 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_progressCircle);
    v4 = *(_QWORD *)((swift_isaMask & *v3) + 0x70);
    if (*(_DWORD *)((char *)v3 + v4) != a1)
    {
      *(_DWORD *)((char *)v3 + v4) = a1;
      sub_100062994(1);
    }
  }
}

char *sub_100034828(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  signed int v8;
  int v9;
  int v10;
  id v11;
  _QWORD *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  objc_class *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  Class isa;
  _QWORD v56[3];
  _QWORD v57[3];
  objc_super v58;

  *(_DWORD *)&v1[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_currentValue] = 0;
  v3 = OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_autoModeGlyph;
  v4 = objc_allocWithZone((Class)UIImageView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel] = a1;
  v6 = a1;
  v7 = objc_msgSend(v6, "heatingCoolingLevelRange");
  v8 = objc_msgSend(v6, "heatingCoolingLevel");
  v5[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_isInPositiveRange] = v8 >= 0;
  CAFRange.minimumValue<A>()(v57, &type metadata for Int32, &protocol witness table for Int32);
  v9 = v57[0];
  CAFRange.maximumValue<A>()(v56, &type metadata for Int32, &protocol witness table for Int32);
  v10 = v56[0];
  v11 = objc_allocWithZone((Class)sub_100006058(&qword_1000B88C8));
  v12 = sub_1000624BC(v9, v10, 38.0, 2.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_progressCircle] = v12;
  v13 = objc_msgSend(v6, "heatingCoolingLevel");
  v14 = *(_QWORD *)((swift_isaMask & *v12) + 0x70);
  if (*(_DWORD *)((char *)v12 + v14) != v13)
  {
    *(_DWORD *)((char *)v12 + v14) = v13;
    sub_100062994(1);
  }
  v15 = qword_1000B6FB8;
  v16 = v12;
  if (v15 != -1)
    swift_once(&qword_1000B6FB8, sub_1000420C0);
  v17 = (void *)qword_1000BC8C0;
  v18 = *(_QWORD *)((swift_isaMask & *v16) + 0x68);
  v19 = *(void **)((char *)v16 + v18);
  *(_QWORD *)((char *)v16 + v18) = qword_1000BC8C0;
  v20 = v17;

  v21 = *(void **)((char *)v16 + *(_QWORD *)((swift_isaMask & *v16) + 0x78));
  v22 = *(void **)((char *)v16 + v18);
  if (v22)
    v23 = objc_msgSend(v22, "CGColor");
  else
    v23 = 0;
  objc_msgSend(v21, "setStrokeColor:", v23);

  v24 = (objc_class *)type metadata accessor for ClimateSteeringWheelButton();
  v58.receiver = v5;
  v58.super_class = v24;
  v25 = (char *)objc_msgSendSuper2(&v58, "init");
  v26 = &v25[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v25[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v57, 1, 0);
  v27 = *(_QWORD *)v26;
  v28 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v26 = 0xD00000000000001CLL;
  *((_QWORD *)v26 + 1) = 0x800000010008D3D0;
  v29 = v25;
  if (!v28
    || (v27 != 0xD00000000000001CLL || v28 != 0x800000010008D3D0)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001CLL, 0x800000010008D3D0, v27, v28, 0) & 1) == 0)
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v28);
  objc_msgSend(v6, "registerObserver:", v29);
  v30 = swift_allocObject(&unk_10009EED8, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16, v29);
  v31 = swift_allocObject(&unk_10009EF00, 32, 7);
  *(_QWORD *)(v31 + 16) = v30;
  *(_QWORD *)(v31 + 24) = v6;
  v32 = (uint64_t *)&v29[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v29[OBJC_IVAR____TtC7Climate13ClimateButton_action], v56, 1, 0);
  v33 = *v32;
  v34 = v32[1];
  *v32 = (uint64_t)sub_1000359E0;
  v32[1] = v31;
  v35 = v6;
  sub_100005118(v33, v34);
  v36 = OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_progressCircle;
  v37 = *(void **)&v29[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_progressCircle];
  objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v29, "addSubview:", v37);
  v38 = (void *)objc_opt_self(NSLayoutConstraint);
  v39 = sub_100006058((uint64_t *)&unk_1000B7590);
  v40 = swift_allocObject(v39, 64, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100088DF0;
  v41 = objc_msgSend(v37, "centerXAnchor");
  v42 = objc_msgSend(v29, "centerXAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v40 + 32) = v43;
  v44 = objc_msgSend(*(id *)&v29[v36], "centerYAnchor");
  v45 = objc_msgSend(v29, "centerYAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v40 + 40) = v46;
  v47 = objc_msgSend(*(id *)&v29[v36], "heightAnchor");
  v48 = objc_msgSend(v29, "heightAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v40 + 48) = v49;
  v50 = objc_msgSend(*(id *)&v29[v36], "widthAnchor");
  v51 = objc_msgSend(v29, "widthAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v40 + 56) = v52;
  specialized Array._endMutation()(v53);
  sub_100006098();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v40);
  objc_msgSend(v38, "activateConstraints:", isa);

  sub_10006BC10();
  sub_100035544();

  return v29;
}

void sub_100034E04(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    sub_100033FF4();
    objc_msgSend(a3, "setHeatingCoolingLevel:", *(unsigned int *)&v6[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_currentValue]);
    sub_100035544();

  }
}

void sub_100034F0C()
{
  char *v0;
  void *v1;
  char v2;
  _QWORD *v3;
  __objc2_prot **v4;
  id v5;
  unsigned int v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;

  sub_100066C24();
  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel];
  v2 = _s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(objc_msgSend(v1, "heatingCoolingLevel") != 0, (char)objc_msgSend(v1, "autoMode"), (char)objc_msgSend(v1, "heatingCoolingLevelRestricted"), (char)objc_msgSend(v1, "heatingCoolingLevelInvalid"), (char)objc_msgSend(v1, "heatingCoolingLevelDisabled"));
  if ((int)objc_msgSend(v1, "heatingCoolingLevel") >= 1)
  {
    v3 = *(_QWORD **)&v0[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_progressCircle];
    v4 = &off_1000AA000;
    if ((_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(objc_msgSend(v1, "heatingCoolingLevel") != 0, (char)objc_msgSend(v1, "autoMode"), (char)objc_msgSend(v1, "heatingCoolingLevelRestricted"), (char)objc_msgSend(v1, "heatingCoolingLevelInvalid"), (char)objc_msgSend(v1, "heatingCoolingLevelDisabled")) & 2) != 0)
    {
      v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
    }
    else
    {
      if (qword_1000B6FA8 != -1)
        swift_once(&qword_1000B6FA8, sub_100041F94);
      v5 = (id)qword_1000BC8B0;
    }
    v14 = *(_QWORD *)((swift_isaMask & *v3) + 0x60);
    v15 = *(void **)((char *)v3 + v14);
    *(_QWORD *)((char *)v3 + v14) = v5;
    v10 = v5;

    v16 = *(void **)((char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x80));
    v17 = *(void **)((char *)v3 + v14);
    if (v17)
      v13 = objc_msgSend(v17, "CGColor");
    else
      v13 = 0;
LABEL_24:
    objc_msgSend(v16, "setStrokeColor:", v13);
    goto LABEL_25;
  }
  v6 = objc_msgSend(v1, "heatingCoolingLevel");
  v3 = *(_QWORD **)&v0[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_progressCircle];
  if ((v6 & 0x80000000) != 0)
  {
    if ((_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(objc_msgSend(v1, "heatingCoolingLevel") != 0, (char)objc_msgSend(v1, "autoMode"), (char)objc_msgSend(v1, "heatingCoolingLevelRestricted"), (char)objc_msgSend(v1, "heatingCoolingLevelInvalid"), (char)objc_msgSend(v1, "heatingCoolingLevelDisabled")) & 2) != 0)
    {
      v18 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
    }
    else
    {
      if (qword_1000B6FA0 != -1)
        swift_once(&qword_1000B6FA0, sub_100041F80);
      v18 = (id)qword_1000BC8A8;
    }
    v19 = *(_QWORD *)((swift_isaMask & *v3) + 0x60);
    v20 = *(void **)((char *)v3 + v19);
    *(_QWORD *)((char *)v3 + v19) = v18;
    v10 = v18;

    v16 = *(void **)((char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x80));
    v21 = *(void **)((char *)v3 + v19);
    if (v21)
      v13 = objc_msgSend(v21, "CGColor");
    else
      v13 = 0;
    v4 = &off_1000AA000;
    goto LABEL_24;
  }
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v8 = *(_QWORD *)((swift_isaMask & *v3) + 0x60);
  v9 = *(void **)((char *)v3 + v8);
  *(_QWORD *)((char *)v3 + v8) = v7;
  v10 = v7;

  v11 = *(void **)((char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x80));
  v12 = *(void **)((char *)v3 + v8);
  if (v12)
    v13 = objc_msgSend(v12, "CGColor");
  else
    v13 = 0;
  objc_msgSend(v11, "setStrokeColor:", v13);
  v4 = &off_1000AA000;
LABEL_25:

  if ((v2 & 1) != 0)
  {
    if ((_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(objc_msgSend(v1, "heatingCoolingLevel") != 0, (char)objc_msgSend(v1, (SEL)v4[369]), (char)objc_msgSend(v1, "heatingCoolingLevelRestricted"), (char)objc_msgSend(v1, "heatingCoolingLevelInvalid"), (char)objc_msgSend(v1, "heatingCoolingLevelDisabled")) & 2) != 0)
    {
      if (qword_1000B6FB0 != -1)
        swift_once(&qword_1000B6FB0, sub_100042054);
      v23 = (id)qword_1000BC8B8;
      v24 = objc_msgSend(v0, "traitCollection");
      v22 = objc_msgSend(v23, "resolvedColorWithTraitCollection:", v24);

    }
    else
    {
      if (qword_1000B6FB8 != -1)
        swift_once(&qword_1000B6FB8, sub_1000420C0);
      v22 = (id)qword_1000BC8C0;
    }
    v25 = *(_QWORD *)((swift_isaMask & *v3) + 0x68);
    v26 = *(void **)((char *)v3 + v25);
    *(_QWORD *)((char *)v3 + v25) = v22;
    v27 = v22;

    v28 = *(void **)((char *)v3 + *(_QWORD *)((swift_isaMask & *v3) + 0x78));
    v29 = *(void **)((char *)v3 + v25);
    if (v29)
      v30 = objc_msgSend(v29, "CGColor");
    else
      v30 = 0;
    v31 = v30;
    objc_msgSend(v28, "setStrokeColor:");

  }
}

void sub_100035544()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  int v4;

  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_autoModeGlyph];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, "setHidden:", !sub_10006B7BC());

  }
  sub_10007813C();
  v3 = *(void **)&v0[OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel];
  objc_msgSend(v0, "setEnabled:", (_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(objc_msgSend(v3, "heatingCoolingLevel") != 0, (char)objc_msgSend(v3, "autoMode"), (char)objc_msgSend(v3, "heatingCoolingLevelRestricted"), (char)objc_msgSend(v3, "heatingCoolingLevelInvalid"), (char)objc_msgSend(v3, "heatingCoolingLevelDisabled")) & 0x18) == 0);
  sub_100066A90();
  sub_100034F0C();
  if ((_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(objc_msgSend(v3, "heatingCoolingLevel") != 0, (char)objc_msgSend(v3, "autoMode"), (char)objc_msgSend(v3, "heatingCoolingLevelRestricted"), (char)objc_msgSend(v3, "heatingCoolingLevelInvalid"), (char)objc_msgSend(v3, "heatingCoolingLevelDisabled")) & 0x18) != 0)v4 = 0;
  else
    v4 = objc_msgSend(v3, "heatingCoolingLevel");
  sub_1000347A4(v4);
}

void sub_1000356EC()
{
  uint64_t v0;

}

id sub_100035728()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateSteeringWheelButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateSteeringWheelButton()
{
  return objc_opt_self(_TtC7Climate26ClimateSteeringWheelButton);
}

unint64_t sub_10003585C()
{
  unint64_t result;

  result = qword_1000B8870;
  if (!qword_1000B8870)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int32, &type metadata for Int32);
    atomic_store(result, (unint64_t *)&qword_1000B8870);
  }
  return result;
}

uint64_t sub_1000358A0(uint64_t a1)
{
  uint64_t result;

  result = sub_100035954(&qword_1000B88B0, (uint64_t)&unk_100089DEC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000358D4(uint64_t a1)
{
  uint64_t result;

  result = sub_100035954(&qword_1000B88B0, (uint64_t)&unk_100089DEC);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100035908(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100035954(&qword_1000B88B8, (uint64_t)&unk_100089E24);
  result = sub_100035954(&qword_1000B88C0, (uint64_t)&unk_100089E08);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100035954(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ClimateSteeringWheelButton();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100035990()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000359B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1000359E0(uint64_t a1)
{
  uint64_t v1;

  sub_100034E04(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1000359E8()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  id v3;
  void *v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ClimateVerticalQuickActionPopover(0);
  objc_msgSendSuper2(&v6, "viewDidLayoutSubviews");
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_isSet) & 1) == 0)
  {
    *((_BYTE *)v0 + OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_isSet) = 1;
    sub_100035B14();
    objc_msgSend(v0, "setAdditionalSafeAreaInsets:", 8.0, 8.0, 8.0, 8.0);
    sub_100018F78();
    v2 = v1;
    sub_100035E60(v1);
    swift_bridgeObjectRelease(v2);
    sub_100018E74();
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      objc_msgSend(v4, "setBackgroundColor:", v5);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100035B14()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  Class isa;

  v1 = objc_msgSend((id)objc_opt_self(MTMaterialView), "materialViewWithRecipe:", 20);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_contentView], "addSubview:", v2);
    v3 = sub_100006058((uint64_t *)&unk_1000B7590);
    v4 = swift_allocObject(v3, 64, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100088DF0;
    v5 = objc_msgSend(v2, "leftAnchor");
    v6 = objc_msgSend(v0, "view");
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, "leftAnchor");

      v9 = objc_msgSend(v5, "constraintEqualToAnchor:", v8);
      *(_QWORD *)(v4 + 32) = v9;
      v10 = objc_msgSend(v2, "rightAnchor");
      v11 = objc_msgSend(v0, "view");
      if (v11)
      {
        v12 = v11;
        v13 = objc_msgSend(v11, "rightAnchor");

        v14 = objc_msgSend(v10, "constraintEqualToAnchor:", v13);
        *(_QWORD *)(v4 + 40) = v14;
        v15 = objc_msgSend(v2, "topAnchor");
        v16 = objc_msgSend(v0, "view");
        if (v16)
        {
          v17 = v16;
          v18 = objc_msgSend(v16, "topAnchor");

          v19 = objc_msgSend(v15, "constraintEqualToAnchor:", v18);
          *(_QWORD *)(v4 + 48) = v19;
          v20 = objc_msgSend(v2, "bottomAnchor");
          v21 = objc_msgSend(v0, "view");
          if (v21)
          {
            v22 = v21;
            v23 = (void *)objc_opt_self(NSLayoutConstraint);
            v24 = objc_msgSend(v22, "bottomAnchor");

            v25 = objc_msgSend(v20, "constraintEqualToAnchor:", v24);
            *(_QWORD *)(v4 + 56) = v25;
            specialized Array._endMutation()(v26);
            sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v4);
            objc_msgSend(v23, "activateConstraints:", isa);

            return;
          }
          goto LABEL_11;
        }
LABEL_10:
        __break(1u);
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
}

void sub_100035E60(_QWORD *a1)
{
  char *v1;
  _QWORD *v2;
  char v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Class isa;
  id v21;
  id v22;
  Class v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  Class v57;

  v2 = a1;
  swift_bridgeObjectRetain(a1);
  sub_10001A8C0();
  v56 = v1;
  if ((v3 & 1) != 0)
  {
    v4 = v2[2];
    if (v4 && v4 != 1)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        goto LABEL_31;
      while (1)
      {
        v47 = 0;
        v48 = v4 + 3;
        while (1)
        {
          v4 = v48 - 4;
          if (v47 == v48 - 4)
            goto LABEL_22;
          v50 = v2[2];
          if (v47 >= v50)
            break;
          if (v4 >= v50)
            goto LABEL_29;
          v51 = &v2[v47];
          v52 = v51[4];
          v53 = v2[v48];
          v51[4] = v53;
          v54 = v2[2];
          swift_bridgeObjectRetain(v53);
          if (v4 >= v54)
            goto LABEL_30;
          v55 = v2[v48];
          v2[v48] = v52;
          swift_bridgeObjectRelease(v55);
LABEL_22:
          ++v47;
          v49 = v48 - 5;
          --v48;
          if ((uint64_t)v47 >= v49)
            goto LABEL_7;
        }
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        v2 = sub_100060E88(v2);
      }
    }
  }
LABEL_7:
  v6 = v2[2];
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      v13 = v2[i + 4];
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        if (v14 == 1)
        {
          v8 = *(id *)(v13 + 40);
        }
        else
        {
          swift_bridgeObjectRetain(v13);
          specialized ContiguousArray.reserveCapacity(_:)(v14);
          v15 = 40;
          do
          {
            v16 = *(id *)(v13 + v15);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
            v17 = _swiftEmptyArrayStorage[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
            v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v16);
            specialized ContiguousArray._endMutation()(v18);
            v15 += 16;
            --v14;
          }
          while (v14);
          v19 = objc_allocWithZone((Class)UIStackView);
          sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          v21 = objc_msgSend(v19, "initWithArrangedSubviews:", isa, swift_release(_swiftEmptyArrayStorage).n128_f64[0]);

          objc_msgSend(v21, "setSpacing:", 8.0);
          objc_msgSend(v21, "setAxis:", 1);
          objc_msgSend(v21, "setDistribution:", 3);
          objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          swift_bridgeObjectRelease(v13);
          v8 = v21;
        }
        v9 = v8;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v11 >= v10 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
        v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
        specialized Array._endMutation()(v12);

      }
    }
  }
  swift_bridgeObjectRelease(v2);
  v22 = objc_allocWithZone((Class)UIStackView);
  sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
  v23 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v24 = objc_msgSend(v22, "initWithArrangedSubviews:", v23);

  objc_msgSend(v24, "setSpacing:", 8.0);
  objc_msgSend(v24, "setAxis:", 0);
  objc_msgSend(v24, "setDistribution:", 3);
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v25 = OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_contentView;
  objc_msgSend(*(id *)&v56[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_contentView], "addSubview:", v24);
  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v27 = sub_100006058((uint64_t *)&unk_1000B7590);
  v28 = swift_allocObject(v27, 64, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100088DF0;
  v29 = objc_msgSend(v24, "topAnchor");
  v30 = objc_msgSend(*(id *)&v56[v25], "safeAreaLayoutGuide");
  v31 = objc_msgSend(v30, "topAnchor");

  v32 = objc_msgSend(v29, "constraintEqualToAnchor:", v31);
  *(_QWORD *)(v28 + 32) = v32;
  v33 = objc_msgSend(v24, "leftAnchor");
  v34 = objc_msgSend(*(id *)&v56[v25], "safeAreaLayoutGuide");
  v35 = objc_msgSend(v34, "leftAnchor");

  v36 = objc_msgSend(v33, "constraintEqualToAnchor:", v35);
  *(_QWORD *)(v28 + 40) = v36;
  v37 = objc_msgSend(v24, "bottomAnchor");
  v38 = objc_msgSend(*(id *)&v56[v25], "safeAreaLayoutGuide");
  v39 = objc_msgSend(v38, "bottomAnchor");

  v40 = objc_msgSend(v37, "constraintEqualToAnchor:", v39);
  *(_QWORD *)(v28 + 48) = v40;
  v41 = objc_msgSend(v24, "rightAnchor");
  v42 = objc_msgSend(*(id *)&v56[v25], "safeAreaLayoutGuide");
  v43 = objc_msgSend(v42, "rightAnchor");

  v44 = objc_msgSend(v41, "constraintEqualToAnchor:", v43);
  *(_QWORD *)(v28 + 56) = v44;
  specialized Array._endMutation()(v45);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  v57 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v28);
  objc_msgSend(v26, "activateConstraints:", v57);

}

id sub_100036494(void *a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)(double);
  id v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v25[24];

  v3 = v2;
  sub_10001B510(a1, a2);
  v4 = type metadata accessor for ClimateStepper();
  v5 = (_QWORD *)swift_dynamicCastClass(a1, v4);
  if (v5)
  {
    v6 = v5;
    v7 = *(uint64_t (**)(double))((swift_isaMask & *v5) + 0x258);
    v8 = a1;
    v9 = v7(44.0);
    (*(void (**)(uint64_t, double))((swift_isaMask & *v6) + 0x270))(v9, 44.0);
    v10 = *(void **)(v3 + OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_popoverTapView);
    v11 = (char *)v6 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate;
    swift_beginAccess((char *)v6 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate, v25, 1, 0);
    *((_QWORD *)v11 + 1) = &off_10009E610;
    swift_unknownObjectWeakAssign(v11, v10);
    v12 = v10;
    sub_10005A6A0();

  }
  else
  {
    v13 = type metadata accessor for ClimateDeepLinkButton();
    v14 = swift_dynamicCastClass(a1, v13);
    if (v14)
    {
      v15 = (char *)v14;
      v16 = a1;
      objc_msgSend(v15, "addTarget:action:forControlEvents:", v3, "didTapDeepLinkButton:", 64);
      v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_popoverTapView);
      v18 = &v15[OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate];
      swift_beginAccess(v18, v25, 1, 0);
      *((_QWORD *)v18 + 1) = &off_10009E610;
      swift_unknownObjectWeakAssign(v18, v17);

    }
    else
    {
      v19 = type metadata accessor for ClimateButton();
      v20 = swift_dynamicCastClass(a1, v19);
      if (v20)
      {
        v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_popoverTapView);
        v22 = v20 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate;
        swift_beginAccess(v20 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate, v25, 1, 0);
        *(_QWORD *)(v22 + 8) = &off_10009E610;
        swift_unknownObjectWeakAssign(v22, v21);
      }
    }
  }
  return a1;
}

id sub_1000366A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateVerticalQuickActionPopover(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000366D8()
{
  return type metadata accessor for ClimateVerticalQuickActionPopover(0);
}

uint64_t type metadata accessor for ClimateVerticalQuickActionPopover(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B88F8;
  if (!qword_1000B88F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateVerticalQuickActionPopover);
  return result;
}

uint64_t sub_10003671C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 304);
}

uint64_t sub_100036750()
{
  return sub_100004250();
}

char *sub_100036778(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  char *v5;
  id v6;
  char *v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  char *v14;
  void *v15;
  char *v16;
  _BYTE *v17;
  char *v18;

  v3 = &v1[OBJC_IVAR____TtC7Climate26ClimateCompressorIndicator_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = objc_allocWithZone((Class)type metadata accessor for ClimateCompressorButton());
  v5 = v1;
  v6 = a1;
  v7 = sub_100004328(v6, 1);
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate26ClimateCompressorIndicator_compressorButton] = v7;
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate26ClimateCompressorIndicator_cabin] = v6;
  v8 = v6;

  v9 = (char *)sub_100012568(0, 0, 1);
  v10 = v9;
  v11 = OBJC_IVAR____TtC7Climate26ClimateCompressorIndicator_compressorButton;
  v12 = *(_BYTE **)&v9[OBJC_IVAR____TtC7Climate26ClimateCompressorIndicator_compressorButton];
  v13 = v12[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v12[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if (v13 == 1)
  {
    v14 = v9;
  }
  else
  {
    v15 = *(void **)&v12[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v16 = v9;
    v17 = v12;
    objc_msgSend(v15, "removeFromSuperview");
    sub_100066C24();

  }
  objc_msgSend(v8, "registerObserver:", v10);
  objc_msgSend(v10, "addSubview:", *(_QWORD *)&v10[v11]);
  sub_100036920();
  v18 = v10;
  sub_10007813C();
  objc_msgSend(v18, "setEnabled:", (sub_100004250() & 0x18) == 0);
  sub_100066C24();
  ClimateButton.refreshColorConfig()();

  return v18;
}

void sub_100036920()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100006058((uint64_t *)&unk_1000B7590);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100088DF0;
  v5 = *(void **)&v1[OBJC_IVAR____TtC7Climate26ClimateCompressorIndicator_compressorButton];
  v6 = objc_msgSend(v5, "leadingAnchor");
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "trailingAnchor");
  v10 = objc_msgSend(v1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v5, "topAnchor");
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(v5, "bottomAnchor");
  v16 = objc_msgSend(v1, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100006098();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_100036B5C()
{
  return sub_100066C24();
}

void sub_100036B84()
{
  uint64_t v0;

  sub_10001BF8C(v0 + OBJC_IVAR____TtC7Climate26ClimateCompressorIndicator_delegate);

}

id sub_100036BC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateCompressorIndicator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateCompressorIndicator()
{
  return objc_opt_self(_TtC7Climate26ClimateCompressorIndicator);
}

uint64_t sub_100036CAC()
{
  char *v0;
  uint64_t result;
  uint64_t v2;

  sub_10007813C();
  objc_msgSend(v0, "setEnabled:", (sub_100004250() & 0x18) == 0);
  sub_100066C24();
  ClimateButton.refreshColorConfig()();
  result = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC7Climate26ClimateCompressorIndicator_delegate]);
  if (result)
  {
    v2 = result;
    sub_10003BE6C();
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

_QWORD *sub_100036D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC7Climate21ClimateSystemControls____lazy_storage___controls;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate21ClimateSystemControls____lazy_storage___controls);
  if (v2)
  {
    v3 = *(_QWORD **)(v0 + OBJC_IVAR____TtC7Climate21ClimateSystemControls____lazy_storage___controls);
  }
  else
  {
    v3 = sub_100036D90(v0);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

_QWORD *sub_100036D90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  void *v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = 0;
  v25 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7Climate21ClimateSystemControls_climate);
  while (1)
  {
    sub_100038E74(*((_BYTE *)&off_10009D7E0 + v1 + 32));
    v3 = v2;
    if ((unint64_t)v2 >> 62)
      break;
    v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_5;
LABEL_2:
    ++v1;
    swift_bridgeObjectRelease(v3);
    if (v1 == 6)
      return _swiftEmptyArrayStorage;
  }
  if (v2 < 0)
    v24 = v2;
  else
    v24 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v4 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_2;
LABEL_5:
  result = (_QWORD *)objc_opt_self(NSLayoutConstraint);
  if (v4 >= 1)
  {
    v6 = result;
    v26 = v1;
    swift_bridgeObjectRetain(v3);
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v8 = *(id *)(v3 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0, v25);
      objc_msgSend(v9, "_setContinuousCornerRadius:", 0.0);
      v10 = sub_100006058((uint64_t *)&unk_1000B7590);
      v11 = swift_allocObject(v10, 48, 7);
      *(_OWORD *)(v11 + 16) = xmmword_100088C40;
      v12 = objc_msgSend(v9, "heightAnchor");
      v13 = objc_msgSend(v12, "constraintEqualToConstant:", 44.0);

      *(_QWORD *)(v11 + 32) = v13;
      v14 = objc_msgSend(v9, "widthAnchor");
      v15 = objc_msgSend(v9, "heightAnchor");
      v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

      *(_QWORD *)(v11 + 40) = v16;
      specialized Array._endMutation()(v17);
      v18 = v11;
      sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v18);
      objc_msgSend(v6, "activateConstraints:", isa);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v22 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v22 >= v21 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
      v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v9);
      specialized Array._endMutation()(v23);
    }
    swift_bridgeObjectRelease(v3);
    v1 = v26;
    goto LABEL_2;
  }
  __break(1u);
  return result;
}

void sub_1000370FC()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  int v8;
  __objc2_prot **v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __objc2_prot **v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  double v31;
  __n128 v32;
  uint64_t v33;
  id v34;
  Class isa;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  Class v54;
  CGFloat Height;
  uint64_t v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v3 = (unsigned __int8 *)v0;
  v4 = OBJC_IVAR____TtC7Climate21ClimateSystemControls_areButtonsAlreadyVisible;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC7Climate21ClimateSystemControls_areButtonsAlreadyVisible) & 1) != 0
    || (objc_msgSend((id)v0, "bounds"), CGRectGetHeight(v57) == 0.0))
  {
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v5 = qword_1000BC938;
    v54 = v3;
    v6 = static os_log_type_t.default.getter(v54);
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc(18, -1);
      v8 = v3[v4];
      *(_DWORD *)v7 = 67109376;
      LODWORD(Height) = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&Height, (char *)&Height + 4, v7 + 4, v7 + 8);
      *(_WORD *)(v7 + 8) = 2048;
      -[objc_class bounds](v54, "bounds");
      Height = CGRectGetHeight(v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&Height, &v56, v7 + 10, v7 + 18);

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "System control buttons already visible: %{BOOL}d, view height: %f", (uint8_t *)v7, 0x12u);
      swift_slowDealloc(v7, -1, -1);
      return;
    }
    goto LABEL_43;
  }
  *(_BYTE *)(v0 + v4) = 1;
  v9 = &off_1000AA000;
  objc_msgSend((id)v0, "frame");
  v10 = (CGRectGetHeight(v59) + 4.0) / 48.0;
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v1 = (uint64_t)v10;
  v0 = (uint64_t)sub_100036D2C();
  if (!((unint64_t)v0 >> 62))
  {
    v11 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_12;
  }
LABEL_47:
  if (v0 < 0)
    v49 = v0;
  else
    v49 = v0 & 0xFFFFFFFFFFFFFF8;
  v11 = _CocoaArrayWrapper.endIndex.getter(v49);
LABEL_12:
  swift_bridgeObjectRelease(v0);
  if (v11 >= v1)
    v12 = v1;
  else
    v12 = v11;
  objc_msgSend(v3, "frame");
  v13 = CGRectGetHeight(v60);
  v14 = (uint64_t)sub_100036D2C();
  v15 = v14;
  if ((unint64_t)v14 >> 62)
  {
    if (v14 >= 0)
      v14 &= 0xFFFFFFFFFFFFFF8uLL;
    v16 = _CocoaArrayWrapper.endIndex.getter(v14);
  }
  else
  {
    v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v15);
  if (v16 <= v1)
  {
    v21 = (uint64_t)sub_100036D2C();
LABEL_40:
    v31 = fmin((v13 + (double)v12 * -44.0) / (double)v12, 30.0);
    if ((unint64_t)v21 >> 62)
    {
      if (v21 < 0)
        v50 = v21;
      else
        v50 = v21 & 0xFFFFFFFFFFFFFF8;
      v51 = sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
      v52 = swift_bridgeObjectRetain(v21);
      v33 = _bridgeCocoaArray<A>(_:)(v50, v51, v52);
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      v32 = swift_bridgeObjectRetain(v21);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v32);
      sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
      v33 = v21;
    }
    swift_bridgeObjectRelease(v21);
    v34 = objc_allocWithZone((Class)UIStackView);
    sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v33);
    v36 = objc_msgSend(v34, "initWithArrangedSubviews:", isa);

    objc_msgSend(v3, "addSubview:", v36);
    objc_msgSend(v36, "setAxis:", 1);
    objc_msgSend(v36, "setSpacing:", v31);
    objc_msgSend(v36, "setAlignment:", 3);
    objc_msgSend(v36, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v37 = (void *)objc_opt_self(NSLayoutConstraint);
    v38 = sub_100006058((uint64_t *)&unk_1000B7590);
    v39 = swift_allocObject(v38, 56, 7);
    *(_OWORD *)(v39 + 16) = xmmword_100088E10;
    v40 = objc_msgSend(v36, "widthAnchor");
    v41 = objc_msgSend(v40, "constraintEqualToConstant:", 60.0);

    *(_QWORD *)(v39 + 32) = v41;
    v42 = objc_msgSend(v36, "centerXAnchor");
    v43 = objc_msgSend(v3, "centerXAnchor");
    v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

    *(_QWORD *)(v39 + 40) = v44;
    v45 = objc_msgSend(v36, "centerYAnchor");
    v46 = objc_msgSend(v3, "centerYAnchor");
    v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

    *(_QWORD *)(v39 + 48) = v47;
    specialized Array._endMutation()(v48);
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    v54 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v39);
    objc_msgSend(v37, "activateConstraints:", v54);

LABEL_43:
    return;
  }
  if (v1 < 0)
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)sub_100036D2C();
    v16 = v17;
    v9 = (__objc2_prot **)(v17 >> 62);
    if (!(v17 >> 62))
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v18 >= v1)
      {
LABEL_21:
        if ((v16 & 0xC000000000000001) != 0 && v1)
        {
          type metadata accessor for ClimateButton();
          v19 = 0;
          do
          {
            v20 = v19 + 1;
            _ArrayBuffer._typeCheckSlowPath(_:)(v19);
            v19 = v20;
          }
          while (v1 != v20);
        }
        if (v9)
        {
          if (v16 < 0)
            v22 = v16;
          else
            v22 = v16 & 0xFFFFFFFFFFFFFF8;
          v23 = swift_bridgeObjectRetain(v16);
          v18 = _CocoaArrayWrapper.subscript.getter(0, v1, v22, v23);
          v2 = v24;
          v9 = v25;
          v1 = v26;
          swift_bridgeObjectRelease_n(v16, 2);
          if ((v1 & 1) == 0)
            goto LABEL_33;
        }
        else
        {
          v18 = v16 & 0xFFFFFFFFFFFFFF8;
          v2 = (v16 & 0xFFFFFFFFFFFFFF8) + 32;
          v1 = (2 * v1) | 1;
          if ((v1 & 1) == 0)
          {
LABEL_33:
            v21 = (uint64_t)sub_10004EDAC(v18, v2, (uint64_t)v9, v1);
            swift_unknownObjectRelease(v18);
            goto LABEL_40;
          }
        }
        v27 = type metadata accessor for __ContiguousArrayStorageBase(0);
        v28 = swift_unknownObjectRetain_n(v18, 2);
        v29 = (_QWORD *)swift_dynamicCastClass(v28, v27);
        if (!v29)
        {
          swift_unknownObjectRelease(v18);
          v29 = _swiftEmptyArrayStorage;
        }
        v30 = v29[2];
        swift_release(v29);
        if (!__OFSUB__((unint64_t)v1 >> 1, v9))
        {
          v17 = v18;
          if (v30 == ((unint64_t)v1 >> 1) - (_QWORD)v9)
          {
            v21 = swift_dynamicCastClass(v18, v27);
            swift_unknownObjectRelease(v18);
            if (!v21)
            {
              swift_unknownObjectRelease(v18);
              v21 = (uint64_t)_swiftEmptyArrayStorage;
            }
            goto LABEL_40;
          }
          goto LABEL_66;
        }
LABEL_65:
        __break(1u);
LABEL_66:
        swift_unknownObjectRelease(v17);
        goto LABEL_33;
      }
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
  }
  if (v16 < 0)
    v53 = v16;
  else
    v53 = v16 & 0xFFFFFFFFFFFFFF8;
  if ((_CocoaArrayWrapper.endIndex.getter(v53) & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain(v16);
    v18 = _CocoaArrayWrapper.endIndex.getter(v53);
    v17 = swift_bridgeObjectRelease(v16);
    if (v18 >= v1)
      goto LABEL_21;
    goto LABEL_64;
  }
  __break(1u);
}

id sub_100037898()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateSystemControls();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateSystemControls()
{
  return objc_opt_self(_TtC7Climate21ClimateSystemControls);
}

uint64_t sub_100037920(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100038E60(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100037998(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_100037998(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  Swift::Int v25;
  Swift::Int v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  id *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  Swift::Int v52;
  Swift::Int v53;
  uint64_t *v54;
  uint64_t v55;
  Swift::Int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  Swift::Int v60;
  void *v61;
  Swift::Int v62;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  char v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  char v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  Swift::Int v138;
  char *v139;
  char *v140;
  char *v141;
  unint64_t v142;
  Swift::Int v143;
  Swift::Int v144;
  char *v145;
  char *v146;
  char *v147;
  void **v148;
  uint64_t v149;
  uint64_t v150;
  unsigned int v151;
  Swift::Int v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;

  v3 = type metadata accessor for CAUVehicleLayoutKey(0);
  v156 = *(_QWORD *)(v3 - 8);
  v157 = v3;
  __chkstk_darwin(v3);
  v155 = (char *)&v135 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v154 = (char *)&v135 - v6;
  __chkstk_darwin(v7);
  v147 = (char *)&v135 - v8;
  __chkstk_darwin(v9);
  v146 = (char *)&v135 - v10;
  __chkstk_darwin(v11);
  v140 = (char *)&v135 - v12;
  __chkstk_darwin(v13);
  v141 = (char *)&v135 - v14;
  v15 = a1[1];
  v16 = _minimumMergeRunLength(_:)(v15);
  if (v16 >= v15)
  {
    if (v15 < 0)
      goto LABEL_146;
    if (v15)
      sub_100038480(0, v15, 1, a1);
    return;
  }
  if (v15 >= 0)
    v17 = v15;
  else
    v17 = v15 + 1;
  if (v15 < -1)
    goto LABEL_154;
  v138 = v16;
  v149 = v1;
  v135 = a1;
  if (v15 < 2)
  {
    v21 = (char *)_swiftEmptyArrayStorage;
    v162 = (uint64_t)_swiftEmptyArrayStorage;
    v148 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v15 != 1)
    {
      v24 = _swiftEmptyArrayStorage[2];
LABEL_112:
      if (v24 >= 2)
      {
        v127 = *v135;
        do
        {
          v128 = v24 - 2;
          if (v24 < 2)
            goto LABEL_141;
          if (!v127)
            goto LABEL_153;
          v129 = *(_QWORD *)&v21[16 * v128 + 32];
          v130 = *(_QWORD *)&v21[16 * v24 + 24];
          v131 = v149;
          sub_1000386F4((char *)(v127 + 8 * v129), (void **)(v127 + 8 * *(_QWORD *)&v21[16 * v24 + 16]), (char *)(v127 + 8 * v130), v148);
          v149 = v131;
          if (v131)
            break;
          if (v130 < v129)
            goto LABEL_142;
          if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
            v21 = sub_100038E4C((uint64_t)v21);
          if (v128 >= *((_QWORD *)v21 + 2))
            goto LABEL_143;
          v132 = &v21[16 * v128 + 32];
          *(_QWORD *)v132 = v129;
          *((_QWORD *)v132 + 1) = v130;
          v133 = *((_QWORD *)v21 + 2);
          if (v24 > v133)
            goto LABEL_144;
          memmove(&v21[16 * v24 + 16], &v21[16 * v24 + 32], 16 * (v133 - v24));
          *((_QWORD *)v21 + 2) = v133 - 1;
          v24 = v133 - 1;
        }
        while (v133 > 2);
      }
LABEL_123:
      v134 = swift_bridgeObjectRelease(v21);
      *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v134);
      swift_bridgeObjectRelease(v162);
      return;
    }
  }
  else
  {
    v18 = v17 >> 1;
    v19 = sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
    v20 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18, v19);
    *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) = v18;
    v148 = (void **)((v20 & 0xFFFFFFFFFFFFFF8) + 32);
    v162 = v20;
  }
  v22 = 0;
  v23 = *a1;
  v151 = enum case for CAUVehicleLayoutKey.windshield_front(_:);
  v137 = v23 + 16;
  v136 = v23 - 8;
  v21 = (char *)_swiftEmptyArrayStorage;
  v144 = v15;
  v153 = v23;
LABEL_15:
  v25 = v22;
  v26 = v22 + 1;
  v143 = v22;
  if (v22 + 1 < v15)
  {
    v139 = v21;
    v27 = *(void **)(v23 + 8 * v26);
    v28 = *(void **)(v23 + 8 * v22);
    v29 = sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
    v30 = v27;
    v31 = v28;
    v150 = v29;
    CAFPositionedRequired.layoutKey.getter(v29);
    v32 = v157;
    v33 = v140;
    v145 = *(char **)(v156 + 104);
    ((void (*)(char *, _QWORD, uint64_t))v145)(v140, v151, v157);
    v34 = sub_100039740();
    dispatch thunk of RawRepresentable.rawValue.getter(&v160, v32, v34);
    v142 = v34;
    dispatch thunk of RawRepresentable.rawValue.getter(&v158, v32, v34);
    v35 = v161;
    v36 = v159;
    if (v160 == v158 && v161 == v159)
    {
      LODWORD(v152) = 1;
      v36 = v161;
    }
    else
    {
      LODWORD(v152) = _stringCompareWithSmolCheck(_:_:expecting:)(v160, v161, v158, v159, 0);
    }
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v36);
    v37 = v157;
    v38 = *(void (**)(char *, uint64_t))(v156 + 8);
    v38(v33, v157);
    v38(v141, v37);

    v26 = v25 + 2;
    if (v25 + 2 >= v144)
    {
      v15 = v144;
    }
    else
    {
      v39 = (id *)(v137 + 8 * v25);
      while (1)
      {
        v40 = *(v39 - 1);
        v41 = *v39;
        v42 = v40;
        CAFPositionedRequired.layoutKey.getter(v150);
        v43 = v157;
        ((void (*)(char *, _QWORD, uint64_t))v145)(v147, v151, v157);
        v44 = v142;
        dispatch thunk of RawRepresentable.rawValue.getter(&v160, v43, v142);
        dispatch thunk of RawRepresentable.rawValue.getter(&v158, v43, v44);
        v45 = v161;
        v46 = v159;
        if (v160 == v158 && v161 == v159)
        {
          v48 = 1;
          v46 = v161;
        }
        else
        {
          v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v160, v161, v158, v159, 0);
        }
        swift_bridgeObjectRelease(v45);
        swift_bridgeObjectRelease(v46);
        v49 = v157;
        v38(v147, v157);
        v38(v146, v49);

        if (((v152 ^ v48) & 1) != 0)
          break;
        ++v39;
        if (v144 == ++v26)
        {
          v15 = v144;
          v26 = v144;
          goto LABEL_33;
        }
      }
      v15 = v144;
LABEL_33:
      v25 = v143;
    }
    v21 = v139;
    v50 = v153;
    if ((v152 & 1) != 0)
    {
      if (v26 < v25)
        goto LABEL_147;
      if (v25 < v26)
      {
        v51 = (uint64_t *)(v136 + 8 * v26);
        v52 = v26;
        v53 = v25;
        v54 = (uint64_t *)(v153 + 8 * v25);
        do
        {
          if (v53 != --v52)
          {
            if (!v50)
              goto LABEL_152;
            v55 = *v54;
            *v54 = *v51;
            *v51 = v55;
          }
          ++v53;
          --v51;
          ++v54;
        }
        while (v53 < v52);
      }
    }
  }
  if (v26 >= v15)
    goto LABEL_64;
  if (__OFSUB__(v26, v25))
    goto LABEL_145;
  if (v26 - v25 >= v138)
    goto LABEL_64;
  if (__OFADD__(v25, v138))
    goto LABEL_148;
  if (v25 + v138 >= v15)
    v56 = v15;
  else
    v56 = v25 + v138;
  if (v56 >= v25)
  {
    if (v26 == v56)
      goto LABEL_64;
    v139 = v21;
    v57 = sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
    v58 = v153;
    v150 = v57;
    v59 = (char *)(v136 + 8 * v26);
    v142 = v56;
LABEL_55:
    v61 = *(void **)(v58 + 8 * v26);
    v62 = v25;
    v145 = v59;
    v152 = v26;
    while (1)
    {
      v63 = *(void **)v59;
      v64 = v61;
      v65 = v63;
      CAFPositionedRequired.layoutKey.getter(v150);
      v66 = v157;
      (*(void (**)(char *, _QWORD, uint64_t))(v156 + 104))(v155, v151, v157);
      v67 = sub_100039740();
      dispatch thunk of RawRepresentable.rawValue.getter(&v160, v66, v67);
      dispatch thunk of RawRepresentable.rawValue.getter(&v158, v66, v67);
      v68 = v161;
      v69 = v159;
      if (v160 == v158 && v161 == v159)
      {
        swift_bridgeObjectRelease_n(v161, 2);
        v70 = *(void (**)(char *, uint64_t))(v156 + 8);
        v71 = v157;
        v70(v155, v157);
        v70(v154, v71);

      }
      else
      {
        v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v160, v161, v158, v159, 0);
        swift_bridgeObjectRelease(v68);
        swift_bridgeObjectRelease(v69);
        v73 = *(void (**)(char *, uint64_t))(v156 + 8);
        v74 = v157;
        v73(v155, v157);
        v73(v154, v74);

        if ((v72 & 1) == 0)
        {
          v60 = v152;
          v58 = v153;
LABEL_54:
          v26 = v60 + 1;
          v59 = v145 + 8;
          v25 = v143;
          if (v26 != v142)
            goto LABEL_55;
          v26 = v142;
          v21 = v139;
LABEL_64:
          if (v26 < v25)
            goto LABEL_140;
          if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
            v21 = sub_100038CA8(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
          v77 = *((_QWORD *)v21 + 2);
          v76 = *((_QWORD *)v21 + 3);
          v24 = v77 + 1;
          v23 = v153;
          if (v77 >= v76 >> 1)
          {
            v126 = sub_100038CA8((char *)(v76 > 1), v77 + 1, 1, v21);
            v23 = v153;
            v21 = v126;
          }
          *((_QWORD *)v21 + 2) = v24;
          v78 = v21 + 32;
          v79 = &v21[16 * v77 + 32];
          *(_QWORD *)v79 = v25;
          *((_QWORD *)v79 + 1) = v26;
          v152 = v26;
          if (v77)
          {
LABEL_70:
            v80 = v24 - 1;
            if (v24 >= 4)
            {
              v85 = &v78[16 * v24];
              v86 = *((_QWORD *)v85 - 8);
              v87 = *((_QWORD *)v85 - 7);
              v91 = __OFSUB__(v87, v86);
              v88 = v87 - v86;
              if (v91)
                goto LABEL_129;
              v90 = *((_QWORD *)v85 - 6);
              v89 = *((_QWORD *)v85 - 5);
              v91 = __OFSUB__(v89, v90);
              v83 = v89 - v90;
              v84 = v91;
              if (v91)
                goto LABEL_130;
              v92 = v24 - 2;
              v93 = &v78[16 * v24 - 32];
              v95 = *(_QWORD *)v93;
              v94 = *((_QWORD *)v93 + 1);
              v91 = __OFSUB__(v94, v95);
              v96 = v94 - v95;
              if (v91)
                goto LABEL_132;
              v91 = __OFADD__(v83, v96);
              v97 = v83 + v96;
              if (v91)
                goto LABEL_135;
              if (v97 >= v88)
              {
                v115 = &v78[16 * v80];
                v117 = *(_QWORD *)v115;
                v116 = *((_QWORD *)v115 + 1);
                v91 = __OFSUB__(v116, v117);
                v118 = v116 - v117;
                if (v91)
                  goto LABEL_139;
                v108 = v83 < v118;
              }
              else
              {
LABEL_83:
                if ((v84 & 1) != 0)
                  goto LABEL_131;
                v92 = v24 - 2;
                v98 = &v78[16 * v24 - 32];
                v100 = *(_QWORD *)v98;
                v99 = *((_QWORD *)v98 + 1);
                v101 = __OFSUB__(v99, v100);
                v102 = v99 - v100;
                v103 = v101;
                if (v101)
                  goto LABEL_134;
                v104 = &v78[16 * v80];
                v106 = *(_QWORD *)v104;
                v105 = *((_QWORD *)v104 + 1);
                v91 = __OFSUB__(v105, v106);
                v107 = v105 - v106;
                if (v91)
                  goto LABEL_137;
                if (__OFADD__(v102, v107))
                  goto LABEL_138;
                if (v102 + v107 < v83)
                  goto LABEL_95;
                v108 = v83 < v107;
              }
              if (v108)
                v80 = v92;
            }
            else
            {
              if (v24 == 3)
              {
                v82 = *((_QWORD *)v21 + 4);
                v81 = *((_QWORD *)v21 + 5);
                v91 = __OFSUB__(v81, v82);
                v83 = v81 - v82;
                v84 = v91;
                goto LABEL_83;
              }
              v109 = *((_QWORD *)v21 + 4);
              v110 = *((_QWORD *)v21 + 5);
              v91 = __OFSUB__(v110, v109);
              v102 = v110 - v109;
              v103 = v91;
LABEL_95:
              if ((v103 & 1) != 0)
                goto LABEL_133;
              v111 = &v78[16 * v80];
              v113 = *(_QWORD *)v111;
              v112 = *((_QWORD *)v111 + 1);
              v91 = __OFSUB__(v112, v113);
              v114 = v112 - v113;
              if (v91)
                goto LABEL_136;
              if (v114 < v102)
                goto LABEL_14;
            }
            v119 = v80 - 1;
            if (v80 - 1 >= v24)
            {
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
              break;
            }
            if (!v23)
              goto LABEL_151;
            v120 = &v78[16 * v119];
            v121 = *(_QWORD *)v120;
            v122 = &v78[16 * v80];
            v123 = *((_QWORD *)v122 + 1);
            v124 = v149;
            sub_1000386F4((char *)(v23 + 8 * *(_QWORD *)v120), (void **)(v23 + 8 * *(_QWORD *)v122), (char *)(v23 + 8 * v123), v148);
            v149 = v124;
            if (v124)
              goto LABEL_123;
            if (v123 < v121)
              goto LABEL_126;
            if (v80 > *((_QWORD *)v21 + 2))
              goto LABEL_127;
            *(_QWORD *)v120 = v121;
            *(_QWORD *)&v78[16 * v119 + 8] = v123;
            v125 = *((_QWORD *)v21 + 2);
            if (v80 >= v125)
              goto LABEL_128;
            v24 = v125 - 1;
            memmove(&v78[16 * v80], v122 + 16, 16 * (v125 - 1 - v80));
            *((_QWORD *)v21 + 2) = v125 - 1;
            v23 = v153;
            if (v125 <= 2)
              goto LABEL_14;
            goto LABEL_70;
          }
          v24 = 1;
LABEL_14:
          v15 = v144;
          v22 = v152;
          if (v152 >= v144)
            goto LABEL_112;
          goto LABEL_15;
        }
      }
      v58 = v153;
      if (!v153)
        goto LABEL_150;
      v75 = *(_QWORD *)v59;
      v61 = (void *)*((_QWORD *)v59 + 1);
      *(_QWORD *)v59 = v61;
      *((_QWORD *)v59 + 1) = v75;
      v59 -= 8;
      ++v62;
      v60 = v152;
      if (v152 == v62)
        goto LABEL_54;
    }
  }
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100038480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  v29 = a1;
  v7 = type metadata accessor for CAUVehicleLayoutKey(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v41 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v36 = (char *)&v27 - v11;
  v28 = a2;
  if (a3 != a2)
  {
    v12 = *a4;
    v32 = enum case for CAUVehicleLayoutKey.windshield_front(_:);
    v31 = sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
    v33 = v12;
    v13 = v12 + 8 * a3 - 8;
LABEL_5:
    v14 = *(void **)(v33 + 8 * a3);
    v15 = v29;
    v30 = v13;
    v34 = a3;
    while (1)
    {
      v16 = *(void **)v13;
      v17 = v14;
      v35 = v16;
      CAFPositionedRequired.layoutKey.getter(v31);
      v18 = v8;
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v41, v32, v7);
      v19 = sub_100039740();
      dispatch thunk of RawRepresentable.rawValue.getter(&v39, v7, v19);
      dispatch thunk of RawRepresentable.rawValue.getter(&v37, v7, v19);
      v20 = v40;
      v21 = v38;
      if (v39 != v37)
        goto LABEL_9;
      if (v40 == v38)
      {
        swift_bridgeObjectRelease_n(v40, 2);
        v8 = v18;
        v22 = *(void (**)(char *, uint64_t))(v18 + 8);
        v22(v41, v7);
        v22(v36, v7);

        v23 = v34;
      }
      else
      {
LABEL_9:
        v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v37, v38, 0);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v21);
        v8 = v18;
        v25 = *(void (**)(char *, uint64_t))(v18 + 8);
        v25(v41, v7);
        v25(v36, v7);

        v23 = v34;
        if ((v24 & 1) == 0)
          goto LABEL_4;
      }
      if (!v33)
        break;
      v26 = *(void **)v13;
      v14 = *(void **)(v13 + 8);
      *(_QWORD *)v13 = v14;
      *(_QWORD *)(v13 + 8) = v26;
      v13 -= 8;
      if (v23 == ++v15)
      {
LABEL_4:
        a3 = v23 + 1;
        v13 = v30 + 8;
        if (a3 == v28)
          return;
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1000386F4(char *a1, void **a2, char *a3, void **a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  void **v22;
  char *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  unint64_t v37;
  void **v38;
  void **v39;
  char *v40;
  char *v41;
  void **v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  void (*v54)(void **, uint64_t);
  char *v55;
  void **v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  void **v64;
  char *v65;
  void **v66;
  void **v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void **v74;
  void **v75;
  void **v76;

  v8 = type metadata accessor for CAUVehicleLayoutKey(0);
  v68 = *(_QWORD *)(v8 - 8);
  v69 = v8;
  __chkstk_darwin(v8);
  v66 = (void **)((char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v64 = (void **)((char *)&v58 - v11);
  __chkstk_darwin(v12);
  v65 = (char *)&v58 - v13;
  __chkstk_darwin(v14);
  v62 = a3;
  v63 = (char *)&v58 - v15;
  v16 = (char *)a2 - a1;
  v17 = (char *)a2 - a1 + 7;
  if ((char *)a2 - a1 >= 0)
    v17 = (char *)a2 - a1;
  v18 = v17 >> 3;
  v19 = a3 - (char *)a2;
  v20 = v19 / 8;
  v61 = a1;
  v76 = (void **)a1;
  v67 = a4;
  v75 = a4;
  if (v17 >> 3 >= v19 / 8)
  {
    if (v19 >= -7)
    {
      v39 = v67;
      if (v67 != a2 || &a2[v20] <= v67)
        memmove(v67, a2, 8 * v20);
      v40 = (char *)&v39[v20];
      v74 = (void **)v40;
      v76 = a2;
      if (v19 >= 8 && v61 < (char *)a2)
      {
        LODWORD(v60) = enum case for CAUVehicleLayoutKey.windshield_front(_:);
        v59 = sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
        v41 = v62 - 8;
        v42 = a2;
        do
        {
          v65 = (char *)a2;
          v63 = v40;
          v44 = (void *)*((_QWORD *)v40 - 1);
          v40 -= 8;
          v43 = v44;
          v45 = *--v42;
          v46 = v43;
          v62 = v45;
          CAFPositionedRequired.layoutKey.getter(v59);
          v47 = v69;
          (*(void (**)(void **, _QWORD, uint64_t))(v68 + 104))(v66, v60, v69);
          v48 = sub_100039740();
          dispatch thunk of RawRepresentable.rawValue.getter(&v72, v47, v48);
          dispatch thunk of RawRepresentable.rawValue.getter(&v70, v47, v48);
          v49 = v73;
          v50 = v71;
          if (v72 == v70 && v73 == v71)
          {
            v51 = 1;
            v50 = v73;
          }
          else
          {
            v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v70, v71, 0);
          }
          v52 = v41 + 8;
          swift_bridgeObjectRelease(v49);
          swift_bridgeObjectRelease(v50);
          v53 = v69;
          v54 = *(void (**)(void **, uint64_t))(v68 + 8);
          v54(v66, v69);
          v54(v64, v53);

          v55 = v65;
          if ((v51 & 1) != 0)
          {
            if (v52 != v65 || v41 >= v65)
              *(_QWORD *)v41 = *v42;
            v76 = v42;
            v56 = (void **)v61;
            v40 = v63;
            if (v63 <= (char *)v67)
              break;
          }
          else
          {
            v74 = (void **)v40;
            if (v52 < v63 || v41 >= v63 || v52 != v63)
              *(_QWORD *)v41 = *(_QWORD *)v40;
            v42 = (void **)v55;
            v56 = (void **)v61;
            if (v40 <= (char *)v67)
              break;
          }
          v41 -= 8;
          a2 = v42;
        }
        while (v42 > v56);
      }
LABEL_49:
      sub_100038DA4((void **)&v76, (const void **)&v75, &v74);
      return 1;
    }
  }
  else if (v16 >= -7)
  {
    v21 = v67;
    v22 = (void **)v61;
    if (v67 != (void **)v61 || &v61[8 * v18] <= (char *)v67)
      memmove(v67, v61, 8 * v18);
    v66 = &v21[v18];
    v74 = v66;
    if (v16 >= 8 && a2 < (void **)v62)
    {
      LODWORD(v64) = enum case for CAUVehicleLayoutKey.windshield_front(_:);
      v60 = sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
      v23 = v65;
      while (1)
      {
        v24 = *a2;
        v67 = v21;
        v25 = *v21;
        v26 = v24;
        v27 = v25;
        CAFPositionedRequired.layoutKey.getter(v60);
        v28 = v69;
        (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v23, v64, v69);
        v29 = sub_100039740();
        dispatch thunk of RawRepresentable.rawValue.getter(&v72, v28, v29);
        dispatch thunk of RawRepresentable.rawValue.getter(&v70, v28, v29);
        v30 = v73;
        v31 = v71;
        if (v72 == v70 && v73 == v71)
        {
          swift_bridgeObjectRelease_n(v73, 2);
          v32 = v69;
          v33 = *(void (**)(char *, uint64_t))(v68 + 8);
          v33(v65, v69);
          v33(v63, v32);

        }
        else
        {
          v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v73, v70, v71, 0);
          swift_bridgeObjectRelease(v30);
          swift_bridgeObjectRelease(v31);
          v35 = v69;
          v36 = *(void (**)(char *, uint64_t))(v68 + 8);
          v36(v65, v69);
          v36(v63, v35);

          if ((v34 & 1) == 0)
          {
            v38 = v67;
            if (v22 != v67)
              *v22 = *v67;
            v21 = v38 + 1;
            v75 = v21;
            v37 = (unint64_t)a2;
            goto LABEL_23;
          }
        }
        v37 = (unint64_t)(a2 + 1);
        if (v22 < a2 || (unint64_t)v22 >= v37 || v22 != a2)
          *v22 = *a2;
        v21 = v67;
LABEL_23:
        v76 = ++v22;
        if (v21 < v66)
        {
          a2 = (void **)v37;
          if (v37 < (unint64_t)v62)
            continue;
        }
        goto LABEL_49;
      }
    }
    goto LABEL_49;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100038CA8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006058(&qword_1000B8990);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_100038DA4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_100038E4C(uint64_t a1)
{
  return sub_100038CA8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100038E60(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_100038E74(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[16];

  type metadata accessor for CAUVehicleLayoutKey(0);
  v2 = ((uint64_t (*)(void))__chkstk_darwin)();
  v9[6] = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v9[5] = (char *)v9 - v5;
  v6 = __chkstk_darwin(v4);
  v9[9] = (char *)v9 - v7;
  __chkstk_darwin(v6);
  v9[8] = (char *)v9 - v8;
  __asm { BR              X10 }
}

_QWORD *sub_100038F54(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  void (*v36)(_QWORD, _QWORD, uint64_t);
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  void (*v44)(_QWORD, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v24 = objc_msgSend(v20, "defrosts");
  v25 = _swiftEmptyArrayStorage;
  if (!v24)
    return v25;
  v26 = v24;
  v27 = sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
  *(_QWORD *)(v23 - 152) = v27;
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

  *(_QWORD *)(v23 - 88) = _swiftEmptyArrayStorage;
  if ((unint64_t)v28 >> 62)
  {
    if (v28 < 0)
      v51 = v28;
    else
      v51 = v28 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v28);
    v29 = _CocoaArrayWrapper.endIndex.getter(v51);
    swift_bridgeObjectRelease(v28);
    if (v29)
      goto LABEL_4;
LABEL_26:
    swift_bridgeObjectRelease(v28);
    v50 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_27;
  }
  v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v29)
    goto LABEL_26;
LABEL_4:
  if (v29 < 1)
    goto LABEL_46;
  v30 = 0;
  *(_QWORD *)(v23 - 192) = v28 & 0xC000000000000001;
  *(_DWORD *)(v23 - 196) = enum case for CAUVehicleLayoutKey.windshield_front(_:);
  *(_DWORD *)(v23 - 200) = enum case for CAUVehicleLayoutKey.windshield_rear(_:);
  *(_QWORD *)(v23 - 184) = v29;
  *(_QWORD *)(v23 - 176) = v28;
  do
  {
    if (*(_QWORD *)(v23 - 192))
      v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v28);
    else
      v34 = *(id *)(v28 + 8 * v30 + 32);
    v35 = v34;
    CAFPositionedRequired.layoutKey.getter(*(_QWORD *)(v23 - 152));
    v36 = *(void (**)(_QWORD, _QWORD, uint64_t))(v22 + 104);
    v36(*(_QWORD *)(v23 - 136), *(unsigned int *)(v23 - 196), v21);
    v37 = sub_100039740();
    dispatch thunk of RawRepresentable.rawValue.getter((_QWORD *)(v23 - 104), v21, v37);
    dispatch thunk of RawRepresentable.rawValue.getter((_QWORD *)(v23 - 120), v21, v37);
    v38 = *(_QWORD *)(v23 - 104);
    v39 = *(_QWORD *)(v23 - 96);
    v40 = *(_QWORD *)(v23 - 120);
    v41 = *(_QWORD *)(v23 - 112);
    if (v38 == v40 && v39 == v41)
    {
      v42 = 1;
      v41 = *(_QWORD *)(v23 - 96);
    }
    else
    {
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, *(_QWORD *)(v23 - 96), v40, *(_QWORD *)(v23 - 112), 0);
    }
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v41);
    v43 = v22;
    v44 = *(void (**)(_QWORD, uint64_t))(v22 + 8);
    v44(*(_QWORD *)(v23 - 136), v21);
    v31 = ((uint64_t (*)(_QWORD, uint64_t))v44)(*(_QWORD *)(v23 - 144), v21);
    if ((v42 & 1) != 0)
      goto LABEL_7;
    CAFPositionedRequired.layoutKey.getter(*(_QWORD *)(v23 - 152));
    v36(*(_QWORD *)(v23 - 160), *(unsigned int *)(v23 - 200), v21);
    dispatch thunk of RawRepresentable.rawValue.getter((_QWORD *)(v23 - 104), v21, v37);
    dispatch thunk of RawRepresentable.rawValue.getter((_QWORD *)(v23 - 120), v21, v37);
    v45 = *(_QWORD *)(v23 - 104);
    v46 = *(_QWORD *)(v23 - 96);
    v47 = *(_QWORD *)(v23 - 120);
    v48 = *(_QWORD *)(v23 - 112);
    if (v45 == v47 && v46 == v48)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v23 - 96), 2);
      v44(*(_QWORD *)(v23 - 160), v21);
      v31 = ((uint64_t (*)(_QWORD, uint64_t))v44)(*(_QWORD *)(v23 - 168), v21);
LABEL_7:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      v32 = *(_QWORD *)(*(_QWORD *)(v23 - 88) + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v32);
      v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v35);
      specialized ContiguousArray._endMutation()(v33);
      goto LABEL_8;
    }
    v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, *(_QWORD *)(v23 - 96), v47, *(_QWORD *)(v23 - 112), 0);
    swift_bridgeObjectRelease(v46);
    swift_bridgeObjectRelease(v48);
    v44(*(_QWORD *)(v23 - 160), v21);
    v31 = ((uint64_t (*)(_QWORD, uint64_t))v44)(*(_QWORD *)(v23 - 168), v21);
    if ((v49 & 1) != 0)
      goto LABEL_7;

LABEL_8:
    v28 = *(_QWORD *)(v23 - 176);
    ++v30;
    v22 = v43;
  }
  while (*(_QWORD *)(v23 - 184) != v30);
  swift_bridgeObjectRelease(*(_QWORD *)(v23 - 176));
  v50 = *(_QWORD *)(v23 - 88);
LABEL_27:
  swift_bridgeObjectRetain(v50);
  v25 = _swiftEmptyArrayStorage;
  if (v50 < 0 || (v52 = (_QWORD *)v50, (v50 & 0x4000000000000000) != 0))
  {
    v52 = sub_10004ECA0(v50);
    swift_release(v50);
  }
  *(_QWORD *)(v23 - 104) = v52;
  sub_100037920((uint64_t *)(v23 - 104));
  swift_release(v50);
  v53 = *(_QWORD *)(v23 - 104);
  if (v53 < 0 || (v53 & 0x4000000000000000) != 0)
  {
    v63 = swift_retain(*(_QWORD *)(v23 - 104));
    v64 = _CocoaArrayWrapper.endIndex.getter(v63);
    swift_release(v53);
    if (!v64)
      goto LABEL_39;
    swift_bridgeObjectRetain(v53);
    v54 = _CocoaArrayWrapper.endIndex.getter(v65);
    swift_release(v53);
    if (!v54)
      goto LABEL_39;
    *(_QWORD *)(v23 - 104) = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v54);
    if ((v54 & 0x8000000000000000) == 0)
      goto LABEL_33;
    __break(1u);
LABEL_46:
    __break(1u);
    JUMPOUT(0x100039718);
  }
  v54 = *(_QWORD *)(v53 + 16);
  if (v54)
  {
    *(_QWORD *)(v23 - 104) = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v54);
LABEL_33:
    v55 = 0;
    do
    {
      if ((v53 & 0xC000000000000001) != 0)
        v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v55, v53);
      else
        v56 = *(id *)(v53 + 8 * v55 + 32);
      v57 = v56;
      ++v55;
      v58 = objc_allocWithZone((Class)type metadata accessor for ClimateDefrostServiceButton());
      v59 = sub_1000062AC(v57, 3u);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v59);
      v60 = *(_QWORD *)(*(_QWORD *)(v23 - 104) + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v60);
      v61 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v59);
      specialized ContiguousArray._endMutation()(v61);
    }
    while (v54 != v55);
    v25 = *(_QWORD **)(v23 - 104);
  }
LABEL_39:
  swift_release(v53);
  return v25;
}

unint64_t sub_100039740()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B85A0;
  if (!qword_1000B85A0)
  {
    v1 = type metadata accessor for CAUVehicleLayoutKey(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CAUVehicleLayoutKey, v1);
    atomic_store(result, (unint64_t *)&qword_1000B85A0);
  }
  return result;
}

void sub_10003978C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void **v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;

  sub_10003B15C();
  v3 = OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer);
  if (v4)
  {
    objc_msgSend(v4, "invalidate");
    v5 = *(void **)(v1 + v3);
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)(v1 + v3) = 0;

  if ((a1 & 1) == 0)
  {
    v6 = *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator) = 0;
    sub_1000399AC(v6);
    sub_10003A864();
  }
  v7 = (void *)objc_opt_self(UIView);
  v8 = swift_allocObject(&unk_10009F048, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v1);
  v9 = swift_allocObject(&unk_10009F0C0, 25, 7);
  *(_QWORD *)(v9 + 16) = v8;
  LOBYTE(v8) = a1 & 1;
  *(_BYTE *)(v9 + 24) = a1 & 1;
  v18 = sub_10003C6D0;
  v19 = v9;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100070390;
  v17 = &unk_10009F0D8;
  v10 = _Block_copy(&v14);
  swift_release(v19);
  v11 = swift_allocObject(&unk_10009F048, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  v12 = swift_allocObject(&unk_10009F110, 25, 7);
  *(_QWORD *)(v12 + 16) = v11;
  *(_BYTE *)(v12 + 24) = v8;
  v18 = sub_10003C6DC;
  v19 = v12;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100039970;
  v17 = &unk_10009F128;
  v13 = _Block_copy(&v14);
  swift_release(v19);
  objc_msgSend(v7, "animateWithDuration:delay:options:animations:completion:", 0, v10, v13, 0.3, 0.0);
  _Block_release(v13);
  _Block_release(v10);
}

uint64_t sub_100039970(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void sub_1000399AC(char a1)
{
  void *v1;
  NSObject *v3;
  id v4;
  os_log_type_t v5;
  _DWORD *v6;
  char v7;

  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v3 = qword_1000BC938;
  v4 = v1;
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v3, v5))
  {
    v6 = (_DWORD *)swift_slowAlloc(22, -1);
    swift_slowAlloc(64, -1);
    *v6 = 136315394;
    __asm { BR              X10 }
  }

  sub_100039CC4();
  if ((v7 & 1) != 0)
    sub_100039EBC(a1);
}

void sub_100039CC4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  char v16;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (v3)
  {
    v4 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v3, v4, 0, 0, 0);
    v5 = sub_10006B490();
    swift_unknownObjectRelease(v3);
    KeyPath = swift_getKeyPath(&unk_10008A008);
    v7 = swift_getKeyPath(&unk_10008A030);
    static Published.subscript.getter(v5, KeyPath, v7);

    swift_release(KeyPath);
    swift_release(v7);
    if ((v16 & 1) != 0)
    {
      v8 = OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator;
      sub_10003ABAC(*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator));
      if (v9 && (v10 = v9, objc_msgSend(v9, "alpha"), v12 = v11, v10, v12 == 1.0))
      {
        sub_100047B14(*(_BYTE *)(v1 + v8));
      }
      else
      {
        if (qword_1000B6FE8 != -1)
          v9 = (void *)swift_once(&qword_1000B6FE8, sub_10005CB60);
        v13 = qword_1000BC938;
        v14 = static os_log_type_t.default.getter(v9);
        if (os_log_type_enabled(v13, v14))
        {
          v15 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v15 = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, v14, "Current fan indicator need animation", v15, 2u);
          swift_slowDealloc(v15, -1, -1);
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100039EBC(char a1)
{
  void *v1;
  NSObject *v3;
  char *v4;
  os_log_type_t v5;
  _DWORD *v6;
  void *v7;
  void *v8;
  _OWORD v9[3];

  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v3 = qword_1000BC938;
  v4 = v1;
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v3, v5))
  {
    v6 = (_DWORD *)swift_slowAlloc(22, -1);
    *(_QWORD *)&v9[0] = swift_slowAlloc(64, -1);
    *v6 = 136315394;
    __asm { BR              X10 }
  }

  if (v4[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator] == 5)
  {
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer], "invalidate");
    sub_10003ABAC(a1);
    if (v7)
    {
      v8 = v7;
      if (qword_1000B7018 != -1)
        swift_once(&qword_1000B7018, sub_10006A470);
      v9[0] = xmmword_1000BC9C0;
      v9[1] = *(_OWORD *)algn_1000BC9D0;
      v9[2] = xmmword_1000BC9E0;
      objc_msgSend(v8, "setTransform:", v9);

    }
    goto LABEL_11;
  }
  if (a1 == 5)
  {
LABEL_11:
    sub_10003A864();
    return;
  }
  sub_10003B300(a1);
}

void sub_10003A274()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_temperatureIndicator))
    sub_10003A510();
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_fanIndicator))
    sub_10003A6EC();
}

uint64_t sub_10003A2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *inited;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  id v19;
  uint64_t i;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  _BYTE v36[72];

  v33 = a3;
  v6 = sub_100006058(&qword_1000B8A00);
  inited = (_QWORD *)swift_initStackObject(v6, v36);
  v8 = inited;
  *((_OWORD *)inited + 1) = xmmword_100089B50;
  v9 = *(void **)(v3 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_temperatureIndicator);
  inited[4] = v9;
  v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_fanIndicator);
  if (v10)
  {
    v11 = *(void **)(v10 + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_fanButton);
    inited = v11;
  }
  else
  {
    v11 = 0;
  }
  v8[5] = v11;
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_compressorIndicator);
  if (v12)
  {
    v13 = *(void **)(v12 + OBJC_IVAR____TtC7Climate26ClimateCompressorIndicator_compressorButton);
    inited = v13;
  }
  else
  {
    v13 = 0;
  }
  v8[6] = v13;
  v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_syncIndicator);
  if (v14)
  {
    v15 = *(void **)(v14 + OBJC_IVAR____TtC7Climate20ClimateSyncIndicator_syncButton);
    inited = v15;
  }
  else
  {
    v15 = 0;
  }
  v8[7] = v15;
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_recirculationIdicator);
  if (v16)
  {
    v17 = *(void **)(v16 + OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_recirculationButton);
    inited = v17;
  }
  else
  {
    v17 = 0;
  }
  v8[8] = v17;
  v34[0] = v8;
  specialized Array._endMutation()(inited);
  v18 = v8;
  v19 = v9;
  for (i = 4; ; ++i)
  {
    v21 = (void *)v18[i];
    if (v21)
    {
      sub_10003C640(a1, (uint64_t)v34);
      v22 = v35;
      if (v35)
      {
        v23 = sub_10003C688(v34, v35);
        v24 = *(_QWORD *)(v22 - 8);
        v25 = __chkstk_darwin(v23);
        v27 = (char *)&v34[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v24 + 16))(v27, v25);
        v28 = v21;
        v29 = _bridgeAnythingToObjectiveC<A>(_:)(v27, v22);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v22);
        sub_100018B40(v34);
      }
      else
      {
        v30 = v21;
        v29 = 0;
      }
      objc_msgSend(v21, "addTarget:action:forControlEvents:", v29, a2, v33, v33);

      swift_unknownObjectRelease(v29);
    }
    if (i == 8)
      break;
    v31 = i - 3;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      return swift_bridgeObjectRelease(v18);
    }
  }
  return swift_bridgeObjectRelease(v18);
}

void sub_10003A510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  _BYTE v18[24];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone;
  swift_beginAccess(v2, v18, 0, 0);
  v3 = *(void **)(v2 + *(int *)(type metadata accessor for ClimateZone(0) + 28));
  v4 = objc_allocWithZone((Class)type metadata accessor for ClimateTemperatureIndicator(0));
  sub_10006D0C0(v3, 0, 0, 1, 1);
  v6 = v5;
  v7 = objc_msgSend(v5, "titleLabel");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend((id)objc_opt_self(UIFont), "monospacedDigitSystemFontOfSize:weight:", 14.0, UIFontWeightMedium);
    objc_msgSend(v8, "setFont:", v9);

  }
  v10 = (void *)objc_opt_self(_UIImageSymbolConfiguration);
  v11 = v6;
  v12 = objc_msgSend(v10, "configurationWithPointSize:weight:", 5, 14.0);
  v13 = ClimateButton.imageSymbolConfiguration.getter();
  v14 = *(void **)&v11[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration];
  *(_QWORD *)&v11[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = v12;
  v15 = v12;

  v16 = ClimateButton.imageSymbolConfiguration.getter();
  sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
  LOBYTE(v14) = static NSObject.== infix(_:_:)(v16);

  if ((v14 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();

  sub_100069C88(v11);
  v17 = *(void **)(v1 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_temperatureIndicator);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_temperatureIndicator) = v11;

}

void sub_10003A6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  char *v12;
  char *v13;
  void *v14;
  _BYTE v16[24];

  v1 = v0;
  v2 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = v0 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone;
  swift_beginAccess(v5, v16, 0, 0);
  v6 = type metadata accessor for ClimateZone(0);
  v7 = *(id *)(v5 + *(int *)(v6 + 28));
  sub_10000821C((uint64_t)v4);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) == 1)
  {
    sub_100021038((uint64_t)v4);
  }
  else
  {
    v8 = *(void **)&v4[*(int *)(v6 + 32)];
    v9 = v8;
    sub_10003C604((uint64_t)v4);
    if (v8)
    {
      v10 = objc_allocWithZone((Class)type metadata accessor for ClimateFanIndicator());
      v11 = v9;
      v12 = sub_1000454D0(v11);
      v13 = &v12[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_delegate];
      *((_QWORD *)v13 + 1) = &off_10009EFD8;
      swift_unknownObjectWeakAssign(v13, v1);
      sub_100069C88(v12);
      objc_msgSend(v12, "setAlpha:", 0.0);
      v14 = *(void **)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_fanIndicator);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_fanIndicator) = v12;

    }
  }
}

void sub_10003A864()
{
  void *v0;
  NSObject *v1;
  char *v2;
  os_log_type_t v3;
  _DWORD *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  _OWORD v15[3];

  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v1 = qword_1000BC938;
  v2 = v0;
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v1, v3))
  {
    v4 = (_DWORD *)swift_slowAlloc(12, -1);
    *(_QWORD *)&v15[0] = swift_slowAlloc(32, -1);
    *v4 = 136315138;
    __asm { BR              X10 }
  }

  v5 = *(void **)&v2[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_temperatureIndicator];
  if (v5)
    objc_msgSend(v5, "setAlpha:", 0.0);
  v6 = *(void **)&v2[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_fanIndicator];
  if (v6)
    objc_msgSend(v6, "setAlpha:", 0.0);
  v7 = *(void **)&v2[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_compressorIndicator];
  if (v7)
    objc_msgSend(v7, "setAlpha:", 0.0);
  v8 = *(void **)&v2[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_syncIndicator];
  if (v8)
    objc_msgSend(v8, "setAlpha:", 0.0);
  v9 = *(void **)&v2[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_recirculationIdicator];
  if (v9)
    objc_msgSend(v9, "setAlpha:", 0.0);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_closeButton], "setAlpha:", 0.0);
  v10 = OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator;
  sub_10003ABAC(v2[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator]);
  if (v11)
  {
    v12 = v11;
    if (qword_1000B7020 != -1)
      swift_once(&qword_1000B7020, sub_10006A48C);
    v15[0] = xmmword_1000BC9F0;
    v15[1] = xmmword_1000BCA00;
    v15[2] = xmmword_1000BCA10;
    objc_msgSend(v12, "setTransform:", v15);

  }
  sub_10003ABAC(v2[v10]);
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "setAlpha:", 1.0);

  }
}

void sub_10003ABAC(char a1)
{
  __asm { BR              X10 }
}

void *sub_10003ABD4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_temperatureIndicator);
  if (v1)
    v2 = v1;
  return v1;
}

void sub_10003AC3C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = (void *)objc_opt_self(NSTimer);
  v2 = swift_allocObject(&unk_10009F048, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v8[4] = sub_10003C5FC;
  v9 = v2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10003AEB8;
  v8[3] = &unk_10009F088;
  v3 = _Block_copy(v8);
  swift_release(v9);
  v4 = objc_msgSend(v1, "scheduledTimerWithTimeInterval:repeats:block:", 0, v3, 3.0);
  _Block_release(v3);
  v5 = OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer);
  if (v6)
  {
    objc_msgSend(v6, "invalidate");
    v7 = *(void **)(v0 + v5);
  }
  else
  {
    v7 = 0;
  }
  *(_QWORD *)(v0 + v5) = v4;

}

void sub_10003AD44(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  _BYTE *v5;
  void *v6;
  id v7;
  id v8;
  char v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer);
    if (v6)
    {
      sub_100006B04(0, &qword_1000B89F8, NSTimer_ptr);
      v7 = a1;
      v8 = v6;
      v9 = static NSObject.== infix(_:_:)(v8);

      if ((v9 & 1) != 0)
      {
        v10 = objc_msgSend(v7, "isValid");
        if ((_DWORD)v10)
        {
          if (qword_1000B6FE8 != -1)
            v10 = (id)swift_once(&qword_1000B6FE8, sub_10005CB60);
          v11 = qword_1000BC938;
          v12 = static os_log_type_t.default.getter(v10);
          if (os_log_type_enabled(v11, v12))
          {
            v13 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v13 = 0;
            _os_log_impl((void *)&_mh_execute_header, v11, v12, "Reset indicator timer fired", v13, 2u);
            swift_slowDealloc(v13, -1, -1);
          }
          v14 = v5[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator];
          v5[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator] = 0;
          sub_1000399AC(v14);
        }
      }
    }

  }
}

void sub_10003AEB8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

void sub_10003AF08()
{
  uint64_t v0;

  sub_100005118(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_closeAction), *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_closeAction + 8));
}

id sub_10003AFB8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateCompactStatusBarView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10003B0A8()
{
  return type metadata accessor for ClimateCompactStatusBarView(0);
}

uint64_t type metadata accessor for ClimateCompactStatusBarView(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B89E8;
  if (!qword_1000B89E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateCompactStatusBarView);
  return result;
}

uint64_t sub_10003B0EC(uint64_t a1)
{
  _QWORD v2[11];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = "\b";
  v2[3] = "\b";
  v2[4] = "\b";
  v2[5] = "\b";
  v2[6] = "\b";
  v2[7] = "\b";
  v2[8] = &unk_100089F98;
  v2[9] = &unk_100089FB0;
  v2[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_updateClassMetadata2(a1, 256, 11, v2, a1 + 168);
}

void sub_10003B15C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_fanIndicator);
  if (v1)
  {
    v2 = objc_msgSend(v1, "layer");
    objc_msgSend(v2, "removeAllAnimations");

  }
  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_temperatureIndicator);
  if (v3)
  {
    v4 = objc_msgSend(v3, "layer");
    objc_msgSend(v4, "removeAllAnimations");

  }
  v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_closeButton), "layer"));
  objc_msgSend(v5, "removeAllAnimations");

}

void sub_10003B21C(uint64_t a1, char a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  double v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = 1.0;
    if ((a2 & 1) != 0)
      v6 = 0.0;
    objc_msgSend(Strong, "setAlpha:", v6);

  }
}

void sub_10003B288(char a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t Strong;
  _BYTE *v7;
  char v8;
  _BYTE v9[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (_BYTE *)Strong;
    if ((a1 & 1) != 0 && (a3 & 1) != 0)
    {
      v8 = *(_BYTE *)(Strong + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator);
      v7[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator] = 0;
      sub_1000399AC(v8);
    }

  }
}

void sub_10003B300(char a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  __int128 aBlock;
  __int128 v19;
  __int128 v20;

  sub_10003ABAC(a1);
  if (v2)
  {
    v17 = v2;
    sub_10003ABAC(*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator));
    if (v3)
    {
      v4 = v3;
      sub_10003B15C();
      v5 = qword_1000B7020;
      v6 = v17;
      if (v5 != -1)
        swift_once(&qword_1000B7020, sub_10006A48C);
      aBlock = xmmword_1000BC9F0;
      v19 = xmmword_1000BCA00;
      v20 = xmmword_1000BCA10;
      objc_msgSend(v6, "setTransform:", &aBlock);

      objc_msgSend(v6, "setAlpha:", 1.0);
      objc_msgSend(v4, "setAlpha:", 0.0);
      v7 = qword_1000B7018;
      v8 = v4;
      if (v7 != -1)
        swift_once(&qword_1000B7018, sub_10006A470);
      aBlock = xmmword_1000BC9C0;
      v19 = *(_OWORD *)algn_1000BC9D0;
      v20 = xmmword_1000BC9E0;
      objc_msgSend(v8, "setTransform:", &aBlock);

      v9 = (void *)objc_opt_self(UIView);
      v10 = swift_allocObject(&unk_10009EFF8, 32, 7);
      *(_QWORD *)(v10 + 16) = v6;
      *(_QWORD *)(v10 + 24) = v8;
      *(_QWORD *)&v20 = sub_10003C5B0;
      *((_QWORD *)&v20 + 1) = v10;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v19 = sub_100070390;
      *((_QWORD *)&v19 + 1) = &unk_10009F010;
      v11 = _Block_copy(&aBlock);
      v12 = *((_QWORD *)&v20 + 1);
      v13 = v6;
      v14 = v8;
      swift_release(v12);
      v15 = swift_allocObject(&unk_10009F048, 24, 7);
      swift_unknownObjectWeakInit(v15 + 16, v1);
      *(_QWORD *)&v20 = sub_10003C5F4;
      *((_QWORD *)&v20 + 1) = v15;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v19 = sub_100039970;
      *((_QWORD *)&v19 + 1) = &unk_10009F060;
      v16 = _Block_copy(&aBlock);
      swift_release(*((_QWORD *)&v20 + 1));
      objc_msgSend(v9, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v11, v16, 0.513, 0.0, 2.0, 300.0, 50.0, 0.0);

      _Block_release(v16);
      _Block_release(v11);
    }
    else
    {

    }
  }
}

id sub_10003B5B4(id a1, void *a2)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;

  if (qword_1000B7018 != -1)
    swift_once(&qword_1000B7018, sub_10006A470);
  v5 = xmmword_1000BC9C0;
  v6 = *(_OWORD *)algn_1000BC9D0;
  v7 = xmmword_1000BC9E0;
  objc_msgSend(a1, "setTransform:", &v5);
  objc_msgSend(a1, "setAlpha:", 0.0);
  objc_msgSend(a2, "setAlpha:", 1.0);
  if (qword_1000B7020 != -1)
    swift_once(&qword_1000B7020, sub_10006A48C);
  v5 = xmmword_1000BC9F0;
  v6 = xmmword_1000BCA00;
  v7 = xmmword_1000BCA10;
  return objc_msgSend(a2, "setTransform:", &v5);
}

void sub_10003B6AC(char a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  _BYTE v5[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    if ((a1 & 1) != 0)
      __asm { BR              X10 }

  }
}

char *sub_10003B7EC(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t *v18;
  id v19;
  id v20;
  id v21;
  objc_class *v22;
  id v23;
  char *v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  char *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  char *v34;
  char *v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  char *v40;
  char *v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v51;
  _BYTE v52[24];
  objc_super v53;

  v51 = a1;
  v12 = type metadata accessor for ClimateZone(0);
  __chkstk_darwin(v12);
  v14 = &v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_fanIndicator] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_compressorIndicator] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_syncIndicator] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_recirculationIdicator] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer] = 0;
  v6[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator] = 0;
  v15 = OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_closeButton;
  v16 = objc_allocWithZone((Class)type metadata accessor for ClimateCloseButton());
  v17 = v6;
  *(_QWORD *)&v6[v15] = sub_10002D76C();
  *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_cabin] = a2;
  *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_recirculation] = a3;
  *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_sync] = a4;
  v18 = (uint64_t *)&v17[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_closeAction];
  *v18 = a5;
  v18[1] = a6;
  v19 = a4;
  v20 = a2;
  v21 = a3;
  sub_10001BDD0(a5, a6);

  sub_100008C1C(v51, (uint64_t)v14);
  *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_temperatureIndicator] = 0;
  sub_100008C1C((uint64_t)v14, (uint64_t)&v17[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone]);
  v22 = (objc_class *)type metadata accessor for ClimateStatusBarView(0);
  v53.receiver = v17;
  v53.super_class = v22;
  v23 = objc_msgSendSuper2(&v53, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_10003C604((uint64_t)v14);
  v24 = (char *)v23;
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_10003A510();
  sub_10003A6EC();
  v25 = *(void **)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_cabin];
  if (v25)
  {
    v26 = objc_allocWithZone((Class)type metadata accessor for ClimateCompressorIndicator());
    v27 = v25;
    v28 = sub_100036778(v27);
    v29 = &v28[OBJC_IVAR____TtC7Climate26ClimateCompressorIndicator_delegate];
    *((_QWORD *)v29 + 1) = &off_10009EFC8;
    swift_unknownObjectWeakAssign(v29, v24);
    sub_100069C88(v28);
    objc_msgSend(v28, "setAlpha:", 0.0);
    v30 = *(void **)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_compressorIndicator];
    *(_QWORD *)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_compressorIndicator] = v28;

  }
  v31 = *(void **)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_sync];
  if (v31)
  {
    v32 = objc_allocWithZone((Class)type metadata accessor for ClimateSyncIndicator());
    v33 = v31;
    v34 = sub_10005ED78(v33);
    v35 = &v34[OBJC_IVAR____TtC7Climate20ClimateSyncIndicator_delegate];
    *((_QWORD *)v35 + 1) = &off_10009EFA8;
    swift_unknownObjectWeakAssign(v35, v24);
    sub_100069C88(v34);
    objc_msgSend(v34, "setAlpha:", 0.0);
    v36 = *(void **)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_syncIndicator];
    *(_QWORD *)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_syncIndicator] = v34;

  }
  v37 = *(void **)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_recirculation];
  if (v37)
  {
    v38 = objc_allocWithZone((Class)type metadata accessor for ClimateRecirculationIdicator());
    v39 = v37;
    v40 = sub_100021214(v39);
    v41 = &v40[OBJC_IVAR____TtC7Climate28ClimateRecirculationIdicator_delegate];
    *((_QWORD *)v41 + 1) = &off_10009EFB8;
    swift_unknownObjectWeakAssign(v41, v24);
    sub_100069C88(v40);
    objc_msgSend(v40, "setAlpha:", 0.0);
    v42 = *(void **)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_recirculationIdicator];
    *(_QWORD *)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_recirculationIdicator] = v40;

  }
  v43 = *(char **)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_closeButton];
  objc_msgSend(v43, "setTranslatesAutoresizingMaskIntoConstraints:", 0, v51);
  v44 = *(_QWORD *)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_closeAction];
  v45 = *(_QWORD *)&v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_closeAction + 8];
  v46 = (uint64_t *)&v43[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v43[OBJC_IVAR____TtC7Climate13ClimateButton_action], v52, 1, 0);
  v47 = *v46;
  v48 = v46[1];
  *v46 = v44;
  v46[1] = v45;
  sub_10001BDD0(v44, v45);
  sub_100005118(v47, v48);
  sub_100069C88(v43);
  objc_msgSend(v43, "setAlpha:", 0.0);
  v49 = v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator];
  v24[OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_currentIndicator] = 0;
  sub_1000399AC(v49);

  sub_10003C604(v51);
  return v24;
}

void sub_10003BC28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer);
  if (v3)
  {
    objc_msgSend(v3, "invalidate");
    v4 = *(void **)(v1 + v2);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(v1 + v2) = 0;

  __asm { BR              X10 }
}

void sub_10003BCB4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  char v9;
  char v10;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(7233894, 0xE300000000000000, 0x65736F6C63, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(0xE300000000000000);
  if ((v2 & 1) == 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v4 = objc_msgSend(v3, "delegate");

    if (!v4)
    {
      __break(1u);
      JUMPOUT(0x10003BE54);
    }
    v5 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
    v6 = sub_10006B490();
    swift_unknownObjectRelease(v4);
    KeyPath = swift_getKeyPath(&unk_10008A008);
    v8 = swift_getKeyPath(&unk_10008A030);
    static Published.subscript.getter(v6, KeyPath, v8);

    swift_release(KeyPath);
    swift_release(v8);
    if ((v10 & 1) != 0)
    {
      v9 = *(_BYTE *)(v0 + v1);
      *(_BYTE *)(v0 + v1) = 4;
      sub_1000399AC(v9);
      sub_10003AC3C();
    }
  }
}

void sub_10003BE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer);
  if (v3)
  {
    objc_msgSend(v3, "invalidate");
    v4 = *(void **)(v1 + v2);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(v1 + v2) = 0;

  __asm { BR              X10 }
}

void sub_10003BEF8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  char v9;
  char v10;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(7233894, 0xE300000000000000, 0x65736F6C63, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(0xE300000000000000);
  if ((v2 & 1) == 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v4 = objc_msgSend(v3, "delegate");

    if (!v4)
    {
      __break(1u);
      JUMPOUT(0x10003C098);
    }
    v5 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
    v6 = sub_10006B490();
    swift_unknownObjectRelease(v4);
    KeyPath = swift_getKeyPath(&unk_10008A008);
    v8 = swift_getKeyPath(&unk_10008A030);
    static Published.subscript.getter(v6, KeyPath, v8);

    swift_release(KeyPath);
    swift_release(v8);
    if ((v10 & 1) != 0)
    {
      v9 = *(_BYTE *)(v0 + v1);
      *(_BYTE *)(v0 + v1) = 2;
      sub_1000399AC(v9);
      sub_10003AC3C();
    }
  }
}

void sub_10003C0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer);
  if (v3)
  {
    objc_msgSend(v3, "invalidate");
    v4 = *(void **)(v1 + v2);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(v1 + v2) = 0;

  __asm { BR              X10 }
}

void sub_10003C13C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(7233894, 0xE300000000000000, 0x65736F6C63, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(0xE300000000000000);
  if ((v2 & 1) == 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v4 = objc_msgSend(v3, "delegate");

    if (!v4)
    {
      __break(1u);
      JUMPOUT(0x10003C320);
    }
    v5 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
    v6 = sub_10006B490();
    swift_unknownObjectRelease(v4);
    KeyPath = swift_getKeyPath(&unk_10008A008);
    v8 = swift_getKeyPath(&unk_10008A030);
    static Published.subscript.getter(v6, KeyPath, v8);

    swift_release(KeyPath);
    swift_release(v8);
    if ((v11 & 1) != 0)
    {
      v9 = v0 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone;
      swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone, &v11, 0, 0);
      if ((objc_msgSend(*(id *)(v9 + *(int *)(type metadata accessor for ClimateZone(0) + 28)), "targetTemperatureDisabled") & 1) == 0)
      {
        v10 = *(_BYTE *)(v0 + v1);
        *(_BYTE *)(v0 + v1) = 1;
        sub_1000399AC(v10);
        sub_10003AC3C();
      }
    }
  }
}

void sub_10003C338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC7Climate27ClimateCompactStatusBarView_resetIndicatorTimer);
  if (v3)
  {
    objc_msgSend(v3, "invalidate");
    v4 = *(void **)(v1 + v2);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(v1 + v2) = 0;

  __asm { BR              X10 }
}

void sub_10003C3C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  char v9;
  char v10;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(7233894, 0xE300000000000000, 0x65736F6C63, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(0xE300000000000000);
  if ((v2 & 1) == 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v4 = objc_msgSend(v3, "delegate");

    if (!v4)
    {
      __break(1u);
      JUMPOUT(0x10003C564);
    }
    v5 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
    v6 = sub_10006B490();
    swift_unknownObjectRelease(v4);
    KeyPath = swift_getKeyPath(&unk_10008A008);
    v8 = swift_getKeyPath(&unk_10008A030);
    static Published.subscript.getter(v6, KeyPath, v8);

    swift_release(KeyPath);
    swift_release(v8);
    if ((v10 & 1) != 0)
    {
      v9 = *(_BYTE *)(v0 + v1);
      *(_BYTE *)(v0 + v1) = 3;
      sub_1000399AC(v9);
      sub_10003AC3C();
    }
  }
}

uint64_t sub_10003C584()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10003C5B0()
{
  uint64_t v0;

  return sub_10003B5B4(*(id *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10003C5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10003C5C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10003C5D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10003C5F4(char a1)
{
  uint64_t v1;

  sub_10003B6AC(a1, v1);
}

void sub_10003C5FC(void *a1)
{
  uint64_t v1;

  sub_10003AD44(a1, v1);
}

uint64_t sub_10003C604(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClimateZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003C640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058((uint64_t *)&unk_1000B7B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10003C688(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10003C6AC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10003C6D0()
{
  uint64_t v0;

  sub_10003B21C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_10003C6DC(char a1)
{
  uint64_t v1;

  sub_10003B288(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

char *sub_10003C70C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  objc_class *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];
  char v23[24];
  objc_super v24;

  v3 = type metadata accessor for CAUVehicleLayoutKey(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (objc_class *)type metadata accessor for ClimateDeepLinkButton();
  v24.receiver = v1;
  v24.super_class = v7;
  v8 = (char *)objc_msgSendSuper2(&v24, "init");
  v9 = &v8[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v8[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v23, 1, 0);
  v11 = *(_QWORD *)v9;
  v10 = *((_QWORD *)v9 + 1);
  *(_OWORD *)v9 = xmmword_10008A050;
  v12 = v8;
  if (!v10
    || (v11 == 0x73697370696C6C65 ? (v13 = v10 == 0xE800000000000000) : (v13 = 0),
        !v13
     && (_stringCompareWithSmolCheck(_:_:expecting:)(0x73697370696C6C65, 0xE800000000000000, v11, v10, 0) & 1) == 0))
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v10);
  v14 = swift_allocObject(&unk_10009F1A0, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v12);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(&v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v3);
  v15 = *(unsigned __int8 *)(v4 + 80);
  v16 = (v15 + 24) & ~v15;
  v17 = swift_allocObject(&unk_10009F1C8, v16 + v5, v15 | 7);
  *(_QWORD *)(v17 + 16) = v14;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 32))(v17 + v16, v6, v3);
  v18 = (uint64_t *)&v12[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v12[OBJC_IVAR____TtC7Climate13ClimateButton_action], v22, 1, 0);
  v19 = *v18;
  v20 = v18[1];
  *v18 = (uint64_t)sub_10003CC10;
  v18[1] = v17;
  swift_retain(v14);
  sub_100005118(v19, v20);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  swift_release(v14);
  return v12;
}

void sub_10003C91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  void *v13;
  id v14;
  void *v15;
  id v16;
  NSURL *v17;
  void *v18;
  void *v19;
  _BYTE v21[24];

  v5 = sub_100006058(&qword_1000B8A30);
  __chkstk_darwin(v5);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v13 = (void *)Strong;
    sub_10005C840(a3, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {

      sub_10003CC50((uint64_t)v7);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      v14 = objc_msgSend(v13, "window");
      if (v14
        && (v15 = v14, v16 = objc_msgSend(v14, "windowScene"),
                       v15,
                       v16))
      {
        URL._bridgeToObjectiveC()(v17);
        v19 = v18;
        objc_msgSend(v16, "openURL:options:completionHandler:", v18, 0, 0);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

      }
    }
  }
}

id sub_10003CB28()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateDeepLinkButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateDeepLinkButton()
{
  return objc_opt_self(_TtC7Climate21ClimateDeepLinkButton);
}

uint64_t sub_10003CB78()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003CB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CAUVehicleLayoutKey(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10003CC10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CAUVehicleLayoutKey(0) - 8) + 80);
  sub_10003C91C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10003CC50(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006058(&qword_1000B8A30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static ClimatePresentation.restricted.getter()
{
  return 4;
}

void *ClimatePresentation.disabled.unsafeMutableAddressor()
{
  return &static ClimatePresentation.disabled;
}

void *ClimatePresentation.invalid.unsafeMutableAddressor()
{
  return &static ClimatePresentation.invalid;
}

void *ClimatePresentation.on.unsafeMutableAddressor()
{
  return &static ClimatePresentation.on;
}

void *ClimatePresentation.auto.unsafeMutableAddressor()
{
  return &static ClimatePresentation.auto;
}

uint64_t static ClimatePresentation.auto.getter()
{
  return 2;
}

void *ClimatePresentation.restricted.unsafeMutableAddressor()
{
  return &static ClimatePresentation.restricted;
}

uint64_t static ClimatePresentation.invalid.getter()
{
  return 8;
}

uint64_t static ClimatePresentation.disabled.getter()
{
  return 16;
}

Swift::Int sub_10003CCF0()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10003CD34()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10003CD5C()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10003CD9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_10002C824();
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t ClimatePresentation.description.getter(char a1)
{
  return sub_10003CE18(a1, 73, 0xD00000000000001FLL, (void *)0x800000010008D740);
}

uint64_t ClimatePresentation.accessibilityLabel.getter(char a1)
{
  return sub_10003CE18(a1, 52, 0x656C62617369643CLL, (void *)0xEA00000000003D64);
}

uint64_t sub_10003CE18(char a1, Swift::Int a2, uint64_t a3, void *a4)
{
  Swift::String v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  Swift::String v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Swift::String v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  Swift::String v27;

  _StringGuts.grow(_:)(a2);
  v7._countAndFlagsBits = a3;
  v7._object = a4;
  String.append(_:)(v7);
  if ((a1 & 0x10) != 0)
    v8 = 1702195828;
  else
    v8 = 0x65736C6166;
  if ((a1 & 0x10) != 0)
    v9 = 0xE400000000000000;
  else
    v9 = 0xE500000000000000;
  v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = 0x64696C61766E6920;
  v11._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v11);
  if ((a1 & 8) != 0)
    v12 = 1702195828;
  else
    v12 = 0x65736C6166;
  if ((a1 & 8) != 0)
    v13 = 0xE400000000000000;
  else
    v13 = 0xE500000000000000;
  v14 = v13;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 0x6369727473657220;
  v15._object = (void *)0xEC0000003D646574;
  String.append(_:)(v15);
  if ((a1 & 4) != 0)
    v16 = 1702195828;
  else
    v16 = 0x65736C6166;
  if ((a1 & 4) != 0)
    v17 = 0xE400000000000000;
  else
    v17 = 0xE500000000000000;
  v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease(v17);
  v19._countAndFlagsBits = 0x3D6F74756120;
  v19._object = (void *)0xE600000000000000;
  String.append(_:)(v19);
  if ((a1 & 2) != 0)
    v20 = 1702195828;
  else
    v20 = 0x65736C6166;
  if ((a1 & 2) != 0)
    v21 = 0xE400000000000000;
  else
    v21 = 0xE500000000000000;
  v22 = v21;
  String.append(_:)(*(Swift::String *)&v20);
  swift_bridgeObjectRelease(v21);
  v23._countAndFlagsBits = 1030647584;
  v23._object = (void *)0xE400000000000000;
  String.append(_:)(v23);
  if ((a1 & 1) != 0)
    v24 = 1702195828;
  else
    v24 = 0x65736C6166;
  if ((a1 & 1) != 0)
    v25 = 0xE400000000000000;
  else
    v25 = 0xE500000000000000;
  v26 = v25;
  String.append(_:)(*(Swift::String *)&v24);
  swift_bridgeObjectRelease(v25);
  v27._countAndFlagsBits = 62;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  return 0;
}

uint64_t sub_10003CFC8()
{
  _QWORD *v0;

  return ClimatePresentation.description.getter(*v0);
}

uint64_t _s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(char a1, char a2, char a3, char a4, char a5)
{
  uint64_t result;

  if ((a1 & 1) != 0)
  {
    if ((a2 & 1) != 0)
    {
      if ((a3 & 1) != 0)
      {
        if ((a4 & 1) != 0)
          result = 15;
        else
          result = 7;
        if ((a5 & 1) == 0)
          return result;
        return result | 0x10;
      }
      if ((a4 & 1) != 0)
        result = 11;
      else
        result = 3;
      if ((a5 & 1) != 0)
        return result | 0x10;
    }
    else if ((a3 & 1) != 0)
    {
      if ((a4 & 1) != 0)
        result = 13;
      else
        result = 5;
      if ((a5 & 1) != 0)
        return result | 0x10;
    }
    else
    {
      if ((a4 & 1) != 0)
        result = 9;
      else
        result = 1;
      if ((a5 & 1) != 0)
        return result | 0x10;
    }
  }
  else if ((a2 & 1) != 0)
  {
    if ((a3 & 1) != 0)
    {
      if ((a4 & 1) != 0)
        result = 14;
      else
        result = 6;
      if ((a5 & 1) != 0)
        return result | 0x10;
    }
    else
    {
      if ((a4 & 1) != 0)
        result = 10;
      else
        result = 2;
      if ((a5 & 1) != 0)
        return result | 0x10;
    }
  }
  else if ((a3 & 1) != 0)
  {
    if ((a4 & 1) != 0)
      result = 12;
    else
      result = 4;
    if ((a5 & 1) != 0)
      return result | 0x10;
  }
  else
  {
    if ((a4 & 1) != 0)
      result = 8;
    else
      result = 0;
    if ((a5 & 1) != 0)
      return result | 0x10;
  }
  return result;
}

unint64_t sub_10003D090()
{
  unint64_t result;

  result = qword_1000B8A38;
  if (!qword_1000B8A38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ClimatePresentation, &type metadata for ClimatePresentation);
    atomic_store(result, (unint64_t *)&qword_1000B8A38);
  }
  return result;
}

unint64_t sub_10003D0D8()
{
  unint64_t result;

  result = qword_1000B8A40;
  if (!qword_1000B8A40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ClimatePresentation, &type metadata for ClimatePresentation);
    atomic_store(result, (unint64_t *)&qword_1000B8A40);
  }
  return result;
}

unint64_t sub_10003D120()
{
  unint64_t result;

  result = qword_1000B8A48;
  if (!qword_1000B8A48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ClimatePresentation, &type metadata for ClimatePresentation);
    atomic_store(result, (unint64_t *)&qword_1000B8A48);
  }
  return result;
}

unint64_t sub_10003D168()
{
  unint64_t result;

  result = qword_1000B8A50;
  if (!qword_1000B8A50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ClimatePresentation, &type metadata for ClimatePresentation);
    atomic_store(result, (unint64_t *)&qword_1000B8A50);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClimatePresentation()
{
  return &type metadata for ClimatePresentation;
}

uint64_t sub_10003D1BC()
{
  uint64_t v0;
  void *v1;
  char v2;
  char **v3;
  char **v4;
  char **v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_seatHeatingCooling);
  if ((CAFSeatHeatingCooling.isCooling.getter() & 1) != 0)
    v2 = 1;
  else
    v2 = CAFSeatHeatingCooling.isHeating.getter();
  if (objc_msgSend(v1, "hasOn") && !objc_msgSend(v1, "on"))
  {
    v3 = &selRef_onDisabled;
    v4 = &selRef_onInvalid;
    v5 = &selRef_onRestricted;
  }
  else
  {
    v3 = &selRef_heatingCoolingLevelDisabled;
    v4 = &selRef_heatingCoolingLevelInvalid;
    v5 = &selRef_heatingCoolingLevelRestricted;
  }
  return _s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(v2 & 1, (char)objc_msgSend(v1, "autoMode"), (char)objc_msgSend(v1, *v5), (char)objc_msgSend(v1, *v4), (char)objc_msgSend(v1, *v3));
}

char *sub_10003D3A4(void *a1)
{
  char *v1;
  uint64_t *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  signed int v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void **v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v42;
  id v43;
  id v44;
  char v45[24];
  objc_super v46;

  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_symbolName];
  *v3 = 0xD00000000000001BLL;
  v3[1] = 0x800000010008D7E0;
  *(_DWORD *)&v1[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_currentValue] = 0;
  v4 = OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_autoModeGlyph;
  v5 = objc_allocWithZone((Class)UIImageView);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_seatHeatingCooling] = a1;
  v7 = a1;
  v8 = objc_msgSend(v7, "heatingCoolingLevel");
  v6[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_isInPositiveRange] = v8 >= 0;
  v9 = *v3;
  v10 = v3[1];
  swift_bridgeObjectRetain(v10);
  LODWORD(v3) = objc_msgSend(v7, "heatingCoolingLevel");
  v11 = objc_msgSend(v7, "heatingCoolingLevelRange");
  sub_10002278C(v9, v10, 0, 0, v3, v11, 5.0);
  v13 = v12;
  swift_bridgeObjectRelease(v10);

  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_progressView] = v13;
  v46.receiver = v6;
  v46.super_class = (Class)type metadata accessor for ClimateSeatHeatingCoolingServiceButton();
  v14 = (char *)objc_msgSendSuper2(&v46, "init");
  sub_10003DDB0();
  objc_msgSend(v7, "registerObserver:", v14);
  v15 = swift_allocObject(&unk_10009F418, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v14);
  v16 = swift_allocObject(&unk_10009F440, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v7;
  v17 = (uint64_t *)&v14[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v14[OBJC_IVAR____TtC7Climate13ClimateButton_action], v45, 1, 0);
  v18 = *v17;
  v19 = v17[1];
  *v17 = (uint64_t)sub_10003E39C;
  v17[1] = v16;
  v44 = v7;
  sub_100005118(v18, v19);
  v20 = qword_1000B6FD0;
  v21 = v14;
  if (v20 != -1)
    swift_once(&qword_1000B6FD0, sub_1000475EC);
  v22 = (void *)qword_1000BC8E0;
  v23 = qword_1000BC8F0;
  if (qword_1000B6F98 != -1)
    swift_once(&qword_1000B6F98, sub_100041F6C);
  v24 = (void *)qword_1000BC8A0;
  v25 = (void **)&v21[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v26 = *(void **)&v21[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
  v27 = *(void **)&v21[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
  v28 = *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
  *v25 = v22;
  v25[1] = v24;
  v25[2] = (void *)v23;
  v29 = v24;
  v30 = v22;
  swift_bridgeObjectRetain_n(v23, 2);
  v43 = v30;
  v42 = v29;
  v32 = *v25;
  v31 = v25[1];
  v33 = (uint64_t)v25[2];
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v34 = v32;
  v35 = v31;
  swift_bridgeObjectRetain(v33);
  if ((static NSObject.== infix(_:_:)(v34) & 1) != 0 && (static NSObject.== infix(_:_:)(v35) & 1) != 0)
  {
    sub_10005B490(v33, v28);
    v37 = v36;
    swift_bridgeObjectRelease(v33);

    if ((v37 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRelease(v33);

  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *(_QWORD *)v21) + 0x228))(v38, v39, v40);
LABEL_11:

  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v23);
  sub_10006B894();
  sub_10003D8B4();

  return v21;
}

void sub_10003D774(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  char *Strong;
  char *v6;
  char v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    if (objc_msgSend(Strong, "isEnabled"))
    {
      sub_100034384();
      objc_msgSend(a3, "setHeatingCoolingLevel:", *(unsigned int *)&v6[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_currentValue]);
      sub_10003D8B4();
    }

  }
}

uint64_t sub_10003D8B4()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  char *v5;
  id v6;
  id v7;
  void *v8;
  void (*v9)(id, id, void *, void *);
  id v10;
  unsigned int v11;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_autoModeGlyph];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, "setHidden:", (sub_10003D1BC() & 0x1A) != 2);

  }
  sub_10007813C();
  objc_msgSend(v0, "setEnabled:", (sub_10003D1BC() & 0x18) == 0);
  sub_10003DA2C();
  sub_100066C24();
  v4 = *(_QWORD **)&v0[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_progressView];
  v5 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  v6 = *(id *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.25);
  v8 = (void *)*((_QWORD *)v5 + 1);
  v9 = *(void (**)(id, id, void *, void *))((swift_isaMask & *v4) + 0xD0);
  v10 = v8;
  v9(v6, v7, v8, &_swiftEmptyDictionarySingleton);
  if ((sub_10003D1BC() & 0x18) != 0)
    v11 = 0;
  else
    v11 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_seatHeatingCooling], "heatingCoolingLevel");
  *(_DWORD *)&v1[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_currentValue] = v11;
  return (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x88))();
}

void sub_10003DA2C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  void *v4;
  id v5;
  id v6;
  int v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  char v23;
  char v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  void (*v30)(id, id, void *, void *);
  id v31;
  id v32;
  int v33;
  void *v34;

  v1 = v0;
  sub_100066A90();
  v2 = sub_10003D1BC();
  if ((v2 & 0x19) != 1)
    return;
  v3 = v2;
  if ((CAFSeatHeatingCooling.isHeating.getter() & 1) == 0)
  {
    if ((CAFSeatHeatingCooling.isCooling.getter() & 1) == 0)
    {
      v7 = 0;
      v8 = v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor;
      v5 = *(id *)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor);
      v9 = *(void **)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8);
      v10 = *(void **)(v1 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor);
      v11 = *(void **)(v1 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8);
      goto LABEL_18;
    }
    if ((v3 & 2) == 0)
    {
      if (qword_1000B6FA0 != -1)
        swift_once(&qword_1000B6FA0, sub_100041F80);
      v4 = (void *)qword_1000BC8A8;
      goto LABEL_12;
    }
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
LABEL_16:
    v5 = v6;
    goto LABEL_17;
  }
  if ((v3 & 2) != 0)
  {
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "systemOrangeColor");
    goto LABEL_16;
  }
  if (qword_1000B6F98 != -1)
    swift_once(&qword_1000B6F98, sub_100041F6C);
  v4 = (void *)qword_1000BC8A0;
LABEL_12:
  v5 = v4;
LABEL_17:
  v8 = v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor;
  v9 = *(void **)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor);
  v7 = 1;
  v10 = *(void **)(v1 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor);
  v11 = v5;
LABEL_18:
  v12 = *(_QWORD *)(v8 + 16);
  v32 = v5;
  v13 = v5;
  v14 = v9;
  swift_bridgeObjectRetain(v12);
  v15 = v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
  v16 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v17 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  *(_QWORD *)v15 = v10;
  *(_QWORD *)(v15 + 8) = v11;
  *(_QWORD *)(v15 + 16) = v12;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v19 = v10;
  v20 = v11;
  swift_bridgeObjectRetain_n(v12, 2);
  v21 = v19;
  v22 = v20;
  if ((static NSObject.== infix(_:_:)(v21) & 1) != 0 && (static NSObject.== infix(_:_:)(v22) & 1) != 0)
  {
    sub_10005B490(v12, v18);
    v24 = v23;
    swift_bridgeObjectRelease(v12);

    if ((v24 & 1) != 0)
    {
      swift_bridgeObjectRelease(v18);

      swift_bridgeObjectRelease(v12);
      if ((v7 & 1) == 0)
        return;
LABEL_25:

      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v12);

  }
  sub_100066C24();
  v25 = *(_QWORD **)(v1 + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_progressView);
  v26 = *(id *)(v15 + 8);
  v34 = v21;
  v27 = v18;
  v28 = objc_msgSend(v26, "colorWithAlphaComponent:", 0.25);
  v29 = *(void **)(v15 + 8);
  v33 = v7;
  v30 = *(void (**)(id, id, void *, void *))((swift_isaMask & *v25) + 0xD0);
  v31 = v29;
  v30(v26, v28, v29, &_swiftEmptyDictionarySingleton);
  swift_bridgeObjectRelease(v27);

  swift_bridgeObjectRelease(v12);
  if (v33)
    goto LABEL_25;
}

uint64_t sub_10003DD68()
{
  uint64_t v0;

  v0 = sub_100006B04(0, &qword_1000B8B70, CAFSeatHeatingCooling_ptr);
  return CAFPositioned.layoutKey.getter(v0);
}

void sub_10003DDB0()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_progressView];
  objc_msgSend(v0, "addSubview:", v1);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100006058((uint64_t *)&unk_1000B7590);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100088DF0;
  v5 = objc_msgSend(v1, "leadingAnchor");
  v6 = objc_msgSend(v0, "leadingAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(v1, "trailingAnchor");
  v9 = objc_msgSend(v0, "trailingAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(v1, "topAnchor");
  v12 = objc_msgSend(v0, "topAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(v1, "bottomAnchor");
  v15 = objc_msgSend(v0, "bottomAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v4 + 56) = v16;
  specialized Array._endMutation()(v17);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "activateConstraints:", isa);

}

uint64_t sub_10003E014()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  uint64_t (*v6)(id, id, void *, void *);
  id v7;

  sub_100066C24();
  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_progressView);
  v2 = v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
  v3 = *(id *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.25);
  v5 = *(void **)(v2 + 8);
  v6 = *(uint64_t (**)(id, id, void *, void *))((swift_isaMask & *v1) + 0xD0);
  v7 = v5;
  return v6(v3, v4, v5, &_swiftEmptyDictionarySingleton);
}

void sub_10003E0C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_symbolName
                                      + 8));

}

id sub_10003E110()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateSeatHeatingCoolingServiceButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateSeatHeatingCoolingServiceButton()
{
  return objc_opt_self(_TtC7Climate38ClimateSeatHeatingCoolingServiceButton);
}

uint64_t sub_10003E25C(uint64_t a1)
{
  uint64_t result;

  result = sub_10003E310(&qword_1000B8B58, (uint64_t)&unk_10008A328);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10003E290(uint64_t a1)
{
  uint64_t result;

  result = sub_10003E310(&qword_1000B8B58, (uint64_t)&unk_10008A328);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10003E2C4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_10003E310(&qword_1000B8B60, (uint64_t)&unk_10008A344);
  result = sub_10003E310(&qword_1000B8B68, (uint64_t)&unk_10008A360);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10003E310(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ClimateSeatHeatingCoolingServiceButton();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003E34C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003E370()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10003E39C(uint64_t a1)
{
  uint64_t v1;

  sub_10003D774(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

_QWORD *sub_10003E3A8(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  result = _swiftEmptyArrayStorage;
  v17 = (unint64_t)_swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v8 = *(_QWORD *)(type metadata accessor for CAUVehicleLayoutKey(0) - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain(a3);
    do
    {
      v12 = a1(&v16, v9);
      if (v3)
      {
        swift_bridgeObjectRelease(a3);
        return (_QWORD *)swift_bridgeObjectRelease(v17);
      }
      v13 = v16;
      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v15 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v11);
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(a3);
    return (_QWORD *)v17;
  }
  return result;
}

void sub_10003E4E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[6];

  v6 = *a1;
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v7 = (uint64_t)sub_10003E3A8((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_10003EFB4, (uint64_t)v12, v6);
  v8 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v10 = v7;
    else
      v10 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v8);
    if (v11)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_100006B04(0, &qword_1000B7D98, UIStackView_ptr);
    v9 = (void *)UIStackView.init(axis:spacing:arrangedSubviews:)(0, v8, 15.0);
    objc_msgSend(v9, "setDistribution:", 1);
    objc_msgSend(v9, "setAlignment:", 3);
    objc_msgSend(*(id *)(a5 + OBJC_IVAR____TtC7Climate25ClimateCarPlaceholderView_carView), "addArrangedSubview:", v9);

    return;
  }
  swift_bridgeObjectRelease(v8);
}

id sub_10003E5FC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  Class isa;
  os_log_type_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v80;
  char *v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;

  v82 = a3;
  v83 = a2;
  v5 = type metadata accessor for CAUVehicleLayoutKey(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006058(&qword_1000B7FD0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CAUVehicleLayoutInfo(0, v10);
  __chkstk_darwin(v13);
  v81 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ClimateZone(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v80 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v80 - v23;
  v25 = type metadata accessor for ClimateSystemManager(0);
  v26 = *(_QWORD *)(v3 + *(int *)(v25 + 36));
  if (*(_QWORD *)(v26 + 16) && (v25 = sub_10005B798(a1), (v27 & 1) != 0))
  {
    sub_100008C1C(*(_QWORD *)(v26 + 56) + *(_QWORD *)(v16 + 72) * v25, (uint64_t)v21);
    sub_10000AB1C((uint64_t)v21, (uint64_t)v24);
    v28 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v80 = v24;
    sub_100008C1C((uint64_t)v24, (uint64_t)v18);
    v30 = type metadata accessor for CAUBaselineAnchor(0, v29);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 1, 1, v30);
    v31 = (uint64_t)v83;
    swift_unknownObjectRetain(v83);
    v32 = (uint64_t)v81;
    CAUVehicleLayoutInfo.init(x:y:height:width:baselineAnchor:)(0, 0, 0, 0, v12);
    v33 = objc_allocWithZone((Class)type metadata accessor for ClimateZonePositionView(0));
    sub_100066098((uint64_t)v18, v31, v82, v32);
    v35 = v34;
    swift_unknownObjectRelease(v31);
    objc_msgSend(v28, "addSubview:", v35);
    v36 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v36, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v36, "setTextAlignment:", 1);
    v37 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:variant:", UIFontTextStyleCaption2, 1024);
    objc_msgSend(v36, "setFont:", v37);

    objc_msgSend(v28, "addSubview:", v36);
    sub_100040298();
    v39 = v38;
    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    objc_msgSend(v36, "setText:", v40);

    v83 = (id)objc_opt_self(NSLayoutConstraint);
    v41 = sub_100006058((uint64_t *)&unk_1000B7590);
    v42 = swift_allocObject(v41, 104, 7);
    *(_OWORD *)(v42 + 16) = xmmword_10008A3B0;
    v43 = objc_msgSend(v35, "heightAnchor");
    v44 = objc_msgSend(v43, "constraintEqualToConstant:", 70.0);

    *(_QWORD *)(v42 + 32) = v44;
    v45 = objc_msgSend(v35, "widthAnchor");
    v46 = objc_msgSend(v45, "constraintEqualToConstant:", 70.0);

    *(_QWORD *)(v42 + 40) = v46;
    v47 = objc_msgSend(v35, "topAnchor");
    v48 = objc_msgSend(v28, "topAnchor");
    v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

    *(_QWORD *)(v42 + 48) = v49;
    v50 = objc_msgSend(v35, "leadingAnchor");
    v51 = objc_msgSend(v28, "leadingAnchor");
    v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

    *(_QWORD *)(v42 + 56) = v52;
    v53 = objc_msgSend(v35, "trailingAnchor");
    v54 = objc_msgSend(v28, "trailingAnchor");
    v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

    *(_QWORD *)(v42 + 64) = v55;
    v56 = objc_msgSend(v36, "topAnchor");
    v57 = objc_msgSend(v35, "bottomAnchor");
    v58 = objc_msgSend(v56, "constraintEqualToAnchor:constant:", v57, 0.0);

    *(_QWORD *)(v42 + 72) = v58;
    v59 = objc_msgSend(v36, "leadingAnchor");
    v60 = objc_msgSend(v28, "leadingAnchor");
    v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

    *(_QWORD *)(v42 + 80) = v61;
    v62 = objc_msgSend(v36, "trailingAnchor");
    v63 = objc_msgSend(v28, "trailingAnchor");
    v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

    *(_QWORD *)(v42 + 88) = v64;
    v65 = objc_msgSend(v36, "bottomAnchor");
    v66 = objc_msgSend(v28, "bottomAnchor");
    v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

    *(_QWORD *)(v42 + 96) = v67;
    v85 = v42;
    specialized Array._endMutation()(v68);
    v69 = v85;
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v69);
    objc_msgSend(v83, "activateConstraints:", isa);

    sub_10003C604((uint64_t)v80);
  }
  else
  {
    v71 = static os_log_type_t.error.getter(v25);
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v72 = qword_1000BC938;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    v73 = v71;
    if (os_log_type_enabled(v72, v71))
    {
      v74 = (uint8_t *)swift_slowAlloc(12, -1);
      v75 = swift_slowAlloc(32, -1);
      v85 = v75;
      *(_DWORD *)v74 = 136315138;
      v76 = CAUVehicleLayoutKey.rawValue.getter(v75);
      v78 = v77;
      v84 = sub_10005DB58(v76, v77, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85, v74 + 4, v74 + 12);
      swift_bridgeObjectRelease(v78);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "No zone available for %s", v74, 0xCu);
      swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v75, -1, -1);
      swift_slowDealloc(v74, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    return 0;
  }
  return v28;
}

id sub_10003EF54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateCarPlaceholderView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateCarPlaceholderView()
{
  return objc_opt_self(_TtC7Climate25ClimateCarPlaceholderView);
}

id sub_10003EFB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_10003E5FC(a1, *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
  *a2 = result;
  return result;
}

void sub_10003EFF4()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "cl_carSystemSecondaryColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.05);

  qword_1000BC868 = (uint64_t)v1;
}

void sub_10003F05C()
{
  qword_1000BC870 = 0x4014000000000000;
  *(_QWORD *)algn_1000BC878 = 0;
  qword_1000BC880 = 0;
  unk_1000BC888 = 0;
}

uint64_t *sub_10003F074(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v29);
  }
  else
  {
    v7 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v10;
    v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = (uint64_t)v15;
    v16 = a3[9];
    v17 = a3[10];
    v18 = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = v18;
    v19 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + v17) = (uint64_t)v19;
    v20 = a3[11];
    v21 = a3[12];
    v22 = *(void **)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + v20) = (uint64_t)v22;
    v23 = *(void **)((char *)a2 + v21);
    *(uint64_t *)((char *)a1 + v21) = (uint64_t)v23;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    v24 = v14;
    v25 = v15;
    swift_bridgeObjectRetain(v18);
    v26 = v19;
    v27 = v22;
    v28 = v23;
  }
  return a1;
}

void sub_10003F178(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6]));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9]));
}

uint64_t sub_10003F210(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = a3[9];
  v16 = a3[10];
  v17 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = a3[11];
  v20 = a3[12];
  v21 = *(void **)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v21;
  v22 = *(void **)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v22;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  v23 = v13;
  v24 = v14;
  swift_bridgeObjectRetain(v17);
  v25 = v18;
  v26 = v21;
  v27 = v22;
  return a1;
}

uint64_t sub_10003F2E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a3[6];
  v11 = *(_QWORD *)(a2 + v10);
  v12 = *(_QWORD *)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = a3[7];
  v14 = *(void **)(a2 + v13);
  v15 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  v16 = v14;

  v17 = a3[8];
  v18 = *(void **)(a1 + v17);
  v19 = *(void **)(a2 + v17);
  *(_QWORD *)(a1 + v17) = v19;
  v20 = v19;

  v21 = a3[9];
  v22 = *(_QWORD *)(a2 + v21);
  v23 = *(_QWORD *)(a1 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = a3[10];
  v25 = *(void **)(a1 + v24);
  v26 = *(void **)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v26;
  v27 = v26;

  v28 = a3[11];
  v29 = *(void **)(a1 + v28);
  v30 = *(void **)(a2 + v28);
  *(_QWORD *)(a1 + v28) = v30;
  v31 = v30;

  v32 = a3[12];
  v33 = *(void **)(a1 + v32);
  v34 = *(void **)(a2 + v32);
  *(_QWORD *)(a1 + v32) = v34;
  v35 = v34;

  return a1;
}

uint64_t sub_10003F404(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  return a1;
}

uint64_t sub_10003F4A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_bridgeObjectRelease(v10);
  v11 = a3[7];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[8];
  v14 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  v15 = a3[9];
  v16 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[10];
  v18 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);

  v19 = a3[11];
  v20 = *(void **)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);

  v21 = a3[12];
  v22 = *(void **)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);

  return a1;
}

uint64_t sub_10003F594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003F5A0);
}

uint64_t sub_10003F5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10003F61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003F628);
}

uint64_t sub_10003F628(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CAUVehicleLayoutKey(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ClimateZone(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B8C00;
  if (!qword_1000B8C00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateZone);
  return result;
}

uint64_t sub_10003F6DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[9];

  result = type metadata accessor for CAUVehicleLayoutKey(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v5[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[0] = v4;
    v5[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[4] = "\b";
    v5[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v5[6] = "\b";
    v5[7] = "\b";
    v5[8] = "\b";
    swift_initStructMetadata(a1, 256, 9, v5, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10003F774@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _UNKNOWN **v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  _UNKNOWN **v26;
  _QWORD *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  NSObject *v81;
  id v82;
  os_log_type_t v83;
  uint64_t v84;
  _QWORD *v85;
  NSObject *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  NSObject *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  __n128 v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  id v108;
  NSObject *v109;
  char *v110;
  uint64_t v111;
  os_log_type_t v112;
  uint8_t *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  void (*v118)(char *, uint64_t);
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t, char *, uint64_t, __n128);
  uint64_t *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t *v146;
  char *v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v134 = (char *)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v136 = (char *)&v129 - v10;
  v11 = type metadata accessor for ClimateZone(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (uint64_t)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = (char *)v16[8];
  *(_QWORD *)&v147[v15] = 0;
  v17 = (uint64_t *)(v15 + v16[9]);
  v145 = v6;
  v146 = v17;
  *v17 = (uint64_t)_swiftEmptyArrayStorage;
  v143 = v16[10];
  v144 = a2;
  *(_QWORD *)(v15 + v143) = 0;
  v138 = v16[11];
  v139 = v7;
  *(_QWORD *)(v15 + v138) = 0;
  v137 = v16[12];
  *(_QWORD *)(v15 + v137) = 0;
  v141 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v7 + 16);
  v141(v15, a2, v6, v13);
  v18 = *(int *)(v11 + 20);
  v148 = v15;
  v142 = (uint64_t *)(v15 + v18);
  *(_QWORD *)(v15 + v18) = a1;
  v152 = (unint64_t)_swiftEmptyArrayStorage;
  v140 = a3;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v128 = a1;
    else
      v128 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(a1, 2);
    v19 = _CocoaArrayWrapper.endIndex.getter(v128);
  }
  else
  {
    v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(a1, 2);
  }
  v21 = &off_1000B6000;
  v22 = &unk_1000BC000;
  if (!v19)
  {
    swift_bridgeObjectRelease(a1);
    v27 = _swiftEmptyArrayStorage;
    v6 = v145;
    goto LABEL_46;
  }
  if (v19 < 1)
  {
    __break(1u);
    goto LABEL_58;
  }
  v132 = v12;
  v135 = v11;
  v23 = 0;
  v24 = 0;
  v25 = a1 & 0xC000000000000001;
  v26 = &_s10Foundation11MeasurementV10CAFCombineSo17NSUnitTemperatureCRszrlE10localeStep_2byACyAFGSo8CAFRangeCADE0G9DirectionO_AItF_ptr;
  *(_QWORD *)&v20 = 138412290;
  v131 = v20;
  v133 = a1;
  do
  {
    if (v25)
      v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, a1);
    else
      v28 = *(id *)(a1 + 8 * v24 + 32);
    v29 = v28;
    v30 = objc_opt_self(v26[486]);
    v31 = swift_dynamicCastObjCClass(v29, v30);
    if (v31)
    {
      v32 = (void *)v31;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v34 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v33 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v34 >= v33 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
      v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v32);
      specialized Array._endMutation()(v35);
      v23 = v32;
      goto LABEL_8;
    }
    v36 = objc_opt_self(CAFFan);
    v37 = swift_dynamicCastObjCClass(v29, v36);
    v149 = v23;
    if (v37)
    {
      v38 = v37;
      v39 = v19;
      v40 = a1;
      v41 = v25;
      v42 = v147;
      v43 = v148;
      v44 = *(void **)&v147[v148];
      v45 = v29;

      *(_QWORD *)&v42[v43] = v38;
      v46 = v45;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
      v48 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v47 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v48 >= v47 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
      v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v38);
      specialized Array._endMutation()(v49);

      v25 = v41;
      a1 = v40;
      v19 = v39;
      v26 = &_s10Foundation11MeasurementV10CAFCombineSo17NSUnitTemperatureCRszrlE10localeStep_2byACyAFGSo8CAFRangeCADE0G9DirectionO_AItF_ptr;
      v23 = v149;
      goto LABEL_8;
    }
    v50 = objc_opt_self(CAFVent);
    v51 = swift_dynamicCastObjCClass(v29, v50);
    if (v51)
    {
      v52 = v51;
      v53 = v29;
      v54 = v146;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
      v56 = *(_QWORD *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v55 = *(_QWORD *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v56 >= v55 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
      v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v52);
      specialized Array._endMutation()(v57);
      v58 = v53;
      goto LABEL_24;
    }
    v63 = objc_opt_self(CAFSeatHeatingCooling);
    v64 = swift_dynamicCastObjCClass(v29, v63);
    if (v64)
    {
      v65 = v64;
      v66 = v148;
      v67 = v143;
      v68 = *(void **)(v148 + v143);
      v69 = v29;

      *(_QWORD *)(v66 + v67) = v65;
      v70 = v69;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
      v72 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v71 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v72 >= v71 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
      v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v65);
      specialized Array._endMutation()(v73);

      a1 = v133;
      v23 = v149;
    }
    else
    {
      v74 = objc_opt_self(CAFSeatFan);
      v75 = swift_dynamicCastObjCClass(v29, v74);
      if (v75)
      {
        v52 = v75;
        v76 = v148;
        v77 = v138;
        goto LABEL_35;
      }
      v78 = objc_opt_self(CAFSteeringWheelHeatingCooling);
      v79 = swift_dynamicCastObjCClass(v29, v78);
      if (v79)
      {
        v52 = v79;
        v76 = v148;
        v77 = v137;
LABEL_35:
        v130 = *(id *)(v76 + v77);
        v80 = v29;

        *(_QWORD *)(v76 + v77) = v52;
        v58 = v80;
LABEL_24:
        v59 = v58;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
        v61 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v60 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v61 >= v60 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1);
        v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v52);
        specialized Array._endMutation()(v62);

        v23 = v149;
        goto LABEL_8;
      }
      if (qword_1000B6FE8 != -1)
        swift_once(&qword_1000B6FE8, sub_10005CB60);
      v81 = qword_1000BC938;
      v82 = v29;
      v83 = static os_log_type_t.default.getter(v82);
      if (os_log_type_enabled(v81, v83))
      {
        v84 = swift_slowAlloc(12, -1);
        v85 = (_QWORD *)swift_slowAlloc(8, -1);
        v86 = v81;
        v87 = v85;
        *(_DWORD *)v84 = v131;
        *(_QWORD *)(v84 + 4) = v82;
        *v85 = v82;
        _os_log_impl((void *)&_mh_execute_header, v86, v83, "unknown service: %@", (uint8_t *)v84, 0xCu);
        v88 = sub_100006058((uint64_t *)&unk_1000B8370);
        swift_arrayDestroy(v87, 1, v88);
        swift_slowDealloc(v87, -1, -1);
        v89 = v84;
        v23 = v149;
        swift_slowDealloc(v89, -1, -1);
      }
      else
      {

      }
    }
LABEL_8:
    ++v24;

  }
  while (v19 != v24);
  swift_bridgeObjectRelease(a1);
  v27 = (_QWORD *)v152;
  if (!v23)
  {
    v11 = v135;
    v12 = v132;
    v6 = v145;
    v22 = &unk_1000BC000;
    v21 = &off_1000B6000;
LABEL_46:
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v27);
    a2 = v136;
    if (v21[509] == (_UNKNOWN *)-1)
    {
LABEL_47:
      v109 = *((_QWORD *)v22 + 295);
      v110 = v144;
      v111 = ((uint64_t (*)(char *, char *, uint64_t))v141)(a2, v144, v6);
      v112 = static os_log_type_t.default.getter(v111);
      if (os_log_type_enabled(v109, v112))
      {
        v113 = (uint8_t *)swift_slowAlloc(12, -1);
        v114 = swift_slowAlloc(32, -1);
        v151 = v114;
        *(_DWORD *)v113 = 136315138;
        v115 = CAUVehicleLayoutKey.rawValue.getter(v114);
        v117 = v116;
        v150 = sub_10005DB58(v115, v116, &v151);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, &v151, v113 + 4, v113 + 12);
        swift_bridgeObjectRelease(v117);
        v118 = *(void (**)(char *, uint64_t))(v139 + 8);
        v118(a2, v145);
        _os_log_impl((void *)&_mh_execute_header, v109, v112, "ClimateZonePosition requires a zone key=%s", v113, 0xCu);
        swift_arrayDestroy(v114, 1, (char *)&type metadata for Any + 8);
        v6 = v145;
        swift_slowDealloc(v114, -1, -1);
        swift_slowDealloc(v113, -1, -1);
        v119 = v144;
      }
      else
      {
        v118 = *(void (**)(char *, uint64_t))(v139 + 8);
        v118(a2, v6);
        v119 = v110;
      }
      v118(v119, v6);
      v120 = v140;
      v121 = v148;
      v118((char *)v148, v6);
      swift_bridgeObjectRelease(*v142);

      swift_bridgeObjectRelease(*v146);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v120, 1, 1, v11);
    }
LABEL_58:
    swift_once(&qword_1000B6FE8, sub_10005CB60);
    goto LABEL_47;
  }
  v90 = v135;
  v91 = v148;
  *(_QWORD *)(v148 + *(int *)(v135 + 24)) = v152;
  *(_QWORD *)(v91 + *(int *)(v90 + 28)) = v23;
  v92 = v23;
  sub_100040364(v146, sub_100060E84, (uint64_t (*)(_QWORD *))sub_100041088);
  sub_100040364(v142, sub_100060E84, (uint64_t (*)(_QWORD *))sub_1000408D0);
  v93 = v145;
  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v94 = qword_1000BC938;
  v95 = v134;
  v96 = v144;
  ((void (*)(char *, char *, uint64_t))v141)(v134, v144, v93);
  swift_bridgeObjectRetain(a1);
  v98 = static os_log_type_t.default.getter(v97);
  if (os_log_type_enabled(v94, v98))
  {
    v99 = swift_slowAlloc(22, -1);
    v100 = swift_slowAlloc(64, -1);
    v151 = v100;
    *(_DWORD *)v99 = 136315394;
    v149 = v92;
    v101 = CAUVehicleLayoutKey.rawValue.getter(v100);
    v103 = v102;
    v150 = sub_10005DB58(v101, v102, &v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, &v151, v99 + 4, v99 + 12);
    swift_bridgeObjectRelease(v103);
    v147 = *(char **)(v139 + 8);
    ((void (*)(char *, uint64_t))v147)(v95, v93);
    *(_WORD *)(v99 + 12) = 2080;
    sub_100006B04(0, &qword_1000B8C60, CAFService_ptr);
    v104 = swift_bridgeObjectRetain(a1);
    v105 = Array.description.getter(v104);
    v107 = v106;
    swift_bridgeObjectRelease(a1);
    v150 = sub_10005DB58(v105, v107, &v151);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v150, &v151, v99 + 14, v99 + 22);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v107);
    _os_log_impl((void *)&_mh_execute_header, v94, v98, "ClimateZone created. LayoutKey: %s, Services: %s", (uint8_t *)v99, 0x16u);
    swift_arrayDestroy(v100, 2, (char *)&type metadata for Any + 8);
    v90 = v135;
    swift_slowDealloc(v100, -1, -1);
    swift_slowDealloc(v99, -1, -1);
    v108 = v149;

    ((void (*)(char *, uint64_t))v147)(v144, v93);
  }
  else
  {

    v123 = v95;
    v124 = *(void (**)(char *, uint64_t))(v139 + 8);
    v124(v123, v93);
    swift_bridgeObjectRelease_n(a1, 2);
    v124(v96, v93);
  }
  v125 = v140;
  v126 = v132;
  v127 = v148;
  sub_100008C1C(v148, v140);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v125, 0, 1, v90);
  return sub_10003C604(v127);
}

uint64_t sub_100040298()
{
  uint64_t v0;
  NSString v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v0 = sub_100040754();
  if (v0 > 1u)
  {
    CAUVehicleLayoutKey.rawValue.getter(v0);
    v3 = v2;
    v1 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v1 = String._bridgeToObjectiveC()();
  }
  v4 = sub_100040870(v1);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  return v5;
}

uint64_t sub_100040364(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v6 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
  *a1 = v6;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v6 < 0 || (v6 & 0x4000000000000000) != 0)
  {
    v6 = a2(v6);
    *a1 = v6;
  }
  v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11[0] = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
  v11[1] = v8;
  v9 = a3(v11);
  return specialized Array._endMutation()(v9);
}

double sub_1000403F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t ObjectType;
  id v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39[2];
  uint64_t v40;
  id v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v1 = type metadata accessor for ClimateZone(0);
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 20));
  if ((unint64_t)v2 >> 62)
    goto LABEL_28;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + *(int *)(v1 + 20)));
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v29))
  {
    v4 = 0;
    v5 = v2 & 0xC000000000000001;
    v33 = v2 + 32;
    v34 = v2 & 0xFFFFFFFFFFFFFF8;
    v6 = _swiftEmptyArrayStorage;
    v7 = _swiftEmptyArrayStorage;
    v36 = v3;
    v37 = v2;
    v35 = v2 & 0xC000000000000001;
    while (1)
    {
      if (v5)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      }
      else
      {
        if (v4 >= *(_QWORD *)(v34 + 16))
          goto LABEL_27;
        v8 = *(id *)(v33 + 8 * v4);
      }
      v9 = v8;
      if (__OFADD__(v4++, 1))
        break;
      v41 = v8;
      v11 = sub_100006B04(0, &qword_1000B8C60, CAFService_ptr);
      v12 = v9;
      v13 = sub_100006058(&qword_1000B8C68);
      if ((swift_dynamicCast(v39, &v41, v11, v13, 6) & 1) != 0)
      {
        sub_100041ECC(v39, (uint64_t)v42);
        v14 = v43;
        v15 = v44;
        sub_10003C688(v42, v43);
        v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
        v17 = v16;
        v18 = *(_QWORD *)(v16 + 16);
        if (v18)
        {
          v19 = (_QWORD *)(v16 + 32);
          do
          {
            v38 = *(_OWORD *)v19;
            v20 = (void *)*v19;
            ObjectType = swift_getObjectType(*v19);
            v22 = v20;
            if (sub_100031C1C(ObjectType, *((uint64_t *)&v38 + 1)))
            {
              v23 = v22;
              if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
                v7 = sub_10007AD74(0, v7[2] + 1, 1, v7);
              v25 = v7[2];
              v24 = v7[3];
              if (v25 >= v24 >> 1)
                v7 = sub_10007AD74((_QWORD *)(v24 > 1), v25 + 1, 1, v7);
              v7[2] = v25 + 1;
              *(_OWORD *)&v7[2 * v25 + 4] = v38;
            }
            v26 = v22;
            if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
              v6 = sub_10007AD74(0, v6[2] + 1, 1, v6);
            v28 = v6[2];
            v27 = v6[3];
            if (v28 >= v27 >> 1)
              v6 = sub_10007AD74((_QWORD *)(v27 > 1), v28 + 1, 1, v6);
            v6[2] = v28 + 1;
            *(_OWORD *)&v6[2 * v28 + 4] = v38;

            v19 += 2;
            --v18;
          }
          while (v18);
        }

        swift_bridgeObjectRelease(v17);
        sub_100018B40(v42);
        v3 = v36;
        v2 = v37;
        v5 = v35;
        if (v4 == v36)
        {
LABEL_25:
          swift_bridgeObjectRelease(v2);
          goto LABEL_33;
        }
      }
      else
      {
        v40 = 0;
        memset(v39, 0, sizeof(v39));

        sub_100008B88((uint64_t)v39, &qword_1000B8C70);
        if (v4 == v3)
          goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    if (v2 < 0)
      v29 = v2;
    else
      v29 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
  }
  swift_bridgeObjectRelease(v2);
  v6 = _swiftEmptyArrayStorage;
  v7 = _swiftEmptyArrayStorage;
LABEL_33:
  v30 = sub_100006058(&qword_1000B8C78);
  v31 = swift_allocObject(v30, 48, 7);
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v31 + 16) = xmmword_100088DE0;
  *(_QWORD *)(v31 + 32) = v6;
  *(_QWORD *)(v31 + 40) = v7;
  return result;
}

uint64_t sub_100040754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12;

  v1 = sub_100006058(&qword_1000B8C58);
  __chkstk_darwin(v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F3D8();
  v5 = v4;
  v6 = *(int *)(v1 + 48);
  v7 = type metadata accessor for CAUVehicleLayoutKey(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v3, v0, v7);
  v9 = v5 & 1;
  v3[v6] = v5 & 1;
  v10 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v3, v7);
  if (v10 == enum case for CAUVehicleLayoutKey.seat_front_left(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v3, v7);
  }
  else if (v10 == enum case for CAUVehicleLayoutKey.seat_front_right(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v3, v7);
    return !(v5 & 1);
  }
  else
  {
    sub_100008B88((uint64_t)v3, &qword_1000B8C58);
    return 2;
  }
  return v9;
}

id sub_100040870(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = a1;
  v2 = CAFFrameworkBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", v1, &stru_1000A0B60, CFSTR("Localizable")));

  return v4;
}

char *sub_1000408D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  Swift::Int v4;
  char *result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  Swift::Int v24;
  _BOOL4 v25;
  Swift::Int v26;
  Swift::Int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  Swift::Int v36;
  Swift::Int v37;
  uint64_t *v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t *v41;
  uint64_t v42;
  Swift::Int v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  unint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  char *v119;
  Swift::Int v120;
  Swift::Int v121;
  Swift::Int v122;
  Swift::Int v123;
  char *v124;
  uint64_t v125;

  v2 = v1;
  v3 = a1;
  v4 = a1[1];
  result = (char *)_minimumMergeRunLength(_:)(v4);
  if ((uint64_t)result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        return sub_10004176C(0, (char *)v4, (char *)1, v3);
      return result;
    }
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    result = (char *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_153;
  v7 = result;
  if (v4 < 2)
  {
    v11 = (char *)_swiftEmptyArrayStorage;
    v125 = (uint64_t)_swiftEmptyArrayStorage;
    v124 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
      goto LABEL_111;
    }
  }
  else
  {
    v8 = v6 >> 1;
    v9 = sub_100006B04(0, &qword_1000B8C60, CAFService_ptr);
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v124 = (char *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v125 = v10;
  }
  v119 = v7;
  v12 = 0;
  v13 = *v3;
  v117 = v3;
  v118 = *v3 - 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v121 = v4;
  while (1)
  {
    v15 = v12++;
    v122 = v15;
    if (v12 < v4)
    {
      v16 = *(_QWORD *)(v13 + 8 * v12);
      v17 = *(_QWORD *)(v13 + 8 * v15);
      v18 = objc_opt_self(CAFVent);
      v19 = swift_dynamicCastObjCClass(v16, v18);
      if (v19
        && (v20 = (void *)v19,
            v21 = objc_opt_self(CAFVent),
            (v22 = swift_dynamicCastObjCClass(v17, v21)) != 0))
      {
        v23 = objc_msgSend(v20, "typeCompare:", v22);
        v24 = v15;
        v25 = v23 == (id)-1;
        v26 = v24 + 2;
        if (v24 + 2 < v4)
        {
          do
          {
LABEL_24:
            v28 = *(_QWORD *)(v13 + 8 * v26);
            v29 = *(_QWORD *)(v13 + 8 * v12);
            v30 = objc_opt_self(CAFVent);
            v31 = swift_dynamicCastObjCClass(v28, v30);
            if (v31
              && (v32 = (void *)v31,
                  v33 = objc_opt_self(CAFVent),
                  (v34 = swift_dynamicCastObjCClass(v29, v33)) != 0))
            {
              if (((v25 ^ (objc_msgSend(v32, "typeCompare:", v34) != (id)-1)) & 1) == 0)
                goto LABEL_27;
            }
            else if (!v25)
            {
              goto LABEL_57;
            }
            v27 = v26 + 1;
            v12 = v26;
            v26 = v27;
          }
          while (v27 < v121);
          v26 = v27;
          if (!v25)
          {
LABEL_57:
            v12 = v26;
            v4 = v121;
            v15 = v122;
            if (v26 >= v121)
              goto LABEL_58;
            goto LABEL_38;
          }
        }
        else
        {
LABEL_27:
          if (!v25)
            goto LABEL_57;
        }
        v4 = v121;
        v15 = v122;
        if (v26 < v122)
          goto LABEL_146;
      }
      else
      {
        v26 = v15 + 2;
        if (v15 + 2 < v4)
        {
          v25 = 1;
          goto LABEL_24;
        }
      }
      if (v15 < v26)
      {
        v35 = (uint64_t *)(v118 + 8 * v26);
        v36 = v26;
        v37 = v15;
        v38 = (uint64_t *)(v13 + 8 * v15);
        do
        {
          if (v37 != --v36)
          {
            if (!v13)
              goto LABEL_151;
            v39 = *v38;
            *v38 = *v35;
            *v35 = v39;
          }
          ++v37;
          --v35;
          ++v38;
        }
        while (v37 < v36);
      }
      v12 = v26;
    }
    if (v12 >= v4)
      goto LABEL_58;
LABEL_38:
    if (__OFSUB__(v12, v15))
      goto LABEL_144;
    if (v12 - v15 < (uint64_t)v119)
    {
      if (__OFADD__(v15, v119))
        goto LABEL_147;
      if ((uint64_t)&v119[v15] >= v4)
        v40 = v4;
      else
        v40 = (Swift::Int)&v119[v15];
      if (v40 < v15)
        goto LABEL_148;
      if (v12 != v40)
      {
        v41 = (uint64_t *)(v118 + 8 * v12);
        v120 = v40;
        do
        {
          v42 = *(_QWORD *)(v13 + 8 * v12);
          v43 = v15;
          v44 = v41;
          do
          {
            v45 = *v44;
            v46 = objc_opt_self(CAFVent);
            v47 = swift_dynamicCastObjCClass(v42, v46);
            if (v47)
            {
              v48 = (void *)v47;
              v49 = objc_opt_self(CAFVent);
              v50 = swift_dynamicCastObjCClass(v45, v49);
              if (v50)
              {
                if (objc_msgSend(v48, "typeCompare:", v50) != (id)-1)
                  break;
              }
            }
            if (!v13)
              goto LABEL_149;
            v51 = *v44;
            v42 = v44[1];
            *v44 = v42;
            v44[1] = v51;
            --v44;
            ++v43;
          }
          while (v12 != v43);
          ++v12;
          ++v41;
          v15 = v122;
        }
        while (v12 != v120);
        v12 = v120;
      }
    }
LABEL_58:
    if (v12 < v15)
    {
LABEL_139:
      __break(1u);
      goto LABEL_140;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100038CA8(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v53 = *((_QWORD *)v11 + 2);
    v52 = *((_QWORD *)v11 + 3);
    v14 = v53 + 1;
    if (v53 >= v52 >> 1)
      v11 = sub_100038CA8((char *)(v52 > 1), v53 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v14;
    v54 = v11 + 32;
    v55 = &v11[16 * v53 + 32];
    *(_QWORD *)v55 = v15;
    *((_QWORD *)v55 + 1) = v12;
    if (v53)
      break;
    v14 = 1;
LABEL_14:
    v4 = v121;
    if (v12 >= v121)
    {
      v2 = v1;
      v3 = v117;
LABEL_111:
      v107 = v11;
      if (v14 < 2)
        goto LABEL_108;
      v109 = *v3;
      while (1)
      {
        v110 = v14 - 2;
        if (v14 < 2)
          break;
        if (!v109)
          goto LABEL_152;
        v106 = v107;
        v111 = *(_QWORD *)&v107[16 * v110 + 32];
        v112 = *(_QWORD *)&v107[16 * v14 + 24];
        sub_100041920((char *)(v109 + 8 * v111), (char *)(v109 + 8 * *(_QWORD *)&v107[16 * v14 + 16]), v109 + 8 * v112, v124);
        if (v2)
          goto LABEL_107;
        if (v112 < v111)
          goto LABEL_141;
        if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0)
          v106 = sub_100038E4C((uint64_t)v106);
        if (v110 >= *((_QWORD *)v106 + 2))
          goto LABEL_142;
        v113 = v106 + 32;
        v114 = &v106[16 * v110 + 32];
        *(_QWORD *)v114 = v111;
        *((_QWORD *)v114 + 1) = v112;
        v115 = v106;
        v116 = *((_QWORD *)v106 + 2);
        if (v14 > v116)
          goto LABEL_143;
        memmove(&v113[16 * v14 - 16], &v113[16 * v14], 16 * (v116 - v14));
        v107 = v115;
        *((_QWORD *)v115 + 2) = v116 - 1;
        v14 = v116 - 1;
        if (v116 <= 2)
          goto LABEL_108;
      }
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
      goto LABEL_145;
    }
  }
  v123 = v12;
  while (1)
  {
    v56 = v14 - 1;
    if (v14 >= 4)
    {
      v61 = &v54[16 * v14];
      v62 = *((_QWORD *)v61 - 8);
      v63 = *((_QWORD *)v61 - 7);
      v67 = __OFSUB__(v63, v62);
      v64 = v63 - v62;
      if (v67)
        goto LABEL_128;
      v66 = *((_QWORD *)v61 - 6);
      v65 = *((_QWORD *)v61 - 5);
      v67 = __OFSUB__(v65, v66);
      v59 = v65 - v66;
      v60 = v67;
      if (v67)
        goto LABEL_129;
      v68 = v14 - 2;
      v69 = &v54[16 * v14 - 32];
      v71 = *(_QWORD *)v69;
      v70 = *((_QWORD *)v69 + 1);
      v67 = __OFSUB__(v70, v71);
      v72 = v70 - v71;
      if (v67)
        goto LABEL_131;
      v67 = __OFADD__(v59, v72);
      v73 = v59 + v72;
      if (v67)
        goto LABEL_134;
      if (v73 >= v64)
      {
        v91 = &v54[16 * v56];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v67 = __OFSUB__(v92, v93);
        v94 = v92 - v93;
        if (v67)
          goto LABEL_138;
        v84 = v59 < v94;
        goto LABEL_96;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v85 = *((_QWORD *)v11 + 4);
        v86 = *((_QWORD *)v11 + 5);
        v67 = __OFSUB__(v86, v85);
        v78 = v86 - v85;
        v79 = v67;
        goto LABEL_90;
      }
      v58 = *((_QWORD *)v11 + 4);
      v57 = *((_QWORD *)v11 + 5);
      v67 = __OFSUB__(v57, v58);
      v59 = v57 - v58;
      v60 = v67;
    }
    if ((v60 & 1) != 0)
      goto LABEL_130;
    v68 = v14 - 2;
    v74 = &v54[16 * v14 - 32];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v77 = __OFSUB__(v75, v76);
    v78 = v75 - v76;
    v79 = v77;
    if (v77)
      goto LABEL_133;
    v80 = &v54[16 * v56];
    v82 = *(_QWORD *)v80;
    v81 = *((_QWORD *)v80 + 1);
    v67 = __OFSUB__(v81, v82);
    v83 = v81 - v82;
    if (v67)
      goto LABEL_136;
    if (__OFADD__(v78, v83))
      goto LABEL_137;
    if (v78 + v83 >= v59)
    {
      v84 = v59 < v83;
LABEL_96:
      if (v84)
        v56 = v68;
      goto LABEL_98;
    }
LABEL_90:
    if ((v79 & 1) != 0)
      goto LABEL_132;
    v87 = &v54[16 * v56];
    v89 = *(_QWORD *)v87;
    v88 = *((_QWORD *)v87 + 1);
    v67 = __OFSUB__(v88, v89);
    v90 = v88 - v89;
    if (v67)
      goto LABEL_135;
    if (v90 < v78)
      goto LABEL_14;
LABEL_98:
    v95 = v56 - 1;
    if (v56 - 1 >= v14)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    if (!v13)
      goto LABEL_150;
    v96 = v11;
    v97 = v13;
    v98 = &v54[16 * v95];
    v99 = *(_QWORD *)v98;
    v100 = v54;
    v101 = v56;
    v102 = &v54[16 * v56];
    v103 = *((_QWORD *)v102 + 1);
    v104 = v97;
    sub_100041920((char *)(v97 + 8 * *(_QWORD *)v98), (char *)(v97 + 8 * *(_QWORD *)v102), v97 + 8 * v103, v124);
    if (v1)
      break;
    if (v103 < v99)
      goto LABEL_125;
    if (v101 > *((_QWORD *)v96 + 2))
      goto LABEL_126;
    *(_QWORD *)v98 = v99;
    *(_QWORD *)&v100[16 * v95 + 8] = v103;
    v105 = *((_QWORD *)v96 + 2);
    if (v101 >= v105)
      goto LABEL_127;
    v11 = v96;
    v14 = v105 - 1;
    memmove(v102, v102 + 16, 16 * (v105 - 1 - v101));
    v54 = v100;
    *((_QWORD *)v96 + 2) = v105 - 1;
    v13 = v104;
    v12 = v123;
    if (v105 <= 2)
      goto LABEL_14;
  }
  v106 = v96;
LABEL_107:
  v107 = v106;
LABEL_108:
  v108 = swift_bridgeObjectRelease(v107);
  *(_QWORD *)((v125 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()(v108);
  return (char *)swift_bridgeObjectRelease(v125);
}

char *sub_100041088(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  char *result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::Int v12;
  __objc2_prot **v13;
  unint64_t v14;
  Swift::Int v15;
  id v16;
  id *v17;
  uint64_t *v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t *v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  __objc2_prot **v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  void *v80;
  Swift::Int v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  Swift::Int v97;
  Swift::Int v98;
  id *__dst;
  uint64_t v100;
  uint64_t v101;

  v2 = v1;
  v4 = a1[1];
  result = (char *)_minimumMergeRunLength(_:)(v4);
  if ((uint64_t)result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        return sub_100041868(0, (char *)v4, (char *)1, a1);
      return result;
    }
    goto LABEL_135;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
  {
LABEL_143:
    result = (char *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  v7 = result;
  v93 = a1;
  if (v4 < 2)
  {
    v11 = (char *)_swiftEmptyArrayStorage;
    v101 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
LABEL_101:
      v85 = v11;
      if (v14 < 2)
        goto LABEL_98;
      v87 = *v93;
      while (1)
      {
        v88 = v14 - 2;
        if (v14 < 2)
          goto LABEL_130;
        if (!v87)
          goto LABEL_142;
        v84 = v85;
        v89 = *(_QWORD *)&v85[16 * v88 + 32];
        v90 = *(_QWORD *)&v85[16 * v14 + 24];
        sub_100041C3C((id *)(v87 + 8 * v89), (id *)(v87 + 8 * *(_QWORD *)&v85[16 * v14 + 16]), v87 + 8 * v90, __dst);
        if (v2)
          goto LABEL_97;
        if (v90 < v89)
          goto LABEL_131;
        if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
          v84 = sub_100038E4C((uint64_t)v84);
        if (v88 >= *((_QWORD *)v84 + 2))
          goto LABEL_132;
        v91 = &v84[16 * v88 + 32];
        *(_QWORD *)v91 = v89;
        *((_QWORD *)v91 + 1) = v90;
        v92 = *((_QWORD *)v84 + 2);
        if (v14 > v92)
          goto LABEL_133;
        memmove(&v84[16 * v14 + 16], &v84[16 * v14 + 32], 16 * (v92 - v14));
        v85 = v84;
        *((_QWORD *)v84 + 2) = v92 - 1;
        v14 = v92 - 1;
        if (v92 <= 2)
          goto LABEL_98;
      }
    }
  }
  else
  {
    v8 = v6 >> 1;
    v9 = sub_100006B04(0, (unint64_t *)&unk_1000B91B0, CAFVent_ptr);
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (id *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v101 = v10;
  }
  v12 = 0;
  v95 = *a1 + 16;
  v96 = v7;
  v100 = *a1;
  v94 = *a1 - 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v13 = &off_1000AA000;
  v97 = v4;
  while (1)
  {
    v15 = v12++;
    if (v12 < v4)
    {
      v16 = objc_msgSend(*(id *)(v100 + 8 * v12), (SEL)v13[443], *(_QWORD *)(v100 + 8 * v15));
      v12 = v15 + 2;
      if (v15 + 2 < v4)
      {
        v17 = (id *)(v95 + 8 * v15);
        while ((v16 == (id)-1) != (objc_msgSend(*v17, (SEL)v13[443], *(v17 - 1)) != (id)-1))
        {
          ++v12;
          ++v17;
          if (v4 == v12)
          {
            v12 = v4;
            break;
          }
        }
      }
      if (v16 == (id)-1)
      {
        if (v12 < v15)
          goto LABEL_138;
        if (v15 < v12)
        {
          v18 = (uint64_t *)(v94 + 8 * v12);
          v19 = v12;
          v20 = v15;
          v21 = (uint64_t *)(v100 + 8 * v15);
          do
          {
            if (v20 != --v19)
            {
              if (!v100)
                goto LABEL_141;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v12 >= v4)
      goto LABEL_39;
    if (__OFSUB__(v12, v15))
      goto LABEL_134;
    if (v12 - v15 >= (uint64_t)v96)
      goto LABEL_39;
    if (__OFADD__(v15, v96))
      goto LABEL_136;
    if ((uint64_t)&v96[v15] >= v4)
      v23 = v4;
    else
      v23 = (Swift::Int)&v96[v15];
    if (v23 < v15)
      goto LABEL_137;
    if (v12 == v23)
    {
LABEL_39:
      v24 = v100;
      if (v12 < v15)
        goto LABEL_129;
    }
    else
    {
      v79 = (_QWORD *)(v94 + 8 * v12);
      v24 = v100;
      do
      {
        v80 = *(void **)(v100 + 8 * v12);
        v81 = v15;
        v82 = v79;
        do
        {
          if (objc_msgSend(v80, (SEL)v13[443], *v82) != (id)-1)
            break;
          if (!v100)
            goto LABEL_139;
          v83 = *v82;
          v80 = (void *)v82[1];
          *v82 = v80;
          v82[1] = v83;
          --v82;
          ++v81;
        }
        while (v12 != v81);
        ++v12;
        ++v79;
      }
      while (v12 != v23);
      v12 = v23;
      if (v23 < v15)
      {
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
        goto LABEL_143;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100038CA8(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v26 = *((_QWORD *)v11 + 2);
    v25 = *((_QWORD *)v11 + 3);
    v14 = v26 + 1;
    if (v26 >= v25 >> 1)
      v11 = sub_100038CA8((char *)(v25 > 1), v26 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v14;
    v27 = v11 + 32;
    v28 = &v11[16 * v26 + 32];
    *(_QWORD *)v28 = v15;
    *((_QWORD *)v28 + 1) = v12;
    if (v26)
      break;
    v14 = 1;
LABEL_14:
    v4 = v97;
    if (v12 >= v97)
    {
      v2 = v1;
      goto LABEL_101;
    }
  }
  v98 = v12;
  while (1)
  {
    v29 = v14 - 1;
    if (v14 >= 4)
    {
      v34 = &v27[16 * v14];
      v35 = *((_QWORD *)v34 - 8);
      v36 = *((_QWORD *)v34 - 7);
      v40 = __OFSUB__(v36, v35);
      v37 = v36 - v35;
      if (v40)
        goto LABEL_118;
      v39 = *((_QWORD *)v34 - 6);
      v38 = *((_QWORD *)v34 - 5);
      v40 = __OFSUB__(v38, v39);
      v32 = v38 - v39;
      v33 = v40;
      if (v40)
        goto LABEL_119;
      v41 = v14 - 2;
      v42 = &v27[16 * v14 - 32];
      v44 = *(_QWORD *)v42;
      v43 = *((_QWORD *)v42 + 1);
      v40 = __OFSUB__(v43, v44);
      v45 = v43 - v44;
      if (v40)
        goto LABEL_121;
      v40 = __OFADD__(v32, v45);
      v46 = v32 + v45;
      if (v40)
        goto LABEL_124;
      if (v46 >= v37)
      {
        v64 = &v27[16 * v29];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v40 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v40)
          goto LABEL_128;
        v57 = v32 < v67;
        goto LABEL_77;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v58 = *((_QWORD *)v11 + 4);
        v59 = *((_QWORD *)v11 + 5);
        v40 = __OFSUB__(v59, v58);
        v51 = v59 - v58;
        v52 = v40;
        goto LABEL_71;
      }
      v31 = *((_QWORD *)v11 + 4);
      v30 = *((_QWORD *)v11 + 5);
      v40 = __OFSUB__(v30, v31);
      v32 = v30 - v31;
      v33 = v40;
    }
    if ((v33 & 1) != 0)
      goto LABEL_120;
    v41 = v14 - 2;
    v47 = &v27[16 * v14 - 32];
    v49 = *(_QWORD *)v47;
    v48 = *((_QWORD *)v47 + 1);
    v50 = __OFSUB__(v48, v49);
    v51 = v48 - v49;
    v52 = v50;
    if (v50)
      goto LABEL_123;
    v53 = &v27[16 * v29];
    v55 = *(_QWORD *)v53;
    v54 = *((_QWORD *)v53 + 1);
    v40 = __OFSUB__(v54, v55);
    v56 = v54 - v55;
    if (v40)
      goto LABEL_126;
    if (__OFADD__(v51, v56))
      goto LABEL_127;
    if (v51 + v56 >= v32)
    {
      v57 = v32 < v56;
LABEL_77:
      if (v57)
        v29 = v41;
      goto LABEL_79;
    }
LABEL_71:
    if ((v52 & 1) != 0)
      goto LABEL_122;
    v60 = &v27[16 * v29];
    v62 = *(_QWORD *)v60;
    v61 = *((_QWORD *)v60 + 1);
    v40 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v40)
      goto LABEL_125;
    if (v63 < v51)
      goto LABEL_14;
LABEL_79:
    v68 = v29 - 1;
    if (v29 - 1 >= v14)
    {
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
      goto LABEL_129;
    }
    if (!v24)
      goto LABEL_140;
    v69 = v13;
    v70 = v11;
    v71 = v24;
    v72 = &v27[16 * v68];
    v73 = *(_QWORD *)v72;
    v74 = v27;
    v75 = v29;
    v76 = &v27[16 * v29];
    v77 = *((_QWORD *)v76 + 1);
    sub_100041C3C((id *)(v71 + 8 * *(_QWORD *)v72), (id *)(v71 + 8 * *(_QWORD *)v76), v71 + 8 * v77, __dst);
    if (v1)
      break;
    if (v77 < v73)
      goto LABEL_115;
    if (v75 > *((_QWORD *)v70 + 2))
      goto LABEL_116;
    *(_QWORD *)v72 = v73;
    *(_QWORD *)&v74[16 * v68 + 8] = v77;
    v78 = *((_QWORD *)v70 + 2);
    if (v75 >= v78)
      goto LABEL_117;
    v11 = v70;
    v14 = v78 - 1;
    memmove(v76, v76 + 16, 16 * (v78 - 1 - v75));
    v27 = v74;
    *((_QWORD *)v70 + 2) = v78 - 1;
    v24 = v100;
    v13 = v69;
    v12 = v98;
    if (v78 <= 2)
      goto LABEL_14;
  }
  v84 = v70;
LABEL_97:
  v85 = v84;
LABEL_98:
  v86 = swift_bridgeObjectRelease(v85);
  *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()(v86);
  return (char *)swift_bridgeObjectRelease(v101);
}

char *sub_10004176C(char *result, char *a2, char *a3, uint64_t *a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v16;

  v16 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * (_QWORD)a3 - 8;
LABEL_5:
    v7 = *(_QWORD *)(v5 + 8 * (_QWORD)v4);
    v8 = v16;
    v9 = (uint64_t *)v6;
    while (1)
    {
      v10 = *v9;
      v11 = objc_opt_self(CAFVent);
      result = (char *)swift_dynamicCastObjCClass(v7, v11);
      if (result)
      {
        v12 = result;
        v13 = objc_opt_self(CAFVent);
        result = (char *)swift_dynamicCastObjCClass(v10, v13);
        if (result)
        {
          result = (char *)objc_msgSend(v12, "typeCompare:", result);
          if (result != (char *)-1)
          {
LABEL_4:
            ++v4;
            v6 += 8;
            if (v4 == a2)
              return result;
            goto LABEL_5;
          }
        }
      }
      if (!v5)
        break;
      v14 = *v9;
      v7 = v9[1];
      *v9 = v7;
      v9[1] = v14;
      --v9;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

char *sub_100041868(char *result, char *a2, char *a3, uint64_t *a4)
{
  char *v4;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 8 * (_QWORD)a3 - 8;
LABEL_5:
    result = *(char **)(v7 + 8 * (_QWORD)v4);
    v9 = v6;
    v10 = (_QWORD *)v8;
    while (1)
    {
      result = (char *)objc_msgSend(result, "typeCompare:", *v10);
      if (result != (char *)-1)
      {
LABEL_4:
        ++v4;
        v8 += 8;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v11 = *v10;
      result = (char *)v10[1];
      *v10 = result;
      v10[1] = v11;
      --v10;
      if (v4 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100041920(char *__src, char *a2, unint64_t a3, char *a4)
{
  char *v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  char *v37;
  char *v38;
  char *v39;

  v39 = __src;
  v5 = a2;
  v6 = __src;
  v7 = a2 - __src;
  v8 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v8 = a2 - __src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v38 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (a4 != a2 || &a2[8 * v12] <= a4)
        memmove(a4, a2, 8 * v12);
      v23 = &a4[8 * v12];
      v37 = v23;
      v39 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        v24 = (char *)(a3 - 8);
        v25 = v5;
        while (1)
        {
          v26 = v24 + 8;
          v27 = *((_QWORD *)v23 - 1);
          v29 = *((_QWORD *)v25 - 1);
          v25 -= 8;
          v28 = v29;
          v30 = objc_opt_self(CAFVent);
          v31 = swift_dynamicCastObjCClass(v27, v30);
          if (v31
            && (v32 = (void *)v31,
                v33 = objc_opt_self(CAFVent),
                (v34 = swift_dynamicCastObjCClass(v28, v33)) != 0)
            && objc_msgSend(v32, "typeCompare:", v34) != (id)-1)
          {
            v37 = v23 - 8;
            if (v26 < v23 || v24 >= v23 || v26 != v23)
              *(_QWORD *)v24 = *((_QWORD *)v23 - 1);
            v25 = v5;
            v23 -= 8;
            if (v5 <= v6)
              goto LABEL_47;
          }
          else
          {
            if (v26 != v5 || v24 >= v5)
              *(_QWORD *)v24 = *(_QWORD *)v25;
            v39 = v25;
            if (v25 <= v6)
              goto LABEL_47;
          }
          v24 -= 8;
          v5 = v25;
          if (v23 <= a4)
            goto LABEL_47;
        }
      }
      goto LABEL_47;
    }
  }
  else if (v7 >= -7)
  {
    if (a4 != __src || &__src[8 * v9] <= a4)
      memmove(a4, __src, 8 * v9);
    v13 = &a4[8 * v9];
    v37 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      v14 = a4;
      do
      {
        v15 = *(_QWORD *)v5;
        v16 = *(_QWORD *)v14;
        v17 = objc_opt_self(CAFVent);
        v18 = swift_dynamicCastObjCClass(v15, v17);
        if (v18
          && (v19 = (void *)v18,
              v20 = objc_opt_self(CAFVent),
              (v21 = swift_dynamicCastObjCClass(v16, v20)) != 0)
          && objc_msgSend(v19, "typeCompare:", v21) != (id)-1)
        {
          if (v6 != v14)
            *(_QWORD *)v6 = *(_QWORD *)v14;
          v14 += 8;
          v38 = v14;
          v22 = v5;
        }
        else
        {
          v22 = v5 + 8;
          if (v6 < v5 || v6 >= v22 || v6 != v5)
            *(_QWORD *)v6 = *(_QWORD *)v5;
        }
        v6 += 8;
        if (v14 >= v13)
          break;
        v5 = v22;
      }
      while ((unint64_t)v22 < a3);
      v39 = v6;
    }
LABEL_47:
    sub_100038DA0(&v39, &v38, &v37);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100041C3C(id *__src, id *a2, unint64_t a3, id *__dst)
{
  id *v4;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  id *v15;
  id *v16;
  id *v17;
  id *v18;
  id *v19;
  uint64_t v20;
  uint64_t result;
  id *v22;
  id *v23;
  id *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (id *)(a3 - 8);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 1;
          v20 = (uint64_t)*--v18;
          if (objc_msgSend(*(v16 - 1), "typeCompare:", v20) == (id)-1)
          {
            if (v19 != v6 || v17 >= v6)
              *v17 = *v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          else
          {
            v22 = v16 - 1;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *v17 = *(v16 - 1);
            v18 = v6;
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          --v17;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (objc_msgSend(*v6, "typeCompare:", *v4) == (id)-1)
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        else
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_100038DA0(&v24, &v23, &v22);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100041ECC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100041EE4()
{
  return 5;
}

uint64_t sub_100041EEC()
{
  uint64_t result;

  sub_100041F1C();
  result = static UIColor.cafui_tableCellPlainBackground.getter();
  qword_1000BC890 = result;
  return result;
}

unint64_t sub_100041F1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B91A0;
  if (!qword_1000B91A0)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B91A0);
  }
  return result;
}

void sub_100041F58(uint64_t a1)
{
  sub_100041FA8(a1, (SEL *)&selRef_systemGreenColor, &qword_1000BC898);
}

void sub_100041F6C(uint64_t a1)
{
  sub_100041FA8(a1, (SEL *)&selRef_systemOrangeColor, &qword_1000BC8A0);
}

void sub_100041F80(uint64_t a1)
{
  sub_100041FA8(a1, (SEL *)&selRef_systemBlueColor, &qword_1000BC8A8);
}

void sub_100041F94(uint64_t a1)
{
  sub_100041FA8(a1, (SEL *)&selRef_systemRedColor, &qword_1000BC8B0);
}

void sub_100041FA8(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  if (qword_1000B6FC0 != -1)
    swift_once(&qword_1000B6FC0, sub_100042180);
  v5 = (id)qword_1000B8C80;
  v6 = objc_msgSend(v4, "resolvedColorWithTraitCollection:", v5);

  *a3 = v6;
}

void sub_100042054()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.35);

  qword_1000BC8B8 = (uint64_t)v1;
}

void sub_1000420C0()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  if (qword_1000B6FB0 != -1)
    swift_once(&qword_1000B6FB0, sub_100042054);
  v0 = qword_1000B6FC0;
  v1 = (id)qword_1000BC8B8;
  if (v0 != -1)
    swift_once(&qword_1000B6FC0, sub_100042180);
  v2 = (id)qword_1000B8C80;
  v3 = objc_msgSend(v1, "resolvedColorWithTraitCollection:", v2);

  qword_1000BC8C0 = (uint64_t)v3;
}

id sub_100042180()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithUserInterfaceStyle:", 1);
  qword_1000B8C80 = (uint64_t)result;
  return result;
}

char *sub_1000421BC()
{
  void *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  BOOL v6;
  char v7;
  void *v8;
  char *v9;
  char v11[24];
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for ClimateStepperPowerButton();
  v1 = (char *)objc_msgSendSuper2(&v12, "init");
  v2 = &v1[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v11, 1, 0);
  v3 = *(_QWORD *)v2;
  v4 = *((_QWORD *)v2 + 1);
  *(_OWORD *)v2 = xmmword_100089CD0;
  v5 = v1;
  if (!v4
    || (v3 == 0x7265776F70 ? (v6 = v4 == 0xE500000000000000) : (v6 = 0),
        !v6 && (_stringCompareWithSmolCheck(_:_:expecting:)(0x7265776F70, 0xE500000000000000, v3, v4, 0) & 1) == 0))
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v4);
  v7 = v5[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v5[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if ((v7 & 1) == 0)
  {
    v8 = *(void **)&v5[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v9 = v5;
    objc_msgSend(v8, "removeFromSuperview");
    ClimateButton.refreshColorConfig()();

  }
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  return v5;
}

id sub_100042324()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateStepperPowerButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateStepperPowerButton()
{
  return objc_opt_self(_TtC7Climate25ClimateStepperPowerButton);
}

uint64_t ClimateButton.action.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_action);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_action, v4, 0, 0);
  v2 = *v1;
  sub_10001BDD0(*v1, v1[1]);
  return v2;
}

uint64_t ClimateButton.action.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC7Climate13ClimateButton_action);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_100005118(v6, v7);
}

void *ClimateButton.action.modify(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_action, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t ClimateButton.popoverDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t ClimateButton.popoverDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*ClimateButton.popoverDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100042594;
}

void sub_100042594(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

id ClimateButton.imageSymbolConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration);
LABEL_5:
    v8 = v2;
    return v3;
  }
  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleBody, UIFontWeightSemibold);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", result, 3);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void ClimateButton.imageSymbolConfiguration.setter(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  id v7;

  v2 = v1;
  v4 = ClimateButton.imageSymbolConfiguration.getter();
  v5 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration) = a1;
  v7 = a1;

  v6 = ClimateButton.imageSymbolConfiguration.getter();
  sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
  LOBYTE(v5) = static NSObject.== infix(_:_:)(v6);

  if ((v5 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();

}

void (*ClimateButton.imageSymbolConfiguration.modify(id *a1))(uint64_t a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = ClimateButton.imageSymbolConfiguration.getter();
  return sub_1000427B4;
}

void sub_1000427B4(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  id v16;

  v4 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v5 = v4;
    v6 = ClimateButton.imageSymbolConfiguration.getter();
    v7 = *(void **)(v3 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration) = v5;
    v8 = v5;

    v9 = ClimateButton.imageSymbolConfiguration.getter();
    sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
    v10 = static NSObject.== infix(_:_:)(v9);

    if ((v10 & 1) == 0)
      ClimateButton.updateClimateConfiguration()();

    v11 = *(void **)a1;
  }
  else
  {
    v16 = ClimateButton.imageSymbolConfiguration.getter();
    v12 = *(void **)(v3 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration) = v4;
    v13 = v4;

    v14 = ClimateButton.imageSymbolConfiguration.getter();
    sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
    v15 = static NSObject.== infix(_:_:)(v14);

    if ((v15 & 1) == 0)
      ClimateButton.updateClimateConfiguration()();

    v11 = v16;
  }

}

uint64_t ClimateButton.imageSystemName.getter()
{
  return sub_10004297C(&OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
}

uint64_t ClimateButton.imageSystemName.setter(uint64_t a1, uint64_t a2)
{
  return sub_1000429D8(a1, a2, &OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
}

uint64_t (*ClimateButton.imageSystemName.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain(v6);
  return sub_10004296C;
}

uint64_t ClimateButton.title.getter()
{
  return sub_10004297C(&OBJC_IVAR____TtC7Climate13ClimateButton_title);
}

uint64_t sub_10004297C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess(v2, v5, 0, 0);
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t ClimateButton.title.setter(uint64_t a1, uint64_t a2)
{
  return sub_1000429D8(a1, a2, &OBJC_IVAR____TtC7Climate13ClimateButton_title);
}

uint64_t sub_1000429D8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  _BYTE v11[24];

  v6 = (uint64_t *)(v3 + *a3);
  result = swift_beginAccess(v6, v11, 1, 0);
  v8 = *v6;
  v9 = v6[1];
  *v6 = a1;
  v6[1] = a2;
  if (a2)
  {
    if (v9)
    {
      v10 = v8 == a1 && v9 == a2;
      if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v8, v9, 0) & 1) != 0)
        return swift_bridgeObjectRelease(v9);
    }
  }
  else if (!v9)
  {
    return result;
  }
  ClimateButton.updateClimateConfiguration()();
  return swift_bridgeObjectRelease(v9);
}

uint64_t (*ClimateButton.title.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Climate13ClimateButton_title;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain(v6);
  return sub_10004296C;
}

void sub_100042AE8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v7 = (uint64_t *)(v5 + v4);
  v9 = *v7;
  v8 = v7[1];
  *v7 = v3;
  v7[1] = v6;
  v10 = (_QWORD *)(v2[5] + v2[6]);
  if ((a2 & 1) != 0)
  {
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain(v6);
    if (v12)
    {
      if (v8)
      {
        v13 = v11 == v9 && v12 == v8;
        if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v9, v8, 0) & 1) != 0)
          goto LABEL_20;
      }
    }
    else if (!v8)
    {
LABEL_21:
      v16 = v2[4];
LABEL_25:
      swift_bridgeObjectRelease(v16);
      goto LABEL_26;
    }
    ClimateButton.updateClimateConfiguration()();
LABEL_20:
    swift_bridgeObjectRelease(v8);
    goto LABEL_21;
  }
  v14 = v10[1];
  if (v14)
  {
    if (v8)
    {
      v15 = *v10 == v9 && v14 == v8;
      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v14, v9, v8, 0) & 1) != 0)
        goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v8)
  {
LABEL_23:
    ClimateButton.updateClimateConfiguration()();
LABEL_24:
    v16 = v8;
    goto LABEL_25;
  }
LABEL_26:
  free(v2);
}

void *ClimateButton.attributedTitle.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_attributedTitle);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_attributedTitle, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void ClimateButton.attributedTitle.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_attributedTitle);
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_attributedTitle, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  ClimateButton.updateClimateConfiguration()();
}

void (*ClimateButton.attributedTitle.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_attributedTitle, a1, 33, 0);
  return sub_100042CDC;
}

void sub_100042CDC(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();
}

uint64_t ClimateButton.smallTitle.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle, v3, 0, 0);
  return *v1;
}

void ClimateButton.smallTitle.setter(char a1)
{
  uint64_t v1;
  int v3;
  _BYTE *v4;
  int v5;
  _BYTE v6[24];

  v3 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle);
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle, v6, 1, 0);
  v5 = *v4;
  *v4 = a1;
  if (v5 != v3)
    ClimateButton.updateClimateConfiguration()();
}

void (*ClimateButton.smallTitle.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_100042E20;
}

void sub_100042E20(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  v1 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v5 = *(unsigned __int8 *)(v3 + v2);
  *(_BYTE *)(v3 + v2) = v4;
  if (v4 != v5)
    ClimateButton.updateClimateConfiguration()();
  free(v1);
}

uint64_t ClimateButton.shouldHorizontallyFlipImage.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_shouldHorizontallyFlipImage);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_shouldHorizontallyFlipImage, v3, 0, 0);
  return *v1;
}

void ClimateButton.shouldHorizontallyFlipImage.setter(char a1)
{
  char *v1;
  int v3;
  char *v4;
  int v5;
  id v6;
  void *v7;
  double v8;
  CGAffineTransform v9;
  char v10[24];

  v3 = a1 & 1;
  v4 = &v1[OBJC_IVAR____TtC7Climate13ClimateButton_shouldHorizontallyFlipImage];
  swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate13ClimateButton_shouldHorizontallyFlipImage], v10, 1, 0);
  v5 = *v4;
  *v4 = a1;
  if (v5 != v3)
  {
    v6 = objc_msgSend(v1, "imageView");
    if (v6)
    {
      v7 = v6;
      v8 = 1.0;
      if ((a1 & 1) != 0)
        v8 = -1.0;
      CGAffineTransformMakeScale(&v9, v8, 1.0);
      objc_msgSend(v7, "setTransform:", &v9);

    }
  }
}

void (*ClimateButton.shouldHorizontallyFlipImage.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Climate13ClimateButton_shouldHorizontallyFlipImage;
  v3[9] = v1;
  v3[10] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3 + 6, 1, 0);
  *((_BYTE *)v3 + 88) = *v5;
  return sub_100042FD4;
}

void sub_100042FD4(id **a1, char a2)
{
  id *v2;
  _BYTE *v3;
  id v4;
  int v5;
  unsigned __int8 v6;
  id v7;
  void *v8;
  double v9;
  __int128 v10;
  __int128 v11;
  CGAffineTransform v12;

  v2 = *a1;
  v4 = (*a1)[9];
  v3 = (*a1)[10];
  v5 = *((unsigned __int8 *)*a1 + 88);
  v6 = v3[(_QWORD)v4];
  v3[(_QWORD)v4] = v5;
  if ((a2 & 1) != 0)
  {
    if (((v5 ^ v6) & 1) == 0)
      goto LABEL_10;
    v7 = objc_msgSend(v2[9], "imageView");
    if (!v7)
      goto LABEL_10;
  }
  else
  {
    if (((v5 ^ v6) & 1) == 0)
      goto LABEL_10;
    v7 = objc_msgSend(v2[9], "imageView");
    if (!v7)
      goto LABEL_10;
  }
  v8 = v7;
  v9 = 1.0;
  if (v5)
    v9 = -1.0;
  CGAffineTransformMakeScale(&v12, v9, 1.0);
  v10 = *(_OWORD *)&v12.c;
  v11 = *(_OWORD *)&v12.tx;
  *(_OWORD *)v2 = *(_OWORD *)&v12.a;
  *((_OWORD *)v2 + 1) = v10;
  *((_OWORD *)v2 + 2) = v11;
  objc_msgSend(v8, "setTransform:", v2);

LABEL_10:
  free(v2);
}

Swift::Void __swiftcall ClimateButton.updatePresentation()()
{
  _QWORD *v0;
  id v1;

  sub_10007813C();
  v1 = objc_msgSend(v0, "setEnabled:", ((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))() & 0x18) == 0);
  (*(void (**)(id))((swift_isaMask & *v0) + 0x228))(v1);
  (*(void (**)(void))((swift_isaMask & *v0) + 0x230))();
}

uint64_t ClimateButton.shouldBeHighlighted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted);
}

id ClimateButton.shouldBeHighlighted.setter(char a1)
{
  _BYTE *v1;

  v1[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted] = a1;
  return objc_msgSend(v1, "setHighlighted:", a1 & 1);
}

uint64_t ClimateButton.touchUpInsideActionTriggered()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  _BYTE v11[24];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC7Climate13ClimateButton_action;
  swift_beginAccess(v2, v11, 0, 0);
  v3 = *(void (**)(uint64_t))v2;
  if (*(_QWORD *)v2)
  {
    v4 = *(_QWORD *)(v2 + 8);
    swift_retain(v4);
    v3(v1);
    sub_100005118((uint64_t)v3, v4);
  }
  v5 = v1 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate;
  swift_beginAccess(v5, &v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 8))(0, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t ClimateButton.longPressGestureTriggered(_:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  _BYTE v25[24];
  CGPoint v26;
  CGRect v27;

  v2 = v1;
  if (objc_msgSend(a1, "state") == (id)1)
  {
    v4 = static os_log_type_t.default.getter(1);
    v5 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v6 = (void *)static OS_os_log.default.getter(v5);
    os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v6, "Button did start longPress gesture", 34, 2, _swiftEmptyArrayStorage);

    (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x240))(1);
    v7 = (char *)v2 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate;
    swift_beginAccess(v7, v25, 0, 0);
    result = swift_unknownObjectWeakLoadStrong(v7);
    if (result)
    {
      v9 = result;
      v10 = *((_QWORD *)v7 + 1);
      ObjectType = swift_getObjectType(result);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(1, ObjectType, v10);
      return swift_unknownObjectRelease(v9);
    }
  }
  else if (objc_msgSend(a1, "state") == (id)3)
  {
    v12 = (*(uint64_t (**)(_QWORD))((swift_isaMask & *v1) + 0x240))(0);
    v13 = static os_log_type_t.default.getter(v12);
    v14 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v15 = (void *)static OS_os_log.default.getter(v14);
    os_log(_:dso:log:_:_:)(v13, &_mh_execute_header, v15, "Button did end longPress gesture", 32, 2, _swiftEmptyArrayStorage);

    v16 = (char *)v2 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate;
    swift_beginAccess((char *)v2 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate, v25, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v16);
    if (Strong)
    {
      v18 = Strong;
      v19 = *((_QWORD *)v16 + 1);
      v20 = swift_getObjectType(Strong);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v19 + 8))(0, v20, v19);
      swift_unknownObjectRelease(v18);
    }
    objc_msgSend(a1, "locationInView:", v2);
    v22 = v21;
    v24 = v23;
    objc_msgSend(v2, "bounds");
    v26.x = v22;
    v26.y = v24;
    result = CGRectContainsPoint(v27, v26);
    if ((_DWORD)result)
      return (uint64_t)objc_msgSend(v2, "sendActionsForControlEvents:", 64);
  }
  else
  {
    result = (uint64_t)objc_msgSend(a1, "state");
    if (result == 4)
      return (*(uint64_t (**)(_QWORD))((swift_isaMask & *v1) + 0x240))(0);
  }
  return result;
}

void ClimateButton.updateClimateConfiguration()()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  NSString v3;
  id v4;
  id v5;
  id *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  void *v15;
  id v16;
  NSString v17;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];

  sub_10007813C();
  v1 = (char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName;
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v20, 0, 0);
  v2 = *((_QWORD *)v1 + 1);
  if (v2)
  {
    swift_bridgeObjectRetain(v2);
    v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
    v4 = ClimateButton.imageSymbolConfiguration.getter();
    v5 = (id)CAFUIImageForSymbolNameWithConfiguration(v3, v4);

    objc_msgSend(v0, "setImage:forState:", v5, 0);
  }
  else
  {
    objc_msgSend(v0, "setImage:forState:", 0, 0);
  }
  v6 = (id *)((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_attributedTitle);
  v7 = swift_beginAccess((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_attributedTitle, v19, 0, 0);
  if (*v6)
  {
    v8 = *v6;
    objc_msgSend(v0, "setAttributedTitle:forState:", v8, 0);
    objc_msgSend(v0, "setTitle:forState:", 0, 0);

    return;
  }
  v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x148))(v7);
  if (v10)
  {
    v11 = v10;
    v12 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v12 = v9 & 0xFFFFFFFFFFFFLL;
    if (v12)
    {
      v13 = (char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle;
      swift_beginAccess((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle, v18, 0, 0);
      if (*v13 == 1)
      {
        v14 = objc_msgSend(v0, "titleLabel");
        if (v14)
        {
          v15 = v14;
          v16 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:variant:", UIFontTextStyleCaption2, 1024);
          objc_msgSend(v15, "setFont:", v16);

        }
      }
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v11);
      objc_msgSend(v0, "setTitle:forState:", v17, 0);

      goto LABEL_16;
    }
    swift_bridgeObjectRelease(v10);
  }
  objc_msgSend(v0, "setTitle:forState:", 0, 0);
LABEL_16:
  objc_msgSend(v0, "setAttributedTitle:forState:", 0, 0);
}

uint64_t ClimateButton.layoutKey.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  id v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v3 = objc_msgSend(v1, "superview");
  if (v3
    && (v10 = v3,
        v4 = sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr),
        v5 = sub_100006058(&qword_1000B8CF8),
        (swift_dynamicCast(&v11, &v10, v4, v5, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v12 + 1))
    {
      sub_100041ECC(&v11, (uint64_t)v14);
      v6 = v15;
      v7 = v16;
      sub_10003C688(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
      return sub_100018B40(v14);
    }
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
  }
  sub_100008B88((uint64_t)&v11, (uint64_t *)&unk_1000B9670);
  v9 = type metadata accessor for CAUVehicleLayoutKey(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
}

uint64_t ClimateButton.accessibilityLabelPrimary.getter()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  Swift::String v7;
  _BYTE v9[24];
  uint64_t v10;
  unint64_t v11;

  v10 = 0;
  v11 = 0xE000000000000000;
  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x148))();
  if (v2)
  {
    v3 = v1;
    v4 = v2;
  }
  else
  {
    v5 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
    swift_beginAccess((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v9, 0, 0);
    v6 = v5[1];
    if (v6)
      v3 = *v5;
    else
      v3 = 0;
    if (v6)
      v4 = (void *)v5[1];
    else
      v4 = (void *)0xE000000000000000;
    swift_bridgeObjectRetain(v6);
  }
  v7._countAndFlagsBits = v3;
  v7._object = v4;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v4);
  return v10;
}

Swift::Void __swiftcall ClimateButton.refreshColorConfig()()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  id v4;
  id v5;
  uint64_t v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  id v11;
  id v12;
  uint64_t v13;
  char v14;
  id v15;
  id v16;

  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial) & 1) != 0)
  {
    v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
    v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
    v3 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x110);
    v4 = *(id *)((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
    v5 = v1;
    v6 = swift_bridgeObjectRetain(v2);
    v7 = v3(v6);
    v16 = sub_1000477D8(v7, v4, v2);
    swift_bridgeObjectRelease(v2);

  }
  else
  {
    v16 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  v8 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v9 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  v10 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x110);
  v11 = *(id *)((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v12 = v8;
  v13 = swift_bridgeObjectRetain(v9);
  v14 = v10(v13);
  v15 = sub_100047864(v14, v12, v9);
  swift_bridgeObjectRelease(v9);

  objc_msgSend(v0, "setBackgroundColor:", v16);
  objc_msgSend(v0, "setTitleColor:forState:", v15, 0);
  objc_msgSend(v0, "setTitleColor:forState:", v15, 2);
  objc_msgSend(v0, "setTintColor:", v15);
  objc_msgSend(v0, "setAdjustsImageWhenHighlighted:", 0);

}

void sub_100043AB8()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;
  void *v21;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(MTMaterialView), "materialViewWithRecipe:", 4);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v0, "insertSubview:atIndex:", v3, 0);
    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = sub_100006058((uint64_t *)&unk_1000B7590);
    v6 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100088DF0;
    v7 = objc_msgSend(v3, "leadingAnchor");
    v8 = objc_msgSend(v1, "leadingAnchor");
    v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

    *(_QWORD *)(v6 + 32) = v9;
    v10 = objc_msgSend(v3, "trailingAnchor");
    v11 = objc_msgSend(v1, "trailingAnchor");
    v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

    *(_QWORD *)(v6 + 40) = v12;
    v13 = objc_msgSend(v3, "topAnchor");
    v14 = objc_msgSend(v1, "topAnchor");
    v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

    *(_QWORD *)(v6 + 48) = v15;
    v16 = objc_msgSend(v3, "bottomAnchor");
    v17 = objc_msgSend(v1, "bottomAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

    *(_QWORD *)(v6 + 56) = v18;
    specialized Array._endMutation()(v19);
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v6);
    objc_msgSend(v4, "activateConstraints:", isa);

    v21 = *(void **)&v1[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView] = v3;

  }
}

id ClimateButton.isHighlighted.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateButton();
  return objc_msgSendSuper2(&v2, "isHighlighted");
}

uint64_t type metadata accessor for ClimateButton()
{
  return objc_opt_self(_TtC7Climate13ClimateButton);
}

void ClimateButton.isHighlighted.setter(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ClimateButton();
  objc_msgSendSuper2(&v3, "setHighlighted:", a1 & 1);
  sub_100043EB4();
}

void sub_100043EB4()
{
  _QWORD *v0;
  id v1;
  void *v2;
  char v3;
  double v4;
  id v5;
  char v6;
  double v7;
  id v8;

  v1 = objc_msgSend(v0, "titleLabel");
  if (v1)
  {
    v2 = v1;
    v3 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x238))();
    v4 = 0.2;
    if ((v3 & 1) == 0)
      v4 = 1.0;
    objc_msgSend(v2, "setAlpha:", v4);

  }
  v5 = objc_msgSend(v0, "imageView");
  if (v5)
  {
    v8 = v5;
    v6 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x238))();
    v7 = 0.2;
    if ((v6 & 1) == 0)
      v7 = 1.0;
    objc_msgSend(v8, "setAlpha:", v7);

  }
}

_QWORD *ClimateButton.init()()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  objc_class *v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  void *object;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  Swift::String v42;
  uint64_t ObjectType;
  uint64_t v44;
  objc_super v45;

  v1 = sub_100006058(&qword_1000B8D00);
  __chkstk_darwin(v1);
  v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  *v8 = 0;
  v8[1] = 0;
  v9 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = 0;
  v10 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_title];
  *v11 = 0;
  v11[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_attributedTitle] = 0;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle] = 0;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_shouldHorizontallyFlipImage] = 0;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_spaceBetweenSymbolAndTitle] = 0x4008000000000000;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_textOnTopOfSymbol] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView] = 0;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted] = 0;
  v12 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityLabelModifier];
  *v12 = 0;
  v12[1] = 0;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityLabelShouldIncludeStates] = 1;
  v13 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityIdentifierModifier];
  *v13 = 0;
  v13[1] = 0;
  v14 = qword_1000B6FC8;
  v15 = v0;
  if (v14 != -1)
    swift_once(&qword_1000B6FC8, sub_1000475D0);
  v16 = (void *)qword_1000BC8C8;
  v17 = (void *)qword_1000BC8D0;
  v18 = qword_1000BC8D8;
  v19 = &v15[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  *(_QWORD *)v19 = qword_1000BC8C8;
  *((_QWORD *)v19 + 1) = v17;
  *((_QWORD *)v19 + 2) = v18;
  v20 = v16;
  v21 = v17;
  swift_bridgeObjectRetain(v18);

  v22 = (objc_class *)type metadata accessor for ClimateButton();
  v45.receiver = v15;
  v45.super_class = v22;
  v23 = objc_msgSendSuper2(&v45, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  ObjectType = swift_getObjectType(v23);
  v24 = v23;
  v25 = sub_100006058(&qword_1000B8D50);
  v26 = String.init<A>(describing:)(&ObjectType, v25);
  v28 = v27;
  ObjectType = v26;
  v44 = v27;
  (*(void (**)(void))((swift_isaMask & *v24) + 0x268))();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    swift_bridgeObjectRelease(v28);
    sub_100008B88((uint64_t)v3, &qword_1000B8D00);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    v29._countAndFlagsBits = 58;
    v29._object = (void *)0xE100000000000000;
    String.append(_:)(v29);
    _print_unlocked<A, B>(_:_:)(v7, &v42, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    object = v42._object;
    String.append(_:)(v42);
    swift_bridgeObjectRelease(object);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease(v44);
  }
  sub_10005A0F0();
  objc_msgSend(v24, "setAdjustsImageWhenDisabled:", 0);
  objc_msgSend(v24, "setContentEdgeInsets:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v31 = objc_msgSend(v24, "imageView");
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, "setContentMode:", 1);

  }
  objc_msgSend(v24, "setClipsToBounds:", 1);
  objc_msgSend(v24, "_setContinuousCornerRadius:", 12.0);
  sub_100043AB8();
  (*(void (**)(void))((swift_isaMask & *v24) + 0x230))();
  ClimateButton.updateClimateConfiguration()();
  v33 = objc_msgSend(v24, "titleLabel");
  if (v33)
  {
    v34 = v33;
    objc_msgSend(v33, "setLineBreakMode:", 0);

  }
  v35 = objc_msgSend(v24, "titleLabel");
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, "setTextAlignment:", 1);

  }
  v37 = objc_msgSend(v24, "titleLabel");
  if (v37)
  {
    v38 = v37;
    v39 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:variant:", UIFontTextStyleBody, 1024);
    objc_msgSend(v38, "setFont:", v39);

  }
  objc_msgSend(v24, "addTarget:action:forControlEvents:", v24, "touchUpInsideActionTriggered", 64);
  v40 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v24, "longPressGestureTriggered:");
  objc_msgSend(v24, "addGestureRecognizer:", v40);

  return v24;
}

id ClimateStepper.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

Swift::Void __swiftcall ClimateButton.layoutSubviews()()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double left;
  double bottom;
  double right;
  double v14;
  double v18;
  double v19;
  double v20;
  double v21;
  _BYTE v25[24];
  objc_super v26;

  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for ClimateButton();
  objc_msgSendSuper2(&v26, "layoutSubviews");
  v1 = (char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName;
  v2 = swift_beginAccess((char *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v25, 0, 0);
  if (!*((_QWORD *)v1 + 1))
    goto LABEL_7;
  v3 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x148))(v2);
  if (!v4)
    goto LABEL_7;
  v5 = v3;
  v6 = v4;
  swift_bridgeObjectRelease(v4);
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = v5 & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    sub_1000446B8();
  }
  else
  {
LABEL_7:
    objc_msgSend(v0, "titleEdgeInsets");
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    if (v14 != UIEdgeInsetsZero.top || v8 != left || v9 != bottom || v10 != right)
    {
      objc_msgSend(v0, "imageEdgeInsets");
      if (v21 != UIEdgeInsetsZero.top || v18 != left || v19 != bottom || v20 != right)
      {
        objc_msgSend(v0, "setTitleEdgeInsets:", UIEdgeInsetsZero.top, left, bottom, right);
        objc_msgSend(v0, "setImageEdgeInsets:", UIEdgeInsetsZero.top, left, bottom, right);
      }
    }
  }
}

void sub_1000446B8()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  unint64_t v33;
  Class isa;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  char v51[72];
  CGRect v52;

  v1 = v0;
  v2 = objc_msgSend(v0, "imageView");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "image");

    if (v4)
    {
      objc_msgSend(v4, "size");
      v6 = v5;
      v8 = v7;

      v9 = objc_msgSend(v1, "titleLabel");
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v9, "text");

        if (v11)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
          v13 = v12;

          v14 = objc_msgSend(v1, "titleLabel");
          if (v14
            && (v15 = v14, v16 = objc_msgSend(v14, "font"), v15, v16))
          {
            v17 = (void *)objc_opt_self(UIApplication);
            v18 = objc_msgSend(v17, "sharedApplication");
            v19 = objc_msgSend(v18, "delegate");

            if (v19)
            {
              v20 = type metadata accessor for ClimateAppDelegate();
              swift_dynamicCastClassUnconditional(v19, v20, 0, 0, 0);
              v21 = sub_10006B490();
              swift_unknownObjectRelease(v19);
              v22 = objc_msgSend(v17, "sharedApplication");
              v23 = objc_msgSend(v22, "userInterfaceLayoutDirection");

              v24 = objc_allocWithZone((Class)NSString);
              v25 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v13);
              v26 = objc_msgSend(v24, "initWithString:", v25);

              v27 = sub_100006058(&qword_1000B8E08);
              inited = swift_initStackObject(v27, v51);
              *(_OWORD *)(inited + 16) = xmmword_100088D00;
              static String._unconditionallyBridgeFromObjectiveC(_:)(kCTFontAttributeName);
              v30 = v29;
              v31 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v30);
              *(_QWORD *)(inited + 32) = v31;
              *(_QWORD *)(inited + 64) = sub_100006B04(0, (unint64_t *)&unk_1000B8E10, UIFont_ptr);
              *(_QWORD *)(inited + 40) = v16;
              v32 = v16;
              v33 = sub_100023F60(inited);
              type metadata accessor for Key(0);
              sub_1000453E8();
              isa = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v33);
              objc_msgSend(v26, "sizeWithAttributes:", isa);
              v36 = v35;
              v38 = v37;

              objc_msgSend(v1, "bounds");
              v39 = (CGRectGetWidth(v52) - v6) * 0.5;
              v40 = OBJC_IVAR____TtC7Climate13ClimateButton_spaceBetweenSymbolAndTitle;
              v41 = *(double *)&v1[OBJC_IVAR____TtC7Climate13ClimateButton_spaceBetweenSymbolAndTitle];
              if (v1[OBJC_IVAR____TtC7Climate13ClimateButton_textOnTopOfSymbol] == 1)
              {
                v42 = -v6;
                if (v23 == (id)1)
                  v43 = 0.0;
                else
                  v43 = -v6;
                if (v23 != (id)1)
                  v42 = 0.0;
                v44 = v8 + v41;
                if (v23 == (id)1)
                  v45 = -v36;
                else
                  v45 = v39;
                objc_msgSend(v1, "setTitleEdgeInsets:", 0.0, v43, v44, v42);
                objc_msgSend(v1, "setImageEdgeInsets:", v38 + *(double *)&v1[v40], v45, 0.0, 0.0);
              }
              else
              {
                v46 = -v36;
                if (v23 != (id)1)
                  v46 = v39;
                v47 = v38 + v41;
                v48 = -v6;
                if (v23 == (id)1)
                  v49 = -v6;
                else
                  v49 = 0.0;
                if (v23 == (id)1)
                  v50 = 0.0;
                else
                  v50 = v48;
                objc_msgSend(v1, "setImageEdgeInsets:", 0.0, v46, v47);
                objc_msgSend(v1, "setTitleEdgeInsets:", v8 + *(double *)&v1[v40], v50, 0.0, v49);
              }

            }
            else
            {
              __break(1u);
            }
          }
          else
          {
            swift_bridgeObjectRelease(v13);
          }
        }
      }
    }
  }
}

uint64_t ClimateButton.touchesBegan(_:with:)(uint64_t a1, uint64_t a2)
{
  return sub_100044BC8(a1, a2, (SEL *)&selRef_touchesBegan_withEvent_, 1);
}

uint64_t ClimateButton.touchesEnded(_:with:)(uint64_t a1, uint64_t a2)
{
  return sub_100044BC8(a1, a2, (SEL *)&selRef_touchesEnded_withEvent_, 0);
}

uint64_t sub_100044BC8(uint64_t a1, uint64_t a2, SEL *a3, uint64_t a4)
{
  _QWORD *v4;
  Class isa;
  objc_super v10;

  sub_100006B04(0, &qword_1000B8D58, UITouch_ptr);
  sub_1000453A8(&qword_1000B8D60, &qword_1000B8D58, UITouch_ptr);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for ClimateButton();
  objc_msgSendSuper2(&v10, *a3, isa, a2);

  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x240))(a4);
}

uint64_t sub_100044CAC(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  Class isa;
  objc_super v18;

  v11 = sub_100006B04(0, &qword_1000B8D58, UITouch_ptr);
  v12 = sub_1000453A8(&qword_1000B8D60, &qword_1000B8D58, UITouch_ptr);
  v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v11, v12);
  v14 = a4;
  v15 = a1;
  isa = Set._bridgeToObjectiveC()().super.isa;
  v18.receiver = v15;
  v18.super_class = (Class)type metadata accessor for ClimateButton();
  objc_msgSendSuper2(&v18, *a5, isa, v14);

  (*(void (**)(uint64_t))((swift_isaMask & *v15) + 0x240))(a6);
  return swift_bridgeObjectRelease(v13);
}

uint64_t ClimateButton.pressesBegan(_:with:)(uint64_t a1, uint64_t a2)
{
  return sub_100044DD0(a1, a2, (SEL *)&selRef_pressesBegan_withEvent_, 1);
}

uint64_t sub_100044DD0(uint64_t a1, uint64_t a2, SEL *a3, uint64_t a4)
{
  _QWORD *v4;
  Class isa;
  objc_super v10;

  sub_100006B04(0, &qword_1000B8D68, UIPress_ptr);
  sub_1000453A8(&qword_1000B8D70, &qword_1000B8D68, UIPress_ptr);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for ClimateButton();
  objc_msgSendSuper2(&v10, *a3, isa, a2);

  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x240))(a4);
}

uint64_t sub_100044EB4(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  Class isa;
  objc_super v18;

  v11 = sub_100006B04(0, &qword_1000B8D68, UIPress_ptr);
  v12 = sub_1000453A8(&qword_1000B8D70, &qword_1000B8D68, UIPress_ptr);
  v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v11, v12);
  v14 = a4;
  v15 = a1;
  isa = Set._bridgeToObjectiveC()().super.isa;
  v18.receiver = v15;
  v18.super_class = (Class)type metadata accessor for ClimateButton();
  objc_msgSendSuper2(&v18, *a5, isa, v14);

  (*(void (**)(uint64_t))((swift_isaMask & *v15) + 0x240))(a6);
  return swift_bridgeObjectRelease(v13);
}

uint64_t ClimateButton.pressesEnded(_:with:)(uint64_t a1, uint64_t a2)
{
  return sub_100044DD0(a1, a2, (SEL *)&selRef_pressesEnded_withEvent_, 0);
}

Swift::Void __swiftcall ClimateButton.didMoveToSuperview()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for ClimateButton();
  objc_msgSendSuper2(&v1, "didMoveToSuperview");
  sub_10005A0F0();
}

id ClimateStepper.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

void ClimateButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Climate.ClimateButton", 21, "init(frame:)", 12, 0);
  __break(1u);
}

id ClimateButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10004522C()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x268))();
}

void _s7Climate0A6ButtonC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = 0;
  v2 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_title];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_attributedTitle] = 0;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle] = 0;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_shouldHorizontallyFlipImage] = 0;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_spaceBetweenSymbolAndTitle] = 0x4008000000000000;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_textOnTopOfSymbol] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView] = 0;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted] = 0;
  v4 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityLabelModifier];
  *v4 = 0;
  v4[1] = 0;
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityLabelShouldIncludeStates] = 1;
  v5 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityIdentifierModifier];
  *v5 = 0;
  v5[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BA30, "Climate/ClimateButton.swift", 27, 2, 187, 0);
  __break(1u);
}

uint64_t sub_1000453A8(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100006B04(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000453E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7130;
  if (!qword_1000B7130)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_100088B34, v1);
    atomic_store(result, (unint64_t *)&qword_1000B7130);
  }
  return result;
}

double sub_100045430()
{
  void **v0;
  void *v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v1 = *v0;
  v2 = objc_allocWithZone((Class)type metadata accessor for ClimateSeatFanServiceButton());
  v3 = sub_100032FB4(v1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = sub_100006058(&qword_1000B7460);
  v5 = swift_allocObject(v4, 48, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v5 + 16) = xmmword_100088D00;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = &off_10009F4F8;
  return result;
}

uint64_t sub_1000454A8()
{
  return sub_100061320();
}

char *sub_1000454D0(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _BYTE *v22;
  int v23;
  char *v24;
  void *v25;
  char *v26;
  _BYTE *v27;

  v3 = &v1[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = &v1[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_defaultProgressViewColorConfig];
  v5 = (void *)objc_opt_self(UIColor);
  v6 = v1;
  v7 = objc_msgSend(v5, "labelColor");
  v8 = objc_msgSend(v5, "labelColor");
  v9 = objc_msgSend(v8, "colorWithAlphaComponent:", 0.25);

  v10 = objc_msgSend(v5, "labelColor");
  *(_QWORD *)v4 = v7;
  *((_QWORD *)v4 + 1) = v9;
  *((_QWORD *)v4 + 2) = v10;
  *((_QWORD *)v4 + 3) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_autoModeGlyph] = 0;
  v11 = objc_allocWithZone((Class)type metadata accessor for ClimateFanButton());
  v12 = a1;
  v13 = sub_100061494(v12, 1u);
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_fanButton] = v13;
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = v13;
  v15 = v7;
  v16 = v9;
  v17 = v10;
  sub_100061124(v15, v9, v10, (uint64_t)&_swiftEmptyDictionarySingleton);

  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_fan] = v12;
  v18 = v12;

  v19 = (char *)sub_100012568(0, 0, 1);
  v20 = v19;
  v21 = OBJC_IVAR____TtC7Climate19ClimateFanIndicator_fanButton;
  v22 = *(_BYTE **)&v19[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_fanButton];
  v23 = v22[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v22[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if (v23 == 1)
  {
    v24 = v19;
  }
  else
  {
    v25 = *(void **)&v22[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v26 = v19;
    v27 = v22;
    objc_msgSend(v25, "removeFromSuperview");
    ClimateButton.refreshColorConfig()();

  }
  objc_msgSend(v18, "registerObserver:", v20);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[v21]);
  sub_100045718();
  sub_100045954();

  return v20;
}

void sub_100045718()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100006058((uint64_t *)&unk_1000B7590);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100088DF0;
  v5 = *(void **)&v1[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_fanButton];
  v6 = objc_msgSend(v5, "leadingAnchor");
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "trailingAnchor");
  v10 = objc_msgSend(v1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v5, "topAnchor");
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(v5, "bottomAnchor");
  v16 = objc_msgSend(v1, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100006098();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "activateConstraints:", isa);

}

void sub_100045954()
{
  char *v0;
  void *v1;
  uint64_t v2;
  id v3;
  unsigned __int8 v4;
  char v5;
  void *v6;
  unsigned __int8 v7;
  uint64_t v8;
  unsigned __int8 v9;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_fanButton];
  if ((sub_100061320() & 0x1A) == 2)
  {
    v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_fan], "fanLevelRange");
    v4 = objc_msgSend(v3, "maximumValue");
  }
  else
  {
    v5 = sub_100061320();
    v6 = *(void **)&v0[OBJC_IVAR____TtC7Climate19ClimateFanIndicator_fan];
    if ((v5 & 0x18) == 0)
    {
      v9 = objc_msgSend(v6, "fanLevel");
      v8 = v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue;
      *(_BYTE *)(v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue) = v9;
      goto LABEL_7;
    }
    v3 = objc_msgSend(v6, "fanLevelRange");
    v4 = objc_msgSend(v3, "minimumValue");
  }
  v7 = v4;

  v8 = v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue) = v7;
LABEL_7:
  *(_BYTE *)(v8 + 1) = 0;
  sub_1000611E8();
  sub_10007813C();
  objc_msgSend(v1, "setEnabled:", (sub_100061320() & 0x18) == 0);
  sub_100045A84();
  ClimateButton.refreshColorConfig()();
}

void sub_100045A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  id v22;
  id v23;
  id v24;
  id v25;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_fanButton);
  if ((sub_100061320() & 0x1A) == 2)
  {
    v3 = (void *)objc_opt_self(UIColor);
    v4 = objc_msgSend(v3, "labelColor");
    v5 = objc_msgSend(v3, "systemGreenColor");
    v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.25);

    v7 = objc_msgSend(v3, "systemGreenColor");
    v8 = &_swiftEmptyDictionarySingleton;
    v9 = v4;
    v10 = v6;
LABEL_5:
    sub_100061124(v9, v10, v7, (uint64_t)v8);
    goto LABEL_6;
  }
  v11 = *(void **)(v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors);
  v12 = *(void **)(v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 8);
  v13 = *(void **)(v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 16);
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 24);
  v16 = *(void **)(v1 + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_defaultProgressViewColorConfig);
  v15 = *(void **)(v1 + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_defaultProgressViewColorConfig + 8);
  v18 = *(void **)(v1 + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_defaultProgressViewColorConfig + 16);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_defaultProgressViewColorConfig + 24);
  v25 = v13;
  swift_bridgeObjectRetain(v14);
  v19 = v11;
  v20 = v12;
  sub_10006B348((uint64_t)v19, v12, v13, v14, (uint64_t)v16, v15, v18, v17);
  LOBYTE(v12) = v21;
  swift_bridgeObjectRelease(v14);

  if ((v12 & 1) == 0)
  {
    v22 = v18;
    swift_bridgeObjectRetain(v17);
    v23 = v16;
    v24 = v15;
    v9 = v23;
    v10 = v15;
    v7 = v18;
    v8 = (void *)v17;
    goto LABEL_5;
  }
LABEL_6:
  ClimateButton.refreshColorConfig()();
}

void sub_100045C38()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  sub_10001BF8C(v0 + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_delegate);

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_defaultProgressViewColorConfig);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_defaultProgressViewColorConfig + 8);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_defaultProgressViewColorConfig + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC7Climate19ClimateFanIndicator_defaultProgressViewColorConfig
                                      + 24));

}

id sub_100045CB8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateFanIndicator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateFanIndicator()
{
  return objc_opt_self(_TtC7Climate19ClimateFanIndicator);
}

void sub_100045EE8(uint64_t a1, uint64_t a2, void *a3, void **a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void **v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void **v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint8_t *v35;
  id v36;
  id v37;
  _BYTE *v38;
  char v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  NSURL *v43;
  void *v44;
  void *v45;
  void *v46;
  CGFloat v47;
  char *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t Strong;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void **v67;
  uint64_t v68;
  CGRect v69;

  v65 = a2;
  v63 = a5;
  v60 = a3;
  v64 = a1;
  v6 = type metadata accessor for ClimateZone(0);
  __chkstk_darwin(v6);
  v61 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v62 = (uint64_t)&v60 - v9;
  v10 = sub_100006058(&qword_1000B8A30);
  __chkstk_darwin(v10);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000B6FE8 != -1)
    v15 = swift_once(&qword_1000B6FE8, sub_10005CB60);
  v18 = qword_1000BC938;
  v19 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v20 = 134217984;
    v67 = a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v20 + 4, v20 + 12);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Updating popover for side: %lu", v20, 0xCu);
    swift_slowDealloc(v20, -1, -1);
  }
  v21 = a4;
  v22 = (void *)objc_opt_self(UIApplication);
  v23 = objc_msgSend(v22, "sharedApplication");
  v24 = objc_msgSend(v23, "delegate");

  if (!v24)
  {
    __break(1u);
    goto LABEL_29;
  }
  v25 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v24, v25, 0, 0, 0);
  v26 = sub_10006B490();
  swift_unknownObjectRelease(v24);
  KeyPath = swift_getKeyPath(&unk_10008A638);
  v28 = swift_getKeyPath(&unk_10008A660);
  static Published.subscript.getter(v26, KeyPath, v28);

  swift_release(KeyPath);
  swift_release(v28);
  if ((v67 & 4) == 0)
  {
    v30 = v66;
    v31 = v21;
    if (v64)
    {
LABEL_25:
      Strong = swift_unknownObjectWeakLoadStrong(v30 + 56);
      if (Strong)
      {
        v59 = Strong;
        sub_100016904(v63 & 1, v31, 0);
        swift_unknownObjectRelease(v59);
      }
      sub_1000465FC((uint64_t)v31);
      return;
    }
    v32 = qword_1000BC938;
    v33 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v34 = 134217984;
      v67 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v34 + 4, v34 + 12);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Creating popover for side: %lu", v34, 0xCu);
      v35 = v34;
      v31 = v21;
      swift_slowDealloc(v35, -1, -1);
    }
    v36 = objc_msgSend(v22, "sharedApplication", v60);
    v37 = objc_msgSend(v36, "delegate");

    if (v37)
    {
      swift_dynamicCastClassUnconditional(v37, v25, 0, 0, 0);
      v38 = sub_10006B490();
      swift_unknownObjectRelease(v37);
      v39 = v38[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      if ((v39 & 1) != 0)
      {
        v40 = v62;
        sub_100008C1C(v65, v62);
        v41 = objc_allocWithZone((Class)type metadata accessor for ClimateVerticalQuickActionPopover(0));
      }
      else
      {
        objc_msgSend(v60, "bounds");
        v47 = CGRectGetWidth(v69) + -12.0;
        v40 = v62;
        sub_100008C1C(v65, v62);
        v48 = (char *)objc_allocWithZone((Class)type metadata accessor for ClimateHorizontalQuickActionPopover(0));
        *(_QWORD *)&v48[OBJC_IVAR____TtC7Climate35ClimateHorizontalQuickActionPopover_quickActionContainers] = _swiftEmptyArrayStorage;
        *(_QWORD *)&v48[OBJC_IVAR____TtC7Climate35ClimateHorizontalQuickActionPopover_popoverWidth] = 0;
        *(CGFloat *)&v48[OBJC_IVAR____TtC7Climate35ClimateHorizontalQuickActionPopover_maxWidth] = v47;
      }
      v49 = v61;
      sub_100008C1C(v40, v61);
      swift_retain(v30);
      sub_10001ACB4(v49, v30, (uint64_t)&off_10009F618);
      v51 = v50;
      swift_release(v30);
      sub_10003C604(v40);
      v52 = 40;
      if (v31 == (void **)2)
        v52 = 24;
      v53 = *(void **)(v30 + v52);
      *(_QWORD *)(v30 + v52) = v51;
      v54 = v51;

      v55 = swift_unknownObjectWeakLoadStrong(v30 + 56);
      if (v55)
      {
        v56 = v55;
        v57 = v54;
        sub_10001750C(v57, (uint64_t)v31);
        swift_unknownObjectRelease(v56);

      }
      goto LABEL_25;
    }
LABEL_29:
    __break(1u);
    return;
  }
  sub_10005C840(v65, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100008B88((uint64_t)v12, &qword_1000B8A30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v13);
    v42 = swift_unknownObjectWeakLoadStrong(v66 + 16);
    if (v42)
    {
      v44 = (void *)v42;
      URL._bridgeToObjectiveC()(v43);
      v46 = v45;
      objc_msgSend(v44, "openURL:options:completionHandler:", v45, 0, 0);

    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  sub_100046544();
}

uint64_t sub_1000464D8()
{
  id *v0;

  swift_unknownObjectWeakDestroy(v0 + 2);

  sub_10001BF8C((uint64_t)(v0 + 7));
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for ClimatePopoverManager()
{
  return objc_opt_self(_TtC7Climate21ClimatePopoverManager);
}

void sub_100046544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  v1 = v0;
  v2 = v0 + 56;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 56);
  if (Strong)
  {
    v4 = Strong;
    sub_100016904(1, (void **)2, 1);
    swift_unknownObjectRelease(v4);
  }
  v5 = swift_unknownObjectWeakLoadStrong(v2);
  if (v5)
  {
    v6 = v5;
    sub_100016904(1, (void **)8, 1);
    swift_unknownObjectRelease(v6);
  }
  v7 = *(void **)(v1 + 32);
  if (v7)
  {
    objc_msgSend(v7, "invalidate");
    v8 = *(void **)(v1 + 32);
  }
  else
  {
    v8 = 0;
  }
  *(_QWORD *)(v1 + 32) = 0;

  v9 = *(void **)(v1 + 48);
  if (v9)
  {
    objc_msgSend(v9, "invalidate");
    v9 = *(void **)(v1 + 48);
  }
  *(_QWORD *)(v1 + 48) = 0;

}

void sub_1000465FC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  void **v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  _QWORD v19[5];
  uint64_t v20;

  v3 = (void *)objc_opt_self(NSTimer);
  v4 = sub_100046C34();
  v5 = swift_allocObject(&unk_10009F640, 24, 7);
  swift_weakInit(v5 + 16, v1);
  v6 = swift_allocObject(&unk_10009F668, 32, 7);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = a1;
  v19[4] = sub_100046E04;
  v20 = v6;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_10003AEB8;
  v19[3] = &unk_10009F680;
  v7 = _Block_copy(v19);
  swift_release(v20);
  v8 = objc_msgSend(v3, "scheduledTimerWithTimeInterval:repeats:block:", 0, v7, v4);
  _Block_release(v7);
  if (qword_1000B6FE8 != -1)
    v9 = swift_once(&qword_1000B6FE8, sub_10005CB60);
  v10 = qword_1000BC938;
  v11 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "ClimatePopoverManager timer created.", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }
  if (a1 != 2)
  {
    v17 = *(void **)(v1 + 48);
    v14 = (void **)(v1 + 48);
    v13 = v17;
    if (v17)
      goto LABEL_7;
LABEL_9:
    v18 = v8;
    goto LABEL_10;
  }
  v15 = *(void **)(v1 + 32);
  v14 = (void **)(v1 + 32);
  v13 = v15;
  if (!v15)
    goto LABEL_9;
LABEL_7:
  v16 = v8;
  objc_msgSend(v13, "invalidate");
  v13 = *v14;
LABEL_10:
  *v14 = v8;

}

void sub_1000467DC(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;
  id v8;
  int v9;
  uint64_t v10;
  os_log_type_t v11;
  unint64_t v12;
  NSObject *v13;
  uint8_t *v14;
  void *v15;
  void **v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v5 = *(void **)(v2 + 24);
  if (v5
    && (v6 = a1,
        type metadata accessor for ClimateQuickActionPopover(0),
        v7 = v6,
        v8 = v5,
        LOBYTE(v6) = static NSObject.== infix(_:_:)(v7),
        v7,
        v8,
        (v6 & 1) != 0))
  {
    v9 = 1;
    v10 = 2;
  }
  else
  {
    v9 = 0;
    v10 = 8;
  }
  v11 = static os_log_type_t.default.getter(a1);
  v12 = sub_100046BF8();
  v13 = static OS_os_log.default.getter(v12);
  if (os_log_type_enabled(v13, v11))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v14 = 134217984;
    v23 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v14 + 4, v14 + 12);
    _os_log_impl((void *)&_mh_execute_header, v13, v11, "ClimatePopoverManager invalidate timer for side: %lu", v14, 0xCu);
    swift_slowDealloc(v14, -1, -1);
  }

  if (v9)
  {
    v16 = (void **)(v3 + 32);
    v15 = *(void **)(v3 + 32);
    if (v15)
    {
LABEL_9:
      objc_msgSend(v15, "invalidate");
      v17 = *v16;
      goto LABEL_12;
    }
  }
  else
  {
    v16 = (void **)(v3 + 48);
    v15 = *(void **)(v3 + 48);
    if (v15)
      goto LABEL_9;
  }
  v17 = 0;
LABEL_12:
  *v16 = 0;

  v19 = static os_log_type_t.default.getter(v18);
  v20 = v19;
  v21 = static OS_os_log.default.getter(v19);
  if (os_log_type_enabled(v21, v20))
  {
    v22 = swift_slowAlloc(18, -1);
    *(_DWORD *)v22 = 67109376;
    LODWORD(v23) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, (char *)&v23 + 4, v22 + 4, v22 + 8);
    *(_WORD *)(v22 + 8) = 2048;
    v23 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v22 + 10, v22 + 18);
    _os_log_impl((void *)&_mh_execute_header, v21, v20, "ClimatePopoverManager should stop timer: %{BOOL}d for side: %lu ", (uint8_t *)v22, 0x12u);
    swift_slowDealloc(v22, -1, -1);
  }

  if ((a2 & 1) == 0)
    sub_1000465FC(v10);
}

double sub_100046A1C(void *a1, uint64_t a2, void **a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE v18[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(a1, "isValid");
    if ((_DWORD)v8)
    {
      if (qword_1000B6FE8 != -1)
        v8 = (id)swift_once(&qword_1000B6FE8, sub_10005CB60);
      v9 = qword_1000BC938;
      v10 = static os_log_type_t.default.getter(v8);
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "ClimatePopoverManager timer did fired.", v11, 2u);
        swift_slowDealloc(v11, -1, -1);
      }
      v12 = swift_unknownObjectWeakLoadStrong(v7 + 56);
      if (v12)
      {
        v13 = v12;
        sub_100016904(1, a3, 0);
        swift_release(v7);
        swift_unknownObjectRelease(v13);
      }
      else
      {
        *(_QWORD *)&result = swift_release(v7).n128_u64[0];
      }
      return result;
    }
    swift_release(v7);
  }
  if (qword_1000B6FE8 != -1)
    Strong = swift_once(&qword_1000B6FE8, sub_10005CB60);
  v15 = qword_1000BC938;
  v16 = static os_log_type_t.default.getter(Strong);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "ClimatePopoverManager timer invalidated.", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }
  return result;
}

unint64_t sub_100046BF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7B20;
  if (!qword_1000B7B20)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B7B20);
  }
  return result;
}

double sub_100046C34()
{
  void *v0;
  id v1;
  NSString v2;
  unsigned int v3;
  double v4;
  id v5;
  NSString v6;
  id v7;
  double v9;
  _OWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;

  v0 = (void *)objc_opt_self(NSUserDefaults);
  v1 = objc_msgSend(v0, "standardUserDefaults");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "BOOLForKey:", v2);

  v4 = 7.0;
  if (v3)
  {
    v5 = objc_msgSend(v0, "standardUserDefaults");
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "valueForKey:", v6);

    if (v7)
    {
      _bridgeAnyObjectToAny(_:)(v10);
      swift_unknownObjectRelease(v7);
    }
    else
    {
      memset(v10, 0, sizeof(v10));
    }
    sub_100046E24((uint64_t)v10, (uint64_t)v11);
    if (v12)
    {
      if (swift_dynamicCast(&v9, v11, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
        return v9;
    }
    else
    {
      sub_100008B88((uint64_t)v11, (uint64_t *)&unk_1000B7B30);
    }
  }
  return v4;
}

uint64_t sub_100046DBC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100046DE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100046E04(void *a1)
{
  uint64_t v1;

  return sub_100046A1C(a1, *(_QWORD *)(v1 + 16), *(void ***)(v1 + 24));
}

uint64_t sub_100046E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100046E1C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100046E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058((uint64_t *)&unk_1000B7B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for ClimateColorConfig(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s7Climate18ClimateColorConfigVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for ClimateColorConfig(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t assignWithTake for ClimateColorConfig(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClimateColorConfig(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClimateColorConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClimateColorConfig()
{
  return &type metadata for ClimateColorConfig;
}

id sub_100047040(Swift::UInt a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = sub_10005B740(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(a2 + 56) + 24 * v3;
  v6 = *(id *)v5;
  v7 = *(void **)(v5 + 8);
  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(id *)v5;
  v10 = v7;
  swift_bridgeObjectRetain(v8);
  return v6;
}

id sub_1000470B4()
{
  return sub_1000470C4(0.6);
}

id sub_1000470C4(double a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  id v9;
  char v10;
  id v12;
  char v13;
  id v14;
  id v15;

  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "labelColor");
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", a1);

  sub_100006B04(0, (unint64_t *)&qword_1000B91A0, UIColor_ptr);
  LOBYTE(v3) = static NSObject.== infix(_:_:)(v4);

  if ((v3 & 1) != 0)
    return v15;
  v5 = objc_msgSend(v2, "cl_carSystemTertiaryColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.1);

  LOBYTE(v5) = static NSObject.== infix(_:_:)(v6);
  if ((v5 & 1) != 0)
    return v15;
  v7 = objc_msgSend(v2, "clearColor");
  v8 = static NSObject.== infix(_:_:)(v7);

  if ((v8 & 1) != 0)
    return v15;
  if (qword_1000B6F88 != -1)
    swift_once(&qword_1000B6F88, sub_100041EEC);
  v9 = (id)qword_1000BC890;
  v10 = static NSObject.== infix(_:_:)(v9);

  if ((v10 & 1) != 0)
    return v15;
  v12 = objc_msgSend(v2, "cl_carSystemTertiaryColor");
  v13 = static NSObject.== infix(_:_:)(v12);

  if ((v13 & 1) != 0)
    v14 = objc_msgSend(v15, "colorWithAlphaComponent:", 0.1);
  else
    v14 = objc_msgSend(v15, "colorWithAlphaComponent:", a1);
  return v14;
}

void sub_1000472C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *(_QWORD *)(a2 + 16);
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v3) & 1) != 0 && (static NSObject.== infix(_:_:)(v2) & 1) != 0)
    sub_10005B490(v4, v5);
}

unint64_t sub_10004736C()
{
  unint64_t result;

  result = qword_1000B9030;
  if (!qword_1000B9030)
  {
    result = swift_getWitnessTable(&unk_10008A6A4, &type metadata for ClimateColorConfig);
    atomic_store(result, (unint64_t *)&qword_1000B9030);
  }
  return result;
}

unint64_t sub_1000473B0(uint64_t a1)
{
  unint64_t result;

  result = sub_10004736C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000473D4(void *a1, void *a2, uint64_t a3)
{
  Swift::String v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  Swift::String v20;
  unint64_t v21;
  uint64_t v22;
  Swift::String v23;
  void *object;
  Swift::String v25;

  _StringGuts.grow(_:)(59);
  v6._object = (void *)0x800000010008DCC0;
  v6._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v6);
  v7 = a1;
  v8 = objc_msgSend(v7, "description");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);

  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 0x6F726765726F6620;
  v13._object = (void *)0xEC0000003D646E75;
  String.append(_:)(v13);
  v14 = a2;
  v15 = objc_msgSend(v14, "description");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);

  swift_bridgeObjectRelease(v18);
  v20._countAndFlagsBits = 0x3D73657461747320;
  v20._object = (void *)0xE800000000000000;
  String.append(_:)(v20);
  v21 = sub_10004758C();
  swift_bridgeObjectRetain(a3);
  v23._countAndFlagsBits = Dictionary.description.getter(v22, &type metadata for ClimatePresentation, &type metadata for ClimateColorConfig, v21);
  object = v23._object;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(object);
  v25._countAndFlagsBits = 62;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  return 0;
}

uint64_t sub_100047580()
{
  uint64_t v0;

  return sub_1000473D4(*(void **)v0, *(void **)(v0 + 8), *(_QWORD *)(v0 + 16));
}

unint64_t sub_10004758C()
{
  unint64_t result;

  result = qword_1000B9060;
  if (!qword_1000B9060)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ClimatePresentation, &type metadata for ClimatePresentation);
    atomic_store(result, (unint64_t *)&qword_1000B9060);
  }
  return result;
}

id sub_1000475D0(uint64_t a1)
{
  return sub_100047694(a1, (SEL *)&selRef_systemWhiteColor, &qword_1000BC8C8, &qword_1000BC8D0, &qword_1000BC8D8);
}

id sub_1000475EC()
{
  void *v0;
  id v1;
  id result;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "labelColor");
  result = objc_msgSend(v0, "systemBlackColor");
  qword_1000BC8E0 = (uint64_t)v1;
  *(_QWORD *)algn_1000BC8E8 = result;
  qword_1000BC8F0 = (uint64_t)&_swiftEmptyDictionarySingleton;
  return result;
}

id sub_10004765C(uint64_t a1)
{
  return sub_100047694(a1, (SEL *)&selRef_cl_carSystemTertiaryColor, &qword_1000BC8F8, &qword_1000BC900, &qword_1000BC908);
}

id sub_100047678(uint64_t a1)
{
  return sub_100047694(a1, (SEL *)&selRef_labelColor, &qword_1000BC910, algn_1000BC918, &qword_1000BC920);
}

id sub_100047694(uint64_t a1, SEL *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  void *v9;
  id v10;
  id result;

  v9 = (void *)objc_opt_self(UIColor);
  v10 = objc_msgSend(v9, "clearColor");
  result = objc_msgSend(v9, *a2);
  *a3 = v10;
  *a4 = result;
  *a5 = &_swiftEmptyDictionarySingleton;
  return result;
}

id sub_10004771C(char a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  if ((a1 & 0x10) != 0 && (v4 = sub_10005B740(0x10uLL), (v5 & 1) != 0)
    || (a1 & 8) != 0 && *(_QWORD *)(a2 + 16) && (v4 = sub_10005B740(8uLL), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(a2 + 56) + 24 * v4;
    v8 = *(id *)v7;
    v9 = *(void **)(v7 + 8);
    v10 = *(_QWORD *)(v7 + 16);
    v11 = *(id *)v7;
    v12 = v9;
    swift_bridgeObjectRetain(v10);
    return v8;
  }
  if ((a1 & 4) == 0)
    return 0;
  v13 = sub_100047040(4uLL, a2);
  if (v13)
    return v13;
  else
    return 0;
}

id sub_1000477D8(char a1, void *a2, uint64_t a3)
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v4 = sub_10004771C(a1, a3);
  if (v4)
  {
    v7 = v4;
    v8 = v6;

    swift_bridgeObjectRelease(v8);
  }
  else
  {
    if ((a1 & 0x10) == 0)
      return a2;
    return sub_1000470C4(0.3);
  }
  return v7;
}

id sub_100047864(char a1, void *a2, uint64_t a3)
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v10;
  NSString v11;
  unsigned int v12;
  id v13;
  id v14;
  NSString v15;
  unsigned int v16;
  double v17;
  void *v18;

  v4 = sub_10004771C(a1, a3);
  if (!v4)
  {
    if ((a1 & 0x10) != 0)
    {
      if ((a1 & 8) != 0)
      {
        v10 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v11 = String._bridgeToObjectiveC()();
        v12 = objc_msgSend(v10, "BOOLForKey:", v11);

        if (v12)
          v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemYellowColor");
        else
          v13 = sub_1000470C4(0.3);
        v18 = v13;
        v7 = sub_1000470C4(0.3);

        return v7;
      }
    }
    else
    {
      if ((a1 & 8) == 0)
      {
        if ((a1 & 4) == 0)
          return a2;
        v17 = 0.6;
        return sub_1000470C4(v17);
      }
      v14 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v15 = String._bridgeToObjectiveC()();
      v16 = objc_msgSend(v14, "BOOLForKey:", v15);

      if (v16)
        return objc_msgSend((id)objc_opt_self(UIColor), "systemYellowColor");
    }
    v17 = 0.3;
    return sub_1000470C4(v17);
  }
  v7 = v5;
  v8 = v6;

  swift_bridgeObjectRelease(v8);
  return v7;
}

id sub_100047AC4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimatePassthroughButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimatePassthroughButton()
{
  return objc_opt_self(_TtC7Climate24ClimatePassthroughButton);
}

void sub_100047B14(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100047B78(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100047C04 + 4 * byte_10008A736[a2]))(7233894);
}

uint64_t sub_100047C04(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7233894 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 7233894, 0xE300000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE300000000000000);
  return v2 & 1;
}

uint64_t sub_100047CE4(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x796E614D6E6FLL;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x656C676E69536E6FLL;
    else
      v4 = 2037277037;
    if (v3 == 1)
      v5 = 0xE800000000000000;
    else
      v5 = 0xE400000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x656C676E69536E6FLL;
      else
        v2 = 2037277037;
      if (v6 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xE400000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x796E614D6E6FLL;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v4 != 0x796E614D6E6FLL)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_100047DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  void *v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;
  uint64_t v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_currentValue;
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_currentValue);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_seatFan);
  v5 = objc_msgSend(v4, "fanLevelRange");
  CAFRange.maximumValue<A>()((uint64_t *)((char *)&v10 + 2), &type metadata for UInt8, &protocol witness table for UInt8);

  if (v3 >= BYTE2(v10))
    goto LABEL_4;
  v6 = objc_msgSend(v4, "fanLevelRange");
  CAFRange.stepValue<A>()(&v10, &type metadata for UInt8, &protocol witness table for UInt8);

  v7 = *(unsigned __int8 *)(v1 + v2) + v10;
  if (((v7 >> 8) & 1) != 0)
  {
    __break(1u);
LABEL_4:
    v8 = objc_msgSend(v4, "fanLevelRange");
    CAFRange.minimumValue<A>()((uint64_t *)((char *)&v10 + 1), &type metadata for UInt8, &protocol witness table for UInt8);

    LOBYTE(v7) = BYTE1(v10);
  }
  *(_BYTE *)(v1 + v2) = v7;
  return (*(uint64_t (**)(_QWORD))((swift_isaMask & **(_QWORD **)(v1
                                                                          + OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_progressView))
                                           + 0x88))(v7);
}

id sub_100047F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  void *v4;
  id v5;
  id v6;
  int v7;
  int v8;
  id v9;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_currentValue;
  v3 = *(_DWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_currentValue);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_vent);
  v5 = objc_msgSend(v4, "currentIndexRange");
  CAFRange.maximumValue<A>()(&v12, &type metadata for UInt32, &protocol witness table for UInt32);

  if (v3 < v12)
  {
    v6 = objc_msgSend(v4, "currentIndexRange");
    CAFRange.stepValue<A>()(&v11, &type metadata for UInt32, &protocol witness table for UInt32);

    v7 = *(_DWORD *)(v1 + v2);
    v8 = v7 + v11;
    if (!__CFADD__(v7, (_DWORD)v11))
      goto LABEL_6;
    __break(1u);
  }
  v9 = objc_msgSend(v4, "currentIndexRange");
  CAFRange.minimumValue<A>()((uint64_t *)((char *)&v11 + 4), &type metadata for UInt32, &protocol witness table for UInt32);

  v8 = HIDWORD(v11);
LABEL_6:
  *(_DWORD *)(v1 + v2) = v8;
  return sub_100048C9C();
}

uint64_t sub_100048050()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unsigned __int8 v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_vent);
  if (!objc_msgSend(v1, "hasOn") || (objc_msgSend(v1, "on") & 1) != 0)
  {
    v2 = objc_msgSend(v1, "autoMode");
    v3 = objc_msgSend(v1, "currentIndexRestricted");
    v4 = objc_msgSend(v1, "currentIndexInvalid");
    v5 = objc_msgSend(v1, "currentIndexDisabled");
    if (v2)
    {
      if ((v3 & 1) != 0)
      {
        v6 = 7;
        v7 = 15;
        goto LABEL_8;
      }
      v6 = 3;
      if (v4)
        v6 = 11;
      if (!v5)
        return v6;
    }
    else
    {
      if ((v3 & 1) != 0)
      {
        v6 = 5;
        v7 = 13;
LABEL_8:
        if (v4)
          v6 = v7;
        if ((v5 & 1) == 0)
          return v6;
        return v6 | 0x10;
      }
      v6 = 9;
      if (!v4)
        v6 = 1;
      if ((v5 & 1) == 0)
        return v6;
    }
    return v6 | 0x10;
  }
  return _s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0((char)objc_msgSend(v1, "on"), (char)objc_msgSend(v1, "autoMode"), (char)objc_msgSend(v1, "onRestricted"), (char)objc_msgSend(v1, "onInvalid"), (char)objc_msgSend(v1, "onDisabled"));
}

uint64_t sub_1000481D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100047CE4(*a1, *a2);
}

Swift::Int sub_1000481E0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE800000000000000;
  v3 = 0x656C676E69536E6FLL;
  if (v1 != 1)
  {
    v3 = 2037277037;
    v2 = 0xE400000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x796E614D6E6FLL;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100048274(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE800000000000000;
  v3 = 0x656C676E69536E6FLL;
  if (*v1 != 1)
  {
    v3 = 2037277037;
    v2 = 0xE400000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x796E614D6E6FLL;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000482E4()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE800000000000000;
  v3 = 0x656C676E69536E6FLL;
  if (v1 != 1)
  {
    v3 = 2037277037;
    v2 = 0xE400000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x796E614D6E6FLL;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE600000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_100048374@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100049D88(*a1);
  *a2 = result;
  return result;
}

void sub_1000483A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x656C676E69536E6FLL;
  if (v2 != 1)
  {
    v5 = 2037277037;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x796E614D6E6FLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1000483F4()
{
  uint64_t v0;

  v0 = sub_100006B04(0, (unint64_t *)&unk_1000B91B0, CAFVent_ptr);
  return CAFPositioned.layoutKey.getter(v0);
}

char *sub_10004843C(void *a1, char a2)
{
  char *v2;
  char *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  unsigned int v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  Swift::String v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  void *object;
  Swift::String v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  CGFloat a;
  CGFloat b;
  char *v40;
  char v41;
  char v42;
  char *v43;
  int v44;
  char *v45;
  id v46;
  void *v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  Class isa;
  unsigned int v66;
  uint64_t v68;
  uint64_t v69;
  CGAffineTransform v70;
  uint64_t v71;
  uint64_t v72[3];
  objc_super v73;

  *(_DWORD *)&v2[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_currentValue] = 0;
  v5 = &v2[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_defaultSymbolName];
  *(_QWORD *)v5 = 0xD000000000000012;
  *((_QWORD *)v5 + 1) = 0x800000010008DDC0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_vent] = a1;
  v6 = v2;
  v7 = a1;
  if (objc_msgSend(v7, "hasOn"))
  {
    v8 = objc_msgSend(v7, "combinations");
    v9 = sub_100006B04(0, &qword_1000B91A8, NSNumber_ptr);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v69 = v10;
      else
        v69 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v11 = _CocoaArrayWrapper.endIndex.getter(v69);
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v10);
    v12 = v11 < 2;
  }
  else
  {
    v12 = 2;
  }
  v6[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_ventConfiguration] = v12;
  v6[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_style] = a2;
  v13 = sub_100006058(&qword_1000B91C0);
  v14 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100088D00;
  v70.a = 0.0;
  v70.b = -2.68156159e154;
  _StringGuts.grow(_:)(81);
  v15._countAndFlagsBits = 0x207075746553;
  v15._object = (void *)0xE600000000000000;
  String.append(_:)(v15);
  v16 = objc_msgSend(v7, "name");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  v21._countAndFlagsBits = 0xD000000000000019;
  v21._object = (void *)0x800000010008DE10;
  String.append(_:)(v21);
  v22 = objc_msgSend(v7, "hasOn");
  v23 = v22 == 0;
  if (v22)
    v24 = 1702195828;
  else
    v24 = 0x65736C6166;
  if (v23)
    v25 = 0xE500000000000000;
  else
    v25 = 0xE400000000000000;
  v26 = v25;
  String.append(_:)(*(Swift::String *)&v24);
  swift_bridgeObjectRelease(v25);
  v27._countAndFlagsBits = 0xD000000000000016;
  v27._object = (void *)0x800000010008DE30;
  String.append(_:)(v27);
  v28 = objc_msgSend(v7, "combinations");
  v29 = sub_100006B04(0, &qword_1000B91A8, NSNumber_ptr);
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

  if ((unint64_t)v30 >> 62)
  {
    if (v30 < 0)
      v68 = v30;
    else
      v68 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v30);
    v31 = _CocoaArrayWrapper.endIndex.getter(v68);
    swift_bridgeObjectRelease(v30);
  }
  else
  {
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v30);
  v72[0] = v31;
  v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v32._object;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(object);
  v34._countAndFlagsBits = 0xD000000000000014;
  v34._object = (void *)0x800000010008DE50;
  String.append(_:)(v34);
  if (v6[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_ventConfiguration])
  {
    if (v6[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_ventConfiguration] == 1)
    {
      v35 = 0xE800000000000000;
      v36 = 0x656C676E69536E6FLL;
    }
    else
    {
      v35 = 0xE400000000000000;
      v36 = 2037277037;
    }
  }
  else
  {
    v35 = 0xE600000000000000;
    v36 = 0x796E614D6E6FLL;
  }
  v37 = v35;
  String.append(_:)(*(Swift::String *)&v36);
  swift_bridgeObjectRelease(v35);

  b = v70.b;
  a = v70.a;
  *(_QWORD *)(v14 + 56) = &type metadata for String;
  *(_OWORD *)(v14 + 32) = __PAIR128__(*(unint64_t *)&b, *(unint64_t *)&a);
  print(_:separator:terminator:)(v14, 32, 0xE100000000000000, 10, 0xE100000000000000);
  swift_bridgeObjectRelease(v14);
  v73.receiver = v6;
  v73.super_class = (Class)type metadata accessor for ClimateVentServiceButton();
  v40 = (char *)objc_msgSendSuper2(&v73, "init");
  sub_100049214();
  v42 = v41;
  v43 = &v40[OBJC_IVAR____TtC7Climate13ClimateButton_shouldHorizontallyFlipImage];
  swift_beginAccess(&v40[OBJC_IVAR____TtC7Climate13ClimateButton_shouldHorizontallyFlipImage], v72, 1, 0);
  v44 = *v43;
  *v43 = v42 & 1;
  v45 = v40;
  if ((v42 & 1) != v44)
  {
    v46 = objc_msgSend(v40, "imageView");
    v45 = v40;
    if (v46)
    {
      v47 = v46;
      v48 = 1.0;
      if ((v42 & 1) != 0)
        v48 = -1.0;
      CGAffineTransformMakeScale(&v70, v48, 1.0);
      objc_msgSend(v47, "setTransform:", &v70);

      v45 = (char *)v47;
    }
  }

  objc_msgSend(v7, "registerObserver:", v40);
  sub_100048C9C();
  v49 = swift_allocObject(&unk_10009F828, 24, 7);
  swift_unknownObjectWeakInit(v49 + 16, v40);
  v50 = swift_allocObject(&unk_10009F850, 32, 7);
  *(_QWORD *)(v50 + 16) = v49;
  *(_QWORD *)(v50 + 24) = v7;
  v51 = (uint64_t *)&v40[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v40[OBJC_IVAR____TtC7Climate13ClimateButton_action], &v70, 1, 0);
  v52 = *v51;
  v53 = v51[1];
  *v51 = (uint64_t)sub_100049E28;
  v51[1] = v50;
  v54 = v7;
  sub_100005118(v52, v53);
  sub_100048C9C();
  v55 = objc_msgSend(v40, "imageView");
  if (v55)
  {
    v56 = v55;
    v57 = (void *)objc_opt_self(NSLayoutConstraint);
    v58 = sub_100006058((uint64_t *)&unk_1000B7590);
    v59 = swift_allocObject(v58, 40, 7);
    *(_OWORD *)(v59 + 16) = xmmword_1000891F0;
    v60 = objc_msgSend(v56, "firstBaselineAnchor");
    v61 = objc_msgSend(v40, "firstBaselineAnchor");
    v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

    *(_QWORD *)(v59 + 32) = v62;
    v71 = v59;
    specialized Array._endMutation()(v63);
    v64 = v71;
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v64);
    objc_msgSend(v57, "activateConstraints:", isa);

  }
  v66 = objc_msgSend(v54, "currentIndex", *(_OWORD *)&v70.a);
  *(_DWORD *)&v40[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_currentValue] = v66;
  sub_100048C9C();

  return v40;
}

void sub_100048AEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  void *v7;
  unsigned int v8;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return;
  v6 = (char *)Strong;
  if (*(_BYTE *)(Strong + OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_ventConfiguration))
  {
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_ventConfiguration) == 1)
      objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_vent), "setOn:", objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_vent), "on") ^ 1);
    else
      sub_100047F34();
    goto LABEL_9;
  }
  v7 = *(void **)(Strong + OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_vent);
  if (!objc_msgSend(v7, "on"))
  {
    objc_msgSend(v7, "setOn:", 1);
LABEL_9:
    sub_100048C9C();
    goto LABEL_10;
  }
  sub_100047F34();
LABEL_10:
  v8 = objc_msgSend(a3, "currentIndex");
  if (v8 != *(_DWORD *)&v6[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_currentValue])
    objc_msgSend(a3, "setCurrentIndex:");

}

id sub_100048C9C()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v21;
  _BYTE v22[24];

  v1 = v0;
  if ((sub_100048050() & 0x18) == 0)
    goto LABEL_12;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_vent], "combinations");
  v3 = sub_100006B04(0, &qword_1000B91A8, NSNumber_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    v21 = v4 < 0 ? v4 : v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v4);
  if (v5 >= 2)
  {
    v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_defaultSymbolName];
    v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_defaultSymbolName + 8];
    v8 = &v1[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
    swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v22, 1, 0);
    v10 = *(_QWORD *)v8;
    v9 = *((_QWORD *)v8 + 1);
    *(_QWORD *)v8 = v7;
    *((_QWORD *)v8 + 1) = v6;
    swift_bridgeObjectRetain(v6);
    if (v6)
    {
      if (v9)
      {
        if (v7 == v10 && v9 == v6)
          goto LABEL_23;
        v12 = v7;
        v13 = v6;
        v14 = v10;
LABEL_19:
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v14, v9, 0) & 1) != 0)
          goto LABEL_23;
        goto LABEL_22;
      }
      goto LABEL_22;
    }
  }
  else
  {
LABEL_12:
    v15 = CAFVent.symbolName.getter();
    v17 = v16;
    v18 = (uint64_t *)&v1[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
    swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v22, 1, 0);
    v14 = *v18;
    v9 = v18[1];
    *v18 = v15;
    v18[1] = v17;
    if (v17)
    {
      if (v9)
      {
        if (v15 == v14 && v9 == v17)
          goto LABEL_23;
        v12 = v15;
        v13 = v17;
        goto LABEL_19;
      }
LABEL_22:
      ClimateButton.updateClimateConfiguration()();
LABEL_23:
      swift_bridgeObjectRelease(v9);
      goto LABEL_24;
    }
  }
  if (v9)
    goto LABEL_22;
LABEL_24:
  sub_10007813C();
  objc_msgSend(v1, "setEnabled:", (sub_100048050() & 0x18) == 0);
  sub_100048E90();
  return sub_100066C24();
}

void sub_100048E90()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;

  v1 = v0;
  sub_100066A90();
  v2 = sub_100048050();
  if ((v2 & 0x1A) == 2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemGreenColor");
    if ((v3 & 4) != 0)
    {
      v12 = sub_1000470B4();

      v13 = *(id *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
      v5 = sub_1000470B4();

      v4 = v12;
    }
    else
    {
      v5 = *(id *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
    }
    v14 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleBody, UIFontWeightSemibold);
    if (v14)
    {
      v15 = v14;
      v16 = (void *)objc_opt_self(UIImageSymbolConfiguration);
      v17 = objc_msgSend(v16, "configurationWithFont:scale:", v15, 3);

      v18 = sub_100006058((uint64_t *)&unk_1000B7590);
      v19 = swift_allocObject(v18, 48, 7);
      *(_OWORD *)(v19 + 16) = xmmword_100088C40;
      *(_QWORD *)(v19 + 32) = v4;
      *(_QWORD *)(v19 + 40) = v5;
      v28 = v19;
      specialized Array._endMutation()(v19);
      sub_100006B04(0, (unint64_t *)&qword_1000B91A0, UIColor_ptr);
      v9 = v4;
      v27 = v5;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v28);
      v21 = objc_msgSend(v16, "configurationWithPaletteColors:", isa);

      v22 = objc_msgSend(v17, "configurationByApplyingConfiguration:", v21);
      v23 = ClimateButton.imageSymbolConfiguration.getter();
      v24 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration) = v22;
      v25 = v22;

      v26 = ClimateButton.imageSymbolConfiguration.getter();
      sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
      LOBYTE(v24) = static NSObject.== infix(_:_:)(v26);

      if ((v24 & 1) == 0)
        ClimateButton.updateClimateConfiguration()();

LABEL_12:
      return;
    }
  }
  else
  {
    v6 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleBody, UIFontWeightSemibold);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v6, 3);

      v9 = ClimateButton.imageSymbolConfiguration.getter();
      v10 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration) = v8;
      v27 = v8;

      v11 = ClimateButton.imageSymbolConfiguration.getter();
      sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
      LOBYTE(v10) = static NSObject.== infix(_:_:)(v11);

      if ((v10 & 1) == 0)
        ClimateButton.updateClimateConfiguration()();
      goto LABEL_12;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100049214()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  char *v41;
  id v42;
  char *v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t);
  uint64_t v53;
  int v54;
  int v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  char *v66;

  v0 = type metadata accessor for CAUVehicleLayoutKey.Side(0);
  v65 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v59 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v59 - v4;
  v6 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006058(&qword_1000B8D00);
  __chkstk_darwin(v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CAUVehicleLayoutKey(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v66 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v64 = (char *)&v59 - v19;
  __chkstk_darwin(v20);
  v22 = (char *)&v59 - v21;
  v23 = sub_100006B04(0, (unint64_t *)&unk_1000B91B0, CAFVent_ptr);
  CAFPositioned.layoutKey.getter(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v24 = &qword_1000B8D00;
    v25 = (uint64_t)v14;
LABEL_12:
    sub_100008B88(v25, v24);
    return;
  }
  v62 = v0;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v22, v14, v15);
  v63 = (id)objc_opt_self(UIApplication);
  v26 = objc_msgSend(v63, "sharedApplication");
  v27 = objc_msgSend(v26, "delegate");

  if (!v27)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  v61 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v27, v61, 0, 0, 0);
  v28 = sub_10006B490();
  swift_unknownObjectRelease(v27);
  KeyPath = swift_getKeyPath(&unk_10008A850);
  v30 = swift_getKeyPath(&unk_10008A878);
  static Published.subscript.getter(v28, KeyPath, v30);

  swift_release(KeyPath);
  swift_release(v30);
  v31 = type metadata accessor for ClimateSystemManager(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v8, 1, v31) == 1)
  {
    sub_100008B88((uint64_t)v8, (uint64_t *)&unk_1000BA180);
    v32 = type metadata accessor for ClimateZone(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v11, 1, 1, v32);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
    v24 = (uint64_t *)&unk_1000B7C40;
    v25 = (uint64_t)v11;
    goto LABEL_12;
  }
  v33 = *(_QWORD *)&v8[*(int *)(v31 + 36)];
  if (*(_QWORD *)(v33 + 16) && (v34 = sub_10005B798((uint64_t)v22), (v35 & 1) != 0))
  {
    v36 = v34;
    v60 = *(_QWORD *)(v33 + 56);
    v37 = type metadata accessor for ClimateZone(0);
    v38 = *(_QWORD *)(v37 - 8);
    sub_100008C1C(v60 + *(_QWORD *)(v38 + 72) * v36, (uint64_t)v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v11, 0, 1, v37);
  }
  else
  {
    v37 = type metadata accessor for ClimateZone(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v11, 1, 1, v37);
  }
  sub_100008BC4((uint64_t)v8);
  type metadata accessor for ClimateZone(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v11, 1, v37) == 1)
    goto LABEL_11;
  sub_100008B88((uint64_t)v11, (uint64_t *)&unk_1000B7C40);
  v39 = objc_msgSend(v63, "sharedApplication");
  v40 = objc_msgSend(v39, "delegate");

  if (!v40)
    goto LABEL_24;
  swift_dynamicCastClassUnconditional(v40, v61, 0, 0, 0);
  v41 = (char *)sub_10006B490();
  swift_unknownObjectRelease(v40);
  v42 = objc_msgSend(*(id *)&v41[OBJC_IVAR____TtC7Climate18ClimateCoordinator_sessionStatus], "currentSession");
  v43 = v64;
  if (v42)
  {
    v44 = v42;
    v45 = (char *)objc_msgSend(v42, "configuration");

    LODWORD(v61) = objc_msgSend(v45, "rightHandDrive");
    v41 = v45;
  }
  else
  {
    LODWORD(v61) = 0;
  }

  ((void (*)(void))CAUVehicleLayoutKey.side.getter)();
  v46 = v65;
  v47 = v62;
  v63 = *(id *)(v65 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v63)(v2, enum case for CAUVehicleLayoutKey.Side.right(_:), v62);
  v48 = static CAUVehicleLayoutKey.Side.== infix(_:_:)(v5, v2);
  v49 = *(void (**)(char *, uint64_t))(v46 + 8);
  v49(v2, v47);
  v49(v5, v47);
  v50 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 16);
  v51 = v50(v43, v22, v15);
  if ((v48 & 1) != 0)
  {
    v52 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
    v53 = v52(v43, v15);
    v54 = 1;
  }
  else
  {
    CAUVehicleLayoutKey.side.getter(v51);
    ((void (*)(char *, _QWORD, uint64_t))v63)(v2, enum case for CAUVehicleLayoutKey.Side.all(_:), v47);
    v55 = static CAUVehicleLayoutKey.Side.== infix(_:_:)(v5, v2);
    v49(v2, v47);
    v49(v5, v47);
    v52 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
    v53 = v52(v43, v15);
    v54 = v55 & v61;
  }
  LODWORD(v65) = v54;
  CAUVehicleLayoutKey.side.getter(v53);
  ((void (*)(char *, _QWORD, uint64_t))v63)(v2, enum case for CAUVehicleLayoutKey.Side.left(_:), v47);
  v56 = static CAUVehicleLayoutKey.Side.== infix(_:_:)(v5, v2);
  v49(v2, v47);
  v49(v5, v47);
  v57 = v66;
  v58 = v50(v66, v22, v15);
  if ((v56 & 1) == 0)
  {
    CAUVehicleLayoutKey.side.getter(v58);
    ((void (*)(char *, _QWORD, uint64_t))v63)(v2, enum case for CAUVehicleLayoutKey.Side.all(_:), v47);
    static CAUVehicleLayoutKey.Side.== infix(_:_:)(v5, v2);
    v49(v2, v47);
    v49(v5, v47);
  }
  v52(v57, v15);
  v52(v22, v15);
}

uint64_t sub_100049944()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC7Climate24ClimateVentServiceButton_defaultSymbolName
                                             + 8));
}

id sub_100049974()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateVentServiceButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateVentServiceButton()
{
  return objc_opt_self(_TtC7Climate24ClimateVentServiceButton);
}

uint64_t getEnumTagSinglePayload for ClimateSignpostManager.Signpost(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClimateVentServiceButton.Configuration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100049C10 + 4 * byte_10008A741[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100049C44 + 4 * byte_10008A73C[v4]))();
}

uint64_t sub_100049C44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100049C4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100049C54);
  return result;
}

uint64_t sub_100049C60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100049C68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100049C6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100049C74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClimateVentServiceButton.Configuration()
{
  return &type metadata for ClimateVentServiceButton.Configuration;
}

unint64_t sub_100049C94()
{
  unint64_t result;

  result = qword_1000B9140;
  if (!qword_1000B9140)
  {
    result = swift_getWitnessTable(&unk_10008A7F0, &type metadata for ClimateVentServiceButton.Configuration);
    atomic_store(result, (unint64_t *)&qword_1000B9140);
  }
  return result;
}

unint64_t sub_100049CDC()
{
  unint64_t result;

  result = qword_1000B9148;
  if (!qword_1000B9148)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UInt32, &type metadata for UInt32);
    atomic_store(result, (unint64_t *)&qword_1000B9148);
  }
  return result;
}

unint64_t sub_100049D20(uint64_t a1)
{
  unint64_t result;

  result = sub_100049D44();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100049D44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B9188;
  if (!qword_1000B9188)
  {
    v1 = type metadata accessor for ClimateVentServiceButton();
    result = swift_getWitnessTable(&unk_10008A818, v1);
    atomic_store(result, (unint64_t *)&qword_1000B9188);
  }
  return result;
}

unint64_t sub_100049D88(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10009D808, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_100049DD8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100049DFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100049E28(uint64_t a1)
{
  uint64_t v1;

  sub_100048AEC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100049E34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  _QWORD *v50;

  v47 = sub_100006058(&qword_1000B9320);
  __chkstk_darwin(v47);
  v45 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v44 = (char *)&v41 - v4;
  __chkstk_darwin(v5);
  v46 = (char *)&v41 - v6;
  v7 = *(_QWORD *)(a1 + 64);
  v42 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v43 = (unint64_t)(v8 + 63) >> 6;
  v48 = a1;
  swift_bridgeObjectRetain(a1);
  v11 = 0;
  v12 = (uint64_t)v44;
  v50 = _swiftEmptyArrayStorage;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v49 = v11;
  for (i = v13 | (v11 << 6); ; i = __clz(__rbit64(v16)) + (v17 << 6))
  {
    v19 = v48;
    v20 = *(_QWORD *)(v48 + 48);
    v21 = type metadata accessor for CAUVehicleLayoutKey(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = v20 + *(_QWORD *)(v22 + 72) * i;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v25 = (uint64_t)v46;
    v24(v46, v23, v21);
    v26 = *(_QWORD *)(v19 + 56);
    v27 = v26 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClimateZone(0) - 8) + 72) * i;
    v28 = v47;
    sub_10000AAD8(v27, v25 + *(int *)(v47 + 48), type metadata accessor for ClimateZone);
    sub_1000529BC(v25, v12);
    v29 = *(int *)(v28 + 48);
    v30 = v45;
    v31 = (uint64_t)&v45[v29];
    v32 = v12 + v29;
    v24(v45, v12, v21);
    v33 = sub_10000AAD8(v32, v31, type metadata accessor for ClimateZone);
    v34 = CAUVehicleLayoutKey.rawValue.getter(v33);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v30, v21);
    sub_10000AB60(v31, type metadata accessor for ClimateZone);
    sub_100008B88(v12, &qword_1000B9320);
    v37 = v50;
    if ((swift_isUniquelyReferenced_nonNull_native(v50) & 1) == 0)
      v37 = sub_10007A73C(0, v37[2] + 1, 1, v37);
    v39 = v37[2];
    v38 = v37[3];
    if (v39 >= v38 >> 1)
      v37 = sub_10007A73C((_QWORD *)(v38 > 1), v39 + 1, 1, v37);
    v37[2] = v39 + 1;
    v40 = &v37[2 * v39];
    v40[4] = v34;
    v40[5] = v36;
    v11 = v49;
    v50 = v37;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v15 >= v43)
      goto LABEL_27;
    v16 = *(_QWORD *)(v42 + 8 * v15);
    v17 = v11 + 1;
    if (!v16)
    {
      v17 = v11 + 2;
      if (v11 + 2 >= v43)
        goto LABEL_27;
      v16 = *(_QWORD *)(v42 + 8 * v17);
      if (!v16)
      {
        v17 = v11 + 3;
        if (v11 + 3 >= v43)
          goto LABEL_27;
        v16 = *(_QWORD *)(v42 + 8 * v17);
        if (!v16)
        {
          v17 = v11 + 4;
          if (v11 + 4 >= v43)
            goto LABEL_27;
          v16 = *(_QWORD *)(v42 + 8 * v17);
          if (!v16)
            break;
        }
      }
    }
LABEL_20:
    v10 = (v16 - 1) & v16;
    v49 = v17;
  }
  v18 = v11 + 5;
  if (v11 + 5 >= v43)
  {
LABEL_27:
    swift_release(v48);
    return;
  }
  v16 = *(_QWORD *)(v42 + 8 * v18);
  if (v16)
  {
    v17 = v11 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v43)
      goto LABEL_27;
    v16 = *(_QWORD *)(v42 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

void sub_10004A1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  id v21;
  uint64_t v22;
  char v23;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator);
  KeyPath = swift_getKeyPath(&unk_10008A948);
  v3 = swift_getKeyPath(&unk_10008A970);
  static Published.subscript.getter(v1, KeyPath, v3);
  swift_release(KeyPath);
  *(_QWORD *)&v4 = swift_release(v3).n128_u64[0];
  if (!v23)
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_carView);
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_zoneCardActive) == 1)
    {
      objc_msgSend(v5, "setHidden:", 1, v4);
      v6 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton);
      if (v6)
        objc_msgSend(v6, "setHidden:", 1);
      v7 = sub_10004A3D4();
      objc_msgSend(v7, "setHidden:", 0);
    }
    else
    {
      objc_msgSend(v5, "setHidden:", 0, v4);
      v8 = sub_10004A3D4();
      objc_msgSend(v8, "setHidden:", 1);

      v7 = *(id *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton);
      if (!v7)
        return;
      v9 = (_QWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache);
      v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache);
      if (v10)
      {
        v12 = v9[5];
        v11 = v9[6];
        v14 = v9[3];
        v13 = v9[4];
        v16 = v9[1];
        v15 = v9[2];
        v17 = v7;
        sub_100052488(v10, v16, v15, v14, v13, v12, v11);
        v18 = CAFUISettingsCache.rootSettings(in:visibleOnly:)(2, 1);
        sub_100011920(v10, v16, v15, v14, v13, v12, v11);
        if ((unint64_t)v18 >> 62)
        {
          if (v18 < 0)
            v22 = v18;
          else
            v22 = v18 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v18);
          v19 = _CocoaArrayWrapper.endIndex.getter(v22);
          swift_bridgeObjectRelease(v18);
        }
        else
        {
          v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v18);
        v20 = v19 == 0;
      }
      else
      {
        v21 = v7;
        v20 = 1;
      }
      objc_msgSend(v7, "setHidden:", v20);
    }

  }
}

id sub_10004A3D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___zoneCard;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___zoneCard);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___zoneCard);
  }
  else
  {
    v4 = (void *)sub_10004A434(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_10004A434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  __n128 v15;
  char *v16;
  id v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  uint64_t result;
  _QWORD v28[3];
  uint64_t v29;
  _UNKNOWN **v30;

  v2 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v2);
  v4 = (char *)&v28[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ClimateZone(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28[-1] - v10;
  v12 = *(void **)(a1 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator);
  KeyPath = swift_getKeyPath(&unk_10008AA20);
  v14 = swift_getKeyPath(&unk_10008AA48);
  static Published.subscript.getter(v12, KeyPath, v14);
  swift_release(KeyPath);
  v15 = swift_release(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v15) == 1)
  {
    sub_100008B88((uint64_t)v4, (uint64_t *)&unk_1000B7C40);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000018, 0x800000010008DFA0, "Climate/ClimateAppViewController.swift", 38, 2, 51, 0);
    __break(1u);
  }
  else
  {
    sub_100018D10((uint64_t)v4, (uint64_t)v11, type metadata accessor for ClimateZone);
    sub_10000AAD8((uint64_t)v11, (uint64_t)v8, type metadata accessor for ClimateZone);
    v16 = (char *)swift_allocObject(&unk_10009F920, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16, a1);
    v29 = type metadata accessor for ClimateCoordinator(0);
    v30 = &off_10009E948;
    v28[0] = v12;
    v17 = objc_allocWithZone((Class)type metadata accessor for ClimateZoneCard(0));
    v18 = sub_1000525CC((uint64_t)v28, v29);
    v19 = __chkstk_darwin(v18);
    v21 = (_QWORD *)((char *)&v28[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v22 + 16))(v21, v19);
    v23 = *v21;
    v24 = v12;
    swift_retain(v16);
    v25 = sub_1000504CC((uint64_t)v8, v23, (uint64_t)sub_1000525B4, v16, v17);
    swift_release(v16);
    sub_100018B40(v28);

    sub_10000AB60((uint64_t)v11, type metadata accessor for ClimateZone);
    swift_release(v16);
    return (uint64_t)v25;
  }
  return result;
}

id sub_10004A704()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  objc_class *v5;
  _BYTE *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  objc_super v12;

  v1 = OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___systemControls;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___systemControls);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___systemControls);
  }
  else
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_climateSystem + 8);
    v5 = (objc_class *)type metadata accessor for ClimateSystemControls();
    v6 = objc_allocWithZone(v5);
    *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate21ClimateSystemControls____lazy_storage___controls] = 0;
    v6[OBJC_IVAR____TtC7Climate21ClimateSystemControls_areButtonsAlreadyVisible] = 0;
    *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate21ClimateSystemControls_climate] = v4;
    v12.receiver = v6;
    v12.super_class = v5;
    v7 = v4;
    v8 = objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0, v12.receiver, v12.super_class);

    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_10004A7FC()
{
  return sub_10004A834((SEL *)&selRef_leftAnchor, (SEL *)&selRef_rightAnchor, 20.0, -20.0);
}

id sub_10004A818()
{
  return sub_10004A834((SEL *)&selRef_rightAnchor, (SEL *)&selRef_leftAnchor, -20.0, 20.0);
}

id sub_10004A834(SEL *a1, SEL *a2, double a3, double a4)
{
  char *v4;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id result;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t KeyPath;
  uint64_t v69;
  double v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  id v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  SEL *v107;
  char v109;

  v8 = v4;
  v9 = sub_100006058((uint64_t *)&unk_1000B7590);
  v10 = swift_allocObject(v9, 112, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10008A8A0;
  v11 = sub_10004A704();
  v12 = objc_msgSend(v11, "topAnchor");

  result = objc_msgSend(v8, "view");
  if (!result)
    goto LABEL_36;
  v14 = result;
  v15 = objc_msgSend(result, "safeAreaLayoutGuide");

  v16 = objc_msgSend(v15, "topAnchor");
  v17 = objc_msgSend(v12, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v10 + 32) = v17;
  v18 = sub_10004A704();
  v19 = objc_msgSend(v18, "bottomAnchor");

  result = objc_msgSend(v8, "view");
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v20 = result;
  v21 = objc_msgSend(result, "safeAreaLayoutGuide");

  v22 = objc_msgSend(v21, "bottomAnchor");
  v23 = objc_msgSend(v19, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v10 + 40) = v23;
  v24 = sub_10004A704();
  v25 = objc_msgSend(v24, *a1);

  result = objc_msgSend(v8, "view");
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v26 = result;
  v27 = objc_msgSend(result, "safeAreaLayoutGuide");

  v28 = objc_msgSend(v27, *a1);
  v29 = objc_msgSend(v25, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v10 + 48) = v29;
  v30 = sub_10004A704();
  v31 = objc_msgSend(v30, "widthAnchor");

  v32 = objc_msgSend(v31, "constraintEqualToConstant:", 60.0);
  *(_QWORD *)(v10 + 56) = v32;
  v33 = sub_10004A3D4();
  v34 = objc_msgSend(v33, "topAnchor");

  result = objc_msgSend(v8, "view");
  if (!result)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v35 = result;
  v36 = objc_msgSend(result, "safeAreaLayoutGuide");

  v37 = objc_msgSend(v36, "topAnchor");
  v38 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v37, 4.0);

  *(_QWORD *)(v10 + 64) = v38;
  v39 = sub_10004A3D4();
  v40 = objc_msgSend(v39, "bottomAnchor");

  result = objc_msgSend(v8, "view");
  if (!result)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v41 = result;
  v42 = objc_msgSend(result, "safeAreaLayoutGuide");

  v43 = objc_msgSend(v42, "bottomAnchor");
  v44 = objc_msgSend(v40, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v10 + 72) = v44;
  v45 = sub_10004A3D4();
  v107 = a1;
  v46 = objc_msgSend(v45, *a1);

  v47 = sub_10004A704();
  v48 = objc_msgSend(v47, *a2);

  v49 = objc_msgSend(v46, "constraintEqualToAnchor:", v48);
  *(_QWORD *)(v10 + 80) = v49;
  v50 = OBJC_IVAR____TtC7Climate24ClimateAppViewController_carView;
  v51 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC7Climate24ClimateAppViewController_carView], "topAnchor");
  result = objc_msgSend(v8, "view");
  if (!result)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v52 = result;
  v53 = objc_msgSend(result, "safeAreaLayoutGuide");

  v54 = objc_msgSend(v53, "topAnchor");
  v55 = objc_msgSend(v51, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v10 + 88) = v55;
  v56 = objc_msgSend(*(id *)&v8[v50], "bottomAnchor");
  result = objc_msgSend(v8, "view");
  if (!result)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v57 = result;
  v58 = objc_msgSend(result, "safeAreaLayoutGuide");

  v59 = objc_msgSend(v58, "bottomAnchor");
  v60 = objc_msgSend(v56, "constraintEqualToAnchor:", v59);

  *(_QWORD *)(v10 + 96) = v60;
  v61 = objc_msgSend(*(id *)&v8[v50], *a2);
  result = objc_msgSend(v8, "view");
  if (!result)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v62 = result;
  v63 = objc_msgSend(result, "safeAreaLayoutGuide");

  v64 = objc_msgSend(v63, *a2);
  v65 = objc_msgSend(v61, "constraintEqualToAnchor:", v64);

  *(_QWORD *)(v10 + 104) = v65;
  specialized Array._endMutation()(v66);
  v67 = *(_QWORD *)&v8[OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator];
  KeyPath = swift_getKeyPath(&unk_10008A948);
  v69 = swift_getKeyPath(&unk_10008A970);
  static Published.subscript.getter(v67, KeyPath, v69);
  swift_release(KeyPath);
  *(_QWORD *)&v70 = swift_release(v69).n128_u64[0];
  if (!v109)
  {
    v85 = objc_msgSend(*(id *)&v8[v50], *v107, v70);
    v86 = sub_10004A704();
    v87 = objc_msgSend(v86, *a2);

    v77 = objc_msgSend(v85, "constraintEqualToAnchor:constant:", v87, a3);
    v88 = sub_10004A3D4();
    v89 = objc_msgSend(v88, *a2);

    result = objc_msgSend(v8, "view");
    if (!result)
    {
LABEL_44:
      __break(1u);
      return result;
    }
    v90 = result;
    v91 = objc_msgSend(result, "safeAreaLayoutGuide");

    v92 = objc_msgSend(v91, *a2);
    v80 = objc_msgSend(v89, "constraintEqualToAnchor:constant:", v92, a4);

    if (!((unint64_t)v10 >> 62))
    {
      v93 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)(v93 + 2);
      if (!__OFADD__(v93, 2))
      {
LABEL_18:
        v94 = sub_1000761FC((uint64_t)result, 1);
        specialized Array._endMutation()(v94);
        v84 = v77;
        goto LABEL_19;
      }
      goto LABEL_35;
    }
LABEL_30:
    if (v10 < 0)
      v105 = v10;
    else
      v105 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v106 = _CocoaArrayWrapper.endIndex.getter(v105);
    swift_bridgeObjectRelease(v10);
    result = (id)(v106 + 2);
    if (!__OFADD__(v106, 2))
      goto LABEL_18;
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v71 = sub_10004A3D4();
  v72 = objc_msgSend(v71, "widthAnchor");

  v73 = swift_getKeyPath(&unk_10008A948);
  v74 = swift_getKeyPath(&unk_10008A970);
  static Published.subscript.getter(v67, v73, v74);
  swift_release(v73);
  swift_release(v74);
  v75 = 300.0;
  if (v109 == 1)
    v75 = 208.0;
  v76 = objc_msgSend(v72, "constraintEqualToConstant:", v75);

  v77 = objc_msgSend(*(id *)&v8[v50], *v107);
  v78 = sub_10004A3D4();
  v79 = objc_msgSend(v78, *a2);

  v80 = objc_msgSend(v77, "constraintEqualToAnchor:", v79);
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v103 = v10;
    else
      v103 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v104 = _CocoaArrayWrapper.endIndex.getter(v103);
    swift_bridgeObjectRelease(v10);
    v82 = v104 + 2;
    if (!__OFADD__(v104, 2))
      goto LABEL_14;
    goto LABEL_29;
  }
  v81 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  v82 = v81 + 2;
  if (__OFADD__(v81, 2))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
LABEL_14:
  v83 = sub_1000761FC(v82, 1);
  specialized Array._endMutation()(v83);
  v84 = v76;
LABEL_19:
  v95 = v84;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v84);
  v97 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v96 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v97 >= v96 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v96 > 1, v97 + 1, 1);
  v98 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v97, v95);
  specialized Array._endMutation()(v98);
  v99 = v80;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v99);
  v101 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v100 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v101 >= v100 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v100 > 1, v101 + 1, 1);
  v102 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v101, v99);
  specialized Array._endMutation()(v102);

  return (id)v10;
}

uint64_t sub_10004B2C0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  void *v16;
  _BYTE *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t KeyPath;
  uint64_t v27;
  __n128 v28;
  void *v29;
  void **v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  __n128 v38;
  __n128 v39;
  id *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  objc_class *v53;
  id v54;
  void *v55;
  char *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t i;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  _QWORD *v68;
  NSObject *v69;
  os_log_type_t v70;
  char *v71;
  uint8_t *v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  void (*v95)(char *, _UNKNOWN **);
  uint64_t v96;
  uint64_t j;
  id v98;
  void *v99;
  id v100;
  uint64_t v101;
  void *v102;
  __int128 v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int64x2_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  NSObject *v134;
  os_log_type_t v135;
  _BOOL4 v136;
  id v137;
  uint8_t *v138;
  const char *v139;
  uint64_t result;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  _BOOL4 v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  void **v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  char *v159;
  uint64_t v160;
  __int128 v161;
  _QWORD *v162;
  uint64_t v163;
  id *v164;
  char v165[32];
  objc_super v166;
  uint64_t v167;
  uint64_t v168;
  __int128 v169;
  __int128 v170;
  uint64_t v171;
  uint64_t v172[2];
  __int128 v173;
  __int128 v174;
  uint64_t v175;

  v1 = sub_100006058(&qword_1000B92F0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v148 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v162 = (_QWORD *)type metadata accessor for ClimateAssets(0);
  *(_QWORD *)&v161 = *(v162 - 1);
  __chkstk_darwin(v162);
  v160 = (uint64_t)&v148 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v148 - v6;
  v8 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v8);
  v10 = (char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ClimateSystemManager(0);
  v163 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v163 + 64);
  __chkstk_darwin(v11);
  v164 = (id *)((char *)&v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (void **)((char *)&v148 - v14);
  v16 = (void *)objc_opt_self(UIApplication);
  v17 = v0;
  v18 = objc_msgSend(v16, "sharedApplication");
  v19 = objc_msgSend(v18, "delegate");

  if (v19)
  {
    v20 = OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator;
    v21 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v19, v21, 0, 0, 0);
    v22 = sub_10006B490();
    swift_unknownObjectRelease(v19);
    *(_QWORD *)&v17[v20] = v22;
    v157 = v12;
    v159 = v7;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
      && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    {
      v23 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
    }
    else
    {
      v23 = &_swiftEmptySetSingleton;
    }
    *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate24ClimateAppViewController_cancellables] = v23;
    *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate24ClimateAppViewController_activeConstraints] = _swiftEmptyArrayStorage;
    v17[OBJC_IVAR____TtC7Climate24ClimateAppViewController_zoneCardActive] = 0;
    *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___zoneCard] = 0;
    v24 = OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton;
    *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton] = 0;
    *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate24ClimateAppViewController_autoSettingsObserver] = 0;
    v25 = &v17[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache];
    *(_OWORD *)v25 = 0u;
    *((_OWORD *)v25 + 1) = 0u;
    *((_OWORD *)v25 + 2) = 0u;
    *((_QWORD *)v25 + 6) = 0;
    *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___systemControls] = 0;
    KeyPath = swift_getKeyPath(&unk_10008AA68);
    v27 = swift_getKeyPath(&unk_10008AA90);
    static Published.subscript.getter(v22, KeyPath, v27);
    swift_release(KeyPath);
    v28 = swift_release(v27);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v163 + 48))(v10, 1, v11, v28) == 1)
      goto LABEL_101;
    sub_100018D10((uint64_t)v10, (uint64_t)v15, type metadata accessor for ClimateSystemManager);
    sub_10000AAD8((uint64_t)v15, (uint64_t)&v17[OBJC_IVAR____TtC7Climate24ClimateAppViewController_climateSystem], type metadata accessor for ClimateSystemManager);
    v29 = *(void **)&v17[v24];
    *(_QWORD *)&v17[v24] = 0;
    v30 = v15;

    v31 = *(char **)&v17[v20];
    v32 = *(_QWORD *)&v31[OBJC_IVAR____TtC7Climate18ClimateCoordinator_assetManager];
    v33 = *(int *)(v11 + 36);
    v34 = *(uint64_t *)((char *)v15 + v33);
    v35 = v31;
    swift_retain(v32);
    swift_bridgeObjectRetain(v34);
    v37 = sub_10004EB88(v36);
    swift_bridgeObjectRelease(v34);
    sub_1000070D8((uint64_t)v37, v3, v38);
    v39 = swift_release(v37);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, _QWORD *, __n128))(v161 + 48))(v3, 1, v162, v39) == 1)
    {
      sub_100008B88((uint64_t)v3, &qword_1000B92F0);
      v40 = v164;
      sub_10000AAD8((uint64_t)v15, (uint64_t)v164, type metadata accessor for ClimateSystemManager);
      v41 = (char *)objc_allocWithZone((Class)type metadata accessor for ClimateCarPlaceholderView());
      v42 = sub_10004F27C(v40, (uint64_t)v35, v41);
    }
    else
    {
      v43 = (uint64_t)v159;
      sub_100018D10((uint64_t)v3, (uint64_t)v159, type metadata accessor for ClimateAssets);
      v44 = (uint64_t)v15;
      v45 = (uint64_t)v164;
      sub_10000AAD8(v44, (uint64_t)v164, type metadata accessor for ClimateSystemManager);
      v46 = v30;
      v47 = v33;
      v48 = v160;
      sub_10000AAD8(v43, v160, type metadata accessor for ClimateAssets);
      v49 = (char *)objc_allocWithZone((Class)type metadata accessor for ClimateCarView(0));
      v50 = v35;
      v51 = v48;
      v33 = v47;
      v30 = v46;
      sub_100051654(v45, v50, v51, v49);
      v42 = v52;

      sub_10000AB60(v43, type metadata accessor for ClimateAssets);
    }

    swift_release(v32);
    *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate24ClimateAppViewController_carView] = v42;

    v53 = (objc_class *)type metadata accessor for ClimateAppViewController(0);
    v166.receiver = v17;
    v166.super_class = v53;
    v54 = objc_msgSendSuper2(&v166, "initWithNibName:bundle:", 0, 0);
    v55 = *v30;
    v56 = (char *)v54;
    v57 = objc_msgSend(v55, "automakerSettings");
    if (v57)
    {
      v58 = v57;
      v59 = CAFAutomakerSettings.allSettings.getter();
      v60 = v59;
      v172[0] = (uint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v59 >> 62)
      {
        if (v59 >= 0)
          v59 &= 0xFFFFFFFFFFFFFF8uLL;
        v61 = _CocoaArrayWrapper.endIndex.getter(v59);
      }
      else
      {
        v61 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v159 = v56;
      v162 = v58;
      if (!v61)
      {
        swift_bridgeObjectRelease(v60);
        v68 = _swiftEmptyArrayStorage;
        goto LABEL_26;
      }
      if (v61 >= 1)
      {
        for (i = 0; i != v61; ++i)
        {
          if ((v60 & 0xC000000000000001) != 0)
            v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v60);
          else
            v65 = *(id *)(v60 + 8 * i + 32);
          v66 = v65;
          v67 = objc_msgSend(v65, "category");
          if ((_DWORD)v67 == 2)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v67);
            v63 = *(_QWORD *)(v172[0] + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v63);
            v64 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v66);
            specialized ContiguousArray._endMutation()(v64);
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease(v60);
        v68 = (_QWORD *)v172[0];
        v56 = v159;
        v58 = v162;
LABEL_26:
        v73 = objc_msgSend(v58, "settingsSections");
        if (v73)
        {
          v74 = v73;
          v75 = sub_100006B04(0, &qword_1000B9318, CAFSettingsSection_ptr);
          v76 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v74, v75);

        }
        else
        {
          v76 = 0;
        }
        CAFUISettingsCache.init(settings:sections:)(&v167, v68, v76);
        v77 = v167;
        v78 = v168;
        if ((unint64_t)v168 >> 62)
        {
          if (v168 < 0)
            v131 = v168;
          else
            v131 = v168 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v168, 2);
          swift_bridgeObjectRetain(v77);
          v132 = _CocoaArrayWrapper.endIndex.getter(v131);
          swift_bridgeObjectRelease(v78);
          if (v132)
          {
LABEL_31:
            v80 = *(uint64_t *)((char *)v30 + v33);
            if (!*(_QWORD *)(v80 + 16))
            {
              v160 = v77;
              v87 = v77;
              goto LABEL_38;
            }
            swift_bridgeObjectRetain(*(void **)((char *)v30 + v33));
            sub_100049E34(v81);
            v83 = v82;
            swift_bridgeObjectRelease(v80);
            v84 = CAFUISettingsCache.settings(excludingLayoutKeys:)(v83);
            swift_bridgeObjectRelease(v83);
            if ((unint64_t)v84 >> 62)
            {
              if (v84 < 0)
                v142 = v84;
              else
                v142 = v84 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v84);
              v85 = _CocoaArrayWrapper.endIndex.getter(v142);
              swift_bridgeObjectRelease(v84);
              if (!((unint64_t)v77 >> 62))
                goto LABEL_34;
            }
            else
            {
              v85 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (!((unint64_t)v77 >> 62))
              {
LABEL_34:
                v86 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_35:
                swift_bridgeObjectRelease(v77);
                if (v85 == v86)
                {
                  v160 = v77;
                  v87 = v84;
LABEL_38:
                  swift_bridgeObjectRelease(v87);
                  v88 = v171;
                  v89 = v78;
                  v161 = v170;
                  v158 = v169;
                  while (1)
                  {
                    v154 = v88;
                    v94 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CAFUIAutomakerSettingObserver(0)), "init");
                    v95 = *(void (**)(char *, _UNKNOWN **))((swift_isaMask & *v94) + 0x60);
                    v71 = v56;
                    v95(v56, &off_10009F900);
                    v156 = v89;
                    if ((unint64_t)v78 >> 62)
                    {
                      v141 = v78 < 0 ? v78 : v78 & 0xFFFFFFFFFFFFFF8;
                      swift_bridgeObjectRetain(v78);
                      v96 = _CocoaArrayWrapper.endIndex.getter(v141);
                    }
                    else
                    {
                      v96 = *(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10);
                      swift_bridgeObjectRetain(v78);
                    }
                    v155 = v30;
                    if (!v96)
                      break;
                    if (v96 >= 1)
                    {
                      for (j = 0; j != v96; ++j)
                      {
                        if ((v78 & 0xC000000000000001) != 0)
                          v98 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v78);
                        else
                          v98 = *(id *)(v78 + 8 * j + 32);
                        v99 = v98;
                        objc_msgSend(v98, "registerObserver:", v94);

                      }
                      break;
                    }
                    __break(1u);
LABEL_91:
                    if (v78 < 0)
                      v144 = v78;
                    else
                      v144 = v78 & 0xFFFFFFFFFFFFFF8;
                    swift_bridgeObjectRetain(v78);
                    v145 = _CocoaArrayWrapper.endIndex.getter(v144);
                    swift_bridgeObjectRelease(v78);
                    if (!v145)
                      goto LABEL_95;
LABEL_44:
                    v88 = v175;
                    v161 = v174;
                    v158 = v173;
                    v89 = v172[1];
                    v160 = v172[0];
                  }
                  swift_bridgeObjectRelease_n(v78, 2);
                  v100 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimateSettingsButton()), "init");
                  v101 = OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton;
                  v102 = *(void **)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton];
                  *(_QWORD *)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton] = v100;

                  v103 = v158;
                  v104 = &v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache];
                  v153 = *(_QWORD **)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache];
                  v105 = *(_QWORD *)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache + 16];
                  v152 = *(_QWORD *)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache + 8];
                  v106 = *(_QWORD *)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache + 24];
                  v151 = *(_QWORD *)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache + 32];
                  v107 = *(_QWORD *)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache + 40];
                  v150 = *(_QWORD *)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache + 48];
                  v108 = vdupq_lane_s64(v158, 0);
                  v109 = v156;
                  v108.i64[0] = v156;
                  v110 = v160;
                  *(_QWORD *)v104 = v160;
                  *(int64x2_t *)(v104 + 8) = v108;
                  v158 = v103;
                  *((_QWORD *)v104 + 3) = *((_QWORD *)&v103 + 1);
                  *((_OWORD *)v104 + 2) = v161;
                  v111 = v154;
                  *((_QWORD *)v104 + 6) = v154;
                  v160 = v110;
                  swift_bridgeObjectRetain(v110);
                  swift_bridgeObjectRetain(v109);
                  v149 = v103;
                  swift_bridgeObjectRetain(v103);
                  v148 = *((_QWORD *)&v103 + 1);
                  swift_bridgeObjectRetain(*((_QWORD *)&v103 + 1));
                  v112 = v161;
                  swift_bridgeObjectRetain(v161);
                  v113 = *((_QWORD *)&v161 + 1);
                  swift_bridgeObjectRetain(*((_QWORD *)&v161 + 1));
                  swift_bridgeObjectRetain(v111);
                  sub_100011920((uint64_t)v153, v152, v105, v106, v151, v107, v150);
                  v114 = *(void **)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_autoSettingsObserver];
                  *(_QWORD *)&v71[OBJC_IVAR____TtC7Climate24ClimateAppViewController_autoSettingsObserver] = v94;
                  v153 = v94;

                  v115 = *(_QWORD *)&v71[v101];
                  if (v115)
                  {
                    v116 = swift_allocObject(&unk_10009F920, 24, 7);
                    swift_unknownObjectWeakInit(v116 + 16, v71);
                    v117 = (uint64_t)v164;
                    sub_10000AAD8((uint64_t)v155, (uint64_t)v164, type metadata accessor for ClimateSystemManager);
                    v118 = *(unsigned __int8 *)(v163 + 80);
                    v119 = (v118 + 24) & ~v118;
                    v120 = (v157 + v119 + 7) & 0xFFFFFFFFFFFFFFF8;
                    v121 = swift_allocObject(&unk_10009F9C0, v120 + 56, v118 | 7);
                    *(_QWORD *)(v121 + 16) = v116;
                    sub_100018D10(v117, v121 + v119, type metadata accessor for ClimateSystemManager);
                    v122 = v121 + v120;
                    v123 = v156;
                    *(_QWORD *)v122 = v160;
                    *(_QWORD *)(v122 + 8) = v123;
                    v124 = v161;
                    *(_OWORD *)(v122 + 16) = v158;
                    *(_OWORD *)(v122 + 32) = v124;
                    *(_QWORD *)(v122 + 48) = v111;
                    v125 = (uint64_t *)(v115 + OBJC_IVAR____TtC7Climate13ClimateButton_action);
                    swift_beginAccess(v115 + OBJC_IVAR____TtC7Climate13ClimateButton_action, v165, 1, 0);
                    v126 = *v125;
                    v127 = v125[1];
                    *v125 = (uint64_t)sub_1000528EC;
                    v125[1] = v121;
                    sub_100005118(v126, v127);
                  }
                  else
                  {
                    swift_bridgeObjectRelease(v111);
                    swift_bridgeObjectRelease(v113);
                    swift_bridgeObjectRelease(v112);
                    swift_bridgeObjectRelease(v148);
                    swift_bridgeObjectRelease(v149);
                    swift_bridgeObjectRelease(v156);
                    swift_bridgeObjectRelease(v160);
                  }
                  v56 = v159;
                  v10 = (char *)v162;
                  v128 = objc_msgSend(v71, "view");
                  if (v128)
                  {
                    v129 = v128;
                    sub_100006B04(0, (unint64_t *)&qword_1000B91A0, UIColor_ptr);
                    v130 = (void *)static UIColor.cafui_tableBackground.getter();
                    objc_msgSend(v129, "setBackgroundColor:", v130);

                    v30 = v155;
                    goto LABEL_75;
                  }
                  goto LABEL_100;
                }
                swift_bridgeObjectRelease(v78);
                sub_10005263C(&v167);
                v90 = objc_msgSend(v162, "settingsSections");
                if (v90)
                {
                  v91 = v90;
                  v92 = sub_100006B04(0, &qword_1000B9318, CAFSettingsSection_ptr);
                  v93 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v91, v92);

                }
                else
                {
                  v93 = 0;
                }
                CAFUISettingsCache.init(settings:sections:)(v172, v84, v93);
                v78 = CAFUISettingsCache.rootSettings(in:visibleOnly:)(2, 0);
                if ((unint64_t)v78 >> 62)
                  goto LABEL_91;
                if (*(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_44;
LABEL_95:
                swift_bridgeObjectRelease(v78);
                v146 = sub_10005263C(v172);
                if (qword_1000B6FE8 != -1)
                  v146 = (uint64_t *)swift_once(&qword_1000B6FE8, sub_10005CB60);
                v134 = qword_1000BC938;
                v135 = static os_log_type_t.default.getter(v146);
                v147 = os_log_type_enabled(v134, v135);
                v137 = v162;
                if (!v147)
                  goto LABEL_73;
                v138 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v138 = 0;
                v139 = "More Settings not availabe, only zone related settings.";
                goto LABEL_72;
              }
            }
            if (v77 < 0)
              v143 = v77;
            else
              v143 = v77 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v77);
            v86 = _CocoaArrayWrapper.endIndex.getter(v143);
            swift_bridgeObjectRelease(v77);
            goto LABEL_35;
          }
        }
        else
        {
          v79 = *(_QWORD *)((v168 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v168);
          swift_bridgeObjectRetain(v77);
          if (v79)
            goto LABEL_31;
        }
        swift_bridgeObjectRelease(v77);
        swift_bridgeObjectRelease(v78);
        v133 = sub_10005263C(&v167);
        if (qword_1000B6FE8 != -1)
          v133 = (uint64_t *)swift_once(&qword_1000B6FE8, sub_10005CB60);
        v134 = qword_1000BC938;
        v135 = static os_log_type_t.default.getter(v133);
        v136 = os_log_type_enabled(v134, v135);
        v137 = v162;
        if (!v136)
          goto LABEL_73;
        v138 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v138 = 0;
        v139 = "No automaker settings for climate category.";
LABEL_72:
        _os_log_impl((void *)&_mh_execute_header, v134, v135, v139, v138, 2u);
        swift_slowDealloc(v138, -1, -1);
LABEL_73:

        goto LABEL_74;
      }
      __break(1u);
    }
    else if (qword_1000B6FE8 == -1)
    {
LABEL_23:
      v69 = qword_1000BC938;
      v70 = static os_log_type_t.default.getter(v57);
      v71 = v56;
      if (!os_log_type_enabled(v69, v70))
      {
LABEL_75:

        sub_10000AB60((uint64_t)v30, type metadata accessor for ClimateSystemManager);
        return (uint64_t)v56;
      }
      v72 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v72 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "Automaker Settings is not available.", v72, 2u);
      swift_slowDealloc(v72, -1, -1);
LABEL_74:
      v71 = v56;
      goto LABEL_75;
    }
    v57 = (_QWORD *)swift_once(&qword_1000B6FE8, sub_10005CB60);
    goto LABEL_23;
  }
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  sub_100008B88((uint64_t)v10, (uint64_t *)&unk_1000BA180);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000011, 0x800000010008DFF0, "Climate/ClimateAppViewController.swift", 38, 2, 138, 0);
  __break(1u);
  return result;
}

void sub_10004C2A4(uint64_t a1, uint64_t a2, void **a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t KeyPath;
  uint64_t v29;
  double v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  _BYTE v38[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    return;
  v8 = (char *)Strong;
  v9 = OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator;
  v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator);
  v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC7Climate18ClimateCoordinator_requestContentManager);
  if (!v11)
  {
LABEL_14:

    return;
  }
  v12 = *a3;
  swift_retain(*(_QWORD *)(v10 + OBJC_IVAR____TtC7Climate18ClimateCoordinator_requestContentManager));
  v13 = objc_msgSend(v12, "automakerSettings");

  if (!v13)
  {
    swift_release(v11);
    goto LABEL_14;
  }
  v14 = objc_msgSend(*(id *)(*(_QWORD *)&v8[v9] + OBJC_IVAR____TtC7Climate18ClimateCoordinator_sessionStatus), "currentSession");
  v15 = v14;
  if (v14)
  {
    v16 = objc_msgSend(v14, "configuration");

    v15 = objc_msgSend(v16, "rightHandDrive");
  }
  v17 = CAFUISettingsCache.categorySettings(for:)(2);
  v18 = *(_QWORD *)(*(_QWORD *)&v8[v9] + OBJC_IVAR____TtC7Climate18ClimateCoordinator_assetManager);
  objc_allocWithZone((Class)type metadata accessor for CAFUITileViewController(0));
  swift_retain(v11);
  swift_retain(v18);
  sub_100052940(a4);
  v19 = (id)CAFUITileViewController.init(isRHD:prominentCategories:listItems:settingsSections:settingsCache:assetManager:requestContentManager:preventVolumeNotification:)(v15, &off_10009D8E8, _swiftEmptyArrayStorage, v17, a4, v18, v11, 0);
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setTitle:", v20);

  v21 = objc_msgSend(v8, "navigationController");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "pushViewController:animated:", v19, 1);

  }
  v23 = (void *)objc_opt_self(UIApplication);
  v24 = objc_msgSend(v23, "sharedApplication");
  v25 = objc_msgSend(v24, "delegate");

  if (v25)
  {
    v26 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v25, v26, 0, 0, 0);
    v27 = sub_10006B490();
    swift_unknownObjectRelease(v25);
    KeyPath = swift_getKeyPath(&unk_10008A948);
    v29 = swift_getKeyPath(&unk_10008A970);
    static Published.subscript.getter(v27, KeyPath, v29);

    swift_release(KeyPath);
    *(_QWORD *)&v30 = swift_release(v29).n128_u64[0];
    if (v37 != 1)
    {
LABEL_12:
      v36 = objc_msgSend(v8, "navigationController");
      objc_msgSend(v36, "setNavigationBarHidden:", 0);

      swift_release(v11);
      return;
    }
    v31 = objc_msgSend(v23, "sharedApplication", v30);
    v32 = objc_msgSend(v31, "delegate");

    if (v32)
    {
      swift_dynamicCastClassUnconditional(v32, v26, 0, 0, 0);
      v33 = sub_10006B490();
      swift_unknownObjectRelease(v32);
      v34 = swift_getKeyPath(&unk_10008A990);
      v35 = swift_getKeyPath(&unk_10008A9B8);
      v37 = 7;
      static Published.subscript.setter(&v37, v33, v34, v35);
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10004C6F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateAppViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10004C7F8()
{
  return type metadata accessor for ClimateAppViewController(0);
}

uint64_t type metadata accessor for ClimateAppViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9248;
  if (!qword_1000B9248)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateAppViewController);
  return result;
}

uint64_t sub_10004C83C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for ClimateSystemManager(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = &unk_10008A8F0;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = &unk_10008A908;
    v4[7] = &unk_10008A908;
    v4[8] = &unk_10008A908;
    v4[9] = &unk_10008A920;
    v4[10] = &unk_10008A908;
    result = swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_10004C8F0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  objc_class *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t KeyPath;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  uint64_t v73;
  id v74;
  Class isa;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  char *v96;
  uint64_t v97;
  char *v98;
  double v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  char *v110;
  double v111;
  char *v112;
  void (*v113)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __n128 v141;
  _BYTE *v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  unint64_t v184;
  void (*v185)(char *, uint64_t, uint64_t, uint64_t);
  char *v186;
  uint64_t v187;
  id v188;
  objc_super v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;

  v1 = v0;
  v2 = sub_100006058(&qword_1000B9258);
  v180 = *(_QWORD *)(v2 - 8);
  v181 = v2;
  __chkstk_darwin(v2);
  v179 = (char *)&v145 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006058((uint64_t *)&unk_1000BA1D0);
  v183 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v182 = (char *)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_100006058(&qword_1000B9260);
  v169 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v167 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = sub_100006058(&qword_1000B9268);
  v171 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v168 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_100006058(&qword_1000B9270);
  v174 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v172 = (char *)&v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_100006058(&qword_1000B9278);
  v177 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v176 = (char *)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_100006058(&qword_1000B9280);
  v162 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v161 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_100006058(&qword_1000B9288);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v164 = (char *)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006058((uint64_t *)&unk_1000B7B60);
  __chkstk_darwin(v12);
  v158 = (char *)&v145 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100006058(&qword_1000B9290);
  v187 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100006058(&qword_1000B9298);
  v156 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v18 = (char *)&v145 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100006058(&qword_1000B92A0);
  v159 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v155 = (char *)&v145 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (objc_class *)type metadata accessor for ClimateAppViewController(0);
  v189.receiver = v0;
  v189.super_class = v20;
  objc_msgSendSuper2(&v189, "viewDidLoad");
  v21 = objc_msgSend(v0, "view");
  if (!v21)
  {
    __break(1u);
    goto LABEL_24;
  }
  v22 = v21;
  v23 = sub_10004A704();
  objc_msgSend(v22, "addSubview:", v23);

  v24 = objc_msgSend(v1, "view");
  if (!v24)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v25 = v24;
  v26 = sub_10004A3D4();
  objc_msgSend(v25, "addSubview:", v26);

  v27 = objc_msgSend(v1, "view");
  if (!v27)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v28 = v27;
  v154 = v4;
  objc_msgSend(v27, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_carView]);

  v29 = *(void **)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton];
  if (!v29
    || (v30 = &v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache],
        (v31 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache]) == 0))
  {
LABEL_18:
    v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_zoneCardActive] = 0;
    sub_10004A1BC();
    v82 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator];
    swift_beginAccess(v82 + OBJC_IVAR____TtC7Climate18ClimateCoordinator__activeZone, &v188, 33, 0);
    v83 = sub_100006058((uint64_t *)&unk_1000B83D0);
    Published.projectedValue.getter(v83);
    swift_endAccess(&v188);
    v84 = sub_10000AA10(&qword_1000B92A8, &qword_1000B9290, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    Publisher.dropFirst(_:)(1, v14, v84);
    (*(void (**)(char *, uint64_t))(v187 + 8))(v16, v14);
    v186 = (char *)objc_opt_self(NSRunLoop);
    v188 = objc_msgSend(v186, "mainRunLoop");
    v85 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    v185 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56);
    v86 = (uint64_t)v158;
    v187 = v85;
    v185(v158, 1, 1, v85);
    v87 = sub_100006B04(0, (unint64_t *)&unk_1000B7B80, NSRunLoop_ptr);
    v88 = sub_10000AA10(&qword_1000B92B0, &qword_1000B9298, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    v184 = sub_10000A98C();
    v89 = v155;
    v90 = v157;
    Publisher.receive<A>(on:options:)(&v188, v86, v157, v87, v88, v184);
    sub_100008B88(v86, (uint64_t *)&unk_1000B7B60);

    (*(void (**)(char *, uint64_t))(v156 + 8))(v18, v90);
    v91 = swift_allocObject(&unk_10009F920, 24, 7);
    swift_unknownObjectWeakInit(v91 + 16, v1);
    v92 = sub_10000AA10(&qword_1000B92B8, &qword_1000B92A0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v93 = v160;
    v94 = Publisher<>.sink(receiveValue:)(sub_100052534, v91, v160, v92);
    v95 = swift_release(v91);
    (*(void (**)(char *, uint64_t, __n128))(v159 + 8))(v89, v93, v95);
    v96 = &v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_cancellables];
    swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_cancellables], &v188, 33, 0);
    AnyCancellable.store(in:)(v96);
    swift_endAccess(&v188);
    swift_release(v94);
    v153 = v82;
    swift_beginAccess(v82 + OBJC_IVAR____TtC7Climate18ClimateCoordinator__layoutSide, &v188, 33, 0);
    v97 = sub_100006058(&qword_1000B83C8);
    v98 = v161;
    Published.projectedValue.getter(v97);
    *(_QWORD *)&v99 = swift_endAccess(&v188).n128_u64[0];
    v152 = v1;
    v188 = objc_msgSend(v186, "mainRunLoop", v99);
    v185((char *)v86, 1, 1, v85);
    v100 = sub_10000AA10(&qword_1000B92C0, &qword_1000B9280, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v101 = v164;
    v102 = v163;
    v151 = v87;
    v103 = v184;
    Publisher.receive<A>(on:options:)(&v188, v86, v163, v87, v100, v184);
    sub_100008B88(v86, (uint64_t *)&unk_1000B7B60);

    (*(void (**)(char *, uint64_t))(v162 + 8))(v98, v102);
    v104 = swift_allocObject(&unk_10009F920, 24, 7);
    swift_unknownObjectWeakInit(v104 + 16, v1);
    v105 = sub_10000AA10(&qword_1000B92C8, &qword_1000B9288, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v106 = v166;
    v107 = Publisher<>.sink(receiveValue:)(sub_10005253C, v104, v166, v105);
    v108 = swift_release(v104);
    (*(void (**)(char *, uint64_t, __n128))(v165 + 8))(v101, v106, v108);
    swift_beginAccess(v96, &v188, 33, 0);
    AnyCancellable.store(in:)(v96);
    swift_endAccess(&v188);
    swift_release(v107);
    swift_beginAccess(v82 + OBJC_IVAR____TtC7Climate18ClimateCoordinator__layoutMode, &v188, 33, 0);
    v109 = sub_100006058(&qword_1000B83C0);
    v110 = v167;
    Published.projectedValue.getter(v109);
    *(_QWORD *)&v111 = swift_endAccess(&v188).n128_u64[0];
    v112 = v186;
    v188 = objc_msgSend(v186, "mainRunLoop", v111);
    v113 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v185;
    v185((char *)v86, 1, 1, v187);
    v114 = sub_10000AA10(&qword_1000B92D0, &qword_1000B9260, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v115 = v168;
    v116 = v170;
    Publisher.receive<A>(on:options:)(&v188, v86, v170, v87, v114, v103);
    sub_100008B88(v86, (uint64_t *)&unk_1000B7B60);

    (*(void (**)(char *, uint64_t))(v169 + 8))(v110, v116);
    v117 = sub_10000AA10(&qword_1000B92D8, &qword_1000B9268, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v118 = v172;
    v119 = v173;
    Publisher.dropFirst(_:)(1, v173, v117);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v115, v119);
    v120 = sub_10000AA10(&qword_1000B92E0, &qword_1000B9270, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    v121 = sub_100052544();
    v122 = v176;
    v123 = v175;
    Publisher<>.removeDuplicates()(v175, v120, v121);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v118, v123);
    v124 = swift_allocObject(&unk_10009F920, 24, 7);
    v125 = v152;
    swift_unknownObjectWeakInit(v124 + 16, v152);
    v126 = sub_10000AA10(&qword_1000B92E8, &qword_1000B9278, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v127 = v178;
    v128 = Publisher<>.sink(receiveValue:)(sub_100052588, v124, v178, v126);
    v129 = swift_release(v124);
    (*(void (**)(char *, uint64_t, __n128))(v177 + 8))(v122, v127, v129);
    swift_beginAccess(v96, &v188, 33, 0);
    AnyCancellable.store(in:)(v96);
    swift_endAccess(&v188);
    swift_release(v128);
    v130 = v153;
    v131 = *(_QWORD *)(v153 + OBJC_IVAR____TtC7Climate18ClimateCoordinator_assetManager);
    v132 = swift_retain(v131);
    v133 = v179;
    dispatch thunk of CAUAssetLibraryManager.$assetLibrary.getter(v132);
    v188 = objc_msgSend(v112, "mainRunLoop", swift_release(v131).n128_f64[0]);
    v113(v86, 1, 1, v187);
    v134 = sub_10000AA10((unint64_t *)&unk_1000BA1E0, &qword_1000B9258, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v135 = v181;
    v136 = v182;
    Publisher.receive<A>(on:options:)(&v188, v86, v181, v151, v134, v184);
    sub_100008B88(v86, (uint64_t *)&unk_1000B7B60);

    (*(void (**)(char *, uint64_t))(v180 + 8))(v133, v135);
    v137 = swift_allocObject(&unk_10009F920, 24, 7);
    swift_unknownObjectWeakInit(v137 + 16, v125);
    v138 = sub_10000AA10((unint64_t *)&unk_1000BA1F0, (uint64_t *)&unk_1000BA1D0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v139 = v154;
    v140 = Publisher<>.sink(receiveValue:)(sub_100052588, v137, v154, v138);
    v141 = swift_release(v137);
    (*(void (**)(char *, uint64_t, __n128))(v183 + 8))(v136, v139, v141);
    swift_beginAccess(v96, &v188, 33, 0);
    AnyCancellable.store(in:)(v96);
    swift_endAccess(&v188);
    swift_release(v140);
    v142 = *(_BYTE **)(v130 + OBJC_IVAR____TtC7Climate18ClimateCoordinator_signpostManager);
    v142[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_mainViewControllerDidLoad] = 1;
    v143 = v142;
    sub_10007012C();

    return;
  }
  v149 = v16;
  v186 = v18;
  v153 = v14;
  v33 = *((_QWORD *)v30 + 1);
  v32 = *((_QWORD *)v30 + 2);
  v34 = *((_QWORD *)v30 + 3);
  v35 = *((_QWORD *)v30 + 4);
  v36 = *((_QWORD *)v30 + 5);
  v37 = *((_QWORD *)v30 + 6);
  v190 = v31;
  v191 = v33;
  v192 = v32;
  v193 = v34;
  v194 = v35;
  v195 = v36;
  v196 = v37;
  v38 = v29;
  v184 = v34;
  v185 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v32;
  v148 = v35;
  v150 = v36;
  v151 = v37;
  v39 = v37;
  v40 = v38;
  sub_100052488(v31, v33, v32, v34, v35, v36, v39);
  objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v41 = objc_msgSend(v1, "view");
  if (!v41)
    goto LABEL_26;
  v42 = v41;
  v146 = v33;
  v147 = v31;
  objc_msgSend(v41, "addSubview:", v40);

  v43 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v44 = objc_msgSend(v43, "delegate");

  if (!v44)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v45 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v44, v45, 0, 0, 0);
  v46 = sub_10006B490();
  swift_unknownObjectRelease(v44);
  KeyPath = swift_getKeyPath(&unk_10008A9D8);
  v48 = swift_getKeyPath(&unk_10008AA00);
  static Published.subscript.getter(v46, KeyPath, v48);

  swift_release(KeyPath);
  swift_release(v48);
  v49 = v188;
  v50 = sub_100006058((uint64_t *)&unk_1000B7590);
  v51 = swift_allocObject(v50, 48, 7);
  *(_OWORD *)(v51 + 16) = xmmword_100088C40;
  v52 = objc_msgSend(v40, "firstBaselineAnchor");
  v53 = objc_msgSend(v1, "view");
  v54 = v53;
  v18 = v186;
  if (v49 == (id)8)
  {
    if (v53)
    {
      v55 = objc_msgSend(v53, "safeAreaLayoutGuide");

      v56 = objc_msgSend(v55, "topAnchor");
      v57 = objc_msgSend(v52, "constraintEqualToAnchor:constant:", v56, 28.0);

      *(_QWORD *)(v51 + 32) = v57;
      v58 = v40;
      v59 = objc_msgSend(v40, "leftAnchor");
      v60 = objc_msgSend(v1, "view");
      if (v60)
      {
        v61 = v60;
        v62 = (void *)objc_opt_self(NSLayoutConstraint);
        v63 = objc_msgSend(v61, "safeAreaLayoutGuide");

        v64 = objc_msgSend(v63, "leftAnchor");
        v65 = objc_msgSend(v59, "constraintEqualToAnchor:constant:", v64, 24.0);
LABEL_15:
        v72 = v65;

        *(_QWORD *)(v51 + 40) = v72;
        v188 = (id)v51;
        specialized Array._endMutation()(v73);
        v74 = v188;
        sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v74);
        objc_msgSend(v62, "activateConstraints:", isa);
        v77 = v184;
        v76 = (uint64_t)v185;
        v78 = v151;

        v79 = v58;
        v80 = CAFUISettingsCache.rootSettings(in:visibleOnly:)(2, 1);
        sub_100011920(v147, v146, v76, v77, v148, v150, v78);
        if ((unint64_t)v80 >> 62)
        {
          if (v80 < 0)
            v144 = v80;
          else
            v144 = v80 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v80);
          v81 = _CocoaArrayWrapper.endIndex.getter(v144);
          swift_bridgeObjectRelease(v80);
        }
        else
        {
          v81 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v14 = v153;
        v16 = v149;
        swift_bridgeObjectRelease(v80);
        objc_msgSend(v79, "setHidden:", v81 == 0);

        goto LABEL_18;
      }
      goto LABEL_29;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!v53)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v66 = objc_msgSend(v53, "safeAreaLayoutGuide");

  v67 = objc_msgSend(v66, "topAnchor");
  v68 = objc_msgSend(v52, "constraintEqualToAnchor:constant:", v67, 28.0);

  *(_QWORD *)(v51 + 32) = v68;
  v58 = v40;
  v59 = objc_msgSend(v40, "rightAnchor");
  v69 = objc_msgSend(v1, "view");
  if (v69)
  {
    v70 = v69;
    v62 = (void *)objc_opt_self(NSLayoutConstraint);
    v71 = objc_msgSend(v70, "safeAreaLayoutGuide");

    v64 = objc_msgSend(v71, "rightAnchor");
    v65 = objc_msgSend(v59, "constraintEqualToAnchor:constant:", v64, -24.0);
    goto LABEL_15;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_10004DBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t result;
  void *v15;
  char *v16;
  uint64_t v17;
  _BYTE v18[24];
  _BYTE v19[24];

  v4 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for ClimateZone(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v18[-v12];
  a2 += 16;
  swift_beginAccess(a2, v19, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v15 = (void *)result;
    sub_100020FF0(a1, (uint64_t)v6);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      return sub_100008B88((uint64_t)v6, (uint64_t *)&unk_1000B7C40);
    }
    else
    {
      sub_100018D10((uint64_t)v6, (uint64_t)v13, type metadata accessor for ClimateZone);
      v16 = (char *)sub_10004A3D4();
      sub_10000AAD8((uint64_t)v13, (uint64_t)v10, type metadata accessor for ClimateZone);
      v17 = (uint64_t)&v16[OBJC_IVAR____TtC7Climate15ClimateZoneCard_zone];
      swift_beginAccess(&v16[OBJC_IVAR____TtC7Climate15ClimateZoneCard_zone], v18, 33, 0);
      sub_100018B9C((uint64_t)v10, v17);
      swift_endAccess(v18);
      sub_100076B28();
      sub_10000AB60((uint64_t)v10, type metadata accessor for ClimateZone);

      *((_BYTE *)v15 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_zoneCardActive) = 1;
      sub_10004A1BC();

      return sub_10000AB60((uint64_t)v13, type metadata accessor for ClimateZone);
    }
  }
  return result;
}

void sub_10004DD94(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10004DDEC(v2);

  }
}

void sub_10004DDEC(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  Class v10;

  if (a1 == 2)
    v2 = sub_10004A7FC();
  else
    v2 = sub_10004A818();
  v3 = v2;
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = OBJC_IVAR____TtC7Climate24ClimateAppViewController_activeConstraints;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_activeConstraints);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v6);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v4, "deactivateConstraints:", isa);

  v8 = *(_QWORD *)(v1 + v5);
  *(_QWORD *)(v1 + v5) = v3;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(v1 + v5);
  swift_bridgeObjectRetain(v9);
  v10 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v4, "activateConstraints:", v10);

}

void sub_10004DEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10004DF3C();

  }
}

void sub_10004DF3C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __n128 v20;
  __n128 v21;
  id *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  char *v38;
  char *v39;
  id v40;
  void *v41;
  char *v42;
  id v43;
  void *v44;
  id v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  id *v49;
  uint64_t v50;
  uint64_t v51;

  v1 = v0;
  v2 = type metadata accessor for ClimateSystemManager(0);
  __chkstk_darwin(v2);
  v49 = (id *)((char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100006058(&qword_1000B92F0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for ClimateAssets(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v48 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)&v48 - v12;
  v50 = OBJC_IVAR____TtC7Climate24ClimateAppViewController_carView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Climate24ClimateAppViewController_carView], "removeFromSuperview", v11);
  v14 = (uint64_t)&v0[OBJC_IVAR____TtC7Climate24ClimateAppViewController_climateSystem];
  v15 = *(char **)&v0[OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator];
  v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC7Climate18ClimateCoordinator_assetManager];
  v17 = *(_QWORD *)(v14 + *(int *)(v2 + 36));
  swift_retain(v16);
  swift_bridgeObjectRetain(v17);
  v19 = sub_10004EB88(v18);
  swift_bridgeObjectRelease(v17);
  sub_1000070D8((uint64_t)v19, v6, v20);
  v21 = swift_release(v19);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v21) == 1)
  {
    sub_100008B88((uint64_t)v6, &qword_1000B92F0);
    v22 = v49;
    sub_10000AAD8(v14, (uint64_t)v49, type metadata accessor for ClimateSystemManager);
    v23 = (char *)objc_allocWithZone((Class)type metadata accessor for ClimateCarPlaceholderView());
    v24 = sub_10004F27C(v22, (uint64_t)v15, v23);
  }
  else
  {
    sub_100018D10((uint64_t)v6, (uint64_t)v13, type metadata accessor for ClimateAssets);
    v25 = (uint64_t)v49;
    sub_10000AAD8(v14, (uint64_t)v49, type metadata accessor for ClimateSystemManager);
    v26 = v48;
    sub_10000AAD8((uint64_t)v13, v48, type metadata accessor for ClimateAssets);
    v27 = (char *)objc_allocWithZone((Class)type metadata accessor for ClimateCarView(0));
    v28 = v15;
    sub_100051654(v25, v28, v26, v27);
    v24 = v29;

    sub_10000AB60((uint64_t)v13, type metadata accessor for ClimateAssets);
  }
  swift_release(v16);
  v30 = v50;
  v31 = *(void **)&v1[v50];
  *(_QWORD *)&v1[v50] = v24;

  v32 = objc_msgSend(v1, "view");
  if (!v32)
  {
    __break(1u);
    goto LABEL_13;
  }
  v33 = v32;
  objc_msgSend(v32, "addSubview:", *(_QWORD *)&v1[v30]);

  v34 = *(void **)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton];
  if (v34)
  {
    v35 = v34;
    v36 = objc_msgSend(v1, "view");
    if (v36)
    {
      v37 = v36;
      objc_msgSend(v36, "bringSubviewToFront:", v35);

      goto LABEL_8;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_8:
  v38 = sub_10004E6C8();
  if (!v38)
  {
LABEL_11:
    KeyPath = swift_getKeyPath(&unk_10008A9D8);
    v47 = swift_getKeyPath(&unk_10008AA00);
    static Published.subscript.getter(v15, KeyPath, v47);
    swift_release(KeyPath);
    swift_release(v47);
    sub_10004DDEC(v51);
    return;
  }
  v39 = v38;
  v40 = sub_10004A3D4();
  objc_msgSend(v40, "removeFromSuperview");

  v41 = *(void **)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___zoneCard];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___zoneCard] = v39;
  v42 = v39;

  v43 = objc_msgSend(v1, "view");
  if (v43)
  {
    v44 = v43;
    v45 = sub_10004A3D4();
    objc_msgSend(v44, "addSubview:", v45);

    v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_zoneCardActive] = 1;
    sub_10004A1BC();

    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
}

void sub_10004E488(char a1)
{
  void *v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t KeyPath;
  uint64_t v11;
  double v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;

  v19.receiver = v1;
  v19.super_class = (Class)type metadata accessor for ClimateAppViewController(0);
  objc_msgSendSuper2(&v19, "viewDidAppear:", a1 & 1);
  v3 = objc_msgSend(v1, "navigationController");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setNavigationBarHidden:", 1);

  }
  v5 = (void *)objc_opt_self(UIApplication);
  v6 = objc_msgSend(v5, "sharedApplication");
  v7 = objc_msgSend(v6, "delegate");

  if (!v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0);
  v9 = sub_10006B490();
  swift_unknownObjectRelease(v7);
  KeyPath = swift_getKeyPath(&unk_10008A948);
  v11 = swift_getKeyPath(&unk_10008A970);
  static Published.subscript.getter(v9, KeyPath, v11);

  swift_release(KeyPath);
  *(_QWORD *)&v12 = swift_release(v11).n128_u64[0];
  if (v18 != 1)
    return;
  v13 = objc_msgSend(v5, "sharedApplication", v12);
  v14 = objc_msgSend(v13, "delegate");

  if (!v14)
  {
LABEL_9:
    __break(1u);
    return;
  }
  swift_dynamicCastClassUnconditional(v14, v8, 0, 0, 0);
  v15 = sub_10006B490();
  swift_unknownObjectRelease(v14);
  v16 = swift_getKeyPath(&unk_10008A990);
  v17 = swift_getKeyPath(&unk_10008A9B8);
  v18 = 0;
  static Published.subscript.setter(&v18, v15, v16, v17);
}

char *sub_10004E6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  char *v15;
  char *v16;
  id v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD v27[3];
  uint64_t v28;
  _UNKNOWN **v29;

  v1 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v1);
  v3 = (char *)&v27[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ClimateZone(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27[-1] - v9;
  v11 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator);
  KeyPath = swift_getKeyPath(&unk_10008AA20);
  v13 = swift_getKeyPath(&unk_10008AA48);
  static Published.subscript.getter(v11, KeyPath, v13);
  swift_release(KeyPath);
  v14 = swift_release(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v14) == 1)
  {
    sub_100008B88((uint64_t)v3, (uint64_t *)&unk_1000B7C40);
    *(_BYTE *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_zoneCardActive) = 0;
    sub_10004A1BC();
    return 0;
  }
  else
  {
    sub_100018D10((uint64_t)v3, (uint64_t)v10, type metadata accessor for ClimateZone);
    sub_10000AAD8((uint64_t)v10, (uint64_t)v7, type metadata accessor for ClimateZone);
    v16 = (char *)swift_allocObject(&unk_10009F920, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16, v0);
    v28 = type metadata accessor for ClimateCoordinator(0);
    v29 = &off_10009E948;
    v27[0] = v11;
    v17 = objc_allocWithZone((Class)type metadata accessor for ClimateZoneCard(0));
    v18 = sub_1000525CC((uint64_t)v27, v28);
    v19 = __chkstk_darwin(v18);
    v21 = (_QWORD *)((char *)&v27[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v22 + 16))(v21, v19);
    v23 = *v21;
    v24 = v11;
    swift_retain(v16);
    v15 = sub_1000504CC((uint64_t)v7, v23, (uint64_t)sub_1000525B4, v16, v17);
    swift_release(v16);
    sub_100018B40(v27);

    sub_10000AB60((uint64_t)v10, type metadata accessor for ClimateZone);
    swift_release(v16);
  }
  return v15;
}

void sub_10004E958(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  _BYTE v16[24];

  v3 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v16[-v7 - 8];
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (char *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC7Climate24ClimateAppViewController_zoneCardActive) = 0;
    sub_10004A1BC();
    v11 = *(void **)&v10[OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator];
    v12 = type metadata accessor for ClimateZone(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
    KeyPath = swift_getKeyPath(&unk_10008AA20);
    v14 = swift_getKeyPath(&unk_10008AA48);
    sub_100020FF0((uint64_t)v8, (uint64_t)v5);
    static Published.subscript.setter(v5, v11, KeyPath, v14);
    sub_100008B88((uint64_t)v8, (uint64_t *)&unk_1000B7C40);

  }
}

uint64_t sub_10004EAA0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10008A9D8);
  v5 = swift_getKeyPath(&unk_10008AA00);
  static Published.subscript.getter(v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10004EB1C(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10008A9D8);
  v5 = swift_getKeyPath(&unk_10008AA00);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

_QWORD *sub_10004EB88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100006058((uint64_t *)&unk_1000B7FE0);
  v4 = *(_QWORD *)(type metadata accessor for CAUVehicleLayoutKey(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      v11 = sub_10004EF2C(&v13, (uint64_t)v8 + v7, v1, a1);
      v12 = v13;
      swift_bridgeObjectRetain(a1);
      sub_10005262C(v12);
      if (v11 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_10004ECA0(uint64_t a1)
{
  return sub_10004ECAC(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_100075FE8);
}

_QWORD *sub_10004ECAC(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t, uint64_t, __n128))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_100006058((uint64_t *)&unk_1000B7590);
      v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }
    v9 = swift_bridgeObjectRetain(a1);
    v10 = a2(v6 + 4, v4, a1, v9);
    a2 = v11;
    swift_bridgeObjectRelease(v10);
    if (a2 == (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))v4)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a1);
    if (!v4)
      return _swiftEmptyArrayStorage;
  }
  return v6;
}

_QWORD *sub_10004EDAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 8 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_100006058((uint64_t *)&unk_1000B7590);
  v10 = (_QWORD *)swift_allocObject(v9, v8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 25;
  v10[2] = v5;
  v10[3] = (2 * (v12 >> 3)) | 1;
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = a2 + 8 * a3;
  if (v13 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)(v10 + 4) >= v13 + v8)
  {
    type metadata accessor for ClimateButton();
    swift_arrayInitWithCopy(v10 + 4);
    return v10;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_10004EF2C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = type metadata accessor for CAUVehicleLayoutKey(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 32);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 48) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10004F1F4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

char *sub_10004F27C(id *a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, _QWORD, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  Class isa;
  char *v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  char *v89;
  id *v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  objc_super v94;

  v88 = (void *)a2;
  v5 = type metadata accessor for ClimateSystemManager(0);
  __chkstk_darwin(v5);
  v86 = (uint64_t)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC7Climate25ClimateCarPlaceholderView_carView;
  sub_100006B04(0, &qword_1000B7D98, UIStackView_ptr);
  v8 = a3;
  *(_QWORD *)&a3[v7] = UIStackView.init(axis:spacing:arrangedSubviews:)(1, _swiftEmptyArrayStorage, 5.0);

  v9 = (objc_class *)type metadata accessor for ClimateCarPlaceholderView();
  v94.receiver = v8;
  v94.super_class = v9;
  v10 = (char *)objc_msgSendSuper2(&v94, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v93 = (uint64_t)_swiftEmptyArrayStorage;
  v11 = OBJC_IVAR____TtC7Climate25ClimateCarPlaceholderView_carView;
  v12 = *(void **)&v10[OBJC_IVAR____TtC7Climate25ClimateCarPlaceholderView_carView];
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v12, "setDistribution:", 2);
  objc_msgSend(v12, "setAlignment:", 3);
  v13 = qword_1000B6F80;
  v14 = v12;
  if (v13 != -1)
    swift_once(&qword_1000B6F80, sub_10003F05C);
  objc_msgSend(v14, "setLayoutMargins:", *(double *)&qword_1000BC870, *(double *)algn_1000BC878, *(double *)&qword_1000BC880, unk_1000BC888);

  v15 = *(void **)&v10[v11];
  objc_msgSend(v15, "setLayoutMarginsRelativeArrangement:", 1);
  v16 = qword_1000B6F78;
  v17 = v15;
  if (v16 != -1)
    swift_once(&qword_1000B6F78, sub_10003EFF4);
  objc_msgSend(v17, "setBackgroundColor:", qword_1000BC868);

  v18 = objc_msgSend(*(id *)&v10[v11], "layer");
  objc_msgSend(v18, "setCornerRadius:", 18.0);

  v19 = objc_msgSend(*(id *)&v10[v11], "layer");
  objc_msgSend(v19, "setCornerCurve:", kCACornerCurveContinuous);

  v90 = a1;
  v20 = objc_msgSend(*a1, "vehicleResources");
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, "vehicleInformation");

    if (v22)
    {
      v23 = objc_msgSend(v22, "vehicleUserVisibleLabel");

      static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v25 = v24;

      v26 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
      objc_msgSend(v26, "setTextAlignment:", 1);
      v27 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:variant:", UIFontTextStyleCaption2, 1024);
      objc_msgSend(v26, "setFont:", v27);

      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
      objc_msgSend(v26, "setText:", v28);

      objc_msgSend(*(id *)&v10[v11], "addArrangedSubview:", v26);
    }
  }
  v87 = v11;
  v29 = sub_100006058((uint64_t *)&unk_1000B7FE0);
  v30 = type metadata accessor for CAUVehicleLayoutKey(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 72);
  v33 = *(unsigned __int8 *)(v31 + 80);
  v34 = (v33 + 32) & ~v33;
  v35 = v33 | 7;
  v84 = v29;
  v36 = swift_allocObject(v29, v34 + 4 * v32, v33 | 7);
  v91 = xmmword_100089670;
  v85 = v36;
  *(_OWORD *)(v36 + 16) = xmmword_100089670;
  v37 = v36 + v34;
  v38 = *(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104);
  v38(v36 + v34, enum case for CAUVehicleLayoutKey.seat_front_left(_:), v30);
  v38(v37 + v32, enum case for CAUVehicleLayoutKey.seat_front_middle(_:), v30);
  v38(v37 + 2 * v32, enum case for CAUVehicleLayoutKey.seat_front_right(_:), v30);
  v89 = v10;
  v38(v37 + 3 * v32, enum case for CAUVehicleLayoutKey.seat_front(_:), v30);
  v39 = swift_allocObject(v29, v34 + 4 * v32, v35);
  *(_OWORD *)(v39 + 16) = v91;
  v38(v39 + v34, enum case for CAUVehicleLayoutKey.seat_2ndRow_left(_:), v30);
  v38(v39 + v34 + v32, enum case for CAUVehicleLayoutKey.seat_2ndRow_middle(_:), v30);
  v38(v39 + v34 + 2 * v32, enum case for CAUVehicleLayoutKey.seat_2ndRow_right(_:), v30);
  v38(v39 + v34 + 3 * v32, enum case for CAUVehicleLayoutKey.seat_2ndRow(_:), v30);
  v40 = swift_allocObject(v84, v34 + 4 * v32, v35);
  *(_OWORD *)(v40 + 16) = v91;
  v38(v40 + v34, enum case for CAUVehicleLayoutKey.seat_3rdRow_left(_:), v30);
  v38(v40 + v34 + v32, enum case for CAUVehicleLayoutKey.seat_3rdRow_middle(_:), v30);
  v38(v40 + v34 + 2 * v32, enum case for CAUVehicleLayoutKey.seat_3rdRow_right(_:), v30);
  v41 = v89;
  v38(v40 + v34 + 3 * v32, enum case for CAUVehicleLayoutKey.seat_3rdRow(_:), v30);
  v42 = v86;
  sub_10000AAD8((uint64_t)v90, v86, type metadata accessor for ClimateSystemManager);
  v43 = v85;
  v92 = v85;
  v44 = v88;
  sub_10003E4E0(&v92, v42, (uint64_t)v88, (uint64_t)&off_10009E978, (uint64_t)v41);
  swift_bridgeObjectRelease(v43);
  v92 = v39;
  sub_10003E4E0(&v92, v42, (uint64_t)v44, (uint64_t)&off_10009E978, (uint64_t)v41);
  swift_bridgeObjectRelease(v39);
  v92 = v40;
  sub_10003E4E0(&v92, v42, (uint64_t)v44, (uint64_t)&off_10009E978, (uint64_t)v41);
  swift_bridgeObjectRelease(v40);
  sub_10000AB60(v42, type metadata accessor for ClimateSystemManager);
  v45 = v87;
  v46 = *(void **)&v41[v87];
  objc_msgSend(v41, "addSubview:", v46);
  v47 = objc_msgSend(v46, "topAnchor");
  v48 = objc_msgSend(v41, "topAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, 35.0);

  v50 = objc_msgSend(*(id *)&v41[v45], "leftAnchor");
  v51 = objc_msgSend(v41, "leftAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v51, 40.0);

  v53 = objc_msgSend(*(id *)&v41[v45], "rightAnchor");
  v54 = objc_msgSend(v41, "rightAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:constant:", v54, -40.0);

  v56 = objc_msgSend(*(id *)&v41[v45], "bottomAnchor");
  v57 = objc_msgSend(v41, "bottomAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:constant:", v57, -5.0);

  v59 = v93;
  if ((unint64_t)v93 >> 62)
  {
    if (v93 < 0)
      v82 = v93;
    else
      v82 = v93 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v93);
    v61 = _CocoaArrayWrapper.endIndex.getter(v82);
    swift_bridgeObjectRelease(v59);
    v62 = v61 + 4;
    if (!__OFADD__(v61, 4))
    {
LABEL_10:
      v63 = sub_1000761FC(v62, 1);
      specialized Array._endMutation()(v63);
      v49 = v49;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
      v61 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v60 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v61 < v60 >> 1)
        goto LABEL_11;
      goto LABEL_24;
    }
  }
  else
  {
    v60 = v93 & 0xFFFFFFFFFFFFF8;
    v61 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10);
    v62 = v61 + 4;
    if (!__OFADD__(v61, 4))
      goto LABEL_10;
  }
  __break(1u);
LABEL_24:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1);
LABEL_11:
  v64 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v49);
  specialized Array._endMutation()(v64);
  v65 = v52;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
  v67 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v66 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v67 >= v66 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
  v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v65);
  specialized Array._endMutation()(v68);
  v69 = v55;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
  v71 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v70 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v71 >= v70 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v70 > 1, v71 + 1, 1);
  v72 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v71, v69);
  specialized Array._endMutation()(v72);
  v73 = v58;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v73);
  v75 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v74 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v75 >= v74 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v74 > 1, v75 + 1, 1);
  v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v75, v73);
  specialized Array._endMutation()(v76);

  v77 = (void *)objc_opt_self(NSLayoutConstraint);
  v78 = v93;
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v78);
  objc_msgSend(v77, "activateConstraints:", isa);

  v80 = v89;
  sub_10000AB60((uint64_t)v90, type metadata accessor for ClimateSystemManager);
  return v80;
}

uint64_t sub_10004FC88(uint64_t a1, void *a2, id a3, char *a4)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  objc_class *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  Class isa;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  char v62[16];
  id v63;
  void *v64;
  _UNKNOWN **v65;
  uint64_t v66;
  objc_super v67;

  v7 = a1;
  *(_QWORD *)&a4[OBJC_IVAR____TtC7Climate20ClimatePositionViews_scale] = 0x3FF0000000000000;
  *(_QWORD *)&a4[OBJC_IVAR____TtC7Climate20ClimatePositionViews____lazy_storage___heightConstraint] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC7Climate20ClimatePositionViews____lazy_storage___widthConstraint] = 0;
  sub_10000AAD8(a1, (uint64_t)&a4[OBJC_IVAR____TtC7Climate20ClimatePositionViews_climateSystem], type metadata accessor for ClimateSystemManager);
  v8 = &a4[OBJC_IVAR____TtC7Climate20ClimatePositionViews_activeZoneTracker];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = &off_10009E978;
  sub_10000AAD8((uint64_t)a3, (uint64_t)&a4[OBJC_IVAR____TtC7Climate20ClimatePositionViews_assets], type metadata accessor for ClimateAssets);
  v63 = a3;
  v64 = a2;
  v65 = &off_10009E978;
  v9 = *(_QWORD *)(v7 + *(int *)(type metadata accessor for ClimateSystemManager(0) + 36));
  v10 = a4;
  v11 = a2;
  swift_bridgeObjectRetain(v9);
  v13 = sub_100050240(v12, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1000525A0, (uint64_t)v62);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)&v10[OBJC_IVAR____TtC7Climate20ClimatePositionViews_positions] = v13;

  v14 = (objc_class *)type metadata accessor for ClimatePositionViews(0);
  v67.receiver = v10;
  v67.super_class = v14;
  v15 = (char *)objc_msgSendSuper2(&v67, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = sub_100006058((uint64_t *)&unk_1000B7590);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100088C40;
  *(_QWORD *)(v17 + 32) = sub_1000694A8((__n128)xmmword_100088C40);
  v19 = sub_1000694C4(v18);
  *(_QWORD *)(v17 + 40) = v19;
  v66 = v17;
  specialized Array._endMutation()(v19);
  v20 = (void *)v66;
  v61 = v15;
  v21 = *(_QWORD *)&v15[OBJC_IVAR____TtC7Climate20ClimatePositionViews_positions];
  if ((unint64_t)v21 >> 62)
    goto LABEL_42;
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n(v21, 2);
  if (v22)
  {
    do
    {
      if (v22 < 1)
      {
        __break(1u);
        return result;
      }
      v55 = v11;
      v56 = v7;
      v57 = a3;
      v58 = v22;
      v24 = 0;
      v59 = v21;
      v60 = v21 & 0xC000000000000001;
      while (1)
      {
        v25 = v60
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v21)
            : *(id *)(v21 + 8 * v24 + 32);
        v26 = v25;
        objc_msgSend(v61, "addSubview:", v25);
        v20 = (void *)sub_10006508C();
        v27 = (void *)sub_1000650AC();
        a3 = sub_100065234();
        v28 = sub_100065250();
        v29 = v66;
        v11 = (id)((unint64_t)v66 >> 62);
        if ((unint64_t)v66 >> 62)
          break;
        v21 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
        v7 = v21 + 4;
        if (__OFADD__(v21, 4))
          goto LABEL_41;
LABEL_10:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v29);
        v31 = 0;
        if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v29 < 0 || (v29 & 0x4000000000000000) != 0)
          goto LABEL_15;
        if (v7 > *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
          v31 = 1;
LABEL_15:
          if (v11)
          {
            if (v29 < 0)
              v51 = v29;
            else
              v51 = v29 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v29);
            v32 = _CocoaArrayWrapper.endIndex.getter(v51);
            swift_bridgeObjectRelease(v29);
          }
          else
          {
            v32 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v32 <= v7)
            v33 = v7;
          else
            v33 = v32;
          isUniquelyReferenced_nonNull_bridgeObject = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v31, v33, 1, v29);
          v66 = isUniquelyReferenced_nonNull_bridgeObject;
        }
        specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
        v34 = v20;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
        v36 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v35 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v36 >= v35 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
        v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
        specialized Array._endMutation()(v37);
        v38 = v27;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
        v40 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v39 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v40 >= v39 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
        v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
        specialized Array._endMutation()(v41);
        v42 = a3;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
        v44 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v43 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v44 >= v43 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
        v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
        specialized Array._endMutation()(v45);
        v46 = v28;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
        v48 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v47 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v48 >= v47 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
        ++v24;
        v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v46);
        specialized Array._endMutation()(v49);

        v21 = v59;
        if (v58 == v24)
        {
          swift_bridgeObjectRelease_n(v59, 2);
          v20 = (void *)v66;
          v7 = v56;
          a3 = v57;
          v11 = v55;
          goto LABEL_47;
        }
      }
      if (v66 < 0)
        v50 = v66;
      else
        v50 = v66 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v66);
      v21 = _CocoaArrayWrapper.endIndex.getter(v50);
      swift_bridgeObjectRelease(v29);
      v7 = v21 + 4;
      if (!__OFADD__(v21, 4))
        goto LABEL_10;
LABEL_41:
      __break(1u);
LABEL_42:
      if (v21 < 0)
        v52 = v21;
      else
        v52 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v21, 2);
      result = _CocoaArrayWrapper.endIndex.getter(v52);
      v22 = result;
    }
    while (result);
  }
  swift_bridgeObjectRelease_n(v21, 2);
LABEL_47:
  v53 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v20);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v53, "activateConstraints:", isa);

  sub_10000AB60(v7, type metadata accessor for ClimateSystemManager);
  sub_10000AB60((uint64_t)a3, type metadata accessor for ClimateAssets);
  swift_bridgeObjectRelease(v66);
  return (uint64_t)v61;
}

_QWORD *sub_100050240(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t *__return_ptr, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  v37 = a2;
  v38 = a3;
  v5 = type metadata accessor for ClimateZone(0);
  v36 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v34 = (uint64_t)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v35 = (uint64_t)v30 - v8;
  v9 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v9)
  {
    v30[1] = v3;
    v41 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v9);
    result = (_QWORD *)sub_10004F1F4(a1);
    v11 = (uint64_t)result;
    v13 = v12;
    v14 = 0;
    v15 = a1 + 64;
    v31 = a1 + 80;
    v32 = v9;
    v33 = a1;
    while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(a1 + 32))
    {
      v17 = (unint64_t)v11 >> 6;
      if ((*(_QWORD *)(v15 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != v13)
        goto LABEL_23;
      v39 = v14;
      v18 = v35;
      sub_10000AAD8(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v36 + 72) * v11, v35, type metadata accessor for ClimateZone);
      v19 = v34;
      sub_100018D10(v18, v34, type metadata accessor for ClimateZone);
      v37(&v40, v19);
      v20 = v40;
      v21 = sub_10000AB60(v19, type metadata accessor for ClimateZone);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v22 = v41[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
      v23 = v22;
      a1 = v33;
      v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v20);
      result = (_QWORD *)specialized ContiguousArray._endMutation()(v24);
      v16 = 1 << *(_BYTE *)(a1 + 32);
      if (v11 >= v16)
        goto LABEL_24;
      v25 = *(_QWORD *)(v15 + 8 * v17);
      if ((v25 & (1 << v11)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(a1 + 36) != v13)
        goto LABEL_26;
      v26 = v25 & (-2 << (v11 & 0x3F));
      if (v26)
      {
        v16 = __clz(__rbit64(v26)) | v11 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = v17 + 1;
        v28 = (unint64_t)(v16 + 63) >> 6;
        if (v17 + 1 < v28)
        {
          v29 = *(_QWORD *)(v15 + 8 * v27);
          if (v29)
          {
LABEL_18:
            v16 = __clz(__rbit64(v29)) + (v27 << 6);
          }
          else
          {
            while (v28 - 2 != v17)
            {
              v29 = *(_QWORD *)(v31 + 8 * v17++);
              if (v29)
              {
                v27 = v17 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v14 = v39 + 1;
      v11 = v16;
      if (v39 + 1 == v32)
        return v41;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

char *sub_1000504CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  char *v12;
  id v13;
  objc_class *v14;
  id v15;
  id v16;
  char *v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  id v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  __objc2_prot **v47;
  id v48;
  id v49;
  id v50;
  char *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  id v57;
  id v58;
  _QWORD *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  id v66;
  char v67;
  char v68;
  char v69;
  id v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  id v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  id v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  id v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  id v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  id v124;
  id v125;
  __objc2_prot **v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  id v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  id v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  id v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  id v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  Class isa;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  id v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  char v183[24];
  char v184[24];
  uint64_t v185;
  objc_super v186;
  objc_super v187;
  _QWORD v188[3];
  uint64_t v189;
  _UNKNOWN **v190;

  v180 = a3;
  v181 = a4;
  v8 = type metadata accessor for ClimateZone(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v176 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for ClimateCoordinator(0);
  v190 = &off_10009E948;
  v188[0] = a2;
  sub_10000AAD8(a1, (uint64_t)a5 + OBJC_IVAR____TtC7Climate15ClimateZoneCard_zone, type metadata accessor for ClimateZone);
  v11 = objc_allocWithZone((Class)UILabel);
  v12 = a5;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Climate15ClimateZoneCard_zoneLabel] = v13;
  sub_10000AAD8(a1, (uint64_t)v10, type metadata accessor for ClimateZone);
  v14 = (objc_class *)type metadata accessor for ClimateZoneControls(0);
  v15 = objc_allocWithZone(v14);
  sub_10000AAD8((uint64_t)v10, (uint64_t)v15 + OBJC_IVAR____TtC7Climate19ClimateZoneControls_zone, type metadata accessor for ClimateZone);
  v16 = objc_allocWithZone((Class)type metadata accessor for ClimateGrid());
  v17 = (char *)v15;
  v18 = objc_msgSend(v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate19ClimateZoneControls_zoneViews] = v18;

  v187.receiver = v17;
  v187.super_class = v14;
  v19 = (char *)objc_msgSendSuper2(&v187, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC7Climate19ClimateZoneControls_zoneViews]);
  sub_1000403F8();
  v21 = v20;
  sub_1000674C4(v20);
  swift_bridgeObjectRelease(v21);
  sub_1000683DC();

  sub_10000AB60((uint64_t)v10, type metadata accessor for ClimateZone);
  *(_QWORD *)&v12[OBJC_IVAR____TtC7Climate15ClimateZoneCard_servicesGrid] = v19;

  v22 = (objc_class *)type metadata accessor for ClimateZoneCard(0);
  v186.receiver = v12;
  v186.super_class = v22;
  v23 = objc_msgSendSuper2(&v186, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v24 = (void *)objc_opt_self(UIColor);
  v25 = v23;
  v179 = v24;
  v26 = objc_msgSend(v24, "clearColor");
  objc_msgSend(v25, "setBackgroundColor:", v26);

  sub_100076CE8();
  v27 = OBJC_IVAR____TtC7Climate15ClimateZoneCard_zoneLabel;
  objc_msgSend(*(id *)((char *)v25 + OBJC_IVAR____TtC7Climate15ClimateZoneCard_zoneLabel), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v25, "addSubview:", *(_QWORD *)((char *)v25 + v27));
  v28 = *(id *)((char *)v25 + v27);
  v182 = a1;
  sub_100040298();
  v30 = v29;
  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  objc_msgSend(v28, "setText:", v31);

  v32 = *(void **)((char *)v25 + v27);
  v33 = (void *)objc_opt_self(UIFont);
  v34 = v32;
  v35 = objc_msgSend(v33, "systemFontOfSize:weight:", 16.0, UIFontWeightSemibold);
  objc_msgSend(v34, "setFont:", v35);

  v36 = *(void **)((char *)v25 + v27);
  v37 = *sub_10003C688(v188, v189);
  KeyPath = swift_getKeyPath(&unk_10008A948);
  v39 = swift_getKeyPath(&unk_10008A970);
  v40 = v36;
  static Published.subscript.getter(v37, KeyPath, v39);
  swift_release(KeyPath);
  *(_QWORD *)&v41 = swift_release(v39).n128_u64[0];
  objc_msgSend(v40, "setTextAlignment:", v184[0] != 0, v41);

  v42 = OBJC_IVAR____TtC7Climate15ClimateZoneCard_servicesGrid;
  objc_msgSend(v25, "addSubview:", *(_QWORD *)((char *)v25 + OBJC_IVAR____TtC7Climate15ClimateZoneCard_servicesGrid));
  v185 = (uint64_t)_swiftEmptyArrayStorage;
  v43 = *sub_10003C688(v188, v189);
  v44 = swift_getKeyPath(&unk_10008A948);
  v45 = swift_getKeyPath(&unk_10008A970);
  static Published.subscript.getter(v43, v44, v45);
  swift_release(v44);
  *(_QWORD *)&v46 = swift_release(v45).n128_u64[0];
  v47 = &off_1000AA000;
  if (v184[0])
  {
    v48 = objc_msgSend(*(id *)((char *)v25 + v27), "centerXAnchor", v46);
    v49 = objc_msgSend(v25, "centerXAnchor");
    v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

    v51 = (char *)v50;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
    v53 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v52 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v53 >= v52 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
    v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
    specialized Array._endMutation()(v54);
    goto LABEL_32;
  }
  v178 = (char *)v27;
  v177 = v42;
  v55 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimateButton()), "init");
  objc_msgSend(v55, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v25, "addSubview:", v55);
  v56 = v179;
  v57 = objc_msgSend(v179, "clearColor");
  v58 = objc_msgSend(v56, "labelColor");
  v59 = (_QWORD *)((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v60 = *(void **)((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v61 = *(void **)((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v62 = *(_QWORD *)((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  *v59 = v57;
  v59[1] = v58;
  v59[2] = &_swiftEmptyDictionarySingleton;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v63 = v57;
  v64 = v58;
  swift_bridgeObjectRetain(&_swiftEmptyDictionarySingleton);
  v65 = v63;
  v66 = v64;
  if ((static NSObject.== infix(_:_:)(v65) & 1) == 0 || (static NSObject.== infix(_:_:)(v66) & 1) == 0)
  {
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

    goto LABEL_10;
  }
  sub_10005B490((uint64_t)&_swiftEmptyDictionarySingleton, v62);
  v68 = v67;
  swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

  if ((v68 & 1) == 0)
LABEL_10:
    (*(void (**)(void))((swift_isaMask & *v55) + 0x230))();

  swift_bridgeObjectRelease(v62);
  v69 = *((_BYTE *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial);
  *((_BYTE *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial) = 1;
  if ((v69 & 1) == 0)
  {
    v70 = objc_msgSend(*(id *)((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView), "removeFromSuperview");
    (*(void (**)(id))((swift_isaMask & *v55) + 0x230))(v70);
  }
  v71 = (_QWORD *)((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
  swift_beginAccess((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v184, 1, 0);
  v72 = *v71;
  v73 = v71[1];
  *v71 = 0xD000000000000011;
  v71[1] = 0x800000010008DF50;
  v75 = v180;
  v74 = v181;
  if (!v73
    || (v72 != 0xD000000000000011 || v73 != 0x800000010008DF50)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000010008DF50, v72, v73, 0) & 1) == 0)
  {
    ClimateButton.updateClimateConfiguration()();
  }
  swift_bridgeObjectRelease(v73);
  v76 = *(_QWORD *)((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityIdentifierModifier + 8);
  *(_OWORD *)((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityIdentifierModifier) = xmmword_10008A8B0;
  swift_bridgeObjectRelease(v76);
  sub_10005A0F0();
  v77 = swift_allocObject(&unk_10009F970, 24, 7);
  swift_unknownObjectWeakInit(v77 + 16, v25);
  v78 = (_QWORD *)swift_allocObject(&unk_10009F998, 40, 7);
  v78[2] = v77;
  v78[3] = v75;
  v78[4] = v74;
  v79 = (_QWORD *)((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_action);
  swift_beginAccess((char *)v55 + OBJC_IVAR____TtC7Climate13ClimateButton_action, v183, 1, 0);
  v80 = *v79;
  v81 = v79[1];
  *v79 = (uint64_t)sub_100052620;
  v79[1] = (uint64_t)v78;
  swift_retain(v74);
  sub_100005118(v80, v81);
  v82 = objc_msgSend(v55, "heightAnchor");
  v181 = objc_msgSend(v82, "constraintEqualToConstant:", 30.0);

  v83 = objc_msgSend(v55, "widthAnchor");
  v84 = objc_msgSend(v55, "heightAnchor");
  v85 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

  v86 = objc_msgSend(v55, "trailingAnchor");
  v87 = objc_msgSend(v25, "trailingAnchor");
  v88 = objc_msgSend(v86, "constraintEqualToAnchor:constant:", v87, -20.0);

  v89 = objc_msgSend(v55, "centerYAnchor");
  v51 = v178;
  v90 = objc_msgSend(*(id *)&v178[(_QWORD)v25], "centerYAnchor");
  v91 = objc_msgSend(v89, "constraintEqualToAnchor:", v90);

  v92 = objc_msgSend(*(id *)&v51[(_QWORD)v25], "leadingAnchor");
  v93 = objc_msgSend(v25, "leadingAnchor");
  v94 = objc_msgSend(v92, "constraintEqualToAnchor:constant:", v93, 20.0);

  v95 = objc_msgSend(*(id *)&v51[(_QWORD)v25], "trailingAnchor");
  v96 = objc_msgSend(v25, "trailingAnchor");
  v97 = objc_msgSend(v95, "constraintLessThanOrEqualToAnchor:constant:", v96, -20.0);

  v98 = v185;
  if (!((unint64_t)v185 >> 62))
  {
    v99 = v185 & 0xFFFFFFFFFFFFF8;
    v100 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFF8) + 0x10);
    v101 = v100 + 6;
    if (!__OFADD__(v100, 6))
      goto LABEL_20;
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (v185 < 0)
    v174 = v185;
  else
    v174 = v185 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v185);
  v175 = _CocoaArrayWrapper.endIndex.getter(v174);
  swift_bridgeObjectRelease(v98);
  v101 = v175 + 6;
  if (__OFADD__(v175, 6))
    goto LABEL_58;
LABEL_20:
  v102 = sub_1000761FC(v101, 1);
  specialized Array._endMutation()(v102);
  v51 = (char *)v181;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
  v98 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v99 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v98 >= v99 >> 1)
LABEL_59:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v99 > 1, v98 + 1, 1);
  v103 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v51);
  specialized Array._endMutation()(v103);
  v104 = v85;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v104);
  v106 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v105 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v106 >= v105 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v105 > 1, v106 + 1, 1);
  v107 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v106, v104);
  specialized Array._endMutation()(v107);
  v108 = v88;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v108);
  v110 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v109 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v110 >= v109 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v109 > 1, v110 + 1, 1);
  v111 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v110, v108);
  specialized Array._endMutation()(v111);
  v112 = v91;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v112);
  v114 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v113 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v114 >= v113 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v113 > 1, v114 + 1, 1);
  v115 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v114, v112);
  specialized Array._endMutation()(v115);
  v116 = v94;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v116);
  v118 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v117 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v118 >= v117 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v117 > 1, v118 + 1, 1);
  v119 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v118, v116);
  specialized Array._endMutation()(v119);
  v120 = v97;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v120);
  v122 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v121 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v122 >= v121 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v121 > 1, v122 + 1, 1);
  v123 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v122, v120);
  specialized Array._endMutation()(v123);

  v42 = v177;
  v27 = (uint64_t)v178;
  v47 = &off_1000AA000;
LABEL_32:

  v124 = objc_msgSend(*(id *)((char *)v25 + v27), "topAnchor");
  v125 = objc_msgSend(v25, "topAnchor");
  v126 = &off_1000AA000;
  v181 = objc_msgSend(v124, "constraintEqualToAnchor:constant:", v125, 9.0);

  v127 = objc_msgSend(*(id *)((char *)v25 + v27), "firstBaselineAnchor");
  v128 = objc_msgSend(v25, "topAnchor");
  v129 = objc_msgSend(v127, "constraintEqualToAnchor:constant:", v128, 28.0);

  v130 = objc_msgSend(*(id *)((char *)v25 + v42), "topAnchor");
  v131 = objc_msgSend(v25, "topAnchor");
  v132 = objc_msgSend(v130, "constraintEqualToAnchor:constant:", v131, 38.0);

  v133 = objc_msgSend(*(id *)((char *)v25 + v42), "bottomAnchor");
  v134 = objc_msgSend(v25, "bottomAnchor");
  v135 = objc_msgSend(v133, "constraintEqualToAnchor:", v134);

  v136 = objc_msgSend(*(id *)((char *)v25 + v42), (SEL)v47[227]);
  v137 = objc_msgSend(v25, (SEL)v47[227]);
  v138 = objc_msgSend(v136, "constraintEqualToAnchor:", v137);

  v139 = objc_msgSend(*(id *)((char *)v25 + v42), "trailingAnchor");
  v140 = objc_msgSend(v25, "trailingAnchor");
  v141 = objc_msgSend(v139, "constraintEqualToAnchor:", v140);

  v142 = v185;
  if ((unint64_t)v185 >> 62)
  {
    if (v185 < 0)
      v172 = v185;
    else
      v172 = v185 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v185);
    v173 = _CocoaArrayWrapper.endIndex.getter(v172);
    swift_bridgeObjectRelease(v142);
    v145 = v173 + 6;
    if (!__OFADD__(v173, 6))
    {
LABEL_34:
      v146 = sub_1000761FC(v145, 1);
      specialized Array._endMutation()(v146);
      v126 = (__objc2_prot **)v181;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v126);
      v142 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v143 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v142 < v143 >> 1)
        goto LABEL_35;
      goto LABEL_52;
    }
  }
  else
  {
    v143 = v185 & 0xFFFFFFFFFFFFF8;
    v144 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFF8) + 0x10);
    v145 = v144 + 6;
    if (!__OFADD__(v144, 6))
      goto LABEL_34;
  }
  __break(1u);
LABEL_52:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v143 > 1, v142 + 1, 1);
LABEL_35:
  v147 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v142, v126);
  specialized Array._endMutation()(v147);
  v148 = v129;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v148);
  v150 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v149 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v150 >= v149 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v149 > 1, v150 + 1, 1);
  v151 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v150, v148);
  specialized Array._endMutation()(v151);
  v152 = v132;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v152);
  v154 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v153 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v154 >= v153 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v153 > 1, v154 + 1, 1);
  v155 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v154, v152);
  specialized Array._endMutation()(v155);
  v156 = v135;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v156);
  v158 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v157 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v158 >= v157 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v157 > 1, v158 + 1, 1);
  v159 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v158, v156);
  specialized Array._endMutation()(v159);
  v160 = v138;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v160);
  v162 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v161 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v162 >= v161 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v161 > 1, v162 + 1, 1);
  v163 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v162, v160);
  specialized Array._endMutation()(v163);
  v164 = v141;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v164);
  v166 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v165 = *(_QWORD *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v166 >= v165 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v165 > 1, v166 + 1, 1);
  v167 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v166, v164);
  specialized Array._endMutation()(v167);

  v168 = (void *)objc_opt_self(NSLayoutConstraint);
  v169 = v185;
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v169);
  objc_msgSend(v168, "activateConstraints:", isa);

  sub_10000AB60(v182, type metadata accessor for ClimateZone);
  sub_100018B40(v188);
  return (char *)v25;
}

void sub_100051654(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  char *v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  objc_class *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  __objc2_prot **v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  id v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void *v71;
  unint64_t v72;
  Class isa;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  id v83;
  id v84;
  uint64_t v85;
  id v86;
  uint64_t KeyPath;
  uint64_t v88;
  _BOOL8 v89;
  uint64_t v90;
  char *v91;
  _BOOL8 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  char *v99;
  __n128 v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  id v118[3];
  unint64_t v119;
  objc_super v120;

  v116 = a1;
  v117 = a3;
  v6 = sub_100006058((uint64_t *)&unk_1000B7B60);
  __chkstk_darwin(v6);
  v113 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100006058(&qword_1000B9290);
  v112 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v111 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006058(&qword_1000B92F8);
  v104 = *(_QWORD *)(v9 - 8);
  v105 = v9;
  __chkstk_darwin(v9);
  v115 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006058(&qword_1000B9300);
  v107 = *(_QWORD *)(v11 - 8);
  v108 = v11;
  __chkstk_darwin(v11);
  v106 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ClimateAssets(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ClimateSystemManager(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OBJC_IVAR____TtC7Climate14ClimateCarView_carImageView;
  v20 = objc_allocWithZone((Class)UIImageView);
  v21 = a4;
  *(_QWORD *)&a4[v19] = objc_msgSend(v20, "init");
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v22 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v22 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate14ClimateCarView_cancellables] = v22;
  v21[OBJC_IVAR____TtC7Climate14ClimateCarView_hasAlreadyLayout] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate14ClimateCarView_imageActiveHeightConstraint] = _swiftEmptyArrayStorage;
  v23 = v116;
  sub_10000AAD8(v116, (uint64_t)&v21[OBJC_IVAR____TtC7Climate14ClimateCarView_climateSystem], type metadata accessor for ClimateSystemManager);
  v24 = &v21[OBJC_IVAR____TtC7Climate14ClimateCarView_activeZoneTracker];
  *(_QWORD *)v24 = a2;
  *((_QWORD *)v24 + 1) = &off_10009E978;
  v25 = v117;
  sub_10000AAD8(v117, (uint64_t)&v21[OBJC_IVAR____TtC7Climate14ClimateCarView_assets], type metadata accessor for ClimateAssets);
  sub_10000AAD8(v23, (uint64_t)v18, type metadata accessor for ClimateSystemManager);
  sub_10000AAD8(v25, (uint64_t)v15, type metadata accessor for ClimateAssets);
  v26 = (char *)objc_allocWithZone((Class)type metadata accessor for ClimatePositionViews(0));
  v110 = a2;
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate14ClimateCarView_positionViews] = sub_10004FC88((uint64_t)v18, v110, v15, v26);

  v27 = (objc_class *)type metadata accessor for ClimateCarView(0);
  v120.receiver = v21;
  v120.super_class = v27;
  v28 = (char *)objc_msgSendSuper2(&v120, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v29 = OBJC_IVAR____TtC7Climate14ClimateCarView_carImageView;
  v30 = *(void **)&v28[OBJC_IVAR____TtC7Climate14ClimateCarView_carImageView];
  v31 = *(_QWORD *)(v25 + *(int *)(v13 + 24));
  v32 = v28;
  objc_msgSend(v30, "setImage:", v31);
  objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v119 = (unint64_t)_swiftEmptyArrayStorage;
  objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v30, "setContentMode:", 2);
  objc_msgSend(v30, "setClipsToBounds:", 1);
  objc_msgSend(v32, "addSubview:", v30);
  v33 = OBJC_IVAR____TtC7Climate14ClimateCarView_positionViews;
  v34 = *(void **)&v32[OBJC_IVAR____TtC7Climate14ClimateCarView_positionViews];
  objc_msgSend(v34, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v32, "addSubview:", v34);
  v35 = objc_msgSend(v30, "centerXAnchor");
  v36 = objc_msgSend(v32, "centerXAnchor");
  v37 = &off_1000AA000;
  v109 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  v38 = objc_msgSend(*(id *)&v32[v33], "leadingAnchor");
  v39 = objc_msgSend(*(id *)&v28[v29], "leadingAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  v41 = objc_msgSend(*(id *)&v32[v33], "trailingAnchor");
  v42 = objc_msgSend(*(id *)&v28[v29], "trailingAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  v44 = objc_msgSend(*(id *)&v32[v33], "topAnchor");
  v45 = objc_msgSend(*(id *)&v28[v29], "topAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  v47 = objc_msgSend(*(id *)&v32[v33], "bottomAnchor");
  v48 = objc_msgSend(*(id *)&v28[v29], "bottomAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v102 = _swiftEmptyArrayStorage;
    else
      v102 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v51 = _CocoaArrayWrapper.endIndex.getter(v102);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v52 = v51 + 5;
    if (!__OFADD__(v51, 5))
    {
LABEL_5:
      v53 = sub_1000761FC(v52, 1);
      specialized Array._endMutation()(v53);
      v37 = (__objc2_prot **)v109;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
      v51 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v50 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v51 < v50 >> 1)
        goto LABEL_6;
      goto LABEL_24;
    }
  }
  else
  {
    v50 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8;
    v51 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
    v52 = v51 + 5;
    if (!__OFADD__(v51, 5))
      goto LABEL_5;
  }
  __break(1u);
LABEL_24:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
LABEL_6:
  v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v37);
  specialized Array._endMutation()(v54);
  v55 = v40;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
  v57 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v56 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v57 >= v56 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
  v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v55);
  specialized Array._endMutation()(v58);
  v59 = v43;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
  v61 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v60 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v61 >= v60 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1);
  v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v59);
  specialized Array._endMutation()(v62);
  v63 = v46;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
  v65 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v64 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v65 >= v64 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
  v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v63);
  specialized Array._endMutation()(v66);
  v67 = v49;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
  v69 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v68 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v69 >= v68 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
  v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v67);
  specialized Array._endMutation()(v70);

  v71 = (void *)objc_opt_self(NSLayoutConstraint);
  v72 = v119;
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v72);
  objc_msgSend(v71, "activateConstraints:", isa);

  swift_beginAccess(&v110[OBJC_IVAR____TtC7Climate18ClimateCoordinator__activeZone], v118, 33, 0);
  v74 = sub_100006058((uint64_t *)&unk_1000B83D0);
  v75 = v111;
  Published.projectedValue.getter(v74);
  swift_endAccess(v118);
  v118[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v76 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  v77 = (uint64_t)v113;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v113, 1, 1, v76);
  v78 = sub_100006B04(0, (unint64_t *)&unk_1000B7B80, NSRunLoop_ptr);
  v79 = sub_10000AA10(&qword_1000B92A8, &qword_1000B9290, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v80 = sub_10000A98C();
  v81 = v114;
  v82 = v115;
  Publisher.receive<A>(on:options:)(v118, v77, v114, v78, v79, v80);
  sub_100008B88(v77, (uint64_t *)&unk_1000B7B60);

  (*(void (**)(char *, uint64_t))(v112 + 8))(v75, v81);
  v83 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v84 = objc_msgSend(v83, "delegate");

  if (v84)
  {
    v85 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v84, v85, 0, 0, 0);
    v86 = sub_10006B490();
    swift_unknownObjectRelease(v84);
    KeyPath = swift_getKeyPath(&unk_10008A948);
    v88 = swift_getKeyPath(&unk_10008A970);
    static Published.subscript.getter(v86, KeyPath, v88);

    swift_release(KeyPath);
    swift_release(v88);
    v89 = LOBYTE(v118[0]) == 0;
    v90 = sub_10000AA10(&qword_1000B9308, &qword_1000B92F8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v91 = v106;
    v92 = v89;
    v93 = v105;
    Publisher.dropFirst(_:)(v92, v105, v90);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v82, v93);
    v94 = swift_allocObject(&unk_10009F948, 24, 7);
    swift_unknownObjectWeakInit(v94 + 16, v32);
    v95 = sub_10000AA10(&qword_1000B9310, &qword_1000B9300, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    v96 = v108;
    v97 = Publisher<>.sink(receiveValue:)(sub_100052598, v94, v108, v95);
    v98 = swift_release(v94);
    (*(void (**)(char *, uint64_t, __n128))(v107 + 8))(v91, v96, v98);
    v99 = &v32[OBJC_IVAR____TtC7Climate14ClimateCarView_cancellables];
    swift_beginAccess(&v32[OBJC_IVAR____TtC7Climate14ClimateCarView_cancellables], v118, 33, 0);
    AnyCancellable.store(in:)(v99);
    swift_endAccess(v118);
    v100 = swift_release(v97);
    v101 = v117;
    sub_10001FAF4((uint64_t)v32, v100);

    sub_10000AB60(v116, type metadata accessor for ClimateSystemManager);
    sub_10000AB60(v101, type metadata accessor for ClimateAssets);
  }
  else
  {
    __break(1u);
  }
}

void sub_10005217C()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char *v8;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (!v3)
    __break(1u);
  v4 = OBJC_IVAR____TtC7Climate24ClimateAppViewController_coordinator;
  v5 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v3, v5, 0, 0, 0);
  v6 = sub_10006B490();
  swift_unknownObjectRelease(v3);
  *(_QWORD *)&v1[v4] = v6;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v7 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v7 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_cancellables] = v7;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_activeConstraints] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_zoneCardActive] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___zoneCard] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_autoSettingsObserver] = 0;
  v8 = &v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *((_QWORD *)v8 + 6) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateAppViewController____lazy_storage___systemControls] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BA30, "Climate/ClimateAppViewController.swift", 38, 2, 223, 0);
  __break(1u);
}

void sub_100052314()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_zoneCardActive) & 1) == 0)
  {
    v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton);
    if (v1)
    {
      v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache);
      v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache);
      v17 = *(id *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsButton);
      if (v3)
      {
        v5 = v2[5];
        v4 = v2[6];
        v7 = v2[3];
        v6 = v2[4];
        v9 = v2[1];
        v8 = v2[2];
        v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateAppViewController_settingsCache);
        v20 = v9;
        v21 = v8;
        v22 = v7;
        v23 = v6;
        v24 = v5;
        v25 = v4;
        v10 = v1;
        sub_100052488(v3, v9, v8, v7, v6, v5, v4);
        v11 = CAFUISettingsCache.rootSettings(in:visibleOnly:)(2, 1);
        sub_100011920(v3, v9, v8, v7, v6, v5, v4);
        if ((unint64_t)v11 >> 62)
        {
          if (v11 < 0)
            v16 = v11;
          else
            v16 = v11 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v11);
          v12 = _CocoaArrayWrapper.endIndex.getter(v16);
          swift_bridgeObjectRelease(v11);
        }
        else
        {
          v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v11);
        v13 = v12 == 0;
        v14 = v17;
      }
      else
      {
        v15 = v17;
        v14 = v17;
        v13 = 1;
      }
      objc_msgSend(v14, "setHidden:", v13, v17, v19, v20, v21, v22, v23, v24, v25);

    }
  }
}

uint64_t sub_100052488(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {
    swift_bridgeObjectRetain(result);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a6);
    return swift_bridgeObjectRetain(a7);
  }
  return result;
}

uint64_t sub_100052510()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100052534(uint64_t a1)
{
  uint64_t v1;

  return sub_10004DBB8(a1, v1);
}

void sub_10005253C(uint64_t *a1)
{
  uint64_t v1;

  sub_10004DD94(a1, v1);
}

unint64_t sub_100052544()
{
  unint64_t result;

  result = qword_1000BA160;
  if (!qword_1000BA160)
  {
    result = swift_getWitnessTable(&unk_10008B6B4, &type metadata for ClimateLayoutMode);
    atomic_store(result, (unint64_t *)&qword_1000BA160);
  }
  return result;
}

void sub_100052588(uint64_t a1)
{
  uint64_t v1;

  sub_10004DEEC(a1, v1);
}

void sub_100052598(uint64_t a1)
{
  uint64_t v1;

  sub_10001FD2C(a1, v1);
}

uint64_t sub_1000525A0@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t *v2;

  return sub_100069144(a1, v2[2], v2[3], v2[4], a2);
}

void sub_1000525B4(uint64_t a1)
{
  uint64_t v1;

  sub_10004E958(a1, v1);
}

uint64_t sub_1000525CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1000525F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100052620(uint64_t a1)
{
  uint64_t v1;

  sub_100076C88(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_10005262C(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t *sub_10005263C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1000526B8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  unsigned int (*v9)(uint64_t, uint64_t, int *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v1 = (int *)type metadata accessor for ClimateSystemManager(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;

  v7 = v0 + v4 + v1[7];
  v8 = (int *)type metadata accessor for ClimateZone(0);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48);
  if (!v9(v7, 1, v8))
  {
    v10 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
    swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[5]));
    swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[6]));

    swift_bridgeObjectRelease(*(_QWORD *)(v7 + v8[9]));
  }
  v11 = v6 + v1[8];
  if (!v9(v11, 1, v8))
  {
    v12 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease(*(_QWORD *)(v11 + v8[5]));
    swift_bridgeObjectRelease(*(_QWORD *)(v11 + v8[6]));

    swift_bridgeObjectRelease(*(_QWORD *)(v11 + v8[9]));
  }
  v13 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[9]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[10]));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v13));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v13 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v13 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v13 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v13 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v13 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v13 + 48));
  return swift_deallocObject(v0, v13 + 56, v3 | 7);
}

void sub_1000528EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for ClimateSystemManager(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_10004C2A4(a1, *(_QWORD *)(v1 + 16), (void **)(v1 + v4), (_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

_QWORD *sub_100052940(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  swift_bridgeObjectRetain(*a1);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t sub_1000529BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058(&qword_1000B9320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100052A0C()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate31ClimateAutoControlServiceButton_autoClimateControl);
  v2 = objc_msgSend(v1, "intensity");
  v3 = objc_msgSend(v1, "intensityRestricted");
  v4 = objc_msgSend(v1, "intensityDisabled");
  if (v2 == 1)
  {
    v5 = 4;
    if (!v3)
      v5 = 0;
    if ((v4 & 1) == 0)
      return v5;
    return v5 | 0x10;
  }
  v5 = 5;
  if (!v3)
    v5 = 1;
  if (v4)
    return v5 | 0x10;
  return v5;
}

char *sub_100052AA8(void *a1)
{
  char *v1;
  id v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  char *v7;
  char *v8;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  char v19[24];
  objc_super v20;

  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate31ClimateAutoControlServiceButton_autoClimateControl] = a1;
  v20.receiver = v1;
  v20.super_class = (Class)type metadata accessor for ClimateAutoControlServiceButton();
  v3 = a1;
  v4 = objc_msgSendSuper2(&v20, "init");
  v5 = *(void (**)(void))((swift_isaMask & *v4) + 0x220);
  v6 = v4;
  v5();
  v7 = v6;
  objc_msgSend(v3, "registerObserver:", v7);

  v8 = &v7[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle];
  swift_beginAccess(&v7[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle], v19, 1, 0);
  v9 = *v8;
  *v8 = 1;
  v10 = v7;
  if ((v9 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();
  v11 = swift_allocObject(&unk_10009FA18, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v10);
  v12 = swift_allocObject(&unk_10009FA40, 32, 7);
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v3;
  v13 = (uint64_t *)&v10[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v10[OBJC_IVAR____TtC7Climate13ClimateButton_action], &v18, 1, 0);
  v14 = *v13;
  v15 = v13[1];
  *v13 = (uint64_t)sub_100052FD8;
  v13[1] = v12;
  v16 = v3;
  sub_100005118(v14, v15);
  sub_100052DEC();

  return v10;
}

void sub_100052C3C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    objc_msgSend(a3, "setIntensity:", sub_100052CC0(1, objc_msgSend(a3, "intensity")));
    sub_100052DEC();

  }
}

uint64_t sub_100052CC0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = static CAFAutoModeIntensity.allCases.getter();
  v5 = *(_QWORD *)(result + 16);
  if (!v5)
    goto LABEL_18;
  v6 = result;
  v7 = a2;
  v8 = result + 32;
  if (*(unsigned __int8 *)(result + 32) != v7)
  {
    v9 = 0;
    while (v5 - 1 != v9)
    {
      v10 = *(unsigned __int8 *)(result + 33 + v9++);
      if (v10 == v7)
      {
        v11 = __OFADD__(v9, a1);
        a1 += v9;
        if (!v11)
          goto LABEL_7;
        __break(1u);
        goto LABEL_15;
      }
    }
    goto LABEL_18;
  }
LABEL_7:
  v12 = a1 % v5;
  v13 = sub_100006058(&qword_1000B91C0);
  v14 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100088D00;
  *(_QWORD *)(v14 + 56) = &type metadata for Int;
  *(_QWORD *)(v14 + 32) = v12;
  print(_:separator:terminator:)(v14, 32, 0xE100000000000000, 10, 0xE100000000000000);
  result = swift_bridgeObjectRelease(v14);
  if ((v12 & 0x8000000000000000) == 0)
  {
    if (v12 < *(_QWORD *)(v6 + 16))
    {
LABEL_13:
      v15 = *(unsigned __int8 *)(v8 + v12);
      swift_bridgeObjectRelease(v6);
      return v15;
    }
    __break(1u);
  }
  v11 = __OFADD__(v5, v12);
  v12 += v5;
  if (v11)
  {
LABEL_15:
    __break(1u);
  }
  else if ((v12 & 0x8000000000000000) == 0)
  {
    if (v12 < *(_QWORD *)(v6 + 16))
      goto LABEL_13;
    goto LABEL_17;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

id sub_100052DEC()
{
  char *v0;
  void *v1;
  Swift::String v2;
  void *object;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  _QWORD v9[3];

  v9[0] = 0xA4F545541;
  v9[1] = 0xE500000000000000;
  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate31ClimateAutoControlServiceButton_autoClimateControl];
  v2._countAndFlagsBits = CAFAutoModeIntensity.description.getter(objc_msgSend(v1, "intensity"));
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_title];
  swift_beginAccess(&v0[OBJC_IVAR____TtC7Climate13ClimateButton_title], v9, 1, 0);
  v5 = *(_QWORD *)v4;
  v6 = *((_QWORD *)v4 + 1);
  *(_QWORD *)v4 = 0xA4F545541;
  *((_QWORD *)v4 + 1) = 0xE500000000000000;
  if (!v6
    || (v5 == 0xA4F545541 ? (v7 = v6 == 0xE500000000000000) : (v7 = 0),
        !v7 && (_stringCompareWithSmolCheck(_:_:expecting:)(0xA4F545541, 0xE500000000000000, v5, v6, 0) & 1) == 0))
  {
    ClimateButton.updateClimateConfiguration()();
  }
  swift_bridgeObjectRelease(v6);
  sub_10007813C();
  objc_msgSend(v1, "intensity");
  objc_msgSend(v1, "intensityRestricted");
  objc_msgSend(v0, "setEnabled:", objc_msgSend(v1, "intensityDisabled") ^ 1);
  sub_100066A90();
  return sub_100066C24();
}

id sub_100052F38()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateAutoModeIntensityButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateAutoModeIntensityButton()
{
  return objc_opt_self(_TtC7Climate30ClimateAutoModeIntensityButton);
}

uint64_t sub_100052F88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100052FAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100052FD8(uint64_t a1)
{
  uint64_t v1;

  sub_100052C3C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100052FE0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  _BYTE *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  swift_beginAccess(v0 + 24, v20, 0, 0);
  v1 = *(_QWORD *)(v0 + 24);
  if (!((unint64_t)v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      return;
LABEL_3:
    v2 = (void *)objc_opt_self(UIApplication);
    v3 = objc_msgSend(v2, "sharedApplication");
    v4 = objc_msgSend(v3, "delegate");

    if (v4)
    {
      v5 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
      v6 = sub_10006B490();
      swift_unknownObjectRelease(v4);
      v7 = v6[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      if ((v7 & 1) != 0)
        sub_100054450(v8, v9, v10);
      else
        sub_100053C70(v8, v9, v10);
      v11 = objc_msgSend(v2, "sharedApplication");
      v12 = objc_msgSend(v11, "delegate");

      if (v12)
      {
        swift_dynamicCastClassUnconditional(v12, v5, 0, 0, 0);
        v13 = sub_10006B490();
        swift_unknownObjectRelease(v12);
        v14 = v13[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

        if ((v14 & 1) != 0)
          sub_100054D7C(v15, v16, v17);
        else
          sub_100054820(v15, v16, v17);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  if (v1 < 0)
    v18 = v1;
  else
    v18 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v19 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v1);
  if (!v19)
    goto LABEL_3;
}

uint64_t sub_1000531A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for ClimateGridLayoutManager()
{
  return objc_opt_self(_TtC7Climate24ClimateGridLayoutManager);
}

void sub_1000531F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t v39;
  _BOOL4 v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  unsigned __int8 *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;

  v5 = v4;
  v7 = a3;
  v10 = type metadata accessor for IndexPath(0, a2, a3);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0)
  {
    v15 = (void *)objc_opt_self(UIApplication);
    v16 = objc_msgSend(v15, "sharedApplication");
    v17 = objc_msgSend(v16, "delegate");

    if (v17)
    {
      v18 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v17, v18, 0, 0, 0);
      v19 = sub_10006B490();
      swift_unknownObjectRelease(v17);

      v20 = objc_msgSend(v15, "sharedApplication");
      v21 = objc_msgSend(v20, "delegate");

      if (v21)
      {
        swift_dynamicCastClassUnconditional(v21, v18, 0, 0, 0);
        v22 = sub_10006B490();
        swift_unknownObjectRelease(v21);

        return;
      }
      goto LABEL_29;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!IndexPath.section.getter(v12))
  {
    v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 16) + OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems) + 16);
    if (IndexPath.item.getter() < v23)
    {
      v24 = IndexPath.item.getter();
      v25 = v24 + 1;
      if (__OFADD__(v24, 1))
      {
        __break(1u);
        goto LABEL_28;
      }
      v26 = IndexPath.section.getter(v24);
      IndexPath.init(item:section:)(v25, v26);
      v27 = *(id *)(v5 + 16);
      v30 = (void *)sub_10000EA74((uint64_t)v14, v28, v29);
      v32 = v31;

      if (v30)
      {
        v67 = v32;
        v33 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        v34 = objc_msgSend(v33, "delegate");

        if (!v34)
        {
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        v35 = type metadata accessor for ClimateAppDelegate();
        swift_dynamicCastClassUnconditional(v34, v35, 0, 0, 0);
        v36 = (unsigned __int8 *)sub_10006B490();
        swift_unknownObjectRelease(v34);
        v37 = v36[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

        ObjectType = swift_getObjectType(v30);
        v39 = sub_100031C6C(v37, ObjectType, v67);

        v40 = v39 == 2;
        if ((v7 & 1) != 0)
          goto LABEL_18;
      }
      else
      {
        v40 = 1;
        if ((v7 & 1) != 0)
        {
LABEL_18:
          (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
          goto LABEL_19;
        }
      }
      if (a2 == 2 && v40)
      {
        v41 = (void *)objc_opt_self(UIApplication);
        v42 = objc_msgSend(v41, "sharedApplication");
        v43 = objc_msgSend(v42, "delegate");

        if (v43)
        {
          v44 = type metadata accessor for ClimateAppDelegate();
          swift_dynamicCastClassUnconditional(v43, v44, 0, 0, 0);
          v45 = sub_10006B490();
          swift_unknownObjectRelease(v43);

          v46 = objc_msgSend(v41, "sharedApplication");
          v47 = objc_msgSend(v46, "delegate");

          if (v47)
          {
            swift_dynamicCastClassUnconditional(v47, v44, 0, 0, 0);
            v48 = sub_10006B490();
            swift_unknownObjectRelease(v47);

            (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
            return;
          }
          goto LABEL_35;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      goto LABEL_18;
    }
  }
LABEL_19:
  v49 = *(id *)(v5 + 16);
  v52 = (void *)sub_10000EA74(a1, v50, v51);
  v54 = v53;

  if (v52)
  {
    v55 = (void *)objc_opt_self(UIApplication);
    v56 = objc_msgSend(v55, "sharedApplication");
    v57 = objc_msgSend(v56, "delegate");

    if (v57)
    {
      v58 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v57, v58, 0, 0, 0);
      v59 = (unsigned __int8 *)sub_10006B490();
      swift_unknownObjectRelease(v57);
      v60 = v59[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      v61 = swift_getObjectType(v52);
      v62 = sub_100031C6C(v60, v61, v54);
      v63 = objc_msgSend(v55, "sharedApplication");
      v64 = objc_msgSend(v63, "delegate");

      if (v62 == 2)
      {
        if (!v64)
        {
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
      }
      else if (!v64)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      swift_dynamicCastClassUnconditional(v64, v58, 0, 0, 0);
      v65 = sub_10006B490();
      swift_unknownObjectRelease(v64);

      return;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
}

void sub_100053894(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  unsigned __int8 *v17;
  int v18;
  __n128 v19;
  id v20;
  id v21;
  unsigned __int8 *v22;
  int v23;
  __n128 v24;
  id v25;

  v3 = *(id *)(v1 + 16);
  v25 = (id)sub_10000EA74(a1, v4, v5);
  v7 = v6;

  if (v25)
  {
    ObjectType = swift_getObjectType(v25);
    if (!sub_100031C44(ObjectType, v7)
      || (v9 = type metadata accessor for ClimateStepper(), (v10 = swift_dynamicCastClass(v25, v9)) == 0))
    {
LABEL_11:

      return;
    }
    v11 = (_QWORD *)v10;
    v12 = (void *)objc_opt_self(UIApplication);
    v13 = v25;
    v14 = objc_msgSend(v12, "sharedApplication");
    v15 = objc_msgSend(v14, "delegate");

    if (v15)
    {
      v16 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v15, v16, 0, 0, 0);
      v17 = (unsigned __int8 *)sub_10006B490();
      swift_unknownObjectRelease(v15);
      v18 = v17[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      v19.n128_u64[0] = 0x4046000000000000;
      if (v18)
        v19.n128_f64[0] = 56.0;
      (*(void (**)(__n128))((swift_isaMask & *v11) + 0x258))(v19);
      v20 = objc_msgSend(v12, "sharedApplication");
      v21 = objc_msgSend(v20, "delegate");

      if (v21)
      {
        swift_dynamicCastClassUnconditional(v21, v16, 0, 0, 0);
        v22 = (unsigned __int8 *)sub_10006B490();
        swift_unknownObjectRelease(v21);
        v23 = v22[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

        v24.n128_u64[0] = 0x4046000000000000;
        if (v23)
          v24.n128_f64[0] = 56.0;
        (*(void (**)(__n128))((swift_isaMask & *v11) + 0x270))(v24);

        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100053AD8(double a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  double v8;
  id v9;
  id v10;
  id v11;

  v2 = (void *)objc_opt_self(UIApplication);
  v3 = objc_msgSend(v2, "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (!v4)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  v5 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
  v6 = (unsigned __int8 *)sub_10006B490();
  swift_unknownObjectRelease(v4);
  v7 = v6[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

  if (v7 == 1)
    v8 = 56.0;
  else
    v8 = 148.0;
  if (a1 == v8)
  {
    v9 = objc_msgSend(v2, "sharedApplication");
    v10 = objc_msgSend(v9, "delegate");

    if (v10)
    {
      swift_dynamicCastClassUnconditional(v10, v5, 0, 0, 0);
      v11 = sub_10006B490();
      swift_unknownObjectRelease(v10);

      return;
    }
    goto LABEL_10;
  }
}

void sub_100053C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  _QWORD *v13;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  id v23;
  id v24;
  uint64_t v25;
  unsigned __int8 *v26;
  int v27;
  double v28;
  Class isa;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  double v35;
  double MaxY;
  double v37;
  double MaxX;
  BOOL v39;
  id v40;
  id v41;
  uint64_t v42;
  unsigned __int8 *v43;
  int v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  CGRect v50;
  CGRect v51;

  v4 = v3;
  v5 = type metadata accessor for IndexPath(0, a2, a3);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v3 + 16);
  v9 = 2;
  if (!*(_QWORD *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems) + 16))
    v9 = 3;
  v46 = v9;
  v10 = *(_QWORD *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems) + 16);
  if (!v10)
    return;
  v11 = 0;
  v12 = *(double *)(v3 + 56);
  v13 = (_QWORD *)(v3 + 24);
  v14 = 0.0;
  v15 = v12;
  v16 = v46;
  while (1)
  {
    IndexPath.init(item:section:)(v11, 0);
    sub_1000531F4((uint64_t)v7, v16, 0, 0);
    v18 = v17;
    v20 = v19;
    sub_100053AD8(v17);
    v22 = v21;
    if (!v16 || ((v16 < 2) & v21) != 0)
    {
      v23 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v24 = objc_msgSend(v23, "delegate");

      if (!v24)
        goto LABEL_31;
      v25 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v24, v25, 0, 0, 0);
      v26 = (unsigned __int8 *)sub_10006B490();
      swift_unknownObjectRelease(v24);
      v27 = v26[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      if (v27)
        v28 = 10.0;
      else
        v28 = 8.0;
      v14 = v14 + v20 + v28;
      v15 = v12;
      v16 = v46;
    }
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v30 = objc_msgSend((id)objc_opt_self(UICollectionViewLayoutAttributes), "layoutAttributesForCellWithIndexPath:", isa);

    objc_msgSend(v30, "setFrame:", v15, v14, v18, v20);
    swift_beginAccess(v4 + 24, v49, 33, 0);
    v31 = v30;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
    v33 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v32 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v33 >= v32 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
    v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
    specialized Array._endMutation()(v34);
    swift_endAccess(v49);
    v35 = *(double *)(v4 + 32);
    v50.origin.x = v15;
    v50.origin.y = v14;
    v50.size.width = v18;
    v50.size.height = v20;
    MaxY = CGRectGetMaxY(v50);
    if (v35 > MaxY)
      MaxY = v35;
    *(double *)(v4 + 32) = MaxY;
    v37 = *(double *)(v4 + 40);
    v51.origin.x = v15;
    v51.origin.y = v14;
    v51.size.width = v18;
    v51.size.height = v20;
    MaxX = CGRectGetMaxX(v51);
    if (v37 > MaxX)
      MaxX = v37;
    *(double *)(v4 + 40) = MaxX;
    if ((v22 & 1) != 0)
      break;
    v39 = __OFSUB__(v16--, 1);
    if (v39)
      goto LABEL_29;
LABEL_23:
    v40 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v41 = objc_msgSend(v40, "delegate");

    if (!v41)
      goto LABEL_30;
    ++v11;
    v42 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v41, v42, 0, 0, 0);
    v43 = (unsigned __int8 *)sub_10006B490();
    swift_unknownObjectRelease(v41);
    v44 = v43[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

    if (v44)
      v45 = 10.0;
    else
      v45 = 8.0;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v48);
    v15 = v15 + v18 + v45;
    if (v10 == v11)
      return;
  }
  v39 = __OFSUB__(v16, 2);
  v16 -= 2;
  if (!v39)
    goto LABEL_23;
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_100054054(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  id v20;
  id v21;
  id v22;

  v3 = *(id *)(v1 + 16);
  v6 = (void *)sub_10000EA74(a1, v4, v5);
  v8 = v7;

  if (v6)
  {
    v9 = (void *)objc_opt_self(UIApplication);
    v10 = objc_msgSend(v9, "sharedApplication");
    v11 = objc_msgSend(v10, "delegate");

    if (v11)
    {
      v12 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v11, v12, 0, 0, 0);
      v13 = sub_10006B490();
      swift_unknownObjectRelease(v11);

      v14 = objc_msgSend(v9, "sharedApplication");
      v15 = objc_msgSend(v14, "delegate");

      if (v15)
      {
        swift_dynamicCastClassUnconditional(v15, v12, 0, 0, 0);
        v16 = (unsigned __int8 *)sub_10006B490();
        swift_unknownObjectRelease(v15);
        v17 = v16[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

        ObjectType = swift_getObjectType(v6);
        v19 = sub_100031C6C(v17, ObjectType, v8);
        v20 = objc_msgSend(v9, "sharedApplication");
        v21 = objc_msgSend(v20, "delegate");

        if (v19 != 3)
        {
          if (v21)
          {
LABEL_9:
            swift_dynamicCastClassUnconditional(v21, v12, 0, 0, 0);
            v22 = sub_10006B490();
            swift_unknownObjectRelease(v21);

            return;
          }
          goto LABEL_13;
        }
        if (v21)
          goto LABEL_9;
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
}

void sub_1000542B8(double a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  double v8;
  id v9;
  id v10;
  id v11;

  v2 = (void *)objc_opt_self(UIApplication);
  v3 = objc_msgSend(v2, "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (!v4)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  v5 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
  v6 = (unsigned __int8 *)sub_10006B490();
  swift_unknownObjectRelease(v4);
  v7 = v6[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

  if (v7 == 1)
    v8 = 56.0;
  else
    v8 = 230.0;
  if (a1 == v8)
  {
    v9 = objc_msgSend(v2, "sharedApplication");
    v10 = objc_msgSend(v9, "delegate");

    if (v10)
    {
      swift_dynamicCastClassUnconditional(v10, v5, 0, 0, 0);
      v11 = sub_10006B490();
      swift_unknownObjectRelease(v10);

      return;
    }
    goto LABEL_10;
  }
}

void sub_100054450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  _QWORD *v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  char v20;
  char v21;
  id v22;
  id v23;
  uint64_t v24;
  unsigned __int8 *v25;
  int v26;
  double v27;
  Class isa;
  id v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  double v34;
  double MaxY;
  double v36;
  double MaxX;
  BOOL v38;
  id v39;
  id v40;
  uint64_t v41;
  unsigned __int8 *v42;
  int v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[24];
  CGRect v49;
  CGRect v50;

  v4 = v3;
  v5 = type metadata accessor for IndexPath(0, a2, a3);
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v3 + 16);
  v9 = 2;
  if (!*(_QWORD *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems) + 16))
    v9 = 3;
  v45 = v9;
  v10 = *(_QWORD *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems) + 16);
  if (!v10)
    return;
  v11 = 0;
  v12 = *(double *)(v3 + 56);
  v13 = (_QWORD *)(v3 + 24);
  v14 = 0.0;
  v15 = v45;
  while (1)
  {
    IndexPath.init(item:section:)(v11, 0);
    sub_100054054((uint64_t)v7);
    v17 = v16;
    v19 = v18;
    sub_1000542B8(v16);
    v21 = v20;
    sub_100053894((uint64_t)v7);
    if (v15 <= 0)
    {
      v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v23 = objc_msgSend(v22, "delegate");

      if (!v23)
        goto LABEL_30;
      v24 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v23, v24, 0, 0, 0);
      v25 = (unsigned __int8 *)sub_10006B490();
      swift_unknownObjectRelease(v23);
      v26 = v25[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      if (v26)
        v27 = 10.0;
      else
        v27 = 8.0;
      v12 = v12 + v17 + v27;
      v14 = 0.0;
      v15 = v45;
    }
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v29 = objc_msgSend((id)objc_opt_self(UICollectionViewLayoutAttributes), "layoutAttributesForCellWithIndexPath:", isa);

    objc_msgSend(v29, "setFrame:", v12, v14, v17, v19);
    swift_beginAccess(v4 + 24, v48, 33, 0);
    v30 = v29;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
    v32 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v31 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v32 >= v31 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
    v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
    specialized Array._endMutation()(v33);
    swift_endAccess(v48);
    v34 = *(double *)(v4 + 32);
    v49.origin.x = v12;
    v49.origin.y = v14;
    v49.size.width = v17;
    v49.size.height = v19;
    MaxY = CGRectGetMaxY(v49);
    if (v34 > MaxY)
      MaxY = v34;
    *(double *)(v4 + 32) = MaxY;
    v36 = *(double *)(v4 + 40);
    v50.origin.x = v12;
    v50.origin.y = v14;
    v50.size.width = v17;
    v50.size.height = v19;
    MaxX = CGRectGetMaxX(v50);
    if (v36 > MaxX)
      MaxX = v36;
    *(double *)(v4 + 40) = MaxX;
    if ((v21 & 1) != 0)
      break;
    v38 = __OFSUB__(v15--, 1);
    if (v38)
      goto LABEL_28;
LABEL_22:
    v39 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v40 = objc_msgSend(v39, "delegate");

    if (!v40)
      goto LABEL_29;
    ++v11;
    v41 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v40, v41, 0, 0, 0);
    v42 = (unsigned __int8 *)sub_10006B490();
    swift_unknownObjectRelease(v40);
    v43 = v42[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

    if (v43)
      v44 = 10.0;
    else
      v44 = 8.0;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v47);
    v14 = v14 + v19 + v44;
    if (v10 == v11)
      return;
  }
  v38 = __OFSUB__(v15, 3);
  v15 -= 3;
  if (!v38)
    goto LABEL_22;
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_100054820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __objc2_prot **v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  unsigned __int8 *v14;
  int v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  double v20;
  double v21;
  unsigned __int8 *v22;
  int v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  __objc2_prot **v36;
  id v37;
  uint64_t v38;
  unsigned __int8 *v39;
  int v40;
  double v41;
  double v42;
  double v43;
  id v44;
  id v45;
  unsigned __int8 *v46;
  int v47;
  double v48;
  double v49;
  Class isa;
  id v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  double v56;
  double MaxY;
  double v58;
  double MaxX;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BOOL4 v64;
  _BYTE v65[24];
  CGRect v66;
  CGRect v67;

  v4 = v3;
  v5 = type metadata accessor for IndexPath(0, a2, a3);
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 16) + OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems) + 16);
  v9 = &off_1000AA000;
  if (v8)
  {
    v10 = (void *)objc_opt_self(UIApplication);
    v11 = objc_msgSend(v10, "sharedApplication");
    v12 = objc_msgSend(v11, "delegate");

    if (!v12)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v13 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
    v14 = (unsigned __int8 *)sub_10006B490();
    swift_unknownObjectRelease(v12);
    v15 = v14[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

    v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems) + 16);
    v17 = objc_msgSend(v10, "sharedApplication");
    v18 = objc_msgSend(v17, "delegate");

    if (!v18)
    {
LABEL_35:
      __break(1u);
      return;
    }
    v19 = v16 - 1;
    v20 = 44.0;
    if (v15)
      v20 = 56.0;
    v21 = v20 * (double)v8;
    swift_dynamicCastClassUnconditional(v18, v13, 0, 0, 0);
    v22 = (unsigned __int8 *)sub_10006B490();
    swift_unknownObjectRelease(v18);
    v23 = v22[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

    v24 = 8.0;
    if (v23)
      v24 = 10.0;
    v64 = v21 + v24 * (double)v19 < *(double *)(v4 + 32);
  }
  else
  {
    v64 = 0;
  }
  v25 = *(_QWORD *)(v4 + 16);
  v61 = *(_QWORD *)(*(_QWORD *)(v25 + OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems) + 16);
  if (v61)
  {
    v26 = *(_QWORD *)(*(_QWORD *)(v25 + OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems) + 16);
    v27 = (void *)objc_opt_self(UIApplication);
    v28 = 0;
    v29 = (_QWORD *)(v4 + 24);
    v30 = 0.0;
    while (!__OFADD__(v28, v26))
    {
      IndexPath.init(item:section:)(v28 + v26, 0);
      sub_1000531F4((uint64_t)v7, 0, 1, v64);
      v32 = v31;
      v34 = v33;
      v35 = objc_msgSend(v27, "sharedApplication");
      v36 = v9;
      v37 = objc_msgSend(v35, (SEL)v9[203]);

      if (!v37)
        goto LABEL_32;
      v38 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v37, v38, 0, 0, 0);
      v39 = (unsigned __int8 *)sub_10006B490();
      swift_unknownObjectRelease(v37);
      v40 = v39[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      if (v40)
        v41 = 68.0;
      else
        v41 = 160.0;
      v42 = *(double *)(v4 + 56);
      v43 = 0.0;
      if (IndexPath.item.getter() != v26)
      {
        v44 = objc_msgSend(v27, "sharedApplication");
        v45 = objc_msgSend(v44, (SEL)v36[203]);

        if (!v45)
          goto LABEL_33;
        swift_dynamicCastClassUnconditional(v45, v38, 0, 0, 0);
        v46 = (unsigned __int8 *)sub_10006B490();
        swift_unknownObjectRelease(v45);
        v47 = v46[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

        if (v47)
          v48 = 10.0;
        else
          v48 = 8.0;
        v43 = v30 + v48;
      }
      v49 = v41 + v42;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v51 = objc_msgSend((id)objc_opt_self(UICollectionViewLayoutAttributes), "layoutAttributesForCellWithIndexPath:", isa);

      objc_msgSend(v51, "setFrame:", v41 + v42, v43, v32, v34);
      swift_beginAccess(v4 + 24, v65, 33, 0);
      v52 = v51;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
      v54 = *(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v53 = *(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v54 >= v53 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
      ++v28;
      v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
      specialized Array._endMutation()(v55);
      swift_endAccess(v65);
      v56 = *(double *)(v4 + 32);
      v66.origin.x = v49;
      v66.origin.y = v43;
      v66.size.width = v32;
      v66.size.height = v34;
      MaxY = CGRectGetMaxY(v66);
      if (v56 > MaxY)
        MaxY = v56;
      *(double *)(v4 + 32) = MaxY;
      v58 = *(double *)(v4 + 40);
      v67.origin.x = v49;
      v67.origin.y = v43;
      v67.size.width = v32;
      v67.size.height = v34;
      MaxX = CGRectGetMaxX(v67);
      if (v58 > MaxX)
        MaxX = v58;
      *(double *)(v4 + 40) = MaxX;

      (*(void (**)(char *, uint64_t))(v62 + 8))(v7, v63);
      v30 = v34 + v43;
      v9 = v36;
      if (v61 == v28)
        return;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
}

void sub_100054D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  id v20;
  uint64_t v21;
  unsigned __int8 *v22;
  int v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  unsigned __int8 *v29;
  int v30;
  double v31;
  double v32;
  Class isa;
  id v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  double v39;
  double MaxY;
  double v41;
  double MaxX;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  CGRect v47;
  CGRect v48;

  v4 = (double *)v3;
  v5 = type metadata accessor for IndexPath(0, a2, a3);
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC7Climate17ClimateGridSource_surfaceItems) + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v8 + OBJC_IVAR____TtC7Climate17ClimateGridSource_flowItems) + 16);
    v11 = (void *)objc_opt_self(UIApplication);
    v12 = 0;
    v13 = (_QWORD *)(v3 + 24);
    v14 = 0.0;
    while (!__OFADD__(v12, v10))
    {
      IndexPath.init(item:section:)(v12 + v10, 0);
      sub_100054054((uint64_t)v7);
      v16 = v15;
      v18 = v17;
      v19 = objc_msgSend(v11, "sharedApplication");
      v20 = objc_msgSend(v19, "delegate");

      if (!v20)
        goto LABEL_24;
      v21 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v20, v21, 0, 0, 0);
      v22 = (unsigned __int8 *)sub_10006B490();
      swift_unknownObjectRelease(v20);
      v23 = v22[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

      if (v23)
        v24 = 132.0;
      else
        v24 = 160.0;
      v25 = v4[7];
      v26 = 0.0;
      if (IndexPath.item.getter() != v10)
      {
        v27 = objc_msgSend(v11, "sharedApplication");
        v28 = objc_msgSend(v27, "delegate");

        if (!v28)
          goto LABEL_25;
        swift_dynamicCastClassUnconditional(v28, v21, 0, 0, 0);
        v29 = (unsigned __int8 *)sub_10006B490();
        swift_unknownObjectRelease(v28);
        v30 = v29[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

        if (v30)
          v31 = 10.0;
        else
          v31 = 8.0;
        v26 = v14 + v31;
      }
      v32 = v24 + v25;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v34 = objc_msgSend((id)objc_opt_self(UICollectionViewLayoutAttributes), "layoutAttributesForCellWithIndexPath:", isa);

      objc_msgSend(v34, "setFrame:", v24 + v25, v26, v16, v18);
      swift_beginAccess(v4 + 3, v46, 33, 0);
      v35 = v34;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
      v37 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v36 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v37 >= v36 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
      ++v12;
      v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
      specialized Array._endMutation()(v38);
      swift_endAccess(v46);
      v39 = v4[4];
      v47.origin.x = v32;
      v47.origin.y = v26;
      v47.size.width = v16;
      v47.size.height = v18;
      MaxY = CGRectGetMaxY(v47);
      if (v39 > MaxY)
        MaxY = v39;
      v4[4] = MaxY;
      v41 = v4[5];
      v48.origin.x = v32;
      v48.origin.y = v26;
      v48.size.width = v16;
      v48.size.height = v18;
      MaxX = CGRectGetMaxX(v48);
      if (v41 > MaxX)
        MaxX = v41;
      v4[5] = MaxX;

      (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v45);
      v14 = v18 + v26;
      if (v9 == v12)
        return;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
}

void sub_100055128()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  uint64_t v8;
  Swift::String v9;
  void *v10;
  uint64_t v11;
  NSString v12;
  uint64_t ObjectType;
  uint64_t v14;
  objc_super v15;

  v1 = v0;
  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for ClimateTapAreaButton(0);
  objc_msgSendSuper2(&v15, "didMoveToSuperview");
  ObjectType = swift_getObjectType(v0);
  v2 = sub_100006058(&qword_1000B94F8);
  ObjectType = String.init<A>(describing:)(&ObjectType, v2);
  v14 = v3;
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = sub_100031D58(*((_BYTE *)v0 + OBJC_IVAR____TtC7Climate20ClimateTapAreaButton_slotType));
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 58;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v9._countAndFlagsBits = CAUVehicleLayoutKey.rawValue.getter(v8);
  v10 = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v10);
  v11 = v14;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v1, "setAccessibilityIdentifier:", v12);

}

uint64_t sub_1000552BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7Climate20ClimateTapAreaButton_key;
  v2 = type metadata accessor for CAUVehicleLayoutKey(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_1000552F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateTapAreaButton(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100055368()
{
  return type metadata accessor for ClimateTapAreaButton(0);
}

uint64_t type metadata accessor for ClimateTapAreaButton(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B94E8;
  if (!qword_1000B94E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateTapAreaButton);
  return result;
}

uint64_t sub_1000553AC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CAUVehicleLayoutKey(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10008AB38;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 704);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100055420(int a1)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue);
  *(_DWORD *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue) = a1;
  sub_100021918(v2);
  sub_1000562CC();
}

void sub_10005544C(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  void **v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  char v27;
  char v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;

  v5 = v4;
  v9 = (void **)(v5 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig);
  v11 = *(void **)(v5 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig);
  v10 = *(void **)(v5 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig + 8);
  v13 = *(void **)(v5 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig + 16);
  v12 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate19ClimateProgressView_progressColorConfig + 24);
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  v14 = a3;
  swift_bridgeObjectRetain_n(a4, 2);
  v15 = a1;
  v16 = a2;
  v30 = v14;
  v32 = v15;
  v29 = v16;
  swift_bridgeObjectRelease(v12);

  v17 = *(_QWORD *)(v5 + OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView);
  v18 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v19 = *v9;
  v20 = (_QWORD *)(v17 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v21 = *(void **)(v17 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v22 = *(void **)(v17 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v31 = *(_QWORD *)(v17 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  *v20 = v18;
  v20[1] = v19;
  v20[2] = &_swiftEmptyDictionarySingleton;
  v23 = v19;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v24 = v18;
  v25 = v23;
  swift_bridgeObjectRetain(&_swiftEmptyDictionarySingleton);
  v26 = v24;
  if ((static NSObject.== infix(_:_:)(v26) & 1) != 0 && (static NSObject.== infix(_:_:)(v25) & 1) != 0)
  {
    sub_10005B490((uint64_t)&_swiftEmptyDictionarySingleton, v31);
    v28 = v27;
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

    if ((v28 & 1) != 0)
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

  }
  ClimateButton.refreshColorConfig()();
LABEL_7:

  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(v31);

  objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC7Climate22ClimateBarProgressView_trackView), "setBackgroundColor:", v9[1]);
  objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressView), "setBackgroundColor:", v9[2]);
  swift_bridgeObjectRelease(a4);

}

id sub_1000556A0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;

  v2 = OBJC_IVAR____TtC7Climate19ClimateProgressView_isHighlighted;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_isHighlighted) = a1;
  if ((a1 & 1) != 0)
    v3 = 0.2;
  else
    v3 = 1.0;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView), "setAlpha:", v3);
  if (*(_BYTE *)(v1 + v2))
    v4 = 0.2;
  else
    v4 = 1.0;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressView), "setAlpha:", v4);
}

_QWORD *sub_100055728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6, double a7)
{
  void *v7;
  id v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  _QWORD *v20;

  v13 = objc_allocWithZone((Class)UIView);
  v14 = v7;
  v15 = objc_msgSend(v13, "init");
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v15, "_setContinuousCornerRadius:", a7 * 0.5);
  *(_QWORD *)&v14[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_trackView] = v15;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "_setContinuousCornerRadius:", a7 * 0.5);
  *(_QWORD *)&v14[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressView] = v16;
  v17 = objc_msgSend(v16, "widthAnchor");
  v18 = objc_msgSend(v17, "constraintEqualToConstant:", 0.0);

  *(_QWORD *)&v14[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressViewConstraint] = v18;
  v19 = a6;
  v20 = sub_100021EC4(a1, a2, a3, a4, a5, v19);
  sub_1000558BC(a7);

  return v20;
}

id sub_1000558BC(double a1)
{
  char *v1;
  char *v2;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  Class isa;
  float v32;
  uint64_t v33;
  id v34;
  int v35;
  float v36;
  id v37;
  int v38;
  id v39;
  float v40;
  float v41;
  id v43;

  v2 = v1;
  v4 = *(void **)&v1[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_trackView];
  objc_msgSend(v2, "addSubview:", v4);
  v5 = *(void **)&v2[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressView];
  objc_msgSend(v2, "addSubview:", v5);
  v43 = (id)objc_opt_self(NSLayoutConstraint);
  v6 = sub_100006058((uint64_t *)&unk_1000B7590);
  v7 = swift_allocObject(v6, 96, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10008AB80;
  v8 = objc_msgSend(v4, "topAnchor");
  v9 = *(void **)&v2[OBJC_IVAR____TtC7Climate19ClimateProgressView_contentView];
  v10 = objc_msgSend(v9, "bottomAnchor");
  v11 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v7 + 32) = v11;
  v12 = objc_msgSend(v4, "widthAnchor");
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", 30.0);

  *(_QWORD *)(v7 + 40) = v13;
  v14 = objc_msgSend(v4, "heightAnchor");
  v15 = objc_msgSend(v14, "constraintEqualToConstant:", a1);

  *(_QWORD *)(v7 + 48) = v15;
  v16 = objc_msgSend(v4, "centerXAnchor");
  v17 = objc_msgSend(v2, "centerXAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v7 + 56) = v18;
  v19 = objc_msgSend(v5, "topAnchor");
  v20 = objc_msgSend(v9, "bottomAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  v22 = OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressViewConstraint;
  v23 = *(void **)&v2[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressViewConstraint];
  *(_QWORD *)(v7 + 64) = v21;
  *(_QWORD *)(v7 + 72) = v23;
  v24 = v23;
  v25 = objc_msgSend(v5, "heightAnchor");
  v26 = objc_msgSend(v25, "constraintEqualToConstant:", a1);

  *(_QWORD *)(v7 + 80) = v26;
  v27 = objc_msgSend(v5, "leadingAnchor");
  v28 = objc_msgSend(v4, "leadingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v7 + 88) = v29;
  specialized Array._endMutation()(v30);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v43, "activateConstraints:", isa);

  v32 = (float)*(int *)&v2[OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue];
  v33 = OBJC_IVAR____TtC7Climate19ClimateProgressView_range;
  v34 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC7Climate19ClimateProgressView_range], "minimum");
  objc_msgSend(v34, "floatValue");
  LODWORD(a1) = v35;

  v36 = v32 - *(float *)&a1;
  v37 = objc_msgSend(*(id *)&v2[v33], "maximum");
  objc_msgSend(v37, "floatValue");
  LODWORD(a1) = v38;

  v39 = objc_msgSend(*(id *)&v2[v33], "minimum");
  objc_msgSend(v39, "floatValue");
  v41 = v40;

  objc_msgSend(*(id *)&v2[v22], "setConstant:", (float)(v36 / (float)(*(float *)&a1 - v41)) * 30.0);
  return objc_msgSend(v2, "layoutIfNeeded");
}

double sub_100055D10(char a1)
{
  char *v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(void **)&v1[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressView];
  v4 = *(id *)&v1[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_trackView];
  v5 = v3;
  v12 = 0x3FF0000000000000;
  v13 = 0;
  v14 = 0;
  v15 = 0x3FF0000000000000;
  v16 = 0;
  v17 = 0;
  objc_msgSend(v4, "setTransform:", &v12);
  objc_msgSend(v4, "setAlpha:", 0.0);

  v6 = v5;
  v12 = 0x3FF0000000000000;
  v13 = 0;
  v14 = 0;
  v15 = 0x3FF0000000000000;
  v16 = 0;
  v17 = 0;
  objc_msgSend(v6, "setTransform:", &v12);
  objc_msgSend(v6, "setAlpha:", 0.0);

  v7 = swift_allocObject(&unk_10009FAE8, 24, 7);
  *(_QWORD *)(v7 + 16) = v1;
  if ((a1 & 1) != 0)
  {
    v8 = swift_allocObject(&unk_10009FB10, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_1000566F8;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = v1;
    swift_retain(v7);
    objc_msgSend(v9, "_removeAllAnimations:", 1);
    v10 = sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
    __chkstk_darwin(v10);
    static UIView.animate(springDuration:bounce:initialSpringVelocity:delay:options:animations:completion:)(0, sub_10001FAE8, 0.513, -0.02, 0.0, 0.0);
    swift_release(v7);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  else
  {
    sub_100055EF8(v1);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

void sub_100055EF8(char *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(void **)&a1[OBJC_IVAR____TtC7Climate19ClimateProgressView_centerSymbolYConstraint];
  if (v2)
    objc_msgSend(v2, "setConstant:", -3.0);
  objc_msgSend(a1, "layoutIfNeeded");
  v3 = *(void **)&a1[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressView];
  v4 = *(id *)&a1[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_trackView];
  v5 = v3;
  v7 = 0x3FF0000000000000;
  v8 = 0;
  v9 = 0;
  v10 = 0x3FF0000000000000;
  v11 = 0;
  v12 = 0;
  objc_msgSend(v4, "setTransform:", &v7);
  objc_msgSend(v4, "setAlpha:", 1.0);

  v6 = v5;
  v7 = 0x3FF0000000000000;
  v8 = 0;
  v9 = 0;
  v10 = 0x3FF0000000000000;
  v11 = 0;
  v12 = 0;
  objc_msgSend(v6, "setTransform:", &v7);
  objc_msgSend(v6, "setAlpha:", 1.0);

}

double sub_100056004(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t inited;
  void *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double result;
  void *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26[48];

  v2 = v1;
  v4 = sub_100006058((uint64_t *)&unk_1000B7590);
  inited = swift_initStackObject(v4, v26);
  *(_OWORD *)(inited + 16) = xmmword_100088C40;
  v6 = *(void **)&v1[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_trackView];
  *(_QWORD *)(inited + 32) = v6;
  v7 = *(void **)&v1[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressView];
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)&v23 = inited;
  specialized Array._endMutation()(inited);
  v8 = v23;
  v9 = v23 & 0xC000000000000001;
  v10 = v6;
  v11 = v7;
  if ((v23 & 0xC000000000000001) != 0)
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
  else
    v12 = *(id *)(v23 + 32);
  v13 = v12;
  if (qword_1000B6F60 != -1)
    swift_once(&qword_1000B6F60, sub_100021E80);
  v23 = *(_OWORD *)byte_1000BC7F0;
  v24 = *(_OWORD *)&byte_1000BC7F0[16];
  v25 = *(_OWORD *)&byte_1000BC7F0[32];
  objc_msgSend(v13, "setTransform:", &v23);

  if (v9)
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v8);
  else
    v14 = *(id *)(v8 + 40);
  v15 = v14;
  if (qword_1000B6F60 != -1)
    swift_once(&qword_1000B6F60, sub_100021E80);
  v23 = *(_OWORD *)byte_1000BC7F0;
  v24 = *(_OWORD *)&byte_1000BC7F0[16];
  v25 = *(_OWORD *)&byte_1000BC7F0[32];
  objc_msgSend(v15, "setTransform:", &v23);
  swift_bridgeObjectRelease(v8);

  v16 = swift_allocObject(&unk_10009FA98, 24, 7);
  *(_QWORD *)(v16 + 16) = v2;
  if ((a1 & 1) != 0)
  {
    v17 = swift_allocObject(&unk_10009FAC0, 32, 7);
    *(_QWORD *)(v17 + 16) = sub_10001FA1C;
    *(_QWORD *)(v17 + 24) = v16;
    v18 = v2;
    swift_retain(v16);
    objc_msgSend(v18, "_removeAllAnimations:", 1);
    v19 = sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
    __chkstk_darwin(v19);
    static UIView.animate(springDuration:bounce:initialSpringVelocity:delay:options:animations:completion:)(0, sub_10001FA8C, 0.513, -0.02, 0.0, 0.0);
    swift_release(v16);
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  else
  {
    v21 = *(void **)&v2[OBJC_IVAR____TtC7Climate19ClimateProgressView_centerSymbolYConstraint];
    v22 = v2;
    if (v21)
      objc_msgSend(v21, "setConstant:", 0.0);
    objc_msgSend(v2, "layoutIfNeeded");
    *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  }
  return result;
}

void sub_1000562CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  int v5;
  id v6;
  int v7;
  int v8;
  int v9;
  id v10;
  int v11;
  int v12;
  id v13;
  int v14;
  id v15;
  int v16;
  int v17;
  int v18;
  id v19;
  int v20;
  int v21;
  uint64_t v22;

  v1 = OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue;
  v2 = OBJC_IVAR____TtC7Climate19ClimateProgressView_range;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_range);
  if ((*(_DWORD *)(v0 + OBJC_IVAR____TtC7Climate19ClimateProgressView_currentValue) & 0x80000000) != 0)
  {
    v13 = objc_msgSend(v3, "maximum");
    objc_msgSend(v13, "intValue");

    v14 = *(_DWORD *)(v0 + v1);
    v15 = objc_msgSend(*(id *)(v0 + v2), "maximum");
    v16 = objc_msgSend(v15, "intValue");

    if (v14 >= 0)
      v17 = v16 & ~(v16 >> 31);
    else
      v17 = v16 & (v16 >> 31);
    v18 = *(_DWORD *)(v0 + v1);
    v19 = objc_msgSend(*(id *)(v0 + v2), "minimum");
    v20 = objc_msgSend(v19, "intValue");

    v21 = v20 & ~(v20 >> 31);
    if (v18 < 0)
      v21 = v20 & (v20 >> 31);
    if (!__OFSUB__(v17, v21))
      goto LABEL_15;
  }
  else
  {
    v4 = objc_msgSend(v3, "minimum");
    objc_msgSend(v4, "intValue");

    v5 = *(_DWORD *)(v0 + v1);
    v6 = objc_msgSend(*(id *)(v0 + v2), "maximum");
    v7 = objc_msgSend(v6, "intValue");

    if (v5 >= 0)
      v8 = v7 & ~(v7 >> 31);
    else
      v8 = v7 & (v7 >> 31);
    v9 = *(_DWORD *)(v0 + v1);
    v10 = objc_msgSend(*(id *)(v0 + v2), "minimum");
    v11 = objc_msgSend(v10, "intValue");

    v12 = v11 & ~(v11 >> 31);
    if (v9 < 0)
      v12 = v11 & (v11 >> 31);
    if (!__OFSUB__(v8, v12))
    {
LABEL_15:
      v22 = sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
      __chkstk_darwin(v22);
      static UIView.animate(springDuration:bounce:initialSpringVelocity:delay:options:animations:completion:)(0, sub_100056700, 0.513, -0.02, 0.0, 0.0);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

id sub_100056550(char *a1, float a2)
{
  void *v4;
  id v5;
  CGRect v7;

  v4 = *(void **)&a1[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_trackView];
  v5 = *(id *)&a1[OBJC_IVAR____TtC7Climate22ClimateBarProgressView_progressViewConstraint];
  objc_msgSend(v4, "bounds");
  objc_msgSend(v5, "setConstant:", CGRectGetWidth(v7) * a2);

  return objc_msgSend(a1, "layoutIfNeeded");
}

void sub_1000565DC()
{
  uint64_t v0;

}

id sub_100056618()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateBarProgressView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateBarProgressView()
{
  return objc_opt_self(_TtC7Climate22ClimateBarProgressView);
}

uint64_t sub_1000566B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000566D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000566F8()
{
  uint64_t v0;

  sub_100055EF8(*(char **)(v0 + 16));
}

id sub_100056700()
{
  uint64_t v0;

  return sub_100056550(*(char **)(v0 + 16), *(float *)(v0 + 24));
}

id sub_100056714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  char v6;
  int v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;

  v1 = v0 + OBJC_IVAR____TtC7Climate23ClimateZonePositionView_zone;
  v2 = type metadata accessor for ClimateZone(0);
  v3 = v2;
  if (*(_QWORD *)(v1 + *(int *)(v2 + 44)))
  {
    v4 = CAFSeatFan.isVenting.getter();
    v5 = v4;
    if (!*(_QWORD *)(v1 + *(int *)(v3 + 40)))
    {
      if ((v4 & 1) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
  }
  else
  {
    if (!*(_QWORD *)(v1 + *(int *)(v2 + 40)))
      goto LABEL_12;
    v5 = 0;
  }
  v6 = CAFSeatHeatingCooling.isHeating.getter();
  v7 = CAFSeatHeatingCooling.isCooling.getter();
  if ((v6 & 1) == 0)
  {
    if (((v5 | v7) & 1) != 0)
    {
LABEL_11:
      v8 = *(void **)(v0 + OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_seatView);
      v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_images + 8);
      return objc_msgSend(v8, "setImage:", v10);
    }
LABEL_12:
    v8 = *(void **)(v0 + OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_seatView);
    v10 = 0;
    return objc_msgSend(v8, "setImage:", v10);
  }
  v8 = *(void **)(v0 + OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_seatView);
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_images);
  if ((v5 & 1) != 0)
    v10 = v9[2];
  else
    v10 = *v9;
  return objc_msgSend(v8, "setImage:", v10);
}

void sub_100056818()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_images + 8);
  v2 = *(id *)(v0 + OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_images + 16);

}

id sub_10005686C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateZoneHeatingCoolingVentingPositionView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000568F8()
{
  return type metadata accessor for ClimateZoneHeatingCoolingVentingPositionView(0);
}

uint64_t type metadata accessor for ClimateZoneHeatingCoolingVentingPositionView(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9568;
  if (!qword_1000B9568)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateZoneHeatingCoolingVentingPositionView);
  return result;
}

uint64_t sub_10005693C(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = &unk_10008ABF0;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 352);
}

char *sub_100056C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(_QWORD, _QWORD), void *a6, void *a7, __n128 a8)
{
  char *v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  char *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  Class isa;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (**v62)(_QWORD, _QWORD);
  void *v63;
  uint64_t v64;
  uint64_t v65;

  v9 = v8;
  v62 = a5;
  v63 = a6;
  v64 = a4;
  v60 = a2;
  v61 = a3;
  v59 = a1;
  v11 = type metadata accessor for CAUVehicleLayoutInfo(0, a8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for ClimateZone(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_seatView;
  v19 = objc_allocWithZone((Class)UIImageView);
  v20 = v8;
  *(_QWORD *)&v9[v18] = objc_msgSend(v19, "init");
  v21 = &v20[OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_images];
  v23 = v62;
  v22 = v63;
  *(_QWORD *)v21 = v62;
  *((_QWORD *)v21 + 1) = v22;
  *((_QWORD *)v21 + 2) = a7;
  v24 = a7;
  v25 = v59;
  v26 = v23;
  v27 = v22;

  sub_100008C1C(v25, (uint64_t)v17);
  v62 = (void (**)(_QWORD, _QWORD))v12;
  v63 = (void *)v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v64, v11);
  v28 = v60;
  swift_unknownObjectRetain(v60);
  v29 = (uint64_t)v17;
  v30 = v28;
  sub_100066098(v29, v28, v61, (uint64_t)v14);
  v32 = v31;
  swift_unknownObjectRelease(v30);
  v33 = *(void **)(v25 + v15[7]);
  v34 = v32;
  objc_msgSend(v33, "registerObserver:", v34);
  v35 = *(void **)(v25 + v15[10]);
  if (v35)
    objc_msgSend(v35, "registerObserver:", v34);
  v36 = *(void **)(v25 + v15[11]);
  if (v36)
    objc_msgSend(v36, "registerObserver:", v34);
  v37 = OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_seatView;
  v38 = *(void **)&v34[OBJC_IVAR____TtC7Climate44ClimateZoneHeatingCoolingVentingPositionView_seatView];
  objc_msgSend(v38, "setContentMode:", 1);
  objc_msgSend(v38, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v34, "insertSubview:belowSubview:", v38, *(_QWORD *)&v34[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButton]);
  v39 = (void *)objc_opt_self(NSLayoutConstraint);
  v40 = sub_100006058((uint64_t *)&unk_1000B7590);
  v41 = swift_allocObject(v40, 64, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100088DF0;
  v42 = objc_msgSend(v38, "topAnchor");
  v43 = objc_msgSend(v34, "topAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v41 + 32) = v44;
  v45 = objc_msgSend(*(id *)&v34[v37], "bottomAnchor");
  v46 = objc_msgSend(v34, "bottomAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v41 + 40) = v47;
  v48 = objc_msgSend(*(id *)&v34[v37], "leadingAnchor");
  v49 = objc_msgSend(v34, "leadingAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

  *(_QWORD *)(v41 + 48) = v50;
  v51 = objc_msgSend(*(id *)&v34[v37], "trailingAnchor");
  v52 = objc_msgSend(v34, "trailingAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

  *(_QWORD *)(v41 + 56) = v53;
  v65 = v41;
  specialized Array._endMutation()(v54);
  v55 = v65;
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v55);
  objc_msgSend(v39, "activateConstraints:", isa);

  sub_100056714();
  ((void (**)(uint64_t, void *))v62)[1](v64, v63);
  sub_10003C604(v25);
  return v34;
}

char *ClimateStepper.init(primaryButton:axis:range:)(void *a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  char *v18;
  objc_class *v19;
  id v20;
  _QWORD *v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _BYTE *v42;
  int v43;
  void *v44;
  _BYTE *v45;
  _BYTE *v46;
  char v47;
  void *v48;
  _BYTE *v49;
  char v50;
  id v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  char *v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  void *v84;
  void *v85;
  void **v86;
  void *v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  void *v92;
  void *v93;
  uint64_t v94;
  id v95;
  void *v96;
  id v97;
  id v98;
  uint64_t v99;
  char v100;
  char v101;
  _QWORD *v102;
  char *v103;
  void *v104;
  void *v105;
  void *v106;
  void **v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  id v112;
  char *v113;
  void *v114;
  void *v115;
  uint64_t v116;
  id v117;
  id v118;
  char v119;
  char v120;
  id v121;
  id v122;
  char *v123;
  void *v124;
  void *v125;
  void *v126;
  void **v127;
  void *v128;
  id v129;
  id v130;
  id v131;
  id v132;
  char *v133;
  void *v134;
  void *v135;
  uint64_t v136;
  id v137;
  id v138;
  char v139;
  char v140;
  id v141;
  id v142;
  id v143;
  void *v145;
  id v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  void *v156;
  char v157[24];
  char v158[24];
  objc_super v159;

  *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate + 8] = 0;
  ((void (*)(void))swift_unknownObjectWeakInit)();
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate14ClimateStepper_activeConstraints] = _swiftEmptyArrayStorage;
  v7 = &v3[OBJC_IVAR____TtC7Climate14ClimateStepper_downColorConfig];
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v3;
  v10 = objc_msgSend(v8, "clearColor");
  v11 = objc_msgSend(v8, "systemWhiteColor");
  *(_QWORD *)v7 = v10;
  *((_QWORD *)v7 + 1) = v11;
  *((_QWORD *)v7 + 2) = &_swiftEmptyDictionarySingleton;
  v12 = &v9[OBJC_IVAR____TtC7Climate14ClimateStepper_upColorConfig];
  v13 = objc_msgSend(v8, "clearColor");
  v14 = objc_msgSend(v8, "systemWhiteColor");
  *(_QWORD *)v12 = v13;
  *((_QWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 2) = &_swiftEmptyDictionarySingleton;
  v15 = &v9[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig];
  v16 = objc_msgSend(v8, "clearColor");
  v17 = objc_msgSend(v8, "systemWhiteColor");
  *(_QWORD *)v15 = v16;
  *((_QWORD *)v15 + 1) = v17;
  *((_QWORD *)v15 + 2) = &_swiftEmptyDictionarySingleton;
  v9[OBJC_IVAR____TtC7Climate14ClimateStepper_disableSelectedBackgroundMaterial] = 0;
  v18 = &v9[OBJC_IVAR____TtC7Climate14ClimateStepper_accessibilityIdentifierModifier];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate14ClimateStepper_backgroundView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate14ClimateStepper_arrowsWidth] = 0x4040000000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButtonWidth] = 0x404F000000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate14ClimateStepper_arrowsHeight] = 0x4040000000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButtonHeight] = 0x4040000000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton] = a1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate14ClimateStepper_axis] = a2;
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate14ClimateStepper_range] = a3;
  v19 = (objc_class *)type metadata accessor for ClimateStepperButton();
  v20 = objc_allocWithZone(v19);
  v21 = a1;
  v22 = a3;
  v23 = objc_msgSend(v20, "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate14ClimateStepper_upButton] = v23;
  v24 = objc_msgSend(objc_allocWithZone(v19), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate14ClimateStepper_downButton] = v24;

  v159.receiver = v9;
  v159.super_class = (Class)type metadata accessor for ClimateStepper();
  v25 = (char *)objc_msgSendSuper2(&v159, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v26 = OBJC_IVAR____TtC7Climate14ClimateStepper_upButton;
  v27 = *(_QWORD *)&v25[OBJC_IVAR____TtC7Climate14ClimateStepper_upButton];
  v28 = swift_allocObject(&unk_10009FBB0, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16, v25);
  v29 = swift_allocObject(&unk_10009FBD8, 32, 7);
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v22;
  v30 = (_QWORD *)(v27 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock);
  v31 = *(_QWORD *)(v27 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock);
  v32 = v30[1];
  *v30 = sub_10005AB60;
  v30[1] = v29;
  v33 = v22;
  v34 = v25;
  sub_100005118(v31, v32);
  v155 = OBJC_IVAR____TtC7Climate14ClimateStepper_downButton;
  v35 = *(_QWORD *)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_downButton];
  v36 = swift_allocObject(&unk_10009FBB0, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, v34);
  v37 = swift_allocObject(&unk_10009FC00, 32, 7);
  *(_QWORD *)(v37 + 16) = v36;
  *(_QWORD *)(v37 + 24) = v33;
  v38 = (_QWORD *)(v35 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock);
  v39 = *(_QWORD *)(v35 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock);
  v40 = *(_QWORD *)(v35 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8);
  *v38 = sub_10005AC88;
  v38[1] = v37;
  v146 = v33;
  sub_100005118(v39, v40);
  if (qword_1000B7010 != -1)
    swift_once(&qword_1000B7010, sub_10006A418);
  v41 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", qword_1000BC9B8, 2);
  v153 = v26;
  v42 = *(_BYTE **)&v25[v26];
  v43 = v42[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v42[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if (v43 != 1)
  {
    v44 = *(void **)&v42[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v45 = v42;
    objc_msgSend(v44, "removeFromSuperview");
    ClimateButton.refreshColorConfig()();

  }
  v46 = *(_BYTE **)&v34[v155];
  v47 = v46[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v46[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if ((v47 & 1) == 0)
  {
    v48 = *(void **)&v46[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v49 = v46;
    objc_msgSend(v48, "removeFromSuperview");
    ClimateButton.refreshColorConfig()();

  }
  v50 = *((_BYTE *)v21 + OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial);
  *((_BYTE *)v21 + OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial) = 1;
  if ((v50 & 1) == 0)
  {
    v51 = objc_msgSend(*(id *)((char *)v21 + OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView), "removeFromSuperview");
    (*(void (**)(id))((swift_isaMask & *v21) + 0x230))(v51);
  }
  v154 = v21;
  ClimateStepper.setupBackgroundView()();
  sub_10005A3A4();
  v52 = *(char **)&v25[v26];
  v53 = *(_QWORD *)&v52[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityIdentifierModifier + 8];
  *(_OWORD *)&v52[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityIdentifierModifier] = xmmword_10008AC10;
  v54 = v52;
  swift_bridgeObjectRelease(v53);
  sub_10005A0F0();

  v55 = *(_QWORD *)&v25[v26];
  v56 = swift_allocObject(&unk_10009FBB0, 24, 7);
  swift_unknownObjectWeakInit(v56 + 16, v34);
  v57 = (uint64_t *)(v55 + OBJC_IVAR____TtC7Climate13ClimateButton_action);
  swift_beginAccess(v57, v158, 1, 0);
  v58 = *v57;
  v59 = v57[1];
  *v57 = (uint64_t)sub_10005B094;
  v57[1] = v56;
  sub_100005118(v58, v59);
  v152 = v25;
  v60 = (char *)*(id *)&v25[v26];
  v61 = v41;
  v62 = ClimateButton.imageSymbolConfiguration.getter();
  v63 = *(void **)&v60[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration];
  *(_QWORD *)&v60[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = v61;
  v64 = v61;

  v65 = ClimateButton.imageSymbolConfiguration.getter();
  sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
  LOBYTE(v63) = static NSObject.== infix(_:_:)(v65);

  if ((v63 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();

  v66 = *(char **)&v34[v155];
  v67 = *(_QWORD *)&v66[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityIdentifierModifier + 8];
  *(_OWORD *)&v66[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityIdentifierModifier] = xmmword_10008AC20;
  v68 = v66;
  swift_bridgeObjectRelease(v67);
  sub_10005A0F0();

  v69 = *(_QWORD *)&v34[v155];
  v70 = swift_allocObject(&unk_10009FBB0, 24, 7);
  swift_unknownObjectWeakInit(v70 + 16, v34);
  v71 = (uint64_t *)(v69 + OBJC_IVAR____TtC7Climate13ClimateButton_action);
  swift_beginAccess(v71, v157, 1, 0);
  v72 = *v71;
  v73 = v71[1];
  *v71 = (uint64_t)sub_10005B0B4;
  v71[1] = v70;
  sub_100005118(v72, v73);
  v74 = *(void **)&v34[v155];
  v75 = v64;
  v76 = v74;
  v77 = ClimateButton.imageSymbolConfiguration.getter();
  v78 = *(void **)&v76[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration];
  *(_QWORD *)&v76[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = v61;
  v79 = v75;

  v80 = ClimateButton.imageSymbolConfiguration.getter();
  LOBYTE(v78) = static NSObject.== infix(_:_:)(v80);

  if ((v78 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();
  v145 = v79;

  objc_msgSend(v34, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v81 = objc_msgSend(v34, "layer");
  objc_msgSend(v81, "setCornerCurve:", kCACornerCurveContinuous);

  v82 = objc_msgSend(v34, "layer");
  objc_msgSend(v82, "setCornerRadius:", 12.0);

  objc_msgSend(v34, "setClipsToBounds:", 1);
  objc_msgSend(v34, "addSubview:", v21);
  v83 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig];
  v84 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 8];
  v85 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 16];
  v86 = (void **)((char *)v21 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v88 = *(void **)((char *)v21 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v87 = *(void **)((char *)v154 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v149 = *(_QWORD *)((char *)v154 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  *v86 = v83;
  v86[1] = v84;
  v86[2] = v85;
  v89 = v83;
  v90 = v84;
  swift_bridgeObjectRetain_n(v85, 2);
  v147 = v89;
  v91 = v90;
  v93 = *v86;
  v92 = v86[1];
  v94 = (uint64_t)v86[2];
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v95 = v93;
  v96 = v87;
  v97 = v95;
  v98 = v92;
  swift_bridgeObjectRetain(v94);
  if ((static NSObject.== infix(_:_:)(v97) & 1) != 0 && (static NSObject.== infix(_:_:)(v98) & 1) != 0)
  {
    v99 = v149;
    sub_10005B490(v94, v149);
    v101 = v100;
    swift_bridgeObjectRelease(v94);

    v102 = v154;
    if ((v101 & 1) != 0)
      goto LABEL_19;
  }
  else
  {
    swift_bridgeObjectRelease(v94);

    v102 = v154;
    v99 = v149;
  }
  (*(void (**)(void))((swift_isaMask & *v102) + 0x230))();
LABEL_19:

  swift_bridgeObjectRelease(v99);
  swift_bridgeObjectRelease(v85);
  objc_msgSend(v102, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v103 = *(char **)&v34[v155];
  objc_msgSend(v34, "addSubview:", v103);
  objc_msgSend(v103, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v104 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_downColorConfig];
  v105 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_downColorConfig + 8];
  v106 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_downColorConfig + 16];
  v107 = (void **)&v103[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  v108 = *(void **)&v103[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  v148 = *(_QWORD *)&v103[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16];
  v150 = *(void **)&v103[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
  *v107 = v104;
  v107[1] = v105;
  v107[2] = v106;
  v109 = v104;
  v110 = v105;
  swift_bridgeObjectRetain_n(v106, 2);
  v111 = v109;
  v112 = v110;
  v113 = v103;
  v114 = *v107;
  v115 = v107[1];
  v116 = (uint64_t)v107[2];
  v117 = v114;
  v118 = v115;
  swift_bridgeObjectRetain(v116);
  if ((static NSObject.== infix(_:_:)(v117) & 1) != 0 && (static NSObject.== infix(_:_:)(v118) & 1) != 0)
  {
    sub_10005B490(v116, v148);
    v120 = v119;
    swift_bridgeObjectRelease(v116);

    if ((v120 & 1) != 0)
      goto LABEL_25;
  }
  else
  {
    swift_bridgeObjectRelease(v116);

  }
  ClimateButton.refreshColorConfig()();
LABEL_25:

  swift_bridgeObjectRelease(v148);
  swift_bridgeObjectRelease(v106);
  v121 = objc_msgSend(*(id *)&v34[v155], "layer");
  objc_msgSend(v121, "setHitTestsAsOpaque:", 1);

  v122 = objc_msgSend(*(id *)&v34[v155], "layer");
  objc_msgSend(v122, "setCornerRadius:", 0.0);

  v123 = *(char **)&v152[v153];
  objc_msgSend(v34, "addSubview:", v123);
  objc_msgSend(v123, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v124 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_upColorConfig];
  v125 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_upColorConfig + 8];
  v126 = *(void **)&v34[OBJC_IVAR____TtC7Climate14ClimateStepper_upColorConfig + 16];
  v127 = (void **)&v123[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  v128 = *(void **)&v123[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  v156 = *(void **)&v123[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
  v151 = *(_QWORD *)&v123[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16];
  *v127 = v124;
  v127[1] = v125;
  v127[2] = v126;
  v129 = v124;
  v130 = v125;
  swift_bridgeObjectRetain_n(v126, 2);
  v131 = v129;
  v132 = v130;
  v133 = v123;
  v134 = *v127;
  v135 = v127[1];
  v136 = (uint64_t)v127[2];
  v137 = v134;
  v138 = v135;
  swift_bridgeObjectRetain(v136);
  if ((static NSObject.== infix(_:_:)(v137) & 1) != 0 && (static NSObject.== infix(_:_:)(v138) & 1) != 0)
  {
    sub_10005B490(v136, v151);
    v140 = v139;
    swift_bridgeObjectRelease(v136);

    if ((v140 & 1) != 0)
      goto LABEL_31;
  }
  else
  {
    swift_bridgeObjectRelease(v136);

  }
  ClimateButton.refreshColorConfig()();
LABEL_31:

  swift_bridgeObjectRelease(v151);
  swift_bridgeObjectRelease(v126);
  v141 = objc_msgSend(*(id *)&v152[v153], "layer");
  objc_msgSend(v141, "setCornerRadius:", 0.0);

  v142 = objc_msgSend(*(id *)&v152[v153], "layer");
  objc_msgSend(v142, "setHitTestsAsOpaque:", 1);

  v143 = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "initWithTarget:action:", v34, "longPressTriggered:");
  objc_msgSend(v34, "addGestureRecognizer:", v143);
  ClimateStepper.updateConstraintsAndArrows()();

  return v34;
}

uint64_t ClimateStepper.popoverDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t ClimateStepper.popoverDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate;
  swift_beginAccess(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  sub_10005A6A0();
  return swift_unknownObjectRelease(a1);
}

void (*ClimateStepper.popoverDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100057EA0;
}

void sub_100057EA0(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
    sub_10005A6A0();
  }
  free(v3);
}

id ClimateStepper.primaryButton.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v3, 0, 0);
  return *v1;
}

void ClimateStepper.primaryButton.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*ClimateStepper.primaryButton.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t ClimateStepper.axis.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis;
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis, v3, 0, 0);
  return *(_QWORD *)v1;
}

void ClimateStepper.axis.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v5[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis);
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
    ClimateStepper.updateConstraintsAndArrows()();
}

void (*ClimateStepper.axis.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7Climate14ClimateStepper_axis;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_100058104;
}

void sub_100058104(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_QWORD *)(v4 + v3);
  *(_QWORD *)(v4 + v3) = v2;
  if (v2 != v5)
    ClimateStepper.updateConstraintsAndArrows()();
  free(v1);
}

Swift::Void __swiftcall ClimateStepper.updatePresentation()()
{
  _QWORD *v0;
  _QWORD *v1;
  char v2;
  char *v3;
  char *v4;
  id *v5;
  void (*v6)(void);
  id v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BOOL8 v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BOOL8 v17;
  uint64_t v18;
  _BYTE v19[24];

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x140))();
  v3 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
  if ((v2 & 0x18) != 0)
  {
    objc_msgSend(v3, "setHidden:", 1);
    v4 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
    objc_msgSend(v4, "setHidden:", 1);
  }
  else
  {
    objc_msgSend(v3, "setHidden:", 0);
    v4 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
    objc_msgSend(v4, "setHidden:", 0);
  }
  v5 = (id *)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v19, 0, 0);
  v6 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*v5) + 0x220);
  v7 = *v5;
  v6();

  sub_10007813C();
  v8 = *(uint64_t (**)(uint64_t))&v4[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  if (v8)
  {
    v9 = *(_QWORD *)&v4[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
    v10 = swift_retain(v9);
    v11 = v8(v10);
    sub_100005118((uint64_t)v8, v9);
    if ((v11 & 0x10) != 0)
    {
      v12 = 0;
      goto LABEL_9;
    }
  }
  else
  {
    v11 = 0;
  }
  v12 = (v11 & 8) == 0;
LABEL_9:
  objc_msgSend(v4, "setEnabled:", v12);
  ClimateButton.refreshColorConfig()();
  sub_10007813C();
  v13 = *(uint64_t (**)(uint64_t))&v3[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  if (!v13)
  {
    v16 = 0;
    goto LABEL_13;
  }
  v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
  v15 = swift_retain(v14);
  v16 = v13(v15);
  sub_100005118((uint64_t)v13, v14);
  if ((v16 & 0x10) == 0)
  {
LABEL_13:
    v17 = (v16 & 8) == 0;
    goto LABEL_14;
  }
  v17 = 0;
LABEL_14:
  objc_msgSend(v3, "setEnabled:", v17);
  ClimateButton.refreshColorConfig()();
  v18 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1E8))();
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x1F0))(v18);
}

void ClimateStepper.step(_:)()
{
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease(0xE000000000000000);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000028, 0x800000010008E460, "Climate/ClimateStepper.swift", 28, 2, 61, 0);
  __break(1u);
}

Swift::Void __swiftcall ClimateStepper.refreshColorConfig()()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(__n128);
  id v4;
  id v5;
  __n128 v6;
  char v7;
  id v8;

  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_disableSelectedBackgroundMaterial) & 1) != 0)
  {
    v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 8);
    v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 16);
    v3 = *(uint64_t (**)(__n128))((swift_isaMask & *v0) + 0x140);
    v4 = *(id *)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig);
    v5 = v1;
    v6 = swift_bridgeObjectRetain(v2);
    v7 = v3(v6);
    v8 = sub_1000477D8(v7, v4, v2);
    swift_bridgeObjectRelease(v2);

  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  objc_msgSend(v0, "setBackgroundColor:", v8);

}

double ClimateStepper.arrowsWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_arrowsWidth);
}

double ClimateStepper.primaryButtonWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButtonWidth);
}

double ClimateStepper.arrowsHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_arrowsHeight);
}

void ClimateStepper.arrowsHeight.setter(double a1)
{
  sub_100058510(&OBJC_IVAR____TtC7Climate14ClimateStepper_arrowsHeight, a1);
}

double ClimateStepper.primaryButtonHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButtonHeight);
}

void ClimateStepper.primaryButtonHeight.setter(double a1)
{
  sub_100058510(&OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButtonHeight, a1);
}

void sub_100058510(_QWORD *a1, double a2)
{
  uint64_t v2;
  double v3;
  _QWORD *v4;
  _BYTE v5[24];

  v3 = *(double *)(v2 + *a1);
  *(double *)(v2 + *a1) = a2;
  if (v3 != a2)
  {
    v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis);
    swift_beginAccess(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis, v5, 0, 0);
    if (*v4 == 1)
      ClimateStepper.updateConstraintsAndArrows()();
  }
}

id ClimateStepper.longPressTriggered(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id result;
  id v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];

  v2 = v1;
  if (objc_msgSend(a1, "state") == (id)1)
  {
    v4 = static os_log_type_t.default.getter(1);
    v5 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v6 = (void *)static OS_os_log.default.getter(v5);
    os_log(_:dso:log:_:_:)(v4, &_mh_execute_header, v6, "Stepper did start longPress gesture", 35, 2, _swiftEmptyArrayStorage);

    v7 = v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate;
    swift_beginAccess(v7, v36, 0, 0);
    result = (id)swift_unknownObjectWeakLoadStrong(v7);
    if (!result)
      return result;
    v9 = result;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(1, ObjectType, v10);
    return (id)swift_unknownObjectRelease(v9);
  }
  result = objc_msgSend(a1, "state");
  if (result == (id)3)
  {
    v12 = static os_log_type_t.default.getter(3);
    v13 = sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v14 = (void *)static OS_os_log.default.getter(v13);
    os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v14, "Stepper did end longPress gesture", 33, 2, _swiftEmptyArrayStorage);

    v15 = v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate;
    swift_beginAccess(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate, v36, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v15);
    if (Strong)
    {
      v17 = Strong;
      v18 = *(_QWORD *)(v15 + 8);
      v19 = swift_getObjectType(Strong);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v18 + 8))(0, v19, v18);
      swift_unknownObjectRelease(v17);
    }
    v20 = *(_BYTE **)(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
    v21 = OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted;
    v22 = v20[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted];
    v20[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted] = 0;
    objc_msgSend(v20, "setHighlighted:", 0);
    v23 = v20[v21];
    if (v22 != (_DWORD)v23)
    {
      v24 = &v20[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate];
      v25 = swift_unknownObjectWeakLoadStrong(&v20[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate]);
      if (v25)
      {
        v26 = v25;
        v27 = *((_QWORD *)v24 + 1);
        v28 = swift_getObjectType(v25);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 8))(v23, v28, v27);
        swift_unknownObjectRelease(v26);
      }
    }
    v29 = *(_BYTE **)(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
    v30 = OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted;
    v31 = v29[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted];
    v29[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted] = 0;
    result = objc_msgSend(v29, "setHighlighted:", 0);
    v32 = v29[v30];
    if (v31 != (_DWORD)v32)
    {
      v33 = &v29[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate];
      result = (id)swift_unknownObjectWeakLoadStrong(&v29[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate]);
      if (result)
      {
        v9 = result;
        v34 = *((_QWORD *)v33 + 1);
        v35 = swift_getObjectType(result);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 8))(v32, v35, v34);
        return (id)swift_unknownObjectRelease(v9);
      }
    }
  }
  return result;
}

Swift::Void __swiftcall ClimateStepper.updateConstraintsAndArrows()()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  Class isa;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  Class v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  void (*v91)(void);
  void (*v92)(void);
  _QWORD *v93;
  char v94[128];
  char v95[24];
  _QWORD v96[3];
  _BYTE v97[24];
  char v98[128];
  char v99[24];
  char v100[32];

  v1 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_activeConstraints);
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_activeConstraints, v100, 1, 0);
  v3 = *v2;
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v1, "deactivateConstraints:", isa);

  v5 = *v2;
  *v2 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v5);
  v6 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis);
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis, v99, 0, 0);
  v7 = *v6;
  v8 = sub_100006058((uint64_t *)&unk_1000B7590);
  v93 = v6;
  if (v7)
  {
    inited = swift_initStackObject(v8, v98);
    *(_OWORD *)(inited + 16) = xmmword_10008AC30;
    v10 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
    v11 = objc_msgSend(v10, "topAnchor");
    v12 = objc_msgSend(v0, "topAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    *(_QWORD *)(inited + 32) = v13;
    v14 = objc_msgSend(v10, "widthAnchor");
    v15 = objc_msgSend(v0, "widthAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    *(_QWORD *)(inited + 40) = v16;
    v17 = objc_msgSend(v10, "heightAnchor");
    v91 = *(void (**)(void))((swift_isaMask & *v0) + 0x250);
    v91();
    v18 = objc_msgSend(v17, "constraintEqualToConstant:");

    *(_QWORD *)(inited + 48) = v18;
    v19 = objc_msgSend(v10, "centerXAnchor");
    v20 = objc_msgSend(v0, "centerXAnchor");
    v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

    *(_QWORD *)(inited + 56) = v21;
    v22 = (id *)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
    swift_beginAccess((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v97, 0, 0);
    v23 = objc_msgSend(*v22, "widthAnchor");
    v24 = objc_msgSend(v0, "widthAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

    *(_QWORD *)(inited + 64) = v25;
    v26 = objc_msgSend(*v22, "heightAnchor");
    (*(void (**)(void))((swift_isaMask & *v0) + 0x268))();
    v27 = objc_msgSend(v26, "constraintEqualToConstant:");

    *(_QWORD *)(inited + 72) = v27;
    v28 = objc_msgSend(*v22, "centerYAnchor");
    v29 = objc_msgSend(v0, "centerYAnchor");
    v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

    *(_QWORD *)(inited + 80) = v30;
    v31 = objc_msgSend(*v22, "centerXAnchor");
    v32 = objc_msgSend(v0, "centerXAnchor");
    v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

    *(_QWORD *)(inited + 88) = v33;
    v34 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
    v35 = objc_msgSend(v34, "widthAnchor");
    v36 = objc_msgSend(v0, "widthAnchor");
    v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

    *(_QWORD *)(inited + 96) = v37;
    v38 = objc_msgSend(v34, "heightAnchor");
    v91();
    v39 = objc_msgSend(v38, "constraintEqualToConstant:");

    *(_QWORD *)(inited + 104) = v39;
    v40 = objc_msgSend(v34, "bottomAnchor");
    v41 = objc_msgSend(v0, "bottomAnchor");
    v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

    *(_QWORD *)(inited + 112) = v42;
    v43 = objc_msgSend(v34, "centerXAnchor");
    v44 = objc_msgSend(v0, "centerXAnchor");
    v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);
  }
  else
  {
    inited = swift_initStackObject(v8, v94);
    *(_OWORD *)(inited + 16) = xmmword_10008AC30;
    v34 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
    v46 = objc_msgSend(v34, "leadingAnchor");
    v47 = objc_msgSend(v0, "leadingAnchor");
    v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

    *(_QWORD *)(inited + 32) = v48;
    v49 = objc_msgSend(v34, "heightAnchor");
    v50 = objc_msgSend(v0, "heightAnchor");
    v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

    *(_QWORD *)(inited + 40) = v51;
    v52 = objc_msgSend(v34, "widthAnchor");
    v92 = *(void (**)(void))((swift_isaMask & *v0) + 0x220);
    v92();
    v53 = objc_msgSend(v52, "constraintEqualToConstant:");

    *(_QWORD *)(inited + 48) = v53;
    v54 = objc_msgSend(v34, "centerYAnchor");
    v55 = objc_msgSend(v0, "centerYAnchor");
    v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

    *(_QWORD *)(inited + 56) = v56;
    v57 = (id *)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
    swift_beginAccess((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v97, 0, 0);
    v58 = objc_msgSend(*v57, "widthAnchor");
    (*(void (**)(void))((swift_isaMask & *v0) + 0x238))();
    v59 = objc_msgSend(v58, "constraintEqualToConstant:");

    *(_QWORD *)(inited + 64) = v59;
    v60 = objc_msgSend(*v57, "heightAnchor");
    v61 = objc_msgSend(v0, "heightAnchor");
    v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

    *(_QWORD *)(inited + 72) = v62;
    v63 = objc_msgSend(*v57, "centerYAnchor");
    v64 = objc_msgSend(v0, "centerYAnchor");
    v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

    *(_QWORD *)(inited + 80) = v65;
    v66 = objc_msgSend(*v57, "centerXAnchor");
    v67 = objc_msgSend(v0, "centerXAnchor");
    v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

    *(_QWORD *)(inited + 88) = v68;
    v10 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
    v69 = objc_msgSend(v10, "trailingAnchor");
    v70 = objc_msgSend(v0, "trailingAnchor");
    v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

    *(_QWORD *)(inited + 96) = v71;
    v72 = objc_msgSend(v10, "widthAnchor");
    v92();
    v73 = objc_msgSend(v72, "constraintEqualToConstant:");

    *(_QWORD *)(inited + 104) = v73;
    v74 = objc_msgSend(v10, "heightAnchor");
    v75 = objc_msgSend(v0, "heightAnchor");
    v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

    *(_QWORD *)(inited + 112) = v76;
    v43 = objc_msgSend(v10, "centerYAnchor");
    v44 = objc_msgSend(v0, "centerYAnchor");
    v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);
  }
  v77 = v45;

  *(_QWORD *)(inited + 120) = v77;
  v96[0] = inited;
  specialized Array._endMutation()(v78);
  v79 = v96[0];
  swift_beginAccess(v2, v96, 33, 0);
  sub_100072AC0(v79);
  swift_endAccess(v96);
  v80 = *v2;
  swift_bridgeObjectRetain(*v2);
  v81 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v80);
  objc_msgSend(v1, "activateConstraints:", v81);

  if (*v93 == 1)
    v82 = 0xEA00000000007075;
  else
    v82 = 0xEF64726177726F66;
  v83 = &v10[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v10[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v96, 1, 0);
  v84 = *(_QWORD *)v83;
  v85 = *((_QWORD *)v83 + 1);
  *(_QWORD *)v83 = 0x2E6E6F7276656863;
  *((_QWORD *)v83 + 1) = v82;
  if (!v85
    || (v84 != 0x2E6E6F7276656863 || v82 != v85)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0x2E6E6F7276656863, v82, v84, v85, 0) & 1) == 0)
  {
    ClimateButton.updateClimateConfiguration()();
  }
  swift_bridgeObjectRelease(v85);
  if (*v93 == 1)
    v86 = 0x2E6E6F7276656863;
  else
    v86 = 0xD000000000000010;
  if (*v93 == 1)
    v87 = 0xEC0000006E776F64;
  else
    v87 = 0x800000010008E490;
  v88 = (unint64_t *)&v34[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v34[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v95, 1, 0);
  v89 = *v88;
  v90 = v88[1];
  *v88 = v86;
  v88[1] = v87;
  if (!v90
    || (v86 != v89 || v87 != v90) && (_stringCompareWithSmolCheck(_:_:expecting:)(v86, v87, v89, v90, 0) & 1) == 0)
  {
    ClimateButton.updateClimateConfiguration()();
  }
  swift_bridgeObjectRelease(v90);
}

uint64_t ClimateStepper.constraintsForStepButtons(_:direction:)(void *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  _BYTE v62[24];

  v5 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis);
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis, v62, 0, 0);
  if (*v5)
  {
    if (a2)
    {
      v6 = sub_100006058((uint64_t *)&unk_1000B7590);
      if (a2 == 1)
      {
        v7 = swift_allocObject(v6, 64, 7);
        *(_OWORD *)(v7 + 16) = xmmword_100088DF0;
        v8 = objc_msgSend(a1, "widthAnchor");
        v9 = objc_msgSend(v2, "widthAnchor");
        v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

        *(_QWORD *)(v7 + 32) = v10;
        v11 = objc_msgSend(a1, "heightAnchor");
        (*(void (**)(void))((swift_isaMask & *v2) + 0x250))();
        v12 = objc_msgSend(v11, "constraintEqualToConstant:");

        *(_QWORD *)(v7 + 40) = v12;
        v13 = objc_msgSend(a1, "bottomAnchor");
        v14 = objc_msgSend(v2, "bottomAnchor");
      }
      else
      {
        v7 = swift_allocObject(v6, 64, 7);
        *(_OWORD *)(v7 + 16) = xmmword_100088DF0;
        v37 = objc_msgSend(a1, "widthAnchor");
        v38 = objc_msgSend(v2, "widthAnchor");
        v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

        *(_QWORD *)(v7 + 32) = v39;
        v40 = objc_msgSend(a1, "heightAnchor");
        (*(void (**)(void))((swift_isaMask & *v2) + 0x268))();
        v41 = objc_msgSend(v40, "constraintEqualToConstant:");

        *(_QWORD *)(v7 + 40) = v41;
        v13 = objc_msgSend(a1, "centerYAnchor");
        v14 = objc_msgSend(v2, "centerYAnchor");
      }
      v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

      *(_QWORD *)(v7 + 48) = v15;
      v16 = objc_msgSend(a1, "centerXAnchor");
      v17 = objc_msgSend(v2, "centerXAnchor");
      v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);
    }
    else
    {
      v28 = sub_100006058((uint64_t *)&unk_1000B7590);
      v7 = swift_allocObject(v28, 64, 7);
      *(_OWORD *)(v7 + 16) = xmmword_100088DF0;
      v29 = objc_msgSend(a1, "topAnchor");
      v30 = objc_msgSend(v2, "topAnchor");
      v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

      *(_QWORD *)(v7 + 32) = v31;
      v32 = objc_msgSend(a1, "widthAnchor");
      v33 = objc_msgSend(v2, "widthAnchor");
      v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

      *(_QWORD *)(v7 + 40) = v34;
      v35 = objc_msgSend(a1, "heightAnchor");
      (*(void (**)(void))((swift_isaMask & *v2) + 0x250))();
      v36 = objc_msgSend(v35, "constraintEqualToConstant:");

      *(_QWORD *)(v7 + 48) = v36;
      v16 = objc_msgSend(a1, "centerXAnchor");
      v17 = objc_msgSend(v2, "centerXAnchor");
      v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);
    }
  }
  else if (a2)
  {
    v19 = sub_100006058((uint64_t *)&unk_1000B7590);
    if (a2 == 1)
    {
      v7 = swift_allocObject(v19, 64, 7);
      *(_OWORD *)(v7 + 16) = xmmword_100088DF0;
      v20 = objc_msgSend(a1, "leadingAnchor");
      v21 = objc_msgSend(v2, "leadingAnchor");
      v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

      *(_QWORD *)(v7 + 32) = v22;
      v23 = objc_msgSend(a1, "heightAnchor");
      v24 = objc_msgSend(v2, "heightAnchor");
      v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

      *(_QWORD *)(v7 + 40) = v25;
      v26 = objc_msgSend(a1, "widthAnchor");
      (*(void (**)(void))((swift_isaMask & *v2) + 0x220))();
      v27 = objc_msgSend(v26, "constraintEqualToConstant:");

      *(_QWORD *)(v7 + 48) = v27;
      v16 = objc_msgSend(a1, "centerYAnchor");
      v17 = objc_msgSend(v2, "centerYAnchor");
    }
    else
    {
      v7 = swift_allocObject(v19, 64, 7);
      *(_OWORD *)(v7 + 16) = xmmword_100088DF0;
      v51 = objc_msgSend(a1, "widthAnchor");
      (*(void (**)(void))((swift_isaMask & *v2) + 0x238))();
      v52 = objc_msgSend(v51, "constraintEqualToConstant:");

      *(_QWORD *)(v7 + 32) = v52;
      v53 = objc_msgSend(a1, "heightAnchor");
      v54 = objc_msgSend(v2, "heightAnchor");
      v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

      *(_QWORD *)(v7 + 40) = v55;
      v56 = objc_msgSend(a1, "centerYAnchor");
      v57 = objc_msgSend(v2, "centerYAnchor");
      v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

      *(_QWORD *)(v7 + 48) = v58;
      v16 = objc_msgSend(a1, "centerXAnchor");
      v17 = objc_msgSend(v2, "centerXAnchor");
    }
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);
  }
  else
  {
    v42 = sub_100006058((uint64_t *)&unk_1000B7590);
    v7 = swift_allocObject(v42, 64, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100088DF0;
    v43 = objc_msgSend(a1, "trailingAnchor");
    v44 = objc_msgSend(v2, "trailingAnchor");
    v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

    *(_QWORD *)(v7 + 32) = v45;
    v46 = objc_msgSend(a1, "widthAnchor");
    (*(void (**)(void))((swift_isaMask & *v2) + 0x220))();
    v47 = objc_msgSend(v46, "constraintEqualToConstant:");

    *(_QWORD *)(v7 + 40) = v47;
    v48 = objc_msgSend(a1, "heightAnchor");
    v49 = objc_msgSend(v2, "heightAnchor");
    v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

    *(_QWORD *)(v7 + 48) = v50;
    v16 = objc_msgSend(a1, "centerYAnchor");
    v17 = objc_msgSend(v2, "centerYAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);
  }
  v59 = v18;

  *(_QWORD *)(v7 + 56) = v59;
  specialized Array._endMutation()(v60);
  return v7;
}

void ClimateStepper.setupBackgroundView()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;
  void *v21;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(MTMaterialView), "materialViewWithRecipe:", 4);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v0, "insertSubview:atIndex:", v3, 0);
    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = sub_100006058((uint64_t *)&unk_1000B7590);
    v6 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100088DF0;
    v7 = objc_msgSend(v3, "leadingAnchor");
    v8 = objc_msgSend(v1, "leadingAnchor");
    v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

    *(_QWORD *)(v6 + 32) = v9;
    v10 = objc_msgSend(v3, "trailingAnchor");
    v11 = objc_msgSend(v1, "trailingAnchor");
    v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

    *(_QWORD *)(v6 + 40) = v12;
    v13 = objc_msgSend(v3, "topAnchor");
    v14 = objc_msgSend(v1, "topAnchor");
    v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

    *(_QWORD *)(v6 + 48) = v15;
    v16 = objc_msgSend(v3, "bottomAnchor");
    v17 = objc_msgSend(v1, "bottomAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

    *(_QWORD *)(v6 + 56) = v18;
    specialized Array._endMutation()(v19);
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v6);
    objc_msgSend(v4, "activateConstraints:", isa);

    v21 = *(void **)&v1[OBJC_IVAR____TtC7Climate14ClimateStepper_backgroundView];
    *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate14ClimateStepper_backgroundView] = v3;

  }
}

uint64_t type metadata accessor for ClimateStepper()
{
  return objc_opt_self(_TtC7Climate14ClimateStepper);
}

uint64_t sub_10005A0CC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10005A0F0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  _QWORD v30[3];
  uint64_t v31;
  _UNKNOWN **v32;

  v1 = v0;
  v2 = sub_100006058(&qword_1000B8D00);
  __chkstk_darwin(v2);
  v4 = (char *)&v30[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CAUVehicleLayoutKey(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006058((uint64_t *)&unk_1000B9640);
  v10 = (_QWORD *)swift_allocObject(v9, 48, 7);
  *((_OWORD *)v10 + 1) = xmmword_100088D00;
  v30[0] = swift_getObjectType(v0);
  v11 = sub_100006058(&qword_1000B8D50);
  v10[4] = String.init<A>(describing:)(v30, v11);
  v10[5] = v12;
  v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityIdentifierModifier + 8];
  if (v13)
  {
    v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityIdentifierModifier];
    swift_bridgeObjectRetain(v13);
    v10 = sub_10007A73C((_QWORD *)1, 2, 1, v10);
    v10[2] = 2;
    v10[6] = v14;
    v10[7] = v13;
  }
  v31 = type metadata accessor for ClimateButton();
  v32 = &off_10009F590;
  v30[0] = v1;
  v15 = *(void (**)(void))((swift_isaMask & *(_QWORD *)*sub_10003C688(v30, v31)) + 0x268);
  v16 = v1;
  v15();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100008B88((uint64_t)v4, &qword_1000B8D00);
  }
  else
  {
    v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v18 = CAUVehicleLayoutKey.rawValue.getter(v17);
    v20 = v19;
    v22 = v10[2];
    v21 = v10[3];
    if (v22 >= v21 >> 1)
      v10 = sub_10007A73C((_QWORD *)(v21 > 1), v22 + 1, 1, v10);
    v10[2] = v22 + 1;
    v23 = &v10[2 * v22];
    v23[4] = v18;
    v23[5] = v20;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_100018B40(v30);
  v30[0] = v10;
  v24 = sub_100006058((uint64_t *)&unk_1000B9650);
  v25 = sub_10005C5BC();
  BidirectionalCollection<>.joined(separator:)(58, 0xE100000000000000, v24, v25);
  v27 = v26;
  swift_bridgeObjectRelease(v10);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27);
  objc_msgSend(v16, "setAccessibilityIdentifier:", v28);

}

void sub_10005A3A4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35[2];
  uint64_t v36;
  char *v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v1 = sub_100006058(&qword_1000B8D00);
  __chkstk_darwin(v1);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006058((uint64_t *)&unk_1000B9640);
  v9 = (_QWORD *)swift_allocObject(v8, 48, 7);
  *((_OWORD *)v9 + 1) = xmmword_100088D00;
  v38[0] = swift_getObjectType(v0);
  v10 = sub_100006058((uint64_t *)&unk_1000B9660);
  v9[4] = String.init<A>(describing:)(v38, v10);
  v9[5] = v11;
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_accessibilityIdentifierModifier + 8];
  if (v12)
  {
    v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_accessibilityIdentifierModifier];
    swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_accessibilityIdentifierModifier + 8]);
    v9 = sub_10007A73C((_QWORD *)1, 2, 1, v9);
    v9[2] = 2;
    v9[6] = v13;
    v9[7] = v12;
  }
  v37 = v0;
  v14 = type metadata accessor for ClimateStepper();
  v15 = v0;
  v16 = sub_100006058(&qword_1000B8CF8);
  if (swift_dynamicCast(v35, &v37, v14, v16, 6))
  {
    sub_100041ECC(v35, (uint64_t)v38);
    v17 = v39;
    v18 = v40;
    sub_10003C688(v38, v39);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_100008B88((uint64_t)v3, &qword_1000B8D00);
    }
    else
    {
      v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      v20 = CAUVehicleLayoutKey.rawValue.getter(v19);
      v22 = v21;
      v24 = v9[2];
      v23 = v9[3];
      v25 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        v34 = v24 + 1;
        v32 = sub_10007A73C((_QWORD *)(v23 > 1), v24 + 1, 1, v9);
        v25 = v34;
        v9 = v32;
      }
      v9[2] = v25;
      v26 = &v9[2 * v24];
      v26[4] = v20;
      v26[5] = v22;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    sub_100018B40(v38);
  }
  else
  {
    v36 = 0;
    memset(v35, 0, sizeof(v35));
    sub_100008B88((uint64_t)v35, (uint64_t *)&unk_1000B9670);
  }
  v38[0] = v9;
  v27 = sub_100006058((uint64_t *)&unk_1000B9650);
  v28 = sub_10005C5BC();
  BidirectionalCollection<>.joined(separator:)(58, 0xE100000000000000, v27, v28);
  v30 = v29;
  swift_bridgeObjectRelease(v9);
  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  objc_msgSend(v15, "setAccessibilityIdentifier:", v31);

}

float ClimateStepper.characteristicValue.getter()
{
  return 0.0;
}

uint64_t sub_10005A6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
  v2 = v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  v4 = *(_QWORD *)(v2 + 8);
  v5 = v1 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate;
  swift_beginAccess(v5, v19, 1, 0);
  *(_QWORD *)(v5 + 8) = v4;
  swift_unknownObjectWeakAssign(v5, Strong);
  swift_unknownObjectRelease(Strong);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
  v7 = swift_unknownObjectWeakLoadStrong(v2);
  v8 = *(_QWORD *)(v2 + 8);
  v9 = v6 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate;
  swift_beginAccess(v9, v18, 1, 0);
  *(_QWORD *)(v9 + 8) = v8;
  swift_unknownObjectWeakAssign(v9, v7);
  swift_unknownObjectRelease(v7);
  v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
  swift_beginAccess(v10, v17, 0, 0);
  v11 = *v10;
  v12 = swift_unknownObjectWeakLoadStrong(v2);
  v13 = *(_QWORD *)(v2 + 8);
  v14 = v11 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate;
  swift_beginAccess(v11 + OBJC_IVAR____TtC7Climate13ClimateButton_popoverDelegate, v16, 1, 0);
  *(_QWORD *)(v14 + 8) = v13;
  swift_unknownObjectWeakAssign(v14, v12);
  return swift_unknownObjectRelease(v12);
}

id ClimateStepper.downButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
}

id ClimateStepper.upButton.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
}

uint64_t ClimateStepper.presentationStates.getter()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];

  v1 = (_QWORD **)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v7, 0, 0);
  v2 = *v1;
  v3 = *(uint64_t (**)(void))((swift_isaMask & **v1) + 0x110);
  v4 = v2;
  v5 = v3();

  return v5;
}

uint64_t sub_10005A894()
{
  return sub_10005A8BC(&OBJC_IVAR____TtC7Climate14ClimateStepper_downButton, &OBJC_IVAR____TtC7Climate14ClimateStepper_downColorConfig);
}

uint64_t sub_10005A8A8()
{
  return sub_10005A8BC(&OBJC_IVAR____TtC7Climate14ClimateStepper_upButton, &OBJC_IVAR____TtC7Climate14ClimateStepper_upColorConfig);
}

uint64_t sub_10005A8BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  char v18;
  char v19;
  id v21;
  void *v22;

  v3 = v2 + *a2;
  v4 = *(void **)v3;
  v5 = *(void **)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v2 + *a1) + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
  v8 = *(void **)v7;
  v22 = *(void **)(v7 + 8);
  v9 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)v7 = *(_QWORD *)v3;
  *(_QWORD *)(v7 + 8) = v5;
  *(_QWORD *)(v7 + 16) = v6;
  v10 = v4;
  v11 = v5;
  swift_bridgeObjectRetain_n(v6, 2);
  v21 = v10;
  v12 = v11;
  v14 = *(void **)v7;
  v13 = *(void **)(v7 + 8);
  v15 = *(_QWORD *)(v7 + 16);
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v16 = v14;
  v17 = v13;
  swift_bridgeObjectRetain(v15);
  if ((static NSObject.== infix(_:_:)(v16) & 1) != 0 && (static NSObject.== infix(_:_:)(v17) & 1) != 0)
  {
    sub_10005B490(v15, v9);
    v19 = v18;
    swift_bridgeObjectRelease(v15);

    if ((v19 & 1) != 0)
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease(v15);

  }
  ClimateButton.refreshColorConfig()();
LABEL_7:

  swift_bridgeObjectRelease(v9);
  return swift_bridgeObjectRelease(v6);
}

char *ClimateStepper.__allocating_init(primaryButton:axis:range:)(void *a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return ClimateStepper.init(primaryButton:axis:range:)(a1, a2, a3);
}

_QWORD *sub_10005AA6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *result;
  _QWORD *v3;
  char v4;
  float v5;
  BOOL v6;
  _QWORD v7[3];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, (char *)v7 + 4, 0, 0);
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = (*(uint64_t (**)(void))((swift_isaMask & *result) + 0x140))();
    v5 = (*(float (**)(void))((swift_isaMask & *v3) + 0xF0))();
    CAFRange.maximumValue<A>()(v7, &type metadata for Float, &protocol witness table for Float);

    v6 = (v4 & 2) == 0;
    if (*(float *)v7 > v5)
      v6 = 0;
    return (_QWORD *)_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(v4 & 1, (v4 & 2) >> 1, (v4 & 4) != 0, (v4 & 8) != 0, ((v4 & 0x10) != 0) | v6);
  }
  return result;
}

_QWORD *sub_10005AB60()
{
  uint64_t v0;

  return sub_10005AA6C(*(_QWORD *)(v0 + 16));
}

_QWORD *sub_10005AB68(uint64_t a1)
{
  uint64_t v1;
  _QWORD *result;
  _QWORD *v3;
  char v4;
  float v5;
  BOOL v6;
  _QWORD v7[3];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, (char *)v7 + 4, 0, 0);
  result = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = (*(uint64_t (**)(void))((swift_isaMask & *result) + 0x140))();
    v5 = (*(float (**)(void))((swift_isaMask & *v3) + 0xF0))();
    CAFRange.minimumValue<A>()(v7, &type metadata for Float, &protocol witness table for Float);

    v6 = (v4 & 2) == 0;
    if (v5 > *(float *)v7)
      v6 = 0;
    return (_QWORD *)_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(v4 & 1, (v4 & 2) >> 1, (v4 & 4) != 0, (v4 & 8) != 0, ((v4 & 0x10) != 0) | v6);
  }
  return result;
}

uint64_t sub_10005AC5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_10005AC88()
{
  uint64_t v0;

  return sub_10005AB68(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10005AC90(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  _QWORD *v10;
  _BYTE v12[24];

  v5 = type metadata accessor for CAFRange.StepDirection(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v12, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v10 = (_QWORD *)result;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *a3, v5);
    (*(void (**)(char *))((swift_isaMask & *v10) + 0x150))(v8);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

Swift::Void __swiftcall ClimateStepper.layoutSubviews()()
{
  char *v0;
  char *v1;
  void *v2;
  CGFloat v3;
  char v4[24];
  objc_super v5;
  CGRect v6;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for ClimateStepper();
  objc_msgSendSuper2(&v5, "layoutSubviews");
  v1 = &v0[OBJC_IVAR____TtC7Climate14ClimateStepper_axis];
  swift_beginAccess(&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_axis], v4, 0, 0);
  if (*(_QWORD *)v1 == 1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_upButton];
    objc_msgSend(v2, "bounds");
    v3 = CGRectGetHeight(v6) + -44.0;
    objc_msgSend(v2, "setImageEdgeInsets:", 0.0, 0.0, v3, 0.0);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_downButton], "setImageEdgeInsets:", v3, 0.0, 0.0, 0.0);
  }
}

void ClimateStepper.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Climate.ClimateStepper", 22, "init(frame:)", 12, 0);
  __break(1u);
}

id ClimateStepper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateStepper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10005B094(uint64_t a1)
{
  uint64_t v1;

  return sub_10005AC90(a1, v1, (unsigned int *)&enum case for CAFRange.StepDirection.up(_:));
}

uint64_t sub_10005B0B4(uint64_t a1)
{
  uint64_t v1;

  return sub_10005AC90(a1, v1, (unsigned int *)&enum case for CAFRange.StepDirection.down(_:));
}

void sub_10005B0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  Swift::UInt v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  char v36;
  id v37;
  id v38;
  char v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v44;
  int64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;

  if (a1 == a2)
    return;
  v2 = a2;
  v3 = a1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v40 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v41 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v12 = (v7 - 1) & v7;
      v13 = v11 | (v4 << 6);
      goto LABEL_24;
    }
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v14 >= v41)
      return;
    v15 = *(_QWORD *)(v40 + 8 * v14);
    ++v4;
    if (!v15)
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v41)
        return;
      v15 = *(_QWORD *)(v40 + 8 * v4);
      if (!v15)
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v41)
          return;
        v15 = *(_QWORD *)(v40 + 8 * v4);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v12 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v4 << 6);
LABEL_24:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13);
    v18 = *(_QWORD *)(v3 + 56) + 32 * v13;
    v19 = *(void **)v18;
    v20 = *(void **)(v18 + 8);
    v21 = *(void **)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = sub_10005B740(v17);
    if ((v24 & 1) == 0)
      return;
    v44 = v12;
    v45 = v4;
    v25 = *(_QWORD *)(v2 + 56) + 32 * v23;
    v26 = *(void **)v25;
    v27 = *(void **)(v25 + 8);
    v29 = *(void **)(v25 + 16);
    v28 = *(_QWORD *)(v25 + 24);
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v46 = v29;
    swift_bridgeObjectRetain(v28);
    v30 = v19;
    v49 = v20;
    v47 = v21;
    v48 = v22;
    swift_bridgeObjectRetain(v22);
    v31 = v26;
    v32 = v27;
    v33 = v31;
    if ((static NSObject.== infix(_:_:)(v31) & 1) == 0)
    {
LABEL_36:

      swift_bridgeObjectRelease(v28);
      goto LABEL_38;
    }
    if (v27)
    {
      if (!v20)
        goto LABEL_36;
      sub_100006B04(0, (unint64_t *)&qword_1000B91A0, UIColor_ptr);
      v34 = v32;
      v35 = v49;
      v36 = static NSObject.== infix(_:_:)(v34);

      if ((v36 & 1) == 0)
      {

        swift_bridgeObjectRelease(v28);
        v32 = v34;
LABEL_38:
        v8 = v47;
        goto LABEL_39;
      }
    }
    else if (v20)
    {

      swift_bridgeObjectRelease(v28);
      v32 = v46;
      goto LABEL_38;
    }
    if (v29)
    {
      if (!v21)
        goto LABEL_36;
      sub_100006B04(0, (unint64_t *)&qword_1000B91A0, UIColor_ptr);
      v9 = v46;
      v37 = v46;
      v8 = v47;
      v38 = v47;
      v39 = static NSObject.== infix(_:_:)(v37);

      if ((v39 & 1) == 0)
      {

        swift_bridgeObjectRelease(v28);
LABEL_39:

        swift_bridgeObjectRelease(v48);
        return;
      }
    }
    else
    {
      v9 = v46;
      v8 = v47;
      if (v21)
      {

        swift_bridgeObjectRelease(v28);
        goto LABEL_39;
      }
    }
    v10 = sub_10005B0D4(v28, v48);
    swift_bridgeObjectRelease(v48);

    swift_bridgeObjectRelease(v28);
    v3 = a1;
    v2 = a2;
    v7 = v44;
    v4 = v45;
    if ((v10 & 1) == 0)
      return;
  }
  v16 = v14 + 3;
  if (v16 >= v41)
    return;
  v15 = *(_QWORD *)(v40 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v41)
      return;
    v15 = *(_QWORD *)(v40 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_43:
  __break(1u);
}

void sub_10005B490(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  Swift::UInt v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v30 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v9 = (v7 - 1) & v7;
      v10 = v8 | (v4 << 6);
      goto LABEL_24;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v31)
      return;
    v12 = *(_QWORD *)(v30 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v31)
        return;
      v12 = *(_QWORD *)(v30 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v31)
          return;
        v12 = *(_QWORD *)(v30 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v31)
            return;
          v12 = *(_QWORD *)(v30 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v9 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = *(_QWORD *)(a1 + 56) + 24 * v10;
    v17 = *(void **)v15;
    v16 = *(void **)(v15 + 8);
    v18 = *(_QWORD *)(v15 + 16);
    v19 = sub_10005B740(v14);
    if ((v20 & 1) == 0)
      return;
    v32 = v9;
    v21 = *(_QWORD *)(a2 + 56) + 24 * v19;
    v23 = *(void **)v21;
    v22 = *(void **)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v25 = v17;
    v26 = v16;
    swift_bridgeObjectRetain(v18);
    v27 = v23;
    v28 = v22;
    swift_bridgeObjectRetain(v24);
    if ((static NSObject.== infix(_:_:)(v27, v25) & 1) == 0 || (static NSObject.== infix(_:_:)(v28, v26) & 1) == 0)
    {

      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v24);
      return;
    }
    v29 = sub_10005B490(v24, v18);
    swift_bridgeObjectRelease(v18);

    swift_bridgeObjectRelease(v24);
    v7 = v32;
    if ((v29 & 1) == 0)
      return;
  }
  v13 = v11 + 4;
  if (v13 >= v31)
    return;
  v12 = *(_QWORD *)(v30 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v31)
      return;
    v12 = *(_QWORD *)(v30 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_33:
  __break(1u);
}

unint64_t sub_10005B740(Swift::UInt a1)
{
  Swift::Int v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(a1);
  v2 = Hasher._finalize()();
  return sub_10005BB6C(a1, v2);
}

unint64_t sub_10005B798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for CAUVehicleLayoutKey(0);
  v6 = sub_1000052AC(&qword_1000B8360, (uint64_t (*)(uint64_t))&type metadata accessor for CAUVehicleLayoutKey, (uint64_t)&protocol conformance descriptor for CAUVehicleLayoutKey);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10005C1B4(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for CAUVehicleLayoutKey, (unint64_t *)&qword_1000B7340, (uint64_t)&protocol conformance descriptor for CAUVehicleLayoutKey);
}

unint64_t sub_10005B830(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7);
  type metadata accessor for CFString(0);
  v3 = v2;
  v4 = sub_1000052AC(&qword_1000B9638, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100088B78);
  _CFObject.hash(into:)(v7, v3, v4);
  v5 = Hasher._finalize()();
  return sub_10005BC08(a1, v5);
}

unint64_t sub_10005B8B8(uint64_t a1, uint64_t a2, char a3)
{
  Swift::UInt v6;
  Swift::Int v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9);
  if (a3)
  {
    if (a3 == 1)
    {
      Hasher._combine(_:)(3uLL);
      v6 = a1;
    }
    else if (a1 | a2)
    {
      if (a1 ^ 1 | a2)
        v6 = 4;
      else
        v6 = 2;
    }
    else
    {
      v6 = 1;
    }
    Hasher._combine(_:)(v6);
  }
  else
  {
    Hasher._combine(_:)(0);
    String.hash(into:)(v9, a1, a2);
  }
  v7 = Hasher._finalize()();
  return sub_10005BD48(a1, a2, a3, v7);
}

unint64_t sub_10005B998(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, a1, a2);
  v4 = Hasher._finalize()();
  return sub_10005BEC0(a1, a2, v4);
}

unint64_t sub_10005B9FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  Hasher.init(_seed:)(v7);
  String.hash(into:)(v7, v2, v4);
  v5 = Hasher._finalize()();
  swift_bridgeObjectRelease(v4);
  return sub_10005BFA0(a1, v5);
}

unint64_t sub_10005BA7C(unsigned __int8 a1)
{
  Swift::Int v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(a1);
  v2 = Hasher._finalize()();
  return sub_10005C114(a1, v2);
}

unint64_t sub_10005BAD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_1000052AC(&qword_1000B8330, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10005C1B4(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_1000B9630, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_10005BB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_10005BC08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v6 = v2;
    type metadata accessor for CFString(0);
    v9 = v8;
    v10 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * i);
    v11 = sub_1000052AC(&qword_1000B9638, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100088B78);
    v12 = v10;
    v13 = static _CFObject.== infix(_:_:)(v12, a1, v9, v11);

    if ((v13 & 1) == 0)
    {
      v14 = ~v4;
      for (i = (i + 1) & v14; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v14)
      {
        v15 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * i);
        v16 = static _CFObject.== infix(_:_:)(v15, a1, v9, v11);

        if ((v16 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_10005BD48(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  char v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  BOOL v21;
  BOOL v23;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v11 = ~v6;
    v12 = *(_QWORD *)(v4 + 48);
    v13 = a1 != 2;
    v14 = a1 != 1;
    if (a2)
    {
      v13 = 1;
      v14 = 1;
    }
    if (a3 != 2)
      v13 = 1;
    v23 = v13;
    v15 = a3 != 2 || v14;
    if (a2 | a1)
      v16 = 0;
    else
      v16 = a3 == 2;
    do
    {
      v17 = (uint64_t *)(v12 + 24 * v7);
      v18 = *v17;
      v19 = v17[1];
      v20 = *((unsigned __int8 *)v17 + 16);
      if (v20)
      {
        if (v20 == 1)
        {
          if (a3 == 1 && v18 == a1)
            return v7;
        }
        else if (v18 | v19)
        {
          if (v18 ^ 1 | v19)
          {
            if (!v23)
              return v7;
          }
          else if ((v15 & 1) == 0)
          {
            return v7;
          }
        }
        else if (v16)
        {
          return v7;
        }
      }
      else if (!a3)
      {
        v21 = v18 == a1 && v19 == a2;
        if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, a1, a2, 0) & 1) != 0)
          return v7;
      }
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_10005BEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10005BFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10005C114(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_10005C1B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t, __n128);
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  unint64_t *v23;
  uint64_t v24;

  v23 = a4;
  v24 = a5;
  v6 = v5;
  v21 = a1;
  v22 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v21 - v11;
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v9 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    do
    {
      v17(v12, *(_QWORD *)(v6 + 48) + v16 * v14, v8, v10);
      v18 = sub_1000052AC(v23, v22, v24);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v21, v8, v18);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

void *sub_10005C2E4()
{
  unsigned __int8 *v0;
  void *v1;
  int v2;
  void *v3;
  unsigned __int8 *v4;
  id v5;
  id v6;

  v0 = (unsigned __int8 *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimateStepperButton()), "init");
  v1 = v0;
  v2 = v0[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v0[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if (v2 != 1)
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v4 = v0;
    objc_msgSend(v3, "removeFromSuperview");
    ClimateButton.refreshColorConfig()();

  }
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v1, "layer");
  objc_msgSend(v5, "setHitTestsAsOpaque:", 1);

  v6 = objc_msgSend(v1, "layer");
  objc_msgSend(v6, "setCornerRadius:", 0.0);

  return v1;
}

void _s7Climate0A7StepperC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  _QWORD *v5;
  id v6;
  id v7;
  _QWORD *v8;
  id v9;
  id v10;
  _QWORD *v11;

  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_activeConstraints] = _swiftEmptyArrayStorage;
  v1 = &v0[OBJC_IVAR____TtC7Climate14ClimateStepper_downColorConfig];
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "clearColor");
  v4 = objc_msgSend(v2, "systemWhiteColor");
  *v1 = v3;
  v1[1] = v4;
  v1[2] = &_swiftEmptyDictionarySingleton;
  v5 = &v0[OBJC_IVAR____TtC7Climate14ClimateStepper_upColorConfig];
  v6 = objc_msgSend(v2, "clearColor");
  v7 = objc_msgSend(v2, "systemWhiteColor");
  *v5 = v6;
  v5[1] = v7;
  v5[2] = &_swiftEmptyDictionarySingleton;
  v8 = &v0[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig];
  v9 = objc_msgSend(v2, "clearColor");
  v10 = objc_msgSend(v2, "systemWhiteColor");
  *v8 = v9;
  v8[1] = v10;
  v8[2] = &_swiftEmptyDictionarySingleton;
  v0[OBJC_IVAR____TtC7Climate14ClimateStepper_disableSelectedBackgroundMaterial] = 0;
  v11 = &v0[OBJC_IVAR____TtC7Climate14ClimateStepper_accessibilityIdentifierModifier];
  *v11 = 0;
  v11[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_backgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_arrowsWidth] = 0x4040000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButtonWidth] = 0x404F000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_arrowsHeight] = 0x4040000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButtonHeight] = 0x4040000000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BA30, "Climate/ClimateStepper.swift", 28, 2, 406, 0);
  __break(1u);
}

unint64_t sub_10005C5BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B83B0;
  if (!qword_1000B83B0)
  {
    v1 = sub_10000A948((uint64_t *)&unk_1000B9650);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1000B83B0);
  }
  return result;
}

uint64_t ClimateLogPrefix(file:function:line:_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  void *object;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  Swift::String v30;
  Swift::String v31;
  void *v32;
  unint64_t v33;
  Swift::String v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  Swift::String v41;
  _QWORD v42[4];
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v48 = 0;
  v49 = 0xE000000000000000;
  v43[0] = 47;
  v43[1] = 0xE100000000000000;
  v42[2] = v43;
  swift_bridgeObjectRetain(a2);
  v14 = sub_10005D564(0x7FFFFFFFFFFFFFFFLL, 1, sub_10005E198, (uint64_t)v42, a1, a2);
  v15 = v14;
  v16 = *(_QWORD *)(v14 + 16);
  if (v16)
  {
    v17 = (uint64_t *)(v14 + 32 * v16);
    v18 = *v17;
    v19 = v17[1];
    v21 = v17[2];
    v20 = v17[3];
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    swift_bridgeObjectRelease(v14);
    v18 = Substring.init(_:)(0x6E776F6E6B6E55, 0xE700000000000000);
    v19 = v22;
    v21 = v23;
    v20 = v24;
  }
  v25._countAndFlagsBits = static String._fromSubstring(_:)(v18, v19, v21, v20);
  object = v25._object;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(object);
  v27._countAndFlagsBits = 58;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  v43[0] = a6;
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v29 = v28._object;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v29);
  v30._countAndFlagsBits = 32;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  v31._countAndFlagsBits = StaticString.description.getter(a3, a4, a5);
  v32 = v31._object;
  String.append(_:)(v31);
  swift_bridgeObjectRelease(v32);
  v33 = 0xE000000000000000;
  if (!*(_QWORD *)(a7 + 24))
  {
    v39 = 0;
    goto LABEL_8;
  }
  v46 = 0;
  v47 = 0xE000000000000000;
  v34._countAndFlagsBits = 32;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  result = sub_10005E1EC(a7, (uint64_t)v43);
  v36 = v44;
  if (v44)
  {
    v37 = v45;
    v38 = sub_10003C688(v43, v44);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v38, v36, v37);
    sub_100018B40(v43);
    v39 = v46;
    v33 = v47;
LABEL_8:
    v40 = v33;
    String.append(_:)(*(Swift::String *)&v39);
    swift_bridgeObjectRelease(v33);
    v41._countAndFlagsBits = 58;
    v41._object = (void *)0xE100000000000000;
    String.append(_:)(v41);
    return v48;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005C840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100006058(&qword_1000B8A30);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = 0;
  v33 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  v11._countAndFlagsBits = 0x3A6574616D696C63;
  v11._object = (void *)0xEB000000003F2F2FLL;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 1701736314;
  v12._object = (void *)0xE400000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 61;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  _print_unlocked<A, B>(_:_:)(a1, &v32, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v14 = v33;
  URL.init(string:)(v32, v33);
  swift_bridgeObjectRelease(v14);
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15) == 1)
  {
    sub_100008B88((uint64_t)v10, &qword_1000B8A30);
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v17 = qword_1000BC938;
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v17, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      v29 = v21;
      v32 = v21;
      v30 = a2;
      *(_DWORD *)v20 = 136315138;
      v28 = v20 + 4;
      v22 = CAUVehicleLayoutKey.rawValue.getter(v21);
      v24 = v23;
      v31 = sub_10005DB58(v22, v23, &v32);
      a2 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v28, v20 + 12);
      swift_bridgeObjectRelease(v24);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl((void *)&_mh_execute_header, v17, v19, "Unable to generate URL for %s.", v20, 0xCu);
      v25 = 1;
      v26 = v29;
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v25 = 1;
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v10, v15);
    v25 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v25, 1, v15);
}

uint64_t sub_10005CB60()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = objc_msgSend(v0, "bundleIdentifier");

  if (v1)
  {
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v4 = v3;

  }
  else
  {
    v2 = 0;
    v4 = 0xE000000000000000;
  }
  sub_100046BF8();
  result = OS_os_log.init(subsystem:category:)(v2, v4, 0x6574616D696C43, 0xE700000000000000);
  qword_1000BC938 = result;
  return result;
}

uint64_t sub_10005CC1C()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = objc_msgSend(v0, "bundleIdentifier");

  if (v1)
  {
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v4 = v3;

  }
  else
  {
    v2 = 0;
    v4 = 0xE000000000000000;
  }
  sub_100046BF8();
  result = OS_os_log.init(subsystem:category:)(v2, v4, 0x74736F706E676953, 0xE800000000000000);
  qword_1000BC940 = result;
  return result;
}

uint64_t sub_10005CCD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, unint64_t, uint64_t, __n128);
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v92 = a1;
  v2 = type metadata accessor for URL(0);
  v93 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v90 = (char *)&v82 - v6;
  v7 = sub_100006058(&qword_1000B8D00);
  __chkstk_darwin(v7);
  v87 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006058(&qword_1000B9680);
  v10 = __chkstk_darwin(v9);
  v89 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URLQueryItem(0, v10);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v88 = (char *)&v82 - v17;
  v18 = sub_100006058(&qword_1000B9688);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for URLComponents(0, v19);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v1;
  URLComponents.init(url:resolvingAgainstBaseURL:)(v1, 0, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_100008B88((uint64_t)v21, &qword_1000B9688);
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v27 = qword_1000BC938;
    v28 = v93;
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 16))(v4, v91, v2);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v27, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v95 = v32;
      *(_DWORD *)v31 = 136315138;
      v33 = sub_10005E234();
      v34 = dispatch thunk of CustomStringConvertible.description.getter(v2, v33);
      v35 = v2;
      v37 = v36;
      v94 = sub_10005DB58(v34, v36, &v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v31 + 4, v31 + 12);
      swift_bridgeObjectRelease(v37);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v4, v35);
      _os_log_impl((void *)&_mh_execute_header, v27, v30, "Couldn't parse URL components out of %s", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v2);
    }
LABEL_35:
    v79 = type metadata accessor for CAUVehicleLayoutKey(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v92, 1, 1, v79);
  }
  v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))(v26, v21, v22);
  v84 = v26;
  v39 = URLComponents.queryItems.getter(v38);
  v85 = v22;
  v86 = v23;
  if (!v39)
  {
    v52 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v89, 1, 1, v12);
    v53 = v90;
LABEL_22:
    sub_100008B88(v52, &qword_1000B9680);
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v55 = qword_1000BC938;
    v56 = v93;
    v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 16))(v53, v91, v2);
    v58 = static os_log_type_t.default.getter(v57);
    if (os_log_type_enabled(v55, v58))
    {
      v59 = swift_slowAlloc(22, -1);
      v60 = swift_slowAlloc(64, -1);
      v95 = v60;
      *(_DWORD *)v59 = 136315394;
      v61 = sub_10005E234();
      v62 = dispatch thunk of CustomStringConvertible.description.getter(v2, v61);
      v64 = v63;
      v94 = sub_10005DB58(v62, v63, &v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v59 + 4, v59 + 12);
      swift_bridgeObjectRelease(v64);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v2);
      *(_WORD *)(v59 + 12) = 2080;
      v94 = sub_10005DB58(1701736314, 0xE400000000000000, &v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, &v95, v59 + 14, v59 + 22);
      _os_log_impl((void *)&_mh_execute_header, v55, v58, "URL %s doesn't seem to have a %s query parameter.", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v60, -1, -1);
      swift_slowDealloc(v59, -1, -1);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v84, v85);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v2);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v84, v22);
    }
    goto LABEL_35;
  }
  v40 = v39;
  v41 = *(_QWORD *)(v39 + 16);
  if (v41)
  {
    v83 = v2;
    v42 = v39 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v43 = *(_QWORD *)(v13 + 72);
    v44 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v13 + 16);
    v45 = swift_bridgeObjectRetain(v39);
    while (1)
    {
      v46 = v44(v15, v42, v12, v45);
      v47 = URLQueryItem.name.getter(v46);
      v49 = v48;
      if (v47 == 1701736314 && v48 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease(v40);
        v54 = 0xE400000000000000;
        goto LABEL_20;
      }
      v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, 1701736314, 0xE400000000000000, 0);
      swift_bridgeObjectRelease(v49);
      if ((v50 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      v42 += v43;
      if (!--v41)
      {
        swift_bridgeObjectRelease(v40);
        v51 = 1;
        v2 = v83;
        v22 = v85;
        v23 = v86;
        goto LABEL_17;
      }
    }
    v54 = v40;
LABEL_20:
    v22 = v85;
    v53 = v90;
    swift_bridgeObjectRelease(v54);
    v52 = (uint64_t)v89;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v89, v15, v12);
    v51 = 0;
    v2 = v83;
    v23 = v86;
  }
  else
  {
    v51 = 1;
    v22 = v85;
LABEL_17:
    v52 = (uint64_t)v89;
    v53 = v90;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v52, v51, 1, v12);
  swift_bridgeObjectRelease(v40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v52, 1, v12) == 1)
    goto LABEL_22;
  v65 = v88;
  v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32))(v88, v52, v12);
  v67 = URLQueryItem.value.getter(v66);
  v68 = v84;
  if (!v69)
  {
LABEL_30:
    v74 = v23;
    if (qword_1000B6FE8 != -1)
      v67 = swift_once(&qword_1000B6FE8, sub_10005CB60);
    v75 = qword_1000BC938;
    v76 = static os_log_type_t.default.getter(v67);
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v77 = 0;
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "No available climate zone in URL.", v77, 2u);
      v78 = v77;
      v22 = v85;
      swift_slowDealloc(v78, -1, -1);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v65, v12);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v68, v22);
    goto LABEL_35;
  }
  v70 = v23;
  v71 = (uint64_t)v87;
  CAUVehicleLayoutKey.init(rawValue:)(v67);
  v72 = type metadata accessor for CAUVehicleLayoutKey(0);
  v73 = *(_QWORD *)(v72 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72) == 1)
  {
    v67 = sub_100008B88(v71, &qword_1000B8D00);
    v23 = v70;
    goto LABEL_30;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v65, v12);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v22);
  v81 = v92;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32))(v92, v71, v72);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56))(v81, 0, 1, v72);
}

uint64_t sub_10005D564(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t result;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  unint64_t v55;
  _QWORD v57[4];

  v57[3] = a4;
  if (a1 < 0)
    goto LABEL_44;
  v10 = swift_allocObject(&unk_10009FC50, 24, 7);
  *(_QWORD *)(v10 + 16) = _swiftEmptyArrayStorage;
  v54 = swift_allocObject(&unk_10009FC78, 24, 7);
  *(_QWORD *)(v54 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v33 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v33 = 11;
    sub_10005DA00(v33 | (v11 << 16), v54, a2 & 1, v10);
    swift_bridgeObjectRelease(a6);
    v14 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain(v14);
    swift_release(v10);
    v34 = v54;
LABEL_41:
    swift_release(v34);
    return (uint64_t)v14;
  }
  v49 = a1;
  v50 = v10;
  v13 = 7;
  if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
    v13 = 11;
  v48 = v13 | (v12 << 16);
  v55 = 4 * v12;
  v14 = _swiftEmptyArrayStorage;
  v15 = 15;
  v16 = 15;
  v17 = 15;
  while (1)
  {
    v18 = String.subscript.getter(v15, a5, a6);
    v20 = v19;
    v57[0] = v18;
    v57[1] = v19;
    v21 = a3(v57);
    if (v6)
    {
      swift_release(v50);
      swift_release(v54);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(a6);
      return (uint64_t)v14;
    }
    v22 = v21;
    swift_bridgeObjectRelease(v20);
    if ((v22 & 1) != 0)
      break;
    v15 = String.index(after:)(v15, a5, a6);
LABEL_11:
    if (v55 == v15 >> 14)
      goto LABEL_31;
  }
  if (v16 >> 14 == v15 >> 14 && (a2 & 1) != 0)
  {
    v15 = String.index(after:)(v15, a5, a6);
    *(_QWORD *)(v54 + 16) = v15;
    v16 = v15;
    v17 = v15;
    goto LABEL_11;
  }
  if (v15 >> 14 < v16 >> 14)
    goto LABEL_43;
  v23 = String.subscript.getter(v16, v15, a5, a6);
  v51 = v24;
  v52 = v23;
  v26 = v25;
  v28 = v27;
  if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
    v14 = sub_10007AA60(0, v14[2] + 1, 1, v14);
  v30 = v14[2];
  v29 = v14[3];
  if (v30 >= v29 >> 1)
    v14 = sub_10007AA60((_QWORD *)(v29 > 1), v30 + 1, 1, v14);
  v14[2] = v30 + 1;
  v31 = &v14[4 * v30];
  v31[4] = v52;
  v31[5] = v26;
  v31[6] = v28;
  v31[7] = v51;
  *(_QWORD *)(v50 + 16) = v14;
  v32 = String.index(after:)(v15, a5, a6);
  v15 = v32;
  *(_QWORD *)(v54 + 16) = v32;
  if (v14[2] != v49)
  {
    v16 = v32;
    v17 = v32;
    goto LABEL_11;
  }
  v17 = v32;
  v16 = v32;
LABEL_31:
  if (v55 == v16 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease(a6);
    v35 = v50;
LABEL_40:
    swift_bridgeObjectRetain(v14);
    swift_release(v35);
    v34 = v54;
    goto LABEL_41;
  }
  if (v55 >= v17 >> 14)
  {
    v36 = String.subscript.getter(v17, v48, a5, a6);
    v38 = v37;
    v40 = v39;
    v42 = v41;
    swift_bridgeObjectRelease(a6);
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_10007AA60(0, v14[2] + 1, 1, v14);
    v44 = v14[2];
    v43 = v14[3];
    if (v44 >= v43 >> 1)
      v14 = sub_10007AA60((_QWORD *)(v43 > 1), v44 + 1, 1, v14);
    v14[2] = v44 + 1;
    v45 = &v14[4 * v44];
    v45[4] = v36;
    v45[5] = v38;
    v45[6] = v40;
    v45[7] = v42;
    v35 = v50;
    *(_QWORD *)(v50 + 16) = v14;
    goto LABEL_40;
  }
LABEL_43:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Range requires lowerBound <= upperBound", 39, 2, "Swift/Range.swift", 17, 2, 754, 0);
  __break(1u);
LABEL_44:
  LOBYTE(v47) = 2;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Must take zero or more splits", 29, 2, "Swift/Collection.swift", 22, v47, 1552, 0);
  __break(1u);
  return result;
}

uint64_t sub_10005DA00(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = String.subscript.getter();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_10007AA60(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_10007AA60((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Range requires lowerBound <= upperBound", 39, 2, "Swift/Range.swift", 17, 2, 754, 0);
  __break(1u);
  return result;
}

uint64_t sub_10005DB58(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_10005DC28(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_100018B60((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_100018B60((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_100018B40(v12);
  return v7;
}

uint64_t sub_10005DC28(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_10005DDE0(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_10005DDE0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10005DE74(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_10005E04C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_10005E04C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10005DE74(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_10005DFE8(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10005DFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100006058(&qword_1000B9698);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_10005E04C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006058(&qword_1000B9698);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10005E198(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)(v1 + 16);
  v4 = *a1;
  v5 = a1[1];
  v6 = v3[1];
  if (v4 == *v3 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *v3, v6, 0) & 1;
}

uint64_t sub_10005E1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006058(&qword_1000B7CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10005E234()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B9690;
  if (!qword_1000B9690)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_1000B9690);
  }
  return result;
}

uint64_t sub_10005E27C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005E2A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005E2B0()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned __int8 v5;
  uint64_t v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate25ClimateCabinServiceButton_cabin);
  v2 = objc_msgSend(v1, "maxACOn");
  v3 = objc_msgSend(v1, "maxACOnRestricted");
  v4 = objc_msgSend(v1, "maxACOnInvalid");
  v5 = objc_msgSend(v1, "maxACOnDisabled");
  if (v2)
  {
    if ((v3 & 1) != 0)
    {
      v6 = 5;
      if (v4)
        v6 = 13;
      if ((v5 & 1) == 0)
        return v6;
      return v6 | 0x10;
    }
    v6 = 9;
    if (!v4)
      v6 = 1;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  else if (v3)
  {
    v6 = 4;
    if (v4)
      v6 = 12;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  else
  {
    v6 = 8;
    if (!v4)
      v6 = 0;
    if ((v5 & 1) != 0)
      return v6 | 0x10;
  }
  return v6;
}

char *sub_10005E388(void *a1, unsigned __int8 a2)
{
  char *v2;
  id v5;
  char *v6;
  char *v7;
  char v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  BOOL v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  int v25;
  void *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void **v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  id v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void **v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  char v62;
  char v63;
  char *v64;
  id v66;
  id v67;
  uint64_t v68;
  id v69;
  void *v70;
  void *v71;
  char v72[24];
  char v73[24];
  char v74[24];
  objc_super v75;

  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate25ClimateCabinServiceButton_cabin] = a1;
  v75.receiver = v2;
  v75.super_class = (Class)type metadata accessor for ClimateCabinServiceButton();
  v5 = a1;
  v6 = (char *)objc_msgSendSuper2(&v75, "init");
  objc_msgSend(v5, "registerObserver:", v6);

  v7 = &v6[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle];
  swift_beginAccess(&v6[OBJC_IVAR____TtC7Climate13ClimateButton_smallTitle], v74, 1, 0);
  v8 = *v7;
  *v7 = 1;
  v9 = v6;
  if ((v8 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();
  v10 = &v9[OBJC_IVAR____TtC7Climate13ClimateButton_title];
  swift_beginAccess(&v9[OBJC_IVAR____TtC7Climate13ClimateButton_title], v73, 1, 0);
  v12 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v10 + 1);
  *(_OWORD *)v10 = xmmword_10008AC70;
  v13 = v9;
  if (!v11
    || (v12 == 0x432F412058414DLL ? (v14 = v11 == 0xE700000000000000) : (v14 = 0),
        !v14
     && (_stringCompareWithSmolCheck(_:_:expecting:)(0x432F412058414DLL, 0xE700000000000000, v12, v11, 0) & 1) == 0))
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v11);
  v15 = objc_msgSend(v13, "titleLabel");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "setNumberOfLines:", 2);

  }
  v17 = swift_allocObject(&unk_10009FCA0, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v13);
  v18 = swift_allocObject(&unk_10009FCC8, 32, 7);
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = v5;
  v19 = (uint64_t *)&v13[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v13[OBJC_IVAR____TtC7Climate13ClimateButton_action], v72, 1, 0);
  v20 = *v19;
  v21 = v19[1];
  *v19 = (uint64_t)sub_10005EB48;
  v19[1] = v18;
  v22 = v5;
  sub_100005118(v20, v21);
  if ((a2 | 2) == 3)
  {
    v23 = objc_msgSend(v13, "titleLabel");
    if (v23)
    {
      v24 = v23;
      if (qword_1000B7008 != -1)
        swift_once(&qword_1000B7008, sub_10006A3D0);
      objc_msgSend(v24, "setFont:", qword_1000BC9B0);

    }
    v67 = v22;
    v25 = v13[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
    v13[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
    if (v25 != 1)
    {
      v26 = *(void **)&v13[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
      v27 = v13;
      objc_msgSend(v26, "removeFromSuperview");
      sub_100066C24();

    }
    v28 = qword_1000B6FE0;
    v29 = v13;
    if (v28 != -1)
      swift_once(&qword_1000B6FE0, sub_100047678);
    v30 = (void *)qword_1000BC910;
    v31 = *(void **)algn_1000BC918;
    v32 = qword_1000BC920;
    v33 = (void **)&v29[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    v34 = *(void **)&v29[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    v68 = *(_QWORD *)&v29[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
    v70 = *(void **)&v29[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
    *v33 = (void *)qword_1000BC910;
    v33[1] = v31;
    v33[2] = (void *)v32;
    v35 = v30;
    v36 = v31;
    swift_bridgeObjectRetain_n(v32, 2);
    v66 = v35;
    v37 = v36;
    v38 = *v33;
    v39 = v33[1];
    v40 = (uint64_t)v33[2];
    sub_100005128();
    v41 = v38;
    v42 = v39;
    swift_bridgeObjectRetain(v40);
    if ((static NSObject.== infix(_:_:)(v41) & 1) != 0 && (static NSObject.== infix(_:_:)(v42) & 1) != 0)
    {
      sub_10005B490(v40, v68);
      v44 = v43;
      swift_bridgeObjectRelease(v40);

      if ((v44 & 1) != 0)
      {
LABEL_27:

        swift_bridgeObjectRelease(v68);
        swift_bridgeObjectRelease(v32);
        v46 = qword_1000B6FD8;
        v47 = v29;
        if (v46 != -1)
          swift_once(&qword_1000B6FD8, sub_10004765C);
        v48 = (void *)qword_1000BC8F8;
        v49 = (void *)qword_1000BC900;
        v50 = qword_1000BC908;
        v51 = (void **)&v47[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
        v52 = *(void **)&v47[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
        v71 = *(void **)&v47[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8];
        v53 = *(_QWORD *)&v47[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16];
        *v51 = (void *)qword_1000BC8F8;
        v51[1] = v49;
        v51[2] = (void *)v50;
        v54 = v48;
        v55 = v49;
        swift_bridgeObjectRetain_n(v50, 2);
        v69 = v54;
        v56 = v55;
        v57 = *v51;
        v58 = v51[1];
        v59 = (uint64_t)v51[2];
        v60 = v57;
        v61 = v58;
        swift_bridgeObjectRetain(v59);
        if ((static NSObject.== infix(_:_:)(v60) & 1) != 0 && (static NSObject.== infix(_:_:)(v61) & 1) != 0)
        {
          sub_10005B490(v59, v53);
          v63 = v62;
          swift_bridgeObjectRelease(v59);

          if ((v63 & 1) != 0)
            goto LABEL_35;
        }
        else
        {
          swift_bridgeObjectRelease(v59);

        }
        (*(void (**)(void))((swift_isaMask & *(_QWORD *)v47) + 0x228))();
LABEL_35:

        swift_bridgeObjectRelease(v53);
        swift_bridgeObjectRelease(v50);
        v22 = v67;
        goto LABEL_36;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v40);

    }
    (*(void (**)(uint64_t))((swift_isaMask & *(_QWORD *)v29) + 0x228))(v45);
    goto LABEL_27;
  }
LABEL_36:
  v64 = v13;
  sub_10007813C();
  objc_msgSend(v64, "setEnabled:", (unint64_t)sub_10005E2B0() < 8);
  sub_100066A90();
  sub_100066C24();

  return v64;
}

void sub_10005E990(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    objc_msgSend(a3, "setMaxACOn:", objc_msgSend(a3, "maxACOn") ^ 1);
    sub_10007813C();
    objc_msgSend(v6, "setEnabled:", (unint64_t)sub_10005E2B0() < 8);
    sub_100066A90();
    sub_100066C24();

  }
}

id sub_10005EAA8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateMaxACButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateMaxACButton()
{
  return objc_opt_self(_TtC7Climate18ClimateMaxACButton);
}

uint64_t sub_10005EAF8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005EB1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10005EB48(uint64_t a1)
{
  uint64_t v1;

  sub_10005E990(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10005EB50()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v17[4];

  v0 = sub_100006058(&qword_1000B8D00);
  __chkstk_darwin(v0);
  v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10005EC90();
  CAFPositioned.layoutKey.getter(v3);
  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4);
  if ((_DWORD)v6 == 1)
  {
    sub_10005ECCC((uint64_t)v2);
    v7 = 1;
  }
  else
  {
    v8 = CAUVehicleLayoutKey.rawValue.getter(v6);
    v10 = v9;
    v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v2, v4);
    v12 = CAUVehicleLayoutKey.rawValue.getter(v11);
    v14 = v13;
    v17[2] = v12;
    v17[3] = v13;
    v17[0] = v8;
    v17[1] = v10;
    v15 = sub_10005ED0C();
    v7 = StringProtocol.contains<A>(_:)(v17, &type metadata for String, &type metadata for String, v15, v15);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v14);
  }
  return v7 & 1;
}

unint64_t sub_10005EC90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7B40;
  if (!qword_1000B7B40)
  {
    v1 = objc_opt_self(CAFZonesSynced);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B7B40);
  }
  return result;
}

uint64_t sub_10005ECCC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006058(&qword_1000B8D00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10005ED0C()
{
  unint64_t result;

  result = qword_1000B96C8;
  if (!qword_1000B96C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1000B96C8);
  }
  return result;
}

uint64_t sub_10005ED50()
{
  return sub_1000130CC();
}

char *sub_10005ED78(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  char *v5;
  id v6;
  char *v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  char *v14;
  void *v15;
  char *v16;
  _BYTE *v17;
  char *v18;

  v3 = &v1[OBJC_IVAR____TtC7Climate20ClimateSyncIndicator_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = objc_allocWithZone((Class)type metadata accessor for ClimateZonesSyncedServiceButton());
  v5 = v1;
  v6 = a1;
  v7 = sub_1000131A0(v6, 1u);
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate20ClimateSyncIndicator_syncButton] = v7;
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate20ClimateSyncIndicator_sync] = v6;
  v8 = v6;

  v9 = (char *)sub_100012568(0, 0, 1);
  v10 = v9;
  v11 = OBJC_IVAR____TtC7Climate20ClimateSyncIndicator_syncButton;
  v12 = *(_BYTE **)&v9[OBJC_IVAR____TtC7Climate20ClimateSyncIndicator_syncButton];
  v13 = v12[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v12[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if (v13 == 1)
  {
    v14 = v9;
  }
  else
  {
    v15 = *(void **)&v12[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    v16 = v9;
    v17 = v12;
    objc_msgSend(v15, "removeFromSuperview");
    sub_100066C24();

  }
  objc_msgSend(v8, "registerObserver:", v10);
  objc_msgSend(v10, "addSubview:", *(_QWORD *)&v10[v11]);
  sub_10005EF20();
  v18 = v10;
  sub_10007813C();
  objc_msgSend(v18, "setEnabled:", (sub_1000130CC() & 0x18) == 0);
  sub_100066C24();
  ClimateButton.refreshColorConfig()();

  return v18;
}

void sub_10005EF20()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100006058((uint64_t *)&unk_1000B7590);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100088DF0;
  v5 = *(void **)&v1[OBJC_IVAR____TtC7Climate20ClimateSyncIndicator_syncButton];
  v6 = objc_msgSend(v5, "leadingAnchor");
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v5, "trailingAnchor");
  v10 = objc_msgSend(v1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(v5, "topAnchor");
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(v5, "bottomAnchor");
  v16 = objc_msgSend(v1, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100006098();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_10005F15C()
{
  return sub_100066C24();
}

void sub_10005F184()
{
  uint64_t v0;

  sub_10001BF8C(v0 + OBJC_IVAR____TtC7Climate20ClimateSyncIndicator_delegate);

}

id sub_10005F1C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateSyncIndicator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateSyncIndicator()
{
  return objc_opt_self(_TtC7Climate20ClimateSyncIndicator);
}

uint64_t sub_10005F2AC()
{
  char *v0;
  uint64_t result;
  uint64_t v2;

  sub_10007813C();
  objc_msgSend(v0, "setEnabled:", (sub_1000130CC() & 0x18) == 0);
  sub_100066C24();
  ClimateButton.refreshColorConfig()();
  result = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC7Climate20ClimateSyncIndicator_delegate]);
  if (result)
  {
    v2 = result;
    sub_10003C338();
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

double sub_10005F32C()
{
  void **v0;
  void *v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v1 = *v0;
  v2 = objc_allocWithZone((Class)type metadata accessor for ClimateSeatHeatingCoolingServiceButton());
  v3 = sub_10003D3A4(v1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = sub_100006058(&qword_1000B7460);
  v5 = swift_allocObject(v4, 48, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v5 + 16) = xmmword_100088D00;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = &off_10009F1E0;
  return result;
}

void sub_10005F3A4()
{
  char *v0;
  unint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  Class isa;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for ClimateHorizontalQuickActionPopover(0);
  objc_msgSendSuper2(&v16, "viewDidLayoutSubviews");
  if ((v0[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_isSet] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_isSet] = 1;
    sub_100018F78();
    v2 = v1;
    sub_10005F58C(v1);
    swift_bridgeObjectRelease(v2);
    sub_1000600C4();
    sub_100018E74();
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      objc_msgSend(v4, "setBackgroundColor:", v5);

      v6 = sub_100006058((uint64_t *)&unk_1000B7590);
      v7 = swift_allocObject(v6, 40, 7);
      *(_OWORD *)(v7 + 16) = xmmword_1000891F0;
      v8 = objc_msgSend(v0, "view");
      if (v8)
      {
        v9 = v8;
        v10 = (void *)objc_opt_self(NSLayoutConstraint);
        v11 = objc_msgSend(v9, "widthAnchor");

        v12 = objc_msgSend(v11, "constraintEqualToConstant:", *(double *)&v0[OBJC_IVAR____TtC7Climate35ClimateHorizontalQuickActionPopover_popoverWidth]);
        *(_QWORD *)(v7 + 32) = v12;
        specialized Array._endMutation()(v13);
        v14 = v7;
        sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v14);
        objc_msgSend(v10, "activateConstraints:", isa);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_10005F58C(unint64_t a1)
{
  uint64_t v1;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char **v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  id v57;
  Class isa;
  id v59;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t i;
  uint64_t v66;
  void *v67;
  id v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  id v75;
  void *v76;
  id v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[3];
  char v91[24];
  uint64_t v92;
  _BYTE v93[9];

  v3 = *(double *)(v1 + OBJC_IVAR____TtC7Climate35ClimateHorizontalQuickActionPopover_maxWidth);
  v93[0] = 1;
  if (qword_1000B6FF8 != -1)
    goto LABEL_113;
  while (1)
  {
    v4 = *(double *)&qword_1000BC948;
    v5 = *(_QWORD *)(a1 + 16);
    v6 = sub_100060860(0, v5);
    v92 = v6;
    v88 = v5;
    if (!v5)
      break;
    v7 = v3 - (v4 + 40.0);
    v86 = OBJC_IVAR____TtC7Climate35ClimateHorizontalQuickActionPopover_popoverWidth;
    v83 = a1;
    v84 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    v8 = 0;
    while (1)
    {
      v9 = *(_QWORD *)(v84 + 8 * v8);
      a1 = v8 + 1;
      v10 = *(_QWORD *)(v9 + 16);
      if (!v10)
        goto LABEL_5;
      v87 = v8;
      v85 = v8 + 1;
      v3 = *(double *)&qword_1000BC948;
      *(double *)(v89 + v86) = *(double *)&qword_1000BC948 + *(double *)(v89 + v86);
      v90[0] = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain_n(v9, 2);
      swift_beginAccess(v93, v91, 1, 0);
      if (!*(_QWORD *)(v9 + 16))
        break;
      v11 = 0;
      v7 = v7 - v3;
      a1 = v9 + 40;
      v12 = (char *)(v10 - 1);
      while (1)
      {
        v13 = *(unsigned __int8 *)(a1 - 8);
        v14 = *(void **)a1;
        if ((((_BYTE)v13 - 1) & 0xFE) != 0)
          v3 = 40.0;
        else
          v3 = 120.0;
        v7 = v7 - (*(double *)&qword_1000BC948 + v3);
        if (v7 <= 0.0)
        {
          v93[0] = 0;
          __asm { BR              X8 }
        }
        v15 = v14;
        v16 = v90[0];
        *(double *)(v89 + v86) = *(double *)(v89 + v86) + v3 + *(double *)&qword_1000BC948;
        v17 = *(char **)(v9 + 16);
        if ((unint64_t)v16 >> 62)
        {
          if (v16 < 0)
            v24 = v16;
          else
            v24 = v16 & 0xFFFFFFFFFFFFFF8;
          v25 = v14;
          swift_bridgeObjectRetain(v16);
          v18 = _CocoaArrayWrapper.endIndex.getter(v24);
          swift_bridgeObjectRelease(v16);
        }
        else
        {
          v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
          v19 = v14;
        }
        sub_100060950(v13, v14, v17, v87, v88, v11, v18 == 0, v93);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        v22 = *(_QWORD *)((v90[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v21 = *(_QWORD *)((v90[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v22 >= v21 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
        v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v14);
        specialized Array._endMutation()(v23);

        if (v12 == v11)
          break;
        ++v11;
        a1 += 16;
        if ((unint64_t)v11 >= *(_QWORD *)(v9 + 16))
          goto LABEL_104;
      }
      swift_bridgeObjectRelease_n(v9, 2);
      v26 = v90[0];
      a1 = (unint64_t)v90[0] >> 62;
      if ((unint64_t)v90[0] >> 62)
      {
        if (v90[0] < 0)
          v51 = v90[0];
        else
          v51 = v90[0] & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v90[0]);
        v27 = _CocoaArrayWrapper.endIndex.getter(v51);
        swift_bridgeObjectRelease(v90[0]);
      }
      else
      {
        v27 = *(_QWORD *)((v90[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v28 = &selRef_insertSubview_belowSubview_;
      if (!v27)
      {
        swift_bridgeObjectRelease(v90[0]);
        a1 = v85;
        goto LABEL_5;
      }
      sub_10001A8C0();
      if ((v29 & 1) != 0)
      {
        if (a1)
        {
          if (v90[0] < 0)
            v52 = v90[0];
          else
            v52 = v90[0] & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v90[0]);
          v53 = _CocoaArrayWrapper.endIndex.getter(v52);
          swift_bridgeObjectRelease(v90[0]);
          if (v53)
          {
            swift_bridgeObjectRetain(v90[0]);
            v30 = _CocoaArrayWrapper.endIndex.getter(v52);
            swift_bridgeObjectRelease(v90[0]);
            v31 = v30 - 1;
            if (__OFSUB__(v30, 1))
              goto LABEL_111;
LABEL_33:
            if (v31 >= 1)
            {
              v32 = 0;
              a1 = v30 + 0x7FFFFFFFFFFFFFFFLL;
              do
              {
                v33 = v30 - 1;
                v34 = v90[0];
                if ((v90[0] & 0xC000000000000001) != 0)
                {
                  v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v90[0]);
                  v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30 - 1, v90[0]);
                }
                else
                {
                  v35 = *(_QWORD *)((v90[0] & 0xFFFFFFFFFFFFF8) + 0x10);
                  if (v32 >= v35)
                    goto LABEL_105;
                  v36 = *(id *)(v90[0] + 8 * v32 + 32);
                  if (v33 >= v35)
                    goto LABEL_106;
                  v37 = (uint64_t)v36;
                  v38 = *(id *)(v90[0] + 8 * v30 + 24);
                }
                v39 = v38;
                if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v90[0])
                  || v90[0] < 0
                  || (v90[0] & 0x4000000000000000) != 0)
                {
                  v34 = sub_100060E9C(v90[0]);
                  v90[0] = v34;
                }
                v40 = *(void **)((v34 & 0xFFFFFFFFFFFFFF8) + 8 * v32 + 0x20);
                *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 8 * v32 + 0x20) = v39;

                specialized Array._endMutation()(v41);
                v42 = v90[0];
                if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v90[0])
                  || v90[0] < 0
                  || (v90[0] & 0x4000000000000000) != 0)
                {
                  v42 = sub_100060E9C(v90[0]);
                  v90[0] = v42;
                }
                if (v33 >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_107;
                v43 = *(void **)((v42 & 0xFFFFFFFFFFFFFF8) + 8 * v30 + 0x18);
                *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 8 * v30 + 0x18) = v37;

                specialized Array._endMutation()(v44);
                if (a1 == v32)
                  goto LABEL_108;
                ++v32;
                v45 = v30 - 2;
                --v30;
              }
              while (v32 < v45);
              v26 = v90[0];
              v28 = &selRef_insertSubview_belowSubview_;
            }
          }
        }
        else
        {
          v30 = *(_QWORD *)((v90[0] & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v30)
          {
            v31 = v30 - 1;
            if (__OFSUB__(v30, 1))
              goto LABEL_111;
            goto LABEL_33;
          }
        }
        if ((unint64_t)v26 >> 62)
        {
          if (v26 < 0)
            v54 = v26;
          else
            v54 = v26 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v26, 2);
          v46 = _CocoaArrayWrapper.endIndex.getter(v54);
          if (v46)
          {
LABEL_54:
            if (v46 < 1)
              goto LABEL_112;
            v47 = 0;
            do
            {
              if ((v26 & 0xC000000000000001) != 0)
                v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v26);
              else
                v48 = *(id *)(v26 + 8 * v47 + 32);
              v49 = v48;
              ++v47;
              objc_msgSend(v48, "_touchInsets", v83);
              v3 = v50;
              objc_msgSend(v49, "_touchInsets");
              objc_msgSend(v49, "_touchInsets");
              objc_msgSend(v49, v28[8]);
              objc_msgSend(v49, "_touchInsets");
              objc_msgSend(v49, v28[8]);

            }
            while (v46 != v47);
          }
        }
        else
        {
          v46 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n(v26, 2);
          if (v46)
            goto LABEL_54;
        }
        swift_bridgeObjectRelease_n(v26, 2);
      }
      sub_10001A8C0();
      a1 = v85;
      if ((v55 & 1) != 0)
        v56 = v88 - v85;
      else
        v56 = v87;
      v57 = objc_allocWithZone((Class)UIStackView);
      sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
      swift_bridgeObjectRetain(v26);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v26);
      v59 = objc_msgSend(v57, "initWithArrangedSubviews:", isa);

      v60 = (void *)objc_opt_self(UIColor);
      v61 = v59;
      v62 = objc_msgSend(v60, "clearColor");
      objc_msgSend(v61, "setBackgroundColor:", v62);

      objc_msgSend(v61, "setDistribution:", 3);
      objc_msgSend(v61, "setSpacing:", *(double *)&qword_1000BC948);
      objc_msgSend(v61, "setSemanticContentAttribute:", 3);
      objc_msgSend(v61, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      swift_bridgeObjectRelease(v26);
      if (*(_QWORD *)(v92 + 16) < v56)
        goto LABEL_109;
      if (v56 < 0)
        goto LABEL_110;
      sub_100060CE0(v56, v56, (uint64_t)v61);
LABEL_5:
      v8 = a1;
      if (v88 == a1)
      {
        swift_bridgeObjectRelease(v83);
        v63 = v92;
        goto LABEL_84;
      }
    }
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    swift_once(&qword_1000B6FF8, sub_100060CC0);
  }
  v63 = v6;
LABEL_84:
  v90[0] = (uint64_t)_swiftEmptyArrayStorage;
  v64 = *(_QWORD *)(v63 + 16);
  if (v64)
  {
    swift_bridgeObjectRetain_n(v63, 2);
    for (i = 0; i != v64; ++i)
    {
      v67 = *(void **)(v63 + 8 * i + 32);
      if (v67)
      {
        v68 = v67;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
        v70 = *(_QWORD *)((v90[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v69 = *(_QWORD *)((v90[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v70 >= v69 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1);
        v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v68);
        specialized Array._endMutation()(v66);
      }
    }
    swift_bridgeObjectRelease(v63);
    v71 = v90[0];
  }
  else
  {
    swift_bridgeObjectRetain(v63);
    v71 = (uint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v63);
  if ((unint64_t)v71 >> 62)
  {
    if (v71 < 0)
      v81 = v71;
    else
      v81 = v71 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v71);
    v72 = _CocoaArrayWrapper.endIndex.getter(v81);
    if (v72)
    {
LABEL_95:
      if (v72 < 1)
      {
        __break(1u);
        JUMPOUT(0x10006008CLL);
      }
      v73 = 0;
      v74 = (_QWORD *)(v89 + OBJC_IVAR____TtC7Climate35ClimateHorizontalQuickActionPopover_quickActionContainers);
      do
      {
        if ((v71 & 0xC000000000000001) != 0)
          v75 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v73, v71);
        else
          v75 = *(id *)(v71 + 8 * v73 + 32);
        v76 = v75;
        swift_beginAccess(v74, v90, 33, 0);
        v77 = v76;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
        v79 = *(_QWORD *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v78 = *(_QWORD *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v79 >= v78 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v78 > 1, v79 + 1, 1);
        ++v73;
        v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v77);
        specialized Array._endMutation()(v80);
        swift_endAccess(v90);

      }
      while (v72 != v73);
    }
  }
  else
  {
    v72 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v71);
    if (v72)
      goto LABEL_95;
  }
  swift_bridgeObjectRelease_n(v71, 2);
  return swift_bridgeObjectRelease(v63);
}

void sub_1000600C4()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double height;
  char *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  Class isa;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  Class v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  id v54;
  char *v55;
  uint64_t v56;
  id v57;
  char v58[32];

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC7Climate35ClimateHorizontalQuickActionPopover_quickActionContainers];
  swift_beginAccess(&v0[OBJC_IVAR____TtC7Climate35ClimateHorizontalQuickActionPopover_quickActionContainers], v58, 0, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_22;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v46))
  {
    v52 = v0;
    v50 = (id)objc_opt_self(MTMaterialView);
    v4 = 0;
    v57 = 0;
    v51 = v2 & 0xC000000000000001;
    height = UILayoutFittingCompressedSize.height;
    v47 = kCAFilterPlusD;
    v48 = v3;
    v49 = v2;
    while (1)
    {
      v6 = v51
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2)
         : (char *)*(id *)(v2 + 8 * v4 + 32);
      v0 = v6;
      if (__OFADD__(v4, 1))
        break;
      v7 = objc_msgSend(v50, "materialViewWithRecipe:", 20);
      if (!v7)
      {

        swift_bridgeObjectRelease(v2);
        v8 = v57;
        goto LABEL_28;
      }
      v8 = v7;
      v56 = v4 + 1;
      objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v0, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, height);
      v10 = v9;
      v11 = qword_1000B7000;
      v12 = v0;
      if (v11 != -1)
        swift_once(&qword_1000B7000, sub_100060CD0);
      objc_msgSend(v12, "_setTouchInsets:", *(double *)&qword_1000BC950, -12.0, *(double *)&qword_1000BC950, -12.0);
      v55 = v12;

      v53 = v4;
      if ((v4 & 1) != 0)
      {
        v13 = objc_msgSend(v8, "layer");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
        v15 = v14;
        v16 = objc_allocWithZone((Class)CAFilter);
        v17 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v15);
        v18 = objc_msgSend(v16, "initWithType:", v17);

        objc_msgSend(v13, "setCompositingFilter:", v18);
      }
      v19 = OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_contentView;
      objc_msgSend(*(id *)&v52[OBJC_IVAR____TtC7Climate25ClimateQuickActionPopover_contentView], "addSubview:", v8);
      v20 = sub_100006058((uint64_t *)&unk_1000B7590);
      v21 = swift_allocObject(v20, 64, 7);
      *(_OWORD *)(v21 + 16) = xmmword_100088DF0;
      v22 = objc_msgSend(v8, "leftAnchor");
      if (!v57 || (v23 = objc_msgSend(v57, "rightAnchor")) == 0)
        v23 = objc_msgSend(*(id *)&v52[v19], "leftAnchor");
      v54 = (id)objc_opt_self(NSLayoutConstraint);
      v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

      *(_QWORD *)(v21 + 32) = v24;
      v25 = objc_msgSend(v8, "topAnchor");
      v26 = objc_msgSend(*(id *)&v52[v19], "topAnchor");
      v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

      *(_QWORD *)(v21 + 40) = v27;
      v28 = objc_msgSend(v8, "bottomAnchor");
      v29 = objc_msgSend(*(id *)&v52[v19], "bottomAnchor");
      v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

      *(_QWORD *)(v21 + 48) = v30;
      v31 = objc_msgSend(v8, "widthAnchor");
      if (qword_1000B6FF8 != -1)
        swift_once(&qword_1000B6FF8, sub_100060CC0);
      v32 = objc_msgSend(v31, "constraintEqualToConstant:", v10 + *(double *)&qword_1000BC948 + *(double *)&qword_1000BC948);

      *(_QWORD *)(v21 + 56) = v32;
      specialized Array._endMutation()(v33);
      v34 = v21;
      sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v34);
      objc_msgSend(v54, "activateConstraints:", isa);

      objc_msgSend(*(id *)&v52[v19], "addSubview:", v55);
      v36 = swift_allocObject(v20, 48, 7);
      *(_OWORD *)(v36 + 16) = xmmword_100088C40;
      v37 = objc_msgSend(v55, "centerXAnchor");
      v38 = objc_msgSend(v8, "centerXAnchor");
      v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

      *(_QWORD *)(v36 + 32) = v39;
      v40 = objc_msgSend(v55, "centerYAnchor");
      v41 = objc_msgSend(v8, "centerYAnchor");
      v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

      *(_QWORD *)(v36 + 40) = v42;
      specialized Array._endMutation()(v43);
      v44 = v36;
      v45 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v44);
      objc_msgSend(v54, "activateConstraints:", v45);

      v4 = v53 + 1;
      v57 = v8;
      v2 = v49;
      if (v56 == v48)
        goto LABEL_27;
    }
    __break(1u);
LABEL_22:
    if (v2 < 0)
      v46 = v2;
    else
      v46 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
  }
  v8 = 0;
LABEL_27:
  swift_bridgeObjectRelease(v2);
LABEL_28:

}

uint64_t sub_100060774()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC7Climate35ClimateHorizontalQuickActionPopover_quickActionContainers));
}

id sub_100060784()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateHorizontalQuickActionPopover(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000607C8()
{
  return type metadata accessor for ClimateHorizontalQuickActionPopover(0);
}

uint64_t type metadata accessor for ClimateHorizontalQuickActionPopover(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9740;
  if (!qword_1000B9740)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateHorizontalQuickActionPopover);
  return result;
}

uint64_t sub_10006080C(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[2] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 304);
}

uint64_t sub_100060860(void *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t result;
  _QWORD *v10;

  if (a2 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = sub_100006058(&qword_1000B9750);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v5[2] = a2;
      v10 = v5;
      v5[4] = a1;
      if (a2 != 1)
      {
        v5[5] = a1;
        v6 = a2 - 2;
        if (v6)
        {
          v7 = v5 + 6;
          do
          {
            *v7++ = a1;
            v8 = a1;
            --v6;
          }
          while (v6);
        }
        v5 = a1;
      }
    }
    else
    {
      v10 = _swiftEmptyArrayStorage;

    }
    specialized Array._endMutation()(v5);
    return (uint64_t)v10;
  }
  return result;
}

void sub_100060950(unsigned __int8 a1, id a2, char *a3, uint64_t a4, uint64_t a5, char *a6, char a7, _BYTE *a8)
{
  char *v8;
  char *v9;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  double v17;
  double v18;
  id *v19;
  double v20;
  uint64_t v21;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _BYTE v32[24];

  v11 = a3;
  if ((a1 - 1) < 2u)
  {
    v13 = type metadata accessor for ClimateStepper();
    v14 = swift_dynamicCastClass(a2, v13);
    if (!v14)
      return;
    v9 = v11 - 1;
    if (!__OFSUB__(v11, 1))
    {
      v8 = (char *)v14;
      v15 = *(void **)(v14 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
      v16 = qword_1000B7000;
      a2 = a2;
      v11 = v15;
      if (v16 == -1)
      {
LABEL_5:
        v17 = -10.0;
        if (a6)
          v18 = -10.0;
        else
          v18 = -22.0;
        objc_msgSend(v11, "_setTouchInsets:", *(double *)&qword_1000BC950, v18, *(double *)&qword_1000BC950, -6.0);

        v19 = (id *)&v8[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton];
        swift_beginAccess(&v8[OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton], v32, 0, 0);
        v20 = *(double *)&qword_1000BC950;
        objc_msgSend(*v19, "_setTouchInsets:", *(double *)&qword_1000BC950, -6.0, *(double *)&qword_1000BC950, -6.0);
        if (v9 == a6)
          v17 = -22.0;
        objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC7Climate14ClimateStepper_upButton], "_setTouchInsets:", v20, -6.0, v20, v17);
        objc_msgSend(v8, "_setTouchInsets:", v20, v18, v20, v17);

        return;
      }
LABEL_41:
      swift_once(&qword_1000B7000, sub_100060CD0);
      goto LABEL_5;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v21 = a5 - 1;
  if (__OFSUB__(a5, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  if (a3 == (char *)1)
    goto LABEL_13;
  if ((a7 & 1) != 0)
  {
    swift_beginAccess(a8, &v31, 0, 0);
    if ((*a8 & 1) == 0)
    {
      if (v21 == a4)
      {
        v27 = sub_100031D58(a1);
        v29 = v28;
        if (v27 == 0x6B6E694C70656564 && v28 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease(0xE800000000000000);
        }
        else
        {
          v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, 0x6B6E694C70656564, 0xE800000000000000, 0);
          swift_bridgeObjectRelease(v29);
          if ((v30 & 1) == 0)
            goto LABEL_18;
        }
      }
LABEL_13:
      if (qword_1000B7000 != -1)
        swift_once(&qword_1000B7000, sub_100060CD0);
      objc_msgSend(a2, "_setTouchInsets:", *(double *)&qword_1000BC950, -12.0, *(double *)&qword_1000BC950, -12.0);
      return;
    }
  }
LABEL_18:
  if (a6)
  {
    if (__OFSUB__(v11, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v11 - 1 != a6)
    {
      swift_beginAccess(a8, v32, 0, 0);
      if ((*a8 & 1) != 0)
      {
        if (qword_1000B7000 == -1)
        {
LABEL_23:
          objc_msgSend(a2, "_setTouchInsets:", *(double *)&qword_1000BC950, -6.0, *(double *)&qword_1000BC950, -6.0);
          return;
        }
LABEL_43:
        swift_once(&qword_1000B7000, sub_100060CD0);
        goto LABEL_23;
      }
    }
  }
  if (qword_1000B7000 != -1)
    swift_once(&qword_1000B7000, sub_100060CD0);
  v25 = -12.0;
  if (a6)
    v26 = -12.0;
  else
    v26 = -6.0;
  if (a6)
    v25 = -6.0;
  objc_msgSend(a2, "_setTouchInsets:", *(double *)&qword_1000BC950, v25, *(double *)&qword_1000BC950, v26);
}

void sub_100060CC0()
{
  qword_1000BC948 = 0x4028000000000000;
}

void sub_100060CD0()
{
  qword_1000BC950 = 0xC024000000000000;
}

uint64_t sub_100060CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = v5;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v6 += v9;
    swift_bridgeObjectRetain(v5);
    v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v6, 1, v5);
    swift_bridgeObjectRelease(*v3);
    *v3 = v5;
  }
  v13 = (_QWORD *)(v5 + 32 + 8 * a1);
  v14 = sub_100006058(&qword_1000B9750);
  v15 = (char *)swift_arrayDestroy(v13, v8, v14);
  if (!v9)
    goto LABEL_19;
  v16 = *(_QWORD *)(v5 + 16);
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_25;
  if ((v18 & 0x8000000000000000) == 0)
  {
    v15 = (char *)(v13 + 1);
    v19 = (char *)(v5 + 32 + 8 * a2);
    if (v13 + 1 != (_QWORD *)v19 || v15 >= &v19[8 * v18])
      v15 = (char *)memmove(v15, v19, 8 * v18);
    v20 = *(_QWORD *)(v5 + 16);
    v17 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v17)
    {
      *(_QWORD *)(v5 + 16) = v21;
LABEL_19:
      *v13 = a3;
      return specialized Array._endMutation()(v15);
    }
    goto LABEL_26;
  }
LABEL_27:
  v23 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v23, 1046, 0);
  __break(1u);
  return result;
}

_QWORD *sub_100060E88(_QWORD *a1)
{
  return sub_10007A848(0, a1[2], 0, a1);
}

uint64_t sub_100060E9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

void sub_100060F04(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  id v22;
  id v23;
  char v24;
  char v25;
  char v26;
  void *v27;

  v8 = *(void **)(v4 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors);
  v9 = *(void **)(v4 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 8);
  v10 = *(void **)(v4 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 16);
  v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 24);
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v12 = v10;
  swift_bridgeObjectRetain(v11);
  v13 = v8;
  v14 = v9;
  v15 = a1;
  v16 = v13;
  if ((static NSObject.== infix(_:_:)(v15) & 1) == 0)
    goto LABEL_6;
  v27 = v10;
  v17 = v11;
  if (!a2)
  {
    v18 = v14;
    if (!v9)
      goto LABEL_11;
LABEL_6:
    swift_bridgeObjectRelease(v11);

    goto LABEL_7;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease(v11);

    goto LABEL_7;
  }
  v18 = v14;
  sub_100006B04(0, (unint64_t *)&qword_1000B91A0, UIColor_ptr);
  v19 = v14;
  v20 = a2;
  v21 = static NSObject.== infix(_:_:)(v20);

  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease(v17);

LABEL_7:
    v12 = v16;
LABEL_8:

LABEL_9:
    sub_100061E94();
    return;
  }
LABEL_11:
  if (!a3)
  {
    if (!v27)
      goto LABEL_14;
LABEL_18:

    swift_bridgeObjectRelease(v17);
    goto LABEL_8;
  }
  if (!v27)
    goto LABEL_18;
  sub_100006B04(0, (unint64_t *)&qword_1000B91A0, UIColor_ptr);
  v22 = v12;
  v23 = a3;
  v24 = static NSObject.== infix(_:_:)(v23);

  if ((v24 & 1) == 0)
    goto LABEL_18;
LABEL_14:
  sub_10005B0D4(a4, v17);
  v26 = v25;
  swift_bridgeObjectRelease(v17);

  if ((v26 & 1) == 0)
    goto LABEL_9;
}

void sub_100061124(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;

  v8 = (_QWORD *)(v4 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors);
  v9 = *(void **)(v4 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors);
  v10 = *(void **)(v4 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 8);
  v11 = *(void **)(v4 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 16);
  v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 24);
  *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8[3] = a4;
  v13 = a3;
  swift_bridgeObjectRetain(a4);
  v15 = a1;
  v14 = a2;
  sub_100060F04((uint64_t)v9, v10, v11, v12);
  swift_bridgeObjectRelease(v12);

  swift_bridgeObjectRelease(a4);
}

uint64_t sub_1000611E8()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t result;

  if ((sub_100061320() & 2) != 0)
    v1 = 0;
  else
    v1 = *(_BYTE *)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_wasPreviousValueInAutoMode) ^ 1;
  v2 = *(_QWORD **)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressCircle);
  v3 = sub_100061294();
  v4 = *(_QWORD *)((swift_isaMask & *v2) + 0x70);
  if (*((unsigned __int8 *)v2 + v4) != v3)
  {
    *((_BYTE *)v2 + v4) = v3;
    sub_100062710(v1 & 1);
  }
  result = sub_100061320();
  *(_BYTE *)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_wasPreviousValueInAutoMode) = (result & 2) != 0;
  return result;
}

uint64_t sub_100061294()
{
  uint64_t v0;
  unsigned __int8 *v1;
  id v2;
  uint64_t result;
  uint64_t v4;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue + 1) != 1)
    return *v1;
  v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_fan), "fanLevelRange");
  CAFRange.minimumValue<A>()(&v4, &type metadata for UInt8, &protocol witness table for UInt8);

  result = v4;
  *v1 = v4;
  v1[1] = 0;
  return result;
}

uint64_t sub_100061320()
{
  uint64_t v0;
  void *v1;
  char v2;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned int v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_fan);
  if (!objc_msgSend(v1, "hasOn") || (objc_msgSend(v1, "on") & 1) != 0)
  {
    v2 = CAFFan.isBlowing.getter();
    return _s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(v2 & 1, (char)objc_msgSend(v1, "autoMode"), (char)objc_msgSend(v1, "fanLevelRestricted"), (char)objc_msgSend(v1, "fanLevelInvalid"), (char)objc_msgSend(v1, "fanLevelDisabled"));
  }
  v4 = objc_msgSend(v1, "autoMode");
  v5 = objc_msgSend(v1, "onRestricted");
  v6 = objc_msgSend(v1, "onInvalid");
  v7 = objc_msgSend(v1, "onDisabled");
  if ((v4 & 1) != 0)
  {
    if ((v5 & 1) != 0)
    {
      v8 = 6;
      v9 = 14;
    }
    else
    {
      v8 = 2;
      v9 = 10;
    }
    goto LABEL_10;
  }
  if ((v5 & 1) != 0)
  {
    v8 = 4;
    v9 = 12;
LABEL_10:
    if (v6)
      v8 = v9;
    if ((v7 & 1) == 0)
      return v8;
    return v8 | 0x10;
  }
  v8 = 8;
  if (!v6)
    v8 = 0;
  if ((v7 & 1) == 0)
    return v8;
  return v8 | 0x10;
}

char *sub_100061494(void *a1, unsigned __int8 a2)
{
  _BYTE *v2;
  void *v4;
  int v5;
  _BYTE *v6;
  id v7;
  char v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  _QWORD *v17;
  int v18;
  objc_class *v19;
  id v20;
  void *v21;
  char *v22;
  char *v23;
  id v24;
  void *v25;
  char *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t inited;
  unint64_t v32;
  id v33;
  uint64_t v34;
  char *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  char v43;
  char v44;
  char *v45;
  id v46;
  id v47;
  char *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  char v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void *v62;
  char *v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  char v69;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  Class isa;
  id v91;
  void *v92;
  id v93;
  char v94[64];
  uint64_t v95;
  _QWORD v96[3];
  objc_super v97;

  v4 = a1;
  v5 = a2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate16ClimateFanButton_autoModeGlyph] = 0;
  *(_WORD *)&v2[OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue] = 256;
  v2[OBJC_IVAR____TtC7Climate16ClimateFanButton_wasPreviousValueInAutoMode] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate16ClimateFanButton_fan] = a1;
  v6 = v2;
  v93 = v4;
  v7 = objc_msgSend(v93, "fanLevelRange");
  CAFRange.minimumValue<A>()(v96, &type metadata for UInt8, &protocol witness table for UInt8);
  v8 = v96[0];
  v92 = v7;
  CAFRange.maximumValue<A>()(&v95, &type metadata for UInt8, &protocol witness table for UInt8);
  LOBYTE(v4) = v95;
  v9 = objc_allocWithZone((Class)sub_100006058(&qword_1000B97B8));
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate16ClimateFanButton_progressCircle] = sub_100062268(v8, (char)v4, 31.0, 2.0);
  v6[OBJC_IVAR____TtC7Climate16ClimateFanButton_style] = a2;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v10;
  if (v5 == 1)
  {
    v12 = objc_msgSend(v10, "labelColor");
    if (qword_1000B6FB0 != -1)
      swift_once(&qword_1000B6FB0, sub_100042054);
    v13 = (id)qword_1000BC8B8;
    v14 = objc_msgSend(v11, "labelColor");
  }
  else
  {
    v12 = objc_msgSend(v10, "_carSystemFocusPrimaryColor");
    v15 = objc_msgSend(v11, "labelColor");
    v13 = objc_msgSend(v15, "colorWithAlphaComponent:", 0.25);

    v14 = objc_msgSend(v11, "_carSystemFocusPrimaryColor");
  }
  v16 = v14;
  v17 = &v6[OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors];
  *v17 = v12;
  v17[1] = v13;
  v18 = a2;
  v17[2] = v16;
  v17[3] = &_swiftEmptyDictionarySingleton;

  v19 = (objc_class *)type metadata accessor for ClimateFanButton();
  v97.receiver = v6;
  v97.super_class = v19;
  v20 = objc_msgSendSuper2(&v97, "init");
  v21 = (void *)objc_opt_self(UIColor);
  v22 = (char *)v20;
  v23 = v22;
  if (v18 != 1)
  {
    v45 = v22;
    v46 = objc_msgSend(v21, "clearColor");
    v47 = objc_msgSend(v21, "labelColor");
    v48 = &v45[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
    v50 = *(void **)&v45[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
    v49 = *(void **)&v45[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
    v51 = *(_QWORD *)&v45[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16];
    *(_QWORD *)v48 = v46;
    *((_QWORD *)v48 + 1) = v47;
    *((_QWORD *)v48 + 2) = &_swiftEmptyDictionarySingleton;
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v52 = v46;
    v53 = v47;
    swift_bridgeObjectRetain(&_swiftEmptyDictionarySingleton);
    v54 = v52;
    v55 = v53;
    if ((static NSObject.== infix(_:_:)(v54) & 1) != 0 && (static NSObject.== infix(_:_:)(v55) & 1) != 0)
    {
      sub_10005B490((uint64_t)&_swiftEmptyDictionarySingleton, v51);
      v57 = v56;
      swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

      if ((v57 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      swift_bridgeObjectRelease(&_swiftEmptyDictionarySingleton);

    }
    (*(void (**)(void))((swift_isaMask & *(_QWORD *)v45) + 0x230))();
LABEL_22:

    swift_bridgeObjectRelease(v51);
    goto LABEL_23;
  }
  v24 = objc_msgSend(v21, "clearColor");
  if (qword_1000B6FB0 != -1)
    swift_once(&qword_1000B6FB0, sub_100042054);
  v25 = (void *)qword_1000BC8B8;
  v26 = v23;
  v27 = v25;
  v28 = objc_msgSend(v21, "clearColor");
  v29 = objc_msgSend(v21, "labelColor");
  v30 = sub_100006058((uint64_t *)&unk_1000B9CC0);
  inited = swift_initStackObject(v30, v94);
  *(_OWORD *)(inited + 16) = xmmword_100088D00;
  *(_QWORD *)(inited + 32) = 16;
  *(_QWORD *)(inited + 40) = v24;
  *(_QWORD *)(inited + 48) = v27;
  *(_QWORD *)(inited + 56) = &_swiftEmptyDictionarySingleton;
  v32 = sub_10002C0E8(inited);
  swift_setDeallocating(inited);
  v91 = v27;
  v33 = v24;
  v34 = sub_100006058((uint64_t *)&unk_1000B7580);
  swift_arrayDestroy(inited + 32, 1, v34);
  v35 = &v26[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  v36 = *(void **)&v26[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
  v37 = *(void **)&v26[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
  v38 = *(_QWORD *)&v26[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16];
  *(_QWORD *)v35 = v28;
  *((_QWORD *)v35 + 1) = v29;
  *((_QWORD *)v35 + 2) = v32;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v39 = v28;
  v40 = v29;
  swift_bridgeObjectRetain_n(v32, 2);
  v41 = v39;
  v42 = v40;
  if ((static NSObject.== infix(_:_:)(v41) & 1) != 0 && (static NSObject.== infix(_:_:)(v42) & 1) != 0)
  {
    sub_10005B490(v32, v38);
    v44 = v43;
    swift_bridgeObjectRelease(v32);

    if ((v44 & 1) != 0)
      goto LABEL_19;
  }
  else
  {
    swift_bridgeObjectRelease(v32);

  }
  (*(void (**)(void))((swift_isaMask & *(_QWORD *)v26) + 0x230))();
LABEL_19:

  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v32);
LABEL_23:
  objc_msgSend(v23, "_setContinuousCornerRadius:", 0.0);
  v58 = &v23[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v23[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v96, 1, 0);
  v60 = *(_QWORD *)v58;
  v59 = *((_QWORD *)v58 + 1);
  *(_OWORD *)v58 = xmmword_10008AD60;
  v61 = v23;
  if (!v59
    || (v60 != 0x6C6C69662E6E6166 || v59 != 0xE800000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6C69662E6E6166, 0xE800000000000000, v60, v59, 0) & 1) == 0)
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v59);
  v62 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v63 = v61;
  v64 = objc_msgSend(v62, "configurationWithPointSize:weight:", 5, 14.0);
  v65 = ClimateButton.imageSymbolConfiguration.getter();
  v66 = *(void **)&v63[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration];
  *(_QWORD *)&v63[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = v64;
  v67 = v64;

  v68 = ClimateButton.imageSymbolConfiguration.getter();
  sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
  v69 = static NSObject.== infix(_:_:)(v68);

  if ((v69 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();

  v70 = OBJC_IVAR____TtC7Climate16ClimateFanButton_progressCircle;
  v71 = *(void **)&v63[OBJC_IVAR____TtC7Climate16ClimateFanButton_progressCircle];
  objc_msgSend(v71, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v63, "addSubview:", v71);
  v72 = (void *)objc_opt_self(NSLayoutConstraint);
  v73 = sub_100006058((uint64_t *)&unk_1000B7590);
  v74 = swift_allocObject(v73, 64, 7);
  *(_OWORD *)(v74 + 16) = xmmword_100088DF0;
  v75 = objc_msgSend(v71, "centerXAnchor");
  v76 = objc_msgSend(v63, "centerXAnchor");
  v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

  *(_QWORD *)(v74 + 32) = v77;
  v78 = objc_msgSend(*(id *)&v63[v70], "centerYAnchor");
  v79 = objc_msgSend(v63, "centerYAnchor");
  v80 = objc_msgSend(v78, "constraintEqualToAnchor:", v79);

  *(_QWORD *)(v74 + 40) = v80;
  v81 = objc_msgSend(*(id *)&v63[v70], "heightAnchor");
  v82 = objc_msgSend(v63, "heightAnchor");
  v83 = objc_msgSend(v81, "constraintEqualToAnchor:", v82);

  *(_QWORD *)(v74 + 48) = v83;
  v84 = objc_msgSend(*(id *)&v63[v70], "widthAnchor");
  v85 = objc_msgSend(v63, "widthAnchor");
  v86 = objc_msgSend(v84, "constraintEqualToAnchor:", v85);

  *(_QWORD *)(v74 + 56) = v86;
  v95 = v74;
  specialized Array._endMutation()(v87);
  v88 = v95;
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v88);
  objc_msgSend(v72, "activateConstraints:", isa);

  return v63;
}

void sub_100061E94()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressCircle);
  v2 = v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 16);
  v4 = *(_QWORD *)((swift_isaMask & *v1) + 0x60);
  v5 = *(void **)((char *)v1 + v4);
  *(_QWORD *)((char *)v1 + v4) = v3;
  v6 = v3;

  v7 = *(void **)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x80));
  v8 = *(void **)((char *)v1 + v4);
  if (v8)
    v9 = objc_msgSend(v8, "CGColor");
  else
    v9 = 0;
  objc_msgSend(v7, "setStrokeColor:", v9);

  v10 = *(void **)(v2 + 8);
  v11 = *(_QWORD *)((swift_isaMask & *v1) + 0x68);
  v12 = *(void **)((char *)v1 + v11);
  *(_QWORD *)((char *)v1 + v11) = v10;
  v13 = v10;

  v14 = *(void **)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x78));
  v15 = *(void **)((char *)v1 + v11);
  if (v15)
    v16 = objc_msgSend(v15, "CGColor");
  else
    v16 = 0;
  v17 = v16;
  objc_msgSend(v14, "setStrokeColor:");

}

void sub_100061FEC()
{
  char *v0;
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSString v7;
  id v8;

  sub_10007813C();
  objc_msgSend(v0, "setEnabled:", (sub_100061320() & 0x18) == 0);
  ClimateButton.refreshColorConfig()();
  if (v0[OBJC_IVAR____TtC7Climate16ClimateFanButton_style] == 1)
  {
    v1 = sub_100061320();
    v2 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC7Climate16ClimateFanButton_progressCircle]
                  + *(_QWORD *)((swift_isaMask & **(_QWORD **)&v0[OBJC_IVAR____TtC7Climate16ClimateFanButton_progressCircle])
                              + 0x78));
    if ((v1 & 0x10) != 0)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
      v4 = v3;
      v5 = objc_allocWithZone((Class)CAFilter);
      v6 = v2;
      v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v4);
      v8 = objc_msgSend(v5, "initWithType:", v7);

      objc_msgSend(v6, "setCompositingFilter:", v8);
    }
    else
    {
      objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC7Climate16ClimateFanButton_progressCircle]+ *(_QWORD *)((swift_isaMask & **(_QWORD **)&v0[OBJC_IVAR____TtC7Climate16ClimateFanButton_progressCircle])+ 0x78)), "setCompositingFilter:", 0);
    }
  }
}

void sub_100062134()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 8);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate16ClimateFanButton_progressColors + 24));

}

id sub_1000621A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateFanButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateFanButton()
{
  return objc_opt_self(_TtC7Climate16ClimateFanButton);
}

_QWORD *sub_100062268(char a1, char a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  _QWORD *v18;
  id v19;
  objc_super v21;

  *(_QWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x60)) = 0;
  *(_QWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x68)) = 0;
  v9 = *(_QWORD *)((swift_isaMask & *v4) + 0x78);
  v10 = objc_allocWithZone((Class)CAShapeLayer);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  *(_QWORD *)((char *)v4 + v9) = v12;
  v13 = *(_QWORD *)((swift_isaMask & *v11) + 0x80);
  v14 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  *(_QWORD *)((char *)v11 + v13) = v14;
  *((_BYTE *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0xA0)) = 0;
  *((_BYTE *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0x88)) = a1;
  *((_BYTE *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0x90)) = a2;
  *((_BYTE *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0x70)) = 0;
  *(double *)((char *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0x98)) = (a3 - a4) * 0.5;
  objc_msgSend(v12, "setLineWidth:", a4);
  v15 = v14;
  objc_msgSend(v15, "setLineWidth:", a4);

  v21.receiver = v11;
  v21.super_class = (Class)sub_100006058(&qword_1000B97B8);
  v16 = objc_msgSendSuper2(&v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v16;
  v19 = objc_msgSend(v17, "clearColor");
  objc_msgSend(v18, "setBackgroundColor:", v19);

  objc_msgSend(*(id *)((char *)v18 + *(_QWORD *)((swift_isaMask & *v18) + 0x80)), "setStrokeEnd:", 0.0);
  sub_100062C50(0.0);

  return v18;
}

_QWORD *sub_1000624BC(int a1, int a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  _QWORD *v18;
  id v19;
  objc_super v21;

  *(_QWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x60)) = 0;
  *(_QWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x68)) = 0;
  v9 = *(_QWORD *)((swift_isaMask & *v4) + 0x78);
  v10 = objc_allocWithZone((Class)CAShapeLayer);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  *(_QWORD *)((char *)v4 + v9) = v12;
  v13 = *(_QWORD *)((swift_isaMask & *v11) + 0x80);
  v14 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  *(_QWORD *)((char *)v11 + v13) = v14;
  *((_BYTE *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0xA0)) = 0;
  *(_DWORD *)((char *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0x88)) = a1;
  *(_DWORD *)((char *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0x90)) = a2;
  *(_DWORD *)((char *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0x70)) = 0;
  *(double *)((char *)v11 + *(_QWORD *)((swift_isaMask & *v11) + 0x98)) = (a3 - a4) * 0.5;
  objc_msgSend(v12, "setLineWidth:", a4);
  v15 = v14;
  objc_msgSend(v15, "setLineWidth:", a4);

  v21.receiver = v11;
  v21.super_class = (Class)sub_100006058(&qword_1000B88C8);
  v16 = objc_msgSendSuper2(&v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v16;
  v19 = objc_msgSend(v17, "clearColor");
  objc_msgSend(v18, "setBackgroundColor:", v19);

  objc_msgSend(*(id *)((char *)v18 + *(_QWORD *)((swift_isaMask & *v18) + 0x80)), "setStrokeEnd:", 0.0);
  sub_100062C50(0.0);

  return v18;
}

void sub_100062710(char a1)
{
  _QWORD *v1;
  int v3;
  int v4;
  uint64_t v5;
  void *v6;
  double v7;
  void *v8;
  NSString v9;
  id v10;
  id v11;
  Class isa;
  Class v13;
  float v14;
  float v15;
  float v16;

  v3 = *((unsigned __int8 *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x88));
  v4 = *((unsigned __int8 *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x90));
  v5 = *(_QWORD *)((swift_isaMask & *v1) + 0x70);
  v6 = *(void **)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x80));
  objc_msgSend(v6, "strokeEnd");
  if (!*((_BYTE *)v1 + v5))
  {
    v7 = 0.0;
    goto LABEL_6;
  }
  if (((*((unsigned __int8 *)v1 + v5) - v3) & 0xFFFFFF00) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (((v4 - v3) & 0xFFFFFF00) != 0)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v7 = (double)(*((_BYTE *)v1 + v5) - v3) / (double)(v4 - v3);
LABEL_6:
  v8 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v8, "setDisableActions:", 1);
  objc_msgSend(v6, "setStrokeEnd:", v7);
  objc_msgSend(v8, "setDisableActions:", 0);
  if ((a1 & 1) != 0)
  {
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v9);

    v11 = v10;
    isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v11, "setFromValue:", isa);

    v13 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v11, "setToValue:", v13);

    objc_msgSend(v11, "setMass:", 2.0);
    objc_msgSend(v11, "setStiffness:", 300.0);
    objc_msgSend(v11, "setDamping:", 50.0);
    objc_msgSend(v11, "setDuration:", 0.8);
    objc_msgSend(v6, "addAnimation:forKey:", v11, 0);

  }
  if (*((_BYTE *)v1 + v5))
    goto LABEL_9;
  objc_msgSend(v6, "opacity");
  if (v16 > 0.5)
  {
    v15 = 0.0;
LABEL_13:
    sub_100062C50(v15);
    return;
  }
  if (*((_BYTE *)v1 + v5))
  {
LABEL_9:
    objc_msgSend(v6, "opacity");
    if (v14 >= 0.5)
      return;
    v15 = 1.0;
    goto LABEL_13;
  }
}

void sub_100062994(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;
  int v8;
  int v9;
  int v10;
  void *v11;
  int v12;
  BOOL v13;
  int v14;
  double v15;
  void *v16;
  NSString v17;
  id v18;
  id v19;
  Class isa;
  Class v21;
  float v22;
  float v23;
  float v24;

  v3 = *(_QWORD *)((swift_isaMask & *v1) + 0x70);
  v4 = *(_DWORD *)((char *)v1 + v3);
  v5 = v4 > 0;
  v6 = *(int *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x88)) < 0;
  if (*(int *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x90)) > 0 && v4 < 0)
    v8 = 0;
  else
    v8 = *(_DWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x90));
  if (v5 && v6)
    v9 = *(_DWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x90));
  else
    v9 = v8;
  if (v5 && v6)
    v10 = 0;
  else
    v10 = *(_DWORD *)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x88));
  v11 = *(void **)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x80));
  objc_msgSend(v11, "strokeEnd");
  v12 = *(_DWORD *)((char *)v1 + v3);
  if ((v12 & 0x80000000) == 0)
  {
    if (!v12)
    {
      v15 = 0.0;
      goto LABEL_23;
    }
    v13 = __OFSUB__(v12, v10);
    v12 -= v10;
    if (v13)
    {
      __break(1u);
      goto LABEL_35;
    }
    v14 = v9 - v10;
    if (!__OFSUB__(v9, v10))
      goto LABEL_21;
    __break(1u);
  }
  v13 = __OFSUB__(v12, v9);
  v12 -= v9;
  if (v13)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v14 = v10 - v9;
  if (__OFSUB__(v10, v9))
  {
LABEL_36:
    __break(1u);
    return;
  }
LABEL_21:
  v15 = (double)v12 / (double)v14;
LABEL_23:
  v16 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v16, "setDisableActions:", 1);
  objc_msgSend(v11, "setStrokeEnd:", v15);
  objc_msgSend(v16, "setDisableActions:", 0);
  if ((a1 & 1) != 0)
  {
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v17);

    v19 = v18;
    isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v19, "setFromValue:", isa);

    v21 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v19, "setToValue:", v21);

    objc_msgSend(v19, "setMass:", 2.0);
    objc_msgSend(v19, "setStiffness:", 300.0);
    objc_msgSend(v19, "setDamping:", 50.0);
    objc_msgSend(v19, "setDuration:", 0.8);
    objc_msgSend(v11, "addAnimation:forKey:", v19, 0);

  }
  if (*(_DWORD *)((char *)v1 + v3))
    goto LABEL_26;
  objc_msgSend(v11, "opacity");
  if (v24 > 0.5)
  {
    v23 = 0.0;
LABEL_30:
    sub_100062C50(v23);
    return;
  }
  if (*(_DWORD *)((char *)v1 + v3))
  {
LABEL_26:
    objc_msgSend(v11, "opacity");
    if (v22 >= 0.5)
      return;
    v23 = 1.0;
    goto LABEL_30;
  }
}

void sub_100062C50(float a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  void *v6;
  void *v7;
  unint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  double v13;
  void *v14;
  NSString v15;
  id v16;
  id v17;
  Class isa;
  Class v19;
  id v20;
  double v21;
  void *v22;
  NSString v23;
  id v24;
  id v25;
  Class v26;
  Class v27;
  uint64_t v28;
  _BYTE v29[48];

  v3 = sub_100006058((uint64_t *)&unk_1000B7590);
  inited = swift_initStackObject(v3, v29);
  *(_OWORD *)(inited + 16) = xmmword_100088C40;
  v5 = swift_isaMask;
  v6 = *(void **)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x80));
  *(_QWORD *)(inited + 32) = v6;
  v7 = *(void **)((char *)v1 + *(_QWORD *)((*v1 & v5) + 0x78));
  *(_QWORD *)(inited + 40) = v7;
  v28 = inited;
  specialized Array._endMutation()(inited);
  v8 = v28 & 0xC000000000000001;
  if ((v28 & 0xC000000000000001) != 0 || *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v9 = (void *)objc_opt_self(CASpringAnimation);
    v10 = v6;
    v11 = v7;
    if (v8)
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v28);
    else
      v12 = *(id *)(v28 + 32);
    v14 = v12;
    *(float *)&v13 = a1;
    objc_msgSend(v12, "setOpacity:", v13);
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v9, "animationWithKeyPath:", v15);

    v17 = v16;
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v17, "setFromValue:", isa);

    v19 = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v17, "setToValue:", v19);

    objc_msgSend(v17, "setCumulative:", 1);
    objc_msgSend(v14, "addAnimation:forKey:", v17, 0);

    if (v8)
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v28);
    else
      v20 = *(id *)(v28 + 40);
    v22 = v20;
    *(float *)&v21 = a1;
    objc_msgSend(v20, "setOpacity:", v21);
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v9, "animationWithKeyPath:", v23);

    v25 = v24;
    v26 = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v25, "setFromValue:", v26);

    v27 = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v25, "setToValue:", v27);

    objc_msgSend(v25, "setCumulative:", 1);
    objc_msgSend(v22, "addAnimation:forKey:", v25, 0);
    swift_bridgeObjectRelease(v28);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100062F80()
{
  uint64_t v0;

  v0 = sub_100006B04(0, &qword_1000B7458, CAFTemperature_ptr);
  return CAFPositioned.layoutKey.getter(v0);
}

void sub_100062FC8()
{
  uint64_t v0;

}

id sub_100062FD8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateZoneServiceButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateZoneServiceButton()
{
  return objc_opt_self(_TtC7Climate24ClimateZoneServiceButton);
}

double sub_1000631B4()
{
  void **v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v1 = sub_100032AFC(*v0);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = sub_100006058(&qword_1000B7460);
  v3 = swift_allocObject(v2, 48, 7);
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_100088D00;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = &off_10009E828;
  return result;
}

char *sub_100063218(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  char *v8;
  char *v9;
  void *v10;
  id v11;
  char *v12;
  void *v13;
  char v16[24];
  objc_super v17;

  v3 = type metadata accessor for ClimateZone(0);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate27ClimateRegularStatusBarView_stepper] = 0;
  sub_100008C1C(a1, (uint64_t)v5);
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_temperatureIndicator] = 0;
  sub_100008C1C((uint64_t)v5, (uint64_t)&v1[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone]);
  v6 = (objc_class *)type metadata accessor for ClimateStatusBarView(0);
  v17.receiver = v1;
  v17.super_class = v6;
  v7 = objc_msgSendSuper2(&v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_10003C604((uint64_t)v5);
  v8 = (char *)v7;
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = &v8[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone];
  swift_beginAccess(&v8[OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone], v16, 0, 0);
  v10 = *(void **)&v9[*(int *)(v3 + 28)];
  v11 = objc_allocWithZone((Class)type metadata accessor for ClimateZoneTargetTemperatureStepper(0));
  v12 = sub_10001C6FC(v10, 0, 0);
  sub_100069C88(v12);
  v13 = *(void **)&v8[OBJC_IVAR____TtC7Climate27ClimateRegularStatusBarView_stepper];
  *(_QWORD *)&v8[OBJC_IVAR____TtC7Climate27ClimateRegularStatusBarView_stepper] = v12;

  sub_10003C604(a1);
  return v8;
}

void sub_100063398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id *v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  uint64_t v16;
  _BYTE v17[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate27ClimateRegularStatusBarView_stepper;
  v3 = *(char **)(v0 + OBJC_IVAR____TtC7Climate27ClimateRegularStatusBarView_stepper);
  if (v3)
  {
    v4 = v0 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone;
    swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone, v17, 0, 0);
    v5 = *(void **)(v4 + *(int *)(type metadata accessor for ClimateZone(0) + 28));
    v6 = (id *)&v3[OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature];
    swift_beginAccess(&v3[OBJC_IVAR____TtC7Climate25ClimateZoneServiceStepper_temperature], &v16, 1, 0);
    v7 = *v6;
    v8 = v3;
    v9 = v5;
    objc_msgSend(v7, "unregisterObserver:", v8);
    v10 = *v6;
    *v6 = v9;
    v11 = v9;

    objc_msgSend(*v6, "registerObserver:", v8);
  }
  else
  {
    v12 = v0 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone;
    swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate20ClimateStatusBarView_climateZone, v17, 0, 0);
    v13 = *(void **)(v12 + *(int *)(type metadata accessor for ClimateZone(0) + 28));
    v14 = objc_allocWithZone((Class)type metadata accessor for ClimateZoneTargetTemperatureStepper(0));
    v15 = sub_10001C6FC(v13, 0, 0);
    sub_100069C88(v15);
    v11 = *(id *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v15;
  }

}

void sub_1000634F8()
{
  uint64_t v0;

}

id sub_100063508()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateRegularStatusBarView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10006354C()
{
  return type metadata accessor for ClimateRegularStatusBarView(0);
}

uint64_t type metadata accessor for ClimateRegularStatusBarView(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9818;
  if (!qword_1000B9818)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateRegularStatusBarView);
  return result;
}

uint64_t sub_100063590(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 168);
}

uint64_t sub_1000635D0()
{
  return sub_100061320();
}

uint64_t sub_1000635F8()
{
  uint64_t v0;
  unsigned __int8 *v1;
  id v2;
  uint64_t result;
  uint64_t v4;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper____lazy_storage___currentValue);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper____lazy_storage___currentValue + 1) != 1)
    return *v1;
  v2 = *(id *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_range);
  CAFRange.minimumValue<A>()(&v4, &type metadata for UInt8, &protocol witness table for UInt8);

  result = v4;
  *v1 = v4;
  v1[1] = 0;
  return result;
}

float sub_100063678()
{
  uint64_t v0;

  return (float)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan), "fanLevel");
}

char *sub_1000636A4(void *a1, unsigned __int8 a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unsigned __int8 v14;
  unsigned __int8 *v15;
  uint64_t v16;
  char v17;
  _BYTE *v18;

  *(_WORD *)&v2[OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper____lazy_storage___currentValue] = 256;
  v5 = OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_powerButton;
  v6 = objc_allocWithZone((Class)type metadata accessor for ClimateStepperPowerButton());
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan] = a1;
  v8 = objc_allocWithZone((Class)type metadata accessor for ClimateFanButton());
  v9 = a1;
  v10 = sub_100061494(v9, a2);
  v11 = OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fanButton;
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fanButton] = v10;

  v12 = ClimateStepper.init(primaryButton:axis:range:)(*(id *)&v7[v11], 0, objc_msgSend(v9, "fanLevelRange"));
  objc_msgSend(v9, "registerObserver:", v12);
  sub_100063824();
  v13 = v12;
  ClimateStepper.updatePresentation()();

  v14 = sub_100064334();
  v15 = (unsigned __int8 *)&v13[OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper____lazy_storage___currentValue];
  *v15 = v14;
  v15[1] = 0;
  v16 = *(_QWORD *)&v13[OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fanButton];
  v17 = sub_1000635F8();
  v18 = (_BYTE *)(v16 + OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue);
  *v18 = v17;
  v18[1] = 0;
  sub_1000611E8();
  sub_100064034();

  return v13;
}

id sub_100063824()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (**v7)();
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;
  char v28[24];

  v1 = *(char **)&v0[OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_powerButton];
  v2 = swift_allocObject(&unk_10009FE10, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate13ClimateButton_action], v28, 1, 0);
  v4 = *v3;
  v5 = v3[1];
  *v3 = (uint64_t)sub_100064A50;
  v3[1] = v2;
  sub_100005118(v4, v5);
  v6 = swift_allocObject(&unk_10009FE10, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v0);
  v7 = (uint64_t (**)())&v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
  *v7 = sub_100064A58;
  v7[1] = (uint64_t (*)())v6;
  sub_100005118(v8, v9);
  objc_msgSend(v0, "addSubview:", v1);
  v10 = (void *)objc_opt_self(NSLayoutConstraint);
  v11 = sub_100006058((uint64_t *)&unk_1000B7590);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100088DF0;
  v13 = objc_msgSend(v1, "leadingAnchor");
  v14 = objc_msgSend(v0, "leadingAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(v1, "trailingAnchor");
  v17 = objc_msgSend(v0, "trailingAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v12 + 40) = v18;
  v19 = objc_msgSend(v1, "topAnchor");
  v20 = objc_msgSend(v0, "topAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v12 + 48) = v21;
  v22 = objc_msgSend(v1, "bottomAnchor");
  v23 = objc_msgSend(v0, "bottomAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v12 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v10, "activateConstraints:", isa);

  return objc_msgSend(v1, "setAlpha:", 0.0);
}

void sub_100063B40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  unsigned int v6;
  void *v7;
  id v8;
  id v9;
  unsigned int v10;
  id v11;
  unsigned int v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan;
    v6 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan), "hasOn");
    v7 = *(void **)&v4[v5];
    if (v6)
    {
      objc_msgSend(v7, "setOn:", 1);
    }
    else if (!objc_msgSend(v7, "fanLevel"))
    {
      v8 = *(id *)&v4[v5];
      v9 = objc_msgSend(v8, "fanLevelRange");
      v10 = objc_msgSend(v9, "minimumValue");

      v11 = objc_msgSend(*(id *)&v4[v5], "fanLevelRange");
      v12 = objc_msgSend(v11, "stepValue");

      if ((((v10 + v12) >> 8) & 1) != 0)
      {
        __break(1u);
        return;
      }
      objc_msgSend(v8, "setFanLevel:", (v10 + v12));

    }
    ClimateStepper.updatePresentation()();

  }
}

uint64_t sub_100063C74(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return 0;
  v3 = (void *)Strong;
  v4 = sub_100061320();

  return v4;
}

void sub_100063CE0()
{
  uint64_t v0;
  void *v1;
  char **v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v0 = sub_100061320() & 0x1A;
  v1 = (void *)objc_opt_self(UIColor);
  v2 = &selRef_systemGreenColor;
  if (v0 != 2)
    v2 = &selRef_systemWhiteColor;
  v3 = objc_msgSend(v1, *v2);
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemWhiteColor");
  v5 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.25);
  v6 = v3;
  sub_100061124(v4, v5, v3, (uint64_t)&_swiftEmptyDictionarySingleton);

}

void sub_100063DB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unsigned int v8;
  id v9;
  unsigned int v10;
  int v11;
  id v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  id v16;
  unsigned int v17;
  uint64_t v18;

  v3 = type metadata accessor for CAFRange.StepDirection(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan;
  v8 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan), "fanLevel");
  v9 = objc_msgSend(*(id *)(v1 + v7), "fanLevelRange");
  v10 = objc_msgSend(v9, "stepValue");

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v11 == enum case for CAFRange.StepDirection.up(_:))
  {
    v12 = *(id *)(v1 + v7);
    v13 = objc_msgSend(v12, "fanLevelRange");
    v14 = objc_msgSend(v13, "maximumValue");

    if ((((v8 + v10) >> 8) & 1) == 0)
    {
      if ((v8 + v10) >= v14)
        v15 = v14;
      else
        v15 = (v8 + v10);
LABEL_11:
      objc_msgSend(v12, "setFanLevel:", v15);

      return;
    }
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  if (v11 == enum case for CAFRange.StepDirection.down(_:))
  {
    v12 = *(id *)(v1 + v7);
    v16 = objc_msgSend(v12, "fanLevelRange");
    v17 = objc_msgSend(v16, "minimumValue");

    if (((v8 - v10) & 0xFFFFFF00) == 0)
    {
      if ((v8 - v10) <= v17)
        v15 = v17;
      else
        v15 = (v8 - v10);
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_100063F94()
{
  objc_class *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)objc_allocWithZone(v0);
  *(_WORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper____lazy_storage___currentValue] = 256;
  v2 = OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_powerButton;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimateStepperPowerButton()), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000038, 0x800000010008C330, "Climate/ClimateFanServiceStepper.swift", 38, 2, 104, 0);
  __break(1u);
}

void sub_100064034()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void **v3;
  void *v4;
  id v5;
  uint64_t v6;
  void **v7;
  void *v8;
  id v9;
  void *v10;
  void **v11;
  void *v12;
  id v13;
  _BYTE v14[24];

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fanButton);
  if ((sub_100061320() & 0x18) != 0)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_powerButton), "setAlpha:", 0.0);
    objc_msgSend(v2, "setAlpha:", 1.0);
    v3 = (void **)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
    swift_beginAccess(v3, v14, 1, 0);
    v4 = *v3;
    *v3 = v2;
    v5 = v2;

  }
  else
  {
    v6 = OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan;
    if ((!objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan), "hasOn")
       || objc_msgSend(*(id *)(v1 + v6), "on"))
      && objc_msgSend(*(id *)(v1 + v6), "fanLevel"))
    {
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_powerButton), "setAlpha:", 0.0);
      objc_msgSend(v2, "setAlpha:", 1.0);
      v7 = (void **)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
      swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v14, 1, 0);
      v8 = *v7;
      *v7 = v2;
      v9 = v2;

      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton), "setAlpha:", 1.0);
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton), "setAlpha:", 1.0);
    }
    else
    {
      v10 = *(void **)(v1 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_powerButton);
      objc_msgSend(v10, "setAlpha:", 1.0);
      v11 = (void **)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
      swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v14, 1, 0);
      v12 = *v11;
      *v11 = v10;
      v13 = v10;

      objc_msgSend(v2, "setAlpha:", 0.0);
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton), "setAlpha:", 0.0);
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton), "setAlpha:", 0.0);
    }
  }
}

void sub_10006425C()
{
  uint64_t v0;

}

id sub_100064298()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateFanServiceStepper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateFanServiceStepper()
{
  return objc_opt_self(_TtC7Climate24ClimateFanServiceStepper);
}

id sub_100064334()
{
  char *v0;
  char *v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  char *v7;
  os_log_type_t v8;
  uint64_t v9;
  id v10;
  unsigned __int8 v11;
  unsigned int v12;
  id v13;
  NSObject *v14;
  char *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  unsigned __int8 v19;
  id v20;
  id v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan;
  v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan], "fanLevel");
  v4 = OBJC_IVAR____TtC7Climate14ClimateStepper_range;
  v5 = *(id *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_range];
  CAFRange.maximumValue<A>()((uint64_t *)((char *)&v25 + 5), &type metadata for UInt8, &protocol witness table for UInt8);

  if (BYTE5(v25) >= v3)
  {
    v12 = objc_msgSend(*(id *)&v1[v2], "fanLevel");
    v13 = *(id *)&v1[v4];
    CAFRange.minimumValue<A>()((uint64_t *)((char *)&v25 + 4), &type metadata for UInt8, &protocol witness table for UInt8);

    if (v12 >= BYTE4(v25))
    {
      return objc_msgSend(*(id *)&v1[v2], "fanLevel");
    }
    else
    {
      if (qword_1000B6FE8 != -1)
        swift_once(&qword_1000B6FE8, sub_10005CB60);
      v14 = qword_1000BC938;
      v15 = v1;
      v16 = static os_log_type_t.default.getter(v15);
      if (os_log_type_enabled(v14, v16))
      {
        v17 = swift_slowAlloc(8, -1);
        *(_DWORD *)v17 = 16777728;
        BYTE2(v25) = objc_msgSend(*(id *)&v1[v2], "fanLevel");
        UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v25 + 2, (char *)&v25 + 3, v17 + 4, v17 + 5);
        *(_WORD *)(v17 + 5) = 256;
        v18 = objc_msgSend(*(id *)&v1[v4], "minimum");
        v19 = objc_msgSend(v18, "unsignedCharValue");

        BYTE1(v25) = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v25 + 1, (char *)&v25 + 2, v17 + 7, v17 + 8);

        _os_log_impl((void *)&_mh_execute_header, v14, v16, "fanLevel value is out of bound. fanLevel: %hhu, min range %hhu", (uint8_t *)v17, 8u);
        swift_slowDealloc(v17, -1, -1);
      }
      else
      {

      }
      v22 = *(id *)&v1[v4];
      CAFRange.minimumValue<A>()((uint64_t *)((char *)&v25 + 3), &type metadata for UInt8, &protocol witness table for UInt8);

      return (id)BYTE3(v25);
    }
  }
  else
  {
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v6 = qword_1000BC938;
    v7 = v1;
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v6, v8))
    {
      v9 = swift_slowAlloc(8, -1);
      *(_DWORD *)v9 = 16777728;
      v24 = objc_msgSend(*(id *)&v1[v2], "fanLevel");
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v9 + 4, v9 + 5);
      *(_WORD *)(v9 + 5) = 256;
      v10 = objc_msgSend(*(id *)&v1[v4], "maximum");
      v11 = objc_msgSend(v10, "unsignedCharValue");

      v23 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v9 + 7, v9 + 8);

      _os_log_impl((void *)&_mh_execute_header, v6, v8, "fanLevel value is out of bound. fanLevel: %hhu, max range %hhu", (uint8_t *)v9, 8u);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {

    }
    v20 = *(id *)&v1[v4];
    CAFRange.maximumValue<A>()(&v25, &type metadata for UInt8, &protocol witness table for UInt8);

    return (id)v25;
  }
}

void sub_1000647E4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fan);
  v2 = sub_100006B04(0, (unint64_t *)&unk_1000B9FD0, CAFFan_ptr);
  v3 = v1;
  CAFPositioned.layoutKey.getter(v2);

}

void sub_10006485C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  unsigned __int8 v4;
  unsigned __int8 *v5;
  char v6;
  _BYTE *v7;
  unsigned __int8 v8;
  unsigned __int8 *v9;
  char v10;
  _BYTE *v11;

  v1 = v0;
  ClimateStepper.updatePresentation()();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fanButton);
  if ((sub_100061320() & 0x18) != 0)
  {
    v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_range), "minimum");
    v4 = objc_msgSend(v3, "unsignedCharValue");

    v5 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper____lazy_storage___currentValue);
    *v5 = v4;
    v5[1] = 0;
    v6 = sub_1000635F8();
    v7 = (_BYTE *)(v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue);
    *v7 = v6;
    v7[1] = 0;
    sub_1000611E8();
  }
  else
  {
    v8 = sub_100064334();
    v9 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper____lazy_storage___currentValue);
    *v9 = v8;
    v9[1] = 0;
    v10 = sub_1000635F8();
    v11 = (_BYTE *)(v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue);
    *v11 = v10;
    v11[1] = 0;
    sub_1000611E8();
    sub_100064034();
  }
  sub_100064034();
}

void sub_10006495C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  unsigned __int8 v4;
  unsigned __int8 *v5;
  char v6;
  _BYTE *v7;

  v1 = v0;
  ClimateStepper.updatePresentation()();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper_fanButton);
  if ((sub_100061320() & 0x18) != 0)
  {
    v3 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_range), "minimum");
    v4 = objc_msgSend(v3, "unsignedCharValue");

  }
  else
  {
    v4 = sub_100064334();
  }
  v5 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Climate24ClimateFanServiceStepper____lazy_storage___currentValue);
  *v5 = v4;
  v5[1] = 0;
  v6 = sub_1000635F8();
  v7 = (_BYTE *)(v2 + OBJC_IVAR____TtC7Climate16ClimateFanButton____lazy_storage___currentValue);
  *v7 = v6;
  v7[1] = 0;
  sub_1000611E8();
  sub_100064034();
  sub_100064034();
}

uint64_t sub_100064A2C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100064A50(uint64_t a1)
{
  uint64_t v1;

  sub_100063B40(a1, v1);
}

uint64_t sub_100064A58()
{
  uint64_t v0;

  return sub_100063C74(v0);
}

void sub_100064A60()
{
  char *v0;
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  int v35;
  int v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Class v64;
  uint64_t v65;
  _QWORD v66[2];
  _QWORD v67[3];
  char v68[24];

  v1 = v0;
  v2 = sub_100006058(&qword_1000B7FD0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CAUBaselineAnchor(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)objc_opt_self(NSLayoutConstraint);
  v11 = (uint64_t *)&v0[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButtonConstraints];
  swift_beginAccess(&v0[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButtonConstraints], v68, 1, 0);
  v12 = *v11;
  v13 = sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v12);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v10, "deactivateConstraints:", isa);

  CAUVehicleLayoutInfo.baselineAnchor.getter();
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  v66[1] = v13;
  if (v15 == 1)
  {
    sub_100008B88((uint64_t)v5, &qword_1000B7FD0);
    v16 = sub_100006058((uint64_t *)&unk_1000B7590);
    v17 = swift_allocObject(v16, 48, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100088C40;
    v18 = *(void **)&v1[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButton];
    v19 = objc_msgSend(v18, "centerYAnchor");
    v20 = objc_msgSend(v1, "centerYAnchor");
    v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

    *(_QWORD *)(v17 + 32) = v21;
    v22 = objc_msgSend(v18, "centerXAnchor");
    v23 = objc_msgSend(v1, "centerXAnchor");
    v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

    *(_QWORD *)(v17 + 40) = v24;
    v67[0] = v17;
    specialized Array._endMutation()(v25);
    v26 = *v11;
    *v11 = v67[0];
    swift_bridgeObjectRelease(v26);
    goto LABEL_6;
  }
  v66[0] = v10;
  v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  v28 = CAUBaselineAnchor.x.getter(v27);
  v29 = v28;
  v30 = CAUVehicleLayoutInfo.x.getter(v28);
  v31 = v29 - v30;
  if (__OFSUB__(v29, v30))
  {
    __break(1u);
    goto LABEL_20;
  }
  v32 = OBJC_IVAR____TtC7Climate23ClimateZonePositionView_scale;
  v33 = *(double *)&v1[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_scale];
  v34 = CAUBaselineAnchor.y.getter();
  v35 = v34;
  v36 = CAUVehicleLayoutInfo.y.getter(v34);
  if (__OFSUB__(v35, v36))
  {
LABEL_20:
    __break(1u);
    return;
  }
  v37 = v33 * (double)v31 + -32.5;
  v38 = *(double *)&v1[v32] * (double)(v35 - v36) + -32.5;
  v39 = sub_100006058((uint64_t *)&unk_1000B7590);
  v40 = swift_allocObject(v39, 48, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100088C40;
  v18 = *(void **)&v1[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButton];
  v41 = objc_msgSend(v18, "leftAnchor");
  v42 = objc_msgSend(v1, "leftAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, v37);

  *(_QWORD *)(v40 + 32) = v43;
  v44 = objc_msgSend(v18, "topAnchor");
  v45 = objc_msgSend(v1, "topAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, v38);

  *(_QWORD *)(v40 + 40) = v46;
  v67[0] = v40;
  specialized Array._endMutation()(v47);
  v48 = *v11;
  *v11 = v67[0];
  swift_bridgeObjectRelease(v48);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v10 = (void *)v66[0];
LABEL_6:
  v49 = objc_msgSend(v18, "widthAnchor");
  v50 = objc_msgSend(v49, "constraintEqualToConstant:", 65.0);

  v51 = objc_msgSend(v18, "heightAnchor");
  v52 = objc_msgSend(v51, "constraintEqualToConstant:", 65.0);

  swift_beginAccess(v11, v67, 33, 0);
  v53 = *v11;
  if (!((unint64_t)*v11 >> 62))
  {
    v54 = v53 & 0xFFFFFFFFFFFFF8;
    v55 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
    v56 = v55 + 2;
    if (!__OFADD__(v55, 2))
      goto LABEL_8;
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v53 < 0)
    v65 = *v11;
  else
    v65 = v53 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v11);
  v55 = _CocoaArrayWrapper.endIndex.getter(v65);
  swift_bridgeObjectRelease(v53);
  v56 = v55 + 2;
  if (__OFADD__(v55, 2))
    goto LABEL_17;
LABEL_8:
  v57 = sub_1000761FC(v56, 1);
  specialized Array._endMutation()(v57);
  v50 = v50;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
  v55 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v54 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v55 >= v54 >> 1)
LABEL_18:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
  v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v50);
  specialized Array._endMutation()(v58);
  v59 = v52;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
  v61 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v60 = *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v61 >= v60 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1);
  v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v59);
  specialized Array._endMutation()(v62);
  swift_endAccess(v67);

  v63 = *v11;
  swift_bridgeObjectRetain(*v11);
  v64 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v63);
  objc_msgSend(v10, "activateConstraints:", v64);

}

uint64_t sub_10006508C()
{
  return sub_1000650CC(&OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___yConstraint, (SEL *)&selRef_topAnchor, (int (*)(void))&CAUVehicleLayoutInfo.y.getter, 117);
}

uint64_t sub_1000650AC()
{
  return sub_1000650CC(&OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___xConstraint, (SEL *)&selRef_leftAnchor, (int (*)(void))&CAUVehicleLayoutInfo.x.getter, 125);
}

uint64_t sub_1000650CC(uint64_t *a1, SEL *a2, int (*a3)(void), uint64_t a4)
{
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t result;

  v5 = *a1;
  v6 = *(void **)&v4[*a1];
  if (v6)
  {
    v7 = *(id *)&v4[*a1];
LABEL_5:
    v18 = v6;
    return (uint64_t)v7;
  }
  v11 = v4;
  v12 = objc_msgSend(v4, "superview");
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v4, *a2);
    v15 = objc_msgSend(v13, *a2);
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, *(double *)&v4[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_scale] * (double)a3());

    v17 = *(void **)&v11[v5];
    *(_QWORD *)&v11[v5] = v16;
    v7 = v16;

    v6 = 0;
    goto LABEL_5;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x7265707573206F6ELL, 0xEC00000077656956, "Climate/ClimateZonePositionView.swift", 37, 2, a4, 0);
  __break(1u);
  return result;
}

id sub_100065234()
{
  return sub_10006526C(&OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___heightConstraint, (SEL *)&selRef_heightAnchor, (int (*)(void))&CAUVehicleLayoutInfo.height.getter);
}

id sub_100065250()
{
  return sub_10006526C(&OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___widthConstraint, (SEL *)&selRef_widthAnchor, (int (*)(void))&CAUVehicleLayoutInfo.width.getter);
}

id sub_10006526C(uint64_t *a1, SEL *a2, int (*a3)(void))
{
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v4 = *a1;
  v5 = *(void **)&v3[*a1];
  if (v5)
  {
    v6 = *(id *)&v3[*a1];
  }
  else
  {
    v8 = v3;
    v9 = objc_msgSend(v3, *a2);
    v10 = objc_msgSend(v9, "constraintEqualToConstant:", *(double *)&v3[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_scale] * (double)a3());

    v11 = *(void **)&v8[v4];
    *(_QWORD *)&v8[v4] = v10;
    v6 = v10;

    v5 = 0;
  }
  v12 = v5;
  return v6;
}

void sub_10006532C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  char v22[24];

  v3 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v22[-v7 - 8];
  a2 += 16;
  swift_beginAccess(a2, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v10 = (char *)Strong;
    v11 = OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButton;
    v12 = *(_QWORD *)(Strong + OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButton);
    v13 = *(_BYTE *)(v12 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn);
    v14 = *(void **)(v12 + OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_temperature);
    objc_msgSend(v14, "targetTemperatureRestricted");
    objc_msgSend(v14, "targetTemperatureInvalid");
    objc_msgSend(v14, "targetTemperatureDisabled");
    if ((v13 & 1) == 0)
    {
      v15 = *(void **)&v10[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeZoneTracker];
      sub_100008C1C((uint64_t)&v10[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_zone], (uint64_t)v8);
      v16 = type metadata accessor for ClimateZone(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
      KeyPath = swift_getKeyPath(&unk_10008AF20);
      v18 = swift_getKeyPath(&unk_10008AF48);
      sub_10000AA50((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1000B7C40);
      static Published.subscript.setter(v5, v15, KeyPath, v18);
      sub_100008B88((uint64_t)v8, (uint64_t *)&unk_1000B7C40);
      v19 = *(_BYTE **)&v10[v11];
      v19[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn] = 1;
      v20 = v19;
      sub_10000BE7C();

      v10 = v20;
    }

  }
}

void sub_10006550C(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  int v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v36)(uint64_t, uint64_t, uint64_t);
  _BYTE *v37;
  uint64_t v38;
  uint64_t (*v39)(_BYTE *, uint64_t, uint64_t);
  int v40;
  char *v41;
  _BYTE *v42;
  uint64_t v43;
  int v44;
  void *v45;
  char *v46;
  void (*v47)(_BYTE *, uint64_t, uint64_t);
  uint64_t v48;
  _BYTE *v49;
  unint64_t v50;
  void (*v51)(_BYTE *, uint64_t);
  _BYTE *v52;
  void (*v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  void (*v65)(_BYTE *, uint64_t);
  _BYTE *v66;
  uint64_t v67;
  char v68;
  void *v69;
  char *v70;
  _BYTE v71[4];
  int v72;
  uint64_t v73;
  _BYTE *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v76)(_BYTE *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t Strong;
  _BYTE *v85;
  uint64_t v86;
  char v87[24];

  v85 = a3;
  v5 = type metadata accessor for CAUVehicleLayoutKey(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v71[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = sub_100006058((uint64_t *)&unk_1000B7C30);
  __chkstk_darwin(v86);
  v82 = &v71[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v71[-v11];
  v13 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v13);
  v83 = &v71[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v17 = &v71[-v16];
  v18 = sub_100006058(&qword_1000B8D00);
  __chkstk_darwin(v18);
  v79 = &v71[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v80 = &v71[-v21];
  __chkstk_darwin(v22);
  v81 = &v71[-v23];
  __chkstk_darwin(v24);
  v26 = &v71[-v25];
  __chkstk_darwin(v27);
  v29 = &v71[-v28];
  __chkstk_darwin(v30);
  v32 = &v71[-v31];
  a2 += 16;
  swift_beginAccess(a2, v87, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    sub_10000AA50(a1, (uint64_t)v17, (uint64_t *)&unk_1000B7C40);
    v33 = type metadata accessor for ClimateZone(0);
    v76 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48);
    v34 = v76(v17, 1, v33);
    v74 = v8;
    v77 = v33;
    v78 = a1;
    if (v34 == 1)
    {
      sub_100008B88((uint64_t)v17, (uint64_t *)&unk_1000B7C40);
      v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v35((uint64_t)v32, 1, 1, v5);
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    }
    else
    {
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v36((uint64_t)v32, (uint64_t)v17, v5);
      sub_10003C604((uint64_t)v17);
      v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v35((uint64_t)v32, 0, 1, v5);
    }
    v37 = v85;
    v75 = v36;
    v36((uint64_t)v29, (uint64_t)v85, v5);
    v35((uint64_t)v29, 0, 1, v5);
    v38 = (uint64_t)&v12[*(int *)(v86 + 48)];
    sub_10000AA50((uint64_t)v32, (uint64_t)v12, &qword_1000B8D00);
    sub_10000AA50((uint64_t)v29, v38, &qword_1000B8D00);
    v39 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
    v40 = v39(v12, 1, v5);
    v73 = v6;
    if (v40 == 1)
    {
      sub_100008B88((uint64_t)v29, &qword_1000B8D00);
      sub_100008B88((uint64_t)v32, &qword_1000B8D00);
      if (v39((_BYTE *)v38, 1, v5) == 1)
      {
        sub_100008B88((uint64_t)v12, &qword_1000B8D00);
        v41 = (char *)Strong;
        goto LABEL_14;
      }
    }
    else
    {
      sub_10000AA50((uint64_t)v12, (uint64_t)v26, &qword_1000B8D00);
      if (v39((_BYTE *)v38, 1, v5) != 1)
      {
        v47 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32);
        v48 = v6;
        v49 = v74;
        v47(v74, v38, v5);
        v50 = sub_100006B3C();
        v72 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v49, v5, v50);
        v51 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
        v37 = v85;
        v51(v49, v5);
        sub_100008B88((uint64_t)v29, &qword_1000B8D00);
        sub_100008B88((uint64_t)v32, &qword_1000B8D00);
        v51(v26, v5);
        sub_100008B88((uint64_t)v12, &qword_1000B8D00);
        v41 = (char *)Strong;
        if ((v72 & 1) != 0)
          goto LABEL_14;
        goto LABEL_11;
      }
      sub_100008B88((uint64_t)v29, &qword_1000B8D00);
      sub_100008B88((uint64_t)v32, &qword_1000B8D00);
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v26, v5);
    }
    sub_100008B88((uint64_t)v12, (uint64_t *)&unk_1000B7C30);
    v41 = (char *)Strong;
LABEL_11:
    v42 = *(_BYTE **)&v41[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButton];
    v43 = OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn;
    v44 = v42[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn];
    v45 = *(void **)&v42[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_temperature];
    objc_msgSend(v45, "targetTemperatureRestricted");
    objc_msgSend(v45, "targetTemperatureInvalid");
    objc_msgSend(v45, "targetTemperatureDisabled");
    if (v44 == 1)
    {
      v42[v43] = 0;
      v46 = v42;
LABEL_26:
      v70 = v46;
      sub_10000BE7C();

      v41 = v70;
      goto LABEL_27;
    }
LABEL_14:
    v52 = v83;
    sub_10000AA50(v78, (uint64_t)v83, (uint64_t *)&unk_1000B7C40);
    v53 = v35;
    if (v76(v52, 1, v77) == 1)
    {
      sub_100008B88((uint64_t)v52, (uint64_t *)&unk_1000B7C40);
      v54 = 1;
      v55 = (uint64_t)v81;
      v56 = (uint64_t)v82;
      v57 = (uint64_t)v80;
      v58 = v75;
    }
    else
    {
      v55 = (uint64_t)v81;
      v58 = v75;
      v75((uint64_t)v81, (uint64_t)v52, v5);
      sub_10003C604((uint64_t)v52);
      v54 = 0;
      v56 = (uint64_t)v82;
      v57 = (uint64_t)v80;
    }
    v53(v55, v54, 1, v5);
    v58(v57, (uint64_t)v37, v5);
    v53(v57, 0, 1, v5);
    v59 = v56 + *(int *)(v86 + 48);
    sub_10000AA50(v55, v56, &qword_1000B8D00);
    sub_10000AA50(v57, v59, &qword_1000B8D00);
    if (v39((_BYTE *)v56, 1, v5) == 1)
    {
      sub_100008B88(v57, &qword_1000B8D00);
      sub_100008B88(v55, &qword_1000B8D00);
      if (v39((_BYTE *)v59, 1, v5) == 1)
      {
        sub_100008B88(v56, &qword_1000B8D00);
LABEL_24:
        v66 = *(_BYTE **)&v41[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButton];
        v67 = OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn;
        v68 = v66[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_isOn];
        v69 = *(void **)&v66[OBJC_IVAR____TtC7Climate43ClimateTargetTemperatureZoneSelectionButton_temperature];
        objc_msgSend(v69, "targetTemperatureRestricted");
        objc_msgSend(v69, "targetTemperatureInvalid");
        objc_msgSend(v69, "targetTemperatureDisabled");
        if ((v68 & 1) == 0)
        {
          v66[v67] = 1;
          v46 = v66;
          goto LABEL_26;
        }
LABEL_27:

        return;
      }
    }
    else
    {
      v60 = v79;
      sub_10000AA50(v56, (uint64_t)v79, &qword_1000B8D00);
      if (v39((_BYTE *)v59, 1, v5) != 1)
      {
        v62 = v73;
        v61 = v74;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v73 + 32))(v74, v59, v5);
        v63 = sub_100006B3C();
        v64 = dispatch thunk of static Equatable.== infix(_:_:)(v60, v61, v5, v63);
        v65 = *(void (**)(_BYTE *, uint64_t))(v62 + 8);
        v65(v61, v5);
        sub_100008B88(v57, &qword_1000B8D00);
        sub_100008B88(v55, &qword_1000B8D00);
        v65(v60, v5);
        sub_100008B88(v56, &qword_1000B8D00);
        if ((v64 & 1) == 0)
          goto LABEL_27;
        goto LABEL_24;
      }
      sub_100008B88(v57, &qword_1000B8D00);
      sub_100008B88(v55, &qword_1000B8D00);
      (*(void (**)(_BYTE *, uint64_t))(v73 + 8))(v60, v5);
    }
    sub_100008B88(v56, (uint64_t *)&unk_1000B7C30);
    goto LABEL_27;
  }
}

void sub_100065D58()
{
  uint64_t v0;
  id v1;
  int v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;

  v1 = sub_100065234();
  v2 = CAUVehicleLayoutInfo.height.getter();
  v3 = OBJC_IVAR____TtC7Climate23ClimateZonePositionView_scale;
  objc_msgSend(v1, "setConstant:", *(double *)(v0 + OBJC_IVAR____TtC7Climate23ClimateZonePositionView_scale) * (double)v2);

  v4 = sub_100065250();
  objc_msgSend(v4, "setConstant:", *(double *)(v0 + v3) * (double)(int)CAUVehicleLayoutInfo.width.getter());

  v5 = (void *)sub_10006508C();
  objc_msgSend(v5, "setConstant:", *(double *)(v0 + v3) * (double)(int)CAUVehicleLayoutInfo.y.getter(v5));

  v6 = (void *)sub_1000650AC();
  objc_msgSend(v6, "setConstant:", *(double *)(v0 + v3) * (double)(int)CAUVehicleLayoutInfo.x.getter(v6));

  sub_100064A60();
}

id sub_100065E84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateZonePositionView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100065F88()
{
  return type metadata accessor for ClimateZonePositionView(0);
}

uint64_t type metadata accessor for ClimateZonePositionView(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B98E0;
  if (!qword_1000B98E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateZonePositionView);
  return result;
}

uint64_t sub_100065FCC(uint64_t a1)
{
  uint64_t result;
  __n128 v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[11];

  result = type metadata accessor for ClimateZone(319);
  if (v4 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(result - 8) + 64;
    v6[1] = &unk_10008AEA8;
    result = type metadata accessor for CAUVehicleLayoutInfo(319, v3);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(result - 8) + 64;
      v6[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[6] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[7] = &unk_10008AEC0;
      v6[8] = &unk_10008AEC0;
      v6[9] = &unk_10008AEC0;
      v6[10] = &unk_10008AEC0;
      result = swift_updateClassMetadata2(a1, 256, 11, v6, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_100066098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  char *v23;
  char *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  int v32;
  void *v33;
  _QWORD *v34;
  id v35;
  objc_class *v36;
  char *v37;
  id v38;
  double v39;
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t KeyPath;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char *v59;
  _BOOL8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86[3];
  char v87[24];
  objc_super v88;

  v85 = a4;
  v8 = type metadata accessor for ClimateZone(0);
  v80 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v81 = v9;
  v82 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100006058((uint64_t *)&unk_1000B7B60);
  __chkstk_darwin(v10);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100006058(&qword_1000B9290);
  v84 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006058(&qword_1000B92F8);
  v75 = *(_QWORD *)(v16 - 8);
  v76 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100006058(&qword_1000B9300);
  v78 = *(_QWORD *)(v19 - 8);
  v79 = v19;
  __chkstk_darwin(v19);
  v77 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v4;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v22 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v22 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_cancellables] = v22;
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButtonConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_scale] = 0x3FF0000000000000;
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___yConstraint] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___xConstraint] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___heightConstraint] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___widthConstraint] = 0;
  sub_100008C1C(a1, (uint64_t)&v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_zone]);
  v23 = &v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeZoneTracker];
  *(_QWORD *)v23 = a2;
  *((_QWORD *)v23 + 1) = a3;
  v24 = &v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_layoutInfo];
  v26 = type metadata accessor for CAUVehicleLayoutInfo(0, v25);
  v73 = *(_QWORD *)(v26 - 8);
  v74 = v26;
  (*(void (**)(char *, uint64_t))(v73 + 16))(v24, v85);
  v27 = *(int *)(v8 + 28);
  v83 = a1;
  v28 = *(void **)(a1 + v27);
  v29 = objc_allocWithZone((Class)type metadata accessor for ClimateTargetTemperatureZoneSelectionButton());
  swift_unknownObjectRetain(a2);
  v30 = sub_10000AFF0(v28);
  v31 = OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButton;
  *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButton] = v30;
  v32 = *((unsigned __int8 *)v30 + OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial);
  *((_BYTE *)v30 + OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial) = 1;
  if (v32 != 1)
  {
    v33 = *(void **)((char *)v30 + OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView);
    v34 = v30;
    objc_msgSend(v33, "removeFromSuperview");
    sub_10000BC70();

  }
  v35 = *(id *)&v21[v31];
  objc_msgSend(v35, "_setContinuousCornerRadius:", 32.5);

  v36 = (objc_class *)type metadata accessor for ClimateZonePositionView(0);
  v88.receiver = v21;
  v88.super_class = v36;
  v37 = (char *)objc_msgSendSuper2(&v88, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v38 = objc_msgSend(v37, "layer");
  LODWORD(v39) = 0.5;
  objc_msgSend(v38, "setShadowOpacity:", v39);

  v40 = objc_msgSend(v37, "layer");
  objc_msgSend(v40, "setShadowRadius:", 10.0);

  v41 = *(char **)&v37[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButton];
  objc_msgSend(v41, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v37, "addSubview:", v41);
  v42 = swift_allocObject(&unk_10009FE70, 24, 7);
  swift_unknownObjectWeakInit(v42 + 16, v37);
  v43 = (uint64_t *)&v41[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(v43, v87, 1, 0);
  v44 = *v43;
  v45 = v43[1];
  *v43 = (uint64_t)sub_100066954;
  v43[1] = v42;
  sub_100005118(v44, v45);
  swift_beginAccess(a2 + OBJC_IVAR____TtC7Climate18ClimateCoordinator__activeZone, v86, 33, 0);
  v46 = sub_100006058((uint64_t *)&unk_1000B83D0);
  Published.projectedValue.getter(v46);
  swift_endAccess(v86);
  v86[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v47 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v12, 1, 1, v47);
  v48 = sub_100006B04(0, (unint64_t *)&unk_1000B7B80, NSRunLoop_ptr);
  v49 = sub_10000AA10(&qword_1000B92A8, &qword_1000B9290, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v50 = sub_10000A98C();
  Publisher.receive<A>(on:options:)(v86, v12, v13, v48, v49, v50);
  sub_100008B88((uint64_t)v12, (uint64_t *)&unk_1000B7B60);

  (*(void (**)(char *, uint64_t))(v84 + 8))(v15, v13);
  v51 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v52 = objc_msgSend(v51, "delegate");

  if (v52)
  {
    v53 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v52, v53, 0, 0, 0);
    v54 = sub_10006B490();
    swift_unknownObjectRelease(v52);
    KeyPath = swift_getKeyPath(&unk_10008AED8);
    v56 = swift_getKeyPath(&unk_10008AF00);
    static Published.subscript.getter(v54, KeyPath, v56);

    swift_release(KeyPath);
    swift_release(v56);
    v57 = LOBYTE(v86[0]) == 0;
    v58 = sub_10000AA10(&qword_1000B9308, &qword_1000B92F8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v59 = v77;
    v60 = v57;
    v61 = v76;
    Publisher.dropFirst(_:)(v60, v76, v58);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v18, v61);
    v62 = swift_allocObject(&unk_10009FE70, 24, 7);
    swift_unknownObjectWeakInit(v62 + 16, v37);
    v64 = v82;
    v63 = v83;
    sub_100008C1C(v83, v82);
    v65 = *(unsigned __int8 *)(v80 + 80);
    v66 = (v65 + 24) & ~v65;
    v67 = swift_allocObject(&unk_10009FE98, v66 + v81, v65 | 7);
    *(_QWORD *)(v67 + 16) = v62;
    sub_10000AB1C(v64, v67 + v66);
    v68 = sub_10000AA10(&qword_1000B9310, &qword_1000B9300, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    v69 = v79;
    v70 = Publisher<>.sink(receiveValue:)(sub_100066A48, v67, v79, v68);
    v71 = swift_release(v67);
    (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v59, v69, v71);
    v72 = &v37[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_cancellables];
    swift_beginAccess(&v37[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_cancellables], v86, 33, 0);
    AnyCancellable.store(in:)(v72);
    swift_endAccess(v86);
    swift_release(v70);

    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v85, v74);
    sub_10003C604(v63);
  }
  else
  {
    __break(1u);
  }
}

void sub_100066840()
{
  char *v0;
  void *v1;

  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v1 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v1 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_cancellables] = v1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_activeButtonConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate23ClimateZonePositionView_scale] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___yConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___xConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___heightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate23ClimateZonePositionView____lazy_storage___widthConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BA30, "Climate/ClimateZonePositionView.swift", 37, 2, 71, 0);
  __break(1u);
}

uint64_t sub_100066930()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100066954(uint64_t a1)
{
  uint64_t v1;

  sub_10006532C(a1, v1);
}

uint64_t sub_100066964()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for ClimateZone(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;
  v8 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[5]));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[6]));

  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[9]));
  return swift_deallocObject(v0, v5, v6);
}

void sub_100066A48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClimateZone(0) - 8) + 80);
  sub_10006550C(a1, *(_QWORD *)(v1 + 16), (_BYTE *)(v1 + ((v3 + 24) & ~v3)));
}

uint64_t sub_100066A90()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  char v16;
  char v17;

  v1 = v0;
  if (((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))() & 0x1B) == 1)
    v2 = &OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor;
  else
    v2 = &OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor;
  v3 = (char *)v0 + *v2;
  v5 = (void *)*((_QWORD *)v3 + 1);
  v4 = *((_QWORD *)v3 + 2);
  v6 = *(id *)v3;
  v7 = v5;
  swift_bridgeObjectRetain(v4);
  v8 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v10 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v11 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  *v8 = v6;
  v8[1] = v7;
  v8[2] = v4;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v12 = v6;
  v13 = v7;
  swift_bridgeObjectRetain_n(v4, 2);
  v14 = v12;
  v15 = v13;
  if ((static NSObject.== infix(_:_:)(v14, v9) & 1) != 0 && (static NSObject.== infix(_:_:)(v15, v10) & 1) != 0)
  {
    sub_10005B490(v4, v11);
    v17 = v16;
    swift_bridgeObjectRelease(v4);

    if ((v17 & 1) != 0)
      goto LABEL_10;
  }
  else
  {
    swift_bridgeObjectRelease(v4);

  }
  (*(void (**)(void))((swift_isaMask & *v1) + 0x230))();
LABEL_10:

  swift_bridgeObjectRelease(v11);
  return swift_bridgeObjectRelease(v4);
}

id sub_100066C24()
{
  _QWORD *v0;
  char v1;
  id result;
  uint64_t v3;

  ClimateButton.refreshColorConfig()();
  v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))();
  if ((v1 & 2) != 0
    || (v1 & 0x19) != 1
    || (*((_BYTE *)v0 + OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial) & 1) != 0)
  {
    result = *(id *)((char *)v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_highlightedBackgroundView);
    if (!result)
      return result;
    v3 = 1;
  }
  else
  {
    result = *(id *)((char *)v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_highlightedBackgroundView);
    if (!result)
      return result;
    v3 = 0;
  }
  return objc_msgSend(result, "setHidden:", v3);
}

uint64_t sub_100066CB8(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  char v16;
  char v17;

  v4 = v3;
  v8 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor);
  v9 = *(void **)((char *)v3 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor);
  v10 = *(void **)((char *)v3 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8);
  v11 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16);
  *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v12 = a1;
  v13 = a2;
  swift_bridgeObjectRetain_n(a3, 2);
  v14 = v12;
  v15 = v13;
  if ((static NSObject.== infix(_:_:)(v14) & 1) != 0 && (static NSObject.== infix(_:_:)(v15) & 1) != 0)
  {
    sub_10005B490(a3, v11);
    v17 = v16;
    swift_bridgeObjectRelease(a3);

    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease(a3);

  }
  (*(void (**)(void))((swift_isaMask & *v4) + 0x228))();
LABEL_7:

  swift_bridgeObjectRelease(v11);
  return swift_bridgeObjectRelease(a3);
}

char *sub_100066DF8()
{
  void *v0;
  void *v1;
  char *v2;
  char *result;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  char *v20;
  char *v21;
  void *v22;
  void *v23;
  char *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  Class isa;
  objc_super v44;

  v1 = (void *)objc_opt_self(MTVisualStylingProvider);
  v2 = v0;
  result = (char *)objc_msgSend(v1, "_visualStylingProviderForRecipe:andCategory:", 4, 2);
  if (result)
  {
    v4 = result;
    v5 = OBJC_IVAR____TtC7Climate15ClimateOnButton_highlightedBackgroundView;
    v6 = objc_msgSend(result, "newAutomaticallyUpdatingViewWithStyle:", 4);

    *(_QWORD *)&v2[v5] = v6;
    v7 = &v2[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    if (qword_1000B6FD0 != -1)
      swift_once(&qword_1000B6FD0, sub_1000475EC);
    v8 = (void *)qword_1000BC8E0;
    v9 = *(void **)algn_1000BC8E8;
    v10 = qword_1000BC8F0;
    *(_QWORD *)v7 = qword_1000BC8E0;
    *((_QWORD *)v7 + 1) = v9;
    *((_QWORD *)v7 + 2) = v10;
    v11 = &v2[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
    v12 = qword_1000B6FC8;
    v13 = v8;
    v14 = v9;
    swift_bridgeObjectRetain(v10);
    if (v12 != -1)
      swift_once(&qword_1000B6FC8, sub_1000475D0);
    v15 = (void *)qword_1000BC8C8;
    v16 = (void *)qword_1000BC8D0;
    v17 = qword_1000BC8D8;
    *(_QWORD *)v11 = qword_1000BC8C8;
    *((_QWORD *)v11 + 1) = v16;
    *((_QWORD *)v11 + 2) = v17;
    v18 = v15;
    v19 = v16;
    swift_bridgeObjectRetain(v17);

    v44.receiver = v2;
    v44.super_class = (Class)type metadata accessor for ClimateOnButton();
    v20 = (char *)objc_msgSendSuper2(&v44, "init");
    v21 = v20;
    v22 = *(void **)&v20[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
    if (v22)
    {
      v23 = *(void **)&v20[OBJC_IVAR____TtC7Climate15ClimateOnButton_highlightedBackgroundView];
      if (v23)
      {
        v24 = v20;
        v25 = v22;
        v26 = v23;
        objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        objc_msgSend(v24, "insertSubview:aboveSubview:", v26, v25);
        v27 = (void *)objc_opt_self(NSLayoutConstraint);
        v28 = sub_100006058((uint64_t *)&unk_1000B7590);
        v29 = swift_allocObject(v28, 64, 7);
        *(_OWORD *)(v29 + 16) = xmmword_100088DF0;
        v30 = objc_msgSend(v26, "topAnchor");
        v31 = objc_msgSend(v24, "topAnchor");
        v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

        *(_QWORD *)(v29 + 32) = v32;
        v33 = objc_msgSend(v26, "bottomAnchor");
        v34 = objc_msgSend(v24, "bottomAnchor");
        v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

        *(_QWORD *)(v29 + 40) = v35;
        v36 = objc_msgSend(v26, "leadingAnchor");
        v37 = objc_msgSend(v24, "leadingAnchor");
        v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

        *(_QWORD *)(v29 + 48) = v38;
        v39 = objc_msgSend(v26, "trailingAnchor");
        v40 = objc_msgSend(v24, "trailingAnchor");
        v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

        *(_QWORD *)(v29 + 56) = v41;
        specialized Array._endMutation()(v42);
        sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v29);
        objc_msgSend(v27, "activateConstraints:", isa);

      }
    }
    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100067210()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16));

  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8);
  v4 = *(id *)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16));

}

id sub_10006728C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateOnButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateOnButton()
{
  return objc_opt_self(_TtC7Climate15ClimateOnButton);
}

void *sub_10006735C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;

  v1 = v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = v2;
  v6 = v3;
  swift_bridgeObjectRetain(v4);
  return v2;
}

void sub_1000673B0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13[24];

  v1 = v0;
  v2 = type metadata accessor for ClimateZone(0);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = OBJC_IVAR____TtC7Climate19ClimateZoneControls_zoneViews;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Climate19ClimateZoneControls_zoneViews], "removeFromSuperview", v3);
  v7 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimateGrid()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = *(void **)&v1[v6];
  *(_QWORD *)&v1[v6] = v7;

  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v6]);
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC7Climate19ClimateZoneControls_zone];
  swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate19ClimateZoneControls_zone], v13, 0, 0);
  sub_100008C1C(v9, (uint64_t)v5);
  sub_1000403F8();
  v11 = v10;
  sub_10003C604((uint64_t)v5);
  sub_1000674C4(v11);
  swift_bridgeObjectRelease(v11);
  sub_1000683DC();
}

void sub_1000674C4(uint64_t a1)
{
  unint64_t j;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unsigned __int8 *v7;
  int v8;
  _UNKNOWN **v9;
  id v10;
  id v11;
  unsigned __int8 *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t ObjectType;
  unsigned __int8 (*v23)(uint64_t, _QWORD);
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t k;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t i;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  uint64_t KeyPath;
  uint64_t v81;
  double v82;
  id v83;
  id v84;
  uint64_t v85;
  _QWORD *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  __int128 v96;
  unint64_t v97;
  uint64_t v98[3];
  __int128 v99;
  _QWORD v100[3];

  v99 = xmmword_100088DE0;
  v3 = (void *)objc_opt_self(UIApplication);
  v4 = objc_msgSend(v3, "sharedApplication");
  v5 = objc_msgSend(v4, "delegate");

  if (!v5)
    goto LABEL_111;
  v6 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v5, v6, 0, 0, 0);
  v7 = (unsigned __int8 *)sub_10006B490();
  swift_unknownObjectRelease(v5);
  v8 = v7[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

  if (v8)
    v9 = &off_10009D898;
  else
    v9 = &off_10009D870;
  v100[0] = v9;
  v90 = v3;
  v10 = objc_msgSend(v3, "sharedApplication", swift_bridgeObjectRetain(v9).n128_f64[0]);
  v11 = objc_msgSend(v10, "delegate");

  if (!v11)
    goto LABEL_112;
  v88 = v6;
  swift_dynamicCastClassUnconditional(v11, v6, 0, 0, 0);
  v12 = (unsigned __int8 *)sub_10006B490();
  swift_unknownObjectRelease(v11);
  v13 = v12[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar];

  v14 = 0;
  v15 = 0;
  v16 = &off_10009D8C0;
  v17 = _swiftEmptyArrayStorage;
  if ((_DWORD)v13)
    v16 = _swiftEmptyArrayStorage;
  v100[1] = v16;
  v18 = _swiftEmptyArrayStorage;
  while (1)
  {
    v95 = v14;
    v19 = v100[v15];
    v93 = *(_QWORD *)(v19 + 16);
    if (v93)
      break;
LABEL_10:
    v14 = 1;
    v15 = 1;
    if ((v95 & 1) != 0)
    {
      v33 = sub_100006058(&qword_1000B9970);
      swift_arrayDestroy(v100, 2, v33);
      v34 = objc_msgSend(v90, "sharedApplication");
      v35 = objc_msgSend(v34, "delegate");

      if (v35)
      {
        swift_dynamicCastClassUnconditional(v35, v88, 0, 0, 0);
        v36 = (char *)sub_10006B490();
        swift_unknownObjectRelease(v35);
        v2 = *(_QWORD *)&v36[OBJC_IVAR____TtC7Climate18ClimateCoordinator_requestContentManager];
        swift_retain(v2);

        v37 = v89 + OBJC_IVAR____TtC7Climate19ClimateZoneControls_zone;
        swift_beginAccess(v89 + OBJC_IVAR____TtC7Climate19ClimateZoneControls_zone, v98, 0, 0);
        v13 = *(_QWORD *)(v37 + *(int *)(type metadata accessor for ClimateZone(0) + 20));
        v97 = (unint64_t)_swiftEmptyArrayStorage;
        if ((unint64_t)v13 >> 62)
          goto LABEL_62;
        v38 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v13, 2);
        goto LABEL_34;
      }
      goto LABEL_113;
    }
  }
  if (v15 < *(_QWORD *)(a1 + 16))
  {
    v92 = v100[v15];
    v2 = *(_QWORD *)(a1 + 32 + 8 * v15);
    swift_bridgeObjectRetain(v19);
    v20 = 0;
    do
    {
      j = *(_QWORD *)(v2 + 16);
      v94 = v20;
      if (j)
      {
        swift_bridgeObjectRetain(v2);
        v96 = *(_OWORD *)(v2 + 32);
        v21 = *(void **)(v2 + 32);
        ObjectType = swift_getObjectType(v21);
        v23 = *(unsigned __int8 (**)(uint64_t, _QWORD))(*((_QWORD *)&v96 + 1) + 8);
        v24 = v21;
        v25 = (char *)&loc_100067784 + dword_10006836C[v23(ObjectType, *((_QWORD *)&v96 + 1))];
        __asm { BR              X9 }
      }
      v13 = (uint64_t)_swiftEmptyArrayStorage;
      v26 = _swiftEmptyArrayStorage[2];
      if (v26)
      {
        v27 = &_swiftEmptyArrayStorage[5];
        do
        {
          v29 = *v27;
          v30 = (id)*(v27 - 1);
          if ((v95 & 1) != 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
              v18 = sub_10007AD74(0, v18[2] + 1, 1, v18);
            j = v18[2];
            v31 = v18[3];
            if (j >= v31 >> 1)
              v18 = sub_10007AD74((_QWORD *)(v31 > 1), j + 1, 1, v18);
            v18[2] = j + 1;
            v28 = &v18[2 * j];
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
              v17 = sub_10007AD74(0, v17[2] + 1, 1, v17);
            j = v17[2];
            v32 = v17[3];
            if (j >= v32 >> 1)
              v17 = sub_10007AD74((_QWORD *)(v32 > 1), j + 1, 1, v17);
            v17[2] = j + 1;
            v28 = &v17[2 * j];
          }
          v28[4] = v30;
          v28[5] = v29;
          v27 += 2;
          --v26;
        }
        while (v26);
      }
      v20 = v94 + 1;
      swift_release(_swiftEmptyArrayStorage);
    }
    while (v94 + 1 != v93);
    swift_bridgeObjectRelease(v92);
    goto LABEL_10;
  }
  __break(1u);
LABEL_62:
  if (v13 < 0)
    v57 = v13;
  else
    v57 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v13, 2);
  v38 = _CocoaArrayWrapper.endIndex.getter(v57);
LABEL_34:
  v39 = v18;
  if (!v38)
  {
    swift_bridgeObjectRelease(v13);
    v48 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_48;
  }
  if (v38 < 1)
  {
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    swift_retain(v2);
    v75 = swift_retain(j);
    v59 = _CocoaArrayWrapper.endIndex.getter(v75);
    if (!v59)
      goto LABEL_96;
LABEL_74:
    if (v59 < 1)
    {
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
    for (i = 0; i != v59; ++i)
    {
      if ((j & 0xC000000000000001) != 0)
        v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, j);
      else
        v61 = *(id *)(j + 8 * i + 32);
      v62 = v61;
      v63 = objc_opt_self(CAFDeepLinkSetting);
      v64 = swift_dynamicCastObjCClass(v62, v63);
      if (v64)
      {
        v65 = v64;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
        v67 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v66 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v67 >= v66 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
        v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v65);
        specialized Array._endMutation()(v68);
        v18 = v39;
      }
      else
      {

      }
    }
    swift_release(j);
    v69 = v97;
    if (v97 >> 62)
      goto LABEL_97;
LABEL_86:
    v70 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v69);
    if (!v70)
      goto LABEL_101;
    goto LABEL_87;
  }
  for (j = 0; j != v38; ++j)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v13);
    else
      v40 = *(id *)(v13 + 8 * j + 32);
    v41 = v40;
    v42 = objc_opt_self(CAFAutomakerSetting);
    v43 = swift_dynamicCastObjCClass(v41, v42);
    if (v43)
    {
      v44 = v43;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
      v46 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v45 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v46 >= v45 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
      v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v44);
      specialized Array._endMutation()(v47);
      v18 = v39;
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease(v13);
  v48 = v97;
LABEL_48:
  swift_bridgeObjectRelease(v13);
  v97 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v48 >> 62)
  {
    if (v48 < 0)
      v58 = v48;
    else
      v58 = v48 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v48);
    v49 = _CocoaArrayWrapper.endIndex.getter(v58);
    swift_bridgeObjectRelease(v48);
    if (!v49)
      goto LABEL_70;
LABEL_50:
    if (v49 >= 1)
    {
      for (k = 0; k != v49; ++k)
      {
        if ((v48 & 0xC000000000000001) != 0)
          v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v48);
        else
          v54 = *(id *)(v48 + 8 * k + 32);
        v55 = v54;
        v56 = objc_msgSend(v54, "category", v88);
        if ((_DWORD)v56 == 2)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v56);
          v51 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v51);
          v52 = v51;
          v18 = v39;
          v53 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v55);
          specialized ContiguousArray._endMutation()(v53);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease(v48);
      j = (unint64_t)_swiftEmptyArrayStorage;
      if (v2)
        goto LABEL_71;
      goto LABEL_102;
    }
    goto LABEL_94;
  }
  v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v49)
    goto LABEL_50;
LABEL_70:
  swift_bridgeObjectRelease(v48);
  j = (unint64_t)_swiftEmptyArrayStorage;
  if (!v2)
    goto LABEL_102;
LABEL_71:
  v97 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
    || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
    goto LABEL_95;
  }
  v59 = _swiftEmptyArrayStorage[2];
  swift_retain(v2);
  swift_retain(_swiftEmptyArrayStorage);
  if (v59)
    goto LABEL_74;
LABEL_96:
  swift_release(j);
  v69 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    goto LABEL_86;
LABEL_97:
  if (v69 < 0)
    v76 = v69;
  else
    v76 = v69 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v69);
  v70 = _CocoaArrayWrapper.endIndex.getter(v76);
  if (!v70)
    goto LABEL_101;
LABEL_87:
  if (v70 < 1)
    goto LABEL_110;
  v71 = 0;
  do
  {
    if ((v69 & 0xC000000000000001) != 0)
      v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v71, v69);
    else
      v72 = *(id *)(v69 + 8 * v71 + 32);
    v73 = v72;
    ++v71;
    v74 = swift_retain(v2);
    CAFDeepLinkSetting.requestContentManager.setter(v74);

  }
  while (v70 != v71);
LABEL_101:
  swift_bridgeObjectRelease_n(v69, 2);
  swift_release(v2);
LABEL_102:
  swift_bridgeObjectRetain(v17);
  v77 = objc_msgSend(v90, "sharedApplication", swift_bridgeObjectRetain(v18).n128_f64[0]);
  v78 = objc_msgSend(v77, "delegate");

  if (!v78)
  {
LABEL_114:
    __break(1u);
    JUMPOUT(0x10006836CLL);
  }
  swift_dynamicCastClassUnconditional(v78, v88, 0, 0, 0);
  v79 = sub_10006B490();
  swift_unknownObjectRelease(v78);
  KeyPath = swift_getKeyPath(&unk_10008AFC8);
  v81 = swift_getKeyPath(&unk_10008AFF0);
  static Published.subscript.getter(v79, KeyPath, v81);

  swift_release(KeyPath);
  *(_QWORD *)&v82 = swift_release(v81).n128_u64[0];
  if (v97
    && (v83 = objc_msgSend((id)v97, "automakerSettings", v82),
        (id)v97,
        v83)
    && (v84 = objc_msgSend(v83, "settingsSections"), v83, v84))
  {
    v85 = sub_100006B04(0, &qword_1000B9318, CAFSettingsSection_ptr);
    v86 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v84, v85);

  }
  else
  {
    v86 = _swiftEmptyArrayStorage;
  }
  v87 = *(id *)(v89 + OBJC_IVAR____TtC7Climate19ClimateZoneControls_zoneViews);
  sub_10000D644((uint64_t)v17, (uint64_t)v18, j, (uint64_t)v86);
  swift_bridgeObjectRelease(v86);
  swift_release(j);
  swift_bridgeObjectRelease_n(v17, 2);
  swift_bridgeObjectRelease_n(v18, 2);
  swift_release(v2);

}

void sub_1000683DC()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100006058((uint64_t *)&unk_1000B7590);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100088DF0;
  v5 = OBJC_IVAR____TtC7Climate19ClimateZoneControls_zoneViews;
  v6 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Climate19ClimateZoneControls_zoneViews], "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(*(id *)&v1[v5], "bottomAnchor");
  v10 = objc_msgSend(v1, "bottomAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 40) = v11;
  v12 = objc_msgSend(*(id *)&v1[v5], "leadingAnchor");
  v13 = objc_msgSend(v1, "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v4 + 48) = v14;
  v15 = objc_msgSend(*(id *)&v1[v5], "trailingAnchor");
  v16 = objc_msgSend(v1, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v4 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_1000686B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateZoneControls(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10006871C()
{
  return type metadata accessor for ClimateZoneControls(0);
}

uint64_t type metadata accessor for ClimateZoneControls(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9960;
  if (!qword_1000B9960)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateZoneControls);
  return result;
}

uint64_t sub_100068760(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for ClimateZone(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000687D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10008AFC8);
  v5 = swift_getKeyPath(&unk_10008AFF0);
  static Published.subscript.getter(v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100068854(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10008AFC8);
  v5 = swift_getKeyPath(&unk_10008AFF0);
  v8 = v2;
  v6 = v2;
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t sub_1000688C4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100068954(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1000688E0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100068ABC(a1, a2, a3, (_QWORD *)*v3, &qword_1000B9980, &qword_1000BA030);
  *v3 = result;
  return result;
}

uint64_t sub_10006890C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100068ABC(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1000BA020, &qword_1000B9978);
  *v3 = result;
  return result;
}

uint64_t sub_100068938(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100068C48(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100068954(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006058((uint64_t *)&unk_1000B9640);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100068ABC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_100006058(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 16 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 17;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 4);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 16 * v11)
      memmove(v14 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 16 * v11 || v17 >= v18 + 16 * v11)
  {
    sub_100006058(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100068C48(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006058(&qword_1000B7460);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_100006058(&qword_1000BA000);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_QWORD *sub_100068DD8(uint64_t (*a1)(id *), _QWORD *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(id *);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;

  v4 = a3;
  v26 = _swiftEmptyArrayStorage;
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v23 = v4 & 0xFFFFFFFFFFFFFF8;
      v24 = v4 & 0xC000000000000001;
      v22 = v4;
      while (v24)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v25 = v9;
        v12 = a2;
        v13 = a1(&v25);
        if (v3)
        {
          swift_bridgeObjectRelease(v4);

          swift_release(v26);
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v14 = v7;
          v15 = a1;
          v16 = a2;
          v17 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = v17;
          a2 = v16;
          a1 = v15;
          v7 = v14;
          v4 = v22;
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v10);
          specialized ContiguousArray._endMutation()(v19);
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v26;
          goto LABEL_23;
        }
      }
      if (v8 < *(_QWORD *)(v23 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      if (v4 < 0)
        v20 = v4;
      else
        v20 = v4 & 0xFFFFFFFFFFFFFF8;
      v7 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v7)
        goto LABEL_22;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_22:
  v12 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v4);
  return v12;
}

uint64_t sub_100068F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  double MinX;
  double v12;
  double MinY;
  double MaxX;
  double MaxY;
  uint64_t v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate20ClimatePositionViews_positions);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v1);
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v1);
  }
  if (v1 < 0)
    v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate20ClimatePositionViews_positions);
  else
    v16 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  result = _CocoaArrayWrapper.endIndex.getter(v16);
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease(v1);
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = 0.0;
    v6 = 0.0;
    v7 = 0.0;
    v8 = 0.0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v9 = *(id *)(v1 + 8 * v4 + 32);
      v10 = v9;
      objc_msgSend(v9, "frame");
      MinX = CGRectGetMinX(v20);
      v12 = MinX;
      if (v4)
      {
        if (v8 >= MinX)
          v8 = MinX;
        objc_msgSend(v10, "frame");
        MinY = CGRectGetMinY(v21);
        if (v7 >= MinY)
          v7 = MinY;
        objc_msgSend(v10, "frame");
        MaxX = CGRectGetMaxX(v22);
        if (MaxX > v6)
          v6 = MaxX;
        objc_msgSend(v10, "frame");
        MaxY = CGRectGetMaxY(v23);

        if (MaxY > v5)
          v5 = MaxY;
      }
      else
      {
        objc_msgSend(v10, "frame");
        v7 = CGRectGetMinY(v17);
        objc_msgSend(v10, "frame");
        v6 = CGRectGetMaxX(v18);
        objc_msgSend(v10, "frame");
        v5 = CGRectGetMaxY(v19);

        v8 = v12;
      }
      ++v4;
    }
    while (v2 != v4);
    return swift_bridgeObjectRelease(v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_100069144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char **a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t);
  uint64_t v25;
  void (**v26)(_QWORD, _QWORD);
  void (*v27)(char *, uint64_t);
  void *v28;
  void *v29;
  id v30;
  __n128 v31;
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char **v45;

  v43 = a4;
  v44 = a3;
  v45 = a5;
  v7 = type metadata accessor for CAUAsset.Seat.State(0);
  v39 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ClimateZone(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CAUVehicleLayoutInfo(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v38 - v19;
  type metadata accessor for ClimateAssets(0);
  v38 = a2;
  sub_100022E00(a1, (uint64_t)v20);
  v21 = *(_QWORD *)(a1 + *(int *)(v10 + 40));
  v41 = v13;
  sub_100008C1C(a1, (uint64_t)v13);
  v42 = v15;
  v22 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v40 = v20;
  v22(v17, v20, v14);
  if (v21)
  {
    v23 = v39;
    v24 = *(void (**)(char *, _QWORD, uint64_t))(v39 + 104);
    v24(v9, enum case for CAUAsset.Seat.State.heatOn(_:), v7);
    v38 = v14;
    v25 = v44;
    swift_unknownObjectRetain(v44);
    v26 = (void (**)(_QWORD, _QWORD))sub_100023430(a1, (uint64_t)v9);
    v27 = *(void (**)(char *, uint64_t))(v23 + 8);
    v27(v9, v7);
    v24(v9, enum case for CAUAsset.Seat.State.ventOn(_:), v7);
    v28 = (void *)sub_100023430(a1, (uint64_t)v9);
    v27(v9, v7);
    v24(v9, enum case for CAUAsset.Seat.State.heatAndVentOn(_:), v7);
    v29 = (void *)sub_100023430(a1, (uint64_t)v9);
    v27(v9, v7);
    v30 = objc_allocWithZone((Class)type metadata accessor for ClimateZoneHeatingCoolingVentingPositionView(0));
    v32 = sub_100056C58((uint64_t)v41, v25, v43, (uint64_t)v17, v26, v28, v29, v31);
    v33 = v25;
    v14 = v38;
    swift_unknownObjectRelease(v33);

  }
  else
  {
    v34 = objc_allocWithZone((Class)type metadata accessor for ClimateZonePositionView(0));
    v35 = v44;
    swift_unknownObjectRetain(v44);
    sub_100066098((uint64_t)v41, v35, v43, (uint64_t)v17);
    v32 = v36;
    swift_unknownObjectRelease(v35);
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v40, v14);
  *v45 = v32;
  return result;
}

id sub_1000694A8(__n128 a1)
{
  return sub_1000694E0(&OBJC_IVAR____TtC7Climate20ClimatePositionViews____lazy_storage___heightConstraint, (SEL *)&selRef_heightAnchor, (uint64_t (*)(uint64_t))&CAUVehicleLayoutInfo.height.getter, a1);
}

id sub_1000694C4(__n128 a1)
{
  return sub_1000694E0(&OBJC_IVAR____TtC7Climate20ClimatePositionViews____lazy_storage___widthConstraint, (SEL *)&selRef_widthAnchor, (uint64_t (*)(uint64_t))&CAUVehicleLayoutInfo.width.getter, a1);
}

id sub_1000694E0(uint64_t *a1, SEL *a2, uint64_t (*a3)(uint64_t), __n128 a4)
{
  char *v4;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v25;

  v8 = v4;
  v9 = type metadata accessor for CAUVehicleLayoutInfo(0, a4);
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)&v11 = __chkstk_darwin(v9).n128_u64[0];
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = *(void **)&v4[v14];
  if (v15)
  {
    v16 = *(id *)&v4[v14];
  }
  else
  {
    v17 = objc_msgSend(v4, *a2, v11);
    v18 = type metadata accessor for ClimateAssets(0);
    v19 = CAUVehicleLayout.cabinSeatsImage.getter(v18);
    v20 = a3(v19);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v21 = objc_msgSend(v17, "constraintEqualToConstant:", *(double *)&v8[OBJC_IVAR____TtC7Climate20ClimatePositionViews_scale] * (double)v20);

    v22 = *(void **)&v8[v14];
    *(_QWORD *)&v8[v14] = v21;
    v16 = v21;

    v15 = 0;
  }
  v23 = v15;
  return v16;
}

id sub_100069648()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimatePositionViews(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100069704()
{
  return type metadata accessor for ClimatePositionViews(0);
}

uint64_t type metadata accessor for ClimatePositionViews(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B99D8;
  if (!qword_1000B99D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimatePositionViews);
  return result;
}

uint64_t sub_100069748(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[7];

  result = type metadata accessor for ClimateSystemManager(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_10008B028;
    result = type metadata accessor for ClimateAssets(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[4] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[5] = &unk_10008B040;
      v5[6] = &unk_10008B040;
      result = swift_updateClassMetadata2(a1, 256, 7, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_100069800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  double MinX;
  double v16;
  double MinY;
  double MaxX;
  double MaxY;
  double v20;
  double v21;
  _QWORD v22[4];
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC7Climate20ClimatePositionViews_positions);
  v22[2] = a1;
  swift_bridgeObjectRetain(v4);
  result = (uint64_t)sub_100068DD8((uint64_t (*)(id *))sub_100069A88, v22, v4);
  v6 = result;
  if (!((unint64_t)result >> 62))
  {
    v7 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_24:
    result = swift_bridgeObjectRelease(v6);
    v12 = 0.0;
    v11 = 0.0;
    v20 = 0.0;
    v21 = 0.0;
LABEL_25:
    *(double *)a2 = v12;
    *(double *)(a2 + 8) = v11;
    *(double *)(a2 + 16) = v20;
    *(double *)(a2 + 24) = v21;
    *(_BYTE *)(a2 + 32) = v7 == 0;
    return result;
  }
  if (result >= 0)
    result &= 0xFFFFFFFFFFFFFF8uLL;
  result = _CocoaArrayWrapper.endIndex.getter(result);
  v7 = result;
  if (!result)
    goto LABEL_24;
LABEL_3:
  if (v7 >= 1)
  {
    v8 = 0;
    v9 = 0.0;
    v10 = 0.0;
    v11 = 0.0;
    v12 = 0.0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
      else
        v13 = *(id *)(v6 + 8 * v8 + 32);
      v14 = v13;
      objc_msgSend(v13, "frame");
      MinX = CGRectGetMinX(v26);
      v16 = MinX;
      if (v8)
      {
        if (v12 >= MinX)
          v12 = MinX;
        objc_msgSend(v14, "frame");
        MinY = CGRectGetMinY(v27);
        if (v11 >= MinY)
          v11 = MinY;
        objc_msgSend(v14, "frame");
        MaxX = CGRectGetMaxX(v28);
        if (MaxX > v10)
          v10 = MaxX;
        objc_msgSend(v14, "frame");
        MaxY = CGRectGetMaxY(v29);

        if (MaxY > v9)
          v9 = MaxY;
      }
      else
      {
        objc_msgSend(v14, "frame");
        v11 = CGRectGetMinY(v23);
        objc_msgSend(v14, "frame");
        v10 = CGRectGetMaxX(v24);
        objc_msgSend(v14, "frame");
        v9 = CGRectGetMaxY(v25);

        v12 = v16;
      }
      ++v8;
    }
    while (v7 != v8);
    result = swift_bridgeObjectRelease(v6);
    v20 = v10 - v12;
    v21 = v9 - v11;
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

BOOL sub_100069A04()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::Bool v4;

  CAUVehicleLayoutKey.rawValue.getter();
  v1 = v0;
  v2._countAndFlagsBits = CAUVehicleLayoutKey.rawValue.getter();
  object = v2._object;
  v4 = String.hasPrefix(_:)(v2);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(object);
  return v4;
}

BOOL sub_100069A88()
{
  return sub_100069A04();
}

void sub_100069AA4(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_100069AFC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 7233894, 0xE300000000000000);
  swift_bridgeObjectRelease(0xE300000000000000);
  return Hasher._finalize()();
}

void sub_100069B98(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  __asm { BR              X10 }
}

Swift::Int sub_100069BEC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 7233894, 0xE300000000000000);
  swift_bridgeObjectRelease(0xE300000000000000);
  return Hasher._finalize()();
}

void sub_100069C88(void *a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;

  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", a1);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100006058((uint64_t *)&unk_1000B7590);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100088DF0;
  v6 = objc_msgSend(a1, "leadingAnchor");
  v7 = objc_msgSend(v1, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(a1, "trailingAnchor");
  v10 = objc_msgSend(v1, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(a1, "bottomAnchor");
  v13 = objc_msgSend(v1, "bottomAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(a1, "topAnchor");
  v16 = objc_msgSend(v1, "topAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v5 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100006098();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v3, "activateConstraints:", isa);

}

void sub_100069EDC(char *a1)
{
  sub_100047B14(*a1);
}

void sub_100069EE8()
{
  char *v0;

  sub_100069AA4(*v0);
}

void sub_100069EF0()
{
  __asm { BR              X10 }
}

uint64_t sub_100069F34(uint64_t a1)
{
  String.hash(into:)(a1, 7233894, 0xE300000000000000);
  return swift_bridgeObjectRelease(0xE300000000000000);
}

void sub_100069FBC(uint64_t a1)
{
  char *v1;

  sub_100069B98(a1, *v1);
}

unint64_t sub_100069FC4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10006A388(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100069FF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10006A028 + 4 * byte_10008B072[*v0]))();
}

void sub_10006A028(_QWORD *a1@<X8>)
{
  *a1 = 7233894;
  a1[1] = 0xE300000000000000;
}

void sub_10006A03C(_QWORD *a1@<X8>)
{
  *a1 = 0x73736572706D6F63;
  a1[1] = 0xEA0000000000726FLL;
}

void sub_10006A05C(_QWORD *a1@<X8>)
{
  *a1 = 1668184435;
  a1[1] = 0xE400000000000000;
}

void sub_10006A070(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "recirculation");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_10006A098(_QWORD *a1@<X8>)
{
  *a1 = 0x65736F6C63;
  a1[1] = 0xE500000000000000;
}

id sub_10006A150()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateStatusBarView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10006A1BC()
{
  return type metadata accessor for ClimateStatusBarView(0);
}

uint64_t type metadata accessor for ClimateStatusBarView(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9A10;
  if (!qword_1000B9A10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateStatusBarView);
  return result;
}

uint64_t sub_10006A200(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for ClimateZone(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ClimateStatusBarIndicators(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10006A2C0 + 4 * byte_10008B07D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10006A2F4 + 4 * byte_10008B078[v4]))();
}

uint64_t sub_10006A2F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006A2FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006A304);
  return result;
}

uint64_t sub_10006A310(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006A318);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10006A31C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006A324(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClimateStatusBarIndicators()
{
  return &type metadata for ClimateStatusBarIndicators;
}

unint64_t sub_10006A344()
{
  unint64_t result;

  result = qword_1000B9A20;
  if (!qword_1000B9A20)
  {
    result = swift_getWitnessTable(&unk_10008B154, &type metadata for ClimateStatusBarIndicators);
    atomic_store(result, (unint64_t *)&qword_1000B9A20);
  }
  return result;
}

unint64_t sub_10006A388(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10009D910, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

id sub_10006A3D0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 12.0, UIFontWeightSemibold);
  qword_1000BC9B0 = (uint64_t)result;
  return result;
}

id sub_10006A418()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleBody, UIFontWeightSemibold);
  if (result)
    qword_1000BC9B8 = (uint64_t)result;
  else
    __break(1u);
  return result;
}

CGFloat sub_10006A470(uint64_t a1)
{
  return sub_10006A4A4(0.01, a1, &xmmword_1000BC9C0, algn_1000BC9D0, &xmmword_1000BC9E0);
}

CGFloat sub_10006A48C(uint64_t a1)
{
  return sub_10006A4A4(1.0, a1, &xmmword_1000BC9F0, &xmmword_1000BCA00, &xmmword_1000BCA10);
}

CGFloat sub_10006A4A4(CGFloat a1, uint64_t a2, _OWORD *a3, _OWORD *a4, _OWORD *a5)
{
  CGFloat result;
  __int128 v9;
  __int128 v10;
  CGAffineTransform v11;

  CGAffineTransformMakeScale(&v11, a1, a1);
  result = v11.a;
  v9 = *(_OWORD *)&v11.c;
  v10 = *(_OWORD *)&v11.tx;
  *a3 = *(_OWORD *)&v11.a;
  *a4 = v9;
  *a5 = v10;
  return result;
}

uint64_t sub_10006A4F8()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate25ClimateControlsLockButton_controlsLock);
  v2 = objc_msgSend(v1, "lockState");
  v3 = objc_msgSend(v1, "lockStateRestricted");
  v4 = objc_msgSend(v1, "lockStateDisabled");
  if (v2 == 1)
  {
    v5 = 5;
    if (!v3)
      v5 = 1;
    if (!v4)
      return v5;
    return v5 | 0x10;
  }
  v5 = 4;
  if (!v3)
    v5 = 0;
  if ((v4 & 1) != 0)
    return v5 | 0x10;
  return v5;
}

char *sub_10006A590(void *a1)
{
  char *v1;
  id v3;
  char *v4;
  void *v5;
  char *v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v21;
  char v22[24];
  objc_super v23;

  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate25ClimateControlsLockButton_controlsLock] = a1;
  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for ClimateControlsLockButton();
  v3 = a1;
  v4 = (char *)objc_msgSendSuper2(&v23, "init");
  objc_msgSend(v3, "registerObserver:", v4);
  v5 = *(void **)&v4[OBJC_IVAR____TtC7Climate25ClimateControlsLockButton_controlsLock];
  v6 = v4;
  v7 = objc_msgSend(v5, "lockState");
  if (v7 == 1)
    v8 = 0xD00000000000001ALL;
  else
    v8 = 0xD00000000000001FLL;
  if (v7 == 1)
    v9 = 0x800000010008EDA0;
  else
    v9 = 0x800000010008ED80;
  v10 = (unint64_t *)&v6[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v6[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v22, 1, 0);
  v11 = *v10;
  v12 = v10[1];
  *v10 = v8;
  v10[1] = v9;
  if (!v12
    || (v8 == v11 ? (v13 = v9 == v12) : (v13 = 0),
        !v13 && (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v11, v12, 0) & 1) == 0))
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v12);
  v14 = swift_allocObject(&unk_1000A0028, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16, v6);
  v15 = swift_allocObject(&unk_1000A0050, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v3;
  v16 = (uint64_t *)&v6[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v6[OBJC_IVAR____TtC7Climate13ClimateButton_action], &v21, 1, 0);
  v17 = *v16;
  v18 = v16[1];
  *v16 = (uint64_t)sub_10006AA84;
  v16[1] = v15;
  v19 = v3;
  sub_100005118(v17, v18);
  sub_10006A83C();

  return v6;
}

void sub_10006A768(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    if (objc_msgSend(a3, "lockState") == 2)
      v7 = 1;
    else
      v7 = 2;
    objc_msgSend(a3, "setLockState:", v7);

  }
}

uint64_t sub_10006A83C()
{
  char *v0;
  void *v1;
  unsigned int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  char v10[24];

  sub_10007813C();
  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate25ClimateControlsLockButton_controlsLock];
  objc_msgSend(v1, "lockState");
  objc_msgSend(v1, "lockStateRestricted");
  objc_msgSend(v0, "setEnabled:", objc_msgSend(v1, "lockStateDisabled") ^ 1);
  sub_100066A90();
  sub_100066C24();
  v2 = objc_msgSend(v1, "lockState");
  if (v2 == 1)
    v3 = 0xD00000000000001ALL;
  else
    v3 = 0xD00000000000001FLL;
  if (v2 == 1)
    v4 = 0x800000010008EDA0;
  else
    v4 = 0x800000010008ED80;
  v5 = (unint64_t *)&v0[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v0[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v10, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = v3;
  v5[1] = v4;
  if (!v7
    || (v3 == v6 ? (v8 = v4 == v7) : (v8 = 0),
        !v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v6, v7, 0) & 1) == 0))
  {
    ClimateButton.updateClimateConfiguration()();
  }
  return swift_bridgeObjectRelease(v7);
}

void sub_10006A970()
{
  uint64_t v0;

}

id sub_10006A980()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateControlsLockButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateControlsLockButton()
{
  return objc_opt_self(_TtC7Climate25ClimateControlsLockButton);
}

uint64_t sub_10006AA34()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006AA58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10006AA84(uint64_t a1)
{
  uint64_t v1;

  sub_10006A768(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

_QWORD *sub_10006AA8C()
{
  void *v0;
  id v1;
  void *v2;
  _QWORD *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String *v9;
  uint64_t countAndFlagsBits;
  void *object;
  BOOL v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  int v17;
  id v18;
  char *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  char v36;
  char v37;
  _BYTE v39[24];
  objc_super v40;
  Swift::String v41;

  v40.receiver = v0;
  v40.super_class = (Class)type metadata accessor for ClimateSettingsButton();
  v1 = objc_msgSendSuper2(&v40, "init");
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = v1;
  v4 = objc_msgSend(v2, "mainBundle");
  v41._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x5445535F45524F4DLL;
  v5._object = (void *)0xED000053474E4954;
  v6.value._countAndFlagsBits = 0x6574616D696C43;
  v6.value._object = (void *)0xE700000000000000;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v41._countAndFlagsBits = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v41);

  v9 = (Swift::String *)((char *)v3 + OBJC_IVAR____TtC7Climate13ClimateButton_title);
  swift_beginAccess((char *)v3 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v39, 1, 0);
  countAndFlagsBits = v9->_countAndFlagsBits;
  object = v9->_object;
  *v9 = v8;
  if (v8._object)
  {
    if (object)
    {
      v12 = v8._countAndFlagsBits == countAndFlagsBits && object == v8._object;
      if (v12
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v8._countAndFlagsBits, v8._object, countAndFlagsBits, object, 0) & 1) != 0)
      {
        goto LABEL_11;
      }
    }
    goto LABEL_10;
  }
  if (object)
  {
LABEL_10:
    ClimateButton.updateClimateConfiguration()();
LABEL_11:

    swift_bridgeObjectRelease(object);
    goto LABEL_12;
  }

LABEL_12:
  v13 = objc_msgSend(v3, "titleLabel");
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 16.0);
    objc_msgSend(v14, "setFont:", v15);

  }
  v16 = objc_msgSend(v3, "titleLabel");

  if (v16)
  {
    objc_msgSend(v16, "setTextAlignment:", 2);

  }
  v17 = *((unsigned __int8 *)v3 + OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial);
  *((_BYTE *)v3 + OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial) = 1;
  if (v17 != 1)
  {
    v18 = objc_msgSend(*(id *)((char *)v3 + OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView), "removeFromSuperview");
    (*(void (**)(id))((swift_isaMask & *v3) + 0x230))(v18);
  }
  v19 = (char *)v3 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
  v20 = *(void **)((char *)v3 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v21 = *(void **)((char *)v3 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v22 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  v23 = (void *)objc_opt_self(UIColor);
  v24 = v20;
  v25 = v21;
  v26 = objc_msgSend(v23, "clearColor", swift_bridgeObjectRetain(v22).n128_f64[0]);
  v27 = objc_msgSend(v23, "_carSystemFocusColor");
  v28 = v27;
  if (!v26)
  {
    v26 = v24;
    if (v28)
      goto LABEL_21;
    goto LABEL_20;
  }
  if (!v27)
LABEL_20:
    v28 = v25;
LABEL_21:

  v29 = *(void **)v19;
  v30 = (void *)*((_QWORD *)v19 + 1);
  v31 = *((_QWORD *)v19 + 2);
  *(_QWORD *)v19 = v26;
  *((_QWORD *)v19 + 1) = v28;
  *((_QWORD *)v19 + 2) = v22;
  swift_bridgeObjectRetain_n(v22, 2);
  sub_100005128();
  v32 = v26;
  v33 = v28;
  v34 = v32;
  v35 = v33;
  if ((static NSObject.== infix(_:_:)(v34) & 1) != 0 && (static NSObject.== infix(_:_:)(v35) & 1) != 0)
  {
    sub_10005B490(v22, v31);
    v37 = v36;
    swift_bridgeObjectRelease(v22);

    if ((v37 & 1) != 0)
      goto LABEL_27;
  }
  else
  {
    swift_bridgeObjectRelease(v22);

  }
  (*(void (**)(void))((swift_isaMask & *v3) + 0x230))();
LABEL_27:

  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v22);
  return v3;
}

id sub_10006AE94()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateSettingsButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateSettingsButton()
{
  return objc_opt_self(_TtC7Climate21ClimateSettingsButton);
}

uint64_t destroy for ClimateProgressViewColorConfig(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for ClimateProgressViewColorConfig(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  v7 = v3;
  v8 = v4;
  v9 = v6;
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for ClimateProgressViewColorConfig(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  v13 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t assignWithTake for ClimateProgressViewColorConfig(uint64_t a1, _OWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClimateProgressViewColorConfig(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClimateProgressViewColorConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClimateProgressViewColorConfig()
{
  return &type metadata for ClimateProgressViewColorConfig;
}

void sub_10006B0D4(uint64_t a1, uint64_t a2)
{
  sub_10006B348(*(_QWORD *)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)a2, *(void **)(a2 + 8), *(void **)(a2 + 16), *(_QWORD *)(a2 + 24));
}

unint64_t sub_10006B0F4()
{
  unint64_t result;

  result = qword_1000B9AE8;
  if (!qword_1000B9AE8)
  {
    result = swift_getWitnessTable(&unk_10008B230, &type metadata for ClimateProgressViewColorConfig);
    atomic_store(result, (unint64_t *)&qword_1000B9AE8);
  }
  return result;
}

unint64_t sub_10006B138(uint64_t a1)
{
  unint64_t result;

  result = sub_10006B0F4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10006B15C(void *a1, void *a2, void *a3, uint64_t a4)
{
  Swift::String v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  uint64_t v17;
  Swift::String v18;
  void *object;
  Swift::String v20;
  id v21;
  Swift::String v22;
  void *v23;
  Swift::String v24;
  unint64_t v25;
  uint64_t v26;
  Swift::String v27;
  void *v28;
  Swift::String v29;
  void *v31;
  uint64_t v32;
  unint64_t v33;

  v32 = 0;
  v33 = 0xE000000000000000;
  _StringGuts.grow(_:)(73);
  v8._object = (void *)0x800000010008EE20;
  v8._countAndFlagsBits = 0xD000000000000027;
  String.append(_:)(v8);
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 0x3D6B6361727420;
  v15._object = (void *)0xE700000000000000;
  String.append(_:)(v15);
  v31 = a2;
  v16 = a2;
  v17 = sub_100006058(&qword_1000B9B18);
  v18._countAndFlagsBits = String.init<A>(describing:)(&v31, v17);
  object = v18._object;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(object);
  v20._countAndFlagsBits = 0x736572676F727020;
  v20._object = (void *)0xEA00000000003D73;
  String.append(_:)(v20);
  v31 = a3;
  v21 = a3;
  v22._countAndFlagsBits = String.init<A>(describing:)(&v31, v17);
  v23 = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v23);
  v24._countAndFlagsBits = 0x3D73657461747320;
  v24._object = (void *)0xE800000000000000;
  String.append(_:)(v24);
  v25 = sub_10004758C();
  swift_bridgeObjectRetain(a4);
  v27._countAndFlagsBits = Dictionary.description.getter(v26, &type metadata for ClimatePresentation, &type metadata for ClimateProgressViewColorConfig, v25);
  v28 = v27._object;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(v28);
  v29._countAndFlagsBits = 62;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  return v32;
}

uint64_t sub_10006B33C()
{
  uint64_t v0;

  return sub_10006B15C(*(void **)v0, *(void **)(v0 + 8), *(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10006B348(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8)
{
  id v15;
  id v16;
  char v17;
  id v18;
  id v19;
  char v20;

  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1) & 1) != 0)
  {
    if (a2)
    {
      if (!a6)
        return;
      sub_100006B04(0, (unint64_t *)&qword_1000B91A0, UIColor_ptr);
      v15 = a6;
      v16 = a2;
      v17 = static NSObject.== infix(_:_:)(v16);

      if ((v17 & 1) == 0)
        return;
    }
    else if (a6)
    {
      return;
    }
    if (a3)
    {
      if (!a7)
        return;
      sub_100006B04(0, (unint64_t *)&qword_1000B91A0, UIColor_ptr);
      v18 = a7;
      v19 = a3;
      v20 = static NSObject.== infix(_:_:)(v19);

      if ((v20 & 1) == 0)
        return;
    }
    else if (a7)
    {
      return;
    }
    sub_10005B0D4(a4, a8);
  }
}

id sub_10006B490()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC7Climate18ClimateAppDelegate____lazy_storage___coordinator;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate18ClimateAppDelegate____lazy_storage___coordinator);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC7Climate18ClimateAppDelegate____lazy_storage___coordinator);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimateCoordinator(0)), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10006B5D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateAppDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

int main(int argc, const char **argv, const char **envp)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *ObjCClassFromMetadata;
  NSString *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = type metadata accessor for ClimateAppDelegate();
  v4 = static CommandLine.unsafeArgv.getter();
  v5 = ((uint64_t (*)(void))static CommandLine.argc.getter)();
  v6 = static CommandLine.argc.getter(v5);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v3);
  v8 = NSStringFromClass(ObjCClassFromMetadata);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  LODWORD(v8) = UIApplicationMain(_:_:_:_:)(v6, v4, 0, 0, v9, v11);
  swift_bridgeObjectRelease(v11);
  exit((int)v8);
}

uint64_t type metadata accessor for ClimateAppDelegate()
{
  return objc_opt_self(_TtC7Climate18ClimateAppDelegate);
}

unint64_t sub_10006B6B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B7140;
  if (!qword_1000B7140)
  {
    type metadata accessor for LaunchOptionsKey(255);
    result = swift_getWitnessTable(&unk_100088BE8, v1);
    atomic_store(result, (unint64_t *)&qword_1000B7140);
  }
  return result;
}

BOOL sub_10006B700()
{
  uint64_t v0;

  return (_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0((char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "on"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "autoMode"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onRestricted"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onInvalid"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onDisabled")) & 0x1A) == 2;
}

BOOL sub_10006B7BC()
{
  uint64_t v0;

  return (_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel), "heatingCoolingLevel") != 0, (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel), "autoMode"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel), "heatingCoolingLevelRestricted"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel), "heatingCoolingLevelInvalid"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_steeringWheel), "heatingCoolingLevelDisabled")) & 0x1A) == 2;
}

void sub_10006B880()
{
  sub_10006B8A8(&OBJC_IVAR____TtC7Climate27ClimateSeatFanServiceButton_autoModeGlyph, sub_100032D0C);
}

void sub_10006B894()
{
  sub_10006B8A8(&OBJC_IVAR____TtC7Climate38ClimateSeatHeatingCoolingServiceButton_autoModeGlyph, sub_10003D1BC);
}

void sub_10006B8A8(uint64_t *a1, uint64_t (*a2)(void))
{
  char *v2;
  uint64_t v3;
  void *v4;
  char *v6;
  NSString v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  Class isa;
  void *v24;
  id v25;
  id v26;

  v3 = *a1;
  v4 = *(void **)&v2[*a1];
  if (v4)
  {
    v6 = v2;
    v26 = v4;
    objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v7);

    objc_msgSend(v26, "setImage:", v8);
    if (qword_1000B6F90 != -1)
      swift_once(&qword_1000B6F90, sub_100041F58);
    objc_msgSend(v26, "setTintColor:", qword_1000BC898);
    objc_msgSend(v6, "addSubview:", v26);
    v9 = (void *)objc_opt_self(NSLayoutConstraint);
    v10 = sub_100006058((uint64_t *)&unk_1000B7590);
    v11 = swift_allocObject(v10, 64, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100088DF0;
    v12 = objc_msgSend(v26, "topAnchor");
    v13 = objc_msgSend(v6, "topAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, 5.0);

    *(_QWORD *)(v11 + 32) = v14;
    v15 = objc_msgSend(v26, "trailingAnchor");
    v16 = objc_msgSend(v6, "trailingAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -5.0);

    *(_QWORD *)(v11 + 40) = v17;
    v18 = objc_msgSend(v26, "widthAnchor");
    v19 = objc_msgSend(v18, "constraintEqualToConstant:", 15.0);

    *(_QWORD *)(v11 + 48) = v19;
    v20 = objc_msgSend(v26, "heightAnchor");
    v21 = objc_msgSend(v20, "constraintEqualToConstant:", 15.0);

    *(_QWORD *)(v11 + 56) = v21;
    specialized Array._endMutation()(v22);
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
    objc_msgSend(v9, "activateConstraints:", isa);

    v24 = *(void **)&v6[v3];
    if (v24)
    {
      v25 = v24;
      objc_msgSend(v25, "setHidden:", (a2() & 0x1A) != 2);

    }
    else
    {

    }
  }
}

void sub_10006BC10()
{
  sub_10006BC24(&OBJC_IVAR____TtC7Climate26ClimateSteeringWheelButton_autoModeGlyph, (uint64_t (*)(void))sub_10006B7BC);
}

void sub_10006BC24(uint64_t *a1, uint64_t (*a2)(void))
{
  char *v2;
  uint64_t v3;
  void *v4;
  char *v6;
  NSString v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  Class isa;
  void *v24;
  id v25;
  id v26;

  v3 = *a1;
  v4 = *(void **)&v2[*a1];
  if (v4)
  {
    v6 = v2;
    v26 = v4;
    objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v7);

    objc_msgSend(v26, "setImage:", v8);
    if (qword_1000B6F90 != -1)
      swift_once(&qword_1000B6F90, sub_100041F58);
    objc_msgSend(v26, "setTintColor:", qword_1000BC898);
    objc_msgSend(v6, "addSubview:", v26);
    v9 = (void *)objc_opt_self(NSLayoutConstraint);
    v10 = sub_100006058((uint64_t *)&unk_1000B7590);
    v11 = swift_allocObject(v10, 64, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100088DF0;
    v12 = objc_msgSend(v26, "topAnchor");
    v13 = objc_msgSend(v6, "topAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, 5.0);

    *(_QWORD *)(v11 + 32) = v14;
    v15 = objc_msgSend(v26, "trailingAnchor");
    v16 = objc_msgSend(v6, "trailingAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -5.0);

    *(_QWORD *)(v11 + 40) = v17;
    v18 = objc_msgSend(v26, "widthAnchor");
    v19 = objc_msgSend(v18, "constraintEqualToConstant:", 15.0);

    *(_QWORD *)(v11 + 48) = v19;
    v20 = objc_msgSend(v26, "heightAnchor");
    v21 = objc_msgSend(v20, "constraintEqualToConstant:", 15.0);

    *(_QWORD *)(v11 + 56) = v21;
    specialized Array._endMutation()(v22);
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
    objc_msgSend(v9, "activateConstraints:", isa);

    v24 = *(void **)&v6[v3];
    if (v24)
    {
      v25 = v24;
      objc_msgSend(v25, "setHidden:", (a2() & 1) == 0);

    }
    else
    {

    }
  }
}

uint64_t sub_10006BF84()
{
  uint64_t v0;

  return _s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0((char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "on"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "autoMode"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onRestricted"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onInvalid"), (char)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation), "onDisabled"));
}

char *sub_10006C02C(void *a1, char a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  void *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  void **v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  char v32;
  char v33;
  void *v34;
  unsigned __int8 *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  char v41;
  int v42;
  void *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  id v50;
  void **v51;
  void *v52;
  id v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  char v60;
  char v61;
  uint64_t v62;
  unsigned __int8 *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  void **v67;
  void *v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  void *v74;
  uint64_t v75;
  id v76;
  id v77;
  char v78;
  char v79;
  uint64_t v80;
  char *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  void **v85;
  void *v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  void *v92;
  uint64_t v93;
  id v94;
  id v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  id v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  id v115;
  id v116;
  char v117[24];
  char v118[24];
  objc_super v119;

  v5 = OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_autoModeGlyph;
  v6 = objc_allocWithZone((Class)UIImageView);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation] = a1;
  v8 = a1;

  v119.receiver = v7;
  v119.super_class = (Class)type metadata accessor for ClimateRecirculationServiceButton();
  v9 = (char *)objc_msgSendSuper2(&v119, "init");
  objc_msgSend(v8, "registerObserver:", v9);
  v10 = &v9[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v9[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v118, 1, 0);
  v12 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v10 = 0xD00000000000001BLL;
  *((_QWORD *)v10 + 1) = 0x800000010008EF10;
  v13 = v9;
  if (!v11
    || (v12 != 0xD00000000000001BLL || v11 != 0x800000010008EF10)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x800000010008EF10, v12, v11, 0) & 1) == 0)
  {
    ClimateButton.updateClimateConfiguration()();
  }

  swift_bridgeObjectRelease(v11);
  if (a2 == 1)
  {
    v34 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v35 = v13;
    v36 = objc_msgSend(v34, "configurationWithPointSize:weight:", 6, 14.0);
    v37 = ClimateButton.imageSymbolConfiguration.getter();
    v38 = *(void **)&v35[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration];
    *(_QWORD *)&v35[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = v36;
    v39 = v36;

    v40 = ClimateButton.imageSymbolConfiguration.getter();
    sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
    v41 = static NSObject.== infix(_:_:)(v40);

    if ((v41 & 1) == 0)
      ClimateButton.updateClimateConfiguration()();

    v42 = v35[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
    v35[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
    if (v42 != 1)
    {
      v43 = *(void **)&v35[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
      v44 = v35;
      objc_msgSend(v43, "removeFromSuperview");
      sub_100066C24();

    }
    v45 = qword_1000B6FE0;
    v46 = v35;
    if (v45 != -1)
      swift_once(&qword_1000B6FE0, sub_100047678);
    v116 = v8;
    v47 = (void *)qword_1000BC910;
    v48 = *(void **)algn_1000BC918;
    v49 = qword_1000BC920;
    v50 = objc_msgSend((id)objc_opt_self(UIColor), "systemMintColor");
    if (!v50)
      v50 = v48;
    v51 = (void **)&v46[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    v52 = *(void **)&v46[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    v108 = *(_QWORD *)&v46[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
    v112 = *(void **)&v46[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
    *v51 = v47;
    v51[1] = v50;
    v51[2] = (void *)v49;
    v53 = v47;
    swift_bridgeObjectRetain_n(v49, 2);
    v106 = v53;
    v54 = *v51;
    v55 = v51[1];
    v56 = (uint64_t)v51[2];
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v57 = v54;
    v58 = v55;
    swift_bridgeObjectRetain(v56);
    v59 = v50;
    if ((static NSObject.== infix(_:_:)(v57) & 1) != 0 && (static NSObject.== infix(_:_:)(v58) & 1) != 0)
    {
      sub_10005B490(v56, v108);
      v61 = v60;
      swift_bridgeObjectRelease(v56);

      if ((v61 & 1) != 0)
      {
LABEL_40:

        swift_bridgeObjectRelease(v108);
        swift_bridgeObjectRelease(v49);
        v80 = qword_1000B6FD8;
        v81 = v46;
        if (v80 != -1)
          swift_once(&qword_1000B6FD8, sub_10004765C);
        v82 = (void *)qword_1000BC8F8;
        v83 = (void *)qword_1000BC900;
        v84 = qword_1000BC908;
        v85 = (void **)&v81[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
        v86 = *(void **)&v81[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
        v114 = *(void **)&v81[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8];
        v87 = *(_QWORD *)&v81[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16];
        *v85 = (void *)qword_1000BC8F8;
        v85[1] = v83;
        v85[2] = (void *)v84;
        v88 = v82;
        v89 = v83;
        swift_bridgeObjectRetain_n(v84, 2);
        v110 = v88;
        v90 = v89;
        v91 = *v85;
        v92 = v85[1];
        v93 = (uint64_t)v85[2];
        v94 = v91;
        v95 = v92;
        swift_bridgeObjectRetain(v93);
        if ((static NSObject.== infix(_:_:)(v94) & 1) != 0 && (static NSObject.== infix(_:_:)(v95) & 1) != 0)
        {
          sub_10005B490(v93, v87);
          v97 = v96;
          swift_bridgeObjectRelease(v93);

          if ((v97 & 1) != 0)
            goto LABEL_52;
        }
        else
        {
          swift_bridgeObjectRelease(v93);

        }
        (*(void (**)(void))((swift_isaMask & *(_QWORD *)v81) + 0x228))();
LABEL_52:

        swift_bridgeObjectRelease(v87);
        swift_bridgeObjectRelease(v84);
        v8 = v116;
        goto LABEL_53;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v56);

    }
    (*(void (**)(void))((swift_isaMask & *(_QWORD *)v46) + 0x228))();
    goto LABEL_40;
  }
  if (a2 == 3)
  {
    v14 = v13[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
    v13[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
    if (v14 != 1)
    {
      v15 = *(void **)&v13[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView];
      v16 = v13;
      objc_msgSend(v15, "removeFromSuperview");
      sub_100066C24();

    }
    v17 = qword_1000B6FE0;
    v18 = v13;
    if (v17 != -1)
      swift_once(&qword_1000B6FE0, sub_100047678);
    v115 = v8;
    v19 = (void *)qword_1000BC910;
    v20 = *(void **)algn_1000BC918;
    v21 = qword_1000BC920;
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "systemMintColor");
    if (!v22)
      v22 = v20;
    v23 = (void **)&v18[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    v24 = *(void **)&v18[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor];
    v107 = *(_QWORD *)&v18[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 16];
    v111 = *(void **)&v18[OBJC_IVAR____TtC7Climate15ClimateOnButton_onColor + 8];
    *v23 = v19;
    v23[1] = v22;
    v23[2] = (void *)v21;
    v25 = v19;
    swift_bridgeObjectRetain_n(v21, 2);
    v105 = v25;
    v26 = *v23;
    v27 = v23[1];
    v28 = (uint64_t)v23[2];
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v29 = v26;
    v30 = v27;
    swift_bridgeObjectRetain(v28);
    v31 = v22;
    if ((static NSObject.== infix(_:_:)(v29) & 1) != 0 && (static NSObject.== infix(_:_:)(v30) & 1) != 0)
    {
      sub_10005B490(v28, v107);
      v33 = v32;
      swift_bridgeObjectRelease(v28);

      if ((v33 & 1) != 0)
      {
LABEL_32:

        swift_bridgeObjectRelease(v107);
        swift_bridgeObjectRelease(v21);
        v62 = qword_1000B6FD8;
        v63 = v18;
        if (v62 != -1)
          swift_once(&qword_1000B6FD8, sub_10004765C);
        v64 = (void *)qword_1000BC8F8;
        v65 = (void *)qword_1000BC900;
        v66 = qword_1000BC908;
        v67 = (void **)&v63[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
        v68 = *(void **)&v63[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor];
        v113 = *(void **)&v63[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 8];
        v69 = *(_QWORD *)&v63[OBJC_IVAR____TtC7Climate15ClimateOnButton_offColor + 16];
        *v67 = (void *)qword_1000BC8F8;
        v67[1] = v65;
        v67[2] = (void *)v66;
        v70 = v64;
        v71 = v65;
        swift_bridgeObjectRetain_n(v66, 2);
        v109 = v70;
        v72 = v71;
        v73 = *v67;
        v74 = v67[1];
        v75 = (uint64_t)v67[2];
        v76 = v73;
        v77 = v74;
        swift_bridgeObjectRetain(v75);
        if ((static NSObject.== infix(_:_:)(v76) & 1) != 0 && (static NSObject.== infix(_:_:)(v77) & 1) != 0)
        {
          sub_10005B490(v75, v69);
          v79 = v78;
          swift_bridgeObjectRelease(v75);

          if ((v79 & 1) != 0)
            goto LABEL_48;
        }
        else
        {
          swift_bridgeObjectRelease(v75);

        }
        (*(void (**)(void))((swift_isaMask & *(_QWORD *)v63) + 0x228))();
LABEL_48:

        swift_bridgeObjectRelease(v69);
        swift_bridgeObjectRelease(v66);
        v8 = v115;
        goto LABEL_49;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v28);

    }
    (*(void (**)(void))((swift_isaMask & *(_QWORD *)v18) + 0x228))();
    goto LABEL_32;
  }
LABEL_49:
  v98 = swift_allocObject(&unk_1000A0170, 24, 7);
  swift_unknownObjectWeakInit(v98 + 16, v13);
  v99 = swift_allocObject(&unk_1000A0198, 32, 7);
  *(_QWORD *)(v99 + 16) = v98;
  *(_QWORD *)(v99 + 24) = v8;
  v100 = (uint64_t *)&v13[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v13[OBJC_IVAR____TtC7Climate13ClimateButton_action], v117, 1, 0);
  v101 = *v100;
  v102 = v100[1];
  *v100 = (uint64_t)sub_10006CF88;
  v100[1] = v99;
  v103 = v8;
  sub_100005118(v101, v102);
LABEL_53:
  sub_10006BC24(&OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_autoModeGlyph, (uint64_t (*)(void))sub_10006B700);
  sub_10006CA24();

  return v13;
}

void sub_10006C9AC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    objc_msgSend(a3, "setOn:", objc_msgSend(a3, "on") ^ 1);
    sub_10006CA24();

  }
}

id sub_10006CA24()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  unsigned int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BYTE v11[24];

  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_autoModeGlyph];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, "setHidden:", !sub_10006B700());

  }
  v3 = *(void **)&v0[OBJC_IVAR____TtC7Climate33ClimateRecirculationServiceButton_recirculation];
  v4 = objc_msgSend(v3, "on");
  v5 = &v0[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  if (v4)
  {
    swift_beginAccess(&v0[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v11, 1, 0);
    v6 = *(_QWORD *)v5;
    v7 = *((_QWORD *)v5 + 1);
    *(_QWORD *)v5 = 0xD00000000000001BLL;
    *((_QWORD *)v5 + 1) = 0x800000010008EF10;
    if (v7)
    {
      if (v6 == 0xD00000000000001BLL && v7 == 0x800000010008EF10)
        goto LABEL_14;
      v8 = 0xD00000000000001BLL;
      v9 = 0x800000010008EF10;
      goto LABEL_12;
    }
LABEL_13:
    ClimateButton.updateClimateConfiguration()();
    goto LABEL_14;
  }
  swift_beginAccess(&v0[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v11, 1, 0);
  v6 = *(_QWORD *)v5;
  v7 = *((_QWORD *)v5 + 1);
  *(_QWORD *)v5 = 0xD000000000000017;
  *((_QWORD *)v5 + 1) = 0x800000010008EEF0;
  if (!v7)
    goto LABEL_13;
  if (v6 == 0xD000000000000017 && v7 == 0x800000010008EEF0)
    goto LABEL_14;
  v9 = 0x800000010008EEF0;
  v8 = 0xD000000000000017;
LABEL_12:
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0) & 1) == 0)
    goto LABEL_13;
LABEL_14:
  swift_bridgeObjectRelease(v7);
  sub_10007813C();
  objc_msgSend(v0, "setEnabled:", (_s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0((char)objc_msgSend(v3, "on"), (char)objc_msgSend(v3, "autoMode"), (char)objc_msgSend(v3, "onRestricted"), (char)objc_msgSend(v3, "onInvalid"), (char)objc_msgSend(v3, "onDisabled")) & 0x18) == 0);
  sub_10006CCA0();
  return sub_100066C24();
}

uint64_t sub_10006CCA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  char v16;
  char v17;

  if (!sub_10006B700())
    return sub_100066A90();
  v1 = v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = v2;
  v7 = v3;
  v8 = objc_msgSend(v5, "systemGreenColor", swift_bridgeObjectRetain(v4).n128_f64[0]);
  if (v8)
  {
    v9 = v8;

    v7 = v9;
  }
  v10 = *(void **)v1;
  v11 = *(void **)(v1 + 8);
  v12 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)v1 = v6;
  *(_QWORD *)(v1 + 8) = v7;
  *(_QWORD *)(v1 + 16) = v4;
  v13 = v6;
  swift_bridgeObjectRetain_n(v4, 2);
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v14 = v13;
  v15 = v7;
  if ((static NSObject.== infix(_:_:)(v14) & 1) != 0 && (static NSObject.== infix(_:_:)(v15) & 1) != 0)
  {
    sub_10005B490(v4, v12);
    v17 = v16;
    swift_bridgeObjectRelease(v4);

    if ((v17 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRelease(v4);

  }
  sub_100066C24();
LABEL_11:

  swift_bridgeObjectRelease(v12);
  return swift_bridgeObjectRelease(v4);
}

void sub_10006CE38()
{
  uint64_t v0;

}

id sub_10006CE64()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateRecirculationServiceButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateRecirculationServiceButton()
{
  return objc_opt_self(_TtC7Climate33ClimateRecirculationServiceButton);
}

uint64_t sub_10006CF38()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006CF5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10006CF88(uint64_t a1)
{
  uint64_t v1;

  sub_10006C9AC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10006CF94()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;
  unsigned int v3;
  unsigned __int8 v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_temperature);
  v2 = objc_msgSend(v1, "targetTemperatureRestricted");
  v3 = objc_msgSend(v1, "targetTemperatureInvalid");
  v4 = objc_msgSend(v1, "targetTemperatureDisabled");
  if ((v2 & 1) != 0)
  {
    v5 = 4;
    if (v3)
      v5 = 12;
    if ((v4 & 1) == 0)
      return v5;
    return v5 | 0x10;
  }
  v5 = 8;
  if (!v3)
    v5 = 0;
  if ((v4 & 1) != 0)
    return v5 | 0x10;
  return v5;
}

void sub_10006D0C0(void *a1, char a2, uint64_t a3, char a4, char a5)
{
  char *v5;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  char *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  id v61[3];

  v10 = a4 & 1;
  v11 = sub_100006058(&qword_1000B78D0);
  __chkstk_darwin(v11);
  v60 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100006058((uint64_t *)&unk_1000B7B60);
  __chkstk_darwin(v13);
  v55 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100006058(&qword_1000B7B50);
  v54 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100006058(&qword_1000B7B58);
  v58 = *(_QWORD *)(v17 - 8);
  v59 = v17;
  __chkstk_darwin(v17);
  v57 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_upArrow] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_downArrow] = 0;
  v19 = v5;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v20 = (void *)sub_100018798((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v20 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v19[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_cancellables] = v20;
  v21 = objc_msgSend((id)objc_opt_self(NSUnitTemperature), "celsius");
  sub_100006B04(0, &qword_1000B7CE0, NSUnitTemperature_ptr);
  Measurement.init(value:unit:)(v21, 0.0);
  v19[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_style] = a5;
  *(_QWORD *)&v19[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_temperature] = a1;
  v22 = a1;

  v23 = sub_100012568(a2 & 1, a3, v10);
  v24 = (void *)objc_opt_self(UIColor);
  v25 = v23;
  v26 = objc_msgSend(v24, "clearColor");
  objc_msgSend(v25, "setBackgroundColor:", v26);

  objc_msgSend(v22, "registerObserver:", v25);
  v27 = objc_msgSend(v22, "car");
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, "dimensionManager");

    objc_msgSend(v29, "registerObserver:", v25);
  }
  if (a5 == 5)
  {
    v30 = objc_msgSend(v25, "titleLabel");
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend((id)objc_opt_self(UIFont), "monospacedDigitSystemFontOfSize:weight:", 13.0, UIFontWeightSemibold);
      objc_msgSend(v31, "setFont:", v32);

    }
  }
  else if (a5 == 1)
  {
    sub_10006EF00();
  }
  v33 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v34 = objc_msgSend(v33, "delegate");

  if (v34)
  {
    v35 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v34, v35, 0, 0, 0);
    v36 = (char *)sub_10006B490();
    swift_unknownObjectRelease(v34);
    swift_beginAccess(&v36[OBJC_IVAR____TtC7Climate18ClimateCoordinator__statusBarSteppersState], v61, 33, 0);
    v37 = sub_100006058((uint64_t *)&unk_1000B7BA0);
    Published.projectedValue.getter(v37);
    swift_endAccess(v61);

    v61[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v38 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    v39 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v55, 1, 1, v38);
    v40 = sub_100006B04(0, (unint64_t *)&unk_1000B7B80, NSRunLoop_ptr);
    v41 = sub_10000AA10((unint64_t *)&unk_1000B9CD0, &qword_1000B7B50, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v42 = sub_10000A98C();
    v43 = v56;
    v44 = v57;
    Publisher.receive<A>(on:options:)(v61, v39, v56, v40, v41, v42);
    sub_100008B88(v39, (uint64_t *)&unk_1000B7B60);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v43);
    v45 = swift_allocObject(&unk_1000A01E8, 24, 7);
    swift_unknownObjectWeakInit(v45 + 16, v25);
    v46 = sub_10000AA10((unint64_t *)&unk_1000B7BB0, &qword_1000B7B58, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v47 = v59;
    v48 = Publisher<>.sink(receiveValue:)(sub_10006FB48, v45, v59, v46);
    swift_release(v45);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v47);
    v49 = &v25[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_cancellables];
    swift_beginAccess(&v25[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_cancellables], v61, 33, 0);
    AnyCancellable.store(in:)(v49);
    swift_endAccess(v61);
    swift_release(v48);
    v50 = objc_msgSend(v22, "targetTemperature");
    v51 = (uint64_t)v60;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v50);

    v52 = sub_100006058((uint64_t *)&unk_1000B75B0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
    sub_10006D7A8(v51);
    sub_100008B88(v51, &qword_1000B78D0);
    v53 = objc_msgSend(v25, "traitCollection");
    objc_msgSend(v25, "traitCollectionDidChange:", v53);

  }
  else
  {
    __break(1u);
  }
}

void sub_10006D758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10006D9B4();

  }
}

uint64_t sub_10006D7A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  void (*v19)(_BYTE *, uint64_t);
  _BYTE v20[24];
  _BYTE v21[24];

  v2 = v1;
  v4 = sub_100006058(&qword_1000B78D0);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v20[-v12];
  sub_10001E0F4(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_100008B88((uint64_t)v6, &qword_1000B78D0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v13, v6, v7);
  v15 = v2 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_currentValue;
  swift_beginAccess(v2 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_currentValue, v21, 0, 0);
  v16 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
  v16(v11, v15, v7);
  v17 = sub_10000AA10((unint64_t *)&unk_1000B7CF0, (uint64_t *)&unk_1000B75B0, (uint64_t)&protocol conformance descriptor for Measurement<A>);
  v18 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v11, v7, v17);
  v19 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v19(v11, v7);
  if ((v18 & 1) == 0)
  {
    v16(v11, (uint64_t)v13, v7);
    swift_beginAccess(v15, v20, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 24))(v15, v11, v7);
    swift_endAccess(v20);
    sub_10006DFFC();
    sub_10006E5F4();
    v19(v11, v7);
  }
  return ((uint64_t (*)(_BYTE *, uint64_t))v19)(v13, v7);
}

void sub_10006D9B4()
{
  char *v0;
  void *v1;

  sub_10006DFFC();
  sub_10007813C();
  v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_temperature];
  objc_msgSend(v1, "targetTemperatureRestricted");
  objc_msgSend(v0, "setEnabled:", (objc_msgSend(v1, "targetTemperatureDisabled") | objc_msgSend(v1, "targetTemperatureInvalid")) ^ 1);
  sub_10006E5F4();
  sub_10006DA3C();
}

void sub_10006DA3C()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  char v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t KeyPath;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  id v46;
  uint64_t v47;

  v1 = v0;
  ClimateButton.refreshColorConfig()();
  if (v0[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_style] != 1)
    return;
  v2 = *(void **)&v0[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_upArrow];
  if (!v2)
    return;
  v3 = *(void **)&v0[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_downArrow];
  if (!v3)
    return;
  v4 = *(void **)&v0[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_temperature];
  v5 = v2;
  v6 = v3;
  v7 = objc_msgSend(v4, "targetTemperatureRestricted");
  v8 = objc_msgSend(v4, "targetTemperatureInvalid");
  v9 = objc_msgSend(v4, "targetTemperatureDisabled");
  v46 = v5;
  if (v7)
  {
    if (v8)
      v10 = 12;
    else
      v10 = 4;
    if ((v9 & 1) == 0)
      goto LABEL_15;
LABEL_14:
    v10 |= 0x10u;
    goto LABEL_15;
  }
  if (v8)
    v10 = 8;
  else
    v10 = 0;
  if (v9)
    goto LABEL_14;
LABEL_15:
  v11 = (void *)objc_opt_self(UIApplication);
  v12 = objc_msgSend(v11, "sharedApplication");
  v13 = objc_msgSend(v12, "delegate");

  if (!v13)
  {
    __break(1u);
    goto LABEL_36;
  }
  v14 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v13, v14, 0, 0, 0);
  v15 = sub_10006B490();
  swift_unknownObjectRelease(v13);
  KeyPath = swift_getKeyPath(&unk_10008B370);
  v17 = swift_getKeyPath(&unk_10008B398);
  static Published.subscript.getter(v15, KeyPath, v17);

  swift_release(KeyPath);
  swift_release(v17);
  v18 = objc_msgSend(v11, "sharedApplication");
  v19 = objc_msgSend(v18, "delegate");

  if (!v19)
  {
LABEL_36:
    __break(1u);
    return;
  }
  swift_dynamicCastClassUnconditional(v19, v14, 0, 0, 0);
  v20 = sub_10006B490();
  swift_unknownObjectRelease(v19);
  v21 = swift_getKeyPath(&unk_10008B370);
  v22 = swift_getKeyPath(&unk_10008B398);
  static Published.subscript.getter(v20, v21, v22);

  swift_release(v21);
  swift_release(v22);
  if (v47 == 1)
  {
    v27 = (void *)objc_opt_self(UIColor);
    v28 = objc_msgSend(v27, "labelColor");
    v29 = objc_msgSend(v28, "colorWithAlphaComponent:", 0.3);

    v25 = v46;
    objc_msgSend(v46, "setTintColor:", v29);

    v30 = objc_msgSend(v27, "labelColor");
    v31 = objc_msgSend(v30, "colorWithAlphaComponent:", 0.3);
LABEL_26:
    v33 = v31;

    objc_msgSend(v6, "setTintColor:", v33);
    goto LABEL_27;
  }
  if ((v10 & 0x10) != 0)
  {
    v25 = v46;
    if (qword_1000B6FB8 != -1)
      swift_once(&qword_1000B6FB8, sub_1000420C0);
    objc_msgSend(v46, "setTintColor:", qword_1000BC8C0, v46);
    objc_msgSend(v6, "setTintColor:", qword_1000BC8C0);
    goto LABEL_27;
  }
  v23 = (void *)objc_opt_self(UIColor);
  v24 = objc_msgSend(v23, "systemRedColor");
  v25 = v46;
  if ((v10 & 4) != 0)
  {
    v32 = sub_1000470B4();

    objc_msgSend(v46, "setTintColor:", v32);
    v30 = objc_msgSend(v23, "systemBlueColor");
    v31 = sub_1000470B4();
    goto LABEL_26;
  }
  objc_msgSend(v46, "setTintColor:", v24);

  v26 = objc_msgSend(v23, "systemBlueColor");
  objc_msgSend(v6, "setTintColor:", v26);

LABEL_27:
  objc_msgSend(v1, "setEnabled:", v47 != 1);
  v34 = objc_msgSend(v25, "layer");
  if ((v10 & 0x10) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
    v37 = v36;
    v38 = objc_allocWithZone((Class)CAFilter);
    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
    v35 = objc_msgSend(v38, "initWithType:", v39);

  }
  else
  {
    v35 = 0;
  }
  objc_msgSend(v34, "setCompositingFilter:", v35, v46);

  v40 = objc_msgSend(v6, "layer");
  if ((v10 & 0x10) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterPlusL);
    v43 = v42;
    v44 = objc_allocWithZone((Class)CAFilter);
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v43);
    v41 = objc_msgSend(v44, "initWithType:", v45);

  }
  else
  {
    v41 = 0;
  }
  objc_msgSend(v40, "setCompositingFilter:", v41);

}

uint64_t sub_10006DFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  void *v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  _QWORD *v21;
  uint64_t result;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  _BYTE v47[24];
  _BYTE v48[24];
  _BYTE v49[24];

  v1 = v0;
  v46 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v2 = *(_QWORD *)(v46 - 8);
  v3 = __chkstk_darwin(v46);
  v5 = &v47[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v47[-v6 - 8];
  v8 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_style);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_temperature);
  objc_msgSend(v9, "targetTemperatureRestricted");
  v10 = objc_msgSend(v9, "targetTemperatureInvalid");
  v11 = objc_msgSend(v9, "targetTemperatureDisabled");
  if (v8 == 1)
  {
    if (v10)
    {
      v12 = (_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
      swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v49, 1, 0);
      v13 = v12[1];
      *v12 = 0;
      v12[1] = 0;
      if (v13)
      {
        ClimateButton.updateClimateConfiguration()();
        swift_bridgeObjectRelease(v13);
      }
      v27 = v1 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_currentValue;
      swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_currentValue, v48, 0, 0);
      v28 = v46;
      v29 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16))(v7, v27, v46);
      v30 = Measurement<>.invalidString.getter(v29);
      v32 = v31;
      (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v7, v28);
      v33 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_title);
      result = swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v47, 1, 0);
      v34 = *v33;
      v23 = v33[1];
      *v33 = v30;
      v33[1] = v32;
      if (v32)
      {
        if (v23)
        {
          if (v30 == v34 && v23 == v32)
            return swift_bridgeObjectRelease(v23);
          v36 = v30;
          v37 = v32;
          goto LABEL_42;
        }
LABEL_45:
        ClimateButton.updateClimateConfiguration()();
        return swift_bridgeObjectRelease(v23);
      }
LABEL_44:
      if (!v23)
        return result;
      goto LABEL_45;
    }
    objc_msgSend(v9, "targetTemperatureRestricted");
    objc_msgSend(v9, "targetTemperatureInvalid");
    v16 = objc_msgSend(v9, "targetTemperatureDisabled");
    v17 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
    if (v16)
    {
      swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v49, 1, 0);
      v18 = *v17;
      v19 = v17[1];
      *(_OWORD *)v17 = xmmword_10008AD60;
      if (!v19
        || (v18 == 0x6C6C69662E6E6166 ? (v20 = v19 == 0xE800000000000000) : (v20 = 0),
            !v20
         && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6C6C69662E6E6166, 0xE800000000000000, v18, v19, 0) & 1) == 0))
      {
        ClimateButton.updateClimateConfiguration()();
      }
      swift_bridgeObjectRelease(v19);
      v21 = (_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_title);
      result = swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v48, 1, 0);
      v23 = v21[1];
      *v21 = 0;
      v21[1] = 0;
      goto LABEL_44;
    }
    swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v49, 1, 0);
    v26 = v17[1];
    *v17 = 0;
    v17[1] = 0;
    if (v26)
    {
      ClimateButton.updateClimateConfiguration()();
      swift_bridgeObjectRelease(v26);
    }
  }
  else
  {
    if ((v10 | v11) == 1)
    {
      v14 = (_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_title);
      swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v49, 1, 0);
      v15 = v14[1];
      *v14 = 0;
      v14[1] = 0;
      if (v15)
      {
        ClimateButton.updateClimateConfiguration()();
        swift_bridgeObjectRelease(v15);
      }
      v38 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
      swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v48, 1, 0);
      v34 = *v38;
      v23 = v38[1];
      *v38 = 0xD000000000000012;
      v38[1] = 0x800000010008C940;
      if (!v23)
        goto LABEL_45;
      if (v34 == 0xD000000000000012 && v23 == 0x800000010008C940)
        return swift_bridgeObjectRelease(v23);
      v37 = 0x800000010008C940;
      v36 = 0xD000000000000012;
      goto LABEL_42;
    }
    v24 = (_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
    swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName, v49, 1, 0);
    v25 = v24[1];
    *v24 = 0;
    v24[1] = 0;
    if (v25)
    {
      ClimateButton.updateClimateConfiguration()();
      swift_bridgeObjectRelease(v25);
    }
  }
  v39 = v1 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_currentValue;
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_currentValue, v48, 0, 0);
  v40 = v46;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16))(v5, v39, v46);
  v41 = objc_msgSend(v9, "targetTemperatureRange");
  v42 = Measurement<>.readableString(in:)();
  v44 = v43;

  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v5, v40);
  v45 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_title);
  result = swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_title, v47, 1, 0);
  v34 = *v45;
  v23 = v45[1];
  *v45 = v42;
  v45[1] = v44;
  if (!v44)
    goto LABEL_44;
  if (!v23)
    goto LABEL_45;
  if (v42 == v34 && v44 == v23)
    return swift_bridgeObjectRelease(v23);
  v36 = v42;
  v37 = v44;
LABEL_42:
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, v34, v23, 0) & 1) == 0)
    goto LABEL_45;
  return swift_bridgeObjectRelease(v23);
}

uint64_t sub_10006E5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  char v16;
  int v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t inited;
  unint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char v40;
  char v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  BOOL v50;
  char **v51;
  id v52;
  void *v53;
  void *v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  char v60;
  char v61;
  id v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  BOOL v72;
  char **v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  void *v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  void *v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  id v102;
  char v103;
  char v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  char v111[64];

  v1 = v0;
  v2 = sub_100006058((uint64_t *)&unk_1000B75B0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v105 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v105 - v10;
  v12 = *(void **)(v1 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_temperature);
  v13 = objc_msgSend(v12, "targetTemperatureRestricted");
  v14 = objc_msgSend(v12, "targetTemperatureInvalid");
  v15 = objc_msgSend(v12, "targetTemperatureDisabled");
  if (v13)
  {
    v16 = 4;
    if (v14)
      v16 = 12;
    if ((v15 & 1) == 0)
      goto LABEL_10;
LABEL_9:
    v16 |= 0x10u;
    goto LABEL_10;
  }
  v16 = 8;
  if (!v14)
    v16 = 0;
  if (v15)
    goto LABEL_9;
LABEL_10:
  v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_style);
  if (v17 == 1)
  {
    v18 = (void *)objc_opt_self(UIColor);
    v19 = objc_msgSend(v18, "clearColor");
    v20 = objc_msgSend(v18, "labelColor");
    v110 = v1;
    v21 = v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
    v22 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
    v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
    v24 = *(id *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
    v25 = v22;
    swift_bridgeObjectRetain(v23);
    v26 = objc_msgSend(v18, "labelColor");
    v27 = sub_100006058((uint64_t *)&unk_1000B9CC0);
    inited = swift_initStackObject(v27, v111);
    *(_QWORD *)(inited + 32) = 8;
    *(_OWORD *)(inited + 16) = xmmword_100088D00;
    *(_QWORD *)(inited + 40) = v19;
    *(_QWORD *)(inited + 48) = v20;
    *(_QWORD *)(inited + 56) = &_swiftEmptyDictionarySingleton;
    v29 = sub_10002C0E8(inited);
    swift_setDeallocating(inited);
    v30 = v19;
    v31 = v20;
    v32 = sub_100006058((uint64_t *)&unk_1000B7580);
    swift_arrayDestroy(inited + 32, 1, v32);
    swift_bridgeObjectRelease(v23);

    v33 = *(void **)v21;
    v34 = *(void **)(v21 + 8);
    v35 = *(_QWORD *)(v21 + 16);
    *(_QWORD *)v21 = v24;
    *(_QWORD *)(v21 + 8) = v26;
    *(_QWORD *)(v21 + 16) = v29;
    v36 = v24;
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v37 = v36;
    v38 = v26;
    swift_bridgeObjectRetain_n(v29, 2);
    v39 = v38;
    if ((static NSObject.== infix(_:_:)(v37) & 1) != 0 && (static NSObject.== infix(_:_:)(v39) & 1) != 0)
    {
      sub_10005B490(v29, v35);
      v41 = v40;
      swift_bridgeObjectRelease(v29);

      if ((v41 & 1) != 0)
        goto LABEL_29;
    }
    else
    {
      swift_bridgeObjectRelease(v29);

    }
    sub_10006DA3C();
LABEL_29:

    swift_bridgeObjectRelease(v35);
    return swift_bridgeObjectRelease(v29);
  }
  if ((v16 & 0x1C) != 0 || (v63 = objc_msgSend(v12, "currentTemperature")) == 0)
  {
    v42 = v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
    v43 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
    v44 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
    v45 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
    v46 = (void *)objc_opt_self(UIColor);
    v47 = v43;
    v48 = v44;
    swift_bridgeObjectRetain(v45);
    v49 = objc_msgSend(v46, "clearColor");
    v50 = v17 == 5 || v17 == 0;
    v51 = &selRef_labelColor;
    if (!v50)
      v51 = &selRef_systemWhiteColor;
    v52 = objc_msgSend(v46, *v51);
    if (!v49)
      v49 = v47;

    v53 = *(void **)v42;
    v54 = *(void **)(v42 + 8);
    v55 = *(_QWORD *)(v42 + 16);
    *(_QWORD *)v42 = v49;
    *(_QWORD *)(v42 + 8) = v52;
    *(_QWORD *)(v42 + 16) = v45;
    swift_bridgeObjectRetain_n(v45, 2);
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v56 = v49;
    v57 = v52;
    v58 = v56;
    v59 = v57;
    if ((static NSObject.== infix(_:_:)(v58) & 1) != 0 && (static NSObject.== infix(_:_:)(v59) & 1) != 0)
    {
      sub_10005B490(v45, v55);
      v61 = v60;
      swift_bridgeObjectRelease(v45);

      if ((v61 & 1) != 0)
        goto LABEL_32;
    }
    else
    {
      swift_bridgeObjectRelease(v45);

    }
    sub_10006DA3C();
LABEL_32:

    swift_bridgeObjectRelease(v55);
    return swift_bridgeObjectRelease(v45);
  }
  v64 = v63;
  v108 = sub_100006B04(0, &qword_1000B7CE0, NSUnitTemperature_ptr);
  static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v64);

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v9, v2);
  v110 = v1;
  v65 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
  v66 = *(void **)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
  v105 = v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig;
  v67 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
  v68 = (void *)objc_opt_self(UIColor);
  v69 = v65;
  v70 = v66;
  v107 = v67;
  swift_bridgeObjectRetain(v67);
  v71 = objc_msgSend(v68, "clearColor");
  v72 = v17 == 5 || v17 == 0;
  v73 = &selRef_labelColor;
  if (!v72)
    v73 = &selRef_systemWhiteColor;
  v74 = v68;
  v106 = objc_msgSend(v68, *v73);
  v109 = v71;
  if (!v71)
    v109 = v69;

  v75 = objc_msgSend(v12, "targetTemperature");
  v76 = v108;
  static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v75);

  v77 = sub_10000AA10((unint64_t *)&qword_1000B75C0, (uint64_t *)&unk_1000B75B0, (uint64_t)&protocol conformance descriptor for Measurement<A>);
  LOBYTE(v75) = dispatch thunk of static Comparable.< infix(_:_:)(v6, v11, v2, v77);
  v78 = *(void (**)(char *, uint64_t))(v3 + 8);
  v78(v6, v2);
  if ((v75 & 1) != 0)
  {
    v79 = v105;
    v80 = *(void **)(v105 + 8);
    v81 = *(_QWORD *)(v105 + 16);
    v82 = *(id *)v105;
    v83 = v80;
    swift_bridgeObjectRetain(v81);
    v84 = v74;
    v85 = objc_msgSend(v74, "clearColor");
    v86 = objc_msgSend(v84, "systemBlueColor");
  }
  else
  {
    v87 = objc_msgSend(v12, "targetTemperature");
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v87);

    LOBYTE(v87) = static Measurement.< infix<A, B>(_:_:)(v11, v6, v76, v76, v76);
    v78(v6, v2);
    if ((v87 & 1) == 0)
    {
      v92 = v106;
      v93 = v107;
      v79 = v105;
      goto LABEL_51;
    }
    v79 = v105;
    v88 = *(void **)(v105 + 8);
    v81 = *(_QWORD *)(v105 + 16);
    v82 = *(id *)v105;
    v83 = v88;
    swift_bridgeObjectRetain(v81);
    v89 = v74;
    v85 = objc_msgSend(v74, "clearColor");
    v86 = objc_msgSend(v89, "systemRedColor");
  }
  v90 = v86;
  swift_bridgeObjectRelease(v107);

  v91 = v85;
  if (!v85)
    v91 = v82;
  v109 = v91;
  if (!v90)
  {
    v83 = v83;
    v90 = v83;
  }

  v92 = v90;
  v93 = v81;
LABEL_51:
  v94 = *(void **)v79;
  v95 = *(void **)(v79 + 8);
  v96 = *(_QWORD *)(v79 + 16);
  v97 = v109;
  *(_QWORD *)v79 = v109;
  *(_QWORD *)(v79 + 8) = v92;
  *(_QWORD *)(v79 + 16) = v93;
  v98 = v92;
  sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
  v99 = v97;
  v100 = v98;
  swift_bridgeObjectRetain_n(v93, 2);
  v101 = v99;
  v102 = v100;
  if ((static NSObject.== infix(_:_:)(v101) & 1) != 0 && (static NSObject.== infix(_:_:)(v102) & 1) != 0)
  {
    sub_10005B490(v93, v96);
    v104 = v103;
    swift_bridgeObjectRelease(v93);

    if ((v104 & 1) != 0)
      goto LABEL_57;
  }
  else
  {
    swift_bridgeObjectRelease(v93);

  }
  sub_10006DA3C();
LABEL_57:

  swift_bridgeObjectRelease(v96);
  swift_bridgeObjectRelease(v93);
  return ((uint64_t (*)(char *, uint64_t))v78)(v11, v2);
}

void sub_10006EF00()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  NSString v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  Class v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 5, 12.0);
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = String._bridgeToObjectiveC()();
  v5 = (void *)objc_opt_self(UIImage);
  v6 = objc_msgSend(v5, "systemImageNamed:", v4);

  v43 = v2;
  if (v6)
  {
    v7 = objc_msgSend(v6, "imageWithConfiguration:", v2);

  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v3, "setImage:", v7);

  objc_msgSend(v1, "addSubview:", v3);
  v8 = (void *)objc_opt_self(NSLayoutConstraint);
  v9 = sub_100006058((uint64_t *)&unk_1000B7590);
  v10 = swift_allocObject(v9, 48, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100088C40;
  v11 = objc_msgSend(v3, "topAnchor");
  v12 = objc_msgSend(v1, "topAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, -4.0);

  *(_QWORD *)(v10 + 32) = v13;
  v14 = objc_msgSend(v3, "centerXAnchor");
  v15 = objc_msgSend(v1, "centerXAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v10 + 40) = v16;
  specialized Array._endMutation()(v17);
  v18 = v10;
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v18);
  v41 = v8;
  objc_msgSend(v8, "activateConstraints:", isa);

  v20 = *(void **)&v1[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_upArrow];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_upArrow] = v3;
  v21 = v3;

  v22 = (void *)objc_opt_self(UIColor);
  v23 = objc_msgSend(v22, "systemRedColor");
  objc_msgSend(v21, "setTintColor:", v23);

  v24 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v5, "systemImageNamed:", v25);

  if (v26)
  {
    v27 = v43;
    v28 = objc_msgSend(v26, "imageWithConfiguration:", v43);

  }
  else
  {
    v28 = 0;
    v27 = v43;
  }
  objc_msgSend(v24, "setImage:", v28);

  objc_msgSend(v1, "addSubview:", v24);
  v29 = swift_allocObject(v9, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100088C40;
  v30 = objc_msgSend(v24, "bottomAnchor");
  v31 = objc_msgSend(v1, "bottomAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v31, 4.0);

  *(_QWORD *)(v29 + 32) = v32;
  v33 = objc_msgSend(v24, "centerXAnchor");
  v34 = objc_msgSend(v1, "centerXAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v29 + 40) = v35;
  specialized Array._endMutation()(v36);
  v37 = v29;
  v38 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v37);
  objc_msgSend(v41, "activateConstraints:", v38);

  v39 = *(void **)&v1[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_downArrow];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_downArrow] = v24;
  v40 = v24;

  v42 = objc_msgSend(v22, "systemBlueColor");
  objc_msgSend(v40, "setTintColor:", v42);

}

uint64_t sub_10006F460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_cancellables));
  v1 = v0 + OBJC_IVAR____TtC7Climate27ClimateTemperatureIndicator_currentValue;
  v2 = sub_100006058((uint64_t *)&unk_1000B75B0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_10006F4E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateTemperatureIndicator(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10006F598()
{
  return type metadata accessor for ClimateTemperatureIndicator(0);
}

uint64_t type metadata accessor for ClimateTemperatureIndicator(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9C40;
  if (!qword_1000B9C40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateTemperatureIndicator);
  return result;
}

void sub_10006F5DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "\b";
  v4[2] = "\b";
  v4[3] = &unk_10008B358;
  v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10001DC34(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 784);
  }
}

void sub_10006F9D4()
{
  void *v0;
  NSObject *v1;
  id v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v1 = qword_1000BC938;
  v2 = v0;
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v1, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v4 = 134217984;
    v5 = objc_msgSend(v2, "traitCollection");
    v6 = objc_msgSend(v5, "userInterfaceStyle");

    v7 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, &v8, v4 + 4, v4 + 12);

    _os_log_impl((void *)&_mh_execute_header, v1, v3, "Temperature indicator updated with user interface style: %ld", v4, 0xCu);
    swift_slowDealloc(v4, -1, -1);
  }
  else
  {

  }
  sub_10006E5F4();
  sub_10006DA3C();
}

uint64_t sub_10006FB24()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006FB48(uint64_t a1)
{
  uint64_t v1;

  sub_10006D758(a1, v1);
}

uint64_t sub_10006FB50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for DispatchQoS(0, v4);
  v7 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_managerQueue);
  v10 = swift_allocObject(&unk_1000A02E0, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v1);
  v11 = swift_allocObject(&unk_1000A0420, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_100071E9C;
  v24 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070390;
  aBlock[3] = &unk_1000A0438;
  v12 = _Block_copy(aBlock);
  swift_retain(v10);
  swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v13);
  v22 = _swiftEmptyArrayStorage;
  v14 = sub_1000052AC((unint64_t *)&unk_1000B8380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100006058((uint64_t *)&unk_1000BA1A0);
  v16 = sub_100071E30(&qword_1000B8390, (uint64_t *)&unk_1000BA1A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);
  v17 = v24;
  swift_release(v10);
  swift_release(v17);
  return sub_10007012C();
}

uint64_t sub_10006FD88()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[5];
  uint64_t v9;

  v1 = v0;
  v2 = *(NSObject **)(v0 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_managerQueue);
  v3 = swift_allocObject(&unk_1000A02E0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v1);
  v4 = swift_allocObject(&unk_1000A03D0, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_100071DC8;
  *(_QWORD *)(v4 + 24) = v3;
  v8[4] = sub_100018A88;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10007010C;
  v8[3] = &unk_1000A03E8;
  v5 = _Block_copy(v8);
  v6 = v9;
  swift_retain(v4);
  swift_release(v6);
  dispatch_sync(v2, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 96, 51, 27, 1);
  swift_release(v3);
  result = swift_release(v4);
  if ((v2 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_10006FEB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _BYTE v19[16];
  _BYTE *v20;
  _BYTE v21[24];
  _BYTE v22[32];
  _BYTE v23[24];
  _BYTE v24[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v24, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = (_BYTE *)result;
    if (qword_1000B6FF0 != -1)
      result = swift_once(&qword_1000B6FF0, sub_10005CC1C);
    v4 = qword_1000BC940;
    v5 = static os_log_type_t.default.getter(result);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "reset", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }
    v3[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_climateSystemManagerCreated] = 0;
    v7 = (uint64_t *)&v3[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingServices];
    v8 = swift_beginAccess(&v3[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingServices], v23, 1, 0);
    v9 = *v7;
    __chkstk_darwin(v8);
    v20 = v3;
    swift_bridgeObjectRetain(v9);
    sub_1000718BC(v10, (void (*)(char *, id))sub_100071DE0, (uint64_t)v19, (uint64_t *)&unk_1000B9D60);
    swift_bridgeObjectRelease(v9);
    v11 = *v7;
    *v7 = (uint64_t)&_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(v11);
    v12 = (uint64_t *)&v3[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingAccessories];
    v13 = swift_beginAccess(&v3[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingAccessories], v22, 1, 0);
    v14 = *v12;
    __chkstk_darwin(v13);
    v20 = v3;
    swift_bridgeObjectRetain(v14);
    sub_1000718BC(v15, (void (*)(char *, id))sub_100071EC4, (uint64_t)v19, &qword_1000B9D58);
    swift_bridgeObjectRelease(v14);
    v16 = *v12;
    *v12 = (uint64_t)&_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(v16);
    v3[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_overlayViewControllerDidLoad] = 0;
    v3[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_mainViewControllerDidLoad] = 0;
    v17 = (uint64_t *)&v3[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_emitted];
    swift_beginAccess(&v3[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_emitted], v21, 1, 0);
    v18 = *v17;
    *v17 = (uint64_t)&_swiftEmptyDictionarySingleton;

    return swift_bridgeObjectRelease(v18);
  }
  return result;
}

uint64_t sub_10007010C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_10007012C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v18 = *(_QWORD *)(v1 - 8);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_managerQueue);
  v9 = swift_allocObject(&unk_1000A02E0, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16, v0);
  aBlock[4] = sub_100071DC0;
  v21 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070390;
  aBlock[3] = &unk_1000A0398;
  v10 = _Block_copy(aBlock);
  v11 = swift_retain(v9);
  static DispatchQoS.unspecified.getter(v11);
  v19 = _swiftEmptyArrayStorage;
  v12 = sub_1000052AC((unint64_t *)&unk_1000B8380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v13 = sub_100006058((uint64_t *)&unk_1000BA1A0);
  v14 = sub_100071E30(&qword_1000B8390, (uint64_t *)&unk_1000BA1A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v13, v14, v1, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v21;
  swift_release(v9);
  return swift_release(v15);
}

void sub_100070338(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1000703BC();
    sub_100070620();
    sub_10007091C();

  }
}

uint64_t sub_100070390(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_1000703BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  const char *v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_emitted);
  result = swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_emitted, v16, 0, 0);
  v4 = *v2;
  if (!*(_QWORD *)(*v2 + 16)
    || (result = sub_10005BA7C(0), (v5 & 1) == 0)
    || (*(_BYTE *)(*(_QWORD *)(v4 + 56) + result) & 1) == 0)
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_climateSystemManagerCreated) == 1)
    {
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_overlayViewControllerDidLoad) == 1)
      {
        swift_beginAccess(v2, v15, 33, 0);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
        v14 = *v2;
        *v2 = 0x8000000000000000;
        sub_10002B098(1, 0, isUniquelyReferenced_nonNull_native);
        v7 = *v2;
        *v2 = v14;
        swift_bridgeObjectRelease(v7);
        v8 = swift_endAccess(v15);
        v9 = CAFSignpostEmit_InstantOn(v8);
        if (qword_1000B6FF0 != -1)
          v9 = swift_once(&qword_1000B6FF0, sub_10005CC1C);
        v10 = qword_1000BC940;
        v11 = static os_log_type_t.default.getter(v9);
        result = os_log_type_enabled(v10, v11);
        if ((_DWORD)result)
        {
          v12 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v12 = 0;
          v13 = "emittedInstantOnSignpost";
LABEL_18:
          _os_log_impl((void *)&_mh_execute_header, v10, v11, v13, v12, 2u);
          return swift_slowDealloc(v12, -1, -1);
        }
      }
      else
      {
        if (qword_1000B6FF0 != -1)
          result = swift_once(&qword_1000B6FF0, sub_10005CC1C);
        v10 = qword_1000BC940;
        v11 = static os_log_type_t.default.getter(result);
        result = os_log_type_enabled(v10, v11);
        if ((_DWORD)result)
        {
          v12 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v12 = 0;
          v13 = "overlayViewControllerDidLoad false";
          goto LABEL_18;
        }
      }
    }
    else
    {
      if (qword_1000B6FF0 != -1)
        result = swift_once(&qword_1000B6FF0, sub_10005CC1C);
      v10 = qword_1000BC940;
      v11 = static os_log_type_t.default.getter(result);
      result = os_log_type_enabled(v10, v11);
      if ((_DWORD)result)
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        v13 = "climateSystemManagerCreated false";
        goto LABEL_18;
      }
    }
  }
  return result;
}

uint64_t sub_100070620()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_emitted);
  result = swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_emitted, v18, 0, 0);
  v4 = *v2;
  if (!*(_QWORD *)(*v2 + 16)
    || (result = sub_10005BA7C(1u), (v5 & 1) == 0)
    || (*(_BYTE *)(*(_QWORD *)(v4 + 56) + result) & 1) == 0)
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_climateSystemManagerCreated) == 1)
    {
      v6 = *v2;
      if (*(_QWORD *)(*v2 + 16)
        && (result = sub_10005BA7C(0), (v7 & 1) != 0)
        && *(_BYTE *)(*(_QWORD *)(v6 + 56) + result) == 1)
      {
        if (*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_mainViewControllerDidLoad) == 1)
        {
          swift_beginAccess(v2, v17, 33, 0);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
          v16 = *v2;
          *v2 = 0x8000000000000000;
          sub_10002B098(1, 1u, isUniquelyReferenced_nonNull_native);
          v9 = *v2;
          *v2 = v16;
          swift_bridgeObjectRelease(v9);
          v10 = swift_endAccess(v17);
          v11 = CAFSignpostEmit_Rendered(v10);
          if (qword_1000B6FF0 != -1)
            v11 = swift_once(&qword_1000B6FF0, sub_10005CC1C);
          v12 = qword_1000BC940;
          v13 = static os_log_type_t.default.getter(v11);
          result = os_log_type_enabled(v12, v13);
          if ((_DWORD)result)
          {
            v14 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v14 = 0;
            v15 = "emittedRenderedSignpost";
LABEL_21:
            _os_log_impl((void *)&_mh_execute_header, v12, v13, v15, v14, 2u);
            return swift_slowDealloc(v14, -1, -1);
          }
        }
        else
        {
          if (qword_1000B6FF0 != -1)
            result = swift_once(&qword_1000B6FF0, sub_10005CC1C);
          v12 = qword_1000BC940;
          v13 = static os_log_type_t.default.getter(result);
          result = os_log_type_enabled(v12, v13);
          if ((_DWORD)result)
          {
            v14 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v14 = 0;
            v15 = "mainViewControllerDidLoad false";
            goto LABEL_21;
          }
        }
      }
      else
      {
        if (qword_1000B6FF0 != -1)
          result = swift_once(&qword_1000B6FF0, sub_10005CC1C);
        v12 = qword_1000BC940;
        v13 = static os_log_type_t.default.getter(result);
        result = os_log_type_enabled(v12, v13);
        if ((_DWORD)result)
        {
          v14 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v14 = 0;
          v15 = "emittedInstantOnSignpost false";
          goto LABEL_21;
        }
      }
    }
    else
    {
      if (qword_1000B6FF0 != -1)
        result = swift_once(&qword_1000B6FF0, sub_10005CC1C);
      v12 = qword_1000BC940;
      v13 = static os_log_type_t.default.getter(result);
      result = os_log_type_enabled(v12, v13);
      if ((_DWORD)result)
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        v15 = "climateSystemManagerCreated false";
        goto LABEL_21;
      }
    }
  }
  return result;
}

void sub_10007091C()
{
  _BYTE *v0;
  _BYTE *v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char *v8;
  NSObject *v9;
  _BYTE *v10;
  os_log_type_t v11;
  uint8_t *v12;
  const char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  uint8_t *v18;
  char *v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28[24];
  char v29[24];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_emitted];
  v3 = swift_beginAccess(&v0[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_emitted], v29, 0, 0);
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 16))
  {
    v3 = sub_10005BA7C(2u);
    if ((v5 & 1) != 0 && (*(_BYTE *)(*(_QWORD *)(v4 + 56) + v3) & 1) != 0)
      return;
  }
  if (v1[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_climateSystemManagerCreated] != 1)
  {
    if (qword_1000B6FF0 != -1)
      v3 = swift_once(&qword_1000B6FF0, sub_10005CC1C);
    v14 = qword_1000BC940;
    v15 = static os_log_type_t.default.getter(v3);
    if (!os_log_type_enabled(v14, v15))
      return;
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    v17 = "climateSystemManagerCreated false";
LABEL_21:
    _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
    v18 = v16;
LABEL_22:
    swift_slowDealloc(v18, -1, -1);
    return;
  }
  v6 = *v2;
  if (!*(_QWORD *)(*v2 + 16) || (v3 = sub_10005BA7C(1u), (v7 & 1) == 0) || *(_BYTE *)(*(_QWORD *)(v6 + 56) + v3) != 1)
  {
    if (qword_1000B6FF0 != -1)
      v3 = swift_once(&qword_1000B6FF0, sub_10005CC1C);
    v14 = qword_1000BC940;
    v15 = static os_log_type_t.default.getter(v3);
    if (!os_log_type_enabled(v14, v15))
      return;
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    v17 = "emittedRenderedSignpost false";
    goto LABEL_21;
  }
  v8 = &v1[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingServices];
  swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingServices], v28, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v8 + 16))
  {
    if (qword_1000B6FF0 != -1)
      swift_once(&qword_1000B6FF0, sub_10005CC1C);
    v9 = qword_1000BC940;
    v10 = v1;
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v9, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v12 = 134217984;
      v26 = *(_QWORD *)(*(_QWORD *)v8 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v12 + 4, v12 + 12);

      v13 = "observingServices.count=%ld";
LABEL_29:
      _os_log_impl((void *)&_mh_execute_header, v9, v11, v13, v12, 0xCu);
      v18 = v12;
      goto LABEL_22;
    }
    goto LABEL_30;
  }
  v19 = &v1[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingAccessories];
  swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingAccessories], &v26, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v19 + 16))
  {
    if (qword_1000B6FF0 != -1)
      swift_once(&qword_1000B6FF0, sub_10005CC1C);
    v9 = qword_1000BC940;
    v10 = v1;
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v9, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v12 = 134217984;
      v24 = *(_QWORD *)(*(_QWORD *)v19 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v12 + 4, v12 + 12);

      v13 = "observingAccessories.count=%ld";
      goto LABEL_29;
    }
LABEL_30:

    return;
  }
  swift_beginAccess(v2, &v24, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v23 = *v2;
  *v2 = 0x8000000000000000;
  sub_10002B098(1, 2u, isUniquelyReferenced_nonNull_native);
  v21 = *v2;
  *v2 = v23;
  swift_bridgeObjectRelease(v21);
  swift_endAccess(&v24);
  v22 = CAFSignpostEmit_Finalized(*(_QWORD *)&v1[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_car]);
  if (qword_1000B6FF0 != -1)
    v22 = swift_once(&qword_1000B6FF0, sub_10005CC1C);
  v14 = qword_1000BC940;
  v15 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    v17 = "emittedFinalizedSignpost";
    goto LABEL_21;
  }
}

id sub_100070D78()
{
  char *v0;
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;
  _QWORD *v24;

  v1 = v0;
  v22 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v22 - 8);
  v3 = __chkstk_darwin(v22);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0, v3);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0, v7);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingServices] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingAccessories] = &_swiftEmptyDictionarySingleton;
  v21 = OBJC_IVAR____TtC7Climate22ClimateSignpostManager_managerQueue;
  v20 = sub_100071DF4();
  v13 = v1;
  static DispatchQoS.unspecified.getter(v13);
  v24 = _swiftEmptyArrayStorage;
  v14 = sub_1000052AC(&qword_1000B9D70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v15 = sub_100006058(&qword_1000B9D78);
  v16 = sub_100071E30(qword_1000B9D80, &qword_1000B9D78);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v15, v16, v6, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  v17 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000016, 0x800000010008B3C0, v12, v9, v5, 0);
  *(_QWORD *)&v1[v21] = v17;
  *(_QWORD *)&v13[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_emitted] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v13[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_car] = 0;
  v13[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_overlayViewControllerDidLoad] = 0;
  v13[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_mainViewControllerDidLoad] = 0;
  v13[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_climateSystemManagerCreated] = 0;

  v18 = (objc_class *)type metadata accessor for ClimateSignpostManager();
  v23.receiver = v13;
  v23.super_class = v18;
  return objc_msgSendSuper2(&v23, "init");
}

id sub_100070FEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateSignpostManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateSignpostManager()
{
  return objc_opt_self(_TtC7Climate22ClimateSignpostManager);
}

void sub_1000710A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  __objc2_prot **v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  NSObject *v36;
  char *v37;
  os_log_type_t v38;
  uint8_t *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *Strong;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _BYTE v48[24];
  char v49[24];

  v4 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v49, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    if ((unint64_t)a2 >> 62)
    {
LABEL_35:
      if (a2 < 0)
        v41 = a2;
      else
        v41 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v7 = _CocoaArrayWrapper.endIndex.getter(v41);
      if (v7)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a2);
      if (v7)
      {
LABEL_4:
        v8 = &Strong[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingServices];
        v9 = a2 & 0xC000000000000001;
        v10 = 4;
        v11 = &off_1000AA000;
        v42 = a2 & 0xC000000000000001;
        v43 = a2;
        while (1)
        {
          if (v9)
            v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, a2);
          else
            v12 = *(id *)(a2 + 8 * v10);
          v13 = v12;
          v14 = v10 - 3;
          if (__OFADD__(v10 - 4, 1))
          {
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
          if ((objc_msgSend(v12, (SEL)v11[381]) & 1) != 0)
          {

            if (v14 == v7)
              break;
            goto LABEL_6;
          }
          v15 = v7;
          v16 = objc_msgSend(v13, "uniqueIdentifier");
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          swift_beginAccess(v8, v48, 33, 0);
          a2 = v13;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v8);
          v47 = *(_QWORD **)v8;
          v18 = v47;
          *(_QWORD *)v8 = 0x8000000000000000;
          v19 = (uint64_t)v6;
          v21 = sub_10005BAD4((uint64_t)v6);
          v22 = v18[2];
          v23 = (v20 & 1) == 0;
          v24 = v22 + v23;
          if (__OFADD__(v22, v23))
            goto LABEL_33;
          v25 = v20;
          if (v18[3] >= v24)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v28 = v47;
              if ((v20 & 1) == 0)
                goto LABEL_21;
            }
            else
            {
              sub_10002BA64();
              v28 = v47;
              if ((v25 & 1) == 0)
                goto LABEL_21;
            }
          }
          else
          {
            sub_10002A004(v24, isUniquelyReferenced_nonNull_native);
            v26 = sub_10005BAD4(v19);
            if ((v25 & 1) != (v27 & 1))
            {
              KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v46);
              __break(1u);
              return;
            }
            v21 = v26;
            v28 = v47;
            if ((v25 & 1) == 0)
            {
LABEL_21:
              v28[(v21 >> 6) + 8] |= 1 << v21;
              v6 = (char *)v19;
              (*(void (**)(unint64_t, uint64_t, uint64_t))(v45 + 16))(v28[6] + *(_QWORD *)(v45 + 72) * v21, v19, v46);
              *(_QWORD *)(v28[7] + 8 * v21) = a2;
              v31 = v28[2];
              v32 = __OFADD__(v31, 1);
              v33 = v31 + 1;
              if (v32)
                goto LABEL_34;
              v28[2] = v33;
              goto LABEL_23;
            }
          }
          v29 = v28[7];
          v30 = 8 * v21;

          *(_QWORD *)(v29 + v30) = a2;
          v6 = (char *)v19;
LABEL_23:
          v34 = *(_QWORD *)v8;
          *(_QWORD *)v8 = v28;
          swift_bridgeObjectRelease(v34);
          (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v46);
          swift_endAccess(v48);
          objc_msgSend((id)a2, "registerObserver:", Strong);

          v7 = v15;
          v35 = v14 == v15;
          v9 = v42;
          a2 = v43;
          v11 = &off_1000AA000;
          if (v35)
            break;
LABEL_6:
          ++v10;
        }
      }
    }
    swift_bridgeObjectRelease(a2);
    if (qword_1000B6FF0 != -1)
      swift_once(&qword_1000B6FF0, sub_10005CC1C);
    v36 = qword_1000BC940;
    v37 = Strong;
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v36, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v39 = 134217984;
      v40 = &v37[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingServices];
      swift_beginAccess(&v37[OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingServices], v48, 0, 0);
      v47 = *(_QWORD **)(*(_QWORD *)v40 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v39 + 4, v39 + 12);

      _os_log_impl((void *)&_mh_execute_header, v36, v38, "observingServices.count=%ld", v39, 0xCu);
      swift_slowDealloc(v39, -1, -1);
    }
    else
    {

    }
  }
}

void sub_10007153C(uint64_t a1, void *a2, _QWORD *a3, uint64_t (*a4)(char *, __n128), const char *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  char *v15;
  id v16;
  char *v17;
  __n128 v18;
  void *v19;
  NSObject *v20;
  char *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26[24];

  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v15 = (char *)Strong;
    objc_msgSend(a2, "unregisterObserver:", Strong);
    v16 = objc_msgSend(a2, "uniqueIdentifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v17 = &v15[*a3];
    v18 = swift_beginAccess(v17, &v24, 33, 0);
    v19 = (void *)a4(v13, v18);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_endAccess(&v24);

    if (qword_1000B6FF0 != -1)
      swift_once(&qword_1000B6FF0, sub_10005CC1C);
    v20 = qword_1000BC940;
    v21 = v15;
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v20, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v23 = 134217984;
      v24 = *(_QWORD *)(*(_QWORD *)v17 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v23 + 4, v23 + 12);

      _os_log_impl((void *)&_mh_execute_header, v20, v22, a5, v23, 0xCu);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {

    }
  }
}

uint64_t storeEnumTagSinglePayload for ClimateSignpostManager.Signpost(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1000717F4 + 4 * byte_10008B3C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100071828 + 4 * byte_10008B3C0[v4]))();
}

uint64_t sub_100071828(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100071830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100071838);
  return result;
}

uint64_t sub_100071844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10007184CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100071850(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100071858(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClimateSignpostManager.Signpost()
{
  return &type metadata for ClimateSignpostManager.Signpost;
}

unint64_t sub_100071878()
{
  unint64_t result;

  result = qword_1000B9D48;
  if (!qword_1000B9D48)
  {
    result = swift_getWitnessTable(&unk_10008B440, &type metadata for ClimateSignpostManager.Signpost);
    atomic_store(result, (unint64_t *)&qword_1000B9D48);
  }
  return result;
}

void sub_1000718BC(uint64_t a1, void (*a2)(char *, id), uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  void (*v26)(char *, id);

  v26 = a2;
  v6 = sub_100006058(a4);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v25 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v13 = 0;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v25)
      goto LABEL_23;
    v21 = *(_QWORD *)(v24 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v25)
        goto LABEL_23;
      v21 = *(_QWORD *)(v24 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v25)
          goto LABEL_23;
        v21 = *(_QWORD *)(v24 + 8 * v13);
        if (!v21)
        {
          v13 = v20 + 3;
          if (v20 + 3 >= v25)
            goto LABEL_23;
          v21 = *(_QWORD *)(v24 + 8 * v13);
          if (!v21)
            break;
        }
      }
    }
LABEL_22:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_5:
    v16 = *(_QWORD *)(a1 + 48);
    v17 = type metadata accessor for UUID(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v15, v17);
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v15);
    *(_QWORD *)&v8[*(int *)(v6 + 48)] = v18;
    v19 = v18;
    v26(v8, v19);
    sub_100008B88((uint64_t)v8, a4);
  }
  v22 = v20 + 4;
  if (v22 >= v25)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v25)
      goto LABEL_23;
    v21 = *(_QWORD *)(v24 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100071AEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v24 = a4;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0, v9);
  v12 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtC7Climate22ClimateSignpostManager_managerQueue);
  v15 = swift_allocObject(&unk_1000A02E0, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v4);
  v16 = swift_allocObject(a2, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = a1;
  aBlock[4] = a3;
  v30 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070390;
  aBlock[3] = v24;
  v17 = _Block_copy(aBlock);
  swift_retain(v15);
  static DispatchQoS.unspecified.getter(a1);
  v28 = _swiftEmptyArrayStorage;
  v18 = sub_1000052AC((unint64_t *)&unk_1000B8380, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100006058((uint64_t *)&unk_1000BA1A0);
  v20 = sub_100071E30(&qword_1000B8390, (uint64_t *)&unk_1000BA1A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v19, v20, v8, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v26);
  v21 = v30;
  swift_release(v15);
  swift_release(v21);
  return sub_10007012C();
}

uint64_t sub_100071D1C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100071D44()
{
  uint64_t v0;

  sub_10007153C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), &OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingAccessories, (uint64_t (*)(char *, __n128))sub_100029488, "observingAccessories.count=%ld");
}

uint64_t sub_100071D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100071D84(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100071D90()
{
  uint64_t v0;

  sub_10007153C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), &OBJC_IVAR____TtC7Climate22ClimateSignpostManager_observingServices, (uint64_t (*)(char *, __n128))sub_10002947C, "observingServices.count=%ld");
}

void sub_100071DC0()
{
  uint64_t v0;

  sub_100070338(v0);
}

uint64_t sub_100071DC8()
{
  uint64_t v0;

  return sub_10006FEB8(v0);
}

uint64_t sub_100071DD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100071DE0(int a1, id a2)
{
  uint64_t v2;

  return objc_msgSend(a2, "unregisterObserver:", *(_QWORD *)(v2 + 16));
}

unint64_t sub_100071DF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000BA190;
  if (!qword_1000BA190)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000BA190);
  }
  return result;
}

uint64_t sub_100071E30(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10000A948(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100071E70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100071E9C()
{
  uint64_t v0;

  sub_1000710A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100071ECC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;

  v4[0] = "\b";
  v4[1] = "\b";
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v7 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8 = v5;
    v9 = v5;
    v10 = (char *)&value witness table for Builtin.Int64 + 64;
    v11 = &unk_10008B4B0;
    result = swift_initClassMetadata2(a1, 0, 9, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100071F74()
{
  _QWORD *v0;

  return *((unsigned __int8 *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xA0));
}

uint64_t sub_100071F94(uint64_t result)
{
  _QWORD *v1;

  *((_BYTE *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0xA0)) = result;
  return result;
}

void sub_100071FB4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1000728DC();
}

void sub_100071FD8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1000729D8();

}

void sub_100072024()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setSublayers:", 0);

  sub_100072070();
  sub_1000722B8();
}

void sub_100072070()
{
  _QWORD *v0;
  double v1;
  double v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v1 = sub_100072234();
  v3 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, v1, v2, *(double *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x98)), 0.0, 6.28318531);
  v4 = *(void **)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x78));
  v5 = objc_msgSend(v3, "CGPath");
  objc_msgSend(v4, "setPath:", v5);

  v6 = *(void **)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x68));
  if (v6)
    v7 = objc_msgSend(v6, "CGColor");
  else
    v7 = 0;
  objc_msgSend(v4, "setStrokeColor:", v7);

  v8 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v9 = objc_msgSend(v8, "CGColor");

  objc_msgSend(v4, "setFillColor:", v9);
  v10 = objc_msgSend(v0, "layer");
  objc_msgSend(v10, "addSublayer:", v4);

}

double sub_100072234()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;

  objc_msgSend(v0, "center");
  v2 = v1;
  v4 = v3;
  v5 = objc_msgSend(v0, "superview");
  objc_msgSend(v0, "convertPoint:fromView:", v5, v2, v4);
  v7 = v6;

  return v7;
}

void sub_1000722B8()
{
  _QWORD *v0;
  double v1;
  double v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v1 = sub_100072234();
  v3 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, v1, v2, *(double *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x98)), -1.57079633, 4.71238898);
  v4 = *(void **)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x80));
  objc_msgSend(v4, "setLineCap:", kCALineCapRound);
  v5 = objc_msgSend(v3, "CGPath");
  objc_msgSend(v4, "setPath:", v5);

  LODWORD(v6) = 0;
  objc_msgSend(v4, "setShadowOpacity:", v6);
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v8 = objc_msgSend(v7, "CGColor");

  objc_msgSend(v4, "setFillColor:", v8);
  v9 = *(void **)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x60));
  if (v9)
    v10 = objc_msgSend(v9, "CGColor");
  else
    v10 = 0;
  objc_msgSend(v4, "setStrokeColor:", v10);

  v11 = objc_msgSend(v0, "layer");
  objc_msgSend(v11, "addSublayer:", v4);

}

void sub_1000724BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  objc_super v13;

  v6 = (objc_class *)type metadata accessor for ClimateProgressCircle(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v13.receiver = v4;
  v13.super_class = v6;
  objc_msgSendSuper2(&v13, "traitCollectionDidChange:", a1);
  v7 = *(void **)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x80));
  v8 = *(void **)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x60));
  if (v8)
    v9 = objc_msgSend(v8, "CGColor");
  else
    v9 = 0;
  objc_msgSend(v7, "setStrokeColor:", v9);

  v10 = *(void **)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x78));
  v11 = *(void **)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0x68));
  if (v11)
    v12 = objc_msgSend(v11, "CGColor");
  else
    v12 = 0;
  objc_msgSend(v10, "setStrokeColor:", v12);

}

void sub_1000725D0(void *a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = a3;
  v8 = a1;
  sub_1000724BC((uint64_t)a3, (uint64_t)v8, v6, v7);

}

id sub_100072628(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  objc_class *v10;
  id v11;
  _QWORD *v12;
  id v13;
  char v14;
  objc_super v16;

  v10 = (objc_class *)type metadata accessor for ClimateProgressCircle(0, *(_QWORD *)((swift_isaMask & *v6) + 0x50), *(_QWORD *)((swift_isaMask & *v6) + 0x58), a6);
  v16.receiver = v6;
  v16.super_class = v10;
  v11 = objc_msgSendSuper2(&v16, "hitTest:withEvent:", a1, a2, a3);
  if (v11)
  {
    sub_100072A58();
    v12 = v6;
    v13 = v11;
    v14 = static NSObject.== infix(_:_:)(v13);

    if ((v14 & 1) != 0)
    {

      return 0;
    }
  }
  return v11;
}

id sub_100072700(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v9 = a5;
  v10 = a1;
  v14 = sub_100072628((uint64_t)a5, a2, a3, v11, v12, v13);

  return v14;
}

void sub_100072768()
{
  sub_100072A2C();
}

id sub_100072784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for ClimateProgressCircle(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_1000727D0(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v5)(char *, uint64_t);

  v2 = swift_isaMask & *(_QWORD *)a1;

  v3 = *(_QWORD *)(v2 + 80);
  v5 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v5(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x70)], v3);

  v5(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x88)], v3);
  return ((uint64_t (*)(char *, uint64_t))v5)(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0x90)], v3);
}

uint64_t type metadata accessor for ClimateProgressCircle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100072A94(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ClimateProgressCircle);
}

void sub_1000728DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x60)) = 0;
  *(_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0x68)) = 0;
  v1 = *(_QWORD *)((swift_isaMask & *v0) + 0x78);
  *(_QWORD *)((char *)v0 + v1) = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v2 = *(_QWORD *)((swift_isaMask & *v0) + 0x80);
  *(_QWORD *)((char *)v0 + v2) = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  *((_BYTE *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xA0)) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x800000010008BA30, "Climate/ClimateProgressCircle.swift", 35, 2, 67, 0);
  __break(1u);
}

void sub_1000729D8()
{
  _QWORD *v0;

  if ((*((_BYTE *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xA0)) & 1) == 0)
  {
    sub_100072024();
    *((_BYTE *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xA0)) = 1;
  }
}

void sub_100072A2C()
{
  _swift_stdlib_reportUnimplementedInitializer("Climate.ClimateProgressCircle", 29, "init(frame:)", 12, 0);
  __break(1u);
}

unint64_t sub_100072A58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1000B75A0;
  if (!qword_1000B75A0)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1000B75A0);
  }
  return result;
}

uint64_t sub_100072A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_100072AC0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_100075BC0(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_100072C78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native)
  {
    v8 = v3[3] >> 1;
    if (v8 >= v5)
    {
      if (*(_QWORD *)(a1 + 16))
        goto LABEL_5;
      goto LABEL_18;
    }
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_10007A954(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = v3[3] >> 1;
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v9 = v3[2];
  if (v8 - v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v2 && v10 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  sub_100006058(&qword_1000B9978);
  swift_arrayInitWithCopy(v10);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v2);
  v14 = v12 + v2;
  if (!v13)
  {
    v3[2] = v14;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100072DE0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;
  char v26;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_10007AB6C(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for CAUVehicleLayoutKey(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100072F54(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_100075DD4(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_10007310C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD **v6;
  _QWORD *v7;
  void (*v8)(uint64_t, uint64_t);
  _QWORD *v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _BYTE v16[24];

  v3 = v2;
  v6 = (_QWORD **)(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
  swift_beginAccess(v6, v16, 0, 0);
  v7 = *v6;
  v8 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v7) + 0x150);
  swift_bridgeObjectRetain(a2);
  v9 = v7;
  v8(a1, a2);

  v10 = (uint64_t *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton)
                  + OBJC_IVAR____TtC7Climate13ClimateButton_title);
  result = swift_beginAccess(v10, &v15, 1, 0);
  v12 = *v10;
  v13 = v10[1];
  *v10 = a1;
  v10[1] = a2;
  if (a2)
  {
    if (v13)
    {
      v14 = v12 == a1 && v13 == a2;
      if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v12, v13, 0) & 1) != 0)
        return swift_bridgeObjectRelease(v13);
    }
  }
  else if (!v13)
  {
    return result;
  }
  ClimateButton.updateClimateConfiguration()();
  return swift_bridgeObjectRelease(v13);
}

uint64_t sub_100073220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void **v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  BOOL v12;
  uint64_t *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];

  v3 = v2;
  v6 = (void **)(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
  swift_beginAccess(v6, v20, 0, 0);
  v7 = *v6;
  v8 = (uint64_t *)((char *)*v6 + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
  swift_beginAccess(v8, v19, 1, 0);
  v10 = *v8;
  v9 = v8[1];
  *v8 = a1;
  v8[1] = a2;
  v11 = v7;
  swift_bridgeObjectRetain(a2);
  if (a2)
  {
    if (v9)
    {
      v12 = v10 == a1 && v9 == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v10, v9, 0) & 1) != 0)
        goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v9)
  {
LABEL_10:
    ClimateButton.updateClimateConfiguration()();
LABEL_11:

    swift_bridgeObjectRelease(v9);
    goto LABEL_12;
  }

LABEL_12:
  v13 = (uint64_t *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton)
                  + OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName);
  result = swift_beginAccess(v13, v18, 1, 0);
  v15 = *v13;
  v16 = v13[1];
  *v13 = a1;
  v13[1] = a2;
  if (a2)
  {
    if (v16)
    {
      v17 = v15 == a1 && v16 == a2;
      if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v15, v16, 0) & 1) != 0)
        return swift_bridgeObjectRelease(v16);
    }
  }
  else if (!v16)
  {
    return result;
  }
  ClimateButton.updateClimateConfiguration()();
  return swift_bridgeObjectRelease(v16);
}

void sub_100073388()
{
  _QWORD *v0;
  _QWORD *v1;
  char v2;
  void *v3;
  double v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BOOL8 v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v15;
  _BOOL8 v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char v21;
  _BOOL8 v22;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x140))();
  if ((v2 & 0x1A) != 0)
  {
    v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillView);
    if (!v3)
      goto LABEL_8;
    v4 = 0.0;
    goto LABEL_7;
  }
  if ((v2 & 1) != 0)
  {
    v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillView);
    if (v3)
    {
      v4 = 1.0;
LABEL_7:
      objc_msgSend(v3, "setAlpha:", v4);
    }
  }
LABEL_8:
  v5 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton);
  sub_10007813C();
  v6 = *(uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  if (v6)
  {
    v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
    v8 = swift_retain(v7);
    v9 = v6(v8);
    sub_100005118((uint64_t)v6, v7);
    if ((v9 & 0x10) != 0)
    {
      v10 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    v9 = 0;
  }
  v10 = (v9 & 8) == 0;
LABEL_13:
  objc_msgSend(v5, "setEnabled:", v10);
  ClimateButton.refreshColorConfig()();
  v11 = *(char **)((char *)v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton);
  sub_10007813C();
  v12 = *(uint64_t (**)(uint64_t))&v11[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  if (v12)
  {
    v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
    v14 = swift_retain(v13);
    v15 = v12(v14);
    sub_100005118((uint64_t)v12, v13);
    if ((v15 & 0x10) != 0)
    {
      v16 = 0;
      goto LABEL_18;
    }
  }
  else
  {
    v15 = 0;
  }
  v16 = (v15 & 8) == 0;
LABEL_18:
  objc_msgSend(v11, "setEnabled:", v16);
  ClimateButton.refreshColorConfig()();
  v17 = *(char **)((char *)v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton);
  sub_10007813C();
  v18 = *(uint64_t (**)(uint64_t))&v17[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  if (!v18)
  {
    v21 = 0;
    goto LABEL_22;
  }
  v19 = *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
  v20 = swift_retain(v19);
  v21 = v18(v20);
  sub_100005118((uint64_t)v18, v19);
  if ((v21 & 0x10) == 0)
  {
LABEL_22:
    v22 = (v21 & 8) == 0;
    goto LABEL_23;
  }
  v22 = 0;
LABEL_23:
  objc_msgSend(v17, "setEnabled:", v22);
  ClimateButton.refreshColorConfig()();
  ClimateStepper.updatePresentation()();
}

void sub_100073588()
{
  sub_100074C5C();
}

uint64_t sub_1000735A8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue);
}

void sub_1000735B8(unsigned __int8 a1)
{
  _QWORD *v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  os_log_type_t v6;
  _QWORD *v7;
  NSObject *v8;
  uint8_t *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD v15[5];
  uint64_t v16;

  v2 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue;
  v3 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue);
  *((_BYTE *)v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue) = a1;
  if (v3 != a1)
  {
    v4 = v1;
    v5 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x3C0))();
    if ((v5 & 1) == 0)
    {
      v6 = static os_log_type_t.default.getter(v5);
      sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
      v7 = v1;
      v8 = static OS_os_log.default.getter(v7);
      if (os_log_type_enabled(v8, v6))
      {
        v9 = (uint8_t *)swift_slowAlloc(5, -1);
        *(_DWORD *)v9 = 16777472;
        LOBYTE(v15[0]) = *((_BYTE *)v4 + v2);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v15, (char *)v15 + 1, v9 + 4, v9 + 5);

        _os_log_impl((void *)&_mh_execute_header, v8, v6, "ContinuousSlider updated currentValue: %hhu", v9, 5u);
        swift_slowDealloc(v9, -1, -1);
      }
      else
      {

      }
      v10 = (void *)objc_opt_self(UIView);
      v11 = swift_allocObject(&unk_1000A05D0, 24, 7);
      *(_QWORD *)(v11 + 16) = v7;
      v15[4] = sub_100076A48;
      v16 = v11;
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 1107296256;
      v15[2] = sub_100070390;
      v15[3] = &unk_1000A05E8;
      v12 = _Block_copy(v15);
      v13 = v16;
      v14 = v7;
      swift_release(v13);
      objc_msgSend(v10, "animateWithDuration:delay:options:animations:completion:", 2, v12, 0, 0.25, 0.0);
      _Block_release(v12);
    }
  }
}

uint64_t sub_100073798()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding);
}

uint64_t sub_1000737A8(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding) = result;
  return result;
}

double sub_1000737B8()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_arrowsHeight);
}

void sub_1000737CC(double a1)
{
  sub_1000737F8(&OBJC_IVAR____TtC7Climate14ClimateStepper_arrowsHeight, a1);
}

double sub_1000737D8()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButtonHeight);
}

void sub_1000737EC(double a1)
{
  sub_1000737F8(&OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButtonHeight, a1);
}

void sub_1000737F8(_QWORD *a1, double a2)
{
  uint64_t v2;
  double v3;
  _QWORD *v4;
  _BYTE v5[24];

  v3 = *(double *)(v2 + *a1);
  *(double *)(v2 + *a1) = a2;
  if (v3 != a2)
  {
    v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis);
    swift_beginAccess(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis, v5, 0, 0);
    if (*v4 == 1)
      ClimateStepper.updateConstraintsAndArrows()();
  }
  sub_100074A8C();
}

double sub_100073864()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_arrowsWidth);
}

double sub_100073878()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButtonWidth);
}

char *sub_10007388C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  _BYTE *v6;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  id v17;
  unsigned __int8 v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  char v74[24];
  char v75[24];

  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillViewProgressConstraint] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_lastSlideValue] = 0;
  v6[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding] = 0;
  v13 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton;
  v14 = v6;
  *(_QWORD *)&v6[v13] = sub_10005C2E4();
  v15 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton;
  *(_QWORD *)&v14[v15] = sub_10005C2E4();
  *(_QWORD *)&v14[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskConstraints] = _swiftEmptyArrayStorage;
  v72 = a1;
  v73 = a2;
  v69 = a3;
  v70 = a4;
  v16 = sub_1000762B8(a1, a2, a3, a4);
  *(_QWORD *)&v14[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton] = sub_1000762B8(a1, a2, a3, a4);
  v17 = objc_msgSend(a6, "minimum");
  v18 = objc_msgSend(v17, "unsignedCharValue");

  v14[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue] = v18;
  v19 = v16;
  v71 = a6;
  v20 = v19;
  v68 = v19;
  v21 = ClimateStepper.init(primaryButton:axis:range:)(v19, a5, v71);
  v22 = swift_allocObject(&unk_1000A0620, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, v21);
  v23 = (uint64_t *)&v20[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  v25 = *(_QWORD *)&v20[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  v24 = *(_QWORD *)&v20[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
  *v23 = (uint64_t)sub_100076ACC;
  v23[1] = v22;
  v26 = v21;
  sub_100005118(v25, v24);
  v27 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton;
  v28 = OBJC_IVAR____TtC7Climate14ClimateStepper_upButton;
  v29 = (uint64_t *)(*(_QWORD *)&v26[OBJC_IVAR____TtC7Climate14ClimateStepper_upButton]
                  + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock);
  v30 = *v29;
  v31 = v29[1];
  v32 = (uint64_t *)(*(_QWORD *)&v26[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton]
                  + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock);
  v33 = *v32;
  v34 = v32[1];
  *v32 = *v29;
  v32[1] = v31;
  sub_10001BDD0(v30, v31);
  sub_100005118(v33, v34);
  v35 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton;
  v36 = OBJC_IVAR____TtC7Climate14ClimateStepper_downButton;
  v37 = (uint64_t *)(*(_QWORD *)&v26[OBJC_IVAR____TtC7Climate14ClimateStepper_downButton]
                  + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock);
  v38 = *v37;
  v39 = v37[1];
  v40 = (uint64_t *)(*(_QWORD *)&v26[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton]
                  + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock);
  v41 = *v40;
  v42 = v40[1];
  *v40 = *v37;
  v40[1] = v39;
  sub_10001BDD0(v38, v39);
  sub_100005118(v41, v42);
  v43 = *v23;
  v44 = v23[1];
  v45 = (uint64_t *)(*(_QWORD *)&v26[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton]
                  + OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock);
  v46 = *v45;
  v47 = v45[1];
  *v45 = *v23;
  v45[1] = v44;
  sub_10001BDD0(v43, v44);
  sub_100005118(v46, v47);
  v48 = *(_QWORD *)&v26[v27];
  v49 = swift_allocObject(&unk_1000A0620, 24, 7);
  swift_unknownObjectWeakInit(v49 + 16, v26);
  v50 = (uint64_t *)(v48 + OBJC_IVAR____TtC7Climate13ClimateButton_action);
  swift_beginAccess(v48 + OBJC_IVAR____TtC7Climate13ClimateButton_action, v75, 1, 0);
  v51 = *v50;
  v52 = v50[1];
  *v50 = (uint64_t)sub_100076AD4;
  v50[1] = v49;
  sub_100005118(v51, v52);
  v53 = *(_QWORD *)&v26[v35];
  v54 = swift_allocObject(&unk_1000A0620, 24, 7);
  swift_unknownObjectWeakInit(v54 + 16, v26);
  v55 = (uint64_t *)(v53 + OBJC_IVAR____TtC7Climate13ClimateButton_action);
  swift_beginAccess(v53 + OBJC_IVAR____TtC7Climate13ClimateButton_action, v74, 1, 0);
  v56 = *v55;
  v57 = v55[1];
  *v55 = (uint64_t)sub_100076AF4;
  v55[1] = v54;
  sub_100005118(v56, v57);
  v58 = *(_QWORD *)&v26[v28];
  v59 = *(_QWORD *)&v26[v27];
  v60 = v58 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate;
  *(_QWORD *)(v60 + 8) = &off_10009E6A8;
  swift_unknownObjectWeakAssign(v60, v59);
  v61 = v59 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate;
  *(_QWORD *)(v61 + 8) = &off_10009E6A8;
  swift_unknownObjectWeakAssign(v61, v58);
  v62 = *(_QWORD *)&v26[v36];
  v63 = *(_QWORD *)&v26[v35];
  v64 = v62 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate;
  *(_QWORD *)(v64 + 8) = &off_10009E6A8;
  swift_unknownObjectWeakAssign(v64, v63);
  v65 = v63 + OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate;
  *(_QWORD *)(v65 + 8) = &off_10009E6A8;
  swift_unknownObjectWeakAssign(v65, v62);
  sub_10007310C(v69, v70);
  sub_100073220(v72, v73);
  sub_100074200();
  v66 = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "initWithTarget:action:", v26, "didSlide:");
  objc_msgSend(v26, "addGestureRecognizer:", v66);
  sub_1000747F0();

  return v26;
}

uint64_t sub_100073CA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *Strong;
  uint64_t (*v3)(void);
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return 0;
  v3 = *(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x140);
  v4 = Strong;
  v5 = v3();

  return v5;
}

void sub_100073D24(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  char *v7;
  char *v8;
  void (*v9)(void);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(char **)(Strong + *a3);
    v8 = &v7[OBJC_IVAR____TtC7Climate13ClimateButton_action];
    swift_beginAccess(&v7[OBJC_IVAR____TtC7Climate13ClimateButton_action], &v12, 0, 0);
    v9 = *(void (**)(void))v8;
    if (*(_QWORD *)v8)
    {
      v10 = *((_QWORD *)v8 + 1);
      sub_10001BDD0((uint64_t)v9, v10);
      v11 = v7;
      v9();

      sub_100005118((uint64_t)v9, v10);
      v6 = v11;
    }

  }
}

void sub_100073DE0()
{
  objc_class *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillViewProgressConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_lastSlideValue] = 0;
  v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding] = 0;
  v2 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton;
  *(_QWORD *)&v1[v2] = sub_10005C2E4();
  v3 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton;
  *(_QWORD *)&v1[v3] = sub_10005C2E4();
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskConstraints] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000038, 0x800000010008C330, "Climate/ClimateContinousStepper.swift", 37, 2, 165, 0);
  __break(1u);
}

id sub_100073EB0()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  char *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v31;
  char v32[24];
  char v33[24];
  char v34[24];
  objc_super v35;

  v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)type metadata accessor for ClimateContinuousStepper();
  v2 = objc_msgSendSuper2(&v35, "layoutSubviews");
  if (((*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x3C0))(v2) & 1) == 0)
    sub_100074C5C();
  v3 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton);
  v4 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
  v5 = &v4[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v4[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v34, 0, 0);
  v6 = *(_QWORD *)v5;
  v7 = *((_QWORD *)v5 + 1);
  v8 = &v3[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v3[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v33, 1, 0);
  v10 = *(_QWORD *)v8;
  v9 = *((_QWORD *)v8 + 1);
  *(_QWORD *)v8 = v6;
  *((_QWORD *)v8 + 1) = v7;
  swift_bridgeObjectRetain(v7);
  if (v7)
  {
    if (v9)
    {
      v11 = v6 == v10 && v7 == v9;
      if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v10, v9, 0) & 1) != 0)
        goto LABEL_13;
    }
  }
  else if (!v9)
  {
    goto LABEL_14;
  }
  ClimateButton.updateClimateConfiguration()();
LABEL_13:
  swift_bridgeObjectRelease(v9);
LABEL_14:
  v12 = ClimateButton.imageSymbolConfiguration.getter();
  v13 = ClimateButton.imageSymbolConfiguration.getter();
  v14 = *(void **)&v3[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration];
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = v12;
  v15 = v12;

  v16 = ClimateButton.imageSymbolConfiguration.getter();
  sub_100006B04(0, (unint64_t *)&unk_1000B9190, UIImageSymbolConfiguration_ptr);
  LOBYTE(v14) = static NSObject.== infix(_:_:)(v16);

  if ((v14 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();

  objc_msgSend(v4, "imageEdgeInsets");
  objc_msgSend(v3, "setImageEdgeInsets:");
  v17 = *(char **)((char *)v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton);
  v18 = *(char **)((char *)v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
  v19 = &v18[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v18[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], v32, 0, 0);
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = &v17[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v17[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], &v31, 1, 0);
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v22 = v20;
  *((_QWORD *)v22 + 1) = v21;
  swift_bridgeObjectRetain(v21);
  if (v21)
  {
    if (v23
      && (v20 == v24 && v21 == v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, v24, v23, 0) & 1) != 0))
    {
      goto LABEL_24;
    }
  }
  else if (!v23)
  {
    goto LABEL_25;
  }
  ClimateButton.updateClimateConfiguration()();
LABEL_24:
  swift_bridgeObjectRelease(v23);
LABEL_25:
  v25 = ClimateButton.imageSymbolConfiguration.getter();
  v26 = ClimateButton.imageSymbolConfiguration.getter();
  v27 = *(void **)&v17[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration];
  *(_QWORD *)&v17[OBJC_IVAR____TtC7Climate13ClimateButton____lazy_storage___imageSymbolConfiguration] = v25;
  v28 = v25;

  v29 = ClimateButton.imageSymbolConfiguration.getter();
  LOBYTE(v27) = static NSObject.== infix(_:_:)(v29);

  if ((v27 & 1) == 0)
    ClimateButton.updateClimateConfiguration()();

  objc_msgSend(v18, "imageEdgeInsets");
  return objc_msgSend(v17, "setImageEdgeInsets:");
}

void sub_100074200()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  char *v4;
  char **v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  Class isa;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char v52[24];

  v1 = v0;
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend((id)objc_opt_self(MTMaterialView), "materialViewWithVisualStyleFromRecipe:category:style:options:initialWeighting:compatibleWithTraitCollection:", 4, 2, 4, 0, v2, 1.0);

  if (!v3)
    return;
  v4 = &v1[OBJC_IVAR____TtC7Climate14ClimateStepper_axis];
  swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate14ClimateStepper_axis], v52, 0, 0);
  v5 = &selRef_heightAnchor;
  if (*(_QWORD *)v4 != 1)
    v5 = &selRef_widthAnchor;
  v6 = objc_msgSend(v3, *v5);
  v7 = objc_msgSend(v6, "constraintEqualToConstant:", 0.0);

  v8 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillViewProgressConstraint;
  v9 = *(void **)&v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillViewProgressConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillViewProgressConstraint] = v7;

  objc_msgSend(v1, "addSubview:", v3);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v3, "setClipsToBounds:", 1);
  objc_msgSend(v3, "setUserInteractionEnabled:", 1);
  v10 = *(_QWORD *)v4;
  v11 = objc_msgSend(v3, "leadingAnchor");
  v12 = objc_msgSend(v1, "leadingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  if (v10 == 1)
  {
    v14 = objc_msgSend(v3, "trailingAnchor");
    v15 = objc_msgSend(v1, "trailingAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

    v17 = objc_msgSend(v3, "bottomAnchor");
    v18 = objc_msgSend(v1, "bottomAnchor");
    v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v48 = _swiftEmptyArrayStorage;
      else
        v48 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      v49 = _CocoaArrayWrapper.endIndex.getter(v48);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v21 = v49 + 3;
      if (!__OFADD__(v49, 3))
        goto LABEL_11;
    }
    else
    {
      v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
      v21 = v20 + 3;
      if (!__OFADD__(v20, 3))
        goto LABEL_11;
    }
    __break(1u);
  }
  v22 = objc_msgSend(v3, "topAnchor");
  v23 = objc_msgSend(v1, "topAnchor");
  v16 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  v24 = objc_msgSend(v3, "bottomAnchor");
  v25 = objc_msgSend(v1, "bottomAnchor");
  v19 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v50 = _swiftEmptyArrayStorage;
    else
      v50 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v51 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v21 = v51 + 3;
    if (!__OFADD__(v51, 3))
      goto LABEL_11;
LABEL_34:
    __break(1u);
    return;
  }
  v26 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
  v21 = v26 + 3;
  if (__OFADD__(v26, 3))
    goto LABEL_34;
LABEL_11:
  v27 = sub_1000761FC(v21, 1);
  specialized Array._endMutation()(v27);
  v28 = v13;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v29 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v30 >= v29 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
  v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v28);
  specialized Array._endMutation()(v31);
  v32 = v16;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
  v34 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v33 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v34 >= v33 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
  v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v32);
  specialized Array._endMutation()(v35);
  v36 = v19;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
  v38 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v38 >= v37 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
  v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
  specialized Array._endMutation()(v39);

  v40 = *(void **)&v1[v8];
  if (v40)
  {
    v41 = v40;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
    v43 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v42 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v43 >= v42 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
    v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
    specialized Array._endMutation()(v44);

  }
  v45 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  objc_msgSend(v45, "activateConstraints:", isa);

  v47 = *(void **)&v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillView] = v3;

}

void sub_1000747F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  char *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  char v28;
  char v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char v34[56];

  v1 = sub_100006058((uint64_t *)&unk_1000B7590);
  inited = swift_initStackObject(v1, v34);
  *(_OWORD *)(inited + 16) = xmmword_100088E10;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton);
  *(_QWORD *)(inited + 32) = v3;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton);
  *(_QWORD *)(inited + 40) = v4;
  v32 = v0;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton);
  *(_QWORD *)(inited + 48) = v5;
  v33 = inited;
  specialized Array._endMutation()(inited);
  if ((v33 & 0xC000000000000001) != 0 || *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    v6 = v3;
    v7 = v4;
    v8 = v5;
    v31 = (id)objc_opt_self(UIColor);
    sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
    v9 = 0;
    v30 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillView;
    while (1)
    {
      if ((v33 & 0xC000000000000001) != 0)
        v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v33);
      else
        v10 = (char *)*(id *)(v33 + 8 * v9 + 32);
      v11 = v10;
      v12 = *(void **)(v32 + v30);
      if (v12)
        objc_msgSend(v12, "addSubview:", v11);
      v13 = &v11[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
      v14 = *(void **)&v11[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
      v15 = *(void **)&v11[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
      v16 = *(_QWORD *)&v11[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16];
      v17 = v11;
      v18 = v14;
      v19 = v15;
      v20 = objc_msgSend(v31, "systemBlackColor", swift_bridgeObjectRetain(v16).n128_f64[0]);
      if (v20)
      {
        v21 = v20;

        v19 = v21;
      }
      v22 = *(void **)v13;
      v23 = (void *)*((_QWORD *)v13 + 1);
      v24 = *((_QWORD *)v13 + 2);
      *(_QWORD *)v13 = v18;
      *((_QWORD *)v13 + 1) = v19;
      *((_QWORD *)v13 + 2) = v16;
      v25 = v18;
      swift_bridgeObjectRetain_n(v16, 2);
      v26 = v25;
      v27 = v19;
      if ((static NSObject.== infix(_:_:)(v26) & 1) != 0 && (static NSObject.== infix(_:_:)(v27) & 1) != 0)
      {
        sub_10005B490(v16, v24);
        v29 = v28;
        swift_bridgeObjectRelease(v16);

        if ((v29 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        swift_bridgeObjectRelease(v16);

      }
      ClimateButton.refreshColorConfig()();
LABEL_6:
      ++v9;

      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v16);
      if (v9 == 3)
      {
        swift_bridgeObjectRelease(v33);
        sub_100074A8C();
        return;
      }
    }
  }
  __break(1u);
}

void sub_100074A8C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  Class isa;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskConstraints);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskConstraints, v13, 1, 0);
  v4 = *v3;
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v4);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "deactivateConstraints:", isa);

  v6 = *v3;
  *v3 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v6);
  v7 = ClimateStepper.constraintsForStepButtons(_:direction:)(*(void **)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton), 1);
  swift_beginAccess(v3, v12, 33, 0);
  sub_100072AC0(v7);
  swift_endAccess(v12);
  v8 = ClimateStepper.constraintsForStepButtons(_:direction:)(*(void **)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton), 0);
  swift_beginAccess(v3, v12, 33, 0);
  sub_100072AC0(v8);
  swift_endAccess(v12);
  v9 = ClimateStepper.constraintsForStepButtons(_:direction:)(*(void **)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton), 2);
  swift_beginAccess(v3, v12, 33, 0);
  sub_100072AC0(v9);
  swift_endAccess(v12);
  v10 = *v3;
  swift_bridgeObjectRetain(*v3);
  v11 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  objc_msgSend(v2, "activateConstraints:", v11);

}

void sub_100074C5C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  id v6;
  unsigned int v7;
  double v8;
  double Height;
  id v10;
  float v11;
  float v12;
  id v13;
  id v14;
  float v15;
  id v16;
  float v17;
  float v18;
  double v19;
  id *v20;
  void *v21;
  double v22;
  _BYTE v23[24];
  CGRect v24;
  CGRect v25;

  v1 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis);
  v2 = swift_beginAccess((char *)v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis, v23, 0, 0);
  v3 = *v1;
  v4 = (*(unsigned __int8 (**)(uint64_t))((swift_isaMask & *v0) + 0x360))(v2);
  v5 = OBJC_IVAR____TtC7Climate14ClimateStepper_range;
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v0
                                                             + OBJC_IVAR____TtC7Climate14ClimateStepper_range), "minimum"));
  v7 = objc_msgSend(v6, "unsignedCharValue");

  if (v3 == 1)
  {
    if (((v4 - v7) & 0xFFFFFF00) == 0)
    {
      v8 = (double)(v4 - v7);
      objc_msgSend(v0, "bounds");
      Height = CGRectGetHeight(v24);
      v10 = objc_msgSend(*(id *)((char *)v0 + v5), "maximum");
      objc_msgSend(v10, "floatValue");
      v12 = v11;

      v13 = objc_msgSend(*(id *)((char *)v0 + v5), "minimum");
      goto LABEL_6;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  if (((v4 - v7) & 0xFFFFFF00) != 0)
    goto LABEL_13;
  v8 = (double)(v4 - v7);
  objc_msgSend(v0, "bounds");
  Height = CGRectGetWidth(v25);
  v14 = objc_msgSend(*(id *)((char *)v0 + v5), "maximum");
  objc_msgSend(v14, "floatValue");
  v12 = v15;

  v13 = objc_msgSend(*(id *)((char *)v0 + v5), "minimum");
LABEL_6:
  v16 = v13;
  objc_msgSend(v16, "floatValue");
  v18 = v17;

  v19 = Height / (float)(v12 - v18) * v8;
  v20 = (id *)((char *)v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillViewProgressConstraint);
  v21 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillViewProgressConstraint);
  if (v21)
  {
    objc_msgSend(v21, "constant");
    if (v19 == v22)
      return;
    goto LABEL_8;
  }
  if (v19 != 0.0)
  {
LABEL_8:
    objc_msgSend(*v20, "setConstant:", v19);
    objc_msgSend(v0, "layoutIfNeeded");
  }
}

void sub_100074E94(char a1)
{
  _QWORD *v1;
  void *v3;
  id v4;
  double v5;
  unsigned __int8 v6;
  uint64_t v7;
  id v8;
  unsigned int v9;
  id v10;
  unsigned int v11;
  id v12;
  unsigned int v13;
  id v14;
  unsigned int v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v22[5];
  uint64_t v23;

  v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillViewProgressConstraint);
  if (!v3)
    goto LABEL_8;
  v4 = objc_msgSend(v3, "constant");
  if (v5 <= 0.0)
    goto LABEL_8;
  v6 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x360))(v4);
  v7 = OBJC_IVAR____TtC7Climate14ClimateStepper_range;
  v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v1
                                                             + OBJC_IVAR____TtC7Climate14ClimateStepper_range), "minimum"));
  v9 = objc_msgSend(v8, "unsignedCharValue");

  v10 = objc_msgSend(*(id *)((char *)v1 + v7), "step");
  v11 = objc_msgSend(v10, "unsignedCharValue");

  if ((((v9 + v11) >> 8) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v6 >= (v9 + v11) || (a1 & 1) == 0)
      goto LABEL_8;
    v12 = objc_msgSend(*(id *)((char *)v1 + v7), "minimum");
    v13 = objc_msgSend(v12, "unsignedCharValue");

    v14 = objc_msgSend(*(id *)((char *)v1 + v7), "step");
    v15 = objc_msgSend(v14, "unsignedCharValue");

    if ((((v13 + v15) >> 8) & 1) == 0)
    {
      v16 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x368))();
      (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x3F0))(v16);
LABEL_8:
      v17 = (void *)objc_opt_self(UIView);
      v18 = swift_allocObject(&unk_1000A0580, 24, 7);
      *(_QWORD *)(v18 + 16) = v1;
      v22[4] = sub_100076B18;
      v23 = v18;
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 1107296256;
      v22[2] = sub_100070390;
      v22[3] = &unk_1000A0598;
      v19 = _Block_copy(v22);
      v20 = v23;
      v21 = v1;
      swift_release(v20);
      objc_msgSend(v17, "animateWithDuration:animations:", v19, 0.25);
      _Block_release(v19);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1000750D0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t inited;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v14;
  _BYTE v15[64];

  v3 = sub_100006058((uint64_t *)&unk_1000B9FE0);
  inited = swift_initStackObject(v3, v15);
  *(_OWORD *)(inited + 16) = xmmword_100089670;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
  *(_QWORD *)(inited + 32) = v5;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton);
  *(_QWORD *)(inited + 40) = v6;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
  *(_QWORD *)(inited + 48) = v7;
  v8 = *(void **)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton);
  *(_QWORD *)(inited + 56) = v8;
  v14 = inited;
  specialized Array._endMutation()(inited);
  v9 = v5;
  v10 = v6;
  v11 = v7;
  v12 = v8;
  sub_100076630(a1 & 1, v14);
  return swift_bridgeObjectRelease(v14);
}

void sub_1000751A0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v4;
  double v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  unsigned __int8 v10;
  id v11;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v24;
  double Height;
  char *v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  double v31;
  uint64_t v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  id v38;
  unsigned int v39;
  id v40;
  unsigned int v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  _BYTE v46[24];

  v2 = v1;
  v4 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis);
  *(_QWORD *)&v5 = swift_beginAccess((char *)v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis, v46, 0, 0).n128_u64[0];
  v6 = *v4;
  objc_msgSend(a1, "translationInView:", v2, v5);
  if (v6 == 1)
    v9 = v8;
  else
    v9 = v7;
  if (objc_msgSend(a1, "state") == (id)3)
  {
    sub_100074E94(v9 < 0.0);
    v10 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x360))();
    v11 = *(id *)((char *)v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_range);
    CAFRange.minimumValue<A>()(v45, &type metadata for UInt8, &protocol witness table for UInt8);

    if (LOBYTE(v45[0]) == v10)
      v12 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x358))();
    else
      v12 = 0;
    sub_1000750D0(v12 & 1);
    v26 = (char *)v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate;
    swift_beginAccess((char *)v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate, v45, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v26);
    if (Strong)
    {
      v28 = Strong;
      v29 = *((_QWORD *)v26 + 1);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v29 + 8))(0, ObjectType, v29);
      Strong = swift_unknownObjectRelease(v28);
    }
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_lastSlideValue) = 0;
    (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x438))(Strong);
    (*(void (**)(_QWORD))((swift_isaMask & *v2) + 0x3C8))(0);
    return;
  }
  (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x3C8))(1);
  v13 = (char *)v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_popoverDelegate, v45, 0, 0);
  v14 = swift_unknownObjectWeakLoadStrong(v13);
  if (v14)
  {
    v15 = v14;
    v16 = *((_QWORD *)v13 + 1);
    v17 = swift_getObjectType(v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(1, v17, v16);
    swift_unknownObjectRelease(v15);
  }
  sub_1000750D0(1);
  v18 = *v4;
  v19 = *(double *)((char *)v2 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_lastSlideValue);
  objc_msgSend(v2, "bounds");
  if (v18 == 1)
  {
    v24 = v19 - v9;
    Height = CGRectGetHeight(*(CGRect *)&v20);
  }
  else
  {
    v24 = v9 - v19;
    Height = CGRectGetWidth(*(CGRect *)&v20);
  }
  v31 = Height;
  v32 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillViewProgressConstraint;
  v33 = *(void **)((char *)v2 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillViewProgressConstraint);
  v34 = 0.0;
  if (v33)
    objc_msgSend(v33, "constant", 0.0);
  v35 = v24 + v34;
  if (v35 >= v31)
    v35 = v31;
  if (v35 > 0.0)
    v36 = v35;
  else
    v36 = 0.0;
  v37 = OBJC_IVAR____TtC7Climate14ClimateStepper_range;
  v38 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v2
                                                              + OBJC_IVAR____TtC7Climate14ClimateStepper_range), "maximum"));
  v39 = objc_msgSend(v38, "unsignedCharValue");

  v40 = objc_msgSend(*(id *)((char *)v2 + v37), "minimum");
  v41 = objc_msgSend(v40, "unsignedCharValue");

  if (((v39 - v41) & 0xFFFFFF00) != 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  v42 = round(v36 / v31 * (double)(v39 - v41));
  if ((~*(_QWORD *)&v42 & 0x7FF0000000000000) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v42 <= -1.0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v42 >= 256.0)
  {
LABEL_33:
    __break(1u);
    return;
  }
  v43 = (int)v42;
  if ((_DWORD)v43 != (*(unsigned __int8 (**)(void))((swift_isaMask & *v2) + 0x360))())
  {
    v44 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x368))(v43);
    (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x3F0))(v44);
  }
  objc_msgSend(*(id *)((char *)v2 + v32), "setConstant:", v36);
  objc_msgSend(v2, "layoutIfNeeded");
  *(double *)((char *)v2 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_lastSlideValue) = v9;
}

void sub_100075618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  void *v4;
  void **v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  _BYTE v35[24];
  _BYTE v36[80];

  v1 = sub_100006058((uint64_t *)&unk_1000B7590);
  inited = swift_initStackObject(v1, v36);
  *(_OWORD *)(inited + 16) = xmmword_10008B500;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
  *(_QWORD *)(inited + 32) = v3;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton);
  *(_QWORD *)(inited + 40) = v4;
  v5 = (void **)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v35, 0, 0);
  v6 = *v5;
  *(_QWORD *)(inited + 48) = *v5;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton);
  *(_QWORD *)(inited + 56) = v7;
  v8 = *(void **)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
  *(_QWORD *)(inited + 64) = v8;
  v9 = *(void **)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton);
  *(_QWORD *)(inited + 72) = v9;
  specialized Array._endMutation()(v10);
  v11 = inited & 0xC000000000000001;
  if ((inited & 0xC000000000000001) != 0)
  {
    v29 = v3;
    v30 = v4;
    v31 = v6;
    v32 = v7;
    v33 = v8;
    v34 = v9;
    v12 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, inited);
  }
  else
  {
    if (*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10) < 6uLL)
    {
      __break(1u);
      return;
    }
    v12 = *(id *)(inited + 32);
    v13 = v3;
    v14 = v4;
    v15 = v6;
    v16 = v7;
    v17 = v8;
    v18 = v9;
  }
  (*(void (**)(_QWORD))((swift_isaMask & *v12) + 0x240))(0);

  if (v11)
    v19 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, inited);
  else
    v19 = *(id *)(inited + 40);
  v20 = v19;
  (*(void (**)(_QWORD))((swift_isaMask & *v19) + 0x240))(0);

  if (v11)
    v21 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(2, inited);
  else
    v21 = *(id *)(inited + 48);
  v22 = v21;
  (*(void (**)(_QWORD))((swift_isaMask & *v21) + 0x240))(0);

  if (v11)
    v23 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(3, inited);
  else
    v23 = *(id *)(inited + 56);
  v24 = v23;
  (*(void (**)(_QWORD))((swift_isaMask & *v23) + 0x240))(0);

  if (v11)
    v25 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(4, inited);
  else
    v25 = *(id *)(inited + 64);
  v26 = v25;
  (*(void (**)(_QWORD))((swift_isaMask & *v25) + 0x240))(0);

  if (v11)
    v27 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(5, inited);
  else
    v27 = *(id *)(inited + 72);
  v28 = v27;
  (*(void (**)(_QWORD))((swift_isaMask & *v27) + 0x240))(0);
  swift_bridgeObjectRelease(inited);

}

uint64_t sub_1000758D4()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskConstraints));
}

id sub_100075940()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateContinuousStepper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateContinuousStepper()
{
  return objc_opt_self(_TtC7Climate24ClimateContinuousStepper);
}

void (*sub_100075A08(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100075AE0(v6, a2, a3);
  return sub_100075A5C;
}

void (*sub_100075A60(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100075B4C(v6, a2, a3);
  return sub_100075A5C;
}

void sub_100075AB4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_100075AE0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_100076B24;
  }
  __break(1u);
  return result;
}

void (*sub_100075B4C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_100075BB8;
  }
  __break(1u);
  return result;
}

void sub_100075BB8(id *a1)
{

}

uint64_t sub_100075BC0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100076A68(&qword_1000B9E88, &qword_1000B9E80);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100006058(&qword_1000B9E80);
          v13 = sub_100075A08(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100075DD4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100076A68(&qword_1000B9EA8, &qword_1000B9EA0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100006058(&qword_1000B9EA0);
          v13 = sub_100075A08(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006B04(0, &qword_1000B8C60, CAFService_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100075FE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100076A68(&qword_1000B9E98, &qword_1000B9E90);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100006058(&qword_1000B9E90);
          v13 = sub_100075A60(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006B04(0, &qword_1000B7C50, CAFDefrost_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000761FC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

char *sub_1000762B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v8;
  char *v9;
  int v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  BOOL v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  char v23[24];

  v8 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ClimateStepperButton()), "init");
  v9 = v8;
  v10 = v8[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial];
  v8[OBJC_IVAR____TtC7Climate13ClimateButton_disableSelectedBackgroundMaterial] = 1;
  if (v10 != 1)
  {
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC7Climate13ClimateButton_backgroundView], "removeFromSuperview");
    ClimateButton.refreshColorConfig()();
  }
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setUserInteractionEnabled:", 0);
  v11 = objc_msgSend(v9, "layer");
  objc_msgSend(v11, "setCornerRadius:", 0.0);

  v12 = &v9[OBJC_IVAR____TtC7Climate13ClimateButton_title];
  swift_beginAccess(&v9[OBJC_IVAR____TtC7Climate13ClimateButton_title], v23, 1, 0);
  v14 = *(_QWORD *)v12;
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v12 = a3;
  *((_QWORD *)v12 + 1) = a4;
  v15 = v9;
  swift_bridgeObjectRetain(a4);
  if (a4)
  {
    if (v13)
    {
      v16 = v14 == a3 && v13 == a4;
      if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, v14, v13, 0) & 1) != 0)
        goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v13)
  {
LABEL_12:
    ClimateButton.updateClimateConfiguration()();
LABEL_13:

    swift_bridgeObjectRelease(v13);
    goto LABEL_14;
  }

LABEL_14:
  v17 = &v15[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName];
  swift_beginAccess(&v15[OBJC_IVAR____TtC7Climate13ClimateButton_imageSystemName], &v22, 1, 0);
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  v20 = v15;
  swift_bridgeObjectRetain(a2);
  if (a2)
  {
    if (v18
      && (v19 == a1 && v18 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v19, v18, 0) & 1) != 0))
    {
      goto LABEL_22;
    }
  }
  else if (!v18)
  {

    return v20;
  }
  ClimateButton.updateClimateConfiguration()();
LABEL_22:

  swift_bridgeObjectRelease(v18);
  return v20;
}

id sub_1000764D4(double a1)
{
  NSString v2;
  id v3;
  id v4;
  Class isa;
  Class v6;
  id v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v2);

  v4 = v3;
  objc_msgSend(v4, "setBeginTime:", CACurrentMediaTime());

  objc_msgSend(v4, "setDuration:", a1);
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setFromValue:", isa);

  v6 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setToValue:", v6);

  v7 = objc_allocWithZone((Class)CAMediaTimingFunction);
  v8 = v4;
  LODWORD(v9) = 1051260355;
  LODWORD(v10) = 0;
  LODWORD(v11) = 0;
  LODWORD(v12) = 1.0;
  v13 = objc_msgSend(v7, "initWithControlPoints::::", v9, v10, v11, v12);
  objc_msgSend(v8, "setTimingFunction:", v13);

  return v8;
}

void sub_100076630(char a1, uint64_t a2)
{
  double v3;
  id v4;
  id v5;
  id v6;
  double v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  void *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  double v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  NSString v30;
  uint64_t v31;
  double v32;
  _OWORD v33[2];
  _QWORD v34[4];

  if ((a1 & 1) != 0)
    v3 = 0.25;
  else
    v3 = 0.3;
  v4 = sub_1000764D4(v3);
  v5 = objc_msgSend(v4, "toValue");
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v33);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_100046E24((uint64_t)v33, (uint64_t)v34);
  if (!v34[3])
  {

    sub_1000769CC((uint64_t)v34);
    return;
  }
  if ((swift_dynamicCast(&v32, v34, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) == 0)
    goto LABEL_47;
  v7 = v32;
  v34[0] = _swiftEmptyArrayStorage;
  v8 = *(_QWORD *)(a2 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain(a2);
    for (i = 0; i != v8; ++i)
    {
      v11 = *(void **)(a2 + 8 * i + 32);
      if (v11)
      {
        v12 = v11;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v14 = *(_QWORD *)((v34[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)((v34[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
        specialized Array._endMutation()(v10);
      }
    }
    swift_bridgeObjectRelease(a2);
    v15 = v34[0];
  }
  else
  {
    v15 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v34[0] = _swiftEmptyArrayStorage;
  if (!((unint64_t)v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16)
      goto LABEL_21;
LABEL_36:
    swift_bridgeObjectRelease(v15);
    v23 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_45;
    goto LABEL_37;
  }
  if (v15 < 0)
    v24 = v15;
  else
    v24 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v15);
  v16 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v15);
  if (!v16)
    goto LABEL_36;
LABEL_21:
  if (v16 < 1)
  {
    __break(1u);
    goto LABEL_49;
  }
  for (j = 0; j != v16; ++j)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v15);
    else
      v20 = *(id *)(v15 + 8 * j + 32);
    v21 = v20;
    objc_msgSend(v20, "alpha");
    if (v22 == v7)
    {

    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v18 = *(_QWORD *)(v34[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
      v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v21);
      specialized ContiguousArray._endMutation()(v19);
    }
  }
  swift_bridgeObjectRelease(v15);
  v23 = v34[0];
  if ((v34[0] & 0x8000000000000000) != 0)
    goto LABEL_45;
LABEL_37:
  if ((v23 & 0x4000000000000000) == 0)
  {
    v25 = *(_QWORD *)(v23 + 16);
    swift_retain(v23);
    if (!v25)
    {
LABEL_46:
      swift_release_n(v23, 2);
LABEL_47:

      return;
    }
    goto LABEL_39;
  }
LABEL_45:
  v31 = swift_retain(v23);
  v25 = _CocoaArrayWrapper.endIndex.getter(v31);
  if (!v25)
    goto LABEL_46;
LABEL_39:
  if (v25 >= 1)
  {
    v26 = 0;
    do
    {
      if ((v23 & 0xC000000000000001) != 0)
        v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v23);
      else
        v27 = *(id *)(v23 + 8 * v26 + 32);
      v28 = v27;
      ++v26;
      v29 = objc_msgSend(v27, "layer");
      v30 = String._bridgeToObjectiveC()();
      objc_msgSend(v29, "addAnimation:forKey:", v4, v30);

      objc_msgSend(v28, "setAlpha:", v7);
    }
    while (v25 != v26);
    goto LABEL_46;
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_1000769CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006058((uint64_t *)&unk_1000B7B30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100076A0C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100076A30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100076A40(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100076A48()
{
  sub_100074C5C();
}

uint64_t sub_100076A68(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10000A948(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100076AA8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100076ACC()
{
  uint64_t v0;

  return sub_100073CA4(v0);
}

void sub_100076AD4(uint64_t a1)
{
  uint64_t v1;

  sub_100073D24(a1, v1, &OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
}

void sub_100076AF4(uint64_t a1)
{
  uint64_t v1;

  sub_100073D24(a1, v1, &OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
}

void sub_100076B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _BYTE v14[24];
  char v15[24];

  v1 = v0;
  v2 = type metadata accessor for ClimateZone(0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)(v0 + OBJC_IVAR____TtC7Climate15ClimateZoneCard_zoneLabel);
  v6 = v1 + OBJC_IVAR____TtC7Climate15ClimateZoneCard_zone;
  swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate15ClimateZoneCard_zone, v15, 0, 0);
  sub_100008C1C(v6, (uint64_t)v4);
  v7 = v5;
  sub_100040298();
  v9 = v8;
  sub_10003C604((uint64_t)v4);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v7, "setText:", v10);

  v11 = *(char **)(v1 + OBJC_IVAR____TtC7Climate15ClimateZoneCard_servicesGrid);
  sub_100008C1C(v6, (uint64_t)v4);
  v12 = (uint64_t)&v11[OBJC_IVAR____TtC7Climate19ClimateZoneControls_zone];
  swift_beginAccess(&v11[OBJC_IVAR____TtC7Climate19ClimateZoneControls_zone], v14, 33, 0);
  v13 = v11;
  sub_100018B9C((uint64_t)v4, v12);
  swift_endAccess(v14);
  sub_1000673B0();
  sub_10003C604((uint64_t)v4);

}

void sub_100076C88(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3();

  }
}

void sub_100076CE8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  id v20;
  id v21;
  id v22;
  id v23;

  v23 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "systemFillColor");
  objc_msgSend(v23, "setBackgroundColor:", v1);

  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "addSubview:", v23);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100006058((uint64_t *)&unk_1000B7590);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100088DF0;
  v5 = objc_msgSend(v23, "leftAnchor");
  v6 = objc_msgSend(v0, "leftAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(v23, "topAnchor");
  v9 = objc_msgSend(v0, "topAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(v23, "bottomAnchor");
  v12 = objc_msgSend(v0, "bottomAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(v23, "rightAnchor");
  v15 = objc_msgSend(v0, "rightAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v4 + 56) = v16;
  specialized Array._endMutation()(v17);
  v18 = v4;
  sub_100006098();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v18);
  objc_msgSend(v2, "activateConstraints:", isa);

  v20 = objc_msgSend(v23, "layer");
  objc_msgSend(v20, "setCornerRadius:", 18.0);

  v21 = objc_msgSend(v23, "layer");
  objc_msgSend(v21, "setCornerCurve:", kCACornerCurveContinuous);

  v22 = objc_msgSend(v23, "layer");
  objc_msgSend(v22, "setMaskedCorners:", 3);

  objc_msgSend(v23, "setClipsToBounds:", 1);
}

id sub_1000770C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateZoneCard(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10007713C()
{
  return type metadata accessor for ClimateZoneCard(0);
}

uint64_t type metadata accessor for ClimateZoneCard(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9EE8;
  if (!qword_1000B9EE8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateZoneCard);
  return result;
}

uint64_t sub_100077180(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for ClimateZone(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000771FC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1 + OBJC_IVAR____TtC7Climate15ClimateZoneCard_zone;
  swift_beginAccess(v3, v7, 0, 0);
  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
}

uint64_t sub_100077288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  void (*v13)(__n128);
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  unint64_t v17;
  _UNKNOWN **v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  id v33;
  os_log_type_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _UNKNOWN **v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  void (*v65)(__n128);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v67 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for ClimateDefrost(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = __chkstk_darwin(v9);
  v68 = v7;
  v69 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(__n128))(v7 + 16);
  v70 = a2;
  v71 = v6;
  v65 = v13;
  v13(v11);
  v76 = (unint64_t)_swiftEmptyArrayStorage;
  v77 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v43 = a1;
    else
      v43 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v14 = _CocoaArrayWrapper.endIndex.getter(v43);
    if (v14)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease(a1);
    v42 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_26;
  }
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v15 = swift_bridgeObjectRetain(a1);
  if (!v14)
    goto LABEL_25;
LABEL_3:
  if (v14 < 1)
  {
    __break(1u);
LABEL_39:
    swift_once(&qword_1000B6FE8, sub_10005CB60);
    goto LABEL_34;
  }
  v66 = v10;
  v63 = v9;
  v64 = a3;
  v16 = 0;
  v17 = a1 & 0xC000000000000001;
  v18 = &_s10Foundation11MeasurementV10CAFCombineSo17NSUnitTemperatureCRszrlE10localeStep_2byACyAFGSo8CAFRangeCADE0G9DirectionO_AItF_ptr;
  v15.n128_u64[0] = 138412290;
  v72 = v15;
  v73 = v14;
  do
  {
    if (v17)
      v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a1);
    else
      v19 = *(id *)(a1 + 8 * v16 + 32);
    v20 = v19;
    v21 = objc_opt_self(v18[478]);
    v22 = swift_dynamicCastObjCClass(v20, v21);
    if (v22)
    {
      v23 = v22;
      v24 = v20;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      v26 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v25 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v26 >= v25 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
      v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v23);
      specialized Array._endMutation()(v27);
      v28 = v24;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
      v30 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v29 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v30 >= v29 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
      v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v23);
      specialized Array._endMutation()(v31);

    }
    else
    {
      if (qword_1000B6FE8 != -1)
        swift_once(&qword_1000B6FE8, sub_10005CB60);
      v32 = qword_1000BC938;
      v33 = v20;
      v34 = static os_log_type_t.default.getter(v33);
      if (os_log_type_enabled(v32, v34))
      {
        v35 = swift_slowAlloc(12, -1);
        v36 = v17;
        v37 = a1;
        v38 = v18;
        v39 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v35 = v72.n128_u32[0];
        *(_QWORD *)(v35 + 4) = v33;
        *v39 = v33;
        _os_log_impl((void *)&_mh_execute_header, v32, v34, "unknown service: %@", (uint8_t *)v35, 0xCu);
        v40 = sub_100006058((uint64_t *)&unk_1000B8370);
        swift_arrayDestroy(v39, 1, v40);
        v41 = v39;
        v18 = v38;
        a1 = v37;
        v17 = v36;
        v14 = v73;
        swift_slowDealloc(v41, -1, -1);
        swift_slowDealloc(v35, -1, -1);
      }
      else
      {

      }
    }
    ++v16;

  }
  while (v14 != v16);
  swift_bridgeObjectRelease(a1);
  v42 = v77;
  v9 = v63;
  a3 = v64;
  v10 = v66;
LABEL_26:
  v7 = v70;
  v14 = (uint64_t)v67;
  if ((unint64_t)v42 >> 62)
  {
    if (v42 < 0)
      v46 = v42;
    else
      v46 = v42 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v42);
    v47 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v42);
    if (v47)
      goto LABEL_28;
  }
  else if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_28:
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v7, v71);
    v44 = (uint64_t)v69;
    *(_QWORD *)&v69[v9[5]] = a1;
    *(_QWORD *)(v44 + v9[6]) = v76;
    *(_QWORD *)(v44 + v9[7]) = v77;
    sub_1000778A8(v44, a3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56))(a3, 0, 1, v9);
    return sub_1000778EC(v44);
  }
  swift_bridgeObjectRelease(a1);
  v48 = v76;
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v48);
  if (qword_1000B6FE8 != -1)
    goto LABEL_39;
LABEL_34:
  v49 = qword_1000BC938;
  v50 = v71;
  v51 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v65)(v14, v7, v71);
  v52 = static os_log_type_t.default.getter(v51);
  if (os_log_type_enabled(v49, v52))
  {
    v53 = swift_slowAlloc(12, -1);
    v66 = v10;
    v54 = (uint8_t *)v53;
    v55 = swift_slowAlloc(32, -1);
    v75 = v55;
    *(_DWORD *)v54 = 136315138;
    v56 = CAUVehicleLayoutKey.rawValue.getter(v55);
    v58 = v57;
    v74 = sub_10005DB58(v56, v57, &v75);
    v50 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v54 + 4, v54 + 12);
    swift_bridgeObjectRelease(v58);
    v59 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    v59(v14, v50);
    _os_log_impl((void *)&_mh_execute_header, v49, v52, "ClimateDefrostServices requires defrosts key=%s", v54, 0xCu);
    swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1, -1);
    v60 = v54;
    v10 = v66;
    swift_slowDealloc(v60, -1, -1);
    v61 = v70;
  }
  else
  {
    v59 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    v59(v14, v50);
    v61 = v7;
  }
  v59(v61, v50);
  v59((uint64_t)v69, v50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v10 + 56))(a3, 1, 1, v9);
}

uint64_t type metadata accessor for ClimateDefrost(uint64_t a1)
{
  uint64_t result;

  result = qword_1000B9F50;
  if (!qword_1000B9F50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClimateDefrost);
  return result;
}

uint64_t sub_1000778A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClimateDefrost(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000778EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClimateDefrost(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_100077928(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for CAUVehicleLayoutKey(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v10;
    v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v11;
    v12 = a3[7];
    v13 = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = v13;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v13);
  }
  return a1;
}

uint64_t sub_1000779D8(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
}

uint64_t sub_100077A34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t sub_100077AB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a3[6];
  v11 = *(_QWORD *)(a2 + v10);
  v12 = *(_QWORD *)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = a3[7];
  v14 = *(_QWORD *)(a2 + v13);
  v15 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_100077B5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100077BCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_bridgeObjectRelease(v10);
  v11 = a3[7];
  v12 = *(_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t sub_100077C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100077C64);
}

uint64_t sub_100077C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for CAUVehicleLayoutKey(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100077CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100077CEC);
}

uint64_t sub_100077CEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CAUVehicleLayoutKey(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_100077D64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for CAUVehicleLayoutKey(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_100077DDC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v25 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v4 = 0;
        do
        {
          v5 = v4 + 1;
          v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
          v23 = v6;
          v7 = sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
          v8 = v6;
          v9 = sub_100006058((uint64_t *)&unk_1000B9FF0);
          swift_dynamicCast(&v24, &v23, v7, v9, 7);
          v10 = v24;
          v11 = swift_unknownObjectRelease(v8);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
          v12 = v25[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
          v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
          specialized ContiguousArray._endMutation()(v13);
          v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        v14 = (void **)(a1 + 32);
        v15 = sub_100006B04(0, (unint64_t *)&qword_1000B75A0, UIView_ptr);
        do
        {
          v16 = *v14++;
          v23 = v16;
          v17 = v16;
          v18 = sub_100006058((uint64_t *)&unk_1000B9FF0);
          swift_dynamicCast(&v24, &v23, v15, v18, 7);
          v19 = v24;

          ((void (*)(void))specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique())();
          v20 = v25[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
          v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v19);
          specialized ContiguousArray._endMutation()(v21);
          --v2;
        }
        while (v2);
      }
      return v25;
    }
  }
  return result;
}

_QWORD *sub_100077FE8(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _BYTE v15[8];
  void *v16;
  _BYTE v17[8];
  uint64_t v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_1000688E0(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (void **)(a1 + 40);
    do
    {
      v5 = *v4;
      v15[0] = *((_BYTE *)v4 - 8);
      v16 = v5;
      v6 = v5;
      v7 = sub_100006058(&qword_1000B9978);
      v8 = sub_100006058(&qword_1000BA030);
      swift_dynamicCast(v17, v15, v7, v8, 7);
      v9 = v17[0];
      v10 = v18;

      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_1000688E0(0, v2[2] + 1, 1);
        v2 = v19;
      }
      v12 = v2[2];
      v11 = v2[3];
      if (v12 >= v11 >> 1)
      {
        sub_1000688E0(v11 > 1, v12 + 1, 1);
        v2 = v19;
      }
      v2[2] = v12 + 1;
      v13 = &v2[2 * v12];
      *((_BYTE *)v13 + 32) = v9;
      v13[5] = v10;
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_10007813C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;

  v1 = v0;
  v2 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x288);
  v3 = v2();
  v5 = v4;
  v6 = swift_bridgeObjectRelease(v4);
  v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v7 = v3 & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    v8 = ((uint64_t (*)(uint64_t))v2)(v6);
    v10 = v9;
    v11 = sub_10007A73C(0, 1, 1, _swiftEmptyArrayStorage);
    v13 = v11[2];
    v12 = v11[3];
    if (v13 >= v12 >> 1)
      v11 = sub_10007A73C((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
    v11[2] = v13 + 1;
    v14 = &v11[2 * v13];
    v14[4] = v8;
    v14[5] = v10;
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v15 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityLabelModifier + 8);
  if (v15)
  {
    v16 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityLabelModifier);
    swift_bridgeObjectRetain(*(_QWORD *)((char *)v1
                                       + OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityLabelModifier
                                       + 8));
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_10007A73C(0, v11[2] + 1, 1, v11);
    v18 = v11[2];
    v17 = v11[3];
    if (v18 >= v17 >> 1)
      v11 = sub_10007A73C((_QWORD *)(v17 > 1), v18 + 1, 1, v11);
    v11[2] = v18 + 1;
    v19 = &v11[2 * v18];
    v19[4] = v16;
    v19[5] = v15;
  }
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC7Climate13ClimateButton_accessibilityLabelShouldIncludeStates) == 1)
  {
    v20 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110))();
    v21 = ClimatePresentation.accessibilityLabel.getter(v20);
    v23 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_10007A73C(0, v11[2] + 1, 1, v11);
    v25 = v11[2];
    v24 = v11[3];
    if (v25 >= v24 >> 1)
      v11 = sub_10007A73C((_QWORD *)(v24 > 1), v25 + 1, 1, v11);
    v11[2] = v25 + 1;
    v26 = &v11[2 * v25];
    v26[4] = v21;
    v26[5] = v23;
  }
  v27 = sub_100006058((uint64_t *)&unk_1000B9650);
  v28 = sub_10005C5BC();
  BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v27, v28);
  v30 = v29;
  swift_bridgeObjectRelease(v11);
  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  objc_msgSend(v1, "setAccessibilityLabel:", v31);

}

uint64_t sub_1000783CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan;
  if (!objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan), "hasOn")
    || (objc_msgSend(*(id *)(v0 + v2), "on") & 1) != 0)
  {
    v3 = *(id *)(v0 + v2);
    v4 = CAFFan.isBlowing.getter();

    return _s7Climate0A12PresentationV2on4auto10restricted7invalid8disabledACSb_S4btcfC_0(v4 & 1, (char)objc_msgSend(*(id *)(v1 + v2), "autoMode"), (char)objc_msgSend(*(id *)(v1 + v2), "fanLevelRestricted"), (char)objc_msgSend(*(id *)(v1 + v2), "fanLevelInvalid"), (char)objc_msgSend(*(id *)(v1 + v2), "fanLevelDisabled"));
  }
  v6 = objc_msgSend(*(id *)(v0 + v2), "autoMode");
  v7 = objc_msgSend(*(id *)(v0 + v2), "onRestricted");
  v8 = objc_msgSend(*(id *)(v1 + v2), "onInvalid");
  v9 = objc_msgSend(*(id *)(v1 + v2), "onDisabled");
  if ((v6 & 1) != 0)
  {
    if ((v7 & 1) != 0)
    {
      v10 = 6;
      v11 = 14;
    }
    else
    {
      v10 = 2;
      v11 = 10;
    }
    goto LABEL_10;
  }
  if ((v7 & 1) != 0)
  {
    v10 = 4;
    v11 = 12;
LABEL_10:
    if (v8)
      v10 = v11;
    if ((v9 & 1) == 0)
      return v10;
    return v10 | 0x10;
  }
  v10 = 8;
  if (!v8)
    v10 = 0;
  if ((v9 & 1) == 0)
    return v10;
  return v10 | 0x10;
}

float sub_100078550()
{
  uint64_t v0;

  return (float)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan), "fanLevel");
}

BOOL sub_10007857C()
{
  uint64_t v0;
  id v1;
  unsigned int v2;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_range), "minimum");
  v2 = objc_msgSend(v1, "unsignedCharValue");

  return v2 == 0;
}

uint64_t sub_1000785D8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue);
}

id sub_1000785EC(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  int v4;
  os_log_type_t v5;
  _BYTE *v6;
  NSObject *v7;
  uint8_t *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _BYTE *v13;
  _QWORD v15[5];
  uint64_t v16;

  v2 = v1;
  v3 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue;
  v4 = v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue];
  v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue] = a1;
  if (v4 != a1 && v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding] != 1)
  {
    v5 = static os_log_type_t.default.getter(a1);
    sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v6 = v1;
    v7 = static OS_os_log.default.getter(v6);
    if (os_log_type_enabled(v7, v5))
    {
      v8 = (uint8_t *)swift_slowAlloc(5, -1);
      *(_DWORD *)v8 = 16777472;
      LOBYTE(v15[0]) = v2[v3];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v15, (char *)v15 + 1, v8 + 4, v8 + 5);

      _os_log_impl((void *)&_mh_execute_header, v7, v5, "ContinuousSlider updated currentValue: %hhu", v8, 5u);
      swift_slowDealloc(v8, -1, -1);
    }
    else
    {

    }
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_1000A0800, 24, 7);
    *(_QWORD *)(v10 + 16) = v6;
    v15[4] = sub_10007BC08;
    v16 = v10;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_100070390;
    v15[3] = &unk_1000A0818;
    v11 = _Block_copy(v15);
    v12 = v16;
    v13 = v6;
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 2, v11, 0, 0.25, 0.0);
    _Block_release(v11);
  }
  return sub_100078E38(1);
}

void sub_1000787D4()
{
  uint64_t v0;
  char *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char v5;
  _BOOL8 v6;

  sub_100078884();
  v1 = *(char **)(v0 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton);
  sub_10007813C();
  v2 = *(uint64_t (**)(uint64_t))&v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  if (!v2)
  {
    v5 = 0;
    goto LABEL_5;
  }
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
  v4 = swift_retain(v3);
  v5 = v2(v4);
  sub_100005118((uint64_t)v2, v3);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    v6 = (v5 & 8) == 0;
    goto LABEL_6;
  }
  v6 = 0;
LABEL_6:
  objc_msgSend(v1, "setEnabled:", v6);
  ClimateButton.refreshColorConfig()();
  sub_100073388();
}

void sub_100078884()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  id *v3;
  uint64_t (*v4)(void);
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = v0;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_style) != 2
    || (v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis),
        swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis, &v9, 0, 0),
        *v2))
  {
    sub_1000783CC();
    v3 = (id *)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
    swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v10, 0, 0);
    v4 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)*v3) + 0x110);
    v5 = *v3;
    LOBYTE(v4) = v4();

    if ((v4 & 0x1A) == 2)
    {
      sub_10007310C(1330926913, 0xE400000000000000);
      v6 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 12.0, UIFontWeightSemibold);
      v7 = objc_msgSend(*v3, "titleLabel");
      objc_msgSend(v7, "setFont:", v6);

      v8 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton), "titleLabel");
      objc_msgSend(v8, "setFont:", v6);

    }
    else
    {
      sub_10007310C(0, 0);
    }
  }
}

uint64_t sub_100078A28()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding);
}

id sub_100078A3C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding) = a1;
  return sub_100078E38(1);
}

char *sub_100078A54(void *a1, uint64_t a2, char a3)
{
  char *v3;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  char *v11;

  v7 = OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton;
  v8 = objc_allocWithZone((Class)type metadata accessor for ClimateStepperPowerButton());
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, "init");
  v9[OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_style] = a3;
  *(_QWORD *)&v9[OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan] = a1;
  v10 = a1;

  v11 = sub_10007388C(0x6C6C69662E6E6166, 0xE800000000000000, 0, 0, a2, objc_msgSend(v10, "fanLevelRange"));
  objc_msgSend(v10, "registerObserver:", v11);
  sub_100079358();
  sub_100078E38(0);
  sub_100078B68(v11);

  return v11;
}

void sub_100078B68(_BYTE *a1)
{
  id v2;
  unsigned __int8 v3;
  id v4;
  uint64_t v5;
  int v6;
  os_log_type_t v7;
  _BYTE *v8;
  NSObject *v9;
  uint8_t *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  _BOOL8 v21;
  _QWORD v22[5];
  uint64_t v23;

  if ((sub_1000783CC() & 0x18) != 0)
  {
    v2 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC7Climate14ClimateStepper_range], "minimum");
    v3 = objc_msgSend(v2, "unsignedCharValue");

  }
  else
  {
    v4 = sub_10007A15C();
    v3 = v4;
  }
  v5 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue;
  v6 = a1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue];
  a1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue] = v3;
  if (v6 != v3 && a1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding] != 1)
  {
    v7 = static os_log_type_t.default.getter(v4);
    sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v8 = a1;
    v9 = static OS_os_log.default.getter(v8);
    if (os_log_type_enabled(v9, v7))
    {
      v10 = (uint8_t *)swift_slowAlloc(5, -1);
      *(_DWORD *)v10 = 16777472;
      LOBYTE(v22[0]) = a1[v5];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v22, (char *)v22 + 1, v10 + 4, v10 + 5);

      _os_log_impl((void *)&_mh_execute_header, v9, v7, "ContinuousSlider updated currentValue: %hhu", v10, 5u);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {

    }
    v11 = (void *)objc_opt_self(UIView);
    v12 = swift_allocObject(&unk_1000A0878, 24, 7);
    *(_QWORD *)(v12 + 16) = v8;
    v22[4] = sub_10007BC08;
    v23 = v12;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_100070390;
    v22[3] = &unk_1000A0890;
    v13 = _Block_copy(v22);
    v14 = v23;
    v15 = v8;
    swift_release(v14);
    objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 2, v13, 0, 0.25, 0.0);
    _Block_release(v13);
  }
  sub_100078E38(1);
  sub_100078884();
  v16 = *(char **)&a1[OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton];
  sub_10007813C();
  v17 = *(uint64_t (**)(uint64_t))&v16[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  if (!v17)
  {
    v20 = 0;
    goto LABEL_14;
  }
  v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
  v19 = swift_retain(v18);
  v20 = v17(v19);
  sub_100005118((uint64_t)v17, v18);
  if ((v20 & 0x10) == 0)
  {
LABEL_14:
    v21 = (v20 & 8) == 0;
    goto LABEL_15;
  }
  v21 = 0;
LABEL_15:
  objc_msgSend(v16, "setEnabled:", v21);
  ClimateButton.refreshColorConfig()();
  sub_100073388();
}

id sub_100078E38(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id *v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  char v28;
  double v29;
  uint64_t v30;
  uint64_t inited;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char v38;
  void *v39;
  double v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t i;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t j;
  id v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[40];
  char v58[40];
  uint64_t v59;
  _BYTE v60[24];
  unint64_t v61;

  v2 = v1;
  if ((sub_1000783CC() & 0x18) != 0
    || (*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding) & 1) != 0)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton), "setAlpha:", 0.0);
    v4 = (id *)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
    swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v60, 0, 0);
    return objc_msgSend(*v4, "setAlpha:", 1.0);
  }
  v6 = sub_100006058((uint64_t *)&unk_1000B7590);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100088E00;
  v8 = (id *)(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
  v9 = swift_beginAccess(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v60, 0, 0);
  v10 = *v8;
  v11 = *(void **)(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_upButton);
  *(_QWORD *)(v7 + 32) = *v8;
  *(_QWORD *)(v7 + 40) = v11;
  v12 = *(void **)(v2 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskUpButton);
  v13 = *(void **)(v2 + OBJC_IVAR____TtC7Climate14ClimateStepper_downButton);
  *(_QWORD *)(v7 + 48) = v12;
  *(_QWORD *)(v7 + 56) = v13;
  v14 = *(void **)(v2 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskDownButton);
  *(_QWORD *)(v7 + 64) = v14;
  v59 = v7;
  specialized Array._endMutation()(v9);
  v61 = v7;
  v15 = OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan;
  v16 = *(void **)(v2 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan);
  v17 = v10;
  v18 = v11;
  v19 = v12;
  v20 = v13;
  v21 = v14;
  if (objc_msgSend(v16, "hasOn"))
  {
    v22 = *(void **)(v2 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_fillView);
    if (v22)
    {
      v23 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      v24 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v25 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v24 >= v25 >> 1)
      {
        v54 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v24 + 1, 1);
        v24 = v54;
      }
      v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v23);
      specialized Array._endMutation()(v26);

    }
  }
  v27 = *(id *)(v2 + v15);
  v28 = CAFFan.isBlowing.getter();

  if ((v28 & 1) != 0)
  {
    objc_msgSend(*v8, "alpha");
    if (v29 < 0.5)
    {
      if ((a1 & 1) != 0)
      {
        v30 = sub_100006058((uint64_t *)&unk_1000B9FE0);
        inited = swift_initStackObject(v30, v57);
        *(_OWORD *)(inited + 16) = xmmword_100088D00;
        v32 = *(void **)(v2 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton);
        *(_QWORD *)(inited + 32) = v32;
        v59 = inited;
        specialized Array._endMutation()(inited);
        v33 = v59;
        v34 = v32;
        sub_100076630(1, v33);
        swift_bridgeObjectRelease(v33);
        v35 = v61;
        v36 = (uint64_t)sub_100077DDC(v61);
        swift_bridgeObjectRelease(v35);
LABEL_18:
        sub_100076630(0, v36);
        return (id)swift_bridgeObjectRelease(v36);
      }
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton), "setAlpha:", 0.0);
      v45 = v61;
      if (v61 >> 62)
      {
        if ((v61 & 0x8000000000000000) != 0)
          v55 = v61;
        else
          v55 = v61 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v61, 2);
        result = (id)_CocoaArrayWrapper.endIndex.getter(v55);
        v46 = (uint64_t)result;
        if (result)
          goto LABEL_22;
      }
      else
      {
        v46 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = (id)swift_bridgeObjectRetain_n(v61, 2);
        if (v46)
        {
LABEL_22:
          if (v46 >= 1)
          {
            for (i = 0; i != v46; ++i)
            {
              if ((v45 & 0xC000000000000001) != 0)
                v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v45);
              else
                v48 = *(id *)(v45 + 8 * i + 32);
              v49 = v48;
              objc_msgSend(v48, "setAlpha:", 1.0);

            }
            return (id)swift_bridgeObjectRelease_n(v45, 3);
          }
          __break(1u);
          goto LABEL_47;
        }
      }
      return (id)swift_bridgeObjectRelease_n(v45, 3);
    }
  }
  v37 = *(id *)(v2 + v15);
  v38 = CAFFan.isBlowing.getter();

  if ((v38 & 1) != 0)
    return (id)swift_bridgeObjectRelease(v61);
  v39 = *(void **)(v2 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton);
  objc_msgSend(v39, "alpha");
  v36 = v61;
  if (v40 >= 0.5)
    return (id)swift_bridgeObjectRelease(v36);
  if ((a1 & 1) != 0)
  {
    v41 = sub_100077DDC(v61);
    swift_bridgeObjectRelease(v36);
    sub_100076630(1, (uint64_t)v41);
    swift_bridgeObjectRelease(v41);
    v42 = sub_100006058((uint64_t *)&unk_1000B9FE0);
    v43 = swift_initStackObject(v42, v58);
    *(_OWORD *)(v43 + 16) = xmmword_100088D00;
    *(_QWORD *)(v43 + 32) = v39;
    v59 = v43;
    specialized Array._endMutation()(v43);
    v36 = v59;
    v44 = v39;
    goto LABEL_18;
  }
  if (!(v61 >> 62))
  {
    v50 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain_n(v61, 2);
    if (v50)
      goto LABEL_30;
LABEL_45:
    swift_bridgeObjectRelease_n(v36, 3);
    return objc_msgSend(v39, "setAlpha:", 1.0);
  }
  if ((v61 & 0x8000000000000000) != 0)
    v56 = v61;
  else
    v56 = v61 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v61, 2);
  result = (id)_CocoaArrayWrapper.endIndex.getter(v56);
  v50 = (uint64_t)result;
  if (!result)
    goto LABEL_45;
LABEL_30:
  if (v50 >= 1)
  {
    for (j = 0; j != v50; ++j)
    {
      if ((v36 & 0xC000000000000001) != 0)
        v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v36);
      else
        v52 = *(id *)(v36 + 8 * j + 32);
      v53 = v52;
      objc_msgSend(v52, "setAlpha:", 0.0);

    }
    goto LABEL_45;
  }
LABEL_47:
  __break(1u);
  return result;
}

id sub_100079358()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (**v7)();
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;
  char v28[24];

  v1 = *(char **)&v0[OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton];
  v2 = swift_allocObject(&unk_1000A0850, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16, v0);
  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC7Climate13ClimateButton_action];
  swift_beginAccess(&v1[OBJC_IVAR____TtC7Climate13ClimateButton_action], v28, 1, 0);
  v4 = *v3;
  v5 = v3[1];
  *v3 = (uint64_t)sub_10007BBD8;
  v3[1] = v2;
  sub_100005118(v4, v5);
  v6 = swift_allocObject(&unk_1000A0850, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16, v0);
  v7 = (uint64_t (**)())&v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
  *v7 = sub_10007BBE0;
  v7[1] = (uint64_t (*)())v6;
  sub_100005118(v8, v9);
  objc_msgSend(v0, "addSubview:", v1);
  v10 = (void *)objc_opt_self(NSLayoutConstraint);
  v11 = sub_100006058((uint64_t *)&unk_1000B7590);
  v12 = swift_allocObject(v11, 64, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100088DF0;
  v13 = objc_msgSend(v1, "leadingAnchor");
  v14 = objc_msgSend(v0, "leadingAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v12 + 32) = v15;
  v16 = objc_msgSend(v1, "trailingAnchor");
  v17 = objc_msgSend(v0, "trailingAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v12 + 40) = v18;
  v19 = objc_msgSend(v1, "topAnchor");
  v20 = objc_msgSend(v0, "topAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v12 + 48) = v21;
  v22 = objc_msgSend(v1, "bottomAnchor");
  v23 = objc_msgSend(v0, "bottomAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v12 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_100006B04(0, (unint64_t *)&qword_1000B77A0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v10, "activateConstraints:", isa);

  return objc_msgSend(v1, "setAlpha:", 0.0);
}

void sub_100079674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  unsigned int v6;
  void *v7;
  id v8;
  id v9;
  unsigned int v10;
  id v11;
  unsigned int v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BOOL8 v18;
  _BYTE v19[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan;
    v6 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan), "hasOn");
    v7 = *(void **)&v4[v5];
    if (v6)
    {
      objc_msgSend(v7, "setOn:", 1);
    }
    else if (!objc_msgSend(v7, "fanLevel"))
    {
      v8 = *(id *)&v4[v5];
      v9 = objc_msgSend(v8, "fanLevelRange");
      v10 = objc_msgSend(v9, "minimumValue");

      v11 = objc_msgSend(*(id *)&v4[v5], "fanLevelRange");
      v12 = objc_msgSend(v11, "stepValue");

      if ((((v10 + v12) >> 8) & 1) != 0)
      {
        __break(1u);
        return;
      }
      objc_msgSend(v8, "setFanLevel:", (v10 + v12));

    }
    sub_100078884();
    v13 = *(char **)&v4[OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton];
    sub_10007813C();
    v14 = *(uint64_t (**)(uint64_t))&v13[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
    if (v14)
    {
      v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
      v16 = swift_retain(v15);
      v17 = v14(v16);
      sub_100005118((uint64_t)v14, v15);
      if ((v17 & 0x10) != 0)
      {
        v18 = 0;
LABEL_12:
        objc_msgSend(v13, "setEnabled:", v18);
        ClimateButton.refreshColorConfig()();
        sub_100073388();

        return;
      }
    }
    else
    {
      v17 = 0;
    }
    v18 = (v17 & 8) == 0;
    goto LABEL_12;
  }
}

uint64_t sub_100079834(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    return 0;
  v3 = (void *)Strong;
  v4 = sub_1000783CC();

  return v4;
}

id sub_100079894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue);
  v2 = OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan;
  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan), "fanLevel");
  if ((_DWORD)v1 != (_DWORD)result)
    return objc_msgSend(*(id *)(v0 + v2), "setFanLevel:", v1);
  return result;
}

void sub_100079904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unsigned int v8;
  id v9;
  unsigned int v10;
  int v11;
  id v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  id v16;
  unsigned int v17;
  uint64_t v18;

  v3 = type metadata accessor for CAFRange.StepDirection(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan;
  v8 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan), "fanLevel");
  v9 = objc_msgSend(*(id *)(v1 + v7), "fanLevelRange");
  v10 = objc_msgSend(v9, "stepValue");

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v11 == enum case for CAFRange.StepDirection.up(_:))
  {
    v12 = *(id *)(v1 + v7);
    v13 = objc_msgSend(v12, "fanLevelRange");
    v14 = objc_msgSend(v13, "maximumValue");

    if ((((v8 + v10) >> 8) & 1) == 0)
    {
      if ((v8 + v10) >= v14)
        v15 = v14;
      else
        v15 = (v8 + v10);
LABEL_11:
      objc_msgSend(v12, "setFanLevel:", v15);

      return;
    }
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  if (v11 == enum case for CAFRange.StepDirection.down(_:))
  {
    v12 = *(id *)(v1 + v7);
    v16 = objc_msgSend(v12, "fanLevelRange");
    v17 = objc_msgSend(v16, "minimumValue");

    if (((v8 - v10) & 0xFFFFFF00) == 0)
    {
      if ((v8 - v10) <= v17)
        v15 = v17;
      else
        v15 = (v8 - v10);
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_100079AE0()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  char v5;
  id v6;

  if (v0[OBJC_IVAR____TtC7Climate14ClimateStepper_disableSelectedBackgroundMaterial] == 1)
  {
    v1 = *(void **)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 8];
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 16];
    v3 = *(id *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig];
    v4 = v1;
    swift_bridgeObjectRetain(v2);
    v5 = sub_1000783CC();
    v6 = sub_1000477D8(v5, v3, v2);
    swift_bridgeObjectRelease(v2);

  }
  else
  {
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  objc_msgSend(v0, "setBackgroundColor:", v6);

  sub_100079BB4();
}

void sub_100079BB4()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  uint64_t (*v3)(void);
  id v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  id v23;
  double v24;
  char **v25;
  id v26;
  id v27;
  char *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  double v46;
  char **v47;
  id v48;
  id v49;
  _QWORD *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  char v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char v63[24];
  char v64[24];

  v1 = v0;
  v2 = (id *)(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7Climate14ClimateStepper_primaryButton, v64, 0, 0);
  v3 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)*v2) + 0x110);
  v4 = *v2;
  LOBYTE(v3) = v3();

  v5 = v3 & 0x1A;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_style) == 2)
  {
    v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis);
    swift_beginAccess(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_axis, v63, 0, 0);
    if (!*v6)
    {
      v15 = *v2;
      v16 = v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig;
      v17 = *(void **)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig);
      v18 = *(void **)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 8);
      v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate14ClimateStepper_colorConfig + 16);
      v20 = (void *)objc_opt_self(UIColor);
      v21 = (char *)v15;
      v22 = v17;
      v23 = v18;
      *(_QWORD *)&v24 = swift_bridgeObjectRetain(v19).n128_u64[0];
      v25 = &selRef_systemWhiteColor;
      if (v5 == 2)
        v25 = &selRef_systemGreenColor;
      v26 = objc_msgSend(v20, *v25, v24);
      v61 = v16;
      if (v26)
      {
        v27 = v26;

        v23 = v27;
      }
      v62 = v21;
      v28 = &v21[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
      v30 = *(void **)&v21[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig];
      v29 = *(void **)&v21[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8];
      v60 = *(_QWORD *)&v21[OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16];
      *(_QWORD *)v28 = v22;
      *((_QWORD *)v28 + 1) = v23;
      *((_QWORD *)v28 + 2) = v19;
      v31 = v22;
      swift_bridgeObjectRetain_n(v19, 2);
      sub_100006B04(0, (unint64_t *)&qword_1000B70C0, NSObject_ptr);
      v32 = v31;
      v33 = v23;
      v34 = v30;
      if ((static NSObject.== infix(_:_:)(v32) & 1) != 0 && (static NSObject.== infix(_:_:)(v33) & 1) != 0)
      {
        v35 = v60;
        sub_10005B490(v19, v60);
        v59 = v36;
        swift_bridgeObjectRelease(v19);

        v37 = v62;
        v38 = v61;
        if ((v59 & 1) != 0)
        {
LABEL_20:

          swift_bridgeObjectRelease(v35);
          swift_bridgeObjectRelease(v19);
          v39 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton);
          v40 = *(void **)v38;
          v41 = *(void **)(v38 + 8);
          v42 = *(_QWORD *)(v38 + 16);
          v43 = (void *)objc_opt_self(UIColor);
          v44 = v40;
          v45 = v41;
          *(_QWORD *)&v46 = swift_bridgeObjectRetain(v42).n128_u64[0];
          v47 = &selRef_systemBlackColor;
          if (v5 == 2)
            v47 = &selRef_systemGreenColor;
          v48 = objc_msgSend(v43, *v47, v46);
          if (v48)
          {
            v49 = v48;

            v45 = v49;
          }
          v50 = (_QWORD *)(v39 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
          v51 = *(void **)(v39 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig);
          v52 = *(void **)(v39 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 8);
          v53 = *(_QWORD *)(v39 + OBJC_IVAR____TtC7Climate13ClimateButton_colorConfig + 16);
          *v50 = v44;
          v50[1] = v45;
          v50[2] = v42;
          v54 = v44;
          swift_bridgeObjectRetain_n(v42, 2);
          v55 = v54;
          v56 = v45;
          if ((static NSObject.== infix(_:_:)(v55) & 1) != 0 && (static NSObject.== infix(_:_:)(v56) & 1) != 0)
          {
            sub_10005B490(v42, v53);
            v58 = v57;
            swift_bridgeObjectRelease(v42);

            if ((v58 & 1) != 0)
              goto LABEL_30;
          }
          else
          {
            swift_bridgeObjectRelease(v42);

          }
          ClimateButton.refreshColorConfig()();
LABEL_30:

          swift_bridgeObjectRelease(v53);
          swift_bridgeObjectRelease(v42);
          return;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v19);

        v37 = v62;
        v35 = v60;
        v38 = v61;
      }
      (*(void (**)(void))((swift_isaMask & *v37) + 0x230))();
      goto LABEL_20;
    }
  }
  if (v5 == 2)
  {
    v7 = sub_1000783CC();
    v8 = objc_msgSend((id)objc_opt_self(UIColor), "systemGreenColor");
    if ((v7 & 4) != 0)
    {
      v9 = sub_1000470B4();

      v8 = v9;
    }
    objc_msgSend(*v2, "setTitleColor:forState:", v8, 0);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton), "setTitleColor:forState:", v8, 0);
  }
  else
  {
    v10 = *v2;
    v11 = (void *)objc_opt_self(UIColor);
    v12 = v10;
    v13 = objc_msgSend(v11, "systemWhiteColor");
    objc_msgSend(v12, "setTitleColor:forState:", v13, 0);

    v14 = *(void **)(v1 + OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_maskPrimaryButton);
    v8 = objc_msgSend(v11, "systemBlackColor");
    objc_msgSend(v14, "setTitleColor:forState:", v8, 0);
  }

}

id sub_10007A0A8()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  int v3;
  id result;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t ObjectType;

  sub_100075618();
  v1 = *(_BYTE **)(v0 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton);
  v2 = OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted;
  v3 = v1[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted];
  v1[OBJC_IVAR____TtC7Climate13ClimateButton_shouldBeHighlighted] = 0;
  result = objc_msgSend(v1, "setHighlighted:", 0);
  v5 = v1[v2];
  if (v3 != (_DWORD)v5)
  {
    v6 = &v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate];
    result = (id)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC7Climate20ClimateStepperButton_delegate]);
    if (result)
    {
      v7 = result;
      v8 = *((_QWORD *)v6 + 1);
      ObjectType = swift_getObjectType(result);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v5, ObjectType, v8);
      return (id)swift_unknownObjectRelease(v7);
    }
  }
  return result;
}

id sub_10007A15C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  char *v7;
  os_log_type_t v8;
  uint64_t v9;
  id v10;
  unsigned __int8 v11;
  unsigned int v12;
  id v13;
  NSObject *v14;
  char *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  unsigned __int8 v19;
  id v20;
  id v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;

  v1 = v0;
  v2 = OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan;
  v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan], "fanLevel");
  v4 = OBJC_IVAR____TtC7Climate14ClimateStepper_range;
  v5 = *(id *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_range];
  CAFRange.maximumValue<A>()((uint64_t *)((char *)&v25 + 5), &type metadata for UInt8, &protocol witness table for UInt8);

  if (BYTE5(v25) >= v3)
  {
    v12 = objc_msgSend(*(id *)&v1[v2], "fanLevel");
    v13 = *(id *)&v1[v4];
    CAFRange.minimumValue<A>()((uint64_t *)((char *)&v25 + 4), &type metadata for UInt8, &protocol witness table for UInt8);

    if (v12 >= BYTE4(v25))
    {
      return objc_msgSend(*(id *)&v1[v2], "fanLevel");
    }
    else
    {
      if (qword_1000B6FE8 != -1)
        swift_once(&qword_1000B6FE8, sub_10005CB60);
      v14 = qword_1000BC938;
      v15 = v1;
      v16 = static os_log_type_t.default.getter(v15);
      if (os_log_type_enabled(v14, v16))
      {
        v17 = swift_slowAlloc(8, -1);
        *(_DWORD *)v17 = 16777728;
        BYTE2(v25) = objc_msgSend(*(id *)&v1[v2], "fanLevel");
        UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v25 + 2, (char *)&v25 + 3, v17 + 4, v17 + 5);
        *(_WORD *)(v17 + 5) = 256;
        v18 = objc_msgSend(*(id *)&v1[v4], "minimum");
        v19 = objc_msgSend(v18, "unsignedCharValue");

        BYTE1(v25) = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v25 + 1, (char *)&v25 + 2, v17 + 7, v17 + 8);

        _os_log_impl((void *)&_mh_execute_header, v14, v16, "fanLevel value is out of bound. fanLevel: %hhu, min range %hhu", (uint8_t *)v17, 8u);
        swift_slowDealloc(v17, -1, -1);
      }
      else
      {

      }
      v22 = *(id *)&v1[v4];
      CAFRange.minimumValue<A>()((uint64_t *)((char *)&v25 + 3), &type metadata for UInt8, &protocol witness table for UInt8);

      return (id)BYTE3(v25);
    }
  }
  else
  {
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v6 = qword_1000BC938;
    v7 = v1;
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v6, v8))
    {
      v9 = swift_slowAlloc(8, -1);
      *(_DWORD *)v9 = 16777728;
      v24 = objc_msgSend(*(id *)&v1[v2], "fanLevel");
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v9 + 4, v9 + 5);
      *(_WORD *)(v9 + 5) = 256;
      v10 = objc_msgSend(*(id *)&v1[v4], "maximum");
      v11 = objc_msgSend(v10, "unsignedCharValue");

      v23 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v9 + 7, v9 + 8);

      _os_log_impl((void *)&_mh_execute_header, v6, v8, "fanLevel value is out of bound. fanLevel: %hhu, max range %hhu", (uint8_t *)v9, 8u);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {

    }
    v20 = *(id *)&v1[v4];
    CAFRange.maximumValue<A>()(&v25, &type metadata for UInt8, &protocol witness table for UInt8);

    return (id)v25;
  }
}

void sub_10007A524()
{
  uint64_t v0;

}

id sub_10007A550()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateFanContinuousStepper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateFanContinuousStepper()
{
  return objc_opt_self(_TtC7Climate27ClimateFanContinuousStepper);
}

void sub_10007A6C4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_fan);
  v2 = sub_100006B04(0, (unint64_t *)&unk_1000B9FD0, CAFFan_ptr);
  v3 = v1;
  CAFPositioned.layoutKey.getter(v2);

}

_QWORD *sub_10007A73C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100006058((uint64_t *)&unk_1000B9640);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10007AE80(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10007A848(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100006058(&qword_1000BA008);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10007B280(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10007A954(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100006058((uint64_t *)&unk_1000BA020);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10007B060(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10007AA60(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100006058(&qword_1000BA038);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10007AF70(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007AB6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100006058((uint64_t *)&unk_1000B7FE0);
  v11 = *(_QWORD *)(type metadata accessor for CAUVehicleLayoutKey(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for CAUVehicleLayoutKey(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10007B168(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

_QWORD *sub_10007AD74(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100006058(&qword_1000B7460);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10007B388(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007AE80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10007AF70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10007B060(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_100006058(&qword_1000B9978);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10007B168(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(type metadata accessor for CAUVehicleLayoutKey(0) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10007B280(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      sub_100006058((uint64_t *)&unk_1000BA010);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10007B388(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_100006058(&qword_1000BA000);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

id sub_10007B490()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BOOL8 v7;
  id v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  os_log_type_t v13;
  _BYTE *v14;
  NSObject *v15;
  uint8_t *v16;
  id v17;
  uint64_t v18;
  int v19;
  os_log_type_t v20;
  NSObject *v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _BYTE *v29;
  void **v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  void *v34;
  uint64_t (*v35)();
  uint64_t v36;

  v1 = v0;
  sub_100078884();
  v2 = *(char **)&v0[OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton];
  sub_10007813C();
  v3 = *(uint64_t (**)(uint64_t))&v2[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  if (v3)
  {
    v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
    v5 = swift_retain(v4);
    v6 = v3(v5);
    sub_100005118((uint64_t)v3, v4);
    if ((v6 & 0x10) != 0)
    {
      v7 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    v6 = 0;
  }
  v7 = (v6 & 8) == 0;
LABEL_6:
  objc_msgSend(v2, "setEnabled:", v7);
  ClimateButton.refreshColorConfig()();
  sub_100073388();
  if ((sub_1000783CC() & 0x18) != 0)
  {
    v8 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC7Climate14ClimateStepper_range], "minimum");
    v9 = objc_msgSend(v8, "unsignedCharValue");

    v11 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue;
    v12 = v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue];
    v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue] = v9;
    if (v12 != v9 && (v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding] & 1) == 0)
    {
      v13 = static os_log_type_t.default.getter(v10);
      sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
      v14 = v1;
      v15 = static OS_os_log.default.getter(v14);
      if (os_log_type_enabled(v15, v13))
      {
        v16 = (uint8_t *)swift_slowAlloc(5, -1);
        *(_DWORD *)v16 = 16777472;
        LOBYTE(v31) = v1[v11];
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, (char *)&v31 + 1, v16 + 4, v16 + 5);

        _os_log_impl((void *)&_mh_execute_header, v15, v13, "ContinuousSlider updated currentValue: %hhu", v16, 5u);
        swift_slowDealloc(v16, -1, -1);
      }
      else
      {

      }
      v23 = (void *)objc_opt_self(UIView);
      v24 = swift_allocObject(&unk_1000A07B0, 24, 7);
      *(_QWORD *)(v24 + 16) = v14;
      v35 = sub_10007BC08;
      v36 = v24;
      v31 = _NSConcreteStackBlock;
      v32 = 1107296256;
      v25 = &unk_1000A07C8;
LABEL_19:
      v33 = sub_100070390;
      v34 = v25;
      v27 = _Block_copy(&v31);
      v28 = v36;
      v29 = v14;
      swift_release(v28);
      objc_msgSend(v23, "animateWithDuration:delay:options:animations:completion:", 2, v27, 0, 0.25, 0.0, v31, v32);
      _Block_release(v27);
    }
  }
  else
  {
    v17 = sub_10007A15C();
    v18 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue;
    v19 = v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue];
    v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue] = (_BYTE)v17;
    if (v19 != v17 && (v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding] & 1) == 0)
    {
      v20 = static os_log_type_t.default.getter(v17);
      sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
      v14 = v1;
      v21 = static OS_os_log.default.getter(v14);
      if (os_log_type_enabled(v21, v20))
      {
        v22 = (uint8_t *)swift_slowAlloc(5, -1);
        *(_DWORD *)v22 = 16777472;
        LOBYTE(v31) = v1[v18];
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, (char *)&v31 + 1, v22 + 4, v22 + 5);

        _os_log_impl((void *)&_mh_execute_header, v21, v20, "ContinuousSlider updated currentValue: %hhu", v22, 5u);
        swift_slowDealloc(v22, -1, -1);
      }
      else
      {

      }
      v23 = (void *)objc_opt_self(UIView);
      v26 = swift_allocObject(&unk_1000A0760, 24, 7);
      *(_QWORD *)(v26 + 16) = v14;
      v35 = sub_10007BC08;
      v36 = v26;
      v31 = _NSConcreteStackBlock;
      v32 = 1107296256;
      v25 = &unk_1000A0778;
      goto LABEL_19;
    }
  }
  return sub_100078E38(1);
}

void sub_10007B8A4()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  unsigned __int8 v3;
  id v4;
  uint64_t v5;
  int v6;
  os_log_type_t v7;
  _BYTE *v8;
  NSObject *v9;
  uint8_t *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  _BOOL8 v21;
  _QWORD v22[5];
  uint64_t v23;

  v1 = v0;
  if ((sub_1000783CC() & 0x18) != 0)
  {
    v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC7Climate14ClimateStepper_range], "minimum");
    v3 = objc_msgSend(v2, "unsignedCharValue");

  }
  else
  {
    v4 = sub_10007A15C();
    v3 = v4;
  }
  v5 = OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue;
  v6 = v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue];
  v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_currentValue] = v3;
  if (v6 != v3 && v1[OBJC_IVAR____TtC7Climate24ClimateContinuousStepper_isUserSliding] != 1)
  {
    v7 = static os_log_type_t.default.getter(v4);
    sub_100006B04(0, (unint64_t *)&qword_1000B7B20, OS_os_log_ptr);
    v8 = v1;
    v9 = static OS_os_log.default.getter(v8);
    if (os_log_type_enabled(v9, v7))
    {
      v10 = (uint8_t *)swift_slowAlloc(5, -1);
      *(_DWORD *)v10 = 16777472;
      LOBYTE(v22[0]) = v1[v5];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v22, (char *)v22 + 1, v10 + 4, v10 + 5);

      _os_log_impl((void *)&_mh_execute_header, v9, v7, "ContinuousSlider updated currentValue: %hhu", v10, 5u);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {

    }
    v11 = (void *)objc_opt_self(UIView);
    v12 = swift_allocObject(&unk_1000A0710, 24, 7);
    *(_QWORD *)(v12 + 16) = v8;
    v22[4] = sub_10007BB94;
    v23 = v12;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_100070390;
    v22[3] = &unk_1000A0728;
    v13 = _Block_copy(v22);
    v14 = v23;
    v15 = v8;
    swift_release(v14);
    objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 2, v13, 0, 0.25, 0.0);
    _Block_release(v13);
  }
  sub_100078E38(1);
  sub_100078884();
  v16 = *(char **)&v1[OBJC_IVAR____TtC7Climate27ClimateFanContinuousStepper_powerButton];
  sub_10007813C();
  v17 = *(uint64_t (**)(uint64_t))&v16[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock];
  if (!v17)
  {
    v20 = 0;
    goto LABEL_14;
  }
  v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC7Climate20ClimateStepperButton_presentationStatesBlock + 8];
  v19 = swift_retain(v18);
  v20 = v17(v19);
  sub_100005118((uint64_t)v17, v18);
  if ((v20 & 0x10) == 0)
  {
LABEL_14:
    v21 = (v20 & 8) == 0;
    goto LABEL_15;
  }
  v21 = 0;
LABEL_15:
  objc_msgSend(v16, "setEnabled:", v21);
  ClimateButton.refreshColorConfig()();
  sub_100073388();
}

uint64_t sub_10007BB70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10007BB94()
{
  sub_100073588();
}

uint64_t sub_10007BB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007BBAC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007BBB4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10007BBD8(uint64_t a1)
{
  uint64_t v1;

  sub_100079674(a1, v1);
}

uint64_t sub_10007BBE0()
{
  uint64_t v0;

  return sub_100079834(v0);
}

_QWORD *sub_10007BC1C(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)sub_10004F1F4(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_10007D83C(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t sub_10007BCA4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    v4 = __CocoaSet.startIndex.getter(v3);
    v6 = v5;
    v7 = __CocoaSet.endIndex.getter(v3);
    v9 = static __CocoaSet.Index.== infix(_:_:)(v4, v6, v7, v8);
    swift_bridgeObjectRelease(v7);
    if ((v9 & 1) != 0)
      goto LABEL_6;
    goto LABEL_10;
  }
  result = sub_10007DB34(a1);
  if ((v13 & 1) == 0)
  {
    v6 = v12;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v12)
    {
      v4 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
      {
LABEL_6:
        sub_10007F664(v4, v6, v2 != 0);
        return 0;
      }
LABEL_10:
      sub_10007D8CC(v4, v6, v2 != 0, a1);
      v10 = v14;
      sub_10007F664(v4, v6, v2 != 0);
      return v10;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Int sub_10007BDB0(uint64_t a1, uint64_t a2, char a3)
{
  Swift::UInt v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  if (a3)
  {
    if (a3 == 1)
    {
      Hasher._combine(_:)(3uLL);
      v6 = a1;
    }
    else if (a1 | a2)
    {
      if (a1 ^ 1 | a2)
        v6 = 4;
      else
        v6 = 2;
    }
    else
    {
      v6 = 1;
    }
    Hasher._combine(_:)(v6);
  }
  else
  {
    Hasher._combine(_:)(0);
    String.hash(into:)(v8, a1, a2);
  }
  return Hasher._finalize()();
}

Swift::Int sub_10007BE74()
{
  uint64_t v0;

  return sub_10007BDB0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_10007BE80(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt v5;

  v3 = *v1;
  v4 = v1[1];
  if (*((_BYTE *)v1 + 16))
  {
    if (*((_BYTE *)v1 + 16) == 1)
    {
      Hasher._combine(_:)(3uLL);
      v5 = v3;
    }
    else if (v3 | v4)
    {
      if (v3 ^ 1 | v4)
        v5 = 4;
      else
        v5 = 2;
    }
    else
    {
      v5 = 1;
    }
    Hasher._combine(_:)(v5);
  }
  else
  {
    Hasher._combine(_:)(0);
    String.hash(into:)(a1, v3, v4);
  }
}

Swift::Int sub_10007BF24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  Swift::UInt v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = *((unsigned __int8 *)v0 + 16);
  Hasher.init(_seed:)(v6);
  if (v3)
  {
    if (v3 == 1)
    {
      Hasher._combine(_:)(3uLL);
      v4 = v1;
    }
    else if (v1 | v2)
    {
      if (v1 ^ 1 | v2)
        v4 = 4;
      else
        v4 = 2;
    }
    else
    {
      v4 = 1;
    }
    Hasher._combine(_:)(v4);
  }
  else
  {
    Hasher._combine(_:)(0);
    String.hash(into:)(v6, v1, v2);
  }
  return Hasher._finalize()();
}

uint64_t sub_10007BFDC(uint64_t a1, uint64_t a2)
{
  return sub_10007DBBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

void sub_10007C03C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  char *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;

  v1 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window;
  v2 = *(void **)&v0[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window];
  if (v2
    && (v3 = objc_msgSend(v2, "windowScene")) != 0
    && (v4 = v3, v5 = objc_msgSend(v3, "screen"), v4, v5))
  {
    objc_msgSend(v5, "scale");

  }
  else
  {
    if (qword_1000B6FE8 != -1)
      swift_once(&qword_1000B6FE8, sub_10005CB60);
    v6 = qword_1000BC938;
    v7 = v0;
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v6, v8))
    {
      v9 = swift_slowAlloc(22, -1);
      v10 = swift_slowAlloc(16, -1);
      v11 = (_QWORD *)v10;
      *(_DWORD *)v9 = 138412546;
      v12 = *(void **)&v0[v1];
      if (v12)
      {
        v20 = (_QWORD *)v10;
        v21 = *(id *)&v0[v1];
        v13 = v12;
        v14 = v9 + 4;
        v15 = v9 + 12;
        v11 = v20;
      }
      else
      {
        v15 = v9 + 12;
        v21 = 0;
        v14 = v9 + 4;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v14, v15);
      *v11 = v12;

      *(_WORD *)(v9 + 12) = 2112;
      v16 = *(void **)&v0[v1];
      if (v16 && (v17 = objc_msgSend(v16, "windowScene")) != 0)
      {
        v18 = v17;
        v21 = v17;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v9 + 14, v9 + 22);
      }
      else
      {
        v21 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v9 + 14, v9 + 22);
        v18 = 0;
      }
      v11[1] = v18;

      _os_log_impl((void *)&_mh_execute_header, v6, v8, "Unable to resolve the screen.  window=%@ windowScene=%@", (uint8_t *)v9, 0x16u);
      v19 = sub_100006058((uint64_t *)&unk_1000B8370);
      swift_arrayDestroy(v11, 2, v19);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }
    else
    {

    }
  }
}

void sub_10007C320(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _BYTE v10[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    if (qword_1000B6FE8 != -1)
      Strong = swift_once(&qword_1000B6FE8, sub_10005CB60);
    v7 = qword_1000BC938;
    v8 = static os_log_type_t.default.getter(Strong);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "asset library updated", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }
    sub_10007C960(a3);

  }
}

void sub_10007C498(void *a1)
{
  char *v1;
  char *v2;
  NSObject *v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  const void *v31;
  id v32;
  uint64_t v33;

  v2 = v1;
  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v4 = qword_1000BC938;
  v5 = a1;
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v4, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    v32 = v5;
    v9 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v7 + 4, v7 + 12);
    *v8 = v5;

    _os_log_impl((void *)&_mh_execute_header, v4, v6, "Scene did disconnect scene: %@", v7, 0xCu);
    v10 = sub_100006058((uint64_t *)&unk_1000B8370);
    swift_arrayDestroy(v8, 1, v10);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  v11 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v12 = objc_msgSend(v11, "delegate");

  if (v12)
  {
    v13 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
    v14 = sub_10006B490();
    swift_unknownObjectRelease(v12);
    v15 = sub_100026E34((uint64_t)v2);

    v16 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController;
    v17 = *(void **)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController];
    *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController] = v15;
    v18 = v15;

    v19 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window;
    v20 = *(void **)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window];
    if (v20)
    {
      objc_msgSend(v20, "setRootViewController:", *(_QWORD *)&v2[v16]);
      v20 = *(void **)&v2[v19];
    }
    objc_msgSend(v20, "makeKeyAndVisible");

    v21 = objc_opt_self(UIWindowScene);
    v22 = swift_dynamicCastObjCClass(v5, v21);
    if (v22)
    {
      v23 = (void *)v22;
      sub_100006B04(0, (unint64_t *)&unk_1000BA1B0, NSString_ptr);
      v24 = v5;
      v25 = (void *)NSString.init(stringLiteral:)("%p", v31);
      v26 = sub_100006058(&qword_1000B7DA0);
      v27 = swift_allocObject(v26, 72, 7);
      *(_OWORD *)(v27 + 16) = xmmword_100088D00;
      *(_QWORD *)(v27 + 56) = type metadata accessor for ClimateSceneDelegate();
      *(_QWORD *)(v27 + 64) = sub_10007F6DC((unint64_t *)&unk_1000BA1C0, v28, (uint64_t (*)(uint64_t))type metadata accessor for ClimateSceneDelegate, (uint64_t)&protocol conformance descriptor for NSObject);
      *(_QWORD *)(v27 + 32) = v2;
      v29 = v2;
      v30 = (void *)NSString.init(format:_:)(v25, v27);

      objc_msgSend(v23, "_unregisterSettingsDiffActionArrayForKey:", v30);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10007C960(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char *v22;

  v2 = v1;
  v3 = objc_msgSend(a1, "hasPhysicalControlBars");
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController];
  if (v3)
  {
    v5 = type metadata accessor for ClimatePhysicalControlBarsViewController();
    if (swift_dynamicCastClass(v4, v5))
      return;
    v6 = &v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
    v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
    v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 8];
    *(_OWORD *)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type] = xmmword_10008B5D0;
  }
  else
  {
    v9 = type metadata accessor for ClimateOverlayViewController();
    if (swift_dynamicCastClass(v4, v9))
      return;
    v6 = &v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
    v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
    v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 8];
    *(_QWORD *)v6 = 0;
    *((_QWORD *)v6 + 1) = 0;
  }
  v10 = v6[16];
  v6[16] = 2;
  sub_10002C6A0(v7, v8, v10);
  v11 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v12 = objc_msgSend(v11, "delegate");

  if (v12)
  {
    v13 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0);
    v14 = sub_10006B490();
    swift_unknownObjectRelease(v12);
    v15 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window;
    v16 = *(void **)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window];
    if (v16)
      v17 = objc_msgSend(v16, "windowScene");
    else
      v17 = 0;
    v18 = sub_10002602C(v2, v17);

    if (v18)
    {
      v19 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController;
      v20 = *(void **)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController];
      *(_QWORD *)&v2[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController] = v18;
      v22 = v18;

      v21 = *(void **)&v2[v15];
      if (v21)
      {
        objc_msgSend(v21, "setRootViewController:", *(_QWORD *)&v2[v19]);
        v21 = *(void **)&v2[v15];
      }
      objc_msgSend(v21, "makeKeyAndVisible");

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10007CB48(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006B04(0, (unint64_t *)&qword_1000BA190, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = swift_allocObject(&unk_1000A0A78, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v2);
  v14 = swift_allocObject(&unk_1000A0AA0, 25, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_BYTE *)(v14 + 24) = a1;
  aBlock[4] = sub_10007F6B8;
  v24 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100070390;
  aBlock[3] = &unk_1000A0AB8;
  v15 = _Block_copy(aBlock);
  swift_release(v24);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_10007F6DC((unint64_t *)&unk_1000B8380, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_100006058((uint64_t *)&unk_1000BA1A0);
  v19 = sub_10000AA10(&qword_1000B8390, (uint64_t *)&unk_1000BA1A0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v4, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_10007CD84(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  char **v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  _BYTE v20[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_statusBarStyleAssertion);
    if (!v6)
    {
LABEL_21:

      return;
    }
    v7 = (void *)objc_opt_self(CAMediaTimingFunction);
    v8 = v6;
    v9 = objc_msgSend(v7, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
    v10 = objc_msgSend((id)objc_opt_self(BSAnimationSettings), "settingsWithDuration:timingFunction:", v9, 0.35);
    if (!v10)
    {
LABEL_20:

      v5 = v9;
      goto LABEL_21;
    }
    v11 = v10;
    v12 = objc_msgSend(v8, "isValid");
    if ((_DWORD)v12 == (a2 & 1))
    {
      v17 = v11;
LABEL_19:

      goto LABEL_20;
    }
    if ((a2 & 1) != 0)
    {
      if (qword_1000B6FE8 != -1)
        v12 = (id)swift_once(&qword_1000B6FE8, sub_10005CB60);
      v13 = qword_1000BC938;
      v14 = static os_log_type_t.default.getter(v12);
      if (!os_log_type_enabled(v13, v14))
      {
        v16 = &selRef_acquireWithAnimationSettings_;
        goto LABEL_18;
      }
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Acquire status bar style assertion", v15, 2u);
      v16 = &selRef_acquireWithAnimationSettings_;
    }
    else
    {
      if (qword_1000B6FE8 != -1)
        v12 = (id)swift_once(&qword_1000B6FE8, sub_10005CB60);
      v18 = qword_1000BC938;
      v19 = static os_log_type_t.default.getter(v12);
      if (!os_log_type_enabled(v18, v19))
      {
        v16 = &selRef_relinquishWithAnimationSettings_;
        goto LABEL_18;
      }
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Relinquish status bar style assertion", v15, 2u);
      v16 = &selRef_relinquishWithAnimationSettings_;
    }
    swift_slowDealloc(v15, -1, -1);
LABEL_18:
    objc_msgSend(v8, *v16, v11);
    v17 = v5;
    v5 = v8;
    v8 = v11;
    goto LABEL_19;
  }
}

id sub_10007D05C()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  objc_super v9;
  objc_super v10;

  *(_QWORD *)&v0[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window] = 0;
  v1 = &v0[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
  *(_OWORD *)v1 = xmmword_10008B5E0;
  v1[16] = 0;
  v0[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_wereSteppersHidden] = 0;
  v2 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController;
  v3 = (objc_class *)type metadata accessor for ClimateRoleViewController();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = &v4[OBJC_IVAR____TtC7Climate25ClimateRoleViewController_role];
  *(_QWORD *)v5 = 0x74657320746F6ELL;
  *((_QWORD *)v5 + 1) = 0xE700000000000000;
  v10.receiver = v4;
  v10.super_class = v3;
  v6 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", 0, 0);
  v7 = &v6[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_persistentIdentifier];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0xE000000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_statusBarStyleAssertion] = 0;

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for ClimateSceneDelegate();
  return objc_msgSendSuper2(&v9, "init");
}

id sub_10007D194()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateSceneDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ClimateSceneDelegate()
{
  return objc_opt_self(_TtC7Climate20ClimateSceneDelegate);
}

uint64_t destroy for ClimateSceneDelegateType(uint64_t a1)
{
  return sub_10002C6A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s7Climate24ClimateSceneDelegateTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10002C68C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ClimateSceneDelegateType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10002C68C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10002C6A0(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for ClimateSceneDelegateType(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClimateSceneDelegateType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_10002C6A0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClimateSceneDelegateType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClimateSceneDelegateType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_10007D4A8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_10007D4C0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClimateSceneDelegateType()
{
  return &type metadata for ClimateSceneDelegateType;
}

uint64_t storeEnumTagSinglePayload for ClimateLayoutMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10007D534 + 4 * byte_10008B605[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10007D568 + 4 * byte_10008B600[v4]))();
}

uint64_t sub_10007D568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10007D570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10007D578);
  return result;
}

uint64_t sub_10007D584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10007D58CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10007D590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10007D598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClimateLayoutMode()
{
  return &type metadata for ClimateLayoutMode;
}

unint64_t sub_10007D5BC()
{
  unint64_t result;

  result = qword_1000BA168;
  if (!qword_1000BA168)
  {
    result = swift_getWitnessTable(&unk_10008B6DC, &type metadata for ClimateSceneDelegateType);
    atomic_store(result, (unint64_t *)&qword_1000BA168);
  }
  return result;
}

uint64_t sub_10007D600(uint64_t *a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;

  v1 = *a1;
  KeyPath = swift_getKeyPath(&unk_10008B7D8);
  v3 = swift_getKeyPath(&unk_10008B800);
  static Published.subscript.getter(v1, KeyPath, v3);
  swift_release(KeyPath);
  return swift_release(v3);
}

uint64_t sub_10007D668(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  sub_100020FF0(a1, (uint64_t)&v14 - v8);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_10008B7D8);
  v12 = swift_getKeyPath(&unk_10008B800);
  sub_100020FF0((uint64_t)v9, (uint64_t)v6);
  static Published.subscript.setter(v6, v10, KeyPath, v12);
  return sub_100008B88((uint64_t)v9, (uint64_t *)&unk_1000B7C40);
}

uint64_t sub_10007D754@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10008B790);
  v5 = swift_getKeyPath(&unk_10008B7B8);
  static Published.subscript.getter(v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10007D7D0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10008B790);
  v5 = swift_getKeyPath(&unk_10008B7B8);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

_QWORD *sub_10007D83C(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = (uint64_t *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v6 = *v5;
    v7 = v5[1];
    v8 = *(void **)(*(_QWORD *)(a5 + 56) + 8 * a2);
    *result = v8;
    swift_bridgeObjectRetain(v7);
    v9 = v8;
    return (_QWORD *)v6;
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_10007D8CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  id v20;
  uint64_t v21;
  void *v22;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v11 = __CocoaSet.Index.element.getter(v7, a2);
        v21 = v11;
        v12 = sub_100006B04(0, &qword_1000BA170, UIOpenURLContext_ptr);
        swift_unknownObjectRetain(v11);
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
        v4 = v22;
        swift_unknownObjectRelease(v11);
        v13 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v14 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v13 & ~v14;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v16 = static NSObject.== infix(_:_:)(v15);

          if ((v16 & 1) == 0)
          {
            v17 = ~v14;
            do
            {
              v7 = (v7 + 1) & v17;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v19 = static NSObject.== infix(_:_:)(v18);

            }
            while ((v19 & 1) == 0);
          }

LABEL_20:
          v20 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  v9 = __CocoaSet.element(at:)(a1, a2, v8);
  v21 = v9;
  v10 = sub_100006B04(0, &qword_1000BA170, UIOpenURLContext_ptr);
  swift_unknownObjectRetain(v9);
  swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
  swift_unknownObjectRelease(v9);
}

uint64_t sub_10007DB34(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_10007DBBC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
        return a4 == a1;
    }
    else if (a1 | a2)
    {
      if (a1 ^ 1 | a2)
      {
        if (a6 == 2 && a4 == 2 && !a5)
          return 1;
      }
      else if (a6 == 2 && a4 == 1 && !a5)
      {
        return 1;
      }
    }
    else if (a6 == 2 && !(a5 | a4))
    {
      return 1;
    }
    return 0;
  }
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
}

void sub_10007DC90(void *a1, void *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  double v29;
  double v30;
  _BOOL8 v31;
  id v32;
  id v33;
  _BYTE *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  id v41;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  _BYTE *v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  NSString v65;
  id v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  void *v79;
  double v80;
  __objc2_prot **v81;
  id v82;
  __objc2_prot **v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  id v104;
  void *v105;
  id v106;
  id v107;
  id v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  void *v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  id v125;
  id v126[3];

  v3 = v2;
  v6 = sub_100006058((uint64_t *)&unk_1000B7B60);
  __chkstk_darwin(v6);
  v8 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006058(&qword_1000B9258);
  v122 = *(_QWORD *)(v9 - 8);
  v123 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006058((uint64_t *)&unk_1000BA1D0);
  v124 = *(char **)(v12 - 8);
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a2, "persistentIdentifier", v13);
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20 = (uint64_t *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_persistentIdentifier];
  v21 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_persistentIdentifier + 8];
  *v20 = v17;
  v20[1] = v19;
  swift_bridgeObjectRelease(v21);
  v22 = objc_opt_self(UIWindowScene);
  v23 = swift_dynamicCastObjCClass(a1, v22);
  if (!v23)
    return;
  v24 = v23;
  v118 = a2;
  v119 = v12;
  v25 = objc_allocWithZone((Class)UIWindow);
  v125 = a1;
  v26 = objc_msgSend(v25, "initWithWindowScene:", v24);
  v27 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window;
  v28 = *(void **)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window];
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window] = v26;

  objc_msgSend(v125, "_safeAreaInsetsForInterfaceOrientation:", 1);
  v31 = v29 != 0.0 && v29 == v30;
  v121 = (id)objc_opt_self(UIApplication);
  v32 = objc_msgSend(v121, "sharedApplication");
  v33 = objc_msgSend(v32, "delegate");

  if (!v33)
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v120 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v33, v120, 0, 0, 0);
  v34 = sub_10006B490();
  swift_unknownObjectRelease(v33);
  v34[OBJC_IVAR____TtC7Climate18ClimateCoordinator_hasDualStatusBar] = v31;

  v35 = objc_msgSend(v125, "_FBSScene");
  v36 = objc_msgSend(v35, "settings");

  v37 = objc_opt_self(CRSUIClimateOverlaySceneSettings);
  v38 = swift_dynamicCastObjCClass(v36, v37);
  if (v38)
  {
    v39 = v38;
    v40 = String._bridgeToObjectiveC()();
    CAFSignpostEmit_Scene(v40);

    v41 = objc_msgSend(v125, "_FBSScene");
    objc_msgSend(v41, "addObserver:", v3);

    v42 = objc_msgSend(v121, "sharedApplication");
    v43 = objc_msgSend(v42, "delegate");

    if (v43)
    {
      swift_dynamicCastClassUnconditional(v43, v120, 0, 0, 0);
      v44 = (char *)sub_10006B490();
      swift_unknownObjectRelease(v43);
      v45 = *(_QWORD *)&v44[OBJC_IVAR____TtC7Climate18ClimateCoordinator_assetManager];
      swift_retain(v45);

      dispatch thunk of CAUAssetLibraryManager.$assetLibrary.getter(v46);
      swift_release(v45);
      v126[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
      v47 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v8, 1, 1, v47);
      v48 = sub_100006B04(0, (unint64_t *)&unk_1000B7B80, NSRunLoop_ptr);
      v49 = sub_10000AA10((unint64_t *)&unk_1000BA1E0, &qword_1000B9258, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v50 = sub_10007F724((unint64_t *)&qword_1000B7B90, (unint64_t *)&unk_1000B7B80, NSRunLoop_ptr, (uint64_t)&protocol conformance descriptor for NSRunLoop);
      v51 = v123;
      Publisher.receive<A>(on:options:)(v126, v8, v123, v48, v49, v50);
      sub_100008B88((uint64_t)v8, (uint64_t *)&unk_1000B7B60);

      (*(void (**)(char *, uint64_t))(v122 + 8))(v11, v51);
      v52 = swift_allocObject(&unk_1000A0A78, 24, 7);
      swift_unknownObjectWeakInit(v52 + 16, v3);
      v53 = swift_allocObject(&unk_1000A0AF0, 32, 7);
      *(_QWORD *)(v53 + 16) = v52;
      *(_QWORD *)(v53 + 24) = v39;
      v54 = sub_10000AA10((unint64_t *)&unk_1000BA1F0, (uint64_t *)&unk_1000BA1D0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v55 = v36;
      v56 = v119;
      v57 = Publisher<>.sink(receiveValue:)(sub_10007F790, v53, v119, v54);
      v58 = swift_release(v53);
      (*((void (**)(char *, uint64_t, __n128))v124 + 1))(v15, v56, v58);
      v59 = &v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_cancellables];
      swift_beginAccess(v59, v126, 33, 0);
      AnyCancellable.store(in:)(v59);
      swift_endAccess(v126);

      swift_release(v57);
      return;
    }
    goto LABEL_42;
  }
  v60 = v31;

  v61 = v118;
  v62 = objc_msgSend(v118, "role");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
  v64 = v63;

  v65 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v64);
  CAFSignpostEmit_Scene(v65);

  v66 = objc_msgSend(objc_allocWithZone((Class)UIWindow), "initWithWindowScene:", v24);
  v67 = *(void **)&v3[v27];
  *(_QWORD *)&v3[v27] = v66;

  v68 = *(void **)&v3[v27];
  if (v68)
  {
    objc_msgSend(v68, "setAutoresizesSubviews:", 1);
    v68 = *(void **)&v3[v27];
    if (v68)
    {
      objc_msgSend(v68, "setAutoresizingMask:", 18);
      v68 = *(void **)&v3[v27];
    }
  }
  objc_msgSend(v68, "makeKeyAndVisible");
  v69 = *(void **)&v3[v27];
  if (v69)
  {
    objc_msgSend(v69, "setOverrideUserInterfaceStyle:", 2);
    v70 = *(void **)&v3[v27];
    if (v70)
      objc_msgSend(v70, "setHidden:", 0);
  }
  v71 = objc_msgSend(v61, "role");
  v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(_UIWindowSceneSessionRoleCarPlay);
  v74 = v73;
  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
  v77 = v75;
  if (v72 == v76 && v74 == v75)
  {
    swift_bridgeObjectRelease_n(v74, 2);
    goto LABEL_20;
  }
  v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v74, v76, v75, 0);
  swift_bridgeObjectRelease(v74);
  swift_bridgeObjectRelease(v77);
  if ((v78 & 1) != 0)
  {
LABEL_20:

    v79 = *(void **)&v3[v27];
    if (v79)
    {
      objc_msgSend(v79, "frame");
      if (v80 > 240.0)
        v60 = 2;
    }
    v81 = &off_1000AA000;
    v82 = v121;
    v83 = &off_1000AA000;
    v84 = &v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
    v85 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
    v86 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 8];
    *(_QWORD *)v84 = v60;
    *((_QWORD *)v84 + 1) = 0;
    v87 = v84[16];
    v84[16] = 1;
    sub_10002C6A0(v85, v86, v87);
    goto LABEL_31;
  }
  v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIWindowSceneSessionRoleApplication);
  v90 = v89;
  v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
  v93 = v91;
  if (v88 == v92 && v90 == v91)
  {

    swift_bridgeObjectRelease_n(v90, 2);
  }
  else
  {
    v94 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v90, v92, v91, 0);

    swift_bridgeObjectRelease(v90);
    swift_bridgeObjectRelease(v93);
    if ((v94 & 1) == 0)
    {
      v99 = objc_msgSend(v61, "role");
      v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
      v102 = v101;

      v103 = &v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
      v96 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
      v97 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 8];
      *(_QWORD *)v103 = v100;
      *((_QWORD *)v103 + 1) = v102;
      v98 = v103[16];
      v103[16] = 0;
      goto LABEL_30;
    }
  }
  v95 = &v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
  v96 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type];
  v97 = *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_type + 8];
  *(_OWORD *)v95 = xmmword_10008B5F0;
  v98 = v95[16];
  v95[16] = 2;
LABEL_30:
  sub_10002C6A0(v96, v97, v98);
  v81 = &off_1000AA000;
  v82 = v121;
  v83 = &off_1000AA000;
LABEL_31:
  v104 = objc_msgSend(objc_allocWithZone((Class)CRSUIStatusBarStyleAssertion), "initWithInterfaceStyle:", 2);
  v105 = *(void **)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_statusBarStyleAssertion];
  *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_statusBarStyleAssertion] = v104;

  v106 = objc_msgSend(v82, (SEL)v83[202]);
  v107 = objc_msgSend(v106, (SEL)v81[203]);

  if (!v107)
  {
LABEL_43:
    __break(1u);
    return;
  }
  swift_dynamicCastClassUnconditional(v107, v120, 0, 0, 0);
  v108 = sub_10006B490();
  swift_unknownObjectRelease(v107);
  v109 = sub_10002602C(v3, 0);

  if (v109)
  {
    v111 = OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController;
    v112 = *(void **)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController];
    *(_QWORD *)&v3[OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_rootViewController] = v109;
    v124 = v109;

    v113 = *(void **)&v3[v27];
    if (v113)
    {
      objc_msgSend(v113, "setRootViewController:", *(_QWORD *)&v3[v111]);
      v113 = *(void **)&v3[v27];
    }
    objc_msgSend(v113, "makeKeyAndVisible");

  }
  else
  {
    if (qword_1000B6FE8 != -1)
      v110 = swift_once(&qword_1000B6FE8, sub_10005CB60);
    v114 = qword_1000BC938;
    v115 = static os_log_type_t.default.getter(v110);
    if (os_log_type_enabled(v114, v115))
    {
      v116 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v116 = 0;
      _os_log_impl((void *)&_mh_execute_header, v114, v115, "Unable to attach view controller", v116, 2u);
      swift_slowDealloc(v116, -1, -1);
    }

  }
}

void sub_10007E6B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  double v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v1 = v0;
  v2 = (void *)objc_opt_self(UIApplication);
  v3 = objc_msgSend(v2, "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (v4)
  {
    v5 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
    v6 = sub_10006B490();
    swift_unknownObjectRelease(v4);
    KeyPath = swift_getKeyPath(&unk_10008B820);
    v8 = swift_getKeyPath(&unk_10008B848);
    static Published.subscript.getter(v6, KeyPath, v8);

    swift_release(KeyPath);
    *(_QWORD *)&v9 = swift_release(v8).n128_u64[0];
    if (v16 != 1 || *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_wereSteppersHidden) != 1)
      goto LABEL_6;
    v10 = objc_msgSend(v2, "sharedApplication", v9);
    v11 = objc_msgSend(v10, "delegate");

    if (v11)
    {
      swift_dynamicCastClassUnconditional(v11, v5, 0, 0, 0);
      v12 = sub_10006B490();
      swift_unknownObjectRelease(v11);
      v13 = swift_getKeyPath(&unk_10008B790);
      v14 = swift_getKeyPath(&unk_10008B7B8);
      v15 = 0;
      static Published.subscript.setter(&v15, v12, v13, v14);
LABEL_6:
      sub_10007CB48(1);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10007E884()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  double v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = (void *)objc_opt_self(UIApplication);
  v3 = objc_msgSend(v2, "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = type metadata accessor for ClimateAppDelegate();
  swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
  v6 = sub_10006B490();
  swift_unknownObjectRelease(v4);
  KeyPath = swift_getKeyPath(&unk_10008B790);
  v8 = swift_getKeyPath(&unk_10008B7B8);
  static Published.subscript.getter(v6, KeyPath, v8);

  swift_release(KeyPath);
  *(_QWORD *)&v9 = swift_release(v8).n128_u64[0];
  *(_BYTE *)(v1 + OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_wereSteppersHidden) = (v21 & 1) == 0;
  v10 = objc_msgSend(v2, "sharedApplication", v9);
  v11 = objc_msgSend(v10, "delegate");

  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  swift_dynamicCastClassUnconditional(v11, v5, 0, 0, 0);
  v12 = sub_10006B490();
  swift_unknownObjectRelease(v11);
  v13 = swift_getKeyPath(&unk_10008B820);
  v14 = swift_getKeyPath(&unk_10008B848);
  static Published.subscript.getter(v12, v13, v14);

  swift_release(v13);
  *(_QWORD *)&v15 = swift_release(v14).n128_u64[0];
  if (v21 != 1)
  {
LABEL_6:
    sub_10007CB48(0);
    return;
  }
  v16 = objc_msgSend(v2, "sharedApplication", v15);
  v17 = objc_msgSend(v16, "delegate");

  if (v17)
  {
    swift_dynamicCastClassUnconditional(v17, v5, 0, 0, 0);
    v18 = sub_10006B490();
    swift_unknownObjectRelease(v17);
    v19 = swift_getKeyPath(&unk_10008B790);
    v20 = swift_getKeyPath(&unk_10008B7B8);
    v21 = 3;
    static Published.subscript.setter(&v21, v18, v19, v20);
    goto LABEL_6;
  }
LABEL_9:
  __break(1u);
}

void sub_10007EB04(void *a1, id a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  id v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t KeyPath;
  uint64_t v17;
  unint64_t *v18;
  void (*v19)(id *, _QWORD);
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;

  v3 = objc_msgSend(a2, "settingsDiff");
  v22 = objc_msgSend(a1, "settings");
  v4 = objc_opt_self(CRSUIClimateOverlaySceneSettings);
  v5 = swift_dynamicCastObjCClass(v22, v4);
  if (!v5)
  {

    return;
  }
  v6 = (void *)v5;
  if (qword_1000B6FE8 != -1)
    swift_once(&qword_1000B6FE8, sub_10005CB60);
  v7 = qword_1000BC938;
  v8 = v22;
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v10 = 134217984;
    v23 = objc_msgSend(v6, "deactivationReasons");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v10 + 4, v10 + 12);

    _os_log_impl((void *)&_mh_execute_header, v7, v9, "Scene settings updated, deactivation reasons: %lu", v10, 0xCu);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {

  }
  v11 = objc_msgSend(v6, "deactivationReasons");
  v12 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v13 = objc_msgSend(v12, "delegate");

  if (v11 == (id)128)
  {
    if (v13)
    {
      v14 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v13, v14, 0, 0, 0);
      v15 = sub_10006B490();
      swift_unknownObjectRelease(v13);
      KeyPath = swift_getKeyPath(&unk_10008B790);
      v17 = swift_getKeyPath(&unk_10008B7B8);
      v19 = (void (*)(id *, _QWORD))static Published.subscript.modify(&v23, v15, KeyPath, v17);
      if ((*v18 & 2) != 0)
      {
        v20 = *v18 & 0xFFFFFFFFFFFFFFFDLL;
LABEL_15:
        *v18 = v20;
        goto LABEL_16;
      }
      goto LABEL_16;
    }
    __break(1u);
  }
  else if (v13)
  {
    v21 = type metadata accessor for ClimateAppDelegate();
    swift_dynamicCastClassUnconditional(v13, v21, 0, 0, 0);
    v15 = sub_10006B490();
    swift_unknownObjectRelease(v13);
    KeyPath = swift_getKeyPath(&unk_10008B790);
    v17 = swift_getKeyPath(&unk_10008B7B8);
    v19 = (void (*)(id *, _QWORD))static Published.subscript.modify(&v23, v15, KeyPath, v17);
    if ((*v18 & 2) == 0)
    {
      v20 = *v18 | 2;
      goto LABEL_15;
    }
LABEL_16:
    v19(&v23, 0);

    swift_release(KeyPath);
    swift_release(v17);
    return;
  }
  __break(1u);
}

void sub_10007EE3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  void *v64;
  uint64_t v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v2 = sub_100006058((uint64_t *)&unk_1000BA180);
  __chkstk_darwin(v2);
  v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006058((uint64_t *)&unk_1000B7C40);
  __chkstk_darwin(v5);
  v77 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v78 = (uint64_t)&v75 - v8;
  __chkstk_darwin(v9);
  v11 = (char *)&v75 - v10;
  v79 = type metadata accessor for ClimateZone(0);
  v12 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v76 = (uint64_t)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100006058(&qword_1000B8D00);
  __chkstk_darwin(v14);
  v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for CAUVehicleLayoutKey(0);
  v82 = *(_QWORD *)(v17 - 8);
  v83 = v17;
  __chkstk_darwin(v17);
  v80 = (uint64_t)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100006058(&qword_1000B8A30);
  __chkstk_darwin(v19);
  v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v81 = (char *)&v75 - v27;
  swift_bridgeObjectRetain(a1);
  v29 = (void *)sub_10007BCA4(v28);
  swift_bridgeObjectRelease(a1);
  if (!v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
    goto LABEL_6;
  }
  v30 = objc_msgSend(v29, "URL");

  static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v31 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v31(v21, v25, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
LABEL_6:
    v35 = &qword_1000B8A30;
    v36 = (uint64_t)v21;
    goto LABEL_7;
  }
  v32 = v81;
  v31(v81, v21, v22);
  sub_10005CCD8((uint64_t)v16);
  v34 = v82;
  v33 = v83;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v16, 1, v83) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v80, v16, v33);
    v41 = (void *)objc_opt_self(UIApplication);
    v42 = objc_msgSend(v41, "sharedApplication");
    v43 = objc_msgSend(v42, "delegate");

    if (v43)
    {
      v44 = type metadata accessor for ClimateAppDelegate();
      swift_dynamicCastClassUnconditional(v43, v44, 0, 0, 0);
      v45 = sub_10006B490();
      swift_unknownObjectRelease(v43);
      KeyPath = swift_getKeyPath(&unk_10008B748);
      v47 = swift_getKeyPath(&unk_10008B770);
      static Published.subscript.getter(v45, KeyPath, v47);

      swift_release(KeyPath);
      swift_release(v47);
      v48 = type metadata accessor for ClimateSystemManager(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v4, 1, v48) == 1)
      {
        sub_100008B88((uint64_t)v4, (uint64_t *)&unk_1000BA180);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1, 1, v79);
LABEL_20:
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v83);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v81, v22);
        v35 = (uint64_t *)&unk_1000B7C40;
        v36 = (uint64_t)v11;
        goto LABEL_7;
      }
      v49 = *(_QWORD *)&v4[*(int *)(v48 + 36)];
      if (*(_QWORD *)(v49 + 16) && (v50 = sub_10005B798(v80), (v51 & 1) != 0))
      {
        sub_100008C1C(*(_QWORD *)(v49 + 56) + *(_QWORD *)(v12 + 72) * v50, (uint64_t)v11);
        v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
        v53 = v11;
        v54 = 0;
      }
      else
      {
        v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
        v53 = v11;
        v54 = 1;
      }
      v55 = v79;
      v52(v53, v54, 1, v79);
      sub_10000AB60((uint64_t)v4, type metadata accessor for ClimateSystemManager);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v55) == 1)
        goto LABEL_20;
      v56 = v76;
      sub_10000AB1C((uint64_t)v11, v76);
      v57 = objc_msgSend(v41, "sharedApplication");
      v58 = objc_msgSend(v57, "delegate");

      if (v58)
      {
        swift_dynamicCastClassUnconditional(v58, v44, 0, 0, 0);
        v59 = sub_10006B490();
        swift_unknownObjectRelease(v58);
        v60 = swift_getKeyPath(&unk_10008B790);
        v61 = swift_getKeyPath(&unk_10008B7B8);
        v84 = 0;
        static Published.subscript.setter(&v84, v59, v60, v61);
        v62 = *(void **)(v75 + OBJC_IVAR____TtC7Climate20ClimateSceneDelegate_window);
        if (v62)
        {
          v63 = objc_msgSend(v62, "rootViewController");
          if (v63)
          {
            v64 = v63;
            v65 = objc_opt_self(UINavigationController);
            v66 = (void *)swift_dynamicCastObjCClass(v64, v65);
            if (v66)

          }
        }
        v67 = objc_msgSend(v41, "sharedApplication");
        v68 = objc_msgSend(v67, "delegate");

        if (v68)
        {
          swift_dynamicCastClassUnconditional(v68, v44, 0, 0, 0);
          v69 = sub_10006B490();
          swift_unknownObjectRelease(v68);
          v70 = v78;
          sub_100008C1C(v56, v78);
          v52((char *)v70, 0, 1, v79);
          v71 = swift_getKeyPath(&unk_10008B7D8);
          v72 = swift_getKeyPath(&unk_10008B800);
          v73 = v77;
          sub_100020FF0(v70, v77);
          v74 = v69;
          static Published.subscript.setter(v73, v74, v71, v72);
          sub_100008B88(v70, (uint64_t *)&unk_1000B7C40);

          sub_10000AB60(v56, type metadata accessor for ClimateZone);
          (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v83);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v81, v22);
          return;
        }
        goto LABEL_31;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_31:
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v32, v22);
  v35 = &qword_1000B8D00;
  v36 = (uint64_t)v16;
LABEL_7:
  v37 = sub_100008B88(v36, v35);
  if (qword_1000B6FE8 != -1)
    v37 = swift_once(&qword_1000B6FE8, sub_10005CB60);
  v38 = qword_1000BC938;
  v39 = static os_log_type_t.default.getter(v37);
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "No available climate zone in URL.", v40, 2u);
    swift_slowDealloc(v40, -1, -1);
  }
}

uint64_t sub_10007F664(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_10007F670()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007F694()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10007F6B8()
{
  uint64_t v0;

  sub_10007CD84(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10007F6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007F6D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007F6DC(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007F724(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100006B04(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007F764()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10007F790(uint64_t a1)
{
  uint64_t v1;

  sub_10007C320(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10007F798()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC7ClimateP33_9FB30AF7C92EDB436A97558C7891602819ResourceBundleClass);
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}
