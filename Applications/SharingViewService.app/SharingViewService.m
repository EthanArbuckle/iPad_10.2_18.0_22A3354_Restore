uint64_t sub_10000424C()
{
  return 1;
}

void sub_100004258()
{
  Hasher._combine(_:)(0);
}

const char *sub_100004280()
{
  return "LocalAuthentication";
}

const char *sub_100004294()
{
  return "DimpleKey";
}

Swift::Int sub_1000042A8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

Swift::Int sub_1000042E8(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

const char *sub_100004324()
{
  return "AppleAccount";
}

const char *sub_100004338()
{
  return "AABranding";
}

unint64_t sub_10000434C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006A6C((uint64_t *)&unk_1001A7E30);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100006BD8(v7, (uint64_t)v16, (uint64_t *)&unk_1001A3260);
    result = sub_100005CF4((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_100006AAC(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000448C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006A6C(&qword_1001A32A0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 48);
  while (1)
  {
    v7 = (uint64_t)*(v6 - 2);
    v8 = (uint64_t)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    v10 = v9;
    result = sub_100005D24(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v10;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000045A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006A6C(&qword_1001A3290);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100006BD8(v7, (uint64_t)&v14, &qword_1001A3298);
    v8 = v14;
    result = sub_100005D88(v14);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v8;
    result = (unint64_t)sub_100006AAC(&v15, (_OWORD *)(v4[7] + 32 * result));
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v7 += 40;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000046D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006A6C(&qword_1001A3240);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100006BD8(v7, (uint64_t)&v16, &qword_1001A3248);
    v8 = v16;
    v9 = v17;
    result = sub_100005D24(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_100006AAC(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100004804(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006A6C(&qword_1001A32A8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_100005D24(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100004924(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void **v6;
  void *v7;
  unint64_t v8;
  void *v9;
  id v10;
  unint64_t result;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006A6C(&qword_1001A7C70);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (void **)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = (unint64_t)*(v6 - 1);
    v9 = *v6;
    v10 = *(v6 - 3);
    sub_100006B68(v7, v8, v9);
    result = sub_100005E08((uint64_t)v10);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v10;
    v13 = (_QWORD *)(v4[7] + 24 * result);
    *v13 = v7;
    v13[1] = v8;
    v13[2] = v9;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v16;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100004A58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_100006A6C(&qword_1001A32D0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_100006A6C(&qword_1001A32D8);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_100006BD8(v13, (uint64_t)v5, &qword_1001A32D0);
    result = sub_100005EAC((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for UUID(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v5, v19);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100004BEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006A6C(&qword_1001A7D60);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_100005D24(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100004CFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006A6C(&qword_1001A3288);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (id *)(a1 + 40);
  while (1)
  {
    v7 = *((unsigned __int8 *)v6 - 8);
    v8 = *v6;
    result = sub_100005E38(v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v4[6] + result) = v7;
    *(_QWORD *)(v4[7] + 8 * result) = v8;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4[2] = v13;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100004DFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006A6C(&qword_1001A3280);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (unint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *((unsigned __int8 *)v6 - 16);
    v8 = *(v6 - 1);
    v9 = *v6;
    sub_100006B94(v8, *v6);
    result = sub_100005E38(v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v4[6] + result) = v7;
    v12 = (uint64_t *)(v4[7] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 3;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100004F0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100006A6C((uint64_t *)&unk_1001A3270);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *((_QWORD *)v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_100005D24(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 24;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t variable initialization expression of SDB389BubbleMonitor.bubbleDevices()
{
  return sub_100004A58((uint64_t)&_swiftEmptyArrayStorage);
}

id variable initialization expression of SDB389BubbleMonitor.queue()
{
  return (id)CUMainQueue();
}

uint64_t variable initialization expression of SDB389BubbleMonitor.updateHandler()
{
  return 0;
}

id variable initialization expression of SDB389BubbleMonitor.bubbleScanner()
{
  return objc_msgSend(objc_allocWithZone((Class)SFDeviceDiscovery), "init");
}

id variable initialization expression of SVSProxVideoView.movieView()
{
  uint64_t v0;

  v0 = type metadata accessor for MediaPlayerView();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
}

void type metadata accessor for SFPencilDeviceType(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A31B8, (uint64_t)&unk_100176CF8);
}

uint64_t initializeBufferWithCopyOfBuffer for B389InfoPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 initializeWithTake for B389ErrorButton(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000050EC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10000510C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for MKCoordinateRegion(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A31C0, (uint64_t)&unk_100176D70);
}

void type metadata accessor for SBUIRemoteAlertServiceButtonEvents(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A31C8, (uint64_t)&unk_100176D98);
}

__n128 initializeWithTake for ProgressiveGATTWriteManager(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A31D0, (uint64_t)&unk_100176E18);
}

void type metadata accessor for SFB389NFCResponse(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A31D8, (uint64_t)&unk_100176E40);
}

void type metadata accessor for VPScannerViewControllerEvent(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A31E0, (uint64_t)&unk_100176E60);
}

void type metadata accessor for SVSUserActionType(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A31E8, (uint64_t)&unk_100176E80);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A31F0, (uint64_t)&unk_100176EA0);
}

uint64_t sub_1000051D0(uint64_t a1, uint64_t a2)
{
  return sub_10000544C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_1000051F0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1000051F8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_10000520C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_100005220@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10000524C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_100005270(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_100005284@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100005298(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000052AC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1000052C0(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1000052D4()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1000052E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_1000052FC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_100005310(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_100005384(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_100005400@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

uint64_t sub_100005440(uint64_t a1, uint64_t a2)
{
  return sub_10000544C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10000544C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100005488(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000054C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

_DWORD *sub_100005538@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

id sub_100005548()
{
  id *v0;

  return *v0;
}

uint64_t sub_100005550@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_100005558(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005B80(&qword_1001A3398, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_100131508);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100005598(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005B80(&qword_1001A3398, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_100131508);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000055DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005B80(&qword_1001A33D0, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_1001317D4);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

BOOL sub_10000561C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_100005630(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unsigned __int8 *sub_100005644@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_100005654(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_QWORD *sub_100005660@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_100005674(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1000056A4(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1000056B8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1000056CC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1000056DC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_1000056EC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100005700@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_100006A34(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_10000573C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_1000057C4()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(SPPairingSessionErrorDomain);
}

uint64_t sub_1000057D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005B80(&qword_1001A33D0, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_1001317D4);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100005814(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005B80(&qword_1001A33D0, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_1001317D4);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100005854(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005B80(&qword_1001A33D0, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_1001317D4);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_1000058B8()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_1000058EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005B80(&qword_1001A33D0, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_1001317D4);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10000593C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7, a1);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

void sub_100005998(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_1000059A4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1000059B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100005B80((unint64_t *)&qword_1001A33D8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100131790);
  v3 = sub_100005B80(&qword_1001A33E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1001315B4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100005A38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_100005A7C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100005AA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100005B80(&qword_1001A3230, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_100130DC8);
  v3 = sub_100005B80(&qword_1001A3238, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_100130D68);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100005B28()
{
  return sub_100005B80(&qword_1001A31F8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_100130D2C);
}

uint64_t sub_100005B54()
{
  return sub_100005B80(&qword_1001A3200, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_100130D00);
}

uint64_t sub_100005B80(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100005BC0()
{
  return sub_100005B80(&qword_1001A3208, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_100130D9C);
}

uint64_t sub_100005BEC()
{
  return sub_100005B80(&qword_1001A3210, (uint64_t (*)(uint64_t))type metadata accessor for SBUIRemoteAlertServiceButtonEvents, (uint64_t)&unk_100130EE8);
}

uint64_t sub_100005C18()
{
  return sub_100005B80(&qword_1001A3218, (uint64_t (*)(uint64_t))type metadata accessor for SBUIRemoteAlertServiceButtonEvents, (uint64_t)&unk_100130EB8);
}

uint64_t sub_100005C44()
{
  return sub_100005B80(&qword_1001A3220, (uint64_t (*)(uint64_t))type metadata accessor for SBUIRemoteAlertServiceButtonEvents, (uint64_t)&unk_100130F10);
}

uint64_t sub_100005C70()
{
  return sub_100005B80(&qword_1001A3228, (uint64_t (*)(uint64_t))type metadata accessor for SBUIRemoteAlertServiceButtonEvents, (uint64_t)&unk_100130F48);
}

uint64_t sub_100005C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100005B80(&qword_1001A33D0, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_1001317D4);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

unint64_t sub_100005CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100005FA4(a1, v4);
}

unint64_t sub_100005D24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_100006068(a1, a2, v5);
}

unint64_t sub_100005D88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_100006148(a1, v7);
}

unint64_t sub_100005E08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1000062BC(a1, v4);
}

uint64_t sub_100005E38(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, *(_QWORD *)(v1 + 40));
  v3 = sub_1000079BC(a1);
  v5 = v4;
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v5);
  v6 = Hasher._finalize()();
  return sub_1000063C4(a1, v6);
}

unint64_t sub_100005EAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_100005B80((unint64_t *)&unk_1001A32C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_100006720(a1, v7);
}

unint64_t sub_100005F18(Swift::UInt32 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_100006860(a1, v3);
}

unint64_t sub_100005F70(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v1 + 40), a1, 4);
  return sub_100006860(a1, v3);
}

unint64_t sub_100005FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_100006AF8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_100006B34((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_100006068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100006148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1000062BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_100006ABC();
    v7 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v8 = static NSObject.== infix(_:_:)(v7, a1);

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = static NSObject.== infix(_:_:)(v10, a1);

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1000063C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_100006720(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v18 = a1;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_100005B80((unint64_t *)&qword_1001A5530, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v15 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v18, v5, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v15 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_100006860(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1000068FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  unsigned int v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unsigned int v11;
  __int128 v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100006A6C(&qword_1001A32B0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = a1 + 32; ; i += 40)
    {
      sub_100006BD8(i, (uint64_t)&v11, &qword_1001A32B8);
      v5 = v11;
      result = sub_100005F70(v11);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      result = (unint64_t)sub_100006AAC(&v12, (_OWORD *)(v3[7] + 32 * result));
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_1000069FC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_100006A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_100006A6C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_OWORD *sub_100006AAC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_100006ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A3250;
  if (!qword_1001A3250)
  {
    v1 = objc_opt_self(CBCharacteristic);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A3250);
  }
  return result;
}

uint64_t sub_100006AF8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_100006B34(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

id sub_100006B68(id result, unint64_t a2, void *a3)
{
  if (a3)
  {
    sub_100006B94((uint64_t)result, a2);
    return a3;
  }
  return result;
}

uint64_t sub_100006B94(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_100006BD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100006A6C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for SFDeviceSetupAccountType(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A32E0, (uint64_t)&unk_100176EC8);
}

uint64_t sub_100006C3C()
{
  return 0;
}

ValueMetadata *type metadata accessor for DTOFeatureFlag()
{
  return &type metadata for DTOFeatureFlag;
}

uint64_t _s18SharingViewService14DTOFeatureFlagOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s18SharingViewService14DTOFeatureFlagOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100006CE8 + 4 * byte_100130B96[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100006D08 + 4 * byte_100130B9B[v4]))();
}

_BYTE *sub_100006CE8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100006D08(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100006D10(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100006D18(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100006D20(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100006D28(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppleAccountFeatureFlags()
{
  return &type metadata for AppleAccountFeatureFlags;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A32E8, (uint64_t)&unk_100177060);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A32F0, (uint64_t)&unk_1001770E0);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A32F8, (uint64_t)&unk_100177108);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A3300, (uint64_t)&unk_100177130);
}

void type metadata accessor for SPPairingSessionError(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A3308, (uint64_t)&unk_100177158);
}

uint64_t sub_100006DA8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100006DC8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A3310, (uint64_t)&unk_1001771D8);
}

void type metadata accessor for SFDeviceModelCode(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A3318, (uint64_t)&unk_100177200);
}

void type metadata accessor for SFDeviceClassCode(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A3320, (uint64_t)&unk_100177220);
}

void type metadata accessor for SFOSVersion(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A3328, (uint64_t)&unk_100177240);
}

void type metadata accessor for CBPairingType(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A3330, (uint64_t)&unk_100177260);
}

void type metadata accessor for PRXDismissalType(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A3338, (uint64_t)&unk_100177280);
}

uint64_t sub_100006E68()
{
  return sub_100005B80(&qword_1001A3340, (uint64_t (*)(uint64_t))type metadata accessor for PRXDismissalType, (uint64_t)&unk_1001311D4);
}

uint64_t sub_100006E94()
{
  return sub_100005B80(&qword_1001A3348, (uint64_t (*)(uint64_t))type metadata accessor for PRXDismissalType, (uint64_t)&unk_1001311A4);
}

uint64_t sub_100006EC0()
{
  return sub_100005B80(&qword_1001A3350, (uint64_t (*)(uint64_t))type metadata accessor for PRXDismissalType, (uint64_t)&unk_1001311FC);
}

uint64_t sub_100006EEC()
{
  return sub_100005B80(&qword_1001A3358, (uint64_t (*)(uint64_t))type metadata accessor for PRXDismissalType, (uint64_t)&unk_100131234);
}

uint64_t sub_100006F18()
{
  return sub_100005B80(&qword_1001A3360, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_100131420);
}

uint64_t sub_100006F44()
{
  return sub_100005B80(&qword_1001A3368, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_10013144C);
}

uint64_t sub_100006F70()
{
  return sub_100005B80(&qword_1001A3370, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100131578);
}

uint64_t sub_100006F9C()
{
  return sub_100005B80(&qword_1001A3378, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10013154C);
}

unint64_t sub_100006FCC()
{
  unint64_t result;

  result = qword_1001A3380;
  if (!qword_1001A3380)
  {
    result = swift_getWitnessTable(&unk_1001316A0, &type metadata for AppleAccountFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1001A3380);
  }
  return result;
}

unint64_t sub_100007014()
{
  unint64_t result;

  result = qword_1001A3388;
  if (!qword_1001A3388)
  {
    result = swift_getWitnessTable(&unk_100131708, &type metadata for DTOFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_1001A3388);
  }
  return result;
}

uint64_t sub_100007058()
{
  return sub_100005B80(&qword_1001A3390, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1001315E8);
}

uint64_t sub_100007084()
{
  return sub_100005B80(&qword_1001A3398, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_100131508);
}

uint64_t sub_1000070B0()
{
  return sub_100005B80(&qword_1001A33A0, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_1001314D4);
}

uint64_t sub_1000070DC()
{
  return sub_100005B80(&qword_1001A33A8, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_100131490);
}

uint64_t sub_100007108()
{
  return sub_100005B80(&qword_1001A33B0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_10013187C);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_100007228(a1, &qword_1001A33E8, (uint64_t)&unk_1001772A8);
}

uint64_t sub_100007148()
{
  return sub_100005B80(&qword_1001A33B8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100131840);
}

unint64_t sub_100007178()
{
  unint64_t result;

  result = qword_1001A33C0;
  if (!qword_1001A33C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1001A33C0);
  }
  return result;
}

uint64_t sub_1000071BC()
{
  return sub_100005B80(&qword_1001A33C8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1001318B8);
}

uint64_t sub_1000071E8()
{
  return sub_100005B80(&qword_1001A33D0, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_1001317D4);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_100007228(a1, (unint64_t *)&unk_1001A33F0, (uint64_t)&unk_100177320);
}

void sub_100007228(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

Swift::String *_FBSOpenApplicationOptionKeyUnlockDevice.unsafeMutableAddressor()
{
  return &_FBSOpenApplicationOptionKeyUnlockDevice;
}

Swift::String *_FBSOpenApplicationOptionKeyPromptUnlockDevice.unsafeMutableAddressor()
{
  return &_FBSOpenApplicationOptionKeyPromptUnlockDevice;
}

uint64_t destroy for B389InfoPayload(uint64_t a1)
{
  sub_100007348(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_100007348(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  sub_100007348(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  sub_100007348(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  return sub_100007348(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
}

uint64_t sub_100007348(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    ((void (*)(void))swift_release)();
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t *initializeWithCopy for B389InfoPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = a2[1];
  sub_100006B94(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  sub_100006B94(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  v8 = a2[4];
  v9 = a2[5];
  sub_100006B94(v8, v9);
  a1[4] = v8;
  a1[5] = v9;
  v10 = a2[6];
  v11 = a2[7];
  sub_100006B94(v10, v11);
  a1[6] = v10;
  a1[7] = v11;
  v13 = a2[8];
  v12 = a2[9];
  sub_100006B94(v13, v12);
  a1[8] = v13;
  a1[9] = v12;
  return a1;
}

uint64_t *assignWithCopy for B389InfoPayload(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v4 = *a2;
  v5 = a2[1];
  sub_100006B94(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_100007348(v6, v7);
  v8 = a2[2];
  v9 = a2[3];
  sub_100006B94(v8, v9);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_100007348(v10, v11);
  v12 = a2[4];
  v13 = a2[5];
  sub_100006B94(v12, v13);
  v14 = a1[4];
  v15 = a1[5];
  a1[4] = v12;
  a1[5] = v13;
  sub_100007348(v14, v15);
  v16 = a2[6];
  v17 = a2[7];
  sub_100006B94(v16, v17);
  v18 = a1[6];
  v19 = a1[7];
  a1[6] = v16;
  a1[7] = v17;
  sub_100007348(v18, v19);
  v21 = a2[8];
  v20 = a2[9];
  sub_100006B94(v21, v20);
  v22 = a1[8];
  v23 = a1[9];
  a1[8] = v21;
  a1[9] = v20;
  sub_100007348(v22, v23);
  return a1;
}

__n128 initializeWithTake for B389InfoPayload(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t *assignWithTake for B389InfoPayload(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100007348(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_100007348(v6, v7);
  v8 = a1[4];
  v9 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_100007348(v8, v9);
  v10 = a1[6];
  v11 = a1[7];
  *((_OWORD *)a1 + 3) = a2[3];
  sub_100007348(v10, v11);
  v12 = a1[8];
  v13 = a1[9];
  *((_OWORD *)a1 + 4) = a2[4];
  sub_100007348(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for B389InfoPayload(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for B389InfoPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for B389InfoPayload()
{
  return &type metadata for B389InfoPayload;
}

_BYTE *initializeBufferWithCopyOfBuffer for B389Characteristic(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for B389Characteristic(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for B389Characteristic(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_100007718 + 4 * byte_100131925[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_10000774C + 4 * asc_100131920[v4]))();
}

uint64_t sub_10000774C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100007754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10000775CLL);
  return result;
}

uint64_t sub_100007768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100007770);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_100007774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000777C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100007788(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100007790(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for B389Characteristic()
{
  return &type metadata for B389Characteristic;
}

void sub_1000077A8()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(CBUUID), "UUIDWithString:", v0);

  qword_1001AD3A8 = (uint64_t)v1;
}

void sub_100007814()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;

  v0 = objc_allocWithZone((Class)NSUserDefaults);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithSuiteName:", v1);

  v3 = sub_100006A6C(&qword_1001A34E0);
  Optional.unwrap(_:file:line:)(&qword_1001AD3B0, sub_1000078C8, 0, "SharingViewService/B389Common.swift", 35, 2, 20, v3);

}

unint64_t sub_1000078C8()
{
  return 0xD00000000000002ELL;
}

void sub_1000078E4()
{
  NSString v0;
  id v1;
  uint64_t v2;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(LSBundleProxy), "bundleProxyForIdentifier:", v0);

  v2 = sub_100006A6C(&qword_1001A34E8);
  Optional.unwrap(_:file:line:)(&qword_1001AD3B8, sub_1000079A0, 0, "SharingViewService/B389Common.swift", 35, 2, 27, v2);

}

unint64_t sub_1000079A0()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1000079BC(unsigned __int8 a1)
{
  return ((unint64_t (*)())((char *)sub_1000079E8 + 4 * byte_10013192A[a1]))();
}

unint64_t sub_1000079E8()
{
  return 0xD000000000000024;
}

uint64_t sub_100007AD0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD v13[2];

  v2 = type metadata accessor for Mirror(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)&v11 + 1) = &type metadata for B389Characteristic;
  LOBYTE(v10) = a1;
  v6 = Mirror.init(reflecting:)(&v10);
  v7 = (_QWORD *)Mirror.children.getter(v6);
  sub_100007BEC(v7, &v10);
  swift_release(v7);
  if (!v12)
  {
    sub_10000845C((uint64_t)&v10);
    goto LABEL_5;
  }
  swift_bridgeObjectRelease(*((_QWORD *)&v10 + 1));
  sub_100006AAC(&v11, v13);
  if (!swift_dynamicCast(&v10, v13, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
LABEL_5:
    v8 = 7104878;
    goto LABEL_6;
  }
  v8 = v10;
LABEL_6:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

uint64_t sub_100007BEC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;

  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  ObjectType = swift_getObjectType(v3);
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRetain(v5);
  v8 = dispatch thunk of _AnyIndexBox._typeID.getter(ObjectType, v4);
  v9 = swift_getObjectType(v5);
  result = dispatch thunk of _AnyIndexBox._typeID.getter(v9, v6);
  if (v8 == result)
  {
    v11 = dispatch thunk of _AnyIndexBox._isEqual(to:)(v5, v6, ObjectType, v4);
    swift_unknownObjectRelease(v5);
    if ((v11 & 1) != 0)
    {
      result = swift_unknownObjectRelease(v3);
      a2[1] = 0u;
      a2[2] = 0u;
      *a2 = 0u;
    }
    else
    {
      dispatch thunk of _AnyCollectionBox.subscript.getter(v3, v4);
      return swift_unknownObjectRelease(v3);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100007CF4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    v4 = __CocoaSet.startIndex.getter(v3);
    v6 = v5;
    v7 = __CocoaSet.endIndex.getter(v3);
    v9 = static __CocoaSet.Index.== infix(_:_:)(v4, v6, v7, v8);
    swift_bridgeObjectRelease(v7);
    if ((v9 & 1) != 0)
      goto LABEL_6;
    goto LABEL_10;
  }
  result = sub_1000D2B1C(a1);
  if ((v13 & 1) == 0)
  {
    v6 = v12;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v12)
    {
      v4 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
      {
LABEL_6:
        sub_100008990(v4, v6, v2 != 0);
        return 0;
      }
LABEL_10:
      sub_1000D28A8(v4, v6, v2 != 0, a1);
      v10 = v14;
      sub_100008990(v4, v6, v2 != 0);
      return v10;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100007E00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *a2;
  sub_1000079BC(*a1);
  v4 = v3;
  sub_1000079BC(v2);
  if (v4 == v5)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v6 = v5;
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, v4, 0xD000000000000024, v5, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

Swift::Int sub_100007E88()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  sub_1000079BC(v1);
  v3 = v2;
  String.hash(into:)(v5, 0xD000000000000024, v2);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100007EE8(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;

  sub_1000079BC(*v1);
  v4 = v3;
  String.hash(into:)(a1, 0xD000000000000024, v3);
  return swift_bridgeObjectRelease(v4);
}

Swift::Int sub_100007F28(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  sub_1000079BC(v2);
  v4 = v3;
  String.hash(into:)(v6, 0xD000000000000024, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100007F84@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_10000840C(*a1, a1[1]);
  *a2 = result;
  return result;
}

unint64_t sub_100007FB0@<X0>(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;
  unint64_t result;
  uint64_t v4;

  result = sub_1000079BC(*v1);
  *a1 = 0xD000000000000024;
  a1[1] = v4;
  return result;
}

void sub_100007FE0(_QWORD *a1@<X8>)
{
  *a1 = &off_100176430;
}

uint64_t sub_100007FF0()
{
  char *v0;

  return sub_100007AD0(*v0);
}

unint64_t sub_100007FFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A34C0;
  if (!qword_1001A34C0)
  {
    v1 = sub_100008048(&qword_1001A34C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1001A34C0);
  }
  return result;
}

uint64_t sub_100008048(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_100008090()
{
  unint64_t result;

  result = qword_1001A34D0;
  if (!qword_1001A34D0)
  {
    result = swift_getWitnessTable(&unk_100131A5C, &type metadata for B389Characteristic);
    atomic_store(result, (unint64_t *)&qword_1001A34D0);
  }
  return result;
}

void sub_1000080D4()
{
  specialized ContiguousArray.reserveCapacity(_:)(&objc_release_x10_ptr, 19);
  objc_opt_self(CBUUID);
  JUMPOUT(0x10000824CLL);
}

uint64_t sub_10000840C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_100176468, a1, a2, &unk_1001A3148);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x13)
    return 19;
  else
    return v3;
}

uint64_t sub_10000845C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006A6C(&qword_1001A34D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10000849C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_1000084EC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_100006B94(v1, v0);
  if (__OFADD__((int)v1, 8))
  {
    __break(1u);
  }
  else if ((int)v1 + 8 >= (int)v1)
  {
    v2 = ((uint64_t (*)(_QWORD))Data._Representation.subscript.getter)((int)v1);
    v4 = v3;
    sub_10001A3B0(8, v1, v0);
    sub_1000ABCF0(v2, v4);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1000088F8);
}

uint64_t sub_100008990(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t destroy for PasswordSharingViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
}

_QWORD *initializeWithCopy for PasswordSharingViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v7 = (void *)a2[6];
  v6 = a2[7];
  a1[6] = v7;
  a1[7] = v6;
  v9 = a2[8];
  v8 = a2[9];
  a1[8] = v9;
  a1[9] = v8;
  v11 = a2[10];
  v10 = a2[11];
  a1[10] = v11;
  a1[11] = v10;
  v12 = a2[12];
  a1[12] = v12;
  ((void (*)(void))swift_bridgeObjectRetain)();
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v13 = v7;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  return a1;
}

_QWORD *assignWithCopy for PasswordSharingViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a2[6];
  v11 = (void *)a1[6];
  a1[6] = v10;
  v12 = v10;

  a1[7] = a2[7];
  v13 = a2[8];
  v14 = a1[8];
  a1[8] = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  a1[9] = a2[9];
  v15 = a2[10];
  v16 = a1[10];
  a1[10] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  a1[11] = a2[11];
  v17 = a2[12];
  v18 = a1[12];
  a1[12] = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  return a1;
}

__n128 initializeWithTake for PasswordSharingViewModel(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

_QWORD *assignWithTake for PasswordSharingViewModel(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(a1[5]);
  v8 = (void *)a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);

  v9 = *(_QWORD *)(a2 + 64);
  v10 = a1[8];
  a1[7] = *(_QWORD *)(a2 + 56);
  a1[8] = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = a1[10];
  a1[9] = *(_QWORD *)(a2 + 72);
  a1[10] = v11;
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 96);
  v14 = a1[12];
  a1[11] = *(_QWORD *)(a2 + 88);
  a1[12] = v13;
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PasswordSharingViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PasswordSharingViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PasswordSharingViewModel()
{
  return &type metadata for PasswordSharingViewModel;
}

_QWORD *sub_100008CFC(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UUID(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain(v7);
    if (v13(v10, 1, v11))
    {
      v14 = sub_100006A6C(&qword_1001A42A0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (_QWORD *)((char *)v4 + v16);
    v19 = (_QWORD *)((char *)a2 + v16);
    v61 = v19[1];
    *v18 = *v19;
    v18[1] = v61;
    *((_BYTE *)v4 + v17) = *((_BYTE *)a2 + v17);
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_QWORD *)((char *)v4 + v20);
    v23 = (_QWORD *)((char *)a2 + v20);
    v60 = v23[1];
    *v22 = *v23;
    v22[1] = v60;
    *((_BYTE *)v4 + v21) = *((_BYTE *)a2 + v21);
    v24 = a3[11];
    *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *(_QWORD *)((char *)v4 + v24) = *(_QWORD *)((char *)a2 + v24);
    v25 = a3[12];
    v26 = a3[13];
    v27 = (_QWORD *)((char *)v4 + v25);
    v28 = (_QWORD *)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = (_QWORD *)((char *)v4 + v26);
    v31 = (_QWORD *)((char *)a2 + v26);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = a3[14];
    v34 = a3[15];
    v35 = (_QWORD *)((char *)v4 + v33);
    v36 = (_QWORD *)((char *)a2 + v33);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = (_QWORD *)((char *)v4 + v34);
    v39 = (_QWORD *)((char *)a2 + v34);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = a3[17];
    *(_DWORD *)((char *)v4 + a3[16]) = *(_DWORD *)((char *)a2 + a3[16]);
    __dst = (char *)v4 + v41;
    v59 = (char *)a2 + v41;
    v42 = type metadata accessor for Date(0);
    v43 = *(_QWORD *)(v42 - 8);
    v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v60);
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v40);
    if (v44(v59, 1, v42))
    {
      v45 = sub_100006A6C(&qword_1001A6F70);
      memcpy(__dst, v59, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dst, v59, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v42);
    }
    v46 = a3[18];
    v47 = (char *)v4 + v46;
    v48 = (char *)a2 + v46;
    if (v44((char *)a2 + v46, 1, v42))
    {
      v49 = sub_100006A6C(&qword_1001A6F70);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v47, v48, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v47, 0, 1, v42);
    }
    v50 = a3[19];
    v51 = (char *)v4 + v50;
    v52 = (char *)a2 + v50;
    if (v44((char *)a2 + v50, 1, v42))
    {
      v53 = sub_100006A6C(&qword_1001A6F70);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v51, v52, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v51, 0, 1, v42);
    }
    v54 = a3[20];
    v55 = (char *)v4 + v54;
    v56 = (char *)a2 + v54;
    if (v44((char *)a2 + v54, 1, v42))
    {
      v57 = sub_100006A6C(&qword_1001A6F70);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v55, v56, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v55, 0, 1, v42);
    }
    *((_BYTE *)v4 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  }
  return v4;
}

uint64_t sub_1000090D0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[12] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[13] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[15] + 8));
  v7 = a1 + a2[17];
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = a1 + a2[18];
  if (!v10(v11, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  v12 = a1 + a2[19];
  if (!v10(v12, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  v13 = a1 + a2[20];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v13, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
  return result;
}

_QWORD *sub_10000927C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain(v6);
  if (v12(v9, 1, v10))
  {
    v13 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v59 = v17[1];
  *v16 = *v17;
  v16[1] = v59;
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  v18 = a3[8];
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v18);
  v21 = (_QWORD *)((char *)a2 + v18);
  v58 = v21[1];
  *v20 = *v21;
  v20[1] = v58;
  *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
  v22 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  v23 = a3[12];
  v24 = a3[13];
  v25 = (_QWORD *)((char *)a1 + v23);
  v26 = (_QWORD *)((char *)a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (_QWORD *)((char *)a1 + v24);
  v29 = (_QWORD *)((char *)a2 + v24);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[14];
  v32 = a3[15];
  v33 = (_QWORD *)((char *)a1 + v31);
  v34 = (_QWORD *)((char *)a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = (_QWORD *)((char *)a1 + v32);
  v37 = (_QWORD *)((char *)a2 + v32);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = a3[17];
  *(_DWORD *)((char *)a1 + a3[16]) = *(_DWORD *)((char *)a2 + a3[16]);
  __dst = (char *)a1 + v39;
  v57 = (char *)a2 + v39;
  v40 = type metadata accessor for Date(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v38);
  if (v42(v57, 1, v40))
  {
    v43 = sub_100006A6C(&qword_1001A6F70);
    memcpy(__dst, v57, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(__dst, v57, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
  }
  v44 = a3[18];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  if (v42((char *)a2 + v44, 1, v40))
  {
    v47 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v45, v46, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v45, 0, 1, v40);
  }
  v48 = a3[19];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  if (v42((char *)a2 + v48, 1, v40))
  {
    v51 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v49, v50, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v49, 0, 1, v40);
  }
  v52 = a3[20];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  if (v42((char *)a2 + v52, 1, v40))
  {
    v55 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v53, v54, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v53, 0, 1, v40);
  }
  *((_BYTE *)a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  return a1;
}

_QWORD *sub_100009624(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  int v71;
  int v72;
  uint64_t v73;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v25 = v24[1];
  v26 = v23[1];
  v23[1] = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v27 = a3[12];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  *v28 = *v29;
  v30 = v29[1];
  v31 = v28[1];
  v28[1] = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  v32 = a3[13];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  *v33 = *v34;
  v35 = v34[1];
  v36 = v33[1];
  v33[1] = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  v37 = a3[14];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  *v38 = *v39;
  v40 = v39[1];
  v41 = v38[1];
  v38[1] = v40;
  swift_bridgeObjectRetain(v40);
  swift_bridgeObjectRelease(v41);
  v42 = a3[15];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  *v43 = *v44;
  v45 = v44[1];
  v46 = v43[1];
  v43[1] = v45;
  swift_bridgeObjectRetain(v45);
  swift_bridgeObjectRelease(v46);
  *(_DWORD *)((char *)a1 + a3[16]) = *(_DWORD *)((char *)a2 + a3[16]);
  v47 = a3[17];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = type metadata accessor for Date(0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
LABEL_12:
    v55 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 24))(v48, v49, v50);
LABEL_13:
  v56 = a3[18];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = v52((char *)a1 + v56, 1, v50);
  v60 = v52(v58, 1, v50);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v57, v58, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v57, 0, 1, v50);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v57, v50);
LABEL_18:
    v61 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 24))(v57, v58, v50);
LABEL_19:
  v62 = a3[19];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = v52((char *)a1 + v62, 1, v50);
  v66 = v52(v64, 1, v50);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v63, v64, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v63, 0, 1, v50);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v63, v50);
LABEL_24:
    v67 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 24))(v63, v64, v50);
LABEL_25:
  v68 = a3[20];
  v69 = (char *)a1 + v68;
  v70 = (char *)a2 + v68;
  v71 = v52((char *)a1 + v68, 1, v50);
  v72 = v52(v70, 1, v50);
  if (!v71)
  {
    if (!v72)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 24))(v69, v70, v50);
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v69, v50);
    goto LABEL_30;
  }
  if (v72)
  {
LABEL_30:
    v73 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v69, v70, v50);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v69, 0, 1, v50);
LABEL_31:
  *((_BYTE *)a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  return a1;
}

_OWORD *sub_100009B88(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  v14 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  v15 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  v16 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  v17 = a3[17];
  *(_DWORD *)((char *)a1 + a3[16]) = *(_DWORD *)((char *)a2 + a3[16]);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for Date(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v22(v19, 1, v20))
  {
    v23 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v24 = a3[18];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  if (v22((char *)a2 + v24, 1, v20))
  {
    v27 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v25, v26, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v25, 0, 1, v20);
  }
  v28 = a3[19];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  if (v22((char *)a2 + v28, 1, v20))
  {
    v31 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v29, v30, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v29, 0, 1, v20);
  }
  v32 = a3[20];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  if (v22((char *)a2 + v32, 1, v20))
  {
    v35 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v33, v34, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v33, 0, 1, v20);
  }
  *((_BYTE *)a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  return a1;
}

_QWORD *sub_100009EA0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v29) = *((_BYTE *)a2 + v29);
  v30 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  v35 = v31[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease(v35);
  v36 = a3[13];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  v41 = v37[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease(v41);
  v42 = a3[14];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  v47 = v43[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease(v47);
  v48 = a3[15];
  v49 = (_QWORD *)((char *)a1 + v48);
  v50 = (_QWORD *)((char *)a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  v53 = v49[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease(v53);
  v54 = a3[17];
  *(_DWORD *)((char *)a1 + a3[16]) = *(_DWORD *)((char *)a2 + a3[16]);
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = type metadata accessor for Date(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v55, 1, v57);
  v61 = v59(v56, 1, v57);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
LABEL_12:
    v62 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v55, v56, v57);
LABEL_13:
  v63 = a3[18];
  v64 = (char *)a1 + v63;
  v65 = (char *)a2 + v63;
  v66 = v59((char *)a1 + v63, 1, v57);
  v67 = v59(v65, 1, v57);
  if (v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v64, v65, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v64, 0, 1, v57);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v64, v57);
LABEL_18:
    v68 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v64, v65, v57);
LABEL_19:
  v69 = a3[19];
  v70 = (char *)a1 + v69;
  v71 = (char *)a2 + v69;
  v72 = v59((char *)a1 + v69, 1, v57);
  v73 = v59(v71, 1, v57);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v70, v71, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v70, 0, 1, v57);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v70, v57);
LABEL_24:
    v74 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v70, v71, v57);
LABEL_25:
  v75 = a3[20];
  v76 = (char *)a1 + v75;
  v77 = (char *)a2 + v75;
  v78 = v59((char *)a1 + v75, 1, v57);
  v79 = v59(v77, 1, v57);
  if (!v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v76, v77, v57);
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v76, v57);
    goto LABEL_30;
  }
  if (v79)
  {
LABEL_30:
    v80 = sub_100006A6C(&qword_1001A6F70);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v76, v77, v57);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v76, 0, 1, v57);
LABEL_31:
  *((_BYTE *)a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  return a1;
}

uint64_t sub_10000A384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000A390);
}

uint64_t sub_10000A390(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = sub_100006A6C(&qword_1001A42A0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100006A6C(&qword_1001A6F70);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[17];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_10000A440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000A44C);
}

uint64_t sub_10000A44C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_100006A6C(&qword_1001A42A0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[8] + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_100006A6C(&qword_1001A6F70);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[17];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for PasswordSharingModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1001A3548;
  if (!qword_1001A3548)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PasswordSharingModel);
  return result;
}

void sub_10000A534(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[13];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v6[0] = &unk_100131B08;
  sub_10000A630(319, (unint64_t *)&qword_1001A4C70, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100131B08;
    v6[3] = &unk_100131B20;
    v6[4] = &unk_100131B38;
    v6[5] = &unk_100131B20;
    v6[6] = &unk_100131B20;
    v6[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[8] = &unk_100131B08;
    v6[9] = &unk_100131B08;
    v6[10] = &unk_100131B08;
    v6[11] = &unk_100131B08;
    v6[12] = (char *)&value witness table for Builtin.Int32 + 64;
    sub_10000A630(319, (unint64_t *)&unk_1001A3558, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = v7;
      v10 = v7;
      v11 = &unk_100131B20;
      swift_initStructMetadata(a1, 256, 18, v6, a1 + 16);
    }
  }
}

void sub_10000A630(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_10000A67C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10000A6B4(uint64_t a1)
{
  String.hash(into:)(a1, 0x6166654469666957, 0xEB00000000746C75);
  return swift_bridgeObjectRelease(0xEB00000000746C75);
}

void sub_10000A794(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_10000A7D8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6166654469666957, 0xEB00000000746C75);
  swift_bridgeObjectRelease(0xEB00000000746C75);
  return Hasher._finalize()();
}

void sub_10000A8CC(char *a1)
{
  sub_10006BFB4(*a1);
}

void sub_10000A8D8()
{
  char *v0;

  sub_10000A794(0, *v0);
}

void sub_10000A8E4(uint64_t a1)
{
  char *v1;

  sub_10000A67C(a1, *v1);
}

void sub_10000A8EC(uint64_t a1)
{
  char *v1;

  sub_10000A794(a1, *v1);
}

unint64_t sub_10000A8F4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10000DABC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10000A920()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10000A948 + 4 * byte_100131AA9[*v0]))();
}

void sub_10000A948(_QWORD *a1@<X8>)
{
  *a1 = 0x6166654469666957;
  a1[1] = 0xEB00000000746C75;
}

void sub_10000A96C(_QWORD *a1@<X8>)
{
  *a1 = 0x746E6F4368636952;
  a1[1] = 0xEB00000000746E65;
}

void sub_10000A994(_QWORD *a1@<X8>)
{
  *a1 = 0x6572756C696146;
  a1[1] = 0xE700000000000000;
}

void sub_10000A9B0(_QWORD *a1@<X8>)
{
  *a1 = 0x746F7073746F48;
  a1[1] = 0xE700000000000000;
}

void sub_10000A9CC(char *a1@<X8>)
{
  strcpy(a1, "HotspotFailure");
  a1[15] = -18;
}

void sub_10000A9F4(_QWORD *a1@<X8>)
{
  *a1 = 0x614E656369766544;
  a1[1] = 0xEA0000000000656DLL;
}

void sub_10000AA14(_QWORD *a1@<X8>)
{
  *a1 = 0x74786554676E6F4CLL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_10000AA30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char *v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for PasswordSharingModel(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v12 - v7;
  v9 = *(_BYTE *)(v1 + *(int *)(v6 + 36));
  sub_10000D7D8(v1, (uint64_t)&v12 - v7);
  if ((v9 & 1) == 0)
  {
    v10 = (char *)&loc_10000AB00 + 4 * byte_100131AB1[sub_10000AD50()];
    __asm { BR              X10 }
  }
  sub_10000D81C((uint64_t)v8);
  sub_10000D7D8(v1, (uint64_t)v5);
  sub_10000D81C((uint64_t)v5);
  return 1;
}

uint64_t sub_10000AD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;

  v1 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PasswordSharingModel(0);
  sub_10000D74C(v0 + *(int *)(v4 + 20), (uint64_t)v3);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_10000D858((uint64_t)v3, &qword_1001A42A0);
    return 0;
  }
  v8 = UUID.uuidString.getter();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  if (v8 == 0xD000000000000024)
  {
    v11 = 0x8000000100135FE0;
    if (v10 == 0x8000000100135FE0)
      goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100135FE0, v8, v10, 0) & 1) != 0)
  {
    v11 = v10;
LABEL_8:
    swift_bridgeObjectRelease(v11);
    return 1;
  }
  if (v8 == 0xD000000000000024)
  {
    v12 = 0x8000000100136010;
    if (v10 == 0x8000000100136010)
    {
LABEL_14:
      swift_bridgeObjectRelease(v12);
      return 2;
    }
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100136010, v8, v10, 0) & 1) != 0)
  {
    v12 = v10;
    goto LABEL_14;
  }
  if (v8 == 0xD000000000000024)
  {
    v13 = 0x8000000100136040;
    if (v10 == 0x8000000100136040)
    {
LABEL_19:
      swift_bridgeObjectRelease(v13);
      return 3;
    }
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100136040, v8, v10, 0) & 1) != 0)
  {
    v13 = v10;
    goto LABEL_19;
  }
  if (v8 == 0xD000000000000024)
  {
    v14 = 0x8000000100136070;
    if (v10 == 0x8000000100136070)
    {
LABEL_24:
      swift_bridgeObjectRelease(v14);
      return 4;
    }
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100136070, v8, v10, 0) & 1) != 0)
  {
    v14 = v10;
    goto LABEL_24;
  }
  if (v8 == 0xD000000000000024)
  {
    v15 = 0x80000001001360A0;
    if (v10 == 0x80000001001360A0)
    {
LABEL_29:
      swift_bridgeObjectRelease(v15);
      return 5;
    }
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x80000001001360A0, v8, v10, 0) & 1) != 0)
  {
    v15 = v10;
    goto LABEL_29;
  }
  if (v8 == 0xD000000000000024)
  {
    v16 = 0x80000001001360D0;
    if (v10 == 0x80000001001360D0)
    {
LABEL_34:
      swift_bridgeObjectRelease(v16);
      return 6;
    }
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x80000001001360D0, v8, v10, 0) & 1) != 0)
  {
    v16 = v10;
    goto LABEL_34;
  }
  if (v8 == 0xD000000000000024 && v10 == 0x8000000100136100)
  {
    swift_bridgeObjectRelease(0x8000000100136100);
    return 7;
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100136100, v8, v10, 0);
    swift_bridgeObjectRelease(v10);
    if ((v17 & 1) == 0)
      return 0;
    return 7;
  }
}

uint64_t sub_10000B090@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t *v11;
  unint64_t *v12;
  unint64_t *v13;
  unint64_t *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  char v33;
  char v34;
  unint64_t v35;
  char v36;
  char v37;
  unint64_t v38;
  char v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  int v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  char v55;
  int v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t *v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD v68[5];
  __int128 v69;
  __int128 v70;

  v4 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for PasswordSharingModel(0);
  *a2 = 0;
  a2[1] = 0;
  v8 = (uint64_t)a2 + v7[5];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (unint64_t *)((char *)a2 + v7[6]);
  *v10 = 0;
  v10[1] = 0;
  *((_BYTE *)a2 + v7[7]) = 0;
  v62 = v7[9];
  *((_BYTE *)a2 + v62) = 0;
  v63 = v7[10];
  *((_BYTE *)a2 + v63) = 0;
  *(unint64_t *)((char *)a2 + v7[11]) = 0x3FF0000000000000;
  v11 = (unint64_t *)((char *)a2 + v7[12]);
  *v11 = 0;
  v11[1] = 0;
  v12 = (unint64_t *)((char *)a2 + v7[13]);
  *v12 = 0;
  v12[1] = 0;
  v13 = (unint64_t *)((char *)a2 + v7[14]);
  *v13 = 0;
  v13[1] = 0;
  v64 = v13;
  v14 = (unint64_t *)((char *)a2 + v7[15]);
  *v14 = 0;
  v14[1] = 0;
  v65 = v14;
  *(_DWORD *)((char *)a2 + v7[16]) = 8;
  v15 = (char *)a2 + v7[17];
  v16 = type metadata accessor for Date(0);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v15, 1, 1, v16);
  v17((char *)a2 + v7[18], 1, 1, v16);
  v17((char *)a2 + v7[19], 1, 1, v16);
  v18 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v17)((char *)a2 + v7[20], 1, 1, v16);
  v19 = v7[21];
  *((_BYTE *)a2 + v19) = SFIsGreenTeaDevice(v18);
  v66 = 6580579;
  v67 = 0xE300000000000000;
  AnyHashable.init<A>(_:)(v68, &v66, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v20 = sub_100005CF4((uint64_t)v68), (v21 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v20, (uint64_t)&v69);
  }
  else
  {
    v69 = 0u;
    v70 = 0u;
  }
  sub_100006B34((uint64_t)v68);
  if (!*((_QWORD *)&v70 + 1))
  {
    sub_10000D858((uint64_t)&v69, &qword_1001A4340);
    goto LABEL_9;
  }
  if (!swift_dynamicCast(&v66, &v69, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
LABEL_9:
    v22 = 0;
    v23 = 0xE000000000000000;
    goto LABEL_10;
  }
  v22 = v66;
  v23 = v67;
LABEL_10:
  swift_bridgeObjectRelease(a2[1]);
  *a2 = v22;
  a2[1] = v23;
  v66 = 0xD000000000000010;
  v67 = 0x8000000100136400;
  AnyHashable.init<A>(_:)(v68, &v66, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v24 = sub_100005CF4((uint64_t)v68), (v25 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v24, (uint64_t)&v69);
  }
  else
  {
    v69 = 0u;
    v70 = 0u;
  }
  sub_100006B34((uint64_t)v68);
  if (*((_QWORD *)&v70 + 1))
  {
    if ((swift_dynamicCast(&v66, &v69, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v26 = v67;
      UUID.init(uuidString:)(v66, v67);
      swift_bridgeObjectRelease(v26);
      sub_10000D8D0((uint64_t)v6, v8);
    }
  }
  else
  {
    sub_10000D858((uint64_t)&v69, &qword_1001A4340);
  }
  v66 = 30574;
  v67 = 0xE200000000000000;
  AnyHashable.init<A>(_:)(v68, &v66, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v27 = sub_100005CF4((uint64_t)v68), (v28 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v27, (uint64_t)&v69);
  }
  else
  {
    v69 = 0u;
    v70 = 0u;
  }
  sub_100006B34((uint64_t)v68);
  if (!*((_QWORD *)&v70 + 1))
  {
    sub_10000D858((uint64_t)&v69, &qword_1001A4340);
    goto LABEL_26;
  }
  if (!swift_dynamicCast(&v66, &v69, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
LABEL_26:
    v29 = 0;
    v30 = 0xE000000000000000;
    goto LABEL_27;
  }
  v29 = v66;
  v30 = v67;
LABEL_27:
  v31 = (unint64_t *)((char *)a2 + v7[8]);
  *v31 = v29;
  v31[1] = v30;
  *(_QWORD *)&v69 = 29544;
  *((_QWORD *)&v69 + 1) = 0xE200000000000000;
  AnyHashable.init<A>(_:)(v68, &v69, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v32 = sub_100005CF4((uint64_t)v68), (v33 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v32, (uint64_t)&v69);
  }
  else
  {
    v69 = 0u;
    v70 = 0u;
  }
  sub_100006B34((uint64_t)v68);
  if (!*((_QWORD *)&v70 + 1))
  {
    sub_10000D858((uint64_t)&v69, &qword_1001A4340);
    goto LABEL_35;
  }
  if (!swift_dynamicCast(&v66, &v69, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_35:
    v34 = 0;
    goto LABEL_36;
  }
  v34 = v66;
LABEL_36:
  *((_BYTE *)a2 + v62) = v34;
  strcpy((char *)&v69, "pwsAutoGrant");
  BYTE13(v69) = 0;
  HIWORD(v69) = -5120;
  AnyHashable.init<A>(_:)(v68, &v69, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v35 = sub_100005CF4((uint64_t)v68), (v36 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v35, (uint64_t)&v69);
  }
  else
  {
    v69 = 0u;
    v70 = 0u;
  }
  sub_100006B34((uint64_t)v68);
  if (!*((_QWORD *)&v70 + 1))
  {
    sub_10000D858((uint64_t)&v69, &qword_1001A4340);
    goto LABEL_44;
  }
  if (!swift_dynamicCast(&v66, &v69, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_44:
    v37 = 0;
    goto LABEL_45;
  }
  v37 = v66;
LABEL_45:
  *((_BYTE *)a2 + v63) = v37;
  *(_QWORD *)&v69 = 26725;
  *((_QWORD *)&v69 + 1) = 0xE200000000000000;
  AnyHashable.init<A>(_:)(v68, &v69, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v38 = sub_100005CF4((uint64_t)v68), (v39 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v38, (uint64_t)&v69);
  }
  else
  {
    v69 = 0u;
    v70 = 0u;
  }
  sub_100006B34((uint64_t)v68);
  if (*((_QWORD *)&v70 + 1))
  {
    v40 = swift_dynamicCast(&v66, &v69, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v40)
      v41 = v66;
    else
      v41 = 0;
    if (v40)
      v42 = v67;
    else
      v42 = 0;
  }
  else
  {
    sub_10000D858((uint64_t)&v69, &qword_1001A4340);
    v41 = 0;
    v42 = 0;
  }
  swift_bridgeObjectRelease(v11[1]);
  *v11 = v41;
  v11[1] = v42;
  *(_QWORD *)&v69 = 26736;
  *((_QWORD *)&v69 + 1) = 0xE200000000000000;
  AnyHashable.init<A>(_:)(v68, &v69, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v43 = sub_100005CF4((uint64_t)v68), (v44 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v43, (uint64_t)&v69);
  }
  else
  {
    v69 = 0u;
    v70 = 0u;
  }
  sub_100006B34((uint64_t)v68);
  if (*((_QWORD *)&v70 + 1))
  {
    v45 = swift_dynamicCast(&v66, &v69, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v45)
      v46 = v66;
    else
      v46 = 0;
    if (v45)
      v47 = v67;
    else
      v47 = 0;
  }
  else
  {
    sub_10000D858((uint64_t)&v69, &qword_1001A4340);
    v46 = 0;
    v47 = 0;
  }
  swift_bridgeObjectRelease(v12[1]);
  *v12 = v46;
  v12[1] = v47;
  *(_QWORD *)&v69 = 28260;
  *((_QWORD *)&v69 + 1) = 0xE200000000000000;
  AnyHashable.init<A>(_:)(v68, &v69, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v48 = sub_100005CF4((uint64_t)v68), (v49 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v48, (uint64_t)&v69);
  }
  else
  {
    v69 = 0u;
    v70 = 0u;
  }
  sub_100006B34((uint64_t)v68);
  if (*((_QWORD *)&v70 + 1))
  {
    v50 = swift_dynamicCast(&v66, &v69, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v50)
      v51 = v66;
    else
      v51 = 0;
    if (v50)
      v52 = v67;
    else
      v52 = 0;
  }
  else
  {
    sub_10000D858((uint64_t)&v69, &qword_1001A4340);
    v51 = 0;
    v52 = 0;
  }
  v53 = v64;
  swift_bridgeObjectRelease(v64[1]);
  *v53 = v51;
  v53[1] = v52;
  *(_QWORD *)&v69 = 7041904;
  *((_QWORD *)&v69 + 1) = 0xE300000000000000;
  AnyHashable.init<A>(_:)(v68, &v69, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v54 = sub_100005CF4((uint64_t)v68), (v55 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v54, (uint64_t)&v69);
  }
  else
  {
    v69 = 0u;
    v70 = 0u;
  }
  swift_bridgeObjectRelease(a1);
  sub_100006B34((uint64_t)v68);
  if (*((_QWORD *)&v70 + 1))
  {
    v56 = swift_dynamicCast(&v66, &v69, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v56)
      v57 = v66;
    else
      v57 = 0;
    if (v56)
      v58 = v67;
    else
      v58 = 0;
  }
  else
  {
    sub_10000D858((uint64_t)&v69, &qword_1001A4340);
    v57 = 0;
    v58 = 0;
  }
  v59 = v65;
  result = swift_bridgeObjectRelease(v65[1]);
  *v59 = v57;
  v59[1] = v58;
  return result;
}

void sub_10000B900(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  NSBundle v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t countAndFlagsBits;
  void *object;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  void *v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  Swift::String v32;
  Swift::String_optional v33;
  Swift::String v34;
  Swift::String v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;

  v36 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
  v3 = (void *)objc_opt_self(NSBundle);
  v4.super.isa = (Class)objc_msgSend(v3, "mainBundle");
  v37._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v5._object = (void *)0xEF454C5449545F4ELL;
  v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v6.value._object = (void *)0xEB00000000656C62;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v37._countAndFlagsBits = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, v4, v7, v37);

  LOBYTE(v4.super.isa) = sub_10000AA30();
  v9 = objc_msgSend(v3, "mainBundle");
  if (((uint64_t)v4.super.isa & 1) != 0)
  {
    v10._countAndFlagsBits = 0xD00000000000001CLL;
    v38._object = (void *)0xE000000000000000;
    v10._object = (void *)0x8000000100136360;
    v11.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v11.value._object = (void *)0xEB00000000656C62;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v38._countAndFlagsBits = 0;
    v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v38);
    countAndFlagsBits = v13._countAndFlagsBits;
    object = v13._object;

    v16 = objc_msgSend(v3, "mainBundle");
    v17._countAndFlagsBits = 0xD00000000000001DLL;
    v39._object = (void *)0xE000000000000000;
    v17._object = (void *)0x8000000100136380;
    v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v18.value._object = (void *)0xEB00000000656C62;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v39._countAndFlagsBits = 0;
    v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v39);
    v21 = v20._countAndFlagsBits;
    v22 = v20._object;
  }
  else
  {
    v23._countAndFlagsBits = 0xD000000000000019;
    v40._object = (void *)0xE000000000000000;
    v23._object = (void *)0x8000000100136320;
    v24.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v24.value._object = (void *)0xEB00000000656C62;
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v40._countAndFlagsBits = 0;
    v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v9, v25, v40);
    countAndFlagsBits = v26._countAndFlagsBits;
    object = v26._object;

    v27 = type metadata accessor for PasswordSharingModel(0);
    v28 = *(_BYTE *)(v1 + *(int *)(v27 + 84)) == 0;
    if (*(_BYTE *)(v1 + *(int *)(v27 + 84)))
      v29 = 0x4E414C575FLL;
    else
      v29 = 0;
    if (v28)
      v30 = 0xE000000000000000;
    else
      v30 = 0xE500000000000000;
    v31 = v30;
    String.append(_:)(*(Swift::String *)&v29);
    swift_bridgeObjectRelease(v30);
    v16 = objc_msgSend(v3, "mainBundle");
    v41._object = (void *)0xE000000000000000;
    v32._countAndFlagsBits = 0xD00000000000001ALL;
    v32._object = (void *)0x8000000100136340;
    v33.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v33.value._object = (void *)0xEB00000000656C62;
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v41._countAndFlagsBits = 0;
    v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v16, v34, v41);
    v21 = v35._countAndFlagsBits;
    v22 = v35._object;
    swift_bridgeObjectRelease(0x8000000100136340);
  }

  *a1 = countAndFlagsBits;
  a1[1] = (uint64_t)object;
  a1[2] = v21;
  a1[3] = (uint64_t)v22;
  a1[4] = 0xD000000000000016;
  a1[5] = 0x8000000100136300;
  a1[6] = (uint64_t)v36;
  a1[7] = 0;
  a1[8] = 0xE000000000000000;
  a1[9] = v8._countAndFlagsBits;
  a1[11] = 0;
  a1[12] = 0;
  a1[10] = (uint64_t)v8._object;
}

void sub_10000BC38(Swift::String *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;

  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v31._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0x4554454C504D4F43;
  v5._object = (void *)0xE800000000000000;
  v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v6.value._object = (void *)0xEB00000000656C62;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v31);

  v9 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v10 = objc_msgSend(v3, "mainBundle");
  v32._object = (void *)0xE000000000000000;
  v11._countAndFlagsBits = 1162760004;
  v11._object = (void *)0xE400000000000000;
  v12.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v12.value._object = (void *)0xEB00000000656C62;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v32);

  if ((sub_10000AA30() & 1) != 0)
  {
    v15 = objc_msgSend(v3, "mainBundle");
    v16._countAndFlagsBits = 0xD00000000000001ELL;
    v33._object = (void *)0xE000000000000000;
    v16._object = (void *)0x80000001001363E0;
    v17.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v17.value._object = (void *)0xEB00000000656C62;
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v33._countAndFlagsBits = 0;
    v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v33);
    countAndFlagsBits = v19._countAndFlagsBits;
    object = v19._object;
  }
  else
  {
    v22 = type metadata accessor for PasswordSharingModel(0);
    v23 = *(_BYTE *)(v1 + *(int *)(v22 + 84)) == 0;
    if (*(_BYTE *)(v1 + *(int *)(v22 + 84)))
      v24 = 0x4E414C575FLL;
    else
      v24 = 0;
    if (v23)
      v25 = 0xE000000000000000;
    else
      v25 = 0xE500000000000000;
    v26 = v25;
    String.append(_:)(*(Swift::String *)&v24);
    swift_bridgeObjectRelease(v25);
    v15 = objc_msgSend(v3, "mainBundle");
    v34._object = (void *)0xE000000000000000;
    v27._countAndFlagsBits = 0xD00000000000001BLL;
    v27._object = (void *)0x80000001001363C0;
    v28.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v28.value._object = (void *)0xEB00000000656C62;
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v34._countAndFlagsBits = 0;
    v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v15, v29, v34);
    countAndFlagsBits = v30._countAndFlagsBits;
    object = v30._object;
    swift_bridgeObjectRelease(0x80000001001363C0);
  }

  *a1 = v8;
  a1[1]._countAndFlagsBits = countAndFlagsBits;
  a1[1]._object = object;
  a1[2]._countAndFlagsBits = 0xD000000000000010;
  a1[2]._object = (void *)0x80000001001363A0;
  a1[3]._countAndFlagsBits = (uint64_t)v9;
  a1[3]._object = 0;
  a1[4]._countAndFlagsBits = 0xE000000000000000;
  a1[4]._object = (void *)v14._countAndFlagsBits;
  a1[5]._object = 0;
  a1[6]._countAndFlagsBits = 0;
  a1[5]._countAndFlagsBits = (uint64_t)v14._object;
}

void sub_10000BF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = type metadata accessor for PasswordSharingModel(0);
  v2 = __chkstk_darwin(v1);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + *(int *)(v2 + 32) + 8));
  v3 = (char *)&loc_10000BFE0 + *((int *)qword_10000CB88 + sub_10000AD50());
  __asm { BR              X10 }
}

uint64_t sub_10000BFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t (*v7)(uint64_t);

  v5 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6166654469666957, 0xEB00000000746C75, 0x614E656369766544, 0xEA0000000000656DLL, 0);
  swift_bridgeObjectRelease(0xEB00000000746C75);
  if ((v5 & 1) != 0)
    v6 = 1;
  else
    v6 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 28));
  *(_DWORD *)(v4 - 112) = v6;
  *(_QWORD *)(v4 - 136) = v0;
  v7 = (uint64_t (*)(uint64_t))((char *)&loc_10000C120
                                       + *((int *)qword_10000CBA8 + sub_10000AD50()));
  *(_QWORD *)(v4 - 104) = v3;
  return v7(0x614E656369766544);
}

void sub_10000C148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  void *v10;
  Swift::String v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  Swift::String v33;
  id v34;
  uint64_t v35;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  Swift::String v40;
  id v41;
  Swift::String v42;
  Swift::String_optional v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;

  *(_QWORD *)(v6 - 128) = v2;
  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(6710863, 0xE300000000000000, 0x746E6F4368636952, 0xEB00000000746E65, 0);
  swift_bridgeObjectRelease(0xE300000000000000);
  sub_10000D7D8(v4, v5);
  if ((v7 & 1) == 0)
  {
    v8 = (char *)&loc_10000C288 + *((int *)qword_10000CBC8 + sub_10000AD50());
    __asm { BR              X10 }
  }
  sub_10000D81C(v5);
  swift_bridgeObjectRelease(v3);
  if (*(_BYTE *)(v4 + v1))
    v9 = 0xD00000000000001FLL;
  else
    v9 = 0xD00000000000001ALL;
  if (*(_BYTE *)(v4 + v1))
    v10 = (void *)0x8000000100136280;
  else
    v10 = (void *)0x8000000100136260;
  *(_QWORD *)(v6 - 96) = v9;
  *(_QWORD *)(v6 - 88) = v10;
  if (*(_DWORD *)(v6 - 112))
  {
    v11._countAndFlagsBits = 0x4543495645445FLL;
    v11._object = (void *)0xE700000000000000;
    String.append(_:)(v11);
    v12 = 0xED0000656E6F6850;
    v13 = 0x69207327656E614ALL;
    v9 = *(_QWORD *)(v6 - 96);
    v10 = *(void **)(v6 - 88);
  }
  else
  {
    v12 = 0xEE0064656573656CLL;
    v13 = 0x70704120656E614ALL;
  }
  v14 = v0;
  v16 = *(_QWORD *)(v6 - 144);
  v15 = *(void **)(v6 - 136);
  v17 = (void *)objc_opt_self(NSBundle);
  swift_bridgeObjectRetain(v10);
  v18 = objc_msgSend(v17, *(SEL *)(v14 + 1208));
  v49._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = v9;
  v19._object = v10;
  v20.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v20.value._object = (void *)0xEB00000000656C62;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v49._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v49);
  swift_bridgeObjectRelease(v10);

  v23 = sub_100006A6C((uint64_t *)&unk_1001A7D20);
  v24 = swift_allocObject(v23, 112, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100131C30;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  v25 = sub_10000D794();
  *(_QWORD *)(v24 + 32) = 0x7774654E69466957;
  *(_QWORD *)(v24 + 40) = 0xEB000000006B726FLL;
  *(_QWORD *)(v24 + 96) = &type metadata for String;
  *(_QWORD *)(v24 + 104) = v25;
  *(_QWORD *)(v24 + 64) = v25;
  *(_QWORD *)(v24 + 72) = v13;
  *(_QWORD *)(v24 + 80) = v12;
  v26 = ((uint64_t (*)(uint64_t, void *, uint64_t))static String.localizedStringWithFormat(_:_:))(v22._countAndFlagsBits, v22._object, v24);
  *(_QWORD *)(v6 - 120) = v27;
  *(_QWORD *)(v6 - 112) = v26;
  swift_bridgeObjectRelease(v22._object);
  swift_bridgeObjectRelease(v24);
  *(_DWORD *)(v6 - 128) = 1;
  v28 = (void *)objc_opt_self(NSBundle);
  v29 = objc_msgSend(v28, *(SEL *)(v14 + 1208));
  v50._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = v16;
  v30._object = v15;
  v31.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v31.value._object = (void *)0xEB00000000656C62;
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v50._countAndFlagsBits = 0;
  v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v50);
  swift_bridgeObjectRelease(v15);

  v34 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v35 = v14;
  v36 = objc_msgSend(v28, *(SEL *)(v14 + 1208));
  v37._countAndFlagsBits = 0xD000000000000015;
  v51._object = (void *)0xE000000000000000;
  v37._object = (void *)0x80000001001361F0;
  v38.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v38.value._object = (void *)0xEB00000000656C62;
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  v51._countAndFlagsBits = 0;
  v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v51);

  v41 = objc_msgSend(v28, *(SEL *)(v35 + 1208));
  v42._countAndFlagsBits = 0xD000000000000013;
  v52._object = (void *)0xE000000000000000;
  v42._object = (void *)0x8000000100136210;
  v43.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v43.value._object = (void *)0xEB00000000656C62;
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v52._countAndFlagsBits = 0;
  v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v52);

  if (*(_DWORD *)(v6 - 128))
    swift_bridgeObjectRelease(*(_QWORD *)(v6 - 88));
  v46 = *(_QWORD *)(v6 - 112);
  v47 = *(_QWORD *)(v6 - 104);
  *(Swift::String *)v47 = v33;
  v48 = *(_QWORD *)(v6 - 120);
  *(_QWORD *)(v47 + 16) = v46;
  *(_QWORD *)(v47 + 24) = v48;
  *(_QWORD *)(v47 + 32) = 1768319351;
  *(_QWORD *)(v47 + 40) = 0xE400000000000000;
  *(_QWORD *)(v47 + 48) = v34;
  *(Swift::String *)(v47 + 56) = v40;
  *(_QWORD *)(v47 + 72) = v45._countAndFlagsBits;
  *(_QWORD *)(v47 + 88) = 0;
  *(_QWORD *)(v47 + 96) = 0;
  *(_QWORD *)(v47 + 80) = v45._object;
}

void sub_10000C77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  void *v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  id v27;
  unint64_t v28;
  const char *v29;
  id v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  Swift::String v34;
  unint64_t v35;
  Swift::String_optional v36;
  Swift::String v37;
  uint64_t v38;
  Swift::String v39;
  unint64_t v40;
  Swift::String v41;
  Swift::String v42;

  *(_QWORD *)(v5 - 120) = 0xE300000000000000;
  v6 = *(_QWORD *)(v5 - 120);
  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(6710863, v6, 0x74786554676E6F4CLL, 0xE800000000000000, 0);
  swift_bridgeObjectRelease(v6);
  if ((v7 & 1) != 0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v5 - 136));
    swift_bridgeObjectRelease(v2);
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), *(SEL *)(v0 + 1208));
    v31._countAndFlagsBits = 0xD000000000000018;
    v42._object = (void *)0xE000000000000000;
    v31._object = (void *)0x80000001001362C0;
    v32.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v32.value._object = (void *)0xEB00000000656C62;
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v42._countAndFlagsBits = 0;
    v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v42);
    *(_QWORD *)(v5 - 120) = v34._object;
    *(_QWORD *)(v5 - 112) = v34._countAndFlagsBits;

    *(_DWORD *)(v5 - 128) = 0;
  }
  else
  {
    v8 = (uint64_t *)(v3 + *(int *)(v4 + 24));
    v9 = v8[1];
    if (v9)
    {
      v10 = *v8;
      v11 = *(_BYTE *)(v3 + v1) == 0;
      if (*(_BYTE *)(v3 + v1))
        v12 = 0xD00000000000001FLL;
      else
        v12 = 0xD00000000000001ALL;
      if (v11)
        v13 = (void *)0x8000000100136260;
      else
        v13 = (void *)0x8000000100136280;
      *(_QWORD *)(v5 - 96) = v12;
      *(_QWORD *)(v5 - 88) = v13;
      swift_bridgeObjectRetain(v9);
      if (*(_DWORD *)(v5 - 112))
      {
        v14._countAndFlagsBits = 0x4543495645445FLL;
        v14._object = (void *)0xE700000000000000;
        String.append(_:)(v14);
        v12 = *(_QWORD *)(v5 - 96);
        v13 = *(void **)(v5 - 88);
      }
      v15 = (void *)objc_opt_self(NSBundle);
      swift_bridgeObjectRetain(v13);
      v16 = objc_msgSend(v15, *(SEL *)(v0 + 1208));
      v41._object = (void *)0xE000000000000000;
      v17._countAndFlagsBits = v12;
      v17._object = v13;
      v18.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v18.value._object = (void *)0xEB00000000656C62;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      v41._countAndFlagsBits = 0;
      v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v41);
      swift_bridgeObjectRelease(v13);

      v21 = sub_100006A6C((uint64_t *)&unk_1001A7D20);
      v22 = swift_allocObject(v21, 112, 7);
      *(_OWORD *)(v22 + 16) = xmmword_100131C30;
      *(_QWORD *)(v22 + 56) = &type metadata for String;
      v23 = sub_10000D794();
      *(_QWORD *)(v22 + 32) = *(_QWORD *)(v5 - 128);
      *(_QWORD *)(v22 + 40) = v2;
      *(_QWORD *)(v22 + 96) = &type metadata for String;
      *(_QWORD *)(v22 + 104) = v23;
      *(_QWORD *)(v22 + 64) = v23;
      *(_QWORD *)(v22 + 72) = v10;
      *(_QWORD *)(v22 + 80) = v9;
      v24 = static String.localizedStringWithFormat(_:_:)(v20._countAndFlagsBits, v20._object, v22);
      *(_QWORD *)(v5 - 120) = v25;
      *(_QWORD *)(v5 - 112) = v24;
      swift_bridgeObjectRelease(v20._object);
      swift_bridgeObjectRelease(v22);
      *(_DWORD *)(v5 - 128) = 1;
    }
    else
    {
      swift_bridgeObjectRelease(v2);
      v26 = *(unsigned __int8 *)(v3 + v1);
      v27 = objc_msgSend((id)objc_opt_self(NSBundle), *(SEL *)(v0 + 1208));
      if (v26 == 1)
      {
        v28 = 0xD000000000000020;
        v40 = 0xE000000000000000;
        v29 = "WIFI_SHARING_DETAIL_GENERIC_WLAN";
      }
      else
      {
        v28 = 0xD00000000000001BLL;
        v40 = 0xE000000000000000;
        v29 = "WIFI_SHARING_DETAIL_GENERIC";
      }
      v35 = (unint64_t)(v29 - 32) | 0x8000000000000000;
      v36.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v36.value._object = (void *)0xEB00000000656C62;
      v37._countAndFlagsBits = 0;
      v37._object = (void *)0xE000000000000000;
      v38 = 0;
      v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v28, v36, (NSBundle)v27, v37, *(Swift::String *)(&v40 - 1));
      *(_QWORD *)(v5 - 120) = v39._object;
      *(_QWORD *)(v5 - 112) = v39._countAndFlagsBits;

      *(_DWORD *)(v5 - 128) = 0;
    }
  }
  JUMPOUT(0x10000C568);
}

void sub_10000CC08(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  Swift::String v25;
  Swift::String_optional v26;
  Swift::String v27;
  Swift::String v28;
  id v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;

  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v35._object = (void *)0xE000000000000000;
  v5._object = (void *)0x8000000100136130;
  v5._countAndFlagsBits = 0xD000000000000015;
  v6.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v6.value._object = (void *)0xEB00000000656C62;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v35._countAndFlagsBits = 0;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v35);

  v9 = objc_msgSend(v3, "mainBundle");
  v10._countAndFlagsBits = 0xD00000000000001DLL;
  v36._object = (void *)0xE000000000000000;
  v10._object = (void *)0x8000000100136150;
  v11.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v11.value._object = (void *)0xEB00000000656C62;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v36._countAndFlagsBits = 0;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v36);

  v14 = sub_100006A6C((uint64_t *)&unk_1001A7D20);
  v15 = swift_allocObject(v14, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100131C40;
  v16 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PasswordSharingModel(0) + 24));
  v18 = *v16;
  v17 = v16[1];
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  *(_QWORD *)(v15 + 64) = sub_10000D794();
  v19 = 0x707041206E686F4ALL;
  if (v17)
    v19 = v18;
  v20 = 0xEE0064656573656CLL;
  if (v17)
    v20 = v17;
  *(_QWORD *)(v15 + 32) = v19;
  *(_QWORD *)(v15 + 40) = v20;
  swift_bridgeObjectRetain(v17);
  v34 = static String.localizedStringWithFormat(_:_:)(v13._countAndFlagsBits, v13._object, v15);
  v22 = v21;
  swift_bridgeObjectRelease(v13._object);
  swift_bridgeObjectRelease(v15);
  v23 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v24 = objc_msgSend(v3, "mainBundle");
  v25._countAndFlagsBits = 0xD000000000000018;
  v37._object = (void *)0xE000000000000000;
  v25._object = (void *)0x8000000100136170;
  v26.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v26.value._object = (void *)0xEB00000000656C62;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v37._countAndFlagsBits = 0;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v37);

  v29 = objc_msgSend(v3, "mainBundle");
  v30._countAndFlagsBits = 0xD000000000000016;
  v38._object = (void *)0xE000000000000000;
  v30._object = (void *)0x8000000100136190;
  v31.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v31.value._object = (void *)0xEB00000000656C62;
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0;
  v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v38);

  *(Swift::String *)a1 = v8;
  *(_QWORD *)(a1 + 16) = v34;
  *(_QWORD *)(a1 + 24) = v22;
  *(_QWORD *)(a1 + 32) = 0x6C616E6F73726570;
  *(_QWORD *)(a1 + 40) = 0xEF746F7073746F68;
  *(_QWORD *)(a1 + 48) = v23;
  *(Swift::String *)(a1 + 56) = v28;
  *(_QWORD *)(a1 + 72) = v33._countAndFlagsBits;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 80) = v33._object;
}

uint64_t sub_10000CF4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  Swift::String v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  Swift::String v14;
  void *v15;
  Swift::String v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  Swift::String v24;
  void *v25;
  Swift::String v26;
  uint64_t v27;
  void *v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  Swift::String v35;
  uint64_t v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  void *v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  void *v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  Swift::String v54;
  uint64_t v55;
  void *v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  Swift::String v63;
  uint64_t v64;
  void *v65;
  Swift::String v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  Swift::String v72;
  void *v73;
  Swift::String v74;
  uint64_t v75;
  void *v76;
  Swift::String v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  Swift::String v82;
  void *v83;
  Swift::String v84;
  uint64_t v85;
  void *v86;
  Swift::String v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  Swift::String v92;
  void *v93;
  Swift::String v94;
  uint64_t v95;
  void *v96;
  Swift::String v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  Swift::String v102;
  void *v103;
  Swift::String v104;
  uint64_t v105;
  void *v106;
  Swift::String v107;
  uint64_t v108;
  uint64_t v109;
  Swift::String v110;
  uint64_t v111;
  void *v112;
  Swift::String v113;
  uint64_t v114;
  Swift::String v115;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[2];

  v1 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v1);
  v3 = (char *)&v117 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121[0] = 0;
  v121[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v121[1]);
  strcpy((char *)v121, "peerContactID=");
  HIBYTE(v121[1]) = -18;
  v4 = v0[1];
  v119 = *v0;
  v120 = v4;
  swift_bridgeObjectRetain(v4);
  v5 = sub_100006A6C(&qword_1001A5430);
  v118 = v5;
  v6._countAndFlagsBits = String.init<A>(reflecting:)(&v119, v5);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 32;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = v121[0];
  v10 = (void *)v121[1];
  v121[0] = 0xD000000000000016;
  v121[1] = 0x8000000100135F40;
  v9._object = v10;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v10);
  v12 = v121[0];
  v11 = v121[1];
  v121[0] = 0;
  v121[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v121[1]);
  v121[0] = 0xD000000000000015;
  v121[1] = 0x8000000100135F60;
  v13 = (int *)type metadata accessor for PasswordSharingModel(0);
  sub_10000D74C((uint64_t)v0 + v13[5], (uint64_t)v3);
  v14._countAndFlagsBits = String.init<A>(reflecting:)(v3, v1);
  v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 32;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  v17 = v121[0];
  v18 = (void *)v121[1];
  v121[0] = v12;
  v121[1] = v11;
  swift_bridgeObjectRetain(v11);
  v19._countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v18);
  v21 = v121[0];
  v20 = v121[1];
  v121[0] = 0;
  v121[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v121[1]);
  v121[0] = 0xD000000000000010;
  v121[1] = 0x8000000100135F80;
  v22 = (_QWORD *)((char *)v0 + v13[6]);
  v23 = v22[1];
  v119 = *v22;
  v120 = v23;
  swift_bridgeObjectRetain(v23);
  v24._countAndFlagsBits = String.init<A>(reflecting:)(&v119, v5);
  v25 = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v25);
  v26._countAndFlagsBits = 32;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  v27 = v121[0];
  v28 = (void *)v121[1];
  v121[0] = v21;
  v121[1] = v20;
  swift_bridgeObjectRetain(v20);
  v29._countAndFlagsBits = v27;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v28);
  v31 = v121[0];
  v30 = v121[1];
  v121[0] = 0;
  v121[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease(v121[1]);
  v121[0] = 0xD00000000000001CLL;
  v121[1] = 0x8000000100135FA0;
  if (*((_BYTE *)v0 + v13[7]))
    v32 = 1702195828;
  else
    v32 = 0x65736C6166;
  if (*((_BYTE *)v0 + v13[7]))
    v33 = 0xE400000000000000;
  else
    v33 = 0xE500000000000000;
  v34 = v33;
  String.append(_:)(*(Swift::String *)&v32);
  swift_bridgeObjectRelease(v33);
  v35._countAndFlagsBits = 32;
  v35._object = (void *)0xE100000000000000;
  String.append(_:)(v35);
  v36 = v121[0];
  v37 = (void *)v121[1];
  v121[0] = v31;
  v121[1] = v30;
  swift_bridgeObjectRetain(v30);
  v38._countAndFlagsBits = v36;
  v38._object = v37;
  String.append(_:)(v38);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v37);
  v40 = v121[0];
  v39 = v121[1];
  v121[0] = 0;
  v121[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v121[1]);
  strcpy((char *)v121, "requestedSSID=");
  HIBYTE(v121[1]) = -18;
  v41 = (_QWORD *)((char *)v0 + v13[8]);
  v42 = *v41;
  v43 = (void *)v41[1];
  swift_bridgeObjectRetain(v43);
  v44._countAndFlagsBits = v42;
  v44._object = v43;
  String.append(_:)(v44);
  swift_bridgeObjectRelease(v43);
  v45._countAndFlagsBits = 32;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  v46 = v121[0];
  v47 = (void *)v121[1];
  v121[0] = v40;
  v121[1] = v39;
  swift_bridgeObjectRetain(v39);
  v48._countAndFlagsBits = v46;
  v48._object = v47;
  String.append(_:)(v48);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v47);
  v50 = v121[0];
  v49 = v121[1];
  v121[0] = 0;
  v121[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(v121[1]);
  strcpy((char *)v121, "rawIsHotspot=");
  HIWORD(v121[1]) = -4864;
  if (*((_BYTE *)v0 + v13[9]))
    v51 = 1702195828;
  else
    v51 = 0x65736C6166;
  if (*((_BYTE *)v0 + v13[9]))
    v52 = 0xE400000000000000;
  else
    v52 = 0xE500000000000000;
  v53 = v52;
  String.append(_:)(*(Swift::String *)&v51);
  swift_bridgeObjectRelease(v52);
  v54._countAndFlagsBits = 32;
  v54._object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  v55 = v121[0];
  v56 = (void *)v121[1];
  v121[0] = v50;
  v121[1] = v49;
  swift_bridgeObjectRetain(v49);
  v57._countAndFlagsBits = v55;
  v57._object = v56;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v49);
  swift_bridgeObjectRelease(v56);
  v59 = v121[0];
  v58 = v121[1];
  v121[0] = 0;
  v121[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v121[1]);
  v121[0] = 0xD000000000000010;
  v121[1] = 0x8000000100135FC0;
  if (*((_BYTE *)v0 + v13[10]))
    v60 = 1702195828;
  else
    v60 = 0x65736C6166;
  if (*((_BYTE *)v0 + v13[10]))
    v61 = 0xE400000000000000;
  else
    v61 = 0xE500000000000000;
  v62 = v61;
  String.append(_:)(*(Swift::String *)&v60);
  swift_bridgeObjectRelease(v61);
  v63._countAndFlagsBits = 32;
  v63._object = (void *)0xE100000000000000;
  String.append(_:)(v63);
  v64 = v121[0];
  v65 = (void *)v121[1];
  v121[0] = v59;
  v121[1] = v58;
  swift_bridgeObjectRetain(v58);
  v66._countAndFlagsBits = v64;
  v66._object = v65;
  String.append(_:)(v66);
  swift_bridgeObjectRelease(v58);
  swift_bridgeObjectRelease(v65);
  v68 = v121[0];
  v67 = v121[1];
  strcpy((char *)v121, "hashedEmail=");
  BYTE5(v121[1]) = 0;
  HIWORD(v121[1]) = -5120;
  v69 = (_QWORD *)((char *)v0 + v13[12]);
  v70 = v69[1];
  v119 = *v69;
  v120 = v70;
  swift_bridgeObjectRetain(v70);
  v71 = v118;
  v72._countAndFlagsBits = String.init<A>(reflecting:)(&v119, v118);
  v73 = v72._object;
  String.append(_:)(v72);
  swift_bridgeObjectRelease(v73);
  v74._countAndFlagsBits = 32;
  v74._object = (void *)0xE100000000000000;
  String.append(_:)(v74);
  v75 = v121[0];
  v76 = (void *)v121[1];
  v121[0] = v68;
  v121[1] = v67;
  swift_bridgeObjectRetain(v67);
  v77._countAndFlagsBits = v75;
  v77._object = v76;
  String.append(_:)(v77);
  swift_bridgeObjectRelease(v67);
  swift_bridgeObjectRelease(v76);
  v79 = v121[0];
  v78 = v121[1];
  strcpy((char *)v121, "hashedPhone=");
  BYTE5(v121[1]) = 0;
  HIWORD(v121[1]) = -5120;
  v80 = (_QWORD *)((char *)v0 + v13[13]);
  v81 = v80[1];
  v119 = *v80;
  v120 = v81;
  swift_bridgeObjectRetain(v81);
  v82._countAndFlagsBits = String.init<A>(reflecting:)(&v119, v71);
  v83 = v82._object;
  String.append(_:)(v82);
  swift_bridgeObjectRelease(v83);
  v84._countAndFlagsBits = 32;
  v84._object = (void *)0xE100000000000000;
  String.append(_:)(v84);
  v85 = v121[0];
  v86 = (void *)v121[1];
  v121[0] = v79;
  v121[1] = v78;
  swift_bridgeObjectRetain(v78);
  v87._countAndFlagsBits = v85;
  v87._object = v86;
  String.append(_:)(v87);
  swift_bridgeObjectRelease(v78);
  swift_bridgeObjectRelease(v86);
  v89 = v121[0];
  v88 = v121[1];
  strcpy((char *)v121, "deviceName=");
  HIDWORD(v121[1]) = -352321536;
  v90 = (_QWORD *)((char *)v0 + v13[14]);
  v91 = v90[1];
  v119 = *v90;
  v120 = v91;
  swift_bridgeObjectRetain(v91);
  v92._countAndFlagsBits = String.init<A>(reflecting:)(&v119, v71);
  v93 = v92._object;
  String.append(_:)(v92);
  swift_bridgeObjectRelease(v93);
  v94._countAndFlagsBits = 32;
  v94._object = (void *)0xE100000000000000;
  String.append(_:)(v94);
  v95 = v121[0];
  v96 = (void *)v121[1];
  v121[0] = v89;
  v121[1] = v88;
  swift_bridgeObjectRetain(v88);
  v97._countAndFlagsBits = v95;
  v97._object = v96;
  String.append(_:)(v97);
  swift_bridgeObjectRelease(v88);
  swift_bridgeObjectRelease(v96);
  v99 = v121[0];
  v98 = v121[1];
  v121[0] = 1030452080;
  v121[1] = 0xE400000000000000;
  v100 = (_QWORD *)((char *)v0 + v13[15]);
  v101 = v100[1];
  v119 = *v100;
  v120 = v101;
  swift_bridgeObjectRetain(v101);
  v102._countAndFlagsBits = String.init<A>(reflecting:)(&v119, v71);
  v103 = v102._object;
  String.append(_:)(v102);
  swift_bridgeObjectRelease(v103);
  v104._countAndFlagsBits = 32;
  v104._object = (void *)0xE100000000000000;
  String.append(_:)(v104);
  v105 = v121[0];
  v106 = (void *)v121[1];
  v121[0] = v99;
  v121[1] = v98;
  swift_bridgeObjectRetain(v98);
  v107._countAndFlagsBits = v105;
  v107._object = v106;
  String.append(_:)(v107);
  swift_bridgeObjectRelease(v98);
  swift_bridgeObjectRelease(v106);
  v109 = v121[0];
  v108 = v121[1];
  v121[0] = 0;
  v121[1] = 0xE000000000000000;
  v110._countAndFlagsBits = 0x65646F4D74736574;
  v110._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v110);
  LOBYTE(v119) = sub_10000AD50();
  _print_unlocked<A, B>(_:_:)(&v119, v121, &type metadata for PasswordSharingModel.TestMode, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v111 = v121[0];
  v112 = (void *)v121[1];
  v121[0] = v109;
  v121[1] = v108;
  swift_bridgeObjectRetain(v108);
  v113._countAndFlagsBits = v111;
  v113._object = v112;
  String.append(_:)(v113);
  swift_bridgeObjectRelease(v108);
  swift_bridgeObjectRelease(v112);
  v114 = v121[1];
  swift_bridgeObjectRetain(v121[1]);
  v115._countAndFlagsBits = 62;
  v115._object = (void *)0xE100000000000000;
  String.append(_:)(v115);
  swift_bridgeObjectRelease(v114);
  return v121[0];
}

uint64_t sub_10000D74C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A42A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10000D794()
{
  unint64_t result;

  result = qword_1001A5500;
  if (!qword_1001A5500)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1001A5500);
  }
  return result;
}

uint64_t sub_10000D7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PasswordSharingModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000D81C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PasswordSharingModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000D858(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100006A6C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000D894(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10000D8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A42A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for PasswordSharingModel.TestMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PasswordSharingModel.TestMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_10000D9F4 + 4 * byte_100131AC6[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_10000DA28 + 4 * byte_100131AC1[v4]))();
}

uint64_t sub_10000DA28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000DA30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10000DA38);
  return result;
}

uint64_t sub_10000DA44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10000DA4CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_10000DA50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10000DA58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PasswordSharingModel.TestMode()
{
  return &type metadata for PasswordSharingModel.TestMode;
}

unint64_t sub_10000DA78()
{
  unint64_t result;

  result = qword_1001A35C8;
  if (!qword_1001A35C8)
  {
    result = swift_getWitnessTable(&unk_100131BFC, &type metadata for PasswordSharingModel.TestMode);
    atomic_store(result, (unint64_t *)&qword_1001A35C8);
  }
  return result;
}

unint64_t sub_10000DABC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100176650, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8)
    return 8;
  else
    return v3;
}

void sub_10000DB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000DB34(a1, a2, a3, a4, (SEL *)&selRef_setDeviceName_);
}

void sub_10000DB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000DB34(a1, a2, a3, a4, (SEL *)&selRef_setHashedEmail_);
}

void sub_10000DB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000DB34(a1, a2, a3, a4, (SEL *)&selRef_setHashedPhone_);
}

void sub_10000DB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000DB34(a1, a2, a3, a4, (SEL *)&selRef_setHotspotPSK_);
}

void sub_10000DB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v5;
  id v8;

  if (a2)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v5, *a5, v8);

}

void sub_10000DB94(void *a1)
{
  void *v1;

  objc_msgSend(v1, "setPeerDevice:", a1);

}

void sub_10000DBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000DC80(a1, a2, a3, a4, (uint64_t)sub_10000DBE4, (uint64_t)&unk_1001779F8, (SEL *)&selRef_setProgressHandler_);
}

uint64_t sub_10000DBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a3)
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  else
    v6 = 0;
  swift_retain(v4);
  v5(a2, v6);
  swift_release(v4);
  return swift_bridgeObjectRelease(v6);
}

void sub_10000DC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000DC80(a1, a2, a3, a4, (uint64_t)sub_10006E858, (uint64_t)&unk_1001779D0, (SEL *)&selRef_setPromptForPINHandler_);
}

void sub_10000DC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  void *v7;
  void *v9;
  _QWORD v10[5];
  uint64_t v11;

  if (a1)
  {
    v10[4] = a1;
    v11 = a2;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = a5;
    v10[3] = a6;
    v9 = _Block_copy(v10);
    swift_release(v11);
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v7, *a7, v9);
  _Block_release(v9);
}

id sub_10000DD04()
{
  void *v0;

  return objc_msgSend(v0, "activate");
}

id sub_10000DD14()
{
  void *v0;

  return objc_msgSend(v0, "invalidate");
}

void sub_10000DD24()
{
  void *v0;
  id v1;

  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "tryPIN:", v1);

}

uint64_t sub_10000DD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10000DD6C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10000DD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A35D0);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A35D0);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10000DE0C(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  double v14;
  double v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  Class isa;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  _QWORD v49[5];
  uint64_t v50;
  objc_super v51;

  v2 = v1;
  v51.receiver = v2;
  v51.super_class = (Class)type metadata accessor for AirTagHSA2ViewController();
  objc_msgSendSuper2(&v51, "viewWillAppear:", a1 & 1);
  sub_1000897BC(0x67u);
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v2, "setTitle:", v6);

  sub_1000897BC(0x68u);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  objc_msgSend(v2, "setSubtitle:", v9);

  objc_msgSend(v2, "setDismissalType:", 1);
  v10 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v11);

  if (v12)
  {
    v13 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v13, "scale");
    v15 = v14;

    v16 = objc_msgSend(v12, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v15);
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v10, "setImage:", v16);

  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = objc_msgSend(v2, "contentView");
  objc_msgSend(v17, "addSubview:", v10);

  v18 = objc_msgSend(v2, "contentView");
  v19 = objc_msgSend(v18, "mainContentGuide");

  v20 = (void *)objc_opt_self(NSLayoutConstraint);
  v21 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v22 = swift_allocObject(v21, 80, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100131CB0;
  v23 = objc_msgSend(v10, "centerXAnchor");
  v24 = objc_msgSend(v19, "centerXAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v22 + 32) = v25;
  v26 = objc_msgSend(v10, "centerYAnchor");
  v27 = objc_msgSend(v19, "centerYAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v22 + 40) = v28;
  v29 = objc_msgSend(v10, "widthAnchor");
  v30 = objc_msgSend(v29, "constraintEqualToConstant:", 76.0);

  *(_QWORD *)(v22 + 48) = v30;
  v31 = objc_msgSend(v10, "heightAnchor");
  v32 = objc_msgSend(v31, "constraintEqualToConstant:", 76.0);

  *(_QWORD *)(v22 + 56) = v32;
  v33 = objc_msgSend(v10, "topAnchor");
  v34 = objc_msgSend(v19, "topAnchor");
  v35 = objc_msgSend(v33, "constraintGreaterThanOrEqualToAnchor:", v34);

  *(_QWORD *)(v22 + 64) = v35;
  v36 = objc_msgSend(v10, "bottomAnchor");
  v37 = objc_msgSend(v19, "bottomAnchor");
  v38 = objc_msgSend(v36, "constraintLessThanOrEqualToAnchor:", v37);

  *(_QWORD *)(v22 + 72) = v38;
  specialized Array._endMutation()(v39);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v22);
  objc_msgSend(v20, "activateConstraints:", isa);

  sub_1000897BC(0x69u);
  v42 = v41;
  v43 = swift_allocObject(&unk_100177A30, 24, 7);
  swift_unknownObjectWeakInit(v43 + 16, v2);
  swift_retain(v43);
  v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  v49[4] = sub_10000E8C8;
  v50 = v43;
  v49[0] = _NSConcreteStackBlock;
  v49[1] = 1107296256;
  v49[2] = sub_10001B5D0;
  v49[3] = &unk_100177A48;
  v45 = _Block_copy(v49);
  v46 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v44, 0, v45);

  _Block_release(v45);
  v47 = v50;
  swift_release(v43);
  swift_release(v47);
  v48 = objc_msgSend(v2, "addAction:", v46);

}

void sub_10000E3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;

  v2 = a2 + 16;
  if (qword_1001A2E68 != -1)
    swift_once(&qword_1001A2E68, sub_10000DD7C);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10000E8E8(v3, (uint64_t)qword_1001A35D0);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v7 = 134217984;
    v17 = 47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v7 + 4, v7 + 12);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "updateSettingsPressed (HSA2) pressed in %ld", v7, 0xCu);
    swift_slowDealloc(v7, -1, -1);
  }

  swift_beginAccess(v2, &v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC18SharingViewService24AirTagHSA2ViewController_mainController);
    if (v10)
    {
      v11 = (void *)v10;
      v12 = swift_allocObject(&unk_100177A80, 24, 7);
      *(_QWORD *)(v12 + 16) = v11;
      v13 = v11;
      sub_1000D2EB8(v9, (uint64_t)sub_10000E924, v12);

      swift_release(v12);
      return;
    }

  }
  v14 = Logger.logObject.getter(Strong);
  v15 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "mainController nil while initializing primaryAction", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

}

uint64_t sub_10000E5F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v0 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  URL.init(string:)(0xD000000000000036, 0x80000001001364E0);
  Optional.unwrap(_:file:line:)(v6, sub_10000E754, 0, "SharingViewService/AirTagHSA2ViewController.swift", 49, 2, 56, v0);
  sub_10000E92C((uint64_t)v2);
  (*(void (**)(char *, _QWORD *, uint64_t))(v4 + 16))(v2, v6, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  sub_1000B313C(0, (uint64_t)v2, 0, 0, 58);
  sub_10000E92C((uint64_t)v2);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_10000E754()
{
  return 0xD000000000000037;
}

id sub_10000E808()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AirTagHSA2ViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AirTagHSA2ViewController()
{
  return objc_opt_self(_TtC18SharingViewService24AirTagHSA2ViewController);
}

unint64_t sub_10000E868()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A5810;
  if (!qword_1001A5810)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A5810);
  }
  return result;
}

uint64_t sub_10000E8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10000E8C8(uint64_t a1)
{
  uint64_t v1;

  sub_10000E3F4(a1, v1);
}

uint64_t sub_10000E8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10000E8E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10000E8E8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_10000E900()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10000E924()
{
  return sub_10000E5F8();
}

uint64_t sub_10000E92C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006A6C(&qword_1001A3618);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_10000E96C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

void sub_10000E9AC()
{
  qword_1001A3620 = 0x4010000000000000;
}

void sub_10000E9BC()
{
  qword_1001A3628 = 0x4046000000000000;
}

void sub_10000E9CC()
{
  qword_1001A3630 = 0x402C000000000000;
}

char *sub_10000E9DC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  Class isa;
  id v58;
  id v59;
  objc_super v60;

  v9 = &v4[OBJC_IVAR____TtC18SharingViewService12ProgressView_statusLabelText];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *(_DWORD *)&v4[OBJC_IVAR____TtC18SharingViewService12ProgressView_progress] = 0;
  v10 = objc_allocWithZone((Class)UIProgressView);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithProgressViewStyle:", 1);
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService12ProgressView_progressView] = v12;
  v13 = objc_msgSend(objc_allocWithZone((Class)PRXLabel), "initWithStyle:", 1);
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService12ProgressView_statusLabel] = v13;

  v60.receiver = v11;
  v60.super_class = (Class)type metadata accessor for ProgressView();
  v14 = (char *)objc_msgSendSuper2(&v60, "initWithFrame:", a1, a2, a3, a4);
  v15 = OBJC_IVAR____TtC18SharingViewService12ProgressView_progressView;
  v16 = *(void **)&v14[OBJC_IVAR____TtC18SharingViewService12ProgressView_progressView];
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v14;
  v19 = v16;
  v20 = objc_msgSend(v17, "systemBlueColor");
  objc_msgSend(v19, "setProgressTintColor:", v20);

  v21 = *(id *)&v14[v15];
  v22 = objc_msgSend(v17, "systemGray5Color");
  objc_msgSend(v21, "setTrackTintColor:", v22);

  v23 = objc_msgSend(*(id *)&v14[v15], "layer");
  if (qword_1001A2E70 != -1)
    swift_once(&qword_1001A2E70, sub_10000E9AC);
  objc_msgSend(v23, "setCornerRadius:", *(double *)&qword_1001A3620 * 0.5);

  v24 = *(void **)&v14[v15];
  objc_msgSend(v24, "setClipsToBounds:", 1);
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v18, "addSubview:", v24);
  v25 = OBJC_IVAR____TtC18SharingViewService12ProgressView_statusLabel;
  v26 = *(void **)&v18[OBJC_IVAR____TtC18SharingViewService12ProgressView_statusLabel];
  objc_msgSend(v26, "setNumberOfLines:", 1);
  objc_msgSend(v26, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v26, "setMinimumScaleFactor:", 0.5);
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v18, "addSubview:", v26);
  v58 = (id)objc_opt_self(NSLayoutConstraint);
  v27 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v28 = swift_allocObject(v27, 104, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100131CF0;
  v29 = objc_msgSend(v24, "topAnchor");
  v30 = objc_msgSend(v18, "topAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v28 + 32) = v31;
  v32 = objc_msgSend(*(id *)&v14[v15], "heightAnchor");
  v33 = objc_msgSend(v32, "constraintEqualToConstant:", *(double *)&qword_1001A3620);

  *(_QWORD *)(v28 + 40) = v33;
  v34 = objc_msgSend(*(id *)&v14[v15], "leadingAnchor");
  v35 = objc_msgSend(v18, "leadingAnchor");
  if (qword_1001A2E78 != -1)
    swift_once(&qword_1001A2E78, sub_10000E9BC);
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v35, *(double *)&qword_1001A3628, v58);

  *(_QWORD *)(v28 + 48) = v36;
  v37 = objc_msgSend(*(id *)&v14[v15], "trailingAnchor");
  v38 = objc_msgSend(v18, "trailingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, -*(double *)&qword_1001A3628);

  *(_QWORD *)(v28 + 56) = v39;
  v40 = objc_msgSend(*(id *)&v18[v25], "topAnchor");
  v41 = objc_msgSend(*(id *)&v14[v15], "bottomAnchor");
  if (qword_1001A2E80 != -1)
    swift_once(&qword_1001A2E80, sub_10000E9CC);
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v41, *(double *)&qword_1001A3630);

  *(_QWORD *)(v28 + 64) = v42;
  v43 = objc_msgSend(*(id *)&v18[v25], "leadingAnchor");
  v44 = objc_msgSend(v18, "leadingAnchor");
  v45 = objc_msgSend(v43, "constraintGreaterThanOrEqualToAnchor:", v44);

  *(_QWORD *)(v28 + 72) = v45;
  v46 = objc_msgSend(*(id *)&v18[v25], "trailingAnchor");
  v47 = objc_msgSend(v18, "trailingAnchor");
  v48 = objc_msgSend(v46, "constraintLessThanOrEqualToAnchor:", v47);

  *(_QWORD *)(v28 + 80) = v48;
  v49 = objc_msgSend(*(id *)&v18[v25], "centerXAnchor");
  v50 = objc_msgSend(v18, "centerXAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v28 + 88) = v51;
  v52 = objc_msgSend(*(id *)&v18[v25], "bottomAnchor");
  v53 = objc_msgSend(v18, "bottomAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v28 + 96) = v54;
  specialized Array._endMutation()(v55);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v28);
  objc_msgSend(v59, "activateConstraints:", isa);

  return v18;
}

id sub_10000F154()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ProgressView()
{
  return objc_opt_self(_TtC18SharingViewService12ProgressView);
}

uint64_t sub_10000F1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A3680);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A3680);
  if (qword_1001A2EF0 != -1)
    swift_once(&qword_1001A2EF0, sub_100018CB8);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_10000F280(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  _DWORD *v9;
  __n128 v10;

  if (qword_1001A2E88 != -1)
    swift_once(&qword_1001A2E88, sub_10000F1F0);
  v4 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v4, (uint64_t)qword_1001A3680);
  v5 = swift_retain_n(v2, 2);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (_DWORD *)swift_slowAlloc(22, -1);
    swift_slowAlloc(64, -1);
    *v9 = 136315394;
    __asm { BR              X10 }
  }

  return swift_release_n(v2, 2, v10);
}

uint64_t sub_10000F588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_delegate;
  *(_QWORD *)(v3 + 8) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSessionGenerator);
  *v4 = 0;
  v4[1] = 0;
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserverGenerator);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserver);
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSharingSession);
  *v7 = 0;
  v7[1] = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_missingRemoteAck) = 0;
  *(_DWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_shareErrorCode) = 0;
  sub_10000D7D8(a1, v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_shareState) = 0;
  sub_1000105EC();
  sub_10000D81C(a1);
  v8 = *v4;
  v9 = v4[1];
  *v4 = (uint64_t)sub_10000F674;
  v4[1] = 0;
  sub_100012F60(v8, v9);
  v10 = *v5;
  v11 = v5[1];
  *v5 = (uint64_t)sub_10000F6A4;
  v5[1] = 0;
  sub_100012F60(v10, v11);
  return v1;
}

id sub_10000F674()
{
  return objc_msgSend(objc_allocWithZone((Class)SFPasswordSharingSession), "init");
}

uint64_t sub_10000F6A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = type metadata accessor for PasswordRequesterStateObserver(0);
  v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v8 = (_QWORD *)(v7 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(v7 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscoveryGenerator);
  *v9 = 0;
  v9[1] = 0;
  v10 = v7 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscovery;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_QWORD *)(v10 + 32) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v7 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterDeviceIdentifier, v5, v2);
  *(_BYTE *)(v7 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState) = 0;
  v11 = (_QWORD *)(v7 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscoveryGenerator);
  v12 = *(_QWORD *)(v7 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscoveryGenerator);
  v13 = *(_QWORD *)(v7
                  + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscoveryGenerator
                  + 8);
  *v11 = sub_10006C940;
  v11[1] = 0;
  sub_100012F60(v12, v13);
  return v7;
}

void sub_10000F7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t (*v22)(char *, __n128);
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double (**v33)(uint64_t, char);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v40[24];

  v1 = v0;
  v2 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v2);
  v4 = &v40[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1001A2E88 != -1)
    swift_once(&qword_1001A2E88, sub_10000F1F0);
  v10 = type metadata accessor for Logger(0, v7);
  v11 = sub_10000E8E8(v10, (uint64_t)qword_1001A3680);
  v12 = Logger.logObject.getter(v11);
  v14 = static os_log_type_t.default.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v14, "PasswordSharingInteractor activate", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model, v40, 0, 0);
  v17 = type metadata accessor for PasswordSharingModel(0);
  sub_100006BD8(v16 + *(int *)(v17 + 20), (uint64_t)v4, &qword_1001A42A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    v18 = sub_10000D858((uint64_t)v4, &qword_1001A42A0);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Device identifier not available. PasswordRequesterStateObserver disabled.", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    v22 = *(uint64_t (**)(char *, __n128))(v0
                                                   + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserverGenerator);
    if (v22)
    {
      v23 = *(_QWORD *)(v0
                      + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserverGenerator
                      + 8);
      v24 = swift_retain(v23);
      v25 = v22(v9, v24);
      v27 = v26;
      sub_100012F60((uint64_t)v22, v23);
    }
    else
    {
      v25 = 0;
      v27 = 0;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v28 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserver);
    v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserver);
    *v28 = v25;
    v28[1] = v27;
    swift_unknownObjectRelease(v29);
  }
  v30 = OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserver;
  v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserver);
  if (v31)
  {
    v32 = swift_allocObject(&unk_100177BB0, 24, 7);
    swift_weakInit(v32 + 16, v1);
    v33 = (double (**)(uint64_t, char))(v31
                                                + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler);
    v34 = *(_QWORD *)(v31 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler);
    v35 = *(_QWORD *)(v31 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler + 8);
    *v33 = sub_100013330;
    v33[1] = (double (*)(uint64_t, char))v32;
    sub_100012F60(v34, v35);
    v36 = *(_QWORD *)(v1 + v30);
    if (v36)
    {
      v37 = swift_unknownObjectRetain(*(_QWORD *)(v1 + v30));
      sub_10006C990(v37, v38);
      swift_unknownObjectRelease(v36);
    }
  }
}

double sub_10000FB04(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    if (a2)
    {
      if (a2 != 1)
      {
        v11 = swift_bridgeObjectRelease(0x8000000100135DB0);
LABEL_9:
        sub_100011048(v11, v12);
LABEL_10:
        *(_QWORD *)&result = swift_release(v7).n128_u64[0];
        return result;
      }
      v8 = 0x736150736465654ELL;
      v9 = 0xED000064726F7773;
    }
    else
    {
      v8 = 0x64696C61766E49;
      v9 = 0xE700000000000000;
    }
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, 0xD000000000000013, 0x8000000100135DB0, 0);
    v11 = swift_bridgeObjectRelease(v9);
    if ((v10 & 1) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
  return result;
}

void sub_10000FBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  if (qword_1001A2E88 != -1)
    swift_once(&qword_1001A2E88, sub_10000F1F0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A3680);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "PasswordSharingInteractor invalidate", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSharingSession);
  if (v10)
  {
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSharingSession + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v3
                                               + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSharingSession));
    v13 = *(void (**)(uint64_t, uint64_t))(v11 + 184);
    swift_unknownObjectRetain(v10);
    v13(ObjectType, v11);
    swift_unknownObjectRelease(v10);
  }
  v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserver);
  if (v14)
  {
    v15 = swift_unknownObjectRetain(*(_QWORD *)(v3
                                              + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserver));
    sub_10006D274(v15, v16);
    swift_unknownObjectRelease(v14);
  }
  sub_10000FEF0();
}

void sub_10000FD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _BYTE v7[24];

  v1 = v0;
  v2 = type metadata accessor for PasswordSharingModel(0);
  __chkstk_darwin(v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model, v7, 0, 0);
  sub_10000D7D8(v5, (uint64_t)v4);
  LOBYTE(v5) = sub_10000AD50();
  sub_10000D81C((uint64_t)v4);
  __asm { BR              X10 }
}

void sub_10000FDF8()
{
  swift_bridgeObjectRelease(0xE300000000000000);
  sub_1000113A4();
}

void sub_10000FEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  char *v23;
  double v24;
  void (*v25)(char *, uint64_t);
  _QWORD v26[2];
  char *v27;
  _BYTE v28[24];

  v1 = sub_100006A6C(&qword_1001A6F70);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)v26 - v5;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v27 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)v26 - v11;
  v13 = v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model, v28, 0, 0);
  v14 = type metadata accessor for PasswordSharingModel(0);
  sub_100006BD8(v13 + *(int *)(v14 + 76), (uint64_t)v6, &qword_1001A6F70);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) != 1)
  {
    v26[1] = v0;
    v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v16(v12, v6, v7);
    sub_100006BD8(v13 + *(int *)(v14 + 80), (uint64_t)v4, &qword_1001A6F70);
    if (v15(v4, 1, v7) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      goto LABEL_5;
    }
    v23 = v27;
    v16(v27, v4, v7);
    v24 = Date.timeIntervalSince(_:)(v12) * 1000.0;
    if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
    {
      if (v24 > -9.22337204e18)
      {
        if (v24 < 9.22337204e18)
        {
          if (((uint64_t)v24 & 0x8000000000000000) == 0 || !__OFSUB__(0, (uint64_t)v24))
          {
            sub_1000901DC();
            v25 = *(void (**)(char *, uint64_t))(v8 + 8);
            v25(v23, v7);
            v25(v12, v7);
            return;
          }
          goto LABEL_19;
        }
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  v4 = v6;
LABEL_5:
  sub_10000D858((uint64_t)v4, &qword_1001A6F70);
  if (qword_1001A2E88 != -1)
    swift_once(&qword_1001A2E88, sub_10000F1F0);
  v18 = type metadata accessor for Logger(0, v17);
  v19 = sub_10000E8E8(v18, (uint64_t)qword_1001A3680);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.error.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to report done metric - either UI start or end date not available", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

}

void sub_100010230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  char *v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30[2];
  char *v31;
  _BYTE v32[24];

  v1 = type metadata accessor for PasswordSharingModel(0);
  __chkstk_darwin(v1);
  v3 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006A6C(&qword_1001A6F70);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v30 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v31 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)v30 - v14;
  v16 = v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model, v32, 0, 0);
  sub_100006BD8(v16 + *(int *)(v1 + 68), (uint64_t)v9, &qword_1001A6F70);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) != 1)
  {
    v30[0] = (uint64_t)v3;
    v30[1] = v0;
    v18 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v18(v15, v9, v10);
    sub_100006BD8(v16 + *(int *)(v1 + 72), (uint64_t)v7, &qword_1001A6F70);
    if (v17(v7, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
      goto LABEL_5;
    }
    v25 = v31;
    v18(v31, v7, v10);
    v26 = Date.timeIntervalSince(_:)(v15) * 1000.0;
    if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) != 0)
    {
      if (v26 > -9.22337204e18)
      {
        if (v26 < 9.22337204e18)
        {
          if (((uint64_t)v26 & 0x8000000000000000) == 0 || !__OFSUB__(0, (uint64_t)v26))
          {
            v27 = v16;
            v28 = v30[0];
            sub_10000D7D8(v27, v30[0]);
            sub_10000AA30();
            sub_10000D81C(v28);
            sub_10009030C();
            v29 = *(void (**)(char *, uint64_t))(v11 + 8);
            v29(v25, v10);
            v29(v15, v10);
            return;
          }
          goto LABEL_19;
        }
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  v7 = v9;
LABEL_5:
  sub_10000D858((uint64_t)v7, &qword_1001A6F70);
  if (qword_1001A2E88 != -1)
    swift_once(&qword_1001A2E88, sub_10000F1F0);
  v20 = type metadata accessor for Logger(0, v19);
  v21 = sub_10000E8E8(v20, (uint64_t)qword_1001A3680);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to report done metric - either session start or end date not available", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }

}

void sub_1000105EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  __n128 v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  double v40;
  id v41;
  void *v42;
  Class v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  Class isa;
  NSString v47;
  char *v48;
  uint64_t v49;
  uint64_t aBlock[5];
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[24];

  v1 = type metadata accessor for PasswordSharingModel(0);
  __chkstk_darwin(v1);
  v48 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v10 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v44 - v11;
  v49 = v0;
  v13 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model);
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model, v53, 0, 0);
  v15 = v13[1];
  if (v15)
  {
    v16 = *v13;
    sub_100006BD8((uint64_t)v13 + *(int *)(v1 + 20), (uint64_t)v5, &qword_1001A42A0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v45 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v31 = v12;
      v45(v12, v5, v6);
      v32 = objc_allocWithZone((Class)SFClient);
      swift_bridgeObjectRetain(v15);
      v48 = (char *)objc_msgSend(v32, "init");
      v47 = String._bridgeToObjectiveC()();
      isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v31, v6);
      v33 = *(unsigned __int8 *)(v7 + 80);
      v34 = (v33 + 32) & ~v33;
      v35 = (v8 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
      v36 = swift_allocObject(&unk_100177C00, v35 + 8, v33 | 7);
      *(_QWORD *)(v36 + 16) = v16;
      *(_QWORD *)(v36 + 24) = v15;
      v45((char *)(v36 + v34), v10, v6);
      v37 = v49;
      *(_QWORD *)(v36 + v35) = v49;
      aBlock[4] = (uint64_t)sub_1000132B4;
      v51 = v36;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100010FB8;
      aBlock[3] = (uint64_t)&unk_100177C18;
      v38 = _Block_copy(aBlock);
      v39 = v51;
      swift_retain(v37);
      *(_QWORD *)&v40 = swift_release(v39).n128_u64[0];
      v42 = v47;
      v41 = v48;
      v43 = isa;
      objc_msgSend(v48, "displayStringForContactIdentifierSync:deviceIdentifier:completion:", v47, isa, v38, v40);
      _Block_release(v38);

      objc_msgSend(v41, "invalidate");
      (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
      return;
    }
    sub_10000D858((uint64_t)v5, &qword_1001A42A0);
  }
  if (qword_1001A2E88 != -1)
    swift_once(&qword_1001A2E88, sub_10000F1F0);
  v17 = type metadata accessor for Logger(0, v14);
  sub_10000E8E8(v17, (uint64_t)qword_1001A3680);
  v18 = v49;
  v19 = swift_retain_n(v49, 2);
  v20 = Logger.logObject.getter(v19);
  v22 = static os_log_type_t.default.getter(v20, v21);
  if (os_log_type_enabled(v20, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    aBlock[0] = v24;
    *(_DWORD *)v23 = 136315138;
    v25 = (uint64_t)v48;
    sub_10000D7D8((uint64_t)v13, (uint64_t)v48);
    v26 = sub_10000CF4C();
    v28 = v27;
    sub_10000D81C(v25);
    v52 = sub_10001EFA4(v26, v28, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v23 + 4, v23 + 12);
    swift_release_n(v18, 2, v29);
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v20, v22, "Could not resolve display string for model: %s", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_release_n(v18, 2, v30);
  }
}

void sub_100010A74(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v49 = a5;
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    if (qword_1001A2E88 != -1)
      swift_once(&qword_1001A2E88, sub_10000F1F0);
    v20 = type metadata accessor for Logger(0, v17);
    sub_10000E8E8(v20, (uint64_t)qword_1001A3680);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a7, v15);
    swift_bridgeObjectRetain(a6);
    swift_errorRetain(a4);
    swift_bridgeObjectRetain(a6);
    v21 = swift_errorRetain(a4);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(32, -1);
      v48 = swift_slowAlloc(96, -1);
      v51 = v48;
      *(_DWORD *)v24 = 136315650;
      swift_bridgeObjectRetain(a6);
      v50 = sub_10001EFA4(v49, a6, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease_n(a6, 3);
      *(_WORD *)(v24 + 12) = 2080;
      v25 = sub_100005B80(&qword_1001A5450, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v26 = dispatch thunk of CustomStringConvertible.description.getter(v15, v25);
      v28 = v27;
      v50 = sub_10001EFA4(v26, v27, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v24 + 14, v24 + 22);
      swift_bridgeObjectRelease(v28);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
      *(_WORD *)(v24 + 22) = 2080;
      v50 = a4;
      swift_errorRetain(a4);
      v29 = sub_100006A6C(&qword_1001A3900);
      v30 = String.init<A>(reflecting:)(&v50, v29);
      v32 = v31;
      v50 = sub_10001EFA4(v30, v31, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v24 + 24, v24 + 32);
      swift_bridgeObjectRelease(v32);
      swift_errorRelease(a4);
      swift_errorRelease(a4);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to get display string for contactID %s, deviceID %s with error: %s", (uint8_t *)v24, 0x20u);
      v33 = v48;
      swift_arrayDestroy(v48, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a6, 2);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
      swift_errorRelease(a4);
      swift_errorRelease(a4);
    }

  }
  else
  {
    v49 = a1;
    if (qword_1001A2E88 != -1)
      swift_once(&qword_1001A2E88, sub_10000F1F0);
    v34 = type metadata accessor for Logger(0, v17);
    sub_10000E8E8(v34, (uint64_t)qword_1001A3680);
    v35 = swift_bridgeObjectRetain_n(a2, 2);
    v36 = Logger.logObject.getter(v35);
    v38 = static os_log_type_t.default.getter(v36, v37);
    v39 = os_log_type_enabled(v36, v38);
    v40 = v49;
    if (v39)
    {
      v41 = swift_slowAlloc(18, -1);
      v42 = swift_slowAlloc(32, -1);
      v50 = v42;
      *(_DWORD *)v41 = 136315394;
      v43 = a2;
      if (!a2)
      {
        v51 = 0;
        v52 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v52);
        v43 = 0x8000000100136820;
        v40 = 0xD000000000000015;
      }
      swift_bridgeObjectRetain(a2);
      v51 = sub_10001EFA4(v40, v43, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v41 + 4, v41 + 12);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v43);
      *(_WORD *)(v41 + 12) = 1024;
      LODWORD(v51) = a3 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 4, v41 + 14, v41 + 18);
      _os_log_impl((void *)&_mh_execute_header, v36, v38, "Resolved display string %s (display string is device name: %{BOOL}d)", (uint8_t *)v41, 0x12u);
      swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v41, -1, -1);

      v40 = v49;
    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    v44 = a8 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model;
    swift_beginAccess(a8 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model, &v51, 1, 0);
    v45 = type metadata accessor for PasswordSharingModel(0);
    v46 = (uint64_t *)(v44 + *(int *)(v45 + 24));
    v47 = v46[1];
    *v46 = v40;
    v46[1] = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRelease(v47);
    *(_BYTE *)(v44 + *(int *)(v45 + 28)) = a3 & 1;
  }
}

uint64_t sub_100010FB8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, void *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v10 = v9;
  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  swift_retain(v6);
  v11 = a4;
  v7(v8, v10, a3, a4);
  swift_release(v6);

  return swift_bridgeObjectRelease(v10);
}

void sub_100011048(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (qword_1001A2E88 != -1)
    swift_once(&qword_1001A2E88, sub_10000F1F0);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10000E8E8(v3, (uint64_t)qword_1001A3680);
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "Requester no longer needs password", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  __asm { BR              X10 }
}

void sub_1000113A4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  uint64_t v22;
  os_log_type_t v23;
  _BOOL4 v24;
  int *v25;
  uint8_t *v26;
  NSObject **v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  void (*v38)(uint64_t, uint64_t);
  uint64_t (*v39)(__n128);
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  os_log_type_t v48;
  uint8_t *v49;
  NSObject *v50;
  uint64_t v51;
  os_log_type_t v52;
  uint8_t *v53;
  NSObject *v54;
  uint64_t v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v73)(NSObject *, uint64_t, uint64_t);
  NSObject *v74;
  NSObject *v75;
  uint64_t v76;
  void (*v77)(double (*)(int, uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v78;
  uint64_t v79;
  void (*v80)(uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  uint64_t v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  NSString v99;
  id v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  NSObject *v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  uint64_t v108;
  char v109[24];

  v1 = (int *)type metadata accessor for PasswordSharingModel(0);
  __chkstk_darwin(v1);
  v103 = (uint64_t)&v101 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100006A6C(&qword_1001A6F70);
  __chkstk_darwin(v3);
  v102 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v5);
  v7 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)SFDevice), "init");
  v105 = v0;
  v9 = v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model, v109, 0, 0);
  v10 = *(_QWORD *)(v9 + 8);
  if (v10)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v9 + 8));
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v8, "setContactIdentifier:", v11);

  sub_100006BD8(v9 + v1[5], (uint64_t)v7, &qword_1001A42A0);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) != 1)
  {
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
  }
  objc_msgSend(v8, "setIdentifier:", isa);

  v15 = *(_QWORD *)(v9 + v1[8] + 8);
  swift_bridgeObjectRetain(v15);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  objc_msgSend(v8, "setRequestSSID:", v16);

  if (qword_1001A2E88 != -1)
    swift_once(&qword_1001A2E88, sub_10000F1F0);
  v18 = type metadata accessor for Logger(0, v17);
  v19 = sub_10000E8E8(v18, (uint64_t)qword_1001A3680);
  v20 = v8;
  v106 = v19;
  v21 = Logger.logObject.getter(v20);
  v23 = static os_log_type_t.default.getter(v21, v22);
  v24 = os_log_type_enabled(v21, v23);
  v104 = v20;
  if (v24)
  {
    v101 = v9;
    v25 = v1;
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v26 = 138412290;
    v107 = v20;
    v28 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v26 + 4, v26 + 12);
    *v27 = v20;

    v1 = v25;
    v9 = v101;
    _os_log_impl((void *)&_mh_execute_header, v21, v23, "Start password sharing session with %@", v26, 0xCu);
    v29 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v27, 1, v29);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {

    v21 = v20;
  }
  v30 = v105;

  v31 = *(_BYTE *)(v30 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_shareState);
  *(_BYTE *)(v30 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_shareState) = 1;
  v33 = sub_10000F280(v31, v32);
  v34 = (uint64_t *)(v30 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSharingSession);
  v35 = *(_QWORD *)(v30 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSharingSession);
  if (v35)
  {
    v36 = v34[1];
    ObjectType = swift_getObjectType(*(_QWORD *)(v30
                                               + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSharingSession));
    v38 = *(void (**)(uint64_t, uint64_t))(v36 + 184);
    swift_unknownObjectRetain(v35);
    v38(ObjectType, v36);
    v33 = swift_unknownObjectRelease(v35);
  }
  v39 = *(uint64_t (**)(__n128))(v30
                                         + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSessionGenerator);
  if (v39)
  {
    v40 = *(_QWORD *)(v30 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSessionGenerator + 8);
    v41 = swift_retain(v40);
    v42 = v39(v41);
    v44 = v43;
    v45 = sub_100012F60((uint64_t)v39, v40);
    if (!*(_QWORD *)(v9 + v1[14] + 8))
    {
      v46 = Logger.logObject.getter(v45);
      v48 = static os_log_type_t.default.getter(v46, v47);
      if (os_log_type_enabled(v46, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v49 = 0;
        _os_log_impl((void *)&_mh_execute_header, v46, v48, "No device name?", v49, 2u);
        swift_slowDealloc(v49, -1, -1);
      }

    }
    if (!*(_QWORD *)(v9 + v1[12] + 8))
    {
      v50 = Logger.logObject.getter(v45);
      v52 = static os_log_type_t.default.getter(v50, v51);
      if (os_log_type_enabled(v50, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v50, v52, "No email hash?", v53, 2u);
        swift_slowDealloc(v53, -1, -1);
      }

    }
    if (!*(_QWORD *)(v9 + v1[13] + 8))
    {
      v54 = Logger.logObject.getter(v45);
      v56 = static os_log_type_t.default.getter(v54, v55);
      if (os_log_type_enabled(v54, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v56, "No phone hash?", v57, 2u);
        swift_slowDealloc(v57, -1, -1);
      }

    }
    v58 = (uint64_t)v102;
    Date.init()(v45);
    v59 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 0, 1, v59);
    swift_beginAccess(v9, &v107, 33, 0);
    sub_100012FE0(v58, v9 + v1[17]);
    swift_endAccess(&v107);
    v60 = swift_getObjectType(v42);
    v61 = (uint64_t *)(v9 + v1[14]);
    v62 = *v61;
    v63 = v61[1];
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 16);
    swift_bridgeObjectRetain(v63);
    v64(v62, v63, v60, v44);
    v65 = (uint64_t *)(v9 + v1[12]);
    v66 = *v65;
    v67 = v65[1];
    v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 40);
    swift_bridgeObjectRetain(v67);
    v68(v66, v67, v60, v44);
    v69 = (uint64_t *)(v9 + v1[13]);
    v70 = *v69;
    v71 = v69[1];
    v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 64);
    swift_bridgeObjectRetain(v71);
    v72(v70, v71, v60, v44);
    v73 = *(void (**)(NSObject *, uint64_t, uint64_t))(v44 + 112);
    v74 = v104;
    v75 = v104;
    v73(v74, v60, v44);
    v76 = swift_allocObject(&unk_100177BB0, 24, 7);
    swift_weakInit(v76 + 16, v30);
    v77 = *(void (**)(double (*)(int, uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v44 + 136);
    v78 = swift_retain(v76);
    v77(sub_1000131F0, v76, v60, v44, v78);
    swift_release(v76);
    v79 = swift_allocObject(&unk_100177BD8, 32, 7);
    *(_QWORD *)(v79 + 24) = v44;
    swift_unknownObjectWeakInit(v79 + 16, v42);
    v80 = *(void (**)(uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v44 + 160);
    v81 = swift_retain(v79);
    v80(sub_10001321C, v79, v60, v44, v81);
    swift_release(v79);
    v82 = v103;
    sub_10000D7D8(v9, v103);
    LOBYTE(v74) = sub_10000AA30();
    v83 = sub_10000D81C(v82);
    if ((v74 & 1) != 0)
    {
      if (!*(_QWORD *)(v9 + v1[15] + 8))
      {
        v84 = Logger.logObject.getter(v83);
        v86 = static os_log_type_t.default.getter(v84, v85);
        if (os_log_type_enabled(v84, v86))
        {
          v87 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v87 = 0;
          _os_log_impl((void *)&_mh_execute_header, v84, v86, "No PSK for hotspot?", v87, 2u);
          swift_slowDealloc(v87, -1, -1);
        }

      }
      v88 = (uint64_t *)(v9 + v1[15]);
      v89 = *v88;
      v90 = v88[1];
      v91 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 88);
      swift_bridgeObjectRetain(v90);
      v91(v89, v90, v60, v44);
    }
    (*(void (**)(uint64_t, uint64_t))(v44 + 176))(v60, v44);

    v92 = *v34;
    *v34 = v42;
    v34[1] = v44;
    swift_unknownObjectRelease(v92);
  }
  else
  {
    v93 = Logger.logObject.getter(v33);
    v94 = static os_log_type_t.error.getter(v93);
    if (os_log_type_enabled(v93, v94))
    {
      v95 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v95 = 0;
      _os_log_impl((void *)&_mh_execute_header, v93, v94, "Failed to create a password sharing session - aborting", v95, 2u);
      swift_slowDealloc(v95, -1, -1);
    }

    *(_DWORD *)(v30 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_shareErrorCode) = -6762;
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSOSStatusErrorDomain);
    v97 = v96;
    v98 = objc_allocWithZone((Class)NSError);
    v99 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v97);
    v100 = objc_msgSend(v98, "initWithDomain:code:userInfo:", v99, -6762, 0);

    sub_1000121B0(0, v100);
  }
}

double sub_100011D20(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  _BYTE v9[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    sub_100011E14(a1, a2);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_100011D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _BYTE v9[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 192))(0xD000000000000020, 0x80000001001367C0, ObjectType, v7);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

void sub_100011E14(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  const char *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[5];
  __int128 v34;
  __int128 v35;

  v3 = v2;
  v6 = sub_100013028(a1);
  v8 = String.init(cString:)(v6);
  v9 = v7;
  if (a2)
  {
    v10 = Dictionary.description.getter(a2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    v11 = v7;
  }
  else
  {
    v11 = 0xE300000000000000;
    v10 = 7104878;
  }
  if (qword_1001A2E88 != -1)
    swift_once(&qword_1001A2E88, sub_10000F1F0);
  v12 = type metadata accessor for Logger(0, v7);
  sub_10000E8E8(v12, (uint64_t)qword_1001A3680);
  swift_bridgeObjectRetain(v9);
  v13 = swift_bridgeObjectRetain(v11);
  v14 = Logger.logObject.getter(v13);
  v16 = static os_log_type_t.default.getter(v14, v15);
  if (os_log_type_enabled(v14, v16))
  {
    v31 = v10;
    v17 = swift_slowAlloc(22, -1);
    v32 = a2;
    v33[0] = swift_slowAlloc(64, -1);
    v18 = v33[0];
    *(_DWORD *)v17 = 136315394;
    swift_bridgeObjectRetain(v9);
    *(_QWORD *)&v34 = sub_10001EFA4(v8, v9, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 8, v17 + 4, v17 + 12);
    swift_bridgeObjectRelease_n(v9, 3);
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain(v11);
    *(_QWORD *)&v34 = sub_10001EFA4(v31, v11, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 8, v17 + 14, v17 + 22);
    swift_bridgeObjectRelease_n(v11, 3);
    _os_log_impl((void *)&_mh_execute_header, v14, v16, "Got password sharing progress event: %s with info: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    v19 = v18;
    a2 = v32;
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    if (a1 != 20)
      goto LABEL_8;
LABEL_11:
    if (a2)
    {
      *(_QWORD *)&v34 = 28517;
      *((_QWORD *)&v34 + 1) = 0xE200000000000000;
      AnyHashable.init<A>(_:)(v33, &v34, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(a2 + 16) && (v22 = sub_100005CF4((uint64_t)v33), (v23 & 1) != 0))
      {
        sub_10000D894(*(_QWORD *)(a2 + 56) + 32 * v22, (uint64_t)&v34);
      }
      else
      {
        v34 = 0u;
        v35 = 0u;
      }
      sub_100006B34((uint64_t)v33);
      if (*((_QWORD *)&v35 + 1))
      {
        v24 = sub_100013194(0, (unint64_t *)&qword_1001A3908, NSError_ptr);
        if (swift_dynamicCast(v33, &v34, (char *)&type metadata for Any + 8, v24, 6))
        {
          v26 = 0;
          v27 = (void *)v33[0];
          v28 = 4;
LABEL_22:
          v29 = *(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_shareState);
          *(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_shareState) = v28;
          sub_10000F280(v29, v25);
          v30 = v27;
          sub_1000121B0(v26, v27);

          return;
        }
LABEL_21:
        v27 = 0;
        v26 = 1;
        v28 = 3;
        goto LABEL_22;
      }
    }
    else
    {
      v34 = 0u;
      v35 = 0u;
    }
    sub_10000D858((uint64_t)&v34, &qword_1001A4340);
    goto LABEL_21;
  }

  swift_bridgeObjectRelease_n(v11, 2);
  swift_bridgeObjectRelease_n(v9, 2);
  if (a1 == 20)
    goto LABEL_11;
LABEL_8:
  if (a1 == 82)
  {
    v21 = *(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_shareState);
    *(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_shareState) = 2;
    sub_10000F280(v21, v20);
  }
}

void sub_1000121B0(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  NSString v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56[3];

  v3 = v2;
  v6 = sub_100006A6C(&qword_1001A6F70);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v56[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()(v7);
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v11 = v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model;
  swift_beginAccess(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model, v56, 33, 0);
  v12 = type metadata accessor for PasswordSharingModel(0);
  sub_100012FE0((uint64_t)v9, v11 + *(int *)(v12 + 72));
  swift_endAccess(v56);
  if ((a1 & 1) != 0)
  {
    if (qword_1001A2E88 != -1)
      swift_once(&qword_1001A2E88, sub_10000F1F0);
    v14 = type metadata accessor for Logger(0, v13);
    v15 = sub_10000E8E8(v14, (uint64_t)qword_1001A3680);
    v16 = Logger.logObject.getter(v15);
    v18 = static os_log_type_t.default.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v18, "Successfully shared password", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_delegate);
    if (Strong)
    {
      v21 = Strong;
      sub_100069318();
      v22 = swift_unknownObjectWeakLoadStrong(v21 + 16);
      if (v22)
      {
        v23 = v22;
        v24 = sub_100064288();
        if (v24)
        {
          v25 = (void *)v24;
          v26 = String._bridgeToObjectiveC()();
          objc_msgSend(v25, "setIdleTimerDisabled:forReason:", 0, v26);
          swift_unknownObjectRelease(v21);
          swift_unknownObjectRelease(v23);

          swift_unknownObjectRelease(v25);
        }
        else
        {
          swift_unknownObjectRelease(v21);
          swift_unknownObjectRelease(v23);
        }
      }
      else
      {
        swift_unknownObjectRelease(v21);
      }
    }
  }
  else
  {
    if (a2)
    {
      v27 = a2;
    }
    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(NSOSStatusErrorDomain);
      v29 = v28;
      v30 = objc_allocWithZone((Class)NSError);
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v29);
      v27 = objc_msgSend(v30, "initWithDomain:code:userInfo:", v31, -6700, 0);

    }
    swift_errorRetain(a2);
    if (qword_1001A2E88 != -1)
      swift_once(&qword_1001A2E88, sub_10000F1F0);
    v33 = type metadata accessor for Logger(0, v32);
    sub_10000E8E8(v33, (uint64_t)qword_1001A3680);
    swift_errorRetain(a2);
    v34 = swift_errorRetain(a2);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v55 = (uint64_t)a2;
      v56[0] = v38;
      *(_DWORD *)v37 = 136315138;
      swift_errorRetain(a2);
      v39 = sub_100006A6C(&qword_1001A3900);
      v40 = String.init<A>(reflecting:)(&v55, v39);
      v42 = v41;
      v55 = sub_10001EFA4(v40, v41, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v37 + 4, v37 + 12);
      swift_bridgeObjectRelease(v42);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to share password with error: %s", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v43 = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_delegate);
    if (v43)
    {
      v44 = v43;
      sub_100069530();
      v45 = swift_unknownObjectWeakLoadStrong(v44 + 16);
      if (v45)
      {
        v46 = v45;
        v47 = sub_100064288();
        if (v47)
        {
          v48 = (void *)v47;
          v49 = String._bridgeToObjectiveC()();
          objc_msgSend(v48, "setIdleTimerDisabled:forReason:", 0, v49);
          swift_unknownObjectRelease(v44);
          swift_unknownObjectRelease(v46);

          v50 = (uint64_t)v48;
        }
        else
        {
          swift_unknownObjectRelease(v44);
          v50 = v46;
        }
      }
      else
      {
        v50 = v44;
      }
      swift_unknownObjectRelease(v50);
    }
    swift_errorRelease(v27);
  }
  sub_100010230();
  v51 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSharingSession);
  if (v51)
  {
    v52 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSharingSession + 8);
    ObjectType = swift_getObjectType(v51);
    v54 = *(void (**)(uint64_t, uint64_t))(v52 + 184);
    swift_unknownObjectRetain(v51);
    v54(ObjectType, v52);
    swift_unknownObjectRelease(v51);
  }
}

void sub_1000126F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  __n128 v20;
  void *v21;
  void (*v22)(char *, uint64_t);
  void *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;
  _BYTE v39[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v36 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v34 - v13;
  v15 = type metadata accessor for PasswordSharingModel(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model;
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model, v39, 0, 0);
  sub_10000D7D8(v18, (uint64_t)v17);
  v19 = sub_10000AD50();
  sub_10000D81C((uint64_t)v17);
  if (((1 << v19) & 0xD6) != 0)
  {
    sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
    v21 = (void *)static OS_dispatch_queue.main.getter(v20);
    static DispatchTime.now()();
    + infix(_:_:)(v12, 1.0);
    v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v12, v8);
    aBlock[4] = sub_100012F70;
    v38 = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001BB50;
    aBlock[3] = &unk_100177B78;
    v23 = _Block_copy(aBlock);
    v24 = v38;
    swift_retain(v1);
    v25 = swift_release(v24);
    static DispatchQoS.unspecified.getter(v25);
    aBlock[0] = _swiftEmptyArrayStorage;
    v26 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v27 = sub_100006A6C((uint64_t *)&unk_1001A4330);
    v28 = sub_100012F94();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v27, v28, v2, v26);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v7, v4, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v35);
    v22(v14, v8);
  }
  else if (((1 << v19) & 0x28) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSOSStatusErrorDomain);
    v30 = v29;
    v31 = objc_allocWithZone((Class)NSError);
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v33 = objc_msgSend(v31, "initWithDomain:code:userInfo:", v32, -6700, 0);

    sub_1000121B0(0, v33);
  }
}

uint64_t sub_100012A74()
{
  uint64_t v0;
  uint64_t v1;

  sub_10000D81C(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model);
  sub_100013338(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_delegate, v1);
  sub_100012F60(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSessionGenerator), *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSessionGenerator + 8));
  sub_100012F60(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserverGenerator), *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserverGenerator + 8));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_requesterStateObserver));
  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_passwordSharingSession));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100012AFC()
{
  return type metadata accessor for PasswordSharingInteractor(0);
}

uint64_t type metadata accessor for PasswordSharingInteractor(uint64_t a1)
{
  uint64_t result;

  result = qword_1001A36E8;
  if (!qword_1001A36E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PasswordSharingInteractor);
  return result;
}

uint64_t sub_100012B40(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  result = type metadata accessor for PasswordSharingModel(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100131E00;
    v4[2] = &unk_100131E18;
    v4[3] = &unk_100131E18;
    v4[4] = &unk_100131E18;
    v4[5] = &unk_100131E18;
    v4[6] = &unk_100131E30;
    v4[7] = &unk_100131E48;
    v4[8] = (char *)&value witness table for Builtin.Int32 + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SDRunState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PasswordSharingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100012CC4 + 4 * byte_100131D5C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100012CF8 + 4 * byte_100131D57[v4]))();
}

uint64_t sub_100012CF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100012D00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100012D08);
  return result;
}

uint64_t sub_100012D14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100012D1CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100012D20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100012D28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PasswordSharingState()
{
  return &type metadata for PasswordSharingState;
}

void *sub_100012D44(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model, a1, 33, 0);
  return &j__swift_endAccess;
}

Swift::Int sub_100012D8C()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100012DD0()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100012DF8(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

unint64_t sub_100012E38@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100012F50(*a1);
  *a2 = result;
  return result;
}

void sub_100012E60(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_100012E6C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100012E9C + 4 * byte_100131D61[*v0]))(0x64696C61766E49, 0xE700000000000000);
}

uint64_t sub_100012E9C()
{
  return 0x6572676F72506E49;
}

uint64_t sub_100012EB8()
{
  return 0x64726F7773736150;
}

uint64_t sub_100012ED8()
{
  return 0x6564656563637553;
}

uint64_t sub_100012EF4()
{
  return 0x64656C696146;
}

unint64_t sub_100012F0C()
{
  unint64_t result;

  result = qword_1001A38E8;
  if (!qword_1001A38E8)
  {
    result = swift_getWitnessTable(&unk_100131F18, &type metadata for PasswordSharingState);
    atomic_store(result, (unint64_t *)&qword_1001A38E8);
  }
  return result;
}

unint64_t sub_100012F50(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

uint64_t sub_100012F60(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_100012F70()
{
  return sub_1000121B0(1, 0);
}

uint64_t sub_100012F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100012F8C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100012F94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A38F8;
  if (!qword_1001A38F8)
  {
    v1 = sub_100008048((uint64_t *)&unk_1001A4330);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1001A38F8);
  }
  return result;
}

uint64_t sub_100012FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A6F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

const char *sub_100013028(int a1)
{
  const char *result;

  if (a1 > 49)
  {
    if (a1 > 79)
    {
      switch(a1)
      {
        case 'P':
          result = "PasswordSending";
          break;
        case 'Q':
        case 'U':
          return "?";
        case 'R':
          result = "PasswordSent";
          break;
        case 'S':
          result = "PasswordReceived";
          break;
        case 'T':
          result = "PasswordAccepted";
          break;
        case 'V':
          result = "PasswordDeclined";
          break;
        default:
          if (a1 != 100)
            return "?";
          result = "Finished";
          break;
      }
      return result;
    }
    switch(a1)
    {
      case '2':
        return "PreAuthFinish";
      case '<':
        return "SecurityStart";
      case 'F':
        return "SecurityFinished";
    }
    return "?";
  }
  if (a1 <= 29)
  {
    switch(a1)
    {
      case 0:
        return "Invalid";
      case 10:
        return "Start";
      case 20:
        return "Final";
    }
    return "?";
  }
  switch(a1)
  {
    case 30:
      result = "Error";
      break;
    case 31:
      result = "SessionStarted";
      break;
    case 32:
      result = "SessionEnded";
      break;
    case 33:
      result = "SessionSecured";
      break;
    case 40:
      result = "PreAuthStart";
      break;
    default:
      return "?";
  }
  return result;
}

uint64_t sub_100013194(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1000131CC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1000131F0(int a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100011D20(a1, a2, v2);
}

uint64_t sub_1000131F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 32, 7);
}

uint64_t sub_10001321C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100011D90(a1, a2, v2);
}

uint64_t sub_100013224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1000132B4(uint64_t a1, unint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_100010A74(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), v4 + v10, *(_QWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

double sub_100013330(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_10000FB04(a1, a2, v2);
}

uint64_t sub_100013338(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakDestroy(a1, a2);
  return a1;
}

uint64_t sub_100013364(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A3910);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A3910);
  if (qword_1001A2EE8 != -1)
    swift_once(&qword_1001A2EE8, sub_100018C94);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD468);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_1000134E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000138C4(a1, a2, a3, &OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel);
}

id sub_100013518(uint64_t a1)
{
  return sub_100014100(a1, type metadata accessor for D2DSetupBaseViewController);
}

uint64_t type metadata accessor for D2DSetupBaseViewController()
{
  return objc_opt_self(_TtC18SharingViewService26D2DSetupBaseViewController);
}

uint64_t sub_100013558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000141DC(a1, a2, a3, a4, &OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_presenter);
}

uint64_t sub_100013564()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x90))();
}

void sub_100013580(uint64_t a1, uint64_t (*a2)(void), _QWORD *a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  NSString v16;
  uint64_t v17;
  NSString v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  NSString v23;
  NSString v24;
  _QWORD v25[24];
  _QWORD v26[24];
  _QWORD v27[24];
  _BYTE v28[120];
  uint64_t v29;
  objc_super v30;
  _BYTE v31[192];
  _BYTE v32[200];

  v30.receiver = v3;
  v30.super_class = (Class)a2();
  objc_msgSendSuper2(&v30, "viewDidLoad");
  v5 = (uint64_t)v3 + *a3;
  sub_1000142E8(v5, (uint64_t)v31);
  sub_1000142E8((uint64_t)v31, (uint64_t)v28);
  sub_1000142E8((uint64_t)v31, (uint64_t)v32);
  if (sub_1000145F8((uint64_t)v32) != 1)
  {
    v6 = v29;
    sub_1000142E8((uint64_t)v28, (uint64_t)v26);
    sub_1000142E8((uint64_t)v31, (uint64_t)v27);
    sub_100014330((uint64_t)v27);
    sub_100014610(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    objc_msgSend(v3, "setDismissalType:", v6);
  }
  sub_1000142E8(v5, (uint64_t)v27);
  sub_1000142E8((uint64_t)v27, (uint64_t)v26);
  sub_1000142E8((uint64_t)v27, (uint64_t)v28);
  if (sub_1000145F8((uint64_t)v28) != 1)
  {
    v7 = v26[16];
    v8 = v26[17];
    v9 = v26[18];
    v10 = v26[19];
    v11 = v26[20];
    v12 = v26[21];
    v13 = v26[22];
    v14 = v26[23];
    sub_1000142E8((uint64_t)v26, (uint64_t)v25);
    sub_10001440C(v7, v8, v9, v10, v11, v12, v13, v14);
    sub_100014610(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
    sub_100014610(v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    if (v8)
    {
      v24 = String._bridgeToObjectiveC()();
      v23 = String._bridgeToObjectiveC()();
      v15 = String._bridgeToObjectiveC()();
      v16 = String._bridgeToObjectiveC()();
      v17 = v7;
      v18 = v16;
      sub_100014544(v17, v8, v9, v10, v11, v12, v13, v14);
      v19 = v3;
      v20 = v3;
      v21 = v18;
      v22 = objc_msgSend(v19, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v24, v23, v15, v18);

      objc_msgSend(v20, "setDismissButtonAction:", v22);
    }
  }
}

id sub_1000138B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000138C4(a1, a2, a3, &OBJC_IVAR____TtC18SharingViewService34D2DSetupBasePasscodeViewController_viewModel);
}

id sub_1000138C4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void *v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  NSString v14;
  _OWORD v16[12];
  _QWORD v17[24];

  v7 = *(_OWORD *)(a3 + 144);
  v16[8] = *(_OWORD *)(a3 + 128);
  v16[9] = v7;
  v8 = *(_OWORD *)(a3 + 176);
  v16[10] = *(_OWORD *)(a3 + 160);
  v16[11] = v8;
  v9 = *(_OWORD *)(a3 + 80);
  v16[4] = *(_OWORD *)(a3 + 64);
  v16[5] = v9;
  v10 = *(_OWORD *)(a3 + 112);
  v16[6] = *(_OWORD *)(a3 + 96);
  v16[7] = v10;
  v11 = *(_OWORD *)(a3 + 16);
  v16[0] = *(_OWORD *)a3;
  v16[1] = v11;
  v12 = *(_OWORD *)(a3 + 48);
  v16[2] = *(_OWORD *)(a3 + 32);
  v16[3] = v12;
  nullsub_4(v16);
  v13 = (uint64_t)v4 + *a4;
  sub_1000142E8(v13, (uint64_t)v17);
  sub_1000142E8((uint64_t)v16, v13);
  sub_100014330(a3);
  sub_100014610(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setTitle:", v14);

  return objc_msgSend(v4, "setAttributedSubtitle:", *(_QWORD *)(a3 + 40));
}

id sub_1000139C0(char *a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5, uint64_t (*a6)(uint64_t))
{
  char *v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v14;
  _OWORD v15[12];

  v10 = &a1[*a4];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10, 0);
  v11 = (uint64_t)&a1[*a5];
  sub_100014594(v15);
  v12 = sub_1000142E8((uint64_t)v15, v11);
  v14.receiver = a1;
  v14.super_class = (Class)a6(v12);
  return objc_msgSendSuper2(&v14, "initWithContentView:", a3);
}

id sub_100013A4C(uint64_t a1)
{
  return sub_100014100(a1, type metadata accessor for D2DSetupBasePasscodeViewController);
}

_QWORD *sub_100013A6C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  _QWORD v7[24];

  sub_100013338(a1 + *a3, a2);
  sub_1000142E8(a1 + *a4, (uint64_t)v7);
  return sub_100014610(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
}

uint64_t type metadata accessor for D2DSetupBasePasscodeViewController()
{
  return objc_opt_self(_TtC18SharingViewService34D2DSetupBasePasscodeViewController);
}

uint64_t sub_100013AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000141DC(a1, a2, a3, a4, &OBJC_IVAR____TtC18SharingViewService34D2DSetupBasePasscodeViewController_presenter);
}

id sub_100013AEC(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  objc_class *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD v22[5];
  uint64_t v23;
  objc_super v24;
  _OWORD v25[12];

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v2[OBJC_IVAR____TtC18SharingViewService33D2DSetupBaseScannerViewController_presenter];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  v8 = (uint64_t)&v2[OBJC_IVAR____TtC18SharingViewService33D2DSetupBaseScannerViewController_viewModel];
  sub_100014594(v25);
  sub_1000142E8((uint64_t)v25, v8);
  v9 = objc_msgSend(objc_allocWithZone((Class)VPScannerProxCardViewController), "init");
  v10 = qword_1001A2E90;
  v11 = v9;
  if (v10 != -1)
    swift_once(&qword_1001A2E90, sub_100013364);
  v12 = sub_10000E8E8(v3, (uint64_t)qword_1001A3910);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v13(v6, v12, v3);
  v13(&v2[OBJC_IVAR____TtC18SharingViewService21ScannerViewController_log], (uint64_t)v6, v3);
  v14 = &v2[OBJC_IVAR____TtC18SharingViewService21ScannerViewController_scannerEngineViewController];
  *(_QWORD *)v14 = v11;
  *((_QWORD *)v14 + 1) = &off_10017D2E8;
  v15 = (objc_class *)type metadata accessor for ScannerViewController(0);
  v24.receiver = v2;
  v24.super_class = v15;
  v16 = objc_msgSendSuper2(&v24, "initWithScannerEngine:", v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v17 = swift_allocObject(&unk_100177D30, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v16);
  v22[4] = sub_1000145D8;
  v23 = v17;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1107296256;
  v22[2] = sub_100013D94;
  v22[3] = &unk_100177D48;
  v18 = _Block_copy(v22);
  v19 = v23;
  v20 = v16;
  objc_msgSend(v11, "setScannedCodeHandler:", v18, swift_release(v19).n128_f64[0]);

  _Block_release(v18);
  return v20;
}

void sub_100013D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *Strong) + 0x68))(a1, a2);

  }
}

uint64_t sub_100013D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v6 = v5;
  swift_retain(v2);
  v3(v4, v6);
  swift_release(v2);
  return swift_bridgeObjectRelease(v6);
}

void sub_100013E8C(char a1, uint64_t a2, uint64_t (*a3)(uint64_t), SEL *a4, const char *a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject **v15;
  NSObject *v16;
  uint64_t v17;
  NSObject *v18;
  objc_super v19;

  v19.receiver = v5;
  v19.super_class = (Class)a3(a2);
  objc_msgSendSuper2(&v19, *a4, a1 & 1);
  if (qword_1001A2E90 != -1)
    swift_once(&qword_1001A2E90, sub_100013364);
  v10 = type metadata accessor for Logger(0, v9);
  sub_10000E8E8(v10, (uint64_t)qword_1001A3910);
  v11 = v5;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    v18 = v11;
    v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v14 + 4, v14 + 12);
    *v15 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, a5, v14, 0xCu);
    v17 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v15, 1, v17);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {

    v12 = v11;
  }

}

_QWORD *sub_1000140A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[24];

  sub_100013338(v2 + OBJC_IVAR____TtC18SharingViewService33D2DSetupBaseScannerViewController_presenter, a2);
  sub_1000142E8(v2 + OBJC_IVAR____TtC18SharingViewService33D2DSetupBaseScannerViewController_viewModel, (uint64_t)v4);
  return sub_100014610(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
}

id sub_1000140F0()
{
  return sub_100014100(0, (uint64_t (*)(void))type metadata accessor for D2DSetupBaseScannerViewController);
}

id sub_100014100(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_100014144()
{
  return type metadata accessor for D2DSetupBaseScannerViewController(0);
}

uint64_t type metadata accessor for D2DSetupBaseScannerViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1001A39C0;
  if (!qword_1001A39C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for D2DSetupBaseScannerViewController);
  return result;
}

uint64_t sub_100014188(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_100131FC8;
  v2[1] = &unk_100131FE0;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 128);
}

uint64_t sub_1000141D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000141DC(a1, a2, a3, a4, &OBJC_IVAR____TtC18SharingViewService33D2DSetupBaseScannerViewController_presenter);
}

uint64_t sub_1000141DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + *a5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

id sub_100014210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSString v12;
  _OWORD v14[12];
  _QWORD v15[24];

  v5 = *(_OWORD *)(a3 + 144);
  v14[8] = *(_OWORD *)(a3 + 128);
  v14[9] = v5;
  v6 = *(_OWORD *)(a3 + 176);
  v14[10] = *(_OWORD *)(a3 + 160);
  v14[11] = v6;
  v7 = *(_OWORD *)(a3 + 80);
  v14[4] = *(_OWORD *)(a3 + 64);
  v14[5] = v7;
  v8 = *(_OWORD *)(a3 + 112);
  v14[6] = *(_OWORD *)(a3 + 96);
  v14[7] = v8;
  v9 = *(_OWORD *)(a3 + 16);
  v14[0] = *(_OWORD *)a3;
  v14[1] = v9;
  v10 = *(_OWORD *)(a3 + 48);
  v14[2] = *(_OWORD *)(a3 + 32);
  v14[3] = v10;
  nullsub_4(v14);
  v11 = (uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService33D2DSetupBaseScannerViewController_viewModel;
  sub_1000142E8((uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService33D2DSetupBaseScannerViewController_viewModel, (uint64_t)v15);
  sub_1000142E8((uint64_t)v14, v11);
  sub_100014330(a3);
  sub_100014610(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setTitle:", v12);

  return objc_msgSend(v3, "setAttributedSubtitle:", *(_QWORD *)(a3 + 40));
}

uint64_t sub_1000142E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A39D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100014330(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 96);
  v21 = *(_QWORD *)(a1 + 136);
  v22 = *(_QWORD *)(a1 + 128);
  v10 = *(_QWORD *)(a1 + 160);
  v19 = *(_QWORD *)(a1 + 152);
  v20 = *(_QWORD *)(a1 + 144);
  v17 = *(_QWORD *)(a1 + 176);
  v18 = *(_QWORD *)(a1 + 168);
  v16 = *(_QWORD *)(a1 + 184);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 112));
  v11 = v2;
  swift_bridgeObjectRetain(v3);
  v12 = v4;
  v13 = v5;
  v14 = v6;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  sub_10001440C(v22, v21, v20, v19, v10, v18, v17, v16);
  return a1;
}

uint64_t sub_10001440C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    return swift_bridgeObjectRetain(a8);
  }
  return result;
}

uint64_t sub_10001445C(uint64_t result, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v28;

  if (a3)
  {
    v28 = (void *)result;
    swift_bridgeObjectRelease(a3);

    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a10);
    swift_bridgeObjectRelease(a13);
    swift_bridgeObjectRelease(a15);
    return sub_100014544(a17, a18, a19, a20, a21, a22, a23, a24);
  }
  return result;
}

uint64_t sub_100014544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    return swift_bridgeObjectRelease(a8);
  }
  return result;
}

double sub_100014594(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1000145B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1000145D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100013D10(a1, a2, v2);
}

uint64_t sub_1000145E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000145F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000145F8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_100014610(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_10001467C(uint64_t result, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;

  if (a3)
  {
    v29 = (void *)result;
    swift_bridgeObjectRetain(a15);
    v30 = v29;
    swift_bridgeObjectRetain(a3);
    v31 = a4;
    v32 = a5;
    v33 = a6;
    swift_bridgeObjectRetain(a8);
    swift_bridgeObjectRetain(a10);
    swift_bridgeObjectRetain(a13);
    return sub_10001440C(a17, a18, a19, a20, a21, a22, a23, a24);
  }
  return result;
}

void sub_100014768(char a1)
{
  char *v1;
  char *v2;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;

  v2 = v1;
  v21.receiver = v2;
  v21.super_class = (Class)type metadata accessor for TestMainController();
  objc_msgSendSuper2(&v21, "viewWillAppear:", a1 & 1);
  v4 = objc_msgSend(objc_allocWithZone((Class)SVSCommonNavController), "init");
  v5 = OBJC_IVAR____TtC18SharingViewService18TestMainController_vcNav;
  v6 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService18TestMainController_vcNav];
  *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService18TestMainController_vcNav] = v4;

  v7 = *(void **)&v2[v5];
  if (!v7)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v7, "setNavigationBarHidden:", 1);
  v8 = *(void **)&v2[v5];
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v8, "setModalPresentationStyle:", 4);
  v9 = *(void **)&v2[v5];
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(v9, "setTransitioningDelegate:", *(_QWORD *)&v2[v5]);
  v10 = objc_allocWithZone((Class)sub_100006A6C(&qword_1001A3A08));
  v11 = UIHostingController.init(rootView:)(v10);
  v12 = *(void **)&v2[v5];
  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v13 = (void *)v11;
  v14 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v15 = swift_allocObject(v14, 40, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100132030;
  *(_QWORD *)(v15 + 32) = v13;
  v20 = v15;
  specialized Array._endMutation()(v15);
  sub_100014AC0();
  v16 = v13;
  v17 = v12;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v17, "setViewControllers:", isa);

  v19 = *(_QWORD *)&v2[v5];
  if (v19)
  {
    objc_msgSend(v2, "presentViewController:animated:completion:", v19, 1, 0);

    return;
  }
LABEL_11:
  __break(1u);
}

id sub_100014A60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TestMainController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TestMainController()
{
  return objc_opt_self(_TtC18SharingViewService18TestMainController);
}

unint64_t sub_100014AC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A3A10;
  if (!qword_1001A3A10)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A3A10);
  }
  return result;
}

ValueMetadata *type metadata accessor for SVSTestContentView()
{
  return &type metadata for SVSTestContentView;
}

uint64_t sub_100014B0C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10015D578, 1);
}

uint64_t sub_100014B24()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100014B3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = LocalizedStringKey.init(stringLiteral:)(0x6E6F432074736554, 0xEF72656C6C6F7274);
  result = Text.init(_:tableName:bundle:comment:)(v2);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

void *sub_100014BB8()
{
  return &protocol witness table for Text;
}

uint64_t sub_100014BC8(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + 96);
}

uint64_t sub_100014BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A3A18);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A3A18);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100014C8C()
{
  sub_1000172CC();
}

uint64_t sub_100014CB8(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

void sub_100014CD0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a4;
  sub_100017324();
}

void sub_100014D1C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_100017350();
}

id sub_100014D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for B389CardContainerViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t type metadata accessor for B389CardContainerViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100017500(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for B389CardContainerViewController);
}

void sub_100014DB0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  void *v20;
  id v21;
  NSString v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t inited;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  NSString v32;
  Class isa;
  id v34;
  id v35;
  NSString v36;
  id v37;
  uint64_t v38;
  NSString *v39;
  id v40;
  unint64_t v41;
  id v42;
  NSString v43;
  Class v44;
  id v45;
  NSString *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char v54[72];
  char v55[72];

  if (qword_1001A2E98 != -1)
    swift_once(&qword_1001A2E98, sub_100014BFC);
  v3 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v3, (uint64_t)qword_1001A3A18);
  v4 = v2;
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  v50 = v4;
  if (os_log_type_enabled(v5, v7))
  {
    v8 = swift_slowAlloc(32, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    v48 = swift_slowAlloc(64, -1);
    v53 = v48;
    *(_DWORD *)v8 = 136315650;
    v10 = (uint64_t *)&v4[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo];
    v11 = *(_QWORD *)&v4[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo + 8];
    if (v11 > 1)
    {
      v12 = *v10;
      swift_bridgeObjectRetain(*(_QWORD *)&v4[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo
                                            + 8]);
    }
    else
    {
      v51 = 0;
      v52 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(0xE000000000000000);
      v11 = 0x8000000100136820;
      v12 = 0xD000000000000015;
    }
    v51 = sub_10001EFA4(v12, v11, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v8 + 12) = 2112;
    if (v10[1] == 1 || (v13 = (void *)v10[2]) == 0)
    {
      v51 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v8 + 14, v8 + 22);
      v13 = 0;
    }
    else
    {
      v51 = v10[2];
      v14 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v8 + 14, v8 + 22);
    }
    *v9 = v13;
    v4 = v50;

    *(_WORD *)(v8 + 22) = 2080;
    if (v10[1] == 1 || (v15 = v10[4]) == 0)
    {
      v51 = 0;
      v52 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v52);
      v15 = 0x8000000100136820;
      v16 = 0xD000000000000015;
    }
    else
    {
      v16 = v10[3];
      swift_bridgeObjectRetain(v10[4]);
    }
    v51 = sub_10001EFA4(v16, v15, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v8 + 24, v8 + 32);

    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "Set appleIDInfo. username: %s, profilePic: %@, phoneNumber: %s", (uint8_t *)v8, 0x20u);
    v17 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v9, 1, v17);
    swift_slowDealloc(v9, -1, -1);
    swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v18 = *(void **)&v4[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_imageView];
  v19 = &v4[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo];
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo + 8] == 1
    || (v20 = (void *)*((_QWORD *)v19 + 2)) == 0)
  {
    v22 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v22);

  }
  else
  {
    v21 = v20;
  }
  objc_msgSend(v18, "setImage:", v21);

  v23 = *((_QWORD *)v19 + 1);
  if (v23 == 1)
  {
    v24 = 0;
    v23 = 0;
  }
  else
  {
    v24 = *((_QWORD *)v19 + 4);
    swift_bridgeObjectRetain(v24);
    if (v23)
    {
      swift_bridgeObjectRetain(v23);
      v25 = v23;
      goto LABEL_26;
    }
  }
  v25 = 0xE000000000000000;
LABEL_26:
  v49 = sub_100006A6C(&qword_1001A3C20);
  inited = swift_initStackObject(v49, v55);
  *(_OWORD *)(inited + 16) = xmmword_100131C40;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v27 = (void *)objc_opt_self(UIColor);
  swift_bridgeObjectRetain(v23);
  v46 = NSForegroundColorAttributeName;
  v47 = v27;
  v28 = objc_msgSend(v27, "labelColor");
  v29 = sub_100013194(0, &qword_1001A3C28, UIColor_ptr);
  *(_QWORD *)(inited + 64) = v29;
  *(_QWORD *)(inited + 40) = v28;
  v30 = sub_1000045A4(inited);
  v31 = objc_allocWithZone((Class)NSMutableAttributedString);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  type metadata accessor for Key(0);
  sub_100017240();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v30);
  v34 = objc_msgSend(v31, "initWithString:attributes:", v32, isa);

  if (!v23)
  {
    if (v24)
      goto LABEL_31;
LABEL_30:
    v24 = 0xE000000000000000;
    goto LABEL_31;
  }
  swift_bridgeObjectRelease(v23);
  if (!v24)
    goto LABEL_30;
  v35 = objc_allocWithZone((Class)NSAttributedString);
  v36 = String._bridgeToObjectiveC()();
  v37 = objc_msgSend(v35, "initWithString:", v36);

  objc_msgSend(v34, "appendAttributedString:", v37);
LABEL_31:
  v38 = swift_initStackObject(v49, v54);
  *(_OWORD *)(v38 + 16) = xmmword_100131C40;
  *(_QWORD *)(v38 + 32) = v46;
  v39 = v46;
  v40 = objc_msgSend(v47, "secondaryLabelColor");
  *(_QWORD *)(v38 + 64) = v29;
  *(_QWORD *)(v38 + 40) = v40;
  v41 = sub_1000045A4(v38);
  v42 = objc_allocWithZone((Class)NSAttributedString);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v44 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v41);
  v45 = objc_msgSend(v42, "initWithString:attributes:", v43, v44);

  objc_msgSend(v34, "appendAttributedString:", v45);
  objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_idLabel], "setAttributedText:", v34);

}

char *sub_1000154E8(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char *v11;
  id v12;
  void *v13;
  char *v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  void *v30;
  id v31;
  uint64_t v32;
  char *v33;
  id v34;
  _QWORD v36[5];
  uint64_t v37;
  objc_super v38;

  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_mainController] = 0;
  v3 = &v1[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo];
  *(_OWORD *)v3 = xmmword_1001320D0;
  *((_QWORD *)v3 + 3) = 0;
  *((_QWORD *)v3 + 4) = 0;
  *((_QWORD *)v3 + 2) = 0;
  v4 = OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_imageView;
  v5 = objc_allocWithZone((Class)UIImageView);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_idLabel;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_infoLabel;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

  v38.receiver = v6;
  v38.super_class = (Class)type metadata accessor for B389LinkingViewController();
  v9 = (char *)objc_msgSendSuper2(&v38, "initWithContentView:", 0);
  v10 = *(void **)&v9[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_mainController];
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_mainController] = a1;
  v11 = v9;
  v12 = a1;

  v13 = (void *)objc_opt_self(NSBundle);
  v14 = v11;
  v15 = objc_msgSend(v13, "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = String._bridgeToObjectiveC()();
  v18 = sub_100117218(v15, v16, v17);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;

  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v14, "setTitle:", v21);

  objc_msgSend(v14, "setDismissalType:", 1);
  v22 = objc_msgSend(v13, "mainBundle");
  v23 = String._bridgeToObjectiveC()();
  v24 = String._bridgeToObjectiveC()();
  v25 = sub_100117218(v22, v23, v24);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v27 = v26;

  v28 = swift_allocObject(&unk_100177ED0, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16, v12);
  swift_retain(v28);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27);
  v36[4] = sub_1000172AC;
  v37 = v28;
  v36[0] = _NSConcreteStackBlock;
  v36[1] = 1107296256;
  v36[2] = sub_10001B5D0;
  v36[3] = &unk_100177EE8;
  v30 = _Block_copy(v36);
  v31 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v29, 0, v30);

  _Block_release(v30);
  v32 = v37;
  swift_release(v28);
  swift_release(v32);
  v33 = v14;
  v34 = objc_msgSend(v33, "addAction:", v31);

  return v33;
}

void sub_1000158A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_didAgreeToLinking] = 1;

  }
  swift_beginAccess(v2, &v6, 0, 0);
  v4 = swift_unknownObjectWeakLoadStrong(v2);
  if (v4)
  {
    v5 = (void *)v4;
    sub_100030494();

  }
}

void sub_100015928()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  Class isa;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  id v51;
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  NSString v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  NSString v62;
  uint64_t v63;
  NSString v64;
  void *v65;
  id v66;
  uint64_t v67;
  id v68;
  void *v69;
  id v70;
  _QWORD aBlock[5];
  uint64_t v72;
  id v73;
  objc_super v74;

  v1 = v0;
  v74.receiver = v0;
  v74.super_class = (Class)type metadata accessor for B389LinkingViewController();
  objc_msgSendSuper2(&v74, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_idLabel];
  v68 = (id)objc_opt_self(UIFont);
  v3 = objc_msgSend(v68, "systemFontOfSize:", 17.0);
  objc_msgSend(v2, "setFont:", v3);

  objc_msgSend(v2, "setNumberOfLines:", 2);
  objc_msgSend(v2, "setTextAlignment:", 1);
  v4 = objc_msgSend(v1, "contentView");
  v5 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_imageView];
  objc_msgSend(v4, "addSubview:", v5);

  v6 = objc_msgSend(v1, "contentView");
  objc_msgSend(v6, "addSubview:", v2);

  v7 = objc_msgSend(v1, "contentView");
  v8 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_infoLabel];
  objc_msgSend(v7, "addSubview:", v8);

  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v69 = v1;
  v9 = objc_msgSend(v1, "contentView");
  v10 = objc_msgSend(v9, "mainContentGuide");

  v70 = (id)objc_opt_self(NSLayoutConstraint);
  v11 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v12 = swift_allocObject(v11, 120, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1001320E0;
  v13 = objc_msgSend(v5, "widthAnchor");
  v14 = objc_msgSend(v13, "constraintEqualToConstant:", 80.0);

  *(_QWORD *)(v12 + 32) = v14;
  v15 = objc_msgSend(v5, "heightAnchor");
  v16 = objc_msgSend(v15, "constraintEqualToConstant:", 80.0);

  *(_QWORD *)(v12 + 40) = v16;
  v17 = objc_msgSend(v5, "topAnchor");
  v18 = objc_msgSend(v10, "topAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v12 + 48) = v19;
  v20 = objc_msgSend(v5, "centerXAnchor");
  v21 = objc_msgSend(v10, "centerXAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v12 + 56) = v22;
  v23 = objc_msgSend(v2, "topAnchor");
  v24 = objc_msgSend(v5, "bottomAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, 10.0);

  *(_QWORD *)(v12 + 64) = v25;
  v26 = objc_msgSend(v2, "leadingAnchor");
  v27 = objc_msgSend(v10, "leadingAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v12 + 72) = v28;
  v29 = objc_msgSend(v2, "trailingAnchor");
  v30 = objc_msgSend(v10, "trailingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v12 + 80) = v31;
  v32 = objc_msgSend(v8, "topAnchor");
  v33 = objc_msgSend(v2, "bottomAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:constant:", v33, 20.0);

  *(_QWORD *)(v12 + 88) = v34;
  v35 = objc_msgSend(v8, "leadingAnchor");
  v36 = objc_msgSend(v10, "leadingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v12 + 96) = v37;
  v38 = objc_msgSend(v8, "trailingAnchor");
  v39 = objc_msgSend(v10, "trailingAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v12 + 104) = v40;
  v41 = objc_msgSend(v8, "bottomAnchor");
  v42 = objc_msgSend(v10, "bottomAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, -10.0);

  *(_QWORD *)(v12 + 112) = v43;
  aBlock[0] = v12;
  specialized Array._endMutation()(v44);
  sub_100013194(0, (unint64_t *)&qword_1001A5810, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v70, "activateConstraints:", isa);

  objc_msgSend(v8, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v8, "setNumberOfLines:", 0);
  v46 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v8, "setTextColor:", v46);

  objc_msgSend(v8, "setTextAlignment:", 1);
  v47 = (void *)objc_opt_self(UIFontDescriptor);
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontTextStyleBody);
  v49 = v48;
  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49);
  v51 = objc_msgSend(v47, "defaultFontDescriptorWithTextStyle:", v50);

  if (v51)
  {
    v52 = objc_msgSend(v51, "fontDescriptorWithSymbolicTraits:", 0x8000);

    v73 = v52;
    v53 = sub_100006A6C((uint64_t *)&unk_1001A6CF0);
    Optional.unwrap(_:file:line:)(aBlock, sub_1000162C8, 0, "SharingViewService/B389LoadingView.swift", 40, 2, 139, v53);

    v54 = (void *)aBlock[0];
    v55 = objc_msgSend(v68, "fontWithDescriptor:size:", aBlock[0], 16.0);
    objc_msgSend(v8, "setFont:", v55);
    v56 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v57 = String._bridgeToObjectiveC()();
    v58 = String._bridgeToObjectiveC()();
    v59 = sub_100117218(v56, v57, v58);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
    v61 = v60;

    v62 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v61);
    objc_msgSend(v8, "setText:", v62);

    v63 = swift_allocObject(&unk_100177F20, 24, 7);
    swift_unknownObjectWeakInit(v63 + 16, v69);
    swift_retain(v63);
    v64 = String._bridgeToObjectiveC()();
    aBlock[4] = sub_1000174BC;
    v72 = v63;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B5D0;
    aBlock[3] = &unk_100177F38;
    v65 = _Block_copy(aBlock);
    v66 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v64, 0, v65);

    _Block_release(v65);
    v67 = v72;
    swift_release(v63);
    swift_release(v67);
    objc_msgSend(v69, "setDismissButtonAction:", v66);

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1000162C8()
{
  return 0xD000000000000016;
}

void sub_1000162E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t Strong;
  void *v14;
  uint64_t ObjectType;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  uint64_t v30[3];

  v2 = a2;
  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2 + 16;
  if (qword_1001A2E98 != -1)
    swift_once(&qword_1001A2E98, sub_100014BFC);
  v8 = sub_10000E8E8(v3, (uint64_t)qword_1001A3A18);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  v9 = swift_retain_n(v2, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v30[0] = v26;
    *(_DWORD *)v12 = 136315138;
    swift_beginAccess(v2 + 16, v29, 0, 0);
    v27 = v2 + 16;
    Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
    if (!Strong)
      goto LABEL_12;
    v14 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);

    v16 = _typeName(_:qualified:)(ObjectType, 0);
    v18 = v17;
    v28 = sub_10001EFA4(v16, v17, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v12 + 4, v12 + 12);
    swift_release_n(v2, 2, v19);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "dismissPressed in %s", v12, 0xCu);
    v2 = v26;
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v2, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v27;
  }
  else
  {

    swift_release_n(v2, 2, v20);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_beginAccess(v7, v30, 0, 0);
  v21 = swift_unknownObjectWeakLoadStrong(v7);
  if (v21)
  {
    v22 = (void *)v21;
    v23 = *(void **)(v21 + OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_mainController);
    v24 = v23;

    if (v23)
    {
      objc_msgSend(v24, "dismiss:", 5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  swift_release(v2);
  __break(1u);
}

id sub_1000165F8()
{
  return sub_100017198(type metadata accessor for B389LinkingViewController);
}

uint64_t type metadata accessor for B389LinkingViewController()
{
  return objc_opt_self(_TtC18SharingViewService25B389LinkingViewController);
}

void sub_100016698(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  SVSCardContainerView *v17;
  Class isa;
  uint64_t v19;
  void *v20;
  SVSCardContainerView *v21;
  Class v22;
  SVSCardContainerView *v23;
  void *v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  char *v43;
  char *v44;
  void *v45;
  void *v46;
  id v47;
  NSString v48;
  NSString v49;
  id v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  id v53;
  NSURL *v54;
  void *v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  char *v68;
  void *v69;
  char *v70;
  id v71;
  uint64_t v72;
  id v73;
  Class v74;
  objc_class *v75;
  uint64_t v76;
  char *v77;
  objc_super v78;

  v2 = v1;
  v4 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v4);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v76 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v77 = (char *)&v74 - v11;
  v12 = (objc_class *)type metadata accessor for B389LoadingViewController();
  v78.receiver = v2;
  v78.super_class = v12;
  objc_msgSendSuper2(&v78, "viewWillAppear:", a1 & 1);
  if (qword_1001A30A8 != -1)
    swift_once(&qword_1001A30A8, sub_1000990D8);
  v13 = sub_10009375C(v2, 0, *(double *)&qword_1001AD718);
  v15 = v14;

  v16 = objc_msgSend(v2, "containerView");
  objc_msgSend(v16, "setSwipeDismissible:", 0);

  objc_msgSend(v2, "setModalPresentationStyle:", 4);
  v17 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  isa = setupTitleLabel(inContainerView:textAlignment:)(v17, NSTextAlignmentCenter).super.super.super.isa;

  v19 = OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_titleLabel;
  v20 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_titleLabel];
  *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_titleLabel] = isa;
  v75 = isa;

  v21 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v22 = setupXButton(inContainerView:)(v21).super.super.super.super.isa;

  v74 = v22;
  -[objc_class addTarget:action:forControlEvents:](v22, "addTarget:action:forControlEvents:", v2, "dismissPressed:", 64);
  v23 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v24 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_connectingLabel];
  setupBottomLabel(inContainerView:forLabel:)(v23, (UILabel)v24);

  v25 = objc_msgSend(v2, "containerView");
  v26 = String._bridgeToObjectiveC()();
  v27 = sub_100117314(v26);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v31 = objc_msgSend(v24, "topAnchor");
  v32 = sub_10009829C(v25, v28, v30, (uint64_t)v31, 100, -8.0);

  swift_bridgeObjectRelease(v30);
  v33 = OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_spinner;
  v34 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_spinner];
  *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_spinner] = v32;

  v35 = *(_QWORD *)&v2[v33];
  if (!v35)
  {
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(*(id *)(v35 + OBJC_IVAR____TtC18SharingViewService11TextSpinner_spinner), "startAnimating");
  objc_msgSend(v2, "setModalPresentationStyle:", 4);
  v36 = *(void **)&v2[v19];
  if (!v36)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v37 = v36;
  v38 = objc_msgSend(v2, "mainController");
  if (!v38)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v39 = v38;
  sub_100030BA0();
  v41 = v40;

  if (v41)
  {
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v41);
  }
  else
  {
    v42 = 0;
  }
  v43 = v77;
  objc_msgSend(v37, "setText:", v42);

  v44 = (char *)objc_msgSend(v2, "mainController");
  if (!v44)
    goto LABEL_23;
  v45 = v44;
  v46 = *(void **)&v44[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_assetBundle];
  v47 = v46;

  if (!v46)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v48 = String._bridgeToObjectiveC()();
  v49 = String._bridgeToObjectiveC()();
  v50 = objc_msgSend(v47, "URLForResource:withExtension:", v48, v49);

  if (!v50)
  {
LABEL_25:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v6, 1, 1, v7);
    goto LABEL_26;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v50);

  v51 = v76;
  v52 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
  v52(v6, v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v6, 1, v7) == 1)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v52(v43, v6, v7);
  v53 = objc_allocWithZone((Class)AVURLAsset);
  URL._bridgeToObjectiveC()(v54);
  v56 = v55;
  v57 = objc_msgSend(v53, "initWithURL:options:", v55, 0);

  v58 = objc_msgSend(objc_allocWithZone((Class)AVPlayerItem), "initWithAsset:", v57);
  objc_allocWithZone((Class)type metadata accessor for SVSProxVideoView());
  v59 = v58;
  v60 = sub_100025294(v58, 0, 1u);
  v61 = OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_player;
  v62 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_player];
  *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_player] = v60;

  v63 = *(void **)&v2[v61];
  if (!v63)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  v64 = v63;
  v65 = objc_msgSend(v2, "containerView");
  if (qword_1001A30C0 != -1)
    swift_once(&qword_1001A30C0, sub_100099214);

  v66 = objc_msgSend(v2, "containerView");
  if (!*(_QWORD *)&v2[v61])
    goto LABEL_28;
  v67 = v66;
  objc_msgSend(v66, "sendSubviewToBack:");

  v68 = *(char **)&v2[v61];
  if (v68)
  {
    v69 = *(void **)&v68[OBJC_IVAR____TtC18SharingViewService16SVSProxVideoView_movieView];
    v70 = v68;
    v71 = objc_msgSend(v69, "layer");
    v72 = objc_opt_self(AVPlayerLayer);
    v73 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v71, v72, 0, 0, 0), "player");

    objc_msgSend(v73, "play");
    (*(void (**)(char *, uint64_t))(v51 + 8))(v43, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v43, v7);

  }
}

id sub_100016F60(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  NSString v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_titleLabel] = 0;
  v6 = OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_connectingLabel;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_spinner] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_player] = 0;

  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for B389LoadingViewController();
  v10 = objc_msgSendSuper2(&v12, "initWithNibName:bundle:", v9, a3);

  return v10;
}

id sub_1000170B0(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_titleLabel] = 0;
  v3 = OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_connectingLabel;
  v4 = objc_allocWithZone((Class)UILabel);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_spinner] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC18SharingViewService25B389LoadingViewController_player] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for B389LoadingViewController();
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id sub_10001718C()
{
  return sub_100017198(type metadata accessor for B389LoadingViewController);
}

id sub_100017198(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for B389LoadingViewController()
{
  return objc_opt_self(_TtC18SharingViewService25B389LoadingViewController);
}

unint64_t sub_100017240()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A33D8;
  if (!qword_1001A33D8)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_100131790, v1);
    atomic_store(result, (unint64_t *)&qword_1001A33D8);
  }
  return result;
}

uint64_t sub_100017288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1000172AC(uint64_t a1)
{
  uint64_t v1;

  sub_1000158A0(a1, v1);
}

uint64_t sub_1000172B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000172C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000172CC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100136660, "SharingViewService/B389LoadingView.swift", 40, 2, 50, 0);
  __break(1u);
}

void sub_100017324()
{
  _swift_stdlib_reportUnimplementedInitializer("SharingViewService.B389CardContainerViewController", 50, "init(asSingleCardWithContentViewController:containerLayoutMargins:configuration:)", 81, 0);
  __break(1u);
}

void sub_100017350()
{
  _swift_stdlib_reportUnimplementedInitializer("SharingViewService.B389CardContainerViewController", 50, "init(configuration:)", 20, 0);
  __break(1u);
}

void sub_10001737C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  if (qword_1001A2E98 != -1)
    swift_once(&qword_1001A2E98, sub_100014BFC);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A3A18);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v11 = 202;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v8 + 4, v8 + 12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "dismissPressed in %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = objc_msgSend(v3, "mainController");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "dismiss:", 5);

  }
}

void sub_1000174BC(uint64_t a1)
{
  uint64_t v1;

  sub_1000162E4(a1, v1);
}

uint64_t sub_1000174C4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);

    return swift_bridgeObjectRelease(a5);
  }
  return result;
}

uint64_t sub_100017500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

void sub_100017538()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  NSString v31;
  id v32;
  void *v33;
  id v34;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration + 8);
  if (!v2)
  {
    v19 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__backgroundImageView);
    if (v19)
    {
      objc_msgSend(v19, "setTintColor:", 0);
      v20 = OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView;
      v21 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView);
      if (v21)
      {
        objc_msgSend(v21, "setImage:", 0);
        v22 = *(void **)(v0 + v20);
        if (v22)
        {
          objc_msgSend(v22, "setTintColor:", 0);
          return;
        }
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v3 = *v1;
  v5 = v1[2];
  v4 = (void *)v1[3];
  v6 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__backgroundImageView);
  if ((v5 & 1) == 0)
  {
    if (v6)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v0
                                         + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration
                                         + 8));
      v7 = v4;
      objc_msgSend(v6, "setTintColor:", v7);
      v8 = OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView;
      v9 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView);
      if (v9)
      {
        v10 = qword_1001A2EB8;
        swift_bridgeObjectRetain(v2);
        v11 = v9;
        if (v10 != -1)
          swift_once(&qword_1001A2EB8, sub_10001791C);
        v12 = (id)qword_1001A3C48;
        v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v2);
        v14 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:withConfiguration:", v13, 0, v12);

        objc_msgSend(v11, "setImage:", v14);
        v15 = *(void **)(v0 + v8);
        if (v15)
        {
          v16 = (void *)objc_opt_self(UIColor);
          v17 = v15;
          v18 = objc_msgSend(v16, "systemWhiteColor");
          objc_msgSend(v17, "setTintColor:", v18);

LABEL_19:
          swift_bridgeObjectRelease(v2);
          return;
        }
        goto LABEL_25;
      }
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v6)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v23 = (void *)objc_opt_self(UIColor);
  v24 = v6;
  sub_100017BD8(v3, v2, v5, v4);
  v25 = objc_msgSend(v23, "systemWhiteColor");
  objc_msgSend(v24, "setTintColor:", v25);

  v26 = OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView;
  v27 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView);
  if (!v27)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v28 = qword_1001A2EB8;
  swift_bridgeObjectRetain(v2);
  v29 = v27;
  if (v28 != -1)
    swift_once(&qword_1001A2EB8, sub_10001791C);
  v30 = (id)qword_1001A3C48;
  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v32 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v31, v30);

  objc_msgSend(v29, "setImage:", v32);
  v33 = *(void **)(v0 + v26);
  if (v33)
  {
    v34 = v33;
    v7 = v4;
    objc_msgSend(v34, "setTintColor:", v7);

    goto LABEL_19;
  }
LABEL_28:
  __break(1u);
}

void sub_1000178D0()
{
  qword_1001A3C30 = 0x4028000000000000;
}

uint64_t sub_1000178E0()
{
  uint64_t result;
  double v1;

  result = sub_1001177F4();
  v1 = 15.0;
  if ((_DWORD)result == 1)
    v1 = 11.0;
  qword_1001A3C38 = *(_QWORD *)&v1;
  return result;
}

void sub_10001790C()
{
  qword_1001A3C40 = 0x4028000000000000;
}

id sub_10001791C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 28.0);
  qword_1001A3C48 = (uint64_t)result;
  return result;
}

id sub_100017990()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id result;

  v1 = (_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration + 8);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration + 16);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration + 24);
  *v1 = 0u;
  v1[1] = 0u;
  sub_100017C08(v2, v3, v4, v5);
  sub_100017538();
  result = *(id *)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__detailTextLabel);
  if (result)
  {
    objc_msgSend(result, "setText:", 0);
    result = *(id *)(v0 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__textLabel);
    if (result)
      return objc_msgSend(result, "setText:", 0);
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100017A40(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  void *v8;
  uint64_t v9;

  v2 = &v1[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__backgroundImageView] = 0;
  v3 = OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__detailTextLabel;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__detailTextLabel] = 0;
  v4 = OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView] = 0;
  v5 = OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__textLabel;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__textLabel] = 0;
  v6 = *(void **)&v1[v3];
  v7 = v1;

  v8 = *(void **)&v1[v5];
  v9 = type metadata accessor for B389FeatureTableViewCell();
  swift_deallocPartialClassInstance(v7, v9, 72, 7);
  return 0;
}

id sub_100017B18()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for B389FeatureTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for B389FeatureTableViewCell()
{
  return objc_opt_self(_TtC18SharingViewService24B389FeatureTableViewCell);
}

id sub_100017BD8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return a4;
  }
  return result;
}

void sub_100017C08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);

  }
}

char *sub_100017C38(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  NSString v5;
  id v6;
  char *v7;
  char *result;
  char *v9;
  id v10;
  char *v11;
  id v12;
  NSString v13;
  id v14;
  double v15;
  char *v16;
  id v17;
  double v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  char *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Class isa;
  id v31;
  id v32;
  id v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  Class v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  id v84;
  char *v85;
  char *v86;
  char *v87;
  id v88;
  uint64_t v89;
  objc_super v90;

  v3 = &v2[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__backgroundImageView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__detailTextLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__textLabel] = 0;
  if (a2)
  {
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v5 = 0;
  }
  v90.receiver = v2;
  v90.super_class = (Class)type metadata accessor for B389FeatureTableViewCell();
  v6 = objc_msgSendSuper2(&v90, "initWithStyle:reuseIdentifier:", 3, v5);

  v7 = (char *)v6;
  result = (char *)objc_msgSend(v7, "layoutManager");
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  v9 = result;
  v10 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  result = (char *)objc_msgSend(v9, "imageViewForCell:", v7);
  if (!result)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v11 = result;
  if (qword_1001A2EB8 != -1)
    swift_once(&qword_1001A2EB8, sub_10001791C);
  v12 = (id)qword_1001A3C48;
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v13, v12);

  objc_msgSend(v11, "setImage:", v14);
  LODWORD(v15) = 1144750080;
  objc_msgSend(v11, "setContentHuggingPriority:forAxis:", 0, v15);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "addSubview:", v10);
  result = (char *)objc_msgSend(v9, "textLabelForCell:", v7);
  if (!result)
    goto LABEL_19;
  v16 = result;
  v88 = v10;
  v17 = sub_100117BF4();
  if (qword_1001A2EA8 != -1)
    swift_once(&qword_1001A2EA8, sub_1000178E0);
  v18 = *(double *)&qword_1001A3C38;
  v19 = (void *)objc_opt_self(UIFont);
  v20 = objc_msgSend(v19, "fontWithDescriptor:size:", v17, v18);

  objc_msgSend(v16, "setFont:", v20);
  objc_msgSend(v16, "setLineBreakMode:", 0);
  objc_msgSend(v16, "setNumberOfLines:", 0);
  v21 = (void *)objc_opt_self(UIColor);
  v22 = objc_msgSend(v21, "labelColor");
  objc_msgSend(v16, "setTextColor:", v22);

  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v87 = v9;
  result = (char *)objc_msgSend(v9, "detailTextLabelForCell:", v7);
  if (!result)
    goto LABEL_20;
  v23 = result;
  v24 = sub_100117ABC();
  v25 = objc_msgSend(v19, "fontWithDescriptor:size:", v24, *(double *)&qword_1001A3C38);

  objc_msgSend(v23, "setFont:", v25);
  objc_msgSend(v23, "setLineBreakMode:", 0);
  objc_msgSend(v23, "setNumberOfLines:", 0);
  v26 = objc_msgSend(v21, "secondaryLabelColor");
  objc_msgSend(v23, "setTextColor:", v26);

  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v27 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_1001321B0;
  *(_QWORD *)(v28 + 32) = v16;
  *(_QWORD *)(v28 + 40) = v23;
  v89 = v28;
  specialized Array._endMutation()(v28);
  v29 = objc_allocWithZone((Class)UIStackView);
  sub_100013194(0, (unint64_t *)&qword_1001A5510, UIView_ptr);
  v86 = v16;
  v85 = v23;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v89);
  v31 = objc_msgSend(v29, "initWithArrangedSubviews:", isa);

  objc_msgSend(v31, "setAxis:", 1);
  objc_msgSend(v31, "setBaselineRelativeArrangement:", 1);
  objc_msgSend(v31, "setSpacing:", 1.17549435e-38);
  objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v32 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v32, "addSubview:", v11);
  objc_msgSend(v32, "addSubview:", v31);
  v33 = objc_msgSend(v7, "contentView");
  objc_msgSend(v33, "addSubview:", v32);

  objc_msgSend(v11, "intrinsicContentSize");
  v35 = v34;
  if (qword_1001A2EB0 != -1)
    swift_once(&qword_1001A2EB0, sub_10001790C);
  v36 = *(double *)&qword_1001A3C40;
  v84 = (id)objc_opt_self(NSLayoutConstraint);
  v37 = swift_allocObject(v27, 128, 7);
  *(_OWORD *)(v37 + 16) = xmmword_1001321C0;
  v38 = objc_msgSend(v11, "centerYAnchor");
  v39 = objc_msgSend(v32, "centerYAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v37 + 32) = v40;
  v41 = objc_msgSend(v11, "leadingAnchor");
  v42 = objc_msgSend(v32, "leadingAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v37 + 40) = v43;
  v44 = objc_msgSend(v32, "bottomAnchor");
  v45 = objc_msgSend(v7, "contentView");
  v46 = objc_msgSend(v45, "bottomAnchor");

  if (qword_1001A2EA0 != -1)
    swift_once(&qword_1001A2EA0, sub_1000178D0);
  v47 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v46, -*(double *)&qword_1001A3C30);

  *(_QWORD *)(v37 + 48) = v47;
  v48 = objc_msgSend(v32, "leadingAnchor");
  v49 = objc_msgSend(v7, "contentView");
  v50 = objc_msgSend(v49, "leadingAnchor");

  v51 = objc_msgSend(v48, "constraintEqualToAnchor:", v50);
  *(_QWORD *)(v37 + 56) = v51;
  v52 = objc_msgSend(v32, "topAnchor");
  v53 = objc_msgSend(v7, "contentView");
  v54 = objc_msgSend(v53, "topAnchor");

  v55 = objc_msgSend(v52, "constraintEqualToAnchor:", v54);
  *(_QWORD *)(v37 + 64) = v55;
  v56 = objc_msgSend(v32, "trailingAnchor");
  v57 = objc_msgSend(v7, "contentView");
  v58 = objc_msgSend(v57, "trailingAnchor");

  v59 = objc_msgSend(v56, "constraintEqualToAnchor:", v58);
  *(_QWORD *)(v37 + 72) = v59;
  v60 = objc_msgSend(v88, "centerXAnchor");
  v61 = objc_msgSend(v11, "centerXAnchor");
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

  *(_QWORD *)(v37 + 80) = v62;
  v63 = objc_msgSend(v88, "centerYAnchor");
  v64 = objc_msgSend(v11, "centerYAnchor");
  v65 = objc_msgSend(v63, "constraintEqualToAnchor:", v64);

  *(_QWORD *)(v37 + 88) = v65;
  v66 = objc_msgSend(v31, "bottomAnchor");
  v67 = objc_msgSend(v32, "bottomAnchor");
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

  *(_QWORD *)(v37 + 96) = v68;
  v69 = objc_msgSend(v31, "topAnchor");
  v70 = objc_msgSend(v32, "topAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

  *(_QWORD *)(v37 + 104) = v71;
  v72 = objc_msgSend(v31, "trailingAnchor");
  v73 = objc_msgSend(v32, "trailingAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

  *(_QWORD *)(v37 + 112) = v74;
  v75 = objc_msgSend(v31, "widthAnchor");
  v76 = objc_msgSend(v32, "widthAnchor");
  v77 = objc_msgSend(v75, "constraintEqualToAnchor:constant:", v76, -(v35 + v36));

  *(_QWORD *)(v37 + 120) = v77;
  specialized Array._endMutation()(v78);
  sub_100013194(0, (unint64_t *)&qword_1001A5810, NSLayoutConstraint_ptr);
  v79 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v37);
  objc_msgSend(v84, "activateConstraints:", v79);

  v80 = *(void **)&v7[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__backgroundImageView];
  *(_QWORD *)&v7[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__backgroundImageView] = v11;

  v81 = *(void **)&v7[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__detailTextLabel];
  *(_QWORD *)&v7[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__detailTextLabel] = v85;

  v82 = *(void **)&v7[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView];
  *(_QWORD *)&v7[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__glyphImageView] = v88;

  v83 = *(void **)&v7[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__textLabel];
  *(_QWORD *)&v7[OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__textLabel] = v86;

  return v7;
}

unint64_t SVSUserActionType.debugDescription.getter(int a1)
{
  unint64_t result;

  result = 0x417373696D736964;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000011;
      break;
    case 2:
      result = 0x447373696D736964;
      break;
    case 3:
    case 6:
    case 7:
      result = 0x4C7373696D736964;
      break;
    case 4:
      result = 0xD000000000000011;
      break;
    case 5:
      result = 0x427373696D736964;
      break;
    case 8:
      result = 0x6E776F6E6B6E75;
      break;
    case 9:
      result = 0x747065636361;
      break;
    case 10:
    case 12:
    case 16:
    case 22:
      result = 0xD000000000000013;
      break;
    case 11:
      result = 0x6974616D6F747561;
      break;
    case 13:
      result = 0xD000000000000015;
      break;
    case 14:
      result = 0xD000000000000014;
      break;
    case 15:
      result = 0xD000000000000017;
      break;
    case 17:
      result = 0x7453746567726174;
      break;
    case 18:
      result = 0xD000000000000011;
      break;
    case 19:
      result = 0xD000000000000010;
      break;
    case 20:
      result = 0x467373696D736964;
      break;
    case 21:
      result = 0xD000000000000017;
      break;
    case 23:
      result = 0x61654C5032506F6ELL;
      break;
    case 24:
      result = 0xD000000000000019;
      break;
    case 25:
      result = 0xD000000000000016;
      break;
    default:
      result = 0xD000000000000020;
      break;
  }
  return result;
}

unint64_t sub_100018B14()
{
  int *v0;

  return SVSUserActionType.debugDescription.getter(*v0);
}

uint64_t VPScannerViewControllerEvent.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = 0x6C65636E6163;
  v2 = 0xD00000000000002BLL;
  if (a1 == 2)
    v2 = 0x756E614D72696170;
  if (a1 != 1)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 0x64696C61766E69;
}

uint64_t sub_100018B9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *v0;
  v2 = 0x6C65636E6163;
  v3 = 0xD00000000000002BLL;
  if (*v0 == 2)
    v3 = 0x756E614D72696170;
  if (v1 != 1)
    v2 = v3;
  if (v1)
    return v2;
  else
    return 0x64696C61766E69;
}

id sub_100018C20(uint64_t a1)
{
  return sub_100018D88(a1, qword_1001AD3F0, (uint64_t (*)(void))&airdrop_ui_log);
}

id sub_100018C34(uint64_t a1)
{
  return sub_100018D88(a1, qword_1001AD408, (uint64_t (*)(void))&airdrop_nw_log);
}

uint64_t sub_100018C48(uint64_t a1)
{
  return sub_100018D00(a1, qword_1001AD420, 0x654D6F54706F6F42, 0xEA00000000007465);
}

id sub_100018C6C(uint64_t a1)
{
  return sub_100018D88(a1, qword_1001AD438, (uint64_t (*)(void))&_b389_log);
}

id sub_100018C80(uint64_t a1)
{
  return sub_100018D88(a1, qword_1001AD450, (uint64_t (*)(void))&b332_log);
}

uint64_t sub_100018C94(uint64_t a1)
{
  return sub_100018D00(a1, qword_1001AD468, 0xD000000000000013, 0x8000000100137050);
}

uint64_t sub_100018CB8(uint64_t a1)
{
  return sub_100018D00(a1, qword_1001AD480, 0xD000000000000013, 0x8000000100137070);
}

uint64_t sub_100018CDC(uint64_t a1)
{
  return sub_100018D00(a1, qword_1001AD498, 0x6E6F687064616548, 0xE900000000000065);
}

uint64_t sub_100018D00(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v7, a2);
  sub_10000E8E8(v7, (uint64_t)a2);
  return Logger.init(subsystem:category:)(0xD000000000000011, 0x8000000100137030, a3, a4);
}

id sub_100018D74(uint64_t a1)
{
  return sub_100018D88(a1, qword_1001AD4B0, (uint64_t (*)(void))&authenticate_accounts_log);
}

id sub_100018D88(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5;
  id result;

  v5 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v5, a2);
  sub_10000E8E8(v5, (uint64_t)a2);
  result = (id)a3();
  if (result)
    return (id)Logger.init(_:)();
  __break(1u);
  return result;
}

void sub_100018DF0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void (*v6)(uint64_t);
  void (*v7)(uint64_t);
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  _QWORD v41[5];
  uint64_t v42;
  _QWORD v43[24];
  _QWORD aBlock[4];
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[24];
  _BYTE v49[48];
  uint64_t v50;
  _QWORD v51[24];
  _BYTE v52[24];
  void *v53;
  objc_super v54;
  _QWORD v55[24];
  _BYTE v56[200];

  v1 = v0;
  v54.receiver = v0;
  v54.super_class = (Class)type metadata accessor for D2DSetupDoneFailureViewController();
  objc_msgSendSuper2(&v54, "viewDidLoad");
  v2 = (uint64_t)v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel;
  sub_1000142E8((uint64_t)v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel, (uint64_t)v55);
  sub_1000142E8((uint64_t)v55, (uint64_t)v52);
  sub_1000142E8((uint64_t)v55, (uint64_t)v56);
  if (sub_1000145F8((uint64_t)v56) != 1)
  {
    v3 = v53;
    sub_1000142E8((uint64_t)v52, (uint64_t)v51);
    v4 = v3;
    sub_100014610(v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
    sub_100014610(v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    if (v3)
    {
      v5 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v4);
      sub_1000142E8(v2, (uint64_t)v48);
      sub_1000142E8((uint64_t)v48, (uint64_t)aBlock);
      sub_1000142E8((uint64_t)v48, (uint64_t)v49);
      if (sub_1000145F8((uint64_t)v49) != 1)
      {
        v6 = v45;
        sub_1000142E8((uint64_t)aBlock, (uint64_t)v43);
        v7 = v6;
        sub_100014610(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
        sub_100014610(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
        if (v6)
        {
          objc_msgSend(v5, "setTintColor:", v7);

        }
      }
      objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v5, "setContentMode:", 1);
      v8 = objc_msgSend(v1, "contentView");
      objc_msgSend(v8, "addSubview:", v5);

      v9 = objc_msgSend(v1, "contentView");
      v10 = objc_msgSend(v9, "mainContentGuide");

      v40 = (id)objc_opt_self(NSLayoutConstraint);
      v11 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
      v12 = swift_allocObject(v11, 64, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100132270;
      v13 = objc_msgSend(v5, "topAnchor");
      v14 = objc_msgSend(v10, "topAnchor");
      v15 = objc_msgSend(v13, "constraintGreaterThanOrEqualToAnchor:", v14);

      *(_QWORD *)(v12 + 32) = v15;
      v16 = objc_msgSend(v5, "bottomAnchor");
      v17 = objc_msgSend(v10, "bottomAnchor");
      v18 = objc_msgSend(v16, "constraintLessThanOrEqualToAnchor:", v17);

      *(_QWORD *)(v12 + 40) = v18;
      v19 = objc_msgSend(v5, "centerXAnchor");
      v20 = objc_msgSend(v10, "centerXAnchor");
      v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

      *(_QWORD *)(v12 + 48) = v21;
      v22 = objc_msgSend(v5, "centerYAnchor");
      v23 = objc_msgSend(v10, "centerYAnchor");
      v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

      *(_QWORD *)(v12 + 56) = v24;
      aBlock[0] = v12;
      specialized Array._endMutation()(v25);
      v26 = aBlock[0];
      sub_10000E868();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v26);
      objc_msgSend(v40, "activateConstraints:", isa);

    }
  }
  sub_1000142E8(v2, (uint64_t)v51);
  sub_1000142E8((uint64_t)v51, (uint64_t)v49);
  sub_1000142E8((uint64_t)v51, (uint64_t)v52);
  if (sub_1000145F8((uint64_t)v52) != 1)
  {
    v28 = v50;
    sub_1000142E8((uint64_t)v49, (uint64_t)v48);
    swift_bridgeObjectRetain(v28);
    sub_100014610(v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
    sub_100014610(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    if (v28)
    {
      v29 = swift_allocObject(&unk_100177F80, 24, 7);
      swift_unknownObjectUnownedInit(v29 + 16, v1);
      swift_retain(v29);
      v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
      v45 = sub_10001986C;
      v46 = v29;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B5D0;
      aBlock[3] = &unk_100177FC0;
      v31 = _Block_copy(aBlock);
      v32 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v30, 0, v31);

      _Block_release(v31);
      v33 = v46;
      swift_release(v29);
      swift_release(v33);

    }
  }
  sub_1000142E8(v2, (uint64_t)v48);
  sub_1000142E8((uint64_t)v48, (uint64_t)aBlock);
  sub_1000142E8((uint64_t)v48, (uint64_t)v49);
  if (sub_1000145F8((uint64_t)v49) != 1)
  {
    v34 = v47;
    sub_1000142E8((uint64_t)aBlock, (uint64_t)v43);
    swift_bridgeObjectRetain(v34);
    sub_100014610(v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
    sub_100014610(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    if (v34)
    {
      v35 = swift_allocObject(&unk_100177F80, 24, 7);
      swift_unknownObjectUnownedInit(v35 + 16, v1);
      swift_retain(v35);
      v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v34);
      v41[4] = sub_10001984C;
      v42 = v35;
      v41[0] = _NSConcreteStackBlock;
      v41[1] = 1107296256;
      v41[2] = sub_10001B5D0;
      v41[3] = &unk_100177F98;
      v37 = _Block_copy(v41);
      v38 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v36, 1, v37);

      _Block_release(v37);
      v39 = v42;
      swift_release(v35);
      swift_release(v39);

    }
  }
}

void sub_1000194E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  char *Strong;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v2 = swift_unknownObjectWeakLoadStrong(&Strong[OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_presenter]);
  if (v2)
  {
    v4 = v2;
    if (qword_1001A3100 != -1)
      swift_once(&qword_1001A3100, sub_10009DB40);
    v5 = type metadata accessor for Logger(0, v3);
    v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A7328);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "D2D Setup request dismiss", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    *(_BYTE *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_router)
             + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissedForExternalContent) = 0;
    sub_10008911C(5, 1);

    swift_unknownObjectRelease(v4);
  }
  else
  {

  }
}

void sub_100019630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  char *Strong;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v2 = swift_unknownObjectWeakLoadStrong(&Strong[OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_presenter]);
  if (v2)
  {
    v4 = v2;
    if (qword_1001A3100 != -1)
      swift_once(&qword_1001A3100, sub_10009DB40);
    v5 = type metadata accessor for Logger(0, v3);
    v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A7328);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "D2D Setup request report bug", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    sub_100076A68();
    swift_unknownObjectRelease(v4);
  }
  else
  {

  }
}

id sub_1000197D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for D2DSetupDoneFailureViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for D2DSetupDoneFailureViewController()
{
  return objc_opt_self(_TtC18SharingViewService33D2DSetupDoneFailureViewController);
}

uint64_t sub_100019828()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10001984C(uint64_t a1)
{
  uint64_t v1;

  sub_100019630(a1, v1);
}

uint64_t sub_100019854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100019864(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10001986C(uint64_t a1)
{
  uint64_t v1;

  sub_1000194E8(a1, v1);
}

void sub_10001987C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x1000199C4);
}

uint64_t SDRunState.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100019A34 + 4 * byte_1001322B0[a1]))(0x7472617453746F6ELL, 0xEA00000000006465);
}

uint64_t sub_100019A34()
{
  return 0x6572676F72506E69;
}

uint64_t sub_100019A4C()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_100019A68()
{
  return 0x64656C696166;
}

uint64_t sub_100019A7C()
{
  return 1885956979;
}

void sub_100019A8C(char *a1)
{
  sub_10006BD34(*a1);
}

void sub_100019A98()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_100019AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0 + 3854;
  String.hash(into:)(&v3, 0x6572676F72506E69, v1);
  swift_bridgeObjectRelease(v1);
  return Hasher._finalize()();
}

void sub_100019B68()
{
  __asm { BR              X10 }
}

uint64_t sub_100019BA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + 3854;
  String.hash(into:)(a1, 0x6572676F72506E69, v2);
  return swift_bridgeObjectRelease(v2);
}

void sub_100019C14(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_100019C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0 + 3854;
  String.hash(into:)(&v3, 0x6572676F72506E69, v1);
  swift_bridgeObjectRelease(v1);
  return Hasher._finalize()();
}

unint64_t sub_100019CE0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s18SharingViewService10SDRunStateO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100019D0C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_100019D40 + 4 * byte_1001322C4[*v0]))();
}

void sub_100019D40(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6572676F72506E69;
  a1[1] = v1 + 3854;
}

void sub_100019D5C(_QWORD *a1@<X8>)
{
  *a1 = 0x6574656C706D6F63;
  a1[1] = 0xE900000000000064;
}

void sub_100019D7C(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C696166;
  a1[1] = 0xE600000000000000;
}

void sub_100019D94(_QWORD *a1@<X8>)
{
  *a1 = 1885956979;
  a1[1] = 0xE400000000000000;
}

uint64_t Optional<A>.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  void *object;
  Swift::String v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
  {
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease(v17);
    v16 = 0x6C616E6F6974704FLL;
    v17 = 0xE90000000000003CLL;
    v11._countAndFlagsBits = _typeName(_:qualified:)(v3, 0);
    object = v11._object;
    String.append(_:)(v11);
    swift_bridgeObjectRelease(object);
    v13._countAndFlagsBits = 0x656E6F6E2E3ELL;
    v13._object = (void *)0xE600000000000000;
    String.append(_:)(v13);
    return v16;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v8, v3);
    v14 = dispatch thunk of CustomStringConvertible.description.getter(v3, a2);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v14;
}

uint64_t sub_100019F28(uint64_t a1, uint64_t a2)
{
  return Optional<A>.description.getter(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_100019F30()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t PushableTimer.noLaterThan.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100021FDC(v1 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_noLaterThan, a1);
}

uint64_t PushableTimer.__allocating_init(fireAt:noLaterThan:queue:handler:)(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;

  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v11 = sub_100021388(a1, a2, a3, a4, a5);

  swift_release(a5);
  return v11;
}

uint64_t PushableTimer.init(fireAt:noLaterThan:queue:handler:)(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;

  v7 = sub_100021388(a1, a2, a3, a4, a5);

  swift_release(a5);
  return v7;
}

uint64_t PushableTimer.reschedule(deadline:)(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t ObjectType;
  void (*v25)(char *, _QWORD, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v29 = a1;
  v2 = type metadata accessor for DispatchTimeInterval(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v28 - v7;
  v9 = sub_100006A6C(&qword_1001A3CE0);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v28 - v17;
  v28 = v1;
  sub_100021FDC(v1 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_noLaterThan, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    static DispatchTime.distantFuture.getter();
    sub_10000D858((uint64_t)v11, &qword_1001A3CE0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
  }
  v19 = sub_100005B80(&qword_1001A3CE8, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchTime, (uint64_t)&protocol conformance descriptor for DispatchTime);
  v20 = v29;
  if ((dispatch thunk of static Comparable.< infix(_:_:)(v16, v29, v12, v19) & 1) != 0)
  {
    v21 = v18;
    v22 = v16;
  }
  else
  {
    v21 = v18;
    v22 = v20;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v21, v22, v12);
  v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v16, v12);
  ObjectType = swift_getObjectType(*(_QWORD *)(v28 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_timer));
  v25 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v25(v8, enum case for DispatchTimeInterval.never(_:), v2);
  *(_QWORD *)v6 = 0;
  v25(v6, enum case for DispatchTimeInterval.nanoseconds(_:), v2);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v18, v8, v6, ObjectType);
  v26 = *(void (**)(char *, uint64_t))(v3 + 8);
  v26(v6, v2);
  v26(v8, v2);
  return ((uint64_t (*)(char *, uint64_t))v23)(v18, v12);
}

Swift::Void __swiftcall PushableTimer.resume()()
{
  sub_10001A2C0((uint64_t (*)(uint64_t))&OS_dispatch_source.resume());
}

Swift::Void __swiftcall PushableTimer.cancel()()
{
  sub_10001A2C0((uint64_t (*)(uint64_t))&OS_dispatch_source.cancel());
}

uint64_t sub_10001A2C0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_timer));
  return a1(ObjectType);
}

uint64_t PushableTimer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_timer);
  swift_getObjectType(v2);
  OS_dispatch_source.cancel()();
  sub_10000D858(v1 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_noLaterThan, &qword_1001A3CE0);
  swift_unknownObjectRelease(v2);
  return v1;
}

uint64_t PushableTimer.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_timer);
  swift_getObjectType(v2);
  OS_dispatch_source.cancel()();
  sub_10000D858(v1 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_noLaterThan, &qword_1001A3CE0);
  swift_unknownObjectRelease(v2);
  return swift_deallocClassInstance(v1, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
}

void sub_10001A3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x10001A50CLL);
}

BOOL sub_10001A540(uint64_t a1, uint64_t a2)
{
  return sub_10002122C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(void **)(a2 + 16));
}

void sub_10001A55C(void *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;

  v2 = v1;
  v3 = v1[1];
  if (*(_QWORD *)(v3 + 16))
  {
    v12 = a1;
    v4 = sub_100005E08((uint64_t)v12);
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)(v3 + 56) + 24 * v4;
      v7 = *(id *)v6;
      v8 = *(_QWORD *)(v6 + 8);
      v9 = *(void **)(v6 + 16);
      sub_100006B68(*(id *)v6, v8, v9);

      if (v9)
      {
        v10 = *v2;
        sub_100006B94((uint64_t)v7, v8);
        sub_100006B94((uint64_t)v7, v8);
        v11 = v9;
        sub_10001987C(v10, (uint64_t)v7, v8);
        sub_100006B94((uint64_t)v7, v8);
        sub_10001A3B0(v10, (uint64_t)v7, v8);
        __asm { BR              X10 }
      }
    }
    else
    {

    }
  }
}

uint64_t sub_10001A6D4(void *a1)
{
  uint64_t v1;
  unint64_t v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  Class isa;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;

  if ((int)v6 != v6 >> 32)
    JUMPOUT(0x10001A66CLL);
  v14 = v4;
  v7 = v6;
  v8 = v3;
  v9 = a1;
  sub_1000AC568(0, 0, 0, v9);
  isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "writeValue:forCharacteristic:type:", isa, v9, 0);
  sub_100024034(v1, v2, v5);

  sub_100007348(v7, v14);
  sub_100007348(v13, v12);

  return sub_100007348(v1, v2);
}

unint64_t sub_10001A7B4()
{
  return 0xD000000000000038;
}

uint64_t SDB389BubbleMonitor.allDevices.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
}

uint64_t SDB389BubbleMonitor.allDevices.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 16, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease(v3);
}

void *SDB389BubbleMonitor.allDevices.modify(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return &j__swift_endAccess;
}

void *SDB389BubbleMonitor.queue.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 24, v4, 0, 0);
  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void SDB389BubbleMonitor.queue.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];

  swift_beginAccess(v1 + 24, v4, 1, 0);
  v3 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;

}

void *SDB389BubbleMonitor.queue.modify(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + 24, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t SDB389BubbleMonitor.inBubbleCount.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 80, v2, 0, 0);
  return *(_QWORD *)(*(_QWORD *)(v0 + 80) + 16);
}

uint64_t SDB389BubbleMonitor.updateHandler.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 32, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  sub_100022024(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t SDB389BubbleMonitor.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 32, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_100012F60(v5, v6);
}

void *SDB389BubbleMonitor.updateHandler.modify(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t SDB389BubbleMonitor.lostHandler.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 48, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 48);
  sub_100022024(v1, *(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t SDB389BubbleMonitor.lostHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 48, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return sub_100012F60(v5, v6);
}

void *SDB389BubbleMonitor.lostHandler.modify(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + 48, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t SDB389BubbleMonitor.closestB389sInBubble.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  _BYTE v6[24];

  swift_beginAccess(v0 + 80, v6, 0, 0);
  v1 = *(_QWORD *)(v0 + 80);
  v2 = swift_bridgeObjectRetain(v1);
  v5 = sub_10001F750(v2);
  sub_10001F5E4((uint64_t *)&v5);
  v3 = sub_10001ABA8((unint64_t)v5);
  swift_bridgeObjectRelease(v1);
  return v3;
}

uint64_t sub_10001ABA8(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v21 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease(v1);
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
    swift_release(v2);
    v20 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v20 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v8 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        v9 = v21;
        if ((v21 & 0xC000000000000001) != 0)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v21);
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - (v5 + 1), v21);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v10 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v10)
            goto LABEL_34;
          v11 = *(id *)(v21 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v10)
            goto LABEL_37;
          v12 = (uint64_t)v11;
          v13 = *(id *)(v21 + 32 + 8 * v1);
        }
        v14 = v13;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v9 = sub_10001F838(v21);
          v21 = v9;
        }
        v15 = (v9 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v15 + 32) = v14;
        specialized Array._endMutation()(v16);
        v17 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v17 = sub_10001F838(v21);
          v21 = v17;
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v6 = (v17 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(_QWORD *)(v6 + 32) = v12;
        specialized Array._endMutation()(v7);
      }
      v5 = v8;
      if (v4 == v8)
        return v21;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_10001F65C(v1);
    v21 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

uint64_t sub_10001ADC0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  *(_QWORD *)(v1 + 16) = sub_100004A58((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v1 + 24) = (id)CUMainQueue();
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_QWORD *)(v1 + 64) = objc_msgSend(objc_allocWithZone((Class)SFDeviceDiscovery), "init");
  v3 = sub_100004A58((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v1 + 72) = a1;
  *(_QWORD *)(v1 + 80) = v3;
  return v1;
}

void sub_10001AE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  NSString v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void **aBlock;
  uint64_t v18;
  void (*v19)(uint64_t, void *);
  void *v20;
  void *v21;
  uint64_t v22;
  char v23[24];

  v3 = v2;
  v6 = *(void **)(v3 + 64);
  objc_msgSend(v6, "setChangeFlags:", 13);
  objc_msgSend(v6, "setDiscoveryFlags:", 2);
  swift_beginAccess(v3 + 24, v23, 0, 0);
  if (*(_QWORD *)(v3 + 24))
  {
    objc_msgSend(v6, "setDispatchQueue:");
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setPurpose:", v7);

    v21 = sub_1000240A8;
    v22 = v3;
    aBlock = _NSConcreteStackBlock;
    v18 = 1107296256;
    v19 = sub_10001B5D0;
    v20 = &unk_1001781D8;
    v8 = _Block_copy(&aBlock);
    v9 = v22;
    swift_retain(v3);
    objc_msgSend(v6, "setDeviceFoundHandler:", v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);
    v21 = sub_1000240B0;
    v22 = v3;
    aBlock = _NSConcreteStackBlock;
    v18 = 1107296256;
    v19 = sub_10001B678;
    v20 = &unk_100178200;
    v10 = _Block_copy(&aBlock);
    v11 = v22;
    swift_retain(v3);
    objc_msgSend(v6, "setDeviceChangedHandler:", v10, swift_release(v11).n128_f64[0]);
    _Block_release(v10);
    v21 = sub_1000240B8;
    v22 = v3;
    aBlock = _NSConcreteStackBlock;
    v18 = 1107296256;
    v19 = sub_10001B5D0;
    v20 = &unk_100178228;
    v12 = _Block_copy(&aBlock);
    v13 = v22;
    swift_retain(v3);
    objc_msgSend(v6, "setDeviceLostHandler:", v12, swift_release(v13).n128_f64[0]);
    _Block_release(v12);
    v14 = swift_allocObject(&unk_100178260, 32, 7);
    *(_QWORD *)(v14 + 16) = a1;
    *(_QWORD *)(v14 + 24) = a2;
    v21 = sub_1000240E4;
    v22 = v14;
    aBlock = _NSConcreteStackBlock;
    v18 = 1107296256;
    v19 = sub_1000AC624;
    v20 = &unk_100178278;
    v15 = _Block_copy(&aBlock);
    v16 = v22;
    swift_retain(a2);
    objc_msgSend(v6, "activateWithCompletion:", v15, swift_release(v16).n128_f64[0]);
    _Block_release(v15);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10001B0CC(void *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void *v31;
  void (*v32)(__n128);
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  void (*v38)(__n128);
  uint64_t v39;
  __n128 v40;
  int v41;
  void *v42;
  id v43;
  char v44;
  uint64_t v45;
  _QWORD v47[2];
  _QWORD v48[5];
  __int128 v49;
  __int128 v50;

  v4 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v47[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v47[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v47[-1] - v12;
  v14 = objc_msgSend(a1, "identifier");
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    return sub_10000D858((uint64_t)v6, &qword_1001A42A0);
  }
  v15 = v14;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v6, v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_10000D858((uint64_t)v6, &qword_1001A42A0);
  v16(v13, v6, v7);
  v17 = objc_msgSend(a1, "bleDevice");
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, "advertisementFields");
    if (v19)
    {
      v20 = v19;
      v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v47[0] = 0x65707954627573;
      v47[1] = 0xE700000000000000;
      AnyHashable.init<A>(_:)(v48, v47, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v21 + 16) && (v22 = sub_100005CF4((uint64_t)v48), (v23 & 1) != 0))
      {
        sub_10000D894(*(_QWORD *)(v21 + 56) + 32 * v22, (uint64_t)&v49);
      }
      else
      {
        v49 = 0u;
        v50 = 0u;
      }
      swift_bridgeObjectRelease(v21);
      sub_100006B34((uint64_t)v48);
      if (*((_QWORD *)&v50 + 1))
      {
        if ((swift_dynamicCast(v47, &v49, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6) & 1) != 0
          && LOBYTE(v47[0]) == 5)
        {
          v25 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
          v25(v11, v13, v7);
          swift_beginAccess(a2 + 2, v48, 33, 0);
          v26 = a1;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2[2]);
          *(_QWORD *)&v49 = a2[2];
          a2[2] = 0x8000000000000000;
          sub_1000CF580((uint64_t)v26, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
          v28 = a2[2];
          a2[2] = v49;
          swift_bridgeObjectRelease(v28);
          v29 = *(void (**)(char *, uint64_t))(v8 + 8);
          v29(v11, v7);
          swift_endAccess(v48);
          v30 = a2[9];
          if (v30 < 0)
          {
            v35 = (uint64_t)objc_msgSend(v18, "rssi");

            if (v35 < 0)
            {
              v41 = sub_100024104(v35, v30);
              v36 = a2 + 10;
              if ((v41 & 0x80000000) == 0)
              {
                swift_beginAccess(a2 + 10, v48, 33, 0);
                v42 = (void *)sub_1000CD288((uint64_t)v13);
                swift_endAccess(v48);

                v25(v11, v13, v7);
                swift_beginAccess(a2 + 10, v48, 33, 0);
                v43 = v26;
                v44 = swift_isUniquelyReferenced_nonNull_native(a2[10]);
                *(_QWORD *)&v49 = a2[10];
                a2[10] = 0x8000000000000000;
                sub_1000CF580((uint64_t)v43, (uint64_t)v11, v44);
                v45 = a2[10];
                a2[10] = v49;
                swift_bridgeObjectRelease(v45);
                v29(v11, v7);
                swift_endAccess(v48);
                goto LABEL_25;
              }
LABEL_24:
              swift_beginAccess(v36, v48, 33, 0);
              v37 = (void *)sub_1000CD288((uint64_t)v13);
              swift_endAccess(v48);

LABEL_25:
              swift_beginAccess(a2 + 4, v48, 0, 0);
              v38 = (void (*)(__n128))a2[4];
              if (v38)
              {
                v39 = a2[5];
                v40 = swift_retain(v39);
                v38(v40);
                sub_100012F60((uint64_t)v38, v39);
              }
              return ((uint64_t (*)(char *, uint64_t))v29)(v13, v7);
            }
          }
          else
          {

          }
          v36 = a2 + 10;
          goto LABEL_24;
        }
      }
      else
      {
        sub_10000D858((uint64_t)&v49, &qword_1001A4340);
      }
    }

  }
  swift_beginAccess(a2 + 10, v48, 33, 0);
  v31 = (void *)sub_1000CD288((uint64_t)v13);
  swift_endAccess(v48);

  swift_beginAccess(a2 + 4, v48, 0, 0);
  v32 = (void (*)(__n128))a2[4];
  if (v32)
  {
    v33 = a2[5];
    v34 = swift_retain(v33);
    v32(v34);
    sub_100012F60((uint64_t)v32, v33);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

void sub_10001B5D0(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

void sub_10001B620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  const void *v5;

  v4 = objc_msgSend(*(id *)(a3 + 64), "deviceFoundHandler");
  if (v4)
  {
    v5 = v4;
    (*((void (**)(id, uint64_t))v4 + 2))(v4, a1);
    _Block_release(v5);
  }
}

void sub_10001B678(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_10001B6D4(void *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  void *v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  void *v17;
  void *v18;
  void (*v19)(__n128);
  uint64_t v20;
  __n128 v21;
  void (*v22)(_BYTE *, __n128);
  uint64_t v23;
  __n128 v24;
  _BYTE v26[24];
  _BYTE v27[24];

  v4 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v26[-v12];
  v14 = objc_msgSend(a1, "identifier");
  if (!v14)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    return sub_10000D858((uint64_t)v6, &qword_1001A42A0);
  }
  v15 = v14;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
  v16(v6, v11, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_10000D858((uint64_t)v6, &qword_1001A42A0);
  v16(v13, v6, v7);
  swift_beginAccess(a2 + 2, v27, 33, 0);
  v17 = (void *)sub_1000CD288((uint64_t)v13);
  swift_endAccess(v27);

  swift_beginAccess(a2 + 10, v27, 33, 0);
  v18 = (void *)sub_1000CD288((uint64_t)v13);
  swift_endAccess(v27);

  swift_beginAccess(a2 + 4, v27, 0, 0);
  v19 = (void (*)(__n128))a2[4];
  if (v19)
  {
    v20 = a2[5];
    v21 = swift_retain(v20);
    v19(v21);
    sub_100012F60((uint64_t)v19, v20);
  }
  swift_beginAccess(a2 + 6, v26, 0, 0);
  v22 = (void (*)(_BYTE *, __n128))a2[6];
  if (v22)
  {
    v23 = a2[7];
    v24 = swift_retain(v23);
    v22(v13, v24);
    sub_100012F60((uint64_t)v22, v23);
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_10001B934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void *v9;
  void *v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD aBlock[5];
  uint64_t v22;
  _BYTE v23[24];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess(v0 + 24, v23, 0, 0);
  v9 = *(void **)(v0 + 24);
  if (v9)
  {
    aBlock[4] = sub_100024080;
    v22 = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001BB50;
    aBlock[3] = &unk_1001781B0;
    v10 = _Block_copy(aBlock);
    v11 = v9;
    v12 = swift_retain(v1);
    static DispatchQoS.unspecified.getter(v12);
    v20 = _swiftEmptyArrayStorage;
    v13 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v14 = sub_100006A6C((uint64_t *)&unk_1001A4330);
    v15 = sub_100024144((unint64_t *)&qword_1001A38F8, (uint64_t *)&unk_1001A4330, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v14, v15, v2, v13);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v10);
    _Block_release(v10);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
    swift_release(v22);
    swift_beginAccess(v1 + 32, aBlock, 1, 0);
    v16 = *(_QWORD *)(v1 + 32);
    v17 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    return sub_100012F60(v16, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10001BB50(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t SDB389BubbleMonitor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  sub_100012F60(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_100012F60(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return v0;
}

uint64_t SDB389BubbleMonitor.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  sub_100012F60(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_100012F60(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t b389VersionString(from:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  uint64_t v15;
  Class isa;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  int v22;
  int v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[2];

  v4 = type metadata accessor for Logger(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v8 = sub_10000E8E8(v4, (uint64_t)qword_1001AD438);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_100006B94(a1, a2);
  v9 = sub_100006B94(a1, a2);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  v13 = os_log_type_enabled(v10, v12);
  v44 = v7;
  if (v13)
  {
    v42 = v5;
    v43 = v4;
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v47[0] = v15;
    *(_DWORD *)v14 = 136315138;
    isa = Data._bridgeToObjectiveC()().super.isa;
    v17 = (id)SFHexStringForData();

    if (!v17)
    {
      result = sub_100007348(a1, a2);
      __break(1u);
      return result;
    }
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v45 = sub_10001EFA4(v18, v20, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v20);
    sub_100007348(a1, a2);
    sub_100007348(a1, a2);
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "b389VersionString from %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    v5 = v42;
    v4 = v43;
    v7 = v44;
  }
  else
  {

    sub_100007348(a1, a2);
    sub_100007348(a1, a2);
  }
  sub_100021BD4(a1, a2);
  v22 = (v21 >> 20) & 0xF;
  v23 = HIWORD(v21) & 0xF;
  v24 = (unsigned __int16)v21 >> 4;
  v25 = sub_100006A6C(&qword_1001A3CF8);
  v26 = swift_allocObject(v25, 80, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100132B30;
  LOBYTE(v47[0]) = v22;
  *(_QWORD *)(v26 + 32) = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
  *(_QWORD *)(v26 + 40) = v27;
  LOBYTE(v47[0]) = v23;
  *(_QWORD *)(v26 + 48) = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
  *(_QWORD *)(v26 + 56) = v28;
  LOWORD(v47[0]) = v24;
  *(_QWORD *)(v26 + 64) = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt16, &protocol witness table for UInt16);
  *(_QWORD *)(v26 + 72) = v29;
  v47[0] = v26;
  v30 = sub_100006A6C(&qword_1001A3D00);
  v31 = sub_100024144(&qword_1001A3D08, &qword_1001A3D00, (uint64_t)&protocol conformance descriptor for [A]);
  v32 = BidirectionalCollection<>.joined(separator:)(46, 0xE100000000000000, v30, v31);
  v34 = v33;
  swift_bridgeObjectRelease(v26);
  v35 = swift_bridgeObjectRetain_n(v34, 2);
  v36 = Logger.logObject.getter(v35);
  v38 = static os_log_type_t.default.getter(v36, v37);
  if (os_log_type_enabled(v36, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(12, -1);
    v40 = swift_slowAlloc(32, -1);
    v47[0] = v40;
    *(_DWORD *)v39 = 136315138;
    swift_bridgeObjectRetain(v34);
    v45 = sub_10001EFA4(v32, v34, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v39 + 4, v39 + 12);
    swift_bridgeObjectRelease_n(v34, 3);
    _os_log_impl((void *)&_mh_execute_header, v36, v38, "Result version: %s", v39, 0xCu);
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v44, v4);
  }
  else
  {

    swift_bridgeObjectRelease_n(v34, 2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v32;
}

uint64_t sub_10001C220()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  Swift::String v3;
  int *v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  Swift::String v21;
  uint64_t *v22;
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;
  unint64_t v26;
  Swift::String v27;
  __int128 v29;
  _QWORD v30[2];

  v30[0] = 0;
  v30[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(175);
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  v1._object = (void *)0x80000001001371D0;
  String.append(_:)(v1);
  v2 = type metadata accessor for B389PresentationConfig.Mode(0);
  _print_unlocked<A, B>(_:_:)(v0, v30, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v3._countAndFlagsBits = 0x43726F6C6F63202CLL;
  v3._object = (void *)0xED0000203A65646FLL;
  String.append(_:)(v3);
  v4 = (int *)type metadata accessor for B389PresentationConfig(0);
  LODWORD(v29) = *(_DWORD *)(v0 + v4[5]);
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 0x7375655A7369202CLL;
  v7._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v7);
  if (*(_BYTE *)(v0 + v4[6]))
    v8 = 1702195828;
  else
    v8 = 0x65736C6166;
  if (*(_BYTE *)(v0 + v4[6]))
    v9 = 0xE400000000000000;
  else
    v9 = 0xE500000000000000;
  v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = 0xD000000000000012;
  v11._object = (void *)0x80000001001371F0;
  String.append(_:)(v11);
  LOBYTE(v29) = *(_BYTE *)(v0 + v4[7]);
  v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt8, &protocol witness table for UInt8);
  v13 = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v13);
  v14._object = (void *)0x8000000100137210;
  v14._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v14);
  if (*(_BYTE *)(v0 + v4[8]))
    v15 = 1702195828;
  else
    v15 = 0x65736C6166;
  if (*(_BYTE *)(v0 + v4[8]))
    v16 = 0xE400000000000000;
  else
    v16 = 0xE500000000000000;
  v17 = v16;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease(v16);
  v18._object = (void *)0x8000000100137230;
  v18._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v18);
  *(_QWORD *)&v29 = *(_QWORD *)(v0 + v4[9]);
  v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  v21._countAndFlagsBits = 0xD000000000000015;
  v21._object = (void *)0x8000000100137250;
  String.append(_:)(v21);
  v22 = (uint64_t *)(v0 + v4[10]);
  v23 = *v22;
  LOBYTE(v22) = *((_BYTE *)v22 + 8);
  *(_QWORD *)&v29 = v23;
  BYTE8(v29) = (_BYTE)v22;
  DefaultStringInterpolation.appendInterpolation<A>(nilPrint:)(&v29, &type metadata for Double, &protocol witness table for Double);
  v24._object = (void *)0xED0000203A656D61;
  v24._countAndFlagsBits = 0x4E6E65766967202CLL;
  String.append(_:)(v24);
  v29 = *(_OWORD *)(v0 + v4[11]);
  DefaultStringInterpolation.appendInterpolation<A>(nilPrint:)(&v29, &type metadata for String, &protocol witness table for String);
  v25._object = (void *)0x8000000100137270;
  v25._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v25);
  v29 = *(_OWORD *)(v0 + v4[12]);
  v26 = sub_100023FDC();
  DefaultStringInterpolation.appendInterpolation<A>(nilPrint:)(&v29, &type metadata for Data, v26);
  v27._countAndFlagsBits = 62;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  return v30[0];
}

uint64_t sub_10001C590(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10001C5BC + 4 * byte_1001322CD[a1]))(1701080941, 0xE400000000000000);
}

uint64_t sub_10001C5BC()
{
  return 0x646F43726F6C6F63;
}

uint64_t sub_10001C688()
{
  return 0x6E69766172676E65;
}

uint64_t sub_10001C6AC()
{
  unsigned __int8 *v0;

  return sub_10001C590(*v0);
}

uint64_t sub_10001C6B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10002235C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10001C6D8()
{
  return 0;
}

void sub_10001C6E4(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_10001C6F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100023F04();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001C718(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100023F04();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001C740(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  char v29;
  __int128 v30;

  v3 = v1;
  v5 = sub_100006A6C(&qword_1001A42D8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100023D8C(a1, v9);
  v11 = sub_100023F04();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for B389PresentationConfig.CodingKeys, &type metadata for B389PresentationConfig.CodingKeys, v11, v9, v10);
  LOBYTE(v30) = 0;
  v12 = type metadata accessor for B389PresentationConfig.Mode(0);
  v13 = sub_100005B80(&qword_1001A42E0, type metadata accessor for B389PresentationConfig.Mode, (uint64_t)&unk_1001326A8);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v30, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for B389PresentationConfig(0);
    v15 = *(unsigned int *)(v3 + v14[5]);
    LOBYTE(v30) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15, &v30, v5);
    v16 = *(unsigned __int8 *)(v3 + v14[6]);
    LOBYTE(v30) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v16, &v30, v5);
    v17 = *(unsigned __int8 *)(v3 + v14[7]);
    LOBYTE(v30) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v17, &v30, v5);
    v18 = *(unsigned __int8 *)(v3 + v14[8]);
    LOBYTE(v30) = 4;
    KeyedEncodingContainer.encode(_:forKey:)(v18, &v30, v5);
    v19 = *(_QWORD *)(v3 + v14[9]);
    LOBYTE(v30) = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v19, &v30, v5);
    v20 = (uint64_t *)(v3 + v14[10]);
    v21 = *v20;
    v22 = *((unsigned __int8 *)v20 + 8);
    LOBYTE(v30) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v21, v22, &v30, v5);
    v23 = (uint64_t *)(v3 + v14[11]);
    v24 = *v23;
    v25 = v23[1];
    LOBYTE(v30) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v24, v25, &v30, v5);
    v30 = *(_OWORD *)(v3 + v14[12]);
    v29 = 8;
    v26 = sub_100023EC0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v30, &v29, v5, &type metadata for Data, v26);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10001C9EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  char v28;
  char v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  _QWORD v59[2];
  char v60;

  v50 = a2;
  v51 = type metadata accessor for B389PresentationConfig.Mode(0);
  __chkstk_darwin(v51);
  v52 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100006A6C(&qword_1001A42C0);
  v49 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for B389PresentationConfig(0);
  v7 = (int *)__chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v7[5];
  *(_DWORD *)&v9[v48] = 0;
  v47 = v7[6];
  v9[v47] = 0;
  v10 = v7[7];
  v9[v10] = 0;
  v11 = v7[8];
  v9[v11] = 0;
  v12 = v7[9];
  *(_QWORD *)&v9[v12] = -50;
  v13 = &v9[v7[10]];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = &v9[v7[11]];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v57 = v14;
  v55 = &v9[v7[12]];
  v56 = a1;
  *(_OWORD *)v55 = xmmword_100132B40;
  v15 = a1[3];
  v16 = a1[4];
  sub_100023D8C(a1, v15);
  v17 = sub_100023F04();
  v53 = v5;
  v18 = v58;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for B389PresentationConfig.CodingKeys, &type metadata for B389PresentationConfig.CodingKeys, v17, v15, v16);
  if (v18)
  {
    sub_100024118(v56);
    v25 = v55;
    swift_bridgeObjectRelease(*((_QWORD *)v57 + 1));
    return sub_100023F48(*(_QWORD *)v25, *((_QWORD *)v25 + 1));
  }
  else
  {
    v58 = v10;
    v45 = v12;
    v46 = v11;
    v44 = (uint64_t *)v13;
    v19 = v49;
    v20 = v50;
    LOBYTE(v59[0]) = 0;
    v21 = sub_100005B80(&qword_1001A42D0, type metadata accessor for B389PresentationConfig.Mode, (uint64_t)&unk_1001326D0);
    v22 = (uint64_t)v52;
    v23 = v53;
    v24 = v54;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v51, v59, v54, v51, v21);
    sub_100023E7C(v22, (uint64_t)v9);
    LOBYTE(v59[0]) = 1;
    v27 = v19;
    v26 = KeyedDecodingContainer.decode(_:forKey:)(v59, v24);
    *(_DWORD *)&v9[v48] = v26;
    LOBYTE(v59[0]) = 2;
    v28 = KeyedDecodingContainer.decode(_:forKey:)(v59, v24);
    v9[v47] = v28 & 1;
    LOBYTE(v59[0]) = 3;
    v29 = KeyedDecodingContainer.decode(_:forKey:)(v59, v24);
    v30 = v57;
    v9[v58] = v29;
    LOBYTE(v59[0]) = 4;
    v31 = KeyedDecodingContainer.decode(_:forKey:)(v59, v54);
    v9[v46] = v31 & 1;
    LOBYTE(v59[0]) = 5;
    v32 = KeyedDecodingContainer.decode(_:forKey:)(v59, v54);
    *(_QWORD *)&v9[v45] = v32;
    LOBYTE(v59[0]) = 6;
    v33 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v59, v54);
    v34 = v44;
    *v44 = v33;
    *((_BYTE *)v34 + 8) = v35 & 1;
    LOBYTE(v59[0]) = 7;
    *(_QWORD *)v30 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v59, v54);
    *((_QWORD *)v30 + 1) = v36;
    v60 = 8;
    v37 = sub_100023E38();
    v38 = v54;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v59, &type metadata for Data, &v60, v54, &type metadata for Data, v37);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v38);
    v39 = v59[0];
    v40 = v59[1];
    v41 = v55;
    sub_100023F48(*(_QWORD *)v55, *((_QWORD *)v55 + 1));
    *(_QWORD *)v41 = v39;
    *((_QWORD *)v41 + 1) = v40;
    sub_100023F5C((uint64_t)v9, v20, type metadata accessor for B389PresentationConfig);
    sub_100024118(v56);
    return sub_100023FA0((uint64_t)v9, type metadata accessor for B389PresentationConfig);
  }
}

uint64_t sub_10001CE40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001C9EC(a1, a2);
}

uint64_t sub_10001CE54(_QWORD *a1)
{
  return sub_10001C740(a1);
}

void sub_10001CE70(char *a1)
{
  sub_10006B9A8(*a1);
}

void sub_10001CE7C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_10001CED4()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x444955557462, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

void sub_10001CF44()
{
  __asm { BR              X10 }
}

uint64_t sub_10001CF8C(uint64_t a1)
{
  String.hash(into:)(a1, 0x444955557462, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

void sub_10001CFE8(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_10001D03C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x444955557462, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

unint64_t sub_10001D0AC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100022790(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10001D0D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10001D114 + 4 * byte_1001322E2[*v0]))();
}

void sub_10001D114(_QWORD *a1@<X8>)
{
  *a1 = 0x444955557462;
  a1[1] = 0xE600000000000000;
}

void sub_10001D12C(_QWORD *a1@<X8>)
{
  *a1 = 0x69666E6F4363666ELL;
  a1[1] = 0xE900000000000067;
}

void sub_10001D14C(_QWORD *a1@<X8>)
{
  *a1 = 0x69746C754D7369;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_10001D168()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10001D1A4 + 4 * byte_1001322E6[*v0]))(0x6E65644965736163, 0xEE00726569666974);
}

uint64_t sub_10001D1A4()
{
  return 0x444955557462;
}

uint64_t sub_10001D1B8()
{
  return 0x69666E6F4363666ELL;
}

uint64_t sub_10001D1D4()
{
  return 0x69746C754D7369;
}

unint64_t sub_10001D1EC@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100022790(a1);
  *a2 = result;
  return result;
}

void sub_10001D210(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_10001D21C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100023DB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001D244(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100023DB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_10001D26C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_10001D284@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _BYTE *v45;
  _QWORD v46[2];
  char v47;

  v42 = a2;
  v43 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006A6C(&qword_1001A4268);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for B389PresentationConfig.Mode(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  v44 = a1;
  sub_100023D8C(a1, v12);
  v14 = sub_100023DB0();
  v15 = v45;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for B389PresentationConfig.Mode.CodingKeys, &type metadata for B389PresentationConfig.Mode.CodingKeys, v14, v12, v13);
  if (v15)
    goto LABEL_3;
  v16 = v43;
  v45 = v11;
  v40 = v9;
  LOBYTE(v46[0]) = 0;
  v17 = KeyedDecodingContainer.decode(_:forKey:)(v46, v5);
  v18 = v5;
  v19 = v8;
  switch(v17)
  {
    case 0:
      LOBYTE(v46[0]) = 3;
      v27 = KeyedDecodingContainer.decode(_:forKey:)(v46, v5);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v20 = v44;
      v28 = 0;
      v29 = (uint64_t)v45;
      *v45 = v27 & 1;
LABEL_14:
      v37 = v42;
      swift_storeEnumTagMultiPayload(v29, v40, v28);
      sub_100023E7C(v29, v37);
      return sub_100024118(v20);
    case 1:
      LOBYTE(v46[0]) = 1;
      v30 = sub_100005B80(&qword_1001A4298, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v31 = v16;
      KeyedDecodingContainer.decode<A>(_:forKey:)(v16, v46, v18, v16, v30);
      LOBYTE(v46[0]) = 3;
      v35 = KeyedDecodingContainer.decode(_:forKey:)(v46, v18);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
      v36 = *(int *)(sub_100006A6C(&qword_1001A7DF0) + 48);
      v29 = (uint64_t)v45;
      (*(void (**)(_BYTE *, char *, uint64_t))(v41 + 32))(v45, v4, v31);
      *(_BYTE *)(v29 + v36) = v35 & 1;
      v28 = 1;
      v20 = v44;
      goto LABEL_14;
    case 2:
      v47 = 2;
      v22 = sub_100023E38();
      KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, &v47, v5, &type metadata for Data, v22);
      v24 = v46[0];
      v23 = v46[1];
      sub_100013194(0, &qword_1001A4288, NSKeyedUnarchiver_ptr);
      v25 = sub_100013194(0, &qword_1001A4290, SFB389NFCPromptConfiguration_ptr);
      v26 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v25, v24, v23, v25);
      v34 = v26;
      v20 = v44;
      if (!v26)
      {
        v38 = sub_100023DF4();
        swift_allocError(&type metadata for B389PresentationConfig.Mode.DecodeError, v38, 0, 0);
        *v39 = 0;
        swift_willThrow();
        sub_100007348(v24, v23);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v18);
        return sub_100024118(v20);
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v18);
      sub_100007348(v24, v23);
      v29 = (uint64_t)v45;
      *(_QWORD *)v45 = v34;
      v28 = 2;
      goto LABEL_14;
  }
  v32 = sub_100023DF4();
  swift_allocError(&type metadata for B389PresentationConfig.Mode.DecodeError, v32, 0, 0);
  *v33 = 1;
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_3:
  v20 = v44;
  return sub_100024118(v20);
}

uint64_t sub_10001D6E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  unsigned __int8 *v41;
  int v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  void **v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  unint64_t v64;
  void *v65;
  uint64_t v66;
  void **v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unsigned __int8 *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  id v77[2];

  v2 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v2);
  v68 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for B389PresentationConfig.Mode(0);
  v5 = __chkstk_darwin(v4);
  v67 = (void **)((char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __chkstk_darwin(v5);
  v69 = (char *)&v66 - v8;
  v9 = __chkstk_darwin(v7);
  v71 = (unsigned __int8 *)&v66 - v10;
  v11 = __chkstk_darwin(v9);
  v70 = (uint64_t)&v66 - v12;
  v13 = __chkstk_darwin(v11);
  v73 = (char *)&v66 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v66 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v66 - v18;
  v20 = sub_100006A6C(&qword_1001A42A8);
  v72 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v23 = a1[4];
  sub_100023D8C(a1, v24);
  v25 = sub_100023DB0();
  v26 = v24;
  v27 = v74;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for B389PresentationConfig.Mode.CodingKeys, &type metadata for B389PresentationConfig.Mode.CodingKeys, v25, v26, v23);
  sub_100023F5C(v27, (uint64_t)v19, type metadata accessor for B389PresentationConfig.Mode);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v4);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v29 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v19, v29);
      v30 = 1;
    }
    else
    {
      sub_100023FA0((uint64_t)v19, type metadata accessor for B389PresentationConfig.Mode);
      v30 = 2;
    }
  }
  else
  {
    v30 = 0;
  }
  v31 = v22;
  v32 = (uint64_t)v73;
  LOBYTE(v77[0]) = 0;
  v33 = v75;
  KeyedEncodingContainer.encode(_:forKey:)(v30, v77, v20);
  if (v33)
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v31, v20);
  sub_100023F5C(v27, (uint64_t)v17, type metadata accessor for B389PresentationConfig.Mode);
  v35 = swift_getEnumCaseMultiPayload(v17, v4);
  if (v35)
  {
    if (v35 == 1)
    {
      v36 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v17, v36);
    }
    else
    {
      sub_100023FA0((uint64_t)v17, type metadata accessor for B389PresentationConfig.Mode);
    }
    sub_100023F5C(v27, v32, type metadata accessor for B389PresentationConfig.Mode);
    v38 = v70;
    sub_100023F5C(v32, v70, type metadata accessor for B389PresentationConfig.Mode);
    v39 = swift_getEnumCaseMultiPayload(v38, v4);
    v37 = (uint64_t)v69;
    if (!v39)
    {
      sub_100023FA0(v32, type metadata accessor for B389PresentationConfig.Mode);
      goto LABEL_24;
    }
    if (v39 != 1)
    {
      sub_100023FA0(v70, type metadata accessor for B389PresentationConfig.Mode);
      sub_100023FA0(v32, type metadata accessor for B389PresentationConfig.Mode);
      goto LABEL_24;
    }
    v40 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v70, v40);
  }
  else
  {
    sub_100023F5C(v27, v32, type metadata accessor for B389PresentationConfig.Mode);
    v37 = (uint64_t)v69;
  }
  sub_100023FA0(v32, type metadata accessor for B389PresentationConfig.Mode);
  v41 = v71;
  sub_100023F5C(v27, (uint64_t)v71, type metadata accessor for B389PresentationConfig.Mode);
  v42 = swift_getEnumCaseMultiPayload(v41, v4);
  if (v42)
  {
    if (v42 == 1)
    {
      v43 = sub_100006A6C(&qword_1001A7DF0);
      v44 = v71;
      v45 = v71[*(int *)(v43 + 48)];
      v46 = type metadata accessor for UUID(0);
      (*(void (**)(unsigned __int8 *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v44, v46);
    }
    else
    {
      sub_100023FA0((uint64_t)v71, type metadata accessor for B389PresentationConfig.Mode);
      v45 = 0;
    }
  }
  else
  {
    v45 = *v71;
  }
  LOBYTE(v77[0]) = 3;
  KeyedEncodingContainer.encode(_:forKey:)(v45, v77, v20);
LABEL_24:
  sub_100023F5C(v27, v37, type metadata accessor for B389PresentationConfig.Mode);
  v47 = v4;
  v48 = swift_getEnumCaseMultiPayload(v37, v4);
  v49 = type metadata accessor for UUID(0);
  v50 = *(_QWORD *)(v49 - 8);
  if (v48 == 1)
  {
    v51 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v68, v37, v49);
    v52 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56);
    v53 = (uint64_t)v51;
    v52(v51, 0, 1, v49);
  }
  else
  {
    v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
    v53 = (uint64_t)v68;
    v54(v68, 1, 1, v49);
    sub_100023FA0(v37, type metadata accessor for B389PresentationConfig.Mode);
  }
  LOBYTE(v77[0]) = 1;
  v55 = sub_100005B80(&qword_1001A42B0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v53, v77, v20, v49, v55);
  sub_10000D858(v53, &qword_1001A42A0);
  v56 = v67;
  sub_100023F5C(v27, (uint64_t)v67, type metadata accessor for B389PresentationConfig.Mode);
  if (swift_getEnumCaseMultiPayload(v56, v47) != 2)
  {
    sub_100023FA0((uint64_t)v56, type metadata accessor for B389PresentationConfig.Mode);
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v31, v20);
  }
  v57 = *v56;
  v58 = (void *)objc_opt_self(NSKeyedArchiver);
  v77[0] = 0;
  v59 = objc_msgSend(v58, "archivedDataWithRootObject:requiringSecureCoding:error:", v57, 1, v77);
  v60 = v77[0];
  if (!v59)
  {
    v65 = v60;
    _convertNSErrorToError(_:)(v60);

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v31, v20);
  }
  v61 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v59);
  v63 = v62;

  v77[0] = v61;
  v77[1] = v63;
  v76 = 2;
  v64 = sub_100023EC0();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v77, &v76, v20, &type metadata for Data, v64);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v31, v20);

  return sub_100007348((uint64_t)v61, (unint64_t)v63);
}

uint64_t sub_10001DDAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001D284(a1, a2);
}

uint64_t sub_10001DDC0(_QWORD *a1)
{
  return sub_10001D6E8(a1);
}

void *sub_10001DDD4()
{
  void *result;

  result = (void *)sub_100004BEC((uint64_t)_swiftEmptyArrayStorage);
  off_1001A3CD0 = result;
  return result;
}

uint64_t sub_10001DDF8()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_100006A6C(&qword_1001A4308);
  result = swift_allocObject(v0, 20, 7);
  *(_DWORD *)(result + 16) = 0;
  qword_1001A3CD8 = result;
  return result;
}

uint64_t sub_10001DE2C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  if (qword_1001A2F10 != -1)
    swift_once(&qword_1001A2F10, sub_10001DDF8);
  v1 = qword_1001A3CD8;
  v2 = (os_unfair_lock_s *)(qword_1001A3CD8 + 16);
  swift_retain(qword_1001A3CD8);
  os_unfair_lock_lock(v2);
  sub_1000C8490(v3, (uint64_t (*)(void))sub_100024060);
  os_unfair_lock_unlock(v2);
  swift_release(v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return v0;
}

_QWORD *sub_10001DED8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  void *v13;
  uint64_t v14;
  char v15;
  void *v16;

  if (qword_1001A2F08 != -1)
    swift_once(&qword_1001A2F08, sub_10001DDD4);
  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  swift_beginAccess(&off_1001A3CD0, &v14, 32, 0);
  v4 = off_1001A3CD0;
  if (*((_QWORD *)off_1001A3CD0 + 2))
  {
    swift_bridgeObjectRetain(v2);
    v5 = sub_100005D24(v3, v2);
    if ((v6 & 1) != 0)
      v7 = *(_QWORD *)(v4[7] + 8 * v5);
    else
      v7 = 0;
    v8 = v6 ^ 1;
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v7 = 0;
    v8 = 1;
  }
  swift_endAccess(&v14);
  v14 = v7;
  v15 = v8 & 1;
  v9 = sub_100006A6C((uint64_t *)&unk_1001A4320);
  result = Optional.unwrap(_:file:line:)(&v16, sub_100024078, a1, "SharingViewService/SDCommonSwifty.swift", 39, 2, 610, v9);
  v11 = (uint64_t)v16 - 1;
  if (v16 == (void *)1)
  {
    swift_beginAccess(&off_1001A3CD0, &v14, 33, 0);
    swift_bridgeObjectRetain(v2);
    sub_1000CD360(v3, v2);
    swift_endAccess(&v14);
    return (_QWORD *)swift_bridgeObjectRelease(v2);
  }
  else if (v16)
  {
    swift_beginAccess(&off_1001A3CD0, &v14, 33, 0);
    swift_bridgeObjectRetain(v2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_1001A3CD0);
    v16 = off_1001A3CD0;
    off_1001A3CD0 = (_UNKNOWN *)0x8000000000000000;
    sub_1000CF6DC(v11, v3, v2, isUniquelyReferenced_nonNull_native);
    v13 = off_1001A3CD0;
    off_1001A3CD0 = v16;
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v13);
    return (_QWORD *)swift_endAccess(&v14);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10001E0C8(Swift::String *a1)
{
  Swift::String v2;
  Swift::String v3;

  _StringGuts.grow(_:)(23);
  v2._object = (void *)0x8000000100137300;
  v2._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v2);
  String.append(_:)(a1[1]);
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  String.append(_:)(v3);
  return 0;
}

uint64_t sub_10001E148()
{
  uint64_t v0;

  sub_10001DE2C();
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_10001E168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE v11[24];

  if (qword_1001A2F08 != -1)
    swift_once(&qword_1001A2F08, sub_10001DDD4);
  swift_beginAccess(&off_1001A3CD0, v11, 32, 0);
  v6 = off_1001A3CD0;
  if (*((_QWORD *)off_1001A3CD0 + 2))
  {
    swift_bridgeObjectRetain(a2);
    v7 = sub_100005D24(a1, a2);
    if ((v8 & 1) != 0)
      v9 = *(_QWORD *)(v6[7] + 8 * v7);
    else
      v9 = 0;
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v9 = 0;
  }
  *a3 = v9;
  return swift_endAccess(v11);
}

uint64_t URL.fileUTType()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t inited;
  NSString *v7;
  void *v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v12[40];

  v1 = type metadata accessor for URLResourceValues(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100006A6C(&qword_1001A3D10);
  inited = swift_initStackObject(v5, v12);
  *(_OWORD *)(inited + 16) = xmmword_100131C40;
  *(_QWORD *)(inited + 32) = NSURLContentTypeKey;
  v7 = NSURLContentTypeKey;
  v8 = sub_1000227D8(inited);
  swift_setDeallocating(inited);
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy(inited + 32, 1, v9);
  URL.resourceValues(forKeys:)(v8);
  result = swift_bridgeObjectRelease(v8);
  if (!v0)
  {
    URLResourceValues.contentType.getter(result);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

Swift::String_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.fileTypeIdentifier()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t inited;
  NSString *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  Swift::String_optional result;
  _BYTE v17[40];

  v2 = type metadata accessor for URLResourceValues(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100006A6C(&qword_1001A3D10);
  inited = swift_initStackObject(v6, v17);
  *(_OWORD *)(inited + 16) = xmmword_100131C40;
  *(_QWORD *)(inited + 32) = NSURLTypeIdentifierKey;
  v8 = NSURLTypeIdentifierKey;
  v9 = sub_1000227D8(inited);
  swift_setDeallocating(inited);
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy(inited + 32, 1, v10);
  URL.resourceValues(forKeys:)(v9);
  v11 = swift_bridgeObjectRelease(v9);
  if (!v1)
  {
    v0 = URLResourceValues.typeIdentifier.getter(v11);
    inited = v12;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v13 = v0;
  v14 = (void *)inited;
  result.value._object = v14;
  result.value._countAndFlagsBits = v13;
  return result;
}

Swift::Int_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.fileSize()()
{
  uint64_t (*v0)(uint64_t);
  Swift::Bool v1;
  Swift::Int_optional result;

  v0 = sub_10001E8E4((void **)&NSURLFileSizeKey, (uint64_t (*)(uint64_t))&URLResourceValues.fileSize.getter);
  result.value = (Swift::Int)v0;
  result.is_nil = v1;
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.isDirectory()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t inited;
  NSString *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  _BYTE v15[40];

  v1 = type metadata accessor for URLResourceValues(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100006A6C(&qword_1001A3D10);
  inited = swift_initStackObject(v5, v15);
  *(_OWORD *)(inited + 16) = xmmword_100131C40;
  *(_QWORD *)(inited + 32) = NSURLIsDirectoryKey;
  v7 = NSURLIsDirectoryKey;
  v8 = sub_1000227D8(inited);
  swift_setDeallocating(inited);
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy(inited + 32, 1, v9);
  URL.resourceValues(forKeys:)(v8);
  v10 = swift_bridgeObjectRelease(v8);
  if (!v0)
  {
    v12 = URLResourceValues.isDirectory.getter(v10);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v11 = v12 & 1;
  }
  return v11 & 1;
}

void URL.realPathURL()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSURL *v6;
  char *v7;
  const __CFURL *v8;
  const __CFURL *v9;
  __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  NSString *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  CFURLRef v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  size_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[40];
  uint64_t v38;

  v3 = type metadata accessor for URLResourceValues(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (NSURL *)((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)((char *)&v34 - (char *)v6);
  URL._bridgeToObjectiveC()(v6);
  v9 = v8;
  v10 = (__CFString *)CFURLCopyFileSystemPath(v8, kCFURLPOSIXPathStyle);

  if (v10)
  {
    v38 = a1;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;
    v14 = String.utf8CString.getter(v11);
    swift_bridgeObjectRelease(v13);
    v15 = realpath_DARWIN_EXTSN((const char *)(v14 + 32), 0);
    swift_release(v14);
    if (!v15)
      goto LABEL_9;
    v16 = String.init(cString:)(v15);
    v18 = v17;
    free(v15);
    v35 = v16;
    v36 = v18;
    v19 = String.utf8CString.getter(v16);
    v34 = strlen((const char *)(v19 + 32));
    swift_release(v19);
    v20 = sub_100006A6C(&qword_1001A3D10);
    inited = swift_initStackObject(v20, v37);
    *(_OWORD *)(inited + 16) = xmmword_100131C40;
    *(_QWORD *)(inited + 32) = NSURLIsDirectoryKey;
    v22 = NSURLIsDirectoryKey;
    v23 = sub_1000227D8(inited);
    swift_setDeallocating(inited);
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy(inited + 32, 1, v24);
    URL.resourceValues(forKeys:)(v23);
    if (v1)
    {

      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v23);
      return;
    }
    v26 = swift_bridgeObjectRelease(v23);
    v27 = URLResourceValues.isDirectory.getter(v26);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v28 = v36;
    v29 = String.utf8CString.getter(v35);
    swift_bridgeObjectRelease(v28);
    v30 = CFURLCreateFromFileSystemRepresentation(0, (const UInt8 *)(v29 + 32), v34, v27 & 1);
    swift_release(v29);
    if (v30)
    {
      v31 = v38;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);

      v32 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
    }
    else
    {
LABEL_9:
      v33 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v38, 1, 1, v33);

    }
  }
  else
  {
    v25 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 1, 1, v25);
  }
}

Swift::Int_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.availableStorage()()
{
  uint64_t (*v0)(uint64_t);
  Swift::Bool v1;
  Swift::Int_optional result;

  v0 = sub_10001E8E4((void **)&NSURLVolumeAvailableCapacityKey, (uint64_t (*)(uint64_t))&URLResourceValues.volumeAvailableCapacity.getter);
  result.value = (Swift::Int)v0;
  result.is_nil = v1;
  return result;
}

uint64_t (*sub_10001E8E4(void **a1, uint64_t (*a2)(uint64_t)))(uint64_t)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[40];

  v5 = type metadata accessor for URLResourceValues(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_100006A6C(&qword_1001A3D10);
  inited = swift_initStackObject(v9, v18);
  *(_OWORD *)(inited + 16) = xmmword_100131C40;
  v11 = *a1;
  *(_QWORD *)(inited + 32) = *a1;
  v12 = v11;
  v13 = sub_1000227D8(inited);
  swift_setDeallocating(inited);
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy(inited + 32, 1, v14);
  URL.resourceValues(forKeys:)(v13);
  v15 = swift_bridgeObjectRelease(v13);
  if (!v2)
  {
    a2 = (uint64_t (*)(uint64_t))a2(v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return a2;
}

uint64_t Sequence.batch(size:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t WitnessTable;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v34 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Element);
  v32 = *(_QWORD *)(AssociatedTypeWitness - 8);
  ((void (*)(void))__chkstk_darwin)();
  v7 = (char *)&v31 - v6;
  type metadata accessor for Optional(0, AssociatedTypeWitness);
  v8 = ((uint64_t (*)(void))__chkstk_darwin)();
  v10 = (char *)&v31 - v9;
  v11 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v8);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for Sequence, &associated type descriptor for Sequence.Iterator);
  v33 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - v15;
  v17 = type metadata accessor for Array(0, AssociatedTypeWitness);
  v38 = ((uint64_t (*)(void))Array.init())();
  v37 = Array.init()(AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v35, a2);
  dispatch thunk of Sequence.makeIterator()(a2, a3);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, v14, &protocol requirements base descriptor for Sequence, &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
  v35 = v16;
  v19 = v14;
  dispatch thunk of IteratorProtocol.next()(v14, AssociatedConformanceWitness);
  v20 = v32;
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v21(v10, 1, AssociatedTypeWitness) != 1)
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v24(v7, v10, AssociatedTypeWitness);
    while (1)
    {
      Array.append(_:)(v7, v17);
      v25 = v37;
      v26 = swift_bridgeObjectRetain(v37);
      v27 = Array.count.getter(v26, AssociatedTypeWitness);
      swift_bridgeObjectRelease(v25);
      if (v27 > v34)
      {
        v36 = v25;
        v28 = type metadata accessor for Array(0, v17);
        swift_bridgeObjectRetain(v25);
        Array.append(_:)(&v36, v28);
        Array.removeAll(keepingCapacity:)(0);
      }
      dispatch thunk of IteratorProtocol.next()(v19, AssociatedConformanceWitness);
      if (v21(v10, 1, AssociatedTypeWitness) == 1)
        break;
      v24(v7, v10, AssociatedTypeWitness);
    }
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v19);
  v22 = v37;
  v36 = v37;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v17);
  if ((Collection.isEmpty.getter(v17, WitnessTable) & 1) != 0)
  {
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    v36 = v22;
    v29 = type metadata accessor for Array(0, v17);
    Array.append(_:)(&v36, v29);
  }
  return v38;
}

void sub_10001ED3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_10001ED9C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x10001EF80);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_10001EFA4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_10001F074(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10000D894((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10000D894((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_100024118(v12);
  return v7;
}

uint64_t sub_10001F074(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_10001F22C(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_10001F22C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10001F2C0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_10001F498(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_10001F498(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10001F2C0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_10001F434(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_10001F434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = sub_100006A6C(&qword_1001A4350);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_10001F498(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006A6C(&qword_1001A4350);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001F5E4(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100020934(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_10001F8A0(v6);
  return specialized ContiguousArray._endMutation()();
}

_QWORD *sub_10001F65C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v2 <= 0)
    {
      v4 = _swiftEmptyArrayStorage;
    }
    else
    {
      v3 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
      v4 = (_QWORD *)swift_allocObject(v3, 8 * v2 + 32, 7);
      v5 = j__malloc_size(v4);
      v6 = v5 - 32;
      if (v5 < 32)
        v6 = v5 - 25;
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(v1);
    v7 = sub_1000D1A08((unint64_t)(v4 + 4), v2, v1);
    v1 = v8;
    swift_bridgeObjectRelease(v7);
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    if (v1 < 0)
      v9 = v1;
    else
      v9 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v1);
    if (!v2)
      return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_10001F750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v4 = (_QWORD *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = (2 * (v6 >> 3)) | 1;
  v7 = sub_1000D23A0(&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_10002413C(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_10001F838(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

void sub_10001F8A0(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  __objc2_ivar *v13;
  unint64_t v14;
  Swift::Int v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t *v34;
  Swift::Int v35;
  Swift::Int v36;
  uint64_t *v37;
  uint64_t v38;
  Swift::Int v39;
  uint64_t v40;
  void *v41;
  Swift::Int v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  char v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  Swift::Int v114;
  id v115;
  Swift::Int v116;
  char *v117;
  Swift::Int v118;
  Swift::Int v119;
  id v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if (v3)
      sub_1000200EC(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_152;
  v114 = v4;
  v111 = a1;
  if (v3 < 2)
  {
    v9 = (char *)_swiftEmptyArrayStorage;
    v124 = (uint64_t)_swiftEmptyArrayStorage;
    v122 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
LABEL_104:
      if (v14 >= 2)
      {
        v104 = *v111;
        do
        {
          v105 = v14 - 2;
          if (v14 < 2)
            goto LABEL_133;
          if (!v104)
            goto LABEL_149;
          v106 = *(_QWORD *)&v9[16 * v105 + 32];
          v107 = *(_QWORD *)&v9[16 * v14 + 24];
          sub_100020248((id *)(v104 + 8 * v106), (id *)(v104 + 8 * *(_QWORD *)&v9[16 * v14 + 16]), v104 + 8 * v107, v122);
          if (v1)
            break;
          if (v107 < v106)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_1000207D4((uint64_t)v9);
          if (v105 >= *((_QWORD *)v9 + 2))
            goto LABEL_135;
          v108 = &v9[16 * v105 + 32];
          *(_QWORD *)v108 = v106;
          *((_QWORD *)v108 + 1) = v107;
          v109 = *((_QWORD *)v9 + 2);
          if (v14 > v109)
            goto LABEL_136;
          memmove(&v9[16 * v14 + 16], &v9[16 * v14 + 32], 16 * (v109 - v14));
          *((_QWORD *)v9 + 2) = v109 - 1;
          v14 = v109 - 1;
        }
        while (v109 > 2);
      }
LABEL_115:
      v110 = swift_bridgeObjectRelease(v9);
      *(_QWORD *)((v124 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v110);
      swift_bridgeObjectRelease(v124);
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_100013194(0, &qword_1001A4380, SFDevice_ptr);
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v122 = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v124 = v8;
  }
  v10 = v3;
  v11 = 0;
  v12 = *a1;
  v112 = *a1 - 8;
  v113 = *a1 + 16;
  v9 = (char *)_swiftEmptyArrayStorage;
  v13 = &stru_100197000;
  v123 = *a1;
  v119 = v10;
  while (1)
  {
    v15 = v11++;
    v117 = v9;
    v118 = v15;
    if (v11 < v10)
    {
      v16 = *(void **)(v12 + 8 * v11);
      v17 = *(void **)(v12 + 8 * v15);
      v18 = v16;
      v19 = v17;
      v20 = objc_msgSend(v18, v13[96].type);
      if (!v20)
        goto LABEL_150;
      v21 = v20;
      v120 = objc_msgSend(v20, "rssiFloor");

      v22 = objc_msgSend(v19, v13[96].type);
      if (!v22)
        goto LABEL_151;
      v23 = v22;
      v115 = objc_msgSend(v22, "rssiFloor");

      v15 = v118;
      v11 = v118 + 2;
      if (v118 + 2 < v119)
      {
        v24 = (id *)(v113 + 8 * v118);
        while (1)
        {
          v25 = *(v24 - 1);
          v26 = *v24;
          v27 = v25;
          v28 = objc_msgSend(v26, v13[96].type);
          if (!v28)
            goto LABEL_146;
          v29 = v28;
          v30 = objc_msgSend(v28, "rssiFloor");

          v31 = objc_msgSend(v27, v13[96].type);
          if (!v31)
            goto LABEL_147;
          v32 = v31;
          v33 = objc_msgSend(v31, "rssiFloor");

          if ((uint64_t)v120 < (uint64_t)v115 == (uint64_t)v30 >= (uint64_t)v33)
            break;
          ++v11;
          ++v24;
          v9 = v117;
          v13 = &stru_100197000;
          if (v119 == v11)
          {
            v11 = v119;
            goto LABEL_26;
          }
        }
        v9 = v117;
        v13 = &stru_100197000;
LABEL_26:
        v15 = v118;
      }
      v12 = v123;
      if ((uint64_t)v120 < (uint64_t)v115)
      {
        if (v11 < v15)
          goto LABEL_139;
        if (v15 < v11)
        {
          v34 = (uint64_t *)(v112 + 8 * v11);
          v35 = v11;
          v36 = v15;
          v37 = (uint64_t *)(v123 + 8 * v15);
          do
          {
            if (v36 != --v35)
            {
              if (!v123)
                goto LABEL_148;
              v38 = *v37;
              *v37 = *v34;
              *v34 = v38;
            }
            ++v36;
            --v34;
            ++v37;
          }
          while (v36 < v35);
        }
      }
    }
    if (v11 < v119)
    {
      if (__OFSUB__(v11, v15))
        goto LABEL_137;
      if (v11 - v15 < v114)
        break;
    }
LABEL_55:
    if (v11 < v15)
      goto LABEL_132;
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_100020634(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v54 = *((_QWORD *)v9 + 2);
    v53 = *((_QWORD *)v9 + 3);
    v14 = v54 + 1;
    v12 = v123;
    if (v54 >= v53 >> 1)
    {
      v103 = sub_100020634((char *)(v53 > 1), v54 + 1, 1, v9);
      v12 = v123;
      v9 = v103;
    }
    *((_QWORD *)v9 + 2) = v14;
    v55 = v9 + 32;
    v56 = &v9[16 * v54 + 32];
    *(_QWORD *)v56 = v15;
    *((_QWORD *)v56 + 1) = v11;
    if (v54)
    {
      while (1)
      {
        v57 = v14 - 1;
        if (v14 >= 4)
        {
          v62 = &v55[16 * v14];
          v63 = *((_QWORD *)v62 - 8);
          v64 = *((_QWORD *)v62 - 7);
          v68 = __OFSUB__(v64, v63);
          v65 = v64 - v63;
          if (v68)
            goto LABEL_121;
          v67 = *((_QWORD *)v62 - 6);
          v66 = *((_QWORD *)v62 - 5);
          v68 = __OFSUB__(v66, v67);
          v60 = v66 - v67;
          v61 = v68;
          if (v68)
            goto LABEL_122;
          v69 = v14 - 2;
          v70 = &v55[16 * v14 - 32];
          v72 = *(_QWORD *)v70;
          v71 = *((_QWORD *)v70 + 1);
          v68 = __OFSUB__(v71, v72);
          v73 = v71 - v72;
          if (v68)
            goto LABEL_124;
          v68 = __OFADD__(v60, v73);
          v74 = v60 + v73;
          if (v68)
            goto LABEL_127;
          if (v74 >= v65)
          {
            v92 = &v55[16 * v57];
            v94 = *(_QWORD *)v92;
            v93 = *((_QWORD *)v92 + 1);
            v68 = __OFSUB__(v93, v94);
            v95 = v93 - v94;
            if (v68)
              goto LABEL_131;
            v85 = v60 < v95;
            goto LABEL_92;
          }
        }
        else
        {
          if (v14 != 3)
          {
            v86 = *((_QWORD *)v9 + 4);
            v87 = *((_QWORD *)v9 + 5);
            v68 = __OFSUB__(v87, v86);
            v79 = v87 - v86;
            v80 = v68;
            goto LABEL_86;
          }
          v59 = *((_QWORD *)v9 + 4);
          v58 = *((_QWORD *)v9 + 5);
          v68 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          v61 = v68;
        }
        if ((v61 & 1) != 0)
          goto LABEL_123;
        v69 = v14 - 2;
        v75 = &v55[16 * v14 - 32];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v78 = __OFSUB__(v76, v77);
        v79 = v76 - v77;
        v80 = v78;
        if (v78)
          goto LABEL_126;
        v81 = &v55[16 * v57];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v68 = __OFSUB__(v82, v83);
        v84 = v82 - v83;
        if (v68)
          goto LABEL_129;
        if (__OFADD__(v79, v84))
          goto LABEL_130;
        if (v79 + v84 >= v60)
        {
          v85 = v60 < v84;
LABEL_92:
          if (v85)
            v57 = v69;
          goto LABEL_94;
        }
LABEL_86:
        if ((v80 & 1) != 0)
          goto LABEL_125;
        v88 = &v55[16 * v57];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v68 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v68)
          goto LABEL_128;
        if (v91 < v79)
          goto LABEL_14;
LABEL_94:
        v96 = v57 - 1;
        if (v57 - 1 >= v14)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!v12)
          goto LABEL_145;
        v97 = v9;
        v98 = &v55[16 * v96];
        v99 = *(_QWORD *)v98;
        v100 = &v55[16 * v57];
        v101 = *((_QWORD *)v100 + 1);
        sub_100020248((id *)(v12 + 8 * *(_QWORD *)v98), (id *)(v12 + 8 * *(_QWORD *)v100), v12 + 8 * v101, v122);
        if (v1)
        {
          v9 = v97;
          goto LABEL_115;
        }
        if (v101 < v99)
          goto LABEL_118;
        if (v57 > *((_QWORD *)v97 + 2))
          goto LABEL_119;
        *(_QWORD *)v98 = v99;
        *(_QWORD *)&v55[16 * v96 + 8] = v101;
        v102 = *((_QWORD *)v97 + 2);
        if (v57 >= v102)
          goto LABEL_120;
        v9 = v97;
        v14 = v102 - 1;
        memmove(&v55[16 * v57], v100 + 16, 16 * (v102 - 1 - v57));
        *((_QWORD *)v97 + 2) = v102 - 1;
        v12 = v123;
        if (v102 <= 2)
          goto LABEL_14;
      }
    }
    v14 = 1;
LABEL_14:
    v10 = v119;
    v13 = &stru_100197000;
    if (v11 >= v119)
      goto LABEL_104;
  }
  if (__OFADD__(v15, v114))
    goto LABEL_140;
  v39 = v119;
  if (v15 + v114 < v119)
    v39 = v15 + v114;
  if (v39 >= v15)
  {
    if (v11 != v39)
    {
      v40 = v112 + 8 * v11;
      v116 = v39;
      do
      {
        v41 = *(void **)(v12 + 8 * v11);
        v42 = v15;
        v121 = v40;
        while (1)
        {
          v43 = *(void **)v40;
          v44 = v41;
          v45 = v43;
          v46 = objc_msgSend(v44, v13[96].type);
          if (!v46)
            goto LABEL_142;
          v47 = v46;
          v48 = objc_msgSend(v46, "rssiFloor");

          v49 = objc_msgSend(v45, v13[96].type);
          if (!v49)
            goto LABEL_143;
          v50 = v49;
          v51 = objc_msgSend(v49, "rssiFloor");

          if ((uint64_t)v48 >= (uint64_t)v51)
            break;
          v12 = v123;
          if (!v123)
            goto LABEL_144;
          v52 = *(void **)v40;
          v41 = *(void **)(v40 + 8);
          *(_QWORD *)v40 = v41;
          *(_QWORD *)(v40 + 8) = v52;
          v40 -= 8;
          ++v42;
          v13 = &stru_100197000;
          if (v11 == v42)
            goto LABEL_46;
        }
        v12 = v123;
        v13 = &stru_100197000;
LABEL_46:
        ++v11;
        v40 = v121 + 8;
        v15 = v118;
      }
      while (v11 != v116);
      v11 = v116;
      v9 = v117;
    }
    goto LABEL_55;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1000200EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  __objc2_ivar *v6;
  char **v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  char **v19;
  __objc2_ivar *v20;
  id v21;
  BOOL v22;
  void *v23;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (a3 != a2)
  {
    v4 = a3;
    v27 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    v6 = &stru_100197000;
    v7 = &selRef_systemWhiteColor;
LABEL_5:
    v8 = *(void **)(v27 + 8 * v4);
    v9 = a1;
    v26 = v5;
    v28 = v4;
    while (1)
    {
      v10 = *(void **)v5;
      v11 = v8;
      v12 = v10;
      v13 = objc_msgSend(v11, v6[96].type);
      if (!v13)
        break;
      v14 = v13;
      v15 = objc_msgSend(v13, v7[17]);

      v16 = objc_msgSend(v12, v6[96].type);
      if (!v16)
        goto LABEL_14;
      v17 = v16;
      v18 = objc_msgSend(v16, v7[17]);
      v19 = v7;
      v20 = v6;
      v21 = v18;

      v22 = (uint64_t)v15 < (uint64_t)v21;
      v6 = v20;
      v7 = v19;
      if (v22)
      {
        if (!v27)
          goto LABEL_15;
        v23 = *(void **)v5;
        v8 = *(void **)(v5 + 8);
        *(_QWORD *)v5 = v8;
        *(_QWORD *)(v5 + 8) = v23;
        v5 -= 8;
        if (v28 != ++v9)
          continue;
      }
      v4 = v28 + 1;
      v5 = v26 + 8;
      if (v28 + 1 == a2)
        return;
      goto LABEL_5;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
}

uint64_t sub_100020248(id *a1, id *__src, unint64_t a3, char *a4)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  char **v12;
  void **v13;
  id *v14;
  void **v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id *v25;
  char *v26;
  id *v27;
  __objc2_ivar *v28;
  char **v29;
  id *v30;
  char *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  char **v37;
  id v38;
  id v39;
  void *v40;
  id *v41;
  id v42;
  char *v43;
  uint64_t result;
  char *v47;
  unint64_t v48;
  id *v50;
  char *v51;
  char *v52;
  id *v53;

  v4 = __src;
  v5 = (char *)__src - (char *)a1;
  v6 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0)
    v6 = (char *)__src - (char *)a1;
  v7 = v6 >> 3;
  v8 = a3 - (_QWORD)__src;
  v9 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v9 = a3 - (_QWORD)__src;
  v10 = v9 >> 3;
  v53 = a1;
  v52 = a4;
  if (v7 < v9 >> 3)
  {
    if (v5 < -7)
      goto LABEL_56;
    if (a4 != (char *)a1 || &a1[v7] <= (id *)a4)
      memmove(a4, a1, 8 * v7);
    v47 = &a4[8 * v7];
    v51 = v47;
    if ((unint64_t)v4 < a3 && v5 >= 8)
    {
      v11 = (void **)a4;
      v12 = &selRef_systemWhiteColor;
      v13 = a1;
      while (1)
      {
        v14 = v4;
        v15 = v11;
        v16 = *v11;
        v17 = *v4;
        v18 = v16;
        v19 = objc_msgSend(v17, "bleDevice");
        if (!v19)
          goto LABEL_54;
        v20 = v19;
        v21 = objc_msgSend(v19, v12[17]);

        v22 = objc_msgSend(v18, "bleDevice");
        if (!v22)
          goto LABEL_55;
        v23 = v22;
        v24 = objc_msgSend(v22, v12[17]);

        if ((uint64_t)v21 >= (uint64_t)v24)
        {
          if (v13 != v15)
            *v13 = *v15;
          v11 = v15 + 1;
          v52 = (char *)(v15 + 1);
          v25 = v14;
        }
        else
        {
          v25 = v14 + 1;
          v11 = v15;
          if (v13 >= v14 && v13 < v25)
          {
            v12 = &selRef_systemWhiteColor;
            if (v13 != v14)
              *v13 = *v14;
            goto LABEL_25;
          }
          *v13 = *v14;
        }
        v12 = &selRef_systemWhiteColor;
LABEL_25:
        ++v13;
        if (v11 < (void **)v47)
        {
          v4 = v25;
          if ((unint64_t)v25 < a3)
            continue;
        }
        v53 = v13;
        break;
      }
    }
LABEL_51:
    sub_10002072C((void **)&v53, (const void **)&v52, &v51);
    return 1;
  }
  if (v8 < -7)
    goto LABEL_56;
  if (a4 != (char *)__src || &__src[v10] <= (id *)a4)
    memmove(a4, __src, 8 * v10);
  v26 = &a4[8 * v10];
  v51 = v26;
  v53 = v4;
  if (a1 >= v4 || v8 < 8)
    goto LABEL_51;
  v27 = (id *)(a3 - 8);
  v28 = &stru_100197000;
  v29 = &selRef_systemWhiteColor;
  v30 = v4;
  while (1)
  {
    v48 = (unint64_t)v26;
    v50 = v4;
    v31 = v26 - 8;
    v32 = *--v30;
    v33 = *((id *)v26 - 1);
    v34 = v32;
    v35 = objc_msgSend(v33, v28[96].type);
    if (!v35)
      break;
    v36 = v35;
    v37 = v29;
    v38 = objc_msgSend(v35, v29[17]);

    v39 = objc_msgSend(v34, v28[96].type);
    if (!v39)
      goto LABEL_53;
    v40 = v39;
    v41 = v27 + 1;
    v42 = objc_msgSend(v39, v37[17]);

    if ((uint64_t)v38 >= (uint64_t)v42)
    {
      v51 = v31;
      v30 = v50;
      if ((unint64_t)v41 >= v48 && (unint64_t)v27 < v48)
      {
        v29 = &selRef_systemWhiteColor;
        if (v41 != (id *)v48)
          *v27 = *(id *)v31;
        v26 = v31;
        v43 = a4;
        v28 = &stru_100197000;
        goto LABEL_49;
      }
      *v27 = *(id *)v31;
      v26 = v31;
    }
    else
    {
      v26 = (char *)v48;
      if (v41 != v50 || v27 >= v50)
        *v27 = *v30;
      v53 = v30;
    }
    v43 = a4;
    v28 = &stru_100197000;
    v29 = &selRef_systemWhiteColor;
LABEL_49:
    if (v30 > a1)
    {
      --v27;
      v4 = v30;
      if (v26 > v43)
        continue;
    }
    goto LABEL_51;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100020634(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100006A6C(&qword_1001A4388);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10002072C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1000207D4(uint64_t a1)
{
  return sub_100020634(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000207E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  uint64_t v5;

  v4 = __OFADD__(a1, a2);
  v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x100020848);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_100020800 + dword_10002084C[a4 >> 62]))(v5);
}

uint64_t sub_10002085C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_10002086C + dword_100020914[a4 >> 62]))();
}

uint64_t sub_100020880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  if (BYTE6(a2) < a1 || a1 < 0)
  {
    __break(1u);
    JUMPOUT(0x10002090CLL);
  }
  return ((uint64_t (*)(void))((char *)&loc_1000208BC + dword_100020924[a3]))();
}

uint64_t sub_100020934(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_100020948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_10001ED3C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_100020A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = __DataStorage._bytes.getter();
  v11 = result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = __DataStorage._length.getter();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_10001ED3C(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_100020AD0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_100020B1C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_100020B50 + *((int *)qword_100020D28 + (v0 >> 62))))();
}

uint64_t sub_100020B60@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_100020D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char v29;
  char v30;
  void *v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for UUID(0);
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for B389PresentationConfig.Mode(0);
  v8 = __chkstk_darwin(v7);
  v10 = (void **)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v34 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v34 - v14;
  v16 = sub_100006A6C((uint64_t *)&unk_1001A42F0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v19[*(int *)(v17 + 48)];
  sub_100023F5C(a1, (uint64_t)v19, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023F5C(a2, (uint64_t)v20, type metadata accessor for B389PresentationConfig.Mode);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v7);
  if (!EnumCaseMultiPayload)
  {
    sub_100023F5C((uint64_t)v19, (uint64_t)v15, type metadata accessor for B389PresentationConfig.Mode);
    if (!swift_getEnumCaseMultiPayload(v20, v7))
    {
      v29 = *v15 ^ *v20;
      goto LABEL_8;
    }
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_100023F5C((uint64_t)v19, (uint64_t)v10, type metadata accessor for B389PresentationConfig.Mode);
    v31 = *v10;
    if (swift_getEnumCaseMultiPayload(v20, v7) == 2)
    {
      v32 = *(void **)v20;
      sub_100013194(0, (unint64_t *)&qword_1001A7260, NSObject_ptr);
      v30 = static NSObject.== infix(_:_:)(v31, v32);

      sub_100023FA0((uint64_t)v19, type metadata accessor for B389PresentationConfig.Mode);
      return v30 & 1;
    }

    goto LABEL_13;
  }
  sub_100023F5C((uint64_t)v19, (uint64_t)v13, type metadata accessor for B389PresentationConfig.Mode);
  v22 = *(int *)(sub_100006A6C(&qword_1001A7DF0) + 48);
  v23 = v13[v22];
  if (swift_getEnumCaseMultiPayload(v20, v7) != 1)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
LABEL_13:
    sub_10000D858((uint64_t)v19, (uint64_t *)&unk_1001A42F0);
LABEL_14:
    v30 = 0;
    return v30 & 1;
  }
  v24 = v20[v22];
  v26 = v34;
  v25 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v6, v20, v35);
  v27 = static UUID.== infix(_:_:)(v13, v6);
  v28 = *(void (**)(char *, uint64_t))(v26 + 8);
  v28(v6, v25);
  v28(v13, v25);
  if ((v27 & 1) == 0)
  {
    sub_100023FA0((uint64_t)v19, type metadata accessor for B389PresentationConfig.Mode);
    goto LABEL_14;
  }
  v29 = v23 ^ v24;
LABEL_8:
  sub_100023FA0((uint64_t)v19, type metadata accessor for B389PresentationConfig.Mode);
  v30 = v29 ^ 1;
  return v30 & 1;
}

BOOL sub_10002103C(uint64_t a1, uint64_t a2)
{
  int *v4;
  int *v5;
  uint64_t v6;
  double *v7;
  char v8;
  double *v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  _BOOL8 result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;

  if ((sub_100020D48(a1, a2) & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for B389PresentationConfig(0);
  if (*(_DWORD *)(a1 + v4[5]) != *(_DWORD *)(a2 + v4[5]))
    return 0;
  v5 = v4;
  if (*(unsigned __int8 *)(a1 + v4[6]) != *(unsigned __int8 *)(a2 + v4[6])
    || *(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7])
    || *(unsigned __int8 *)(a1 + v4[8]) != *(unsigned __int8 *)(a2 + v4[8])
    || *(_QWORD *)(a1 + v4[9]) != *(_QWORD *)(a2 + v4[9]))
  {
    return 0;
  }
  v6 = v4[10];
  v7 = (double *)(a1 + v6);
  v8 = *(_BYTE *)(a1 + v6 + 8);
  v9 = (double *)(a2 + v6);
  v10 = *(unsigned __int8 *)(a2 + v6 + 8);
  if ((v8 & 1) != 0)
  {
    if (!v10)
      return 0;
  }
  else
  {
    if (*v7 != *v9)
      LOBYTE(v10) = 1;
    if ((v10 & 1) != 0)
      return 0;
  }
  v11 = v4[11];
  v12 = (_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  if (!v13)
  {
    if (v15)
      return 0;
    goto LABEL_20;
  }
  if (!v15)
    return 0;
  if (*v12 == *v14 && v13 == v15
    || (v16 = _stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, *v14, v15, 0), result = 0, (v16 & 1) != 0))
  {
LABEL_20:
    v18 = v5[12];
    v19 = a1 + v18;
    v20 = *(_QWORD *)(a1 + v18);
    v21 = *(_QWORD *)(v19 + 8);
    v22 = (uint64_t *)(a2 + v18);
    v23 = *v22;
    v24 = v22[1];
    if (v21 >> 60 == 15)
    {
      if (v24 >> 60 == 15)
        return 1;
      goto LABEL_24;
    }
    if (v24 >> 60 == 15)
    {
LABEL_24:
      sub_100024020(v20, *(_QWORD *)(v19 + 8));
      sub_100024020(v23, v24);
      sub_100023F48(v20, v21);
      sub_100023F48(v23, v24);
      return 0;
    }
    sub_100024020(v20, *(_QWORD *)(v19 + 8));
    sub_100024020(v23, v24);
    sub_100020AD0(v20, v21);
    v26 = v25;
    sub_100023F48(v23, v24);
    sub_100023F48(v20, v21);
    return (v26 & 1) != 0;
  }
  return result;
}

BOOL sub_10002122C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  id v12;
  id v13;
  char v14;
  char v15;

  if (!a3)
    return a6 == 0;
  if (a6)
  {
    sub_100006B94(a1, a2);
    sub_100006B94(a4, a5);
    v12 = a3;
    v13 = a6;
    sub_100020AD0(a1, a2);
    if ((v14 & 1) != 0)
    {
      sub_100013194(0, (unint64_t *)&qword_1001A7260, NSObject_ptr);
      v15 = static NSObject.== infix(_:_:)(v12, v13);
      sub_100007348(a4, a5);
      sub_100007348(a1, a2);

      return v15 & 1;
    }
    sub_100007348(a4, a5);
    sub_100007348(a1, a2);

  }
  return 0;
}

uint64_t sub_100021338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10002205C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000C4C44);
}

uint64_t sub_100021360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10002205C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000C4C50);
}

uint64_t sub_100021388(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, _QWORD, uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(_QWORD *, uint64_t);
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD aBlock[5];
  uint64_t v79;

  v64 = a4;
  v65 = a5;
  v63 = a3;
  v76 = a2;
  v72 = a1;
  v73 = type metadata accessor for DispatchTimeInterval(0);
  v71 = *(_QWORD *)(v73 - 8);
  v7 = __chkstk_darwin(v73);
  v70 = (id *)((char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v69 = (char *)&v63 - v9;
  v10 = sub_100006A6C(&qword_1001A3CE0);
  __chkstk_darwin(v10);
  v67 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v66 - 8);
  v13 = __chkstk_darwin(v66);
  v68 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v75 = (char *)&v63 - v15;
  v16 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100021FDC(a2, v5 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_noLaterThan);
  sub_100013194(0, (unint64_t *)&unk_1001A4390, OS_dispatch_source_ptr);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100005B80((unint64_t *)&unk_1001A6F50, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
  v24 = sub_100006A6C(qword_1001A43A0);
  v25 = sub_100024144((unint64_t *)&unk_1001A6F60, qword_1001A43A0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v19, v23);
  v26 = v63;
  v27 = v63;
  v28 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v22, v26);

  v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  v30 = v12;
  v29(v22, v19);
  v31 = v74;
  *(_QWORD *)(v74 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_timer) = v28;
  v32 = v65;
  aBlock[4] = v64;
  v79 = v65;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001BB50;
  aBlock[3] = &unk_1001782A0;
  v33 = _Block_copy(aBlock);
  v77 = _swiftEmptyArrayStorage;
  v34 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v32);
  v35 = sub_100006A6C((uint64_t *)&unk_1001A4330);
  v36 = sub_100024144((unint64_t *)&qword_1001A38F8, (uint64_t *)&unk_1001A4330, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v77, v35, v36, v16, v34);
  v37 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
  v38 = DispatchWorkItem.init(flags:block:)(v18, v33);
  swift_release(v79);
  v39 = OBJC_IVAR____TtC18SharingViewService13PushableTimer_timer;
  v40 = *(_QWORD *)(v31 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_timer);
  ObjectType = swift_getObjectType(v40);
  swift_unknownObjectRetain(v40);
  v65 = v38;
  v42 = ObjectType;
  v43 = v66;
  OS_dispatch_source.setEventHandler(handler:)(v38, v42);
  v44 = v40;
  v45 = (uint64_t)v67;
  swift_unknownObjectRelease(v44);
  sub_100021FDC(v76, v45);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v45, 1, v43) == 1)
  {
    v46 = v68;
    static DispatchTime.distantFuture.getter();
    sub_10000D858(v45, &qword_1001A3CE0);
  }
  else
  {
    v46 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v68, v45, v43);
  }
  v47 = sub_100005B80(&qword_1001A3CE8, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchTime, (uint64_t)&protocol conformance descriptor for DispatchTime);
  v48 = v72;
  if ((dispatch thunk of static Comparable.< infix(_:_:)(v46, v72, v43, v47) & 1) != 0)
  {
    v49 = v75;
    v50 = v46;
  }
  else
  {
    v49 = v75;
    v50 = v48;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v49, v50, v43);
  v51 = *(void (**)(char *, uint64_t))(v30 + 8);
  v51(v46, v43);
  v52 = swift_getObjectType(*(_QWORD *)(v31 + v39));
  v53 = v43;
  v54 = v52;
  v55 = v71;
  v56 = *(void (**)(char *, _QWORD, uint64_t))(v71 + 104);
  v57 = v69;
  v58 = v73;
  v56(v69, enum case for DispatchTimeInterval.never(_:), v73);
  v59 = (char *)v70;
  *v70 = 0;
  v56(v59, enum case for DispatchTimeInterval.nanoseconds(_:), v58);
  v60 = v75;
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v75, v57, v59, v54);
  swift_release(v65);
  sub_10000D858(v76, &qword_1001A3CE0);
  v51(v48, v53);
  v61 = *(void (**)(_QWORD *, uint64_t))(v55 + 8);
  v61(v59, v58);
  v61(v57, v58);
  v51(v60, v53);
  return v74;
}

id sub_1000218FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  Swift::String v7;
  void *object;
  uint64_t v9;
  char v10;
  id result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v14 = a3;
  v15 = a1;
  swift_bridgeObjectRetain(a3);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9 = String.hashValue.getter(v13, v14);
  swift_bridgeObjectRelease(v14);
  swift_beginAccess(a4 + 16, &v13, 33, 0);
  v10 = sub_1000C9584(&v15, v9);
  result = (id)swift_endAccess(&v13);
  if ((v10 & 1) != 0)
  {
    v12 = *(_QWORD *)&a5[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav];
    if (v12)
      return objc_msgSend(a5, "presentViewController:animated:completion:", v12, 1, 0);
    else
      __break(1u);
  }
  return result;
}

uint64_t sub_1000219E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10002205C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100047F28);
}

uint64_t sub_100021A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10002205C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100047F34);
}

Swift::Int sub_100021A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100006A6C(&qword_1001A4300);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28, *(_QWORD *)(v3 + 40));
      swift_bridgeObjectRetain(v7);
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_100021BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[6];

  v3 = sub_100006A6C(&qword_1001A4358);
  __chkstk_darwin(v3);
  v5[4] = (char *)v5 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __asm { BR              X9 }
}

uint64_t sub_100021C58(uint64_t a1)
{
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int8x16_t *v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  int8x16_t *v21;
  int8x16_t v22;
  uint64_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x8_t v26;
  unint64_t v27;
  __int32 *v28;
  int v29;

  if (((unint64_t)BYTE6(v3) - 0x1000000000000000) >> 61 != 7)
    goto LABEL_32;
  if (BYTE6(v3) == 4)
  {
    *(_QWORD *)(v5 - 128) = v1;
    *(_QWORD *)(v5 - 120) = a1;
    sub_100006B94(v4, v3);
    *(_QWORD *)(v5 - 72) = _swiftEmptyArrayStorage;
    sub_1000C8B84(0, 0, 0);
    v6 = *(_QWORD *)(v5 - 72);
    if (v2)
    {
      if (v2 == 1)
        v7 = (int)v4;
      else
        v7 = *(_QWORD *)(v4 + 16);
      sub_100006B94(v4, v3);
      sub_100006B94(v4, v3);
    }
    else
    {
      v7 = 0;
    }
    ((void (*)(uint64_t, unint64_t, uint64_t))Data.Iterator.init(_:at:))(v4, v3, v7);
    *(_QWORD *)(v5 - 112) = v4;
    *(_QWORD *)(v5 - 104) = v3;
    sub_100007348(v4, v3);
    v10 = ((uint64_t (*)(_QWORD))type metadata accessor for Data.Iterator)(0);
    v11 = sub_100005B80((unint64_t *)&unk_1001A4370, (uint64_t (*)(uint64_t))&type metadata accessor for Data.Iterator, (uint64_t)&protocol conformance descriptor for Data.Iterator);
    dispatch thunk of IteratorProtocol.next()(v10, v11);
    v12 = 0;
    if ((*(_BYTE *)(v5 - 81) & 1) != 0)
    {
LABEL_11:
      v13 = *(_QWORD *)(v5 - 96);
      *(_QWORD *)(v13 + *(int *)(*(_QWORD *)(v5 - 120) + 36)) = v12;
      sub_10000D858(v13, &qword_1001A4358);
      sub_100007348(*(_QWORD *)(v5 - 112), *(_QWORD *)(v5 - 104));
      v14 = *(int8x16_t **)(v5 - 72);
      v15 = v14[1].u64[0];
      if (v15)
      {
        if (v15 >= 8)
        {
          v16 = v15 & 0x7FFFFFFFFFFFFFF8;
          v21 = v14 + 3;
          v22 = 0uLL;
          v23 = v15 & 0x7FFFFFFFFFFFFFF8;
          v24 = 0uLL;
          do
          {
            v22 = vorrq_s8(v21[-1], v22);
            v24 = vorrq_s8(*v21, v24);
            v21 += 2;
            v23 -= 8;
          }
          while (v23);
          v25 = vorrq_s8(v24, v22);
          v26 = vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL));
          v8 = (v26.i32[0] | v26.i32[1]);
          if (v15 == v16)
            goto LABEL_29;
        }
        else
        {
          v16 = 0;
          LODWORD(v8) = 0;
        }
        v27 = v15 - v16;
        v28 = &v14[2].i32[v16];
        do
        {
          v29 = *v28++;
          v8 = v29 | v8;
          --v27;
        }
        while (v27);
      }
      else
      {
        v8 = 0;
      }
LABEL_29:
      swift_release(v14);
      return v8;
    }
    v17 = 0;
    v12 = 0;
    while (v12 != 0x20000000)
    {
      if ((v12 & 0x1FFFFFFC) != 0)
        v18 = 0;
      else
        v18 = *(unsigned __int8 *)(v5 - 82) << (v17 & 0x18);
      *(_QWORD *)(v5 - 72) = v6;
      v20 = *(_QWORD *)(v6 + 16);
      v19 = *(_QWORD *)(v6 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1000C8B84(v19 > 1, v20 + 1, 1);
        v6 = *(_QWORD *)(v5 - 72);
      }
      *(_QWORD *)(v6 + 16) = v20 + 1;
      *(_DWORD *)(v6 + 4 * v20 + 32) = v18;
      dispatch thunk of IteratorProtocol.next()(v10, v11);
      v17 += 8;
      ++v12;
      if (*(_BYTE *)(v5 - 81) == 1)
        goto LABEL_11;
    }
    __break(1u);
LABEL_32:
    __break(1u);
    JUMPOUT(0x100021F54);
  }
  v8 = sub_100006A6C(&qword_1001A4360);
  v9 = sub_100024144(&qword_1001A4368, &qword_1001A4360, (uint64_t)&unk_100132A0C);
  swift_allocError(v8, v9, 0, 0);
  swift_willThrow();
  return v8;
}

uint64_t sub_100021F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10002205C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100041ED0);
}

unint64_t _s18SharingViewService10SDRunStateO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100176770, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

uint64_t sub_100021FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A3CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100022024(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_100022034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_10002205C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000BF308);
}

uint64_t sub_10002205C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  Swift::String v14;
  void *object;
  uint64_t v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  v21 = a1;
  swift_bridgeObjectRetain(a3);
  v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(object);
  v16 = String.hashValue.getter(v19, v20);
  swift_bridgeObjectRelease(v20);
  swift_beginAccess(a4 + 16, &v19, 33, 0);
  v17 = sub_1000C9584(&v21, v16);
  result = swift_endAccess(&v19);
  if ((v17 & 1) != 0)
    return a9(a5, a6, a7, a8);
  return result;
}

uint64_t sub_100022148(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __int16 v4;
  unint64_t v5;
  int8x16_t *v6;
  __int16 v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int8x16_t *v15;
  int8x16_t v16;
  uint64_t v17;
  int8x16_t v18;
  int8x16_t v19;
  unint64_t v20;
  unsigned __int16 *v21;
  int v22;
  int8x16_t *v24;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5 >> 60)
  {
    __break(1u);
LABEL_19:
    sub_1000C8BD8(v5 > 1, v2, 1);
    v6 = v24;
    goto LABEL_4;
  }
  if (v5 != 2)
  {
    v12 = sub_100006A6C(&qword_1001A4310);
    v13 = sub_100024144(&qword_1001A4318, &qword_1001A4310, (uint64_t)&unk_100132A0C);
    v14 = swift_allocError(v12, v13, 0, 0);
    swift_willThrow(v14);
    return v1;
  }
  v1 = a1;
  swift_bridgeObjectRetain(a1);
  sub_1000C8BD8(0, 0, 0);
  v6 = (int8x16_t *)_swiftEmptyArrayStorage;
  v4 = *(unsigned __int8 *)(v1 + 32);
  v3 = _swiftEmptyArrayStorage[2];
  swift_bridgeObjectRetain(v1);
  v24 = (int8x16_t *)_swiftEmptyArrayStorage;
  v5 = _swiftEmptyArrayStorage[3];
  v2 = v3 + 1;
  if (v3 >= v5 >> 1)
    goto LABEL_19;
LABEL_4:
  v6[1].i64[0] = v2;
  v6[2].i16[v3] = v4;
  v7 = *(unsigned __int8 *)(v1 + 33) << 8;
  v8 = v6[1].u64[1];
  v9 = v3 + 2;
  if (v2 >= v8 >> 1)
    sub_1000C8BD8(v8 > 1, v9, 1);
  v6[1].i64[0] = v9;
  v6[2].i16[v2] = v7;
  swift_bridgeObjectRelease_n(v1, 2);
  v10 = v6[1].u64[0];
  if (v10)
  {
    if (v10 >= 0x10)
    {
      v11 = v10 & 0x7FFFFFFFFFFFFFF0;
      v15 = v6 + 3;
      v16 = 0uLL;
      v17 = v10 & 0x7FFFFFFFFFFFFFF0;
      v18 = 0uLL;
      do
      {
        v16 = vorrq_s8(v15[-1], v16);
        v18 = vorrq_s8(*v15, v18);
        v15 += 2;
        v17 -= 16;
      }
      while (v17);
      v19 = vorrq_s8(v18, v16);
      *(int8x8_t *)v19.i8 = vorr_s8(*(int8x8_t *)v19.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v19, v19, 8uLL));
      v1 = v19.i32[0] | v19.i32[1] | ((unint64_t)(v19.i64[0] | HIDWORD(v19.i64[0])) >> 16);
      if (v10 == v11)
        goto LABEL_16;
    }
    else
    {
      v11 = 0;
      LODWORD(v1) = 0;
    }
    v20 = v10 - v11;
    v21 = (unsigned __int16 *)&v6[2] + v11;
    do
    {
      v22 = *v21++;
      v1 = v22 | v1;
      --v20;
    }
    while (v20);
LABEL_16:
    swift_release(v6);
    return v1;
  }
  swift_release(v6);
  return 0;
}

uint64_t sub_10002235C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;

  if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701080941, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x646F43726F6C6F63 && a2 == 0xE900000000000065)
  {
    v7 = 0xE900000000000065;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646F43726F6C6F63, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x7375655A7369 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7375655A7369, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x5079726574746162 && a2 == 0xEE0064616F6C7961)
  {
    v9 = 0xEE0064616F6C7961;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5079726574746162, 0xEE0064616F6C7961, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x5479726574746162 && a2 == 0xED0000776F4C6F6FLL)
  {
    v10 = 0xED0000776F4C6F6FLL;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x5479726574746162, 0xED0000776F4C6F6FLL, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x6572685469737372 && a2 == 0xED0000646C6F6873)
  {
    v11 = 0xED0000646C6F6873;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6572685469737372, 0xED0000646C6F6873, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0xD000000000000011)
  {
    v12 = 0x8000000100137650;
    if (a2 == 0x8000000100137650)
      goto LABEL_43;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100137650, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
LABEL_43:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if (a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065)
  {
    v13 = 0xE900000000000065;
LABEL_49:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D614E6E65766967, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_49;
  }
  if (a1 == 0x6E69766172676E65 && a2 == 0xED00006174614467)
  {
    swift_bridgeObjectRelease(0xED00006174614467);
    return 8;
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E69766172676E65, 0xED00006174614467, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v14 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

unint64_t sub_100022790(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100176808, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

void *sub_1000227D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::Int v12;
  void *result;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100006A6C(&qword_1001A4348);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v38 = v1;
    v39 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v39 + 8 * v4);
      v7 = *(_QWORD *)(v3 + 40);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v10 = v9;
      Hasher.init(_seed:)(v40, v7);
      v11 = v6;
      String.hash(into:)(v40, v8, v10);
      v12 = Hasher._finalize()();
      result = (void *)swift_bridgeObjectRelease(v10);
      v14 = -1 << *(_BYTE *)(v3 + 32);
      v15 = v12 & ~v14;
      v16 = v15 >> 6;
      v17 = *(_QWORD *)(v5 + 8 * (v15 >> 6));
      v18 = 1 << v15;
      if (((1 << v15) & v17) != 0)
      {
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15));
        v21 = v20;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        if (v19 == v22 && v21 == v23)
        {
LABEL_3:
          swift_bridgeObjectRelease_n(v21, 2);
LABEL_4:

          goto LABEL_5;
        }
        v25 = v23;
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
        swift_bridgeObjectRelease(v21);
        result = (void *)swift_bridgeObjectRelease(v25);
        if ((v26 & 1) != 0)
          goto LABEL_4;
        v27 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v27;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)(v5 + 8 * (v15 >> 6));
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15));
          v21 = v29;
          v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
          if (v28 == v30 && v21 == v31)
            goto LABEL_3;
          v33 = v31;
          v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v21, v30, v31, 0);
          swift_bridgeObjectRelease(v21);
          result = (void *)swift_bridgeObjectRelease(v33);
          if ((v34 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v16) = v18 | v17;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15) = v11;
      v35 = *(_QWORD *)(v3 + 16);
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v37;
LABEL_5:
      if (++v4 == v38)
        return (void *)v3;
    }
  }
  return &_swiftEmptySetSingleton;
}

unint64_t sub_100022A08()
{
  unint64_t result;

  result = qword_1001A3D18;
  if (!qword_1001A3D18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SDRunState, &type metadata for SDRunState);
    atomic_store(result, (unint64_t *)&qword_1001A3D18);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDRunState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100022A98 + 4 * byte_1001322EF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100022ACC + 4 * byte_1001322EA[v4]))();
}

uint64_t sub_100022ACC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100022AD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100022ADCLL);
  return result;
}

uint64_t sub_100022AE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100022AF0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100022AF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100022AFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDRunState()
{
  return &type metadata for SDRunState;
}

uint64_t type metadata accessor for OnceManager()
{
  return objc_opt_self(_TtC18SharingViewService11OnceManager);
}

uint64_t sub_100022B38()
{
  return type metadata accessor for PushableTimer(0);
}

uint64_t type metadata accessor for PushableTimer(uint64_t a1)
{
  return sub_100023778(a1, (uint64_t *)&unk_1001A3E10, (uint64_t)&nominal type descriptor for PushableTimer);
}

void sub_100022B54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100022BC8(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_100022BC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1001A3E20)
  {
    v2 = type metadata accessor for DispatchTime(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1001A3E20);
  }
}

uint64_t type metadata accessor for SDB389BubbleMonitor()
{
  return objc_opt_self(_TtC18SharingViewService19SDB389BubbleMonitor);
}

uint64_t sub_100022C3C(uint64_t a1)
{
  void *v2;

  v2 = &unk_100132500;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 88);
}

uint64_t type metadata accessor for InstanceCounter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100017500(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InstanceCounter);
}

_QWORD *initializeBufferWithCopyOfBuffer for ProgressiveGATTWriteManager(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for ProgressiveGATTWriteManager(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for ProgressiveGATTWriteManager(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for ProgressiveGATTWriteManager(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProgressiveGATTWriteManager(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProgressiveGATTWriteManager(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveGATTWriteManager()
{
  return &type metadata for ProgressiveGATTWriteManager;
}

char *sub_100022DC0(char *a1, char **a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  _OWORD *v25;
  unint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    v7 = type metadata accessor for B389PresentationConfig.Mode(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v7);
    if (EnumCaseMultiPayload == 2)
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      swift_storeEnumTagMultiPayload(a1, v7, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = sub_100006A6C(&qword_1001A7DF0);
      a1[*(int *)(v10 + 48)] = *((_BYTE *)a2 + *(int *)(v10 + 48));
      swift_storeEnumTagMultiPayload(a1, v7, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v14 = a3[6];
    *(_DWORD *)&a1[a3[5]] = *(_DWORD *)((char *)a2 + a3[5]);
    a1[v14] = *((_BYTE *)a2 + v14);
    v15 = a3[8];
    a1[a3[7]] = *((_BYTE *)a2 + a3[7]);
    a1[v15] = *((_BYTE *)a2 + v15);
    v16 = a3[10];
    *(_QWORD *)&a1[a3[9]] = *(char **)((char *)a2 + a3[9]);
    v17 = &a1[v16];
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = a3[11];
    v20 = a3[12];
    v21 = &a1[v19];
    v22 = (char **)((char *)a2 + v19);
    v23 = v22[1];
    *(_QWORD *)v21 = *v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = &a1[v20];
    v25 = (_OWORD *)((char *)a2 + v20);
    v26 = *(unint64_t *)((char *)a2 + v20 + 8);
    swift_bridgeObjectRetain(v23);
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)v24 = *v25;
    }
    else
    {
      v27 = *(_QWORD *)v25;
      sub_100006B94(v27, v26);
      *(_QWORD *)v24 = v27;
      *((_QWORD *)v24 + 1) = v26;
    }
  }
  return a1;
}

uint64_t type metadata accessor for B389PresentationConfig.Mode(uint64_t a1)
{
  return sub_100023778(a1, qword_1001A4230, (uint64_t)&nominal type descriptor for B389PresentationConfig.Mode);
}

uint64_t sub_100022F74(id *a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  unint64_t v9;

  v4 = type metadata accessor for B389PresentationConfig.Mode(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, v4);
  if (EnumCaseMultiPayload == 2)
  {

  }
  else if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  result = swift_bridgeObjectRelease(*(id *)((char *)a1 + *(int *)(a2 + 44) + 8));
  v8 = (uint64_t *)((char *)a1 + *(int *)(a2 + 48));
  v9 = v8[1];
  if (v9 >> 60 != 15)
    return sub_100007348(*v8, v9);
  return result;
}

void **sub_100023018(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  _OWORD *v23;
  unint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for B389PresentationConfig.Mode(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    swift_storeEnumTagMultiPayload(a1, v6, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = sub_100006A6C(&qword_1001A7DF0);
    *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v12 = a3[6];
  *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  v14 = a3[10];
  *(void **)((char *)a1 + a3[9]) = *(void **)((char *)a2 + a3[9]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = a3[11];
  v18 = a3[12];
  v19 = (void **)((char *)a1 + v17);
  v20 = (void **)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (char *)a1 + v18;
  v23 = (_OWORD *)((char *)a2 + v18);
  v24 = *(unint64_t *)((char *)a2 + v18 + 8);
  swift_bridgeObjectRetain(v21);
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)v22 = *v23;
  }
  else
  {
    v25 = *(_QWORD *)v23;
    sub_100006B94(v25, v24);
    *(_QWORD *)v22 = v25;
    *((_QWORD *)v22 + 1) = v24;
  }
  return a1;
}

void **sub_10002318C(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  if (a1 != a2)
  {
    sub_100023FA0((uint64_t)a1, type metadata accessor for B389PresentationConfig.Mode);
    v6 = type metadata accessor for B389PresentationConfig.Mode(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, v6);
    if (EnumCaseMultiPayload == 2)
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      swift_storeEnumTagMultiPayload(a1, v6, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for UUID(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = sub_100006A6C(&qword_1001A7DF0);
      *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(void **)((char *)a1 + a3[9]) = *(void **)((char *)a2 + a3[9]);
  v12 = a3[10];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  v16 = a3[11];
  v17 = (void **)((char *)a1 + v16);
  v18 = (void **)((char *)a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a3[12];
  v22 = (uint64_t *)((char *)a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  v24 = *(unint64_t *)((char *)a2 + v21 + 8);
  if (*(unint64_t *)((char *)a1 + v21 + 8) >> 60 != 15)
  {
    if (v24 >> 60 != 15)
    {
      v26 = *v23;
      sub_100006B94(v26, v24);
      v27 = *v22;
      v28 = v22[1];
      *v22 = v26;
      v22[1] = v24;
      sub_100007348(v27, v28);
      return a1;
    }
    sub_100023380((uint64_t)v22);
    goto LABEL_12;
  }
  if (v24 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    return a1;
  }
  v25 = *v23;
  sub_100006B94(v25, v24);
  *v22 = v25;
  v22[1] = v24;
  return a1;
}

uint64_t sub_100023380(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for Data - 1) + 8))();
  return a1;
}

_BYTE *sub_1000233B4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = type metadata accessor for B389PresentationConfig.Mode(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = sub_100006A6C(&qword_1001A7DF0);
    a1[*(int *)(v8 + 48)] = a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v9 = a3[6];
  *(_DWORD *)&a1[a3[5]] = *(_DWORD *)&a2[a3[5]];
  a1[v9] = a2[v9];
  v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v10] = a2[v10];
  v11 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  return a1;
}

_BYTE *sub_1000234C4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_100023FA0((uint64_t)a1, type metadata accessor for B389PresentationConfig.Mode);
    v6 = type metadata accessor for B389PresentationConfig.Mode(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = sub_100006A6C(&qword_1001A7DF0);
      a1[*(int *)(v8 + 48)] = a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v9 = a3[6];
  *(_DWORD *)&a1[a3[5]] = *(_DWORD *)&a2[a3[5]];
  a1[v9] = a2[v9];
  v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v10] = a2[v10];
  v11 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = a3[11];
  v15 = &a1[v14];
  v16 = (uint64_t *)&a2[v14];
  v18 = *v16;
  v17 = v16[1];
  v19 = v15[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease(v19);
  v20 = a3[12];
  v21 = (uint64_t *)&a1[v20];
  v22 = (uint64_t *)&a2[v20];
  v23 = *(_QWORD *)&a1[v20 + 8];
  if (v23 >> 60 != 15)
  {
    v24 = v22[1];
    if (v24 >> 60 != 15)
    {
      v25 = *v21;
      *v21 = *v22;
      v21[1] = v24;
      sub_100007348(v25, v23);
      return a1;
    }
    sub_100023380((uint64_t)v21);
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
  return a1;
}

uint64_t sub_100023644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100023650);
}

uint64_t sub_100023650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for B389PresentationConfig.Mode(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1000236DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000236E8);
}

uint64_t sub_1000236E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for B389PresentationConfig.Mode(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for B389PresentationConfig(uint64_t a1)
{
  return sub_100023778(a1, qword_1001A4168, (uint64_t)&nominal type descriptor for B389PresentationConfig);
}

uint64_t sub_100023778(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_1000237AC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  result = type metadata accessor for B389PresentationConfig.Mode(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int32 + 64;
    v4[2] = &unk_100132578;
    v4[3] = (char *)&value witness table for Builtin.Int8 + 64;
    v4[4] = &unk_100132578;
    v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[6] = &unk_100132590;
    v4[7] = &unk_1001325A8;
    v4[8] = &unk_1001325C0;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *sub_100023868(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v6 + 16) & ~(unint64_t)v6];
    swift_retain(v11);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = sub_100006A6C(&qword_1001A7DF0);
      a1[*(int *)(v10 + 48)] = *((_BYTE *)a2 + *(int *)(v10 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

void sub_10002395C(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {

  }
  else if (EnumCaseMultiPayload == 1)
  {
    v3 = type metadata accessor for UUID(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

void **sub_1000239C0(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v9 = *a2;
    *a1 = *a2;
    v10 = v9;
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = sub_100006A6C(&qword_1001A7DF0);
    *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void **sub_100023A8C(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  if (a1 != a2)
  {
    sub_100023FA0((uint64_t)a1, type metadata accessor for B389PresentationConfig.Mode);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v9 = *a2;
      *a1 = *a2;
      v10 = v9;
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = sub_100006A6C(&qword_1001A7DF0);
      *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_BYTE *sub_100023B70(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = sub_100006A6C(&qword_1001A7DF0);
    a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_100023C14(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_100023FA0((uint64_t)a1, type metadata accessor for B389PresentationConfig.Mode);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for UUID(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = sub_100006A6C(&qword_1001A7DF0);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100023CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_100023CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_100023CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_100023CFC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[3];

  v5[0] = &unk_100132578;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, &unk_100132578);
    v5[1] = v4;
    v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
    return 0;
  }
  return result;
}

_QWORD *sub_100023D8C(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_100023DB0()
{
  unint64_t result;

  result = qword_1001A4270;
  if (!qword_1001A4270)
  {
    result = swift_getWitnessTable(&unk_100132ADC, &type metadata for B389PresentationConfig.Mode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001A4270);
  }
  return result;
}

unint64_t sub_100023DF4()
{
  unint64_t result;

  result = qword_1001A4278;
  if (!qword_1001A4278)
  {
    result = swift_getWitnessTable(&unk_100132A9C, &type metadata for B389PresentationConfig.Mode.DecodeError);
    atomic_store(result, (unint64_t *)&qword_1001A4278);
  }
  return result;
}

unint64_t sub_100023E38()
{
  unint64_t result;

  result = qword_1001A4280;
  if (!qword_1001A4280)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1001A4280);
  }
  return result;
}

uint64_t sub_100023E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for B389PresentationConfig.Mode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100023EC0()
{
  unint64_t result;

  result = qword_1001A42B8;
  if (!qword_1001A42B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1001A42B8);
  }
  return result;
}

unint64_t sub_100023F04()
{
  unint64_t result;

  result = qword_1001A42C8;
  if (!qword_1001A42C8)
  {
    result = swift_getWitnessTable(&unk_100132A4C, &type metadata for B389PresentationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001A42C8);
  }
  return result;
}

uint64_t sub_100023F48(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100007348(a1, a2);
  return a1;
}

uint64_t sub_100023F5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100023FA0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100023FDC()
{
  unint64_t result;

  result = qword_1001A42E8;
  if (!qword_1001A42E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1001A42E8);
  }
  return result;
}

uint64_t sub_100024020(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100006B94(result, a2);
  return result;
}

void sub_100024034(uint64_t a1, unint64_t a2, void *a3)
{
  if (a3)
  {
    sub_100007348(a1, a2);

  }
}

_QWORD *sub_100024060()
{
  uint64_t v0;

  return sub_10001DED8(v0);
}

uint64_t sub_100024078()
{
  Swift::String *v0;

  return sub_10001E0C8(v0);
}

id sub_100024080()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 64), "invalidate");
}

uint64_t sub_100024090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000240A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000240A8(void *a1)
{
  _QWORD *v1;

  return sub_10001B0CC(a1, v1);
}

void sub_1000240B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10001B620(a1, a2, v2);
}

uint64_t sub_1000240B8(void *a1)
{
  _QWORD *v1;

  return sub_10001B6D4(a1, v1);
}

uint64_t sub_1000240C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000240E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100024104(uint64_t a1, uint64_t a2)
{
  return (a1 > a2) - (a1 < a2);
}

uint64_t sub_100024118(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10002413C(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_100024144(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100008048(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100024184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t type metadata accessor for IntegerPacker(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for IntegerPacker);
}

uint64_t sub_100024198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_1000241A0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1000241E0 + 4 * byte_1001322F4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100024200 + 4 * byte_1001322F9[v4]))();
}

_BYTE *sub_1000241E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100024200(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100024208(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100024210(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100024218(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100024220(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t type metadata accessor for IntegerPacker.PackError(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for IntegerPacker.PackError);
}

uint64_t getEnumTagSinglePayload for B389PresentationConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for B389PresentationConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_100024314 + 4 * byte_100132303[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_100024348 + 4 * byte_1001322FE[v4]))();
}

uint64_t sub_100024348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100024350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100024358);
  return result;
}

uint64_t sub_100024364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002436CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_100024370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100024378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for B389PresentationConfig.CodingKeys()
{
  return &type metadata for B389PresentationConfig.CodingKeys;
}

uint64_t getEnumTagSinglePayload for B389PresentationConfig.Mode.DecodeError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for B389PresentationConfig.Mode.DecodeError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100024470 + 4 * byte_10013230D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1000244A4 + 4 * byte_100132308[v4]))();
}

uint64_t sub_1000244A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000244AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1000244B4);
  return result;
}

uint64_t sub_1000244C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1000244C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1000244CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000244D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1000244E0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for B389PresentationConfig.Mode.DecodeError()
{
  return &type metadata for B389PresentationConfig.Mode.DecodeError;
}

uint64_t getEnumTagSinglePayload for B389SetupMainViewController.FindMyFinalizationState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for B389PresentationConfig.Mode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1000245D8 + 4 * byte_100132317[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10002460C + 4 * byte_100132312[v4]))();
}

uint64_t sub_10002460C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100024614(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002461CLL);
  return result;
}

uint64_t sub_100024628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100024630);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100024634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002463C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for B389PresentationConfig.Mode.CodingKeys()
{
  return &type metadata for B389PresentationConfig.Mode.CodingKeys;
}

void destroy for ProgressiveGATTWriteManager.WriteState(uint64_t *a1)
{
  id v1;

  if ((unint64_t)a1[2] >= 0xFFFFFFFF)
  {
    v1 = (id)a1[2];
    sub_100007348(*a1, a1[1]);

  }
}

uint64_t _s18SharingViewService27ProgressiveGATTWriteManagerV10WriteStateOwCP_0(uint64_t a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  id v6;

  v3 = (void *)a2[2];
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
  }
  else
  {
    v4 = *a2;
    v5 = a2[1];
    sub_100006B94(*a2, v5);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v3;
    v6 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ProgressiveGATTWriteManager.WriteState(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  __int128 v16;

  v4 = a2[2];
  if (*(_QWORD *)(a1 + 16) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v12 = *a2;
      v13 = a2[1];
      sub_100006B94(*a2, v13);
      *(_QWORD *)a1 = v12;
      *(_QWORD *)(a1 + 8) = v13;
      v14 = (void *)a2[2];
      *(_QWORD *)(a1 + 16) = v14;
      v15 = v14;
      return a1;
    }
LABEL_7:
    v16 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_OWORD *)a1 = v16;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    sub_100007348(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));

    goto LABEL_7;
  }
  v5 = *a2;
  v6 = a2[1];
  sub_100006B94(*a2, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  sub_100007348(v7, v8);
  v9 = (void *)a2[2];
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  v11 = v9;

  return a1;
}

__n128 initializeWithTake for ProgressiveGATTWriteManager.WriteState(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for ProgressiveGATTWriteManager.WriteState(uint64_t *a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = (void *)a1[2];
  if ((unint64_t)v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 < 0xFFFFFFFF)
  {
    sub_100007348(*a1, a1[1]);

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = *(_QWORD *)(a2 + 16);
    return a1;
  }
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_100007348(v6, v7);
  a1[2] = v5;

  return a1;
}

uint64_t getEnumTagSinglePayload for ProgressiveGATTWriteManager.WriteState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ProgressiveGATTWriteManager.WriteState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

_QWORD *sub_10002491C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[2] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveGATTWriteManager.WriteState()
{
  return &type metadata for ProgressiveGATTWriteManager.WriteState;
}

unint64_t sub_100024954()
{
  unint64_t result;

  result = qword_1001A44B0;
  if (!qword_1001A44B0)
  {
    result = swift_getWitnessTable(&unk_10013285C, &type metadata for B389PresentationConfig.Mode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001A44B0);
  }
  return result;
}

unint64_t sub_10002499C()
{
  unint64_t result;

  result = qword_1001A44B8;
  if (!qword_1001A44B8)
  {
    result = swift_getWitnessTable(&unk_1001328C4, &type metadata for B389PresentationConfig.Mode.DecodeError);
    atomic_store(result, (unint64_t *)&qword_1001A44B8);
  }
  return result;
}

unint64_t sub_1000249E4()
{
  unint64_t result;

  result = qword_1001A44C0;
  if (!qword_1001A44C0)
  {
    result = swift_getWitnessTable(&unk_10013297C, &type metadata for B389PresentationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001A44C0);
  }
  return result;
}

uint64_t sub_100024A28(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1001329E4, a1);
}

unint64_t sub_100024A3C()
{
  unint64_t result;

  result = qword_1001A44C8;
  if (!qword_1001A44C8)
  {
    result = swift_getWitnessTable(&unk_1001328EC, &type metadata for B389PresentationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001A44C8);
  }
  return result;
}

unint64_t sub_100024A84()
{
  unint64_t result;

  result = qword_1001A44D0;
  if (!qword_1001A44D0)
  {
    result = swift_getWitnessTable(&unk_100132914, &type metadata for B389PresentationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001A44D0);
  }
  return result;
}

unint64_t sub_100024ACC()
{
  unint64_t result;

  result = qword_1001A44D8;
  if (!qword_1001A44D8)
  {
    result = swift_getWitnessTable(&unk_100132794, &type metadata for B389PresentationConfig.Mode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001A44D8);
  }
  return result;
}

unint64_t sub_100024B14()
{
  unint64_t result;

  result = qword_1001A44E0;
  if (!qword_1001A44E0)
  {
    result = swift_getWitnessTable(&unk_1001327BC, &type metadata for B389PresentationConfig.Mode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001A44E0);
  }
  return result;
}

id SVSAdjustedImageView.__allocating_init(image:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithImage:", a1);

  return v3;
}

id SVSAdjustedImageView.init(image:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SVSAdjustedImageView();
  v3 = objc_msgSendSuper2(&v5, "initWithImage:", a1);

  return v3;
}

uint64_t type metadata accessor for SVSAdjustedImageView()
{
  return objc_opt_self(_TtC18SharingViewService20SVSAdjustedImageView);
}

id SVSAdjustedImageView.__allocating_init(image:highlightedImage:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), "initWithImage:highlightedImage:", a1, a2);

  return v5;
}

id SVSAdjustedImageView.init(image:highlightedImage:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for SVSAdjustedImageView();
  v5 = objc_msgSendSuper2(&v7, "initWithImage:highlightedImage:", a1, a2);

  return v5;
}

id SVSAdjustedImageView.init(frame:)(double a1, double a2, double a3, double a4)
{
  return sub_100024DD4(type metadata accessor for SVSAdjustedImageView, a1, a2, a3, a4);
}

id SVSAdjustedImageView.init(coder:)(void *a1)
{
  return sub_100024EAC(a1, type metadata accessor for SVSAdjustedImageView);
}

id SVSAdjustedImageView.__deallocating_deinit()
{
  return sub_100017198(type metadata accessor for SVSAdjustedImageView);
}

id SVSMediaPlayerView.init(frame:)(double a1, double a2, double a3, double a4)
{
  return sub_100024DD4(type metadata accessor for SVSMediaPlayerView, a1, a2, a3, a4);
}

id sub_100024DD4(uint64_t (*a1)(void), double a2, double a3, double a4, double a5)
{
  void *v5;
  objc_super v11;

  v11.receiver = v5;
  v11.super_class = (Class)a1();
  return objc_msgSendSuper2(&v11, "initWithFrame:", a2, a3, a4, a5);
}

uint64_t type metadata accessor for SVSMediaPlayerView()
{
  return objc_opt_self(_TtC18SharingViewService18SVSMediaPlayerView);
}

id SVSMediaPlayerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

id SVSMediaPlayerView.init(coder:)(void *a1)
{
  return sub_100024EAC(a1, type metadata accessor for SVSMediaPlayerView);
}

id sub_100024EAC(void *a1, uint64_t (*a2)(void))
{
  void *v2;
  id v4;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)a2();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id SVSMediaPlayerView.__deallocating_deinit()
{
  return sub_100017198(type metadata accessor for SVSMediaPlayerView);
}

id sub_100025058(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void))
{
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)a7();
  return objc_msgSendSuper2(&v12, "initWithFrame:", a2, a3, a4, a5);
}

id sub_1000250D0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

id sub_100025114()
{
  return sub_100017198(type metadata accessor for MediaPlayerView);
}

uint64_t sub_100025120(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = objc_msgSend(a1, "sublayers");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100013194(0, &qword_1001A45A0, CALayer_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  }
  else
  {
    v4 = (uint64_t)&_swiftEmptyArrayStorage;
  }
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v4);
    if (v5)
      goto LABEL_6;
LABEL_17:
    swift_bridgeObjectRelease(v4);
    sub_1000CC9C8((uint64_t)&_swiftEmptyArrayStorage);
    v12 = sub_1000D37B0(v4);
    swift_bridgeObjectRelease(v4);
    return v12;
  }
  if (v4 < 0)
    v11 = v4;
  else
    v11 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  result = _CocoaArrayWrapper.endIndex.getter(v11);
  v5 = result;
  if (!result)
    goto LABEL_17;
LABEL_6:
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
      else
        v8 = *(id *)(v4 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      v10 = sub_100025120();

      sub_1000CC9D4(v10);
    }
    while (v5 != v7);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_100025294(void *a1, void *a2, unsigned __int8 a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  char v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t inited;
  void *v21;
  id v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t i;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  objc_class *v35;
  char *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  unsigned __int8 v61;
  void *v62;
  _QWORD v63[6];
  objc_super v64;
  char v65[40];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v7 = OBJC_IVAR____TtC18SharingViewService16SVSProxVideoView_movieView;
  v8 = type metadata accessor for MediaPlayerView();
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8));
  v10 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v9, "init");
  v11 = &v10[OBJC_IVAR____TtC18SharingViewService16SVSProxVideoView_playing];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  v11[16] = a3;
  v12 = objc_allocWithZone((Class)AVMutableComposition);
  sub_100025EE0(a1, a2, a3);
  v13 = objc_msgSend(v12, "init");
  v61 = a3;
  v60 = a2;
  v62 = v13;
  if (a3)
  {
    if (a3 == 1)
    {
      sub_100025A90(0, a1, v13, (uint64_t)&v66);
      v58 = v67;
      v59 = v66;
      v14 = v70;
      v56 = v69;
      v57 = v68;
      v55 = v71;
      sub_100025F28(a1, a2, 1u);
    }
    else
    {
      v16 = a1;
      v17 = a2;
      sub_100025920(v16, v13);
      v18 = v16;
      sub_100025A90(a1, v17, v13, (uint64_t)&v66);
      v58 = v67;
      v59 = v66;
      v14 = v70;
      v56 = v69;
      v57 = v68;
      v55 = v71;

    }
    v15 = 0;
  }
  else
  {
    sub_100025920(a1, v13);
    sub_100025F28(a1, a2, 0);
    v58 = 0;
    v59 = 0;
    v56 = 0;
    v57 = 0;
    v14 = 0;
    v55 = 0;
    v15 = 1;
  }
  v19 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  inited = swift_initStackObject(v19, v65);
  *(_OWORD *)(inited + 16) = xmmword_100132030;
  v21 = *(void **)&v3[v7];
  v22 = objc_msgSend(v21, "layer");
  *(_QWORD *)(inited + 32) = v22;
  specialized Array._endMutation()(v22);
  v23 = inited;
  v24 = objc_msgSend(v21, "layer");
  v25 = sub_100025120(v24);

  v63[0] = v23;
  result = sub_1000CC9D4(v25);
  if (v23 >> 62)
  {
    if (v63[0] < 0)
      v31 = v63[0];
    else
      v31 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v63[0]);
    v27 = _CocoaArrayWrapper.endIndex.getter(v31);
    result = swift_bridgeObjectRelease(v23);
    if (!v27)
      goto LABEL_19;
  }
  else
  {
    v27 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v27)
      goto LABEL_19;
  }
  if (v27 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v27; ++i)
  {
    if ((v23 & 0xC000000000000001) != 0)
      v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v23);
    else
      v29 = *(id *)(v23 + 8 * i + 32);
    v30 = v29;
    objc_msgSend(v29, "setAllowsDisplayCompositing:", 0, v55, v56, v57, v58, v59, v60);

  }
LABEL_19:
  swift_bridgeObjectRelease(v23);
  v32 = objc_msgSend(objc_allocWithZone((Class)AVPlayerItem), "initWithAsset:", v62);
  v33 = v32;
  if ((v15 & 1) == 0)
  {
    v63[0] = v59;
    v63[1] = v58;
    v63[2] = v57;
    v63[3] = v56;
    v63[4] = v14;
    v63[5] = v55;
    objc_msgSend(v32, "setLoopTimeRange:", v63);
  }
  v34 = objc_msgSend(objc_allocWithZone((Class)AVPlayer), "initWithPlayerItem:", v33);
  objc_msgSend(v34, "_setDisallowsVideoLayerDisplayCompositing:", 1);
  v35 = (objc_class *)type metadata accessor for SVSProxVideoView();
  v64.receiver = v10;
  v64.super_class = v35;
  v36 = (char *)objc_msgSendSuper2(&v64, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v34, "setPreventsDisplaySleepDuringVideoPlayback:", 0);
  objc_msgSend(v34, "_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:", 1);
  objc_msgSend(v36, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v37 = OBJC_IVAR____TtC18SharingViewService16SVSProxVideoView_movieView;
  v38 = *(void **)&v36[OBJC_IVAR____TtC18SharingViewService16SVSProxVideoView_movieView];
  objc_msgSend(v38, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v36, "addSubview:", v38);
  v39 = objc_msgSend(v38, "leftAnchor");
  v40 = objc_msgSend(v36, "leftAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  objc_msgSend(v41, "setActive:", 1);
  v42 = objc_msgSend(*(id *)&v36[v37], "rightAnchor");
  v43 = objc_msgSend(v36, "rightAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  objc_msgSend(v44, "setActive:", 1);
  v45 = objc_msgSend(*(id *)&v36[v37], "topAnchor");
  v46 = objc_msgSend(v36, "topAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  objc_msgSend(v47, "setActive:", 1);
  v48 = objc_msgSend(*(id *)&v36[v37], "bottomAnchor");
  v49 = objc_msgSend(v36, "bottomAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

  objc_msgSend(v50, "setActive:", 1);
  objc_msgSend(v34, "setAllowsExternalPlayback:", 0);
  v51 = *(id *)&v36[v37];
  v52 = v34;
  v53 = objc_msgSend(v51, "layer");
  v54 = objc_opt_self(AVPlayerLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v53, v54, 0, 0, 0), "setPlayer:", v52);

  sub_100025F28(a1, v60, v61);
  return (uint64_t)v36;
}

id sub_100025920(void *a1, void *a2)
{
  CMTimeScale timescale;
  CMTimeFlags flags;
  CMTimeEpoch epoch;
  id v7;
  CMTimeValue v8;
  CMTimeEpoch v9;
  unint64_t v10;
  id v11;
  id result;
  id v13;
  uint64_t v14;
  id v15;
  CMTimeValue v16;
  CMTimeScale v17;
  CMTimeFlags v18;
  CMTimeEpoch v19;
  CMTimeValue value;
  unint64_t v21;
  CMTimeEpoch v22;
  CMTimeValue v23;
  unint64_t v24;
  CMTimeEpoch v25;
  id v26;

  timescale = kCMTimeZero.timescale;
  flags = kCMTimeZero.flags;
  epoch = kCMTimeZero.epoch;
  v7 = objc_msgSend(a1, "asset");
  objc_msgSend(v7, "duration");
  v8 = value;
  v9 = v22;
  v10 = v21;

  v11 = objc_msgSend(a1, "asset");
  v25 = v9;
  v26 = 0;
  v19 = epoch;
  value = kCMTimeZero.value;
  v21 = __PAIR64__(flags, timescale);
  v22 = epoch;
  v23 = v8;
  v24 = v10;
  v16 = kCMTimeZero.value;
  v17 = timescale;
  v18 = flags;
  LODWORD(a2) = objc_msgSend(a2, "insertTimeRange:ofAsset:atTime:error:", &value, v11, &v16, &v26);

  if ((_DWORD)a2)
    return v26;
  v15 = v26;
  v13 = v26;
  v14 = _convertNSErrorToError(_:)(v15);

  swift_willThrow();
  result = (id)swift_unexpectedError(v14, "SharingViewService/SVSLoopingMovieView.swift", 44, 1, 77);
  __break(1u);
  return result;
}

void sub_100025A90(id a1@<X1>, void *a2@<X0>, void *a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  CMTimeValue value;
  CMTimeScale timescale;
  CMTimeFlags flags;
  CMTimeEpoch epoch;
  CMTimeScale v10;
  CMTimeFlags v11;
  id v13;
  CMTimeScale v14;
  void *v15;
  id v16;
  CMTimeValue v17;
  CMTimeEpoch v18;
  uint64_t v19;
  id v20;
  unsigned int v21;
  CMTimeValue v22;
  id v23;
  id v24;
  CMTimeValue v25;
  CMTimeEpoch v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  CMTimeValue v30;
  CMTimeFlags v31;
  CMTimeEpoch v32;
  CMTimeEpoch v34;
  CMTime lhs;
  CMTimeValue v36;
  uint64_t v37;
  CMTimeEpoch v38;
  CMTime v39;
  CMTime rhs;

  v4 = a2;
  value = kCMTimeZero.value;
  timescale = kCMTimeZero.timescale;
  flags = kCMTimeZero.flags;
  epoch = kCMTimeZero.epoch;
  v10 = timescale;
  v11 = flags;
  v34 = epoch;
  if (a1)
  {
    v13 = objc_msgSend(a1, "asset");
    objc_msgSend(v13, "duration");
    value = lhs.value;
    timescale = lhs.timescale;
    flags = lhs.flags;
    epoch = lhs.epoch;

    v4 = a2;
  }
  lhs.value = kCMTimeZero.value;
  *(_QWORD *)&lhs.timescale = __PAIR64__(v11, v10);
  lhs.epoch = v34;
  rhs.value = value;
  rhs.timescale = timescale;
  rhs.flags = flags;
  rhs.epoch = epoch;
  CMTimeAdd(&v39, &lhs, &rhs);
  v30 = v39.value;
  v14 = v39.timescale;
  v31 = v39.flags;
  v32 = v39.epoch;
  v15 = v4;
  v16 = objc_msgSend(v4, "asset");
  objc_msgSend(v16, "duration");
  v17 = lhs.value;
  v18 = lhs.epoch;
  v19 = *(_QWORD *)&lhs.timescale;

  v20 = objc_msgSend(v15, "asset");
  v38 = v18;
  v39.value = 0;
  lhs.value = kCMTimeZero.value;
  lhs.timescale = v10;
  lhs.flags = v11;
  lhs.epoch = v34;
  v36 = v17;
  v37 = v19;
  rhs.value = v30;
  rhs.timescale = v14;
  rhs.flags = v31;
  rhs.epoch = v32;
  v21 = objc_msgSend(a3, "insertTimeRange:ofAsset:atTime:error:", &lhs, v20, &rhs, &v39);

  v22 = v39.value;
  if (v21)
  {
    v23 = (id)v39.value;
    v24 = objc_msgSend(v15, "asset");
    objc_msgSend(v24, "duration");
    v25 = lhs.value;
    v26 = lhs.epoch;
    v27 = *(_QWORD *)&lhs.timescale;

    *(_QWORD *)a4 = v30;
    *(_DWORD *)(a4 + 8) = v14;
    *(_DWORD *)(a4 + 12) = v31;
    *(_QWORD *)(a4 + 16) = v32;
    *(_QWORD *)(a4 + 24) = v25;
    *(_QWORD *)(a4 + 32) = v27;
    *(_QWORD *)(a4 + 40) = v26;
  }
  else
  {
    v28 = (id)v39.value;
    v29 = _convertNSErrorToError(_:)(v22);

    swift_willThrow();
    swift_unexpectedError(v29, "SharingViewService/SVSLoopingMovieView.swift", 44, 1, 83);
    __break(1u);
  }
}

id _s18SharingViewService016SVSAdjustedImageB0C5frameACSo6CGRectV_tcfC_0(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

void SVSProxVideoView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("SharingViewService.SVSProxVideoView", 35, "init(frame:)", 12, 0);
  __break(1u);
}

id SVSProxVideoView.__deallocating_deinit()
{
  return sub_100017198(type metadata accessor for SVSProxVideoView);
}

uint64_t type metadata accessor for SVSProxVideoView()
{
  return objc_opt_self(_TtC18SharingViewService16SVSProxVideoView);
}

uint64_t type metadata accessor for MediaPlayerView()
{
  return objc_opt_self(_TtC18SharingViewService15MediaPlayerView);
}

id sub_100025EE0(id result, void *a2, unsigned __int8 a3)
{
  id v3;

  if (a3 >= 2u)
  {
    if (a3 != 2)
      return result;
    v3 = result;
    result = a2;
  }
  return result;
}

void destroy for SVSProxVideoView.PlayingContent(uint64_t a1)
{
  sub_100025F28(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_100025F28(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2)
      return;

    a1 = a2;
  }

}

uint64_t _s18SharingViewService16SVSProxVideoViewC14PlayingContentOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100025EE0(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SVSProxVideoView.PlayingContent(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100025EE0(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_100025F28(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for SVSProxVideoView.PlayingContent(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SVSProxVideoView.PlayingContent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_100025F28(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SVSProxVideoView.PlayingContent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SVSProxVideoView.PlayingContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1000260E0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1000260E8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SVSProxVideoView.PlayingContent()
{
  return &type metadata for SVSProxVideoView.PlayingContent;
}

uint64_t sub_100026104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A45B0);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A45B0);
  if (qword_1001A2EF0 != -1)
    swift_once(&qword_1001A2EF0, sub_100018CB8);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_100026194(uint64_t *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  NSString v5;
  NSString v6;
  uint64_t v7;
  NSString v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v2 = v1;
  v29 = a1[1];
  v30 = *a1;
  v27 = a1[3];
  v28 = a1[2];
  v32 = a1[4];
  v35 = a1[8];
  v36 = a1[7];
  v26 = a1[9];
  v4 = a1[10];
  v33 = a1[12];
  v34 = a1[11];
  v31 = *(_OWORD *)(a1 + 5);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v5);

  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v6);

  v7 = swift_allocObject(&unk_100178750, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v1);
  v25 = v4;
  swift_bridgeObjectRetain(v4);
  swift_retain(v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  aBlock[4] = sub_1000270BC;
  v38 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B5D0;
  aBlock[3] = &unk_100178768;
  v9 = _Block_copy(aBlock);
  v10 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v8, 0, v9);

  _Block_release(v9);
  v11 = v38;
  swift_release(v7);

  v12 = &v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_model];
  v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_model];
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_model + 8];
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_model + 16];
  v16 = *((_QWORD *)v12 + 3);
  v18 = *((_QWORD *)v12 + 4);
  v17 = *((_QWORD *)v12 + 5);
  v19 = (void *)*((_QWORD *)v12 + 6);
  v20 = *((_QWORD *)v12 + 7);
  v23 = *((_OWORD *)v12 + 5);
  v24 = *((_OWORD *)v12 + 4);
  v21 = *((_QWORD *)v12 + 12);
  *(_QWORD *)v12 = v30;
  *((_QWORD *)v12 + 1) = v29;
  *((_QWORD *)v12 + 2) = v28;
  *((_QWORD *)v12 + 3) = v27;
  *((_QWORD *)v12 + 4) = v32;
  *(_OWORD *)(v12 + 40) = v31;
  *((_QWORD *)v12 + 7) = v36;
  *((_QWORD *)v12 + 8) = v35;
  *((_QWORD *)v12 + 9) = v26;
  *((_QWORD *)v12 + 10) = v25;
  *((_QWORD *)v12 + 11) = v34;
  *((_QWORD *)v12 + 12) = v33;
  sub_1000270DC(a1);
  return sub_10002715C(v13, v14, v15, v16, v18, v17, v19, v20, v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v21);
}

void sub_10002641C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100026E34(Strong, v4);

  }
}

void sub_10002646C()
{
  char *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSString v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  Class isa;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[5];
  uint64_t v58;
  objc_super v59;

  v59.receiver = v0;
  v59.super_class = (Class)type metadata accessor for PasswordSharingDoneViewController();
  objc_msgSendSuper2(&v59, "viewDidLoad");
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_model];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_model + 8];
  if (v3)
  {
    v4 = v2[10];
    v54 = v2[9];
    v55 = v2[11];
    v5 = v2[8];
    v47 = v4;
    v48 = v5;
    v56 = v2[7];
    v7 = v2[5];
    v6 = (void *)v2[6];
    v49 = v6;
    v8 = v2[3];
    v46 = v2[4];
    v50 = v8;
    v51 = v2[12];
    v52 = *v2;
    v53 = v2[2];
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v7);
    v9 = v6;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v4);
    objc_msgSend(v0, "setDismissalType:", 3);
    v10 = swift_allocObject(&unk_100178750, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v0);
    swift_retain(v10);
    v11 = String._bridgeToObjectiveC()();
    aBlock[4] = sub_1000271D4;
    v58 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B5D0;
    aBlock[3] = &unk_100178790;
    v12 = _Block_copy(aBlock);
    v13 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v11, 0, v12);

    _Block_release(v12);
    v14 = v58;
    swift_release(v10);
    swift_release(v14);
    objc_msgSend(v0, "setDismissButtonAction:", v13);

    v15 = (void *)objc_opt_self(_UIImageSymbolConfiguration);
    swift_bridgeObjectRetain(v7);
    v16 = objc_msgSend(v15, "configurationWithPointSize:", 72.0);
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    v18 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v17, v16);

    v19 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v18);
    objc_msgSend(v19, "setTintColor:", v9);
    objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v20 = objc_msgSend(v0, "contentView");
    objc_msgSend(v20, "addSubview:", v19);

    v21 = objc_msgSend(v0, "contentView");
    v22 = objc_msgSend(v21, "mainContentGuide");

    v23 = (void *)objc_opt_self(NSLayoutConstraint);
    v24 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
    v25 = swift_allocObject(v24, 64, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100132270;
    v26 = objc_msgSend(v19, "topAnchor");
    v27 = objc_msgSend(v22, "topAnchor");
    v28 = objc_msgSend(v26, "constraintGreaterThanOrEqualToAnchor:", v27);

    *(_QWORD *)(v25 + 32) = v28;
    v29 = objc_msgSend(v19, "bottomAnchor");
    v30 = objc_msgSend(v22, "bottomAnchor");
    v31 = objc_msgSend(v29, "constraintLessThanOrEqualToAnchor:", v30);

    *(_QWORD *)(v25 + 40) = v31;
    v32 = objc_msgSend(v19, "centerXAnchor");
    v33 = objc_msgSend(v22, "centerXAnchor");
    v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

    *(_QWORD *)(v25 + 48) = v34;
    v35 = objc_msgSend(v19, "centerYAnchor");
    v36 = objc_msgSend(v22, "centerYAnchor");
    v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

    *(_QWORD *)(v25 + 56) = v37;
    aBlock[0] = v25;
    specialized Array._endMutation()(v38);
    v39 = aBlock[0];
    sub_10000E868();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v39);
    objc_msgSend(v23, "activateConstraints:", isa);

    sub_10002715C(v52, v3, v53, v50, v46, v7, v49, v56, v48, v54, v47, v55, v51);
  }
  else
  {
    if (qword_1001A2F18 != -1)
      swift_once(&qword_1001A2F18, sub_100026104);
    v41 = type metadata accessor for Logger(0, v1);
    v42 = sub_10000E8E8(v41, (uint64_t)qword_1001A45B0);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Done view: model not available", v45, 2u);
      swift_slowDealloc(v45, -1, -1);
    }

  }
}

void sub_100026A60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (char *)Strong;
    if (qword_1001A2F18 != -1)
      swift_once(&qword_1001A2F18, sub_100026104);
    v6 = type metadata accessor for Logger(0, v4);
    v7 = sub_10000E8E8(v6, (uint64_t)qword_1001A45B0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Done dismissed", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    v11 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_presenter]);
    if (v11)
    {
      v13 = v11;
      sub_100095D74(5, v12);

      swift_unknownObjectRelease(v13);
    }
    else
    {

    }
  }
}

uint64_t sub_100026BC4(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for PasswordSharingDoneViewController();
  objc_msgSendSuper2(&v12, "viewDidAppear:", a1 & 1);
  if (qword_1001A2F18 != -1)
    swift_once(&qword_1001A2F18, sub_100026104);
  v5 = type metadata accessor for Logger(0, v4);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A45B0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Done ViewDidAppear", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_presenter]);
  if (result)
  {
    v11 = result;
    sub_1000965C8(v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_type]);
    return swift_unknownObjectRelease(v11);
  }
  return result;
}

uint64_t sub_100026E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  if (qword_1001A2F18 != -1)
    swift_once(&qword_1001A2F18, sub_100026104);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A45B0);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "Done button tapped", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_presenter);
  if (result)
  {
    v12 = result;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_type))
      sub_100095D74(5, v11);
    else
      sub_100096FA8();
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

id sub_100026FE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PasswordSharingDoneViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PasswordSharingDoneViewController()
{
  return objc_opt_self(_TtC18SharingViewService33PasswordSharingDoneViewController);
}

uint64_t sub_100027098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1000270BC(uint64_t a1)
{
  uint64_t v1;

  sub_10002641C(a1, v1);
}

uint64_t sub_1000270C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000270D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_1000270DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  v6 = a1[8];
  v7 = a1[10];
  swift_bridgeObjectRetain(a1[12]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v8 = v5;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t sub_10002715C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);

    swift_bridgeObjectRelease(a9);
    swift_bridgeObjectRelease(a11);
    return swift_bridgeObjectRelease(a13);
  }
  return result;
}

void sub_1000271D4(uint64_t a1)
{
  uint64_t v1;

  sub_100026A60(a1, v1);
}

uint64_t sub_1000271E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A4608);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A4608);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_100027274(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint8_t *v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  id v27;
  void **aBlock;
  _QWORD v30[4];
  uint64_t v31;

  if (qword_1001A2F20 != -1)
    swift_once(&qword_1001A2F20, sub_1000271E4);
  v3 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v3, (uint64_t)qword_1001A4608);
  v4 = v2;
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    v10 = *(void **)&v4[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig];
    if (v10)
    {
      aBlock = *(void ***)&v4[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig];
      v11 = v10;
      v12 = v8 + 4;
      v13 = v8 + 12;
    }
    else
    {
      v13 = v8 + 12;
      aBlock = 0;
      v12 = v8 + 4;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v30, v12, v13);
    *v9 = v10;

    _os_log_impl((void *)&_mh_execute_header, v5, v7, "nfcConfig = %@", v8, 0xCu);
    v14 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v9, 1, v14);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v15 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_coalescer;
  v16 = *(void **)&v4[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_coalescer];
  if (!v16)
  {
    v17 = objc_msgSend(objc_allocWithZone((Class)CUCoalescer), "init");
    v18 = *(void **)&v4[v15];
    *(_QWORD *)&v4[v15] = v17;

    v19 = *(void **)&v4[v15];
    if (!v19)
      goto LABEL_14;
    sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
    v20 = v19;
    v21 = (void *)static OS_dispatch_queue.main.getter();
    objc_msgSend(v20, "setDispatchQueue:", v21);

    v16 = *(void **)&v4[v15];
    if (v16)
    {
      objc_msgSend(v16, "setMinDelay:", 0.5);
      v22 = *(void **)&v4[v15];
      if (v22)
      {
        v23 = swift_allocObject(&unk_1001787D0, 24, 7);
        *(_QWORD *)(v23 + 16) = v4;
        v30[3] = sub_10002C270;
        v31 = v23;
        aBlock = _NSConcreteStackBlock;
        v30[0] = 1107296256;
        v30[1] = sub_10001BB50;
        v30[2] = &unk_1001787E8;
        v24 = _Block_copy(&aBlock);
        v25 = v31;
        v26 = v4;
        v27 = v22;
        objc_msgSend(v27, "setActionHandler:", v24, swift_release(v25).n128_f64[0]);
        _Block_release(v24);

        v16 = *(void **)&v4[v15];
        return objc_msgSend(v16, "trigger");
      }
LABEL_14:
      v16 = 0;
    }
  }
  return objc_msgSend(v16, "trigger");
}

void sub_1000275A4(char a1)
{
  char *v1;
  id v3;
  NSObject *v4;
  NSObject *v5;
  id v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for B389NFCStatusViewController();
  objc_msgSendSuper2(&v16, "viewWillAppear:", a1 & 1);
  if (qword_1001A30A8 != -1)
    swift_once(&qword_1001A30A8, sub_1000990D8);
  v3 = sub_10009375C(v1, 0, *(double *)&qword_1001AD718);
  v5 = v4;

  v6 = objc_msgSend(v1, "containerView");
  objc_msgSend(v6, "setSwipeDismissible:", 1);

  objc_msgSend(v1, "setModalPresentationStyle:", 4);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig])
  {
    v8 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_heightConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_heightConstraint] = v5;
    v9 = v5;

    -[NSObject setConstant:](v9, "setConstant:", *(double *)&qword_1001AD718);
    v10 = objc_msgSend(v1, "containerView");
    objc_msgSend(v10, "layoutIfNeeded");

    *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_uiStartTicks] = UpTicks()();
    sub_1000277F8();
  }
  else
  {
    if (qword_1001A2F20 != -1)
      swift_once(&qword_1001A2F20, sub_1000271E4);
    v11 = type metadata accessor for Logger(0, v7);
    v12 = sub_10000E8E8(v11, (uint64_t)qword_1001A4608);
    v9 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v9, v13);
    if (os_log_type_enabled(v9, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v14, "No NFC config.", v15, 2u);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      v9 = v5;
    }
  }

}

void sub_1000277F8()
{
  char *v0;
  double v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  char **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  BOOL v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t i;
  id v60;
  void *v61;
  int v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  SVSCardContainerView *v80;
  Class v81;
  objc_class *v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  NSString v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  id v103;
  id v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  void *v108;
  id v109;
  id v110;
  void *v111;
  id v112;
  id v113;
  void *v114;
  id v115;
  NSString v116;
  NSString v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  NSString v121;
  id v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  BOOL v128;
  NSString v129;
  NSString v130;
  id v131;
  id v132;
  unint64_t v133;
  void (*v134)(char *, id, _QWORD *);
  id v135;
  _QWORD *v136;
  id v137;
  NSURL *v138;
  void *v139;
  void *v140;
  id v141;
  id v142;
  uint64_t v143;
  void *v144;
  void *v145;
  double v146;
  void *v147;
  uint64_t v148;
  void *v149;
  id v150;
  id v151;
  id v152;
  SVSCardContainerView *v153;
  SVSCardContainerView *v154;
  Class isa;
  id v156;
  NSString v157;
  NSString v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  NSString v162;
  objc_class *v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  __objc2_ivar *v173;
  _QWORD *v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  id v188;
  id v189;
  id v190;
  SVSCardContainerView *v191;
  void *v192;
  id v193;
  NSString v194;
  NSString v195;
  char *v196;
  id v197;
  uint64_t v198;
  uint64_t v199;
  NSString v200;
  id v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  id v205;
  id v206;
  id v207;
  uint64_t v208;
  void *v209;
  uint64_t v210;
  void *v211;
  id v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  id v216;
  void *v217;
  id v218;
  id v219;
  id v220;
  id v221;
  id v222;
  id v223;
  double v224;
  id v225;
  unint64_t v226;
  unint64_t v227;
  uint64_t v228;
  id v229;
  void *v230;
  id v231;
  id v232;
  id v233;
  id v234;
  NSString v235;
  NSString v236;
  id v237;
  uint64_t v238;
  uint64_t v239;
  NSString v240;
  id v241;
  id v242;
  void *v243;
  unint64_t v244;
  unint64_t v245;
  NSString v246;
  id v247;
  id v248;
  id v249;
  id v250;
  char *v251;
  id v252;
  id v253;
  id v254;
  id v255;
  id v256;
  id v257;
  id v258;
  id v259;
  id v260;
  id v261;
  id v262;
  id v263;
  id v264;
  id v265;
  id v266;
  id v267;
  id v268;
  id v269;
  id v270;
  id v271;
  id v272;
  void *v273;
  uint64_t v274;
  void *v275;
  uint64_t v276;
  id v277;
  SVSCardContainerView *v278;
  Class v279;
  objc_class *v280;
  unint64_t v281;
  unint64_t v282;
  uint64_t v283;
  id v284;
  uint64_t v285;
  uint64_t v286;
  id v287;
  char *v288;
  uint64_t *v289;
  char *v290;
  id v291;
  unint64_t v292;
  id v293;
  char *v294;
  _QWORD *v295;
  id v296;
  int v297;
  const char *v298;
  id v299;
  char *v300;
  id v301;
  char *v302;
  NSObject *v303;
  void **aBlock;
  uint64_t v305;
  void *v306;
  void *v307;
  void *v308;
  uint64_t v309;
  char v310[24];
  _BYTE v311[32];
  uint64_t v312;

  v2 = v0;
  v3 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v3);
  v5 = (char *)&v287 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)type metadata accessor for URL(0);
  v7 = *(v6 - 1);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v287 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v13 = (char *)&v287 - v12;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_heightConstraint])
  {
    if (qword_1001A2F20 != -1)
      swift_once(&qword_1001A2F20, sub_1000271E4);
    v29 = type metadata accessor for Logger(0, v11);
    v30 = sub_10000E8E8(v29, (uint64_t)qword_1001A4608);
    v303 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter(v303, v31);
    if (!os_log_type_enabled(v303, v32))
      goto LABEL_24;
    v33 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v33 = 0;
    v34 = "No heightConstraint.";
LABEL_23:
    _os_log_impl((void *)&_mh_execute_header, v303, v32, v34, v33, 2u);
    swift_slowDealloc(v33, -1, -1);
LABEL_24:

    return;
  }
  v14 = (char *)OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig;
  v15 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig];
  if (!v15)
  {
    if (qword_1001A2F20 != -1)
      swift_once(&qword_1001A2F20, sub_1000271E4);
    v41 = type metadata accessor for Logger(0, v11);
    v42 = sub_10000E8E8(v41, (uint64_t)qword_1001A4608);
    v303 = Logger.logObject.getter(v42);
    v32 = static os_log_type_t.default.getter(v303, v43);
    if (!os_log_type_enabled(v303, v32))
      goto LABEL_24;
    v33 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v33 = 0;
    v34 = "No NFC config.";
    goto LABEL_23;
  }
  v303 = v15;
  v16 = (char *)objc_msgSend(v0, "mainController");
  if (!v16
    || (v18 = v16,
        v19 = *(void **)&v16[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_assetBundle],
        v20 = v19,
        v18,
        !v19))
  {
    if (qword_1001A2F20 != -1)
      swift_once(&qword_1001A2F20, sub_1000271E4);
    v35 = type metadata accessor for Logger(0, v17);
    v36 = sub_10000E8E8(v35, (uint64_t)qword_1001A4608);
    v37 = Logger.logObject.getter(v36);
    v39 = static os_log_type_t.default.getter(v37, v38);
    if (os_log_type_enabled(v37, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v39, "No asset bundle.", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }

    goto LABEL_24;
  }
  v291 = v10;
  v21 = (char **)((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_onDoneAction);
  v22 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_onDoneAction);
  v23 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_onDoneAction + 8);
  *v21 = 0;
  v21[1] = 0;
  sub_100012F60(v22, v23);
  v24 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_previousNFCConfig;
  v25 = *(void **)((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_previousNFCConfig);
  v302 = (char *)v2;
  v294 = v13;
  v295 = v6;
  if (!v25)
    goto LABEL_30;
  if (objc_msgSend(v25, "promptState") == (id)2)
  {
    v26 = -[NSObject promptState](v303, "promptState");
    v27 = v26 == (id)3;
    v28 = *(void **)((char *)v2 + v24);
    if (!v28)
    {
      if (v26 != (id)3)
      {
LABEL_30:
        v55 = (uint64_t *)((char *)v2
                        + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate);
        swift_beginAccess((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate, v311, 0, 0);
        v56 = *v55;
        if ((unint64_t)v56 >> 62)
        {
          if (v56 < 0)
            v285 = v56;
          else
            v285 = v56 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v56);
          v57 = _CocoaArrayWrapper.endIndex.getter(v285);
        }
        else
        {
          v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v56);
        }
        v289 = (uint64_t *)v21;
        v293 = v20;
        v58 = (unint64_t)&v312;
        v292 = v7;
        if (v57)
        {
          if (v57 < 1)
          {
            __break(1u);
LABEL_112:
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v58 > 1);
LABEL_75:
            v148 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
            specialized Array._endMutation()(v148);
            swift_endAccess(&aBlock);
            v149 = *(void **)&v5[(_QWORD)v2];
            if (v149)
            {
              v288 = v14;
              v150 = v149;
              v151 = objc_msgSend(v2, "containerView");
              v152 = sub_1000984E4(v150, v151, 260.0);

              v287 = v152;
              objc_msgSend(v152, "setConstant:", 15.0);
              v153 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
              v154 = v153;
              if (v298 == (const char *)1)
              {
                isa = setupOptionButton(inContainerView:)(v153).super.super.super.super.isa;

                v156 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                v157 = String._bridgeToObjectiveC()();
                v158 = String._bridgeToObjectiveC()();
                v159 = sub_100117218(v156, v157, v158);

                static String._unconditionallyBridgeFromObjectiveC(_:)(v159);
                v161 = v160;

                v162 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease(v161);
                -[objc_class setTitle:forState:](isa, "setTitle:forState:", v162, 0);

                -[objc_class setAlpha:](isa, "setAlpha:", v1);
                swift_beginAccess(v57, &aBlock, 33, 0);
                v163 = isa;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                v165 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v164 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v165 >= v164 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v164 > 1);
                v166 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v165, v163);
                specialized Array._endMutation()(v166);
                swift_endAccess(&aBlock);
                v2 = v302;
                v167 = *(void **)&v290[(_QWORD)v302];
                v168 = swift_allocObject(&unk_1001789D8, 24, 7);
                *(_QWORD *)(v168 + 16) = v167;
                v169 = v289;
                v170 = *v289;
                v171 = v289[1];
                *v289 = (uint64_t)sub_10002C404;
                v169[1] = v168;
                v172 = v167;
                sub_100012F60(v170, v171);
                -[objc_class addTarget:action:forControlEvents:](v163, "addTarget:action:forControlEvents:", v2, "_dismiss", 64);

                v173 = &stru_100197000;
                v174 = v295;
              }
              else
              {
                v175 = v301;
                -[SVSCardContainerView addSubview:](v153, "addSubview:", v301);

                v176 = -[NSObject message](v303, "message");
                objc_msgSend(v175, "setText:", v176);

                v177 = objc_msgSend(v299, v21[499]);
                objc_msgSend(v175, "setTextColor:", v177);

                objc_msgSend(v175, "setTextAlignment:", 1);
                v178 = objc_msgSend(v175, "topAnchor");
                v179 = objc_msgSend(v300, "bottomAnchor");
                v180 = objc_msgSend(v178, "constraintEqualToAnchor:constant:", v179, 12.0);

                objc_msgSend(v180, "setActive:", 1);
                v181 = objc_msgSend(v175, "heightAnchor");
                v182 = objc_msgSend(v181, "constraintEqualToConstant:", 20.0);

                objc_msgSend(v182, "setActive:", 1);
                v183 = objc_msgSend(v175, "widthAnchor");
                v184 = objc_msgSend(v2, "containerView");
                v185 = objc_msgSend(v184, "widthAnchor");

                v186 = objc_msgSend(v183, "constraintEqualToAnchor:", v185);
                objc_msgSend(v186, "setActive:", 1);

                v187 = objc_msgSend(v175, "centerXAnchor");
                v188 = objc_msgSend(v2, "containerView");
                v189 = objc_msgSend(v188, "centerXAnchor");

                v173 = &stru_100197000;
                v190 = objc_msgSend(v187, "constraintEqualToAnchor:", v189);

                objc_msgSend(v190, "setActive:", 1);
                v174 = v295;
                if (v298 == (const char *)2)
                {
                  v191 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
                  v192 = *(void **)((char *)v2
                                  + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_connectingLabel);
                  setupBottomLabel(inContainerView:forLabel:)(v191, (UILabel)v192);

                  v193 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                  v194 = String._bridgeToObjectiveC()();
                  v195 = String._bridgeToObjectiveC()();
                  v196 = (char *)v2;
                  v197 = sub_100117218(v193, v194, v195);

                  static String._unconditionallyBridgeFromObjectiveC(_:)(v197);
                  v199 = v198;

                  v200 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease(v199);
                  objc_msgSend(v192, "setText:", v200);

                  swift_beginAccess(v57, &aBlock, 33, 0);
                  v201 = v192;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  v203 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  v202 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
                  if (v203 >= v202 >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v202 > 1);
                  v204 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v203, v201);
                  specialized Array._endMutation()(v204);
                  swift_endAccess(&aBlock);
                  v205 = objc_msgSend(v196, "containerView");
                  v206 = objc_msgSend(v201, "topAnchor");
                  v207 = sub_10009829C(v205, 0, 0, (uint64_t)v206, 100, -8.0);

                  v208 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_spinner;
                  v209 = *(void **)&v196[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_spinner];
                  *(_QWORD *)&v196[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_spinner] = v207;

                  v210 = *(_QWORD *)&v196[v208];
                  if (!v210)
                    goto LABEL_126;
                  v2 = v196;
                  objc_msgSend(*(id *)(v210 + OBJC_IVAR____TtC18SharingViewService11TextSpinner_spinner), "startAnimating");
                  v211 = *(void **)&v196[v208];
                  if (!v211)
                    goto LABEL_126;
                  swift_beginAccess(v57, &aBlock, 33, 0);
                  v212 = v211;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  v214 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  v213 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
                  if (v214 >= v213 >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v213 > 1);
                  v215 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v214, v212);
                  specialized Array._endMutation()(v215);
                  swift_endAccess(&aBlock);
                  v173 = &stru_100197000;
                }
              }
              v216 = objc_msgSend(v2, v173[108].name);
              if (*(_QWORD *)&v5[(_QWORD)v2])
              {
                v217 = v216;
                objc_msgSend(v216, "sendSubviewToBack:");

                (*(void (**)(char *, _QWORD *))(v292 + 8))(v294, v174);
                v218 = v301;
                if (!v297)
                  goto LABEL_104;
                goto LABEL_103;
              }
              goto LABEL_124;
            }
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
            goto LABEL_125;
          }
          for (i = 0; i != v57; ++i)
          {
            if ((v56 & 0xC000000000000001) != 0)
              v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v56);
            else
              v60 = *(id *)(v56 + 8 * i + 32);
            v61 = v60;
            objc_msgSend(v60, "removeFromSuperview");

          }
          v62 = 0;
        }
        else
        {
          v62 = 0;
        }
        goto LABEL_52;
      }
LABEL_28:
      v46 = (void *)objc_opt_self(UIView);
      v47 = swift_allocObject(&unk_100178A00, 24, 7);
      *(_QWORD *)(v47 + 16) = v2;
      v308 = sub_10002C40C;
      v309 = v47;
      aBlock = _NSConcreteStackBlock;
      v305 = 1107296256;
      v306 = sub_10001BB50;
      v307 = &unk_100178A18;
      v48 = _Block_copy(&aBlock);
      v49 = v309;
      v50 = v2;
      swift_release(v49);
      v51 = swift_allocObject(&unk_100178A50, 24, 7);
      *(_QWORD *)(v51 + 16) = v50;
      v308 = sub_10002C468;
      v309 = v51;
      aBlock = _NSConcreteStackBlock;
      v305 = 1107296256;
      v306 = sub_1000AC858;
      v307 = &unk_100178A68;
      v52 = _Block_copy(&aBlock);
      v53 = v309;
      v54 = v50;
      swift_release(v53);
      objc_msgSend(v46, "animateWithDuration:delay:options:animations:completion:", 0x20000, v48, v52, 0.5, 0.0);
      _Block_release(v52);
      _Block_release(v48);

      return;
    }
  }
  else
  {
    v28 = *(void **)((char *)v2 + v24);
    if (!v28)
      goto LABEL_30;
    v27 = 0;
  }
  v44 = objc_msgSend(v28, "promptState");
  v45 = -[NSObject promptState](v303, "promptState");
  if (v27)
    goto LABEL_28;
  if (v44 == v45)
    goto LABEL_30;
  v63 = (uint64_t *)((char *)v2
                  + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate);
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate, v311, 0, 0);
  v56 = *v63;
  if ((unint64_t)v56 >> 62)
  {
    if (v56 < 0)
      v286 = v56;
    else
      v286 = v56 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v56);
    v64 = _CocoaArrayWrapper.endIndex.getter(v286);
  }
  else
  {
    v64 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v56);
  }
  v293 = v20;
  v292 = v7;
  v289 = (uint64_t *)v21;
  if (v64)
  {
    v300 = v5;
    v290 = v14;
    v301 = (id)objc_opt_self(UIView);
    if (v64 < 1)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    v65 = 0;
    v66 = v64;
    v67 = v302;
    do
    {
      if ((v56 & 0xC000000000000001) != 0)
        v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v65, v56);
      else
        v68 = *(id *)(v56 + 8 * v65 + 32);
      v69 = v68;
      ++v65;
      v70 = swift_allocObject(&unk_100178AA0, 24, 7);
      *(_QWORD *)(v70 + 16) = v69;
      v308 = sub_10002C4BC;
      v309 = v70;
      aBlock = _NSConcreteStackBlock;
      v305 = 1107296256;
      v306 = sub_10001BB50;
      v307 = &unk_100178AB8;
      v71 = _Block_copy(&aBlock);
      v72 = v309;
      v73 = v69;
      swift_release(v72);
      v74 = swift_allocObject(&unk_100178AF0, 32, 7);
      *(_QWORD *)(v74 + 16) = v67;
      *(_QWORD *)(v74 + 24) = v73;
      v308 = sub_10002C4FC;
      v309 = v74;
      aBlock = _NSConcreteStackBlock;
      v305 = 1107296256;
      v306 = sub_1000AC858;
      v307 = &unk_100178B08;
      v75 = _Block_copy(&aBlock);
      v76 = v309;
      v77 = v67;
      v78 = v73;
      swift_release(v76);
      objc_msgSend(v301, "animateWithDuration:delay:options:animations:completion:", 0x20000, v71, v75, 0.5, 0.0);
      _Block_release(v75);
      _Block_release(v71);

    }
    while (v66 != v65);
    v62 = 1;
    v2 = v302;
    v14 = v290;
    v5 = v300;
  }
  else
  {
    v62 = 1;
  }
LABEL_52:
  swift_bridgeObjectRelease(v56);
  v57 = (uint64_t)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate;
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate, v310, 1, 0);
  v79 = *(_QWORD *)v57;
  *(_QWORD *)v57 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v79);
  v298 = (const char *)-[NSObject promptState](v303, "promptState");
  v80 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v81 = setupTitleLabel(inContainerView:textAlignment:)(v80, NSTextAlignmentCenter).super.super.super.isa;

  swift_beginAccess(v57, &aBlock, 33, 0);
  v82 = v81;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v84 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v83 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v84 >= v83 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v83 > 1);
  v290 = v14;
  v85 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v84, v82);
  specialized Array._endMutation()(v85);
  swift_endAccess(&aBlock);
  v86 = -[NSObject localizedTitle](v303, "localizedTitle");
  -[objc_class setText:](v82, "setText:", v86);

  v297 = v62;
  if (v62)
    v1 = 0.0;
  else
    v1 = 1.0;
  -[objc_class setAlpha:](v82, "setAlpha:", v1);
  v87 = *(void **)((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_titleLabel);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_titleLabel) = v82;
  v300 = v82;

  v88 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  swift_beginAccess(v57, &aBlock, 33, 0);
  v89 = v88;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v91 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v90 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v91 >= v90 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v90 > 1);
  v92 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v89);
  specialized Array._endMutation()(v92);
  swift_endAccess(&aBlock);
  v93 = *(void **)((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_msgLbl);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_msgLbl) = v89;
  v94 = v89;

  v95 = (void *)objc_opt_self(UIFontDescriptor);
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontTextStyleBody);
  v97 = v96;
  v98 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v97);
  v99 = objc_msgSend(v95, "defaultFontDescriptorWithTextStyle:addingSymbolicTraits:options:", v98, 0x8000, 0);

  if (!v99)
    goto LABEL_118;
  v100 = (void *)objc_opt_self(UIFont);
  v101 = objc_msgSend(v100, "fontWithDescriptor:size:", v99, 0.0);

  objc_msgSend(v94, "setFont:", v101);
  v299 = (id)objc_opt_self(UIColor);
  v102 = objc_msgSend(v299, "blackColor");
  objc_msgSend(v94, "setTextColor:", v102);

  objc_msgSend(v94, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v94, "setNumberOfLines:", 0);
  v301 = v94;
  objc_msgSend(v94, "setAlpha:", v1);
  v103 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  swift_beginAccess(v57, &aBlock, 33, 0);
  v104 = v103;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v106 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v105 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v106 >= v105 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v105 > 1);
  v107 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v106, v104);
  specialized Array._endMutation()(v107);
  swift_endAccess(&aBlock);
  v108 = *(void **)&v302[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_numberLbl];
  *(_QWORD *)&v302[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_numberLbl] = v104;
  v109 = v104;

  v110 = objc_msgSend(v95, "defaultFontDescriptorWithTextStyle:addingSymbolicTraits:options:", UIFontTextStyleSubhead, 0x8000, 0);
  if (!v110)
    goto LABEL_119;
  v111 = v110;
  v112 = objc_msgSend(v100, "fontWithDescriptor:size:", v110, 0.0);

  objc_msgSend(v109, "setFont:", v112);
  v21 = &selRef_setTransitioningDelegate_;
  v113 = objc_msgSend(v299, "secondaryLabelColor");
  objc_msgSend(v109, "setTextColor:", v113);

  objc_msgSend(v109, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v109, "setNumberOfLines:", 1);
  objc_msgSend(v109, "setAlpha:", v1);
  v296 = v109;
  if (v298 != (const char *)4)
  {
    v129 = String._bridgeToObjectiveC()();
    v130 = String._bridgeToObjectiveC()();
    v20 = v293;
    v131 = objc_msgSend(v293, "URLForResource:withExtension:", v129, v130);

    v2 = v302;
    if (v131)
    {
      v132 = v291;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v131);

      v133 = v292;
      v134 = *(void (**)(char *, id, _QWORD *))(v292 + 32);
      v135 = v132;
      v136 = v295;
      v134(v5, v135, v295);
      (*(void (**)(char *, _QWORD, uint64_t, _QWORD *))(v133 + 56))(v5, 0, 1, v136);
      if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v133 + 48))(v5, 1, v136) != 1)
      {
        v134(v294, v5, v136);
        v137 = objc_allocWithZone((Class)AVURLAsset);
        URL._bridgeToObjectiveC()(v138);
        v140 = v139;
        v14 = (char *)objc_msgSend(v137, "initWithURL:options:", v139, 0);

        v141 = objc_msgSend(objc_allocWithZone((Class)AVPlayerItem), "initWithAsset:", v14);
        objc_allocWithZone((Class)type metadata accessor for SVSProxVideoView());
        v142 = v141;
        v143 = sub_100025294(v141, 0, 1u);
        v5 = (char *)OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_player;
        v144 = *(void **)((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_player);
        *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_player) = v143;

        v145 = *(void **)&v5[(_QWORD)v2];
        if (v297)
        {
          v146 = 0.0;
          if (v145)
            goto LABEL_73;
          __break(1u);
        }
        v146 = 1.0;
        if (!v145)
        {
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
          return;
        }
LABEL_73:
        v291 = v142;
        objc_msgSend(v145, "setAlpha:", v146);
        v147 = *(void **)&v5[(_QWORD)v2];
        if (v147)
        {
          swift_beginAccess(v57, &aBlock, 33, 0);
          v6 = v147;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          v7 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v58 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v7 < v58 >> 1)
            goto LABEL_75;
          goto LABEL_112;
        }
LABEL_122:
        __break(1u);
        goto LABEL_123;
      }
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
LABEL_120:
    (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v292 + 56))(v5, 1, 1, v295);
    goto LABEL_121;
  }
  v114 = (void *)objc_opt_self(NSBundle);
  v115 = objc_msgSend(v114, "mainBundle");
  v298 = "person.circle.fill";
  v116 = String._bridgeToObjectiveC()();
  v117 = String._bridgeToObjectiveC()();
  v118 = sub_100117218(v115, v116, v117);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v118);
  v120 = v119;

  v121 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v120);
  objc_msgSend(v300, "setText:", v121);

  v122 = -[NSObject phoneNumber](v303, "phoneNumber");
  if (v122)
  {
    v123 = v122;
    v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(v122);
    v126 = v125;

    v127 = String.count.getter(v124, v126);
    swift_bridgeObjectRelease(v126);
    v128 = v127 > 0;
  }
  else
  {
    v128 = 0;
  }
  v219 = objc_msgSend(v302, "containerView");
  v220 = sub_1000992F4(v219);
  v221 = objc_msgSend(v220, "bottomAnchor");
  v222 = objc_msgSend(v219, "bottomAnchor");
  if (qword_1001A30C8 != -1)
    swift_once(&qword_1001A30C8, sub_100099228);
  v223 = objc_msgSend(v221, "constraintEqualToAnchor:constant:", v222, -*((double *)&xmmword_1001A6F78 + 1));

  LODWORD(v224) = 1148846080;
  objc_msgSend(v223, "setPriority:", v224);
  objc_msgSend(v223, "setActive:", 1);

  objc_msgSend(v220, "setAlpha:", v1);
  swift_beginAccess(v57, &aBlock, 33, 0);
  v225 = v220;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v227 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v226 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v227 >= v226 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v226 > 1);
  v228 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v227, v225);
  specialized Array._endMutation()(v228);
  swift_endAccess(&aBlock);
  v229 = v302;
  v230 = *(void **)&v302[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_bigBtn];
  *(_QWORD *)&v302[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_bigBtn] = v225;
  v231 = v225;

  v232 = objc_msgSend(v299, "labelColor");
  objc_msgSend(v231, "setTitleColor:forState:", v232, 0);

  v233 = v301;
  if (v128)
    objc_msgSend(v231, "addTarget:action:forControlEvents:", v229, "contactPressed", 64);
  else
    objc_msgSend(v231, "addTarget:action:forControlEvents:", v229, "_dismissX", 64);
  v234 = objc_msgSend(v114, "mainBundle");
  v235 = String._bridgeToObjectiveC()();
  v236 = String._bridgeToObjectiveC()();
  v237 = sub_100117218(v234, v235, v236);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v237);
  v239 = v238;

  v240 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v239);
  objc_msgSend(v231, "setTitle:forState:", v240, 0);

  v241 = objc_msgSend(v229, "containerView");
  objc_msgSend(v241, "addSubview:", v233);

  objc_msgSend(v233, "setTextAlignment:", 1);
  v242 = -[NSObject userMessage](v303, "userMessage");
  if (v242)
  {
    v243 = v242;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v242);
    v245 = v244;

  }
  else
  {
    v245 = 0xE000000000000000;
  }
  v246 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v245);
  objc_msgSend(v233, "setText:", v246);

  v247 = objc_msgSend(v229, "containerView");
  v248 = v296;
  objc_msgSend(v247, "addSubview:", v296);

  objc_msgSend(v248, "setTextAlignment:", 1);
  v249 = -[NSObject message](v303, "message");
  objc_msgSend(v248, "setText:", v249);

  v250 = objc_msgSend(v248, "centerXAnchor");
  v251 = v300;
  v252 = objc_msgSend(v300, "centerXAnchor");
  v253 = objc_msgSend(v250, "constraintEqualToAnchor:", v252);

  objc_msgSend(v253, "setActive:", 1);
  v254 = objc_msgSend(v248, "widthAnchor");
  v255 = objc_msgSend(v231, "widthAnchor");
  v256 = objc_msgSend(v254, "constraintEqualToAnchor:", v255);

  objc_msgSend(v256, "setActive:", 1);
  v257 = objc_msgSend(v248, "topAnchor");
  v258 = objc_msgSend(v251, "bottomAnchor");
  v259 = objc_msgSend(v257, "constraintEqualToAnchor:constant:", v258, 12.0);

  objc_msgSend(v259, "setActive:", 1);
  v260 = objc_msgSend(v301, "topAnchor");
  v261 = objc_msgSend(v248, "bottomAnchor");
  v262 = objc_msgSend(v260, "constraintEqualToAnchor:constant:", v261, 20.0);

  objc_msgSend(v262, "setActive:", 1);
  v263 = objc_msgSend(v301, "widthAnchor");
  v264 = objc_msgSend(v231, "widthAnchor");
  v265 = objc_msgSend(v263, "constraintEqualToAnchor:", v264);

  objc_msgSend(v265, "setActive:", 1);
  v266 = objc_msgSend(v301, "centerXAnchor");
  v267 = objc_msgSend(v302, "containerView");
  v268 = objc_msgSend(v267, "centerXAnchor");

  v218 = v301;
  v269 = objc_msgSend(v266, "constraintEqualToAnchor:", v268);

  objc_msgSend(v269, "setActive:", 1);
  v2 = v302;
  v270 = objc_msgSend(v231, "topAnchor");
  v271 = objc_msgSend(v218, "bottomAnchor");
  v272 = objc_msgSend(v270, "constraintGreaterThanOrEqualToAnchor:constant:", v271, 16.0);

  objc_msgSend(v272, "setActive:", 1);
  v20 = v293;
  if (!v297)
    goto LABEL_104;
LABEL_103:
  v273 = (void *)objc_opt_self(UIView);
  v274 = swift_allocObject(&unk_100178988, 24, 7);
  *(_QWORD *)(v274 + 16) = v2;
  v308 = sub_10002C3FC;
  v309 = v274;
  aBlock = _NSConcreteStackBlock;
  v305 = 1107296256;
  v306 = sub_10001BB50;
  v307 = &unk_1001789A0;
  v275 = _Block_copy(&aBlock);
  v276 = v309;
  v277 = v2;
  swift_release(v276);
  objc_msgSend(v273, "animateWithDuration:delay:options:animations:completion:", 0x10000, v275, 0, 0.5, 0.3);
  _Block_release(v275);
LABEL_104:
  v278 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v279 = setupXButton(inContainerView:)(v278).super.super.super.super.isa;

  swift_beginAccess(v57, &aBlock, 33, 0);
  v280 = v279;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v282 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v281 = *(_QWORD *)((*(_QWORD *)v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v282 >= v281 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v281 > 1);
  v283 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v282, v280);
  specialized Array._endMutation()(v283);
  swift_endAccess(&aBlock);
  -[objc_class addTarget:action:forControlEvents:](v280, "addTarget:action:forControlEvents:", v2, "_dismissX", 64);
  v284 = objc_msgSend(v2, "containerView");
  objc_msgSend(v284, "layoutIfNeeded");

}

id sub_100029A6C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t *v4;
  uint64_t v5;
  char v6;
  id result;
  _BYTE v8[24];

  v4 = (uint64_t *)(a2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate);
  swift_beginAccess(a2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate, v8, 0, 0);
  v5 = *v4;
  swift_bridgeObjectRetain(v5);
  v6 = sub_100029AF0((uint64_t)a3, v5);
  result = (id)swift_bridgeObjectRelease(v5);
  if ((v6 & 1) == 0)
    return objc_msgSend(a3, "removeFromSuperview");
  return result;
}

uint64_t sub_100029AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v7 = v6;
      sub_100013194(0, (unint64_t *)&qword_1001A5510, UIView_ptr);
      v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v5)
        break;
      v5 = 5;
      while (1)
      {
        v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v16 = *(id *)(a2 + 8 * v5);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_6;
        ++v5;
        if (v15 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v10 = 1;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = v11;
      v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0)
        goto LABEL_6;
      ++v10;
      if (v12 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_100029C74(void *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint8_t *v35;
  NSObject *v36;
  unint64_t *v37;
  _QWORD *v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  id v60;
  NSURL *v61;
  void *v62;
  void *v63;
  void *v64;
  unint64_t v65;
  Class isa;
  uint64_t v68;
  unint64_t *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  NSObject *v77;
  unint64_t v78;

  v72 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v72);
  v3 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v74 - 8);
  v5 = __chkstk_darwin(v74);
  v73 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v75 = (char *)&v68 - v7;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006A6C(&qword_1001A42A0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v18 = (char *)&v68 - v17;
  if (!a1)
    goto LABEL_7;
  v19 = v4;
  v20 = objc_msgSend(a1, "baUUID");
  if (v20)
  {
    v21 = v20;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v15, v22, 1, v8);
  sub_10002C504((uint64_t)v15, (uint64_t)v18);
  v4 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v8))
  {
    sub_10000D858((uint64_t)v18, &qword_1001A42A0);
LABEL_7:
    v23 = 0;
    v24 = 0xE000000000000000;
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v18, v8);
  v25 = sub_10000D858((uint64_t)v18, &qword_1001A42A0);
  v23 = UUID.uuidString.getter(v25);
  v24 = v26;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_9:
  v27 = v74;
  v28 = v75;
  v29 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0)
    v29 = v23 & 0xFFFFFFFFFFFFLL;
  if (!v29)
  {
    if (qword_1001A2F20 != -1)
      swift_once(&qword_1001A2F20, sub_1000271E4);
    v30 = type metadata accessor for Logger(0, v16);
    sub_10000E8E8(v30, (uint64_t)qword_1001A4608);
    v31 = a1;
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v71 = v4;
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v70 = (_QWORD *)swift_slowAlloc(8, -1);
      v35 = v34 + 4;
      *(_DWORD *)v34 = 138412290;
      if (a1)
      {
        v77 = v31;
        v69 = &v78;
        v36 = v31;
        v37 = v69;
        v35 = v34 + 4;
      }
      else
      {
        v77 = 0;
        v37 = &v78;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v37, v35, v34 + 12);
      v27 = v74;
      v38 = v70;
      *v70 = a1;

      _os_log_impl((void *)&_mh_execute_header, v32, v33, "No baUUID on %@", v34, 0xCu);
      v39 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v38, 1, v39);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v34, -1, -1);
      v4 = v71;
    }
    else
    {

      v32 = v31;
    }

    v28 = v75;
  }
  v77 = 0;
  v78 = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease(v78);
  v77 = 0xD000000000000013;
  v78 = 0x80000001001379C0;
  v40._countAndFlagsBits = v23;
  v40._object = (void *)v24;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v24);
  v41._countAndFlagsBits = 0x3D656372756F733FLL;
  v41._object = (void *)0xEB0000000063666ELL;
  String.append(_:)(v41);
  v42 = v78;
  URL.init(string:)(v77, v78);
  swift_bridgeObjectRelease(v42);
  Optional.unwrap(_:file:line:)(v28, sub_10002A380, 0, "SharingViewService/B389NFCStatusView.swift", 42, 2, 229, v72);
  sub_10000D858((uint64_t)v3, &qword_1001A3618);
  if (qword_1001A2F20 != -1)
    swift_once(&qword_1001A2F20, sub_1000271E4);
  v44 = type metadata accessor for Logger(0, v43);
  sub_10000E8E8(v44, (uint64_t)qword_1001A4608);
  v45 = v73;
  v46 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v4 + 16))(v73, v28, v27);
  v47 = Logger.logObject.getter(v46);
  v49 = static os_log_type_t.default.getter(v47, v48);
  if (os_log_type_enabled(v47, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc(12, -1);
    v51 = v27;
    v52 = v45;
    v53 = swift_slowAlloc(32, -1);
    v77 = v53;
    *(_DWORD *)v50 = 136315138;
    v54 = sub_100005B80((unint64_t *)&unk_1001A7CD0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v55 = dispatch thunk of CustomStringConvertible.description.getter(v51, v54);
    v57 = v56;
    v76 = sub_10001EFA4(v55, v56, (uint64_t *)&v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v50 + 4, v50 + 12);
    swift_bridgeObjectRelease(v57);
    v58 = *(void (**)(char *, uint64_t))(v4 + 8);
    v59 = v52;
    v27 = v51;
    v28 = v75;
    v58(v59, v27);
    _os_log_impl((void *)&_mh_execute_header, v47, v49, "Opening FindMy NFC URL: %s", v50, 0xCu);
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1, -1);
    swift_slowDealloc(v50, -1, -1);
  }
  else
  {
    v58 = *(void (**)(char *, uint64_t))(v4 + 8);
    v58(v45, v27);
  }

  v60 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v60)
  {
    v62 = v60;
    URL._bridgeToObjectiveC()(v61);
    v64 = v63;
    v65 = sub_1000046D0((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v65);
    objc_msgSend(v62, "openSensitiveURL:withOptions:", v64, isa);

  }
  return ((uint64_t (*)(_QWORD *, uint64_t))v58)(v28, v27);
}

unint64_t sub_10002A380()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_10002A39C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate);
  swift_beginAccess(a1 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v2);
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease(v2);
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, "setAlpha:", 1.0);

    }
    return swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

Swift::UInt64 sub_10002A494(char a1)
{
  char *v1;
  uint64_t *v3;
  uint64_t v4;
  void (*v5)(_QWORD, uint64_t, __n128);
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  Swift::UInt64 v9;
  Swift::UInt64 v10;
  BOOL v11;
  Swift::UInt64 result;
  uint64_t v13;
  uint64_t v14;
  objc_super v15;

  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for B389NFCStatusViewController();
  objc_msgSendSuper2(&v15, "viewDidDisappear:", a1 & 1);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_coalescer], "invalidate");
  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler];
  v5 = *(void (**)(_QWORD, uint64_t, __n128))&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler + 8];
  if (v5)
  {
    v6 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_uiStartTicks;
    v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_uiStartTicks];
    v8 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler
                                   + 8]);
    if (v7)
    {
      v9 = UpTicks()();
      v10 = *(_QWORD *)&v1[v6];
      v11 = v9 >= v10;
      result = v9 - v10;
      if (!v11)
      {
        __break(1u);
        return result;
      }
      v8.n128_f64[0] = UpTicksToSecondsF(_:)(result);
    }
    else
    {
      v8.n128_u64[0] = 0;
    }
    if (v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response + 8])
      v14 = 1;
    else
      v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response];
    v5(0, v14, v8);
    sub_100012F60((uint64_t)v5, v4);
    v13 = *v3;
    v4 = v3[1];
  }
  else
  {
    v13 = 0;
  }
  *v3 = 0;
  v3[1] = 0;
  return sub_100012F60(v13, v4);
}

void sub_10002A5D4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  NSString v28;
  void *v29;
  void *v30;
  id v31;
  NSString v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  NSString v39;
  void *v40;
  id v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  void *v47;
  id v48;
  NSObject *v49;
  uint64_t v50;
  os_log_type_t v51;
  uint8_t *v52;
  _QWORD *v53;
  void *v54;
  id v55;
  uint8_t *v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  char *v62;
  void **aBlock;
  uint64_t v64;
  void (*v65)(uint64_t, void *);
  void *v66;
  double (*v67)(uint64_t);
  _QWORD *v68;

  v3 = v2;
  if (qword_1001A2F20 != -1)
    swift_once(&qword_1001A2F20, sub_1000271E4);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A4608);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "contactPressed", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig;
  v11 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig];
  if (v11 && (v12 = objc_msgSend(v11, "phoneNumber")) != 0)
  {
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v16 = v15;

    v17 = type metadata accessor for URLComponents(0);
    v18 = swift_allocBox(v17);
    URLComponents.init()();
    swift_bridgeObjectRetain(v16);
    v59 = v14;
    URLComponents.host.setter(v14, v16);
    v61 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
    v19 = (void *)objc_opt_self(NSBundle);
    v20 = objc_msgSend(v19, "mainBundle");
    v21 = String._bridgeToObjectiveC()();
    v22 = String._bridgeToObjectiveC()();
    v23 = sub_100117218(v20, v21, v22);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v25 = v24;

    v26 = swift_allocObject(&unk_100178848, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16, v3);
    v27 = (_QWORD *)swift_allocObject(&unk_100178870, 48, 7);
    v27[2] = v26;
    v27[3] = v18;
    v27[4] = v14;
    v27[5] = v16;
    swift_bridgeObjectRetain(v16);
    swift_retain(v26);
    swift_retain(v18);
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    v67 = sub_10002C34C;
    v68 = v27;
    aBlock = _NSConcreteStackBlock;
    v64 = 1107296256;
    v65 = sub_10001B5D0;
    v66 = &unk_100178888;
    v29 = _Block_copy(&aBlock);
    swift_release(v68);
    v30 = (void *)objc_opt_self(UIAlertAction);
    v60 = objc_msgSend(v30, "actionWithTitle:style:handler:", v28, 0, v29);
    _Block_release(v29);
    swift_release(v26);

    v31 = objc_msgSend(v19, "mainBundle");
    v32 = String._bridgeToObjectiveC()();
    v33 = String._bridgeToObjectiveC()();
    v34 = sub_100117218(v31, v32, v33);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v36 = v35;

    v37 = swift_allocObject(&unk_100178848, 24, 7);
    swift_unknownObjectWeakInit(v37 + 16, v3);
    v38 = (_QWORD *)swift_allocObject(&unk_1001788C0, 48, 7);
    v38[2] = v37;
    v38[3] = v18;
    v38[4] = v59;
    v38[5] = v16;
    swift_retain(v18);
    swift_retain(v37);
    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v36);
    v67 = sub_10002C390;
    v68 = v38;
    aBlock = _NSConcreteStackBlock;
    v64 = 1107296256;
    v65 = sub_10001B5D0;
    v66 = &unk_1001788D8;
    v40 = _Block_copy(&aBlock);
    v41 = objc_msgSend(v30, "actionWithTitle:style:handler:", v39, 0, v40, swift_release(v68).n128_f64[0]);
    _Block_release(v40);
    swift_release(v37);

    v42 = String._bridgeToObjectiveC()();
    v43 = sub_100117314(v42);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v45 = v44;

    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v45);
    v67 = (double (*)(uint64_t))nullsub_4;
    v68 = 0;
    aBlock = _NSConcreteStackBlock;
    v64 = 1107296256;
    v65 = sub_10001B5D0;
    v66 = &unk_100178900;
    v47 = _Block_copy(&aBlock);
    v48 = objc_msgSend(v30, "actionWithTitle:style:handler:", v46, 1, v47, swift_release(v68).n128_f64[0]);
    _Block_release(v47);

    objc_msgSend(v61, "addAction:", v60);
    objc_msgSend(v61, "addAction:", v41);
    objc_msgSend(v61, "addAction:", v48);
    objc_msgSend(v3, "presentViewController:animated:completion:", v61, 1, 0);
    swift_release(v18);

  }
  else
  {
    v62 = v2;
    v49 = Logger.logObject.getter(v62);
    v51 = static os_log_type_t.default.getter(v49, v50);
    if (os_log_type_enabled(v49, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(12, -1);
      v53 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v52 = 138412290;
      v54 = *(void **)&v3[v10];
      if (v54)
      {
        aBlock = *(void ***)&v3[v10];
        v55 = v54;
        v56 = v52 + 4;
        v57 = v52 + 12;
      }
      else
      {
        v57 = v52 + 12;
        aBlock = 0;
        v56 = v52 + 4;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v64, v56, v57);
      *v53 = v54;

      _os_log_impl((void *)&_mh_execute_header, v49, v51, "No phoneNumber on %@", v52, 0xCu);
      v58 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v53, 1, v58);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v52, -1, -1);

    }
    else
    {

    }
  }
}

double sub_10002AD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  double result;
  _BYTE *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  _BYTE v23[24];
  _BYTE v24[24];

  v8 = a2 + 16;
  type metadata accessor for URLComponents(0);
  v9 = swift_projectBox(a3);
  swift_beginAccess(v8, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v12 = (_BYTE *)Strong;
    v13 = objc_msgSend(objc_allocWithZone((Class)CTTelephonyNetworkInfo), "init");
    v14 = objc_msgSend(v13, "serviceSubscriberCellularProviders");
    if (v14
      && (v15 = v14,
          v16 = sub_100013194(0, &qword_1001A4990, CTCarrier_ptr),
          v17 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String, v16, &protocol witness table for String), v15, v18 = *(_QWORD *)(v17 + 16), swift_bridgeObjectRelease(v17), v18))
    {
      v19 = 0xE300000000000000;
      v20 = 7103860;
    }
    else
    {
      v19 = 0xEE006F696475612DLL;
      v20 = 0x656D697465636166;
    }

    swift_beginAccess(v9, v23, 33, 0);
    swift_bridgeObjectRetain(v19);
    URLComponents.scheme.setter(v20, v19);
    swift_endAccess(v23);
    v21 = &v12[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response];
    if (v12[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response + 8] == 1)
    {
      *(_QWORD *)v21 = 3;
      v21[8] = 0;
    }
    v22 = (_QWORD *)swift_allocObject(&unk_100178960, 56, 7);
    v22[2] = a3;
    v22[3] = v20;
    v22[4] = v19;
    v22[5] = a4;
    v22[6] = a5;
    swift_retain(a3);
    swift_bridgeObjectRetain(a5);
    sub_10002BA1C((uint64_t)sub_10002C3A0, (uint64_t)v22);

    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

double sub_10002AF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  double result;
  _BYTE *v12;
  char *v13;
  _QWORD *v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v8 = a2 + 16;
  type metadata accessor for URLComponents(0);
  v9 = swift_projectBox(a3);
  swift_beginAccess(v8, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v12 = (_BYTE *)Strong;
    swift_beginAccess(v9, v15, 33, 0);
    URLComponents.scheme.setter(7564659, 0xE300000000000000);
    swift_endAccess(v15);
    v13 = &v12[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response];
    if (v12[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response + 8] == 1)
    {
      *(_QWORD *)v13 = 4;
      v13[8] = 0;
    }
    v14 = (_QWORD *)swift_allocObject(&unk_100178938, 56, 7);
    v14[2] = a3;
    v14[3] = 7564659;
    v14[4] = 0xE300000000000000;
    v14[5] = a4;
    v14[6] = a5;
    swift_retain(a3);
    swift_bridgeObjectRetain(a5);
    sub_10002BA1C((uint64_t)sub_10002C3A0, (uint64_t)v14);

    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

void sub_10002B074(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __n128 v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  __n128 v57;
  id v58;
  NSURL *v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v75[24];

  v69 = a5;
  v70 = a3;
  v67 = a4;
  v68 = a2;
  v6 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URLComponents(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v66 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v63 - v13;
  v15 = type metadata accessor for URL(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v63 - v20;
  v22 = a1;
  v23 = swift_projectBox(a1);
  swift_beginAccess(v23, v75, 0, 0);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v24 = v65(v14, v23, v9);
  URLComponents.url.getter(v24);
  v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  v25(v14, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
  {
    sub_10000D858((uint64_t)v8, &qword_1001A3618);
    if (qword_1001A2F20 != -1)
      swift_once(&qword_1001A2F20, sub_1000271E4);
    v27 = type metadata accessor for Logger(0, v26);
    sub_10000E8E8(v27, (uint64_t)qword_1001A4608);
    v28 = v70;
    swift_bridgeObjectRetain_n(v70, 2);
    swift_retain_n(v22, 2);
    v29 = v69;
    v30 = swift_bridgeObjectRetain_n(v69, 2);
    v31 = Logger.logObject.getter(v30);
    v33 = static os_log_type_t.default.getter(v31, v32);
    if (os_log_type_enabled(v31, v33))
    {
      v34 = swift_slowAlloc(32, -1);
      v64 = swift_slowAlloc(96, -1);
      v74 = v64;
      *(_DWORD *)v34 = 136315650;
      swift_bridgeObjectRetain(v28);
      v72 = sub_10001EFA4(v68, v28, &v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v34 + 4, v34 + 12);
      swift_bridgeObjectRelease_n(v28, 3);
      *(_WORD *)(v34 + 12) = 2080;
      v70 = v22;
      swift_beginAccess(v23, &v72, 0, 0);
      v35 = v66;
      v65(v66, v23, v9);
      v36 = sub_100005B80(&qword_1001A4988, (uint64_t (*)(uint64_t))&type metadata accessor for URLComponents, (uint64_t)&protocol conformance descriptor for URLComponents);
      v37 = dispatch thunk of CustomStringConvertible.description.getter(v9, v36);
      v39 = v38;
      v25(v35, v9);
      v71 = sub_10001EFA4(v37, v39, &v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v34 + 14, v34 + 22);
      swift_release_n(v70, 2, v40);
      swift_bridgeObjectRelease(v39);
      *(_WORD *)(v34 + 22) = 2080;
      v41 = v69;
      swift_bridgeObjectRetain(v69);
      v71 = sub_10001EFA4(v67, v41, &v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v34 + 24, v34 + 32);
      swift_bridgeObjectRelease_n(v41, 3);
      _os_log_impl((void *)&_mh_execute_header, v31, v33, "Could not form valid %s URL from %s, num: %s", (uint8_t *)v34, 0x20u);
      v42 = v64;
      swift_arrayDestroy(v64, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v34, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v29, 2);
      swift_release_n(v22, 2, v57);
      swift_bridgeObjectRelease_n(v28, 2);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v8, v15);
    if (qword_1001A2F20 != -1)
      swift_once(&qword_1001A2F20, sub_1000271E4);
    v44 = type metadata accessor for Logger(0, v43);
    sub_10000E8E8(v44, (uint64_t)qword_1001A4608);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
    v45 = v70;
    v46 = swift_bridgeObjectRetain_n(v70, 2);
    v47 = Logger.logObject.getter(v46);
    v49 = static os_log_type_t.default.getter(v47, v48);
    if (os_log_type_enabled(v47, v49))
    {
      v50 = swift_slowAlloc(22, -1);
      v69 = swift_slowAlloc(64, -1);
      v72 = v69;
      *(_DWORD *)v50 = 136315394;
      swift_bridgeObjectRetain(v45);
      v74 = sub_10001EFA4(v68, v45, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, v75, v50 + 4, v50 + 12);
      swift_bridgeObjectRelease_n(v45, 3);
      *(_WORD *)(v50 + 12) = 2080;
      v51 = sub_100005B80((unint64_t *)&unk_1001A7CD0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v52 = dispatch thunk of CustomStringConvertible.description.getter(v15, v51);
      v54 = v53;
      v74 = sub_10001EFA4(v52, v53, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, v75, v50 + 14, v50 + 22);
      swift_bridgeObjectRelease(v54);
      v55 = *(void (**)(char *, uint64_t))(v16 + 8);
      v55(v19, v15);
      _os_log_impl((void *)&_mh_execute_header, v47, v49, "Opening %s URL: %s", (uint8_t *)v50, 0x16u);
      v56 = v69;
      swift_arrayDestroy(v69, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1, -1);
      swift_slowDealloc(v50, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v45, 2);
      v55 = *(void (**)(char *, uint64_t))(v16 + 8);
      v55(v19, v15);
    }

    v58 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (v58)
    {
      v60 = v58;
      URL._bridgeToObjectiveC()(v59);
      v62 = v61;
      objc_msgSend(v60, "openURL:configuration:completionHandler:", v61, 0, 0);

    }
    v55(v21, v15);
  }
}

void sub_10002B75C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  id v12;
  id v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *oslog;

  if (qword_1001A2F20 != -1)
    swift_once(&qword_1001A2F20, sub_1000271E4);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10000E8E8(v3, (uint64_t)qword_1001A4608);
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "Transitioning between NFC states", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig);
  if (!v9)
  {
    oslog = Logger.logObject.getter(0);
    v16 = static os_log_type_t.default.getter(oslog, v15);
    if (os_log_type_enabled(oslog, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v16, "No NFC config.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
    goto LABEL_15;
  }
  v10 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_previousNFCConfig);
  oslog = *(NSObject **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig);
  if (!v10)
  {
    v13 = v9;
    goto LABEL_12;
  }
  v11 = v9;
  v12 = objc_msgSend(v10, "promptState");
  v13 = -[NSObject promptState](v11, "promptState");
  if (v12 == v13)
  {
LABEL_12:
    v18 = Logger.logObject.getter(v13);
    v20 = static os_log_type_t.default.getter(v18, v19);
    if (os_log_type_enabled(v18, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v20, "NFC state has not changed", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

LABEL_15:
    v14 = oslog;
    goto LABEL_16;
  }
  sub_1000277F8();
  v14 = v11;
LABEL_16:

}

id sub_10002BA1C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  id result;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v6 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001A2F20 != -1)
    swift_once(&qword_1001A2F20, sub_1000271E4);
  v10 = type metadata accessor for Logger(0, v7);
  v11 = sub_10000E8E8(v10, (uint64_t)qword_1001A4608);
  v12 = Logger.logObject.getter(v11);
  v14 = static os_log_type_t.default.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    v24 = 380;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v15 + 4, v15 + 12);
    _os_log_impl((void *)&_mh_execute_header, v12, v14, "dismissPressed in %ld", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);
  }

  result = objc_msgSend(v3, "mainController");
  if (result)
  {
    v17 = result;
    v18 = *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_onDoneAction];
    v19 = *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_onDoneAction + 8];
    v20 = &v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response];
    if (v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response + 8] == 1)
    {
      *(_QWORD *)v20 = 2;
      v20[8] = 0;
    }
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 1, 1, v21);
    v22 = (_QWORD *)swift_allocObject(&unk_100178820, 48, 7);
    v22[2] = a1;
    v22[3] = a2;
    v22[4] = v18;
    v22[5] = v19;
    sub_100022024(v18, v19);
    sub_100022024(v18, v19);
    sub_100022024(a1, a2);
    sub_1000356AC(0, (uint64_t)v9, (uint64_t)sub_10002C2E4, (uint64_t)v22, 386);

    swift_release(v22);
    sub_100012F60(v18, v19);
    return (id)sub_10000D858((uint64_t)v9, &qword_1001A3618);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10002BCA8(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  objc_super v21;

  v6 = &v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_onDoneAction];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_previousNFCConfig] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_coalescer] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig] = 0;
  v7 = &v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_uiStartTicks] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_bigBtn] = 0;
  v9 = &v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_btnTitle];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = (uint64_t *)&v3[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_defaultBtnTitle];
  v11 = v3;
  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100117314(v12);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  *v10 = v14;
  v10[1] = v16;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_numberLbl] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_msgLbl] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_titleLabel] = 0;
  v17 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_connectingLabel;
  *(_QWORD *)&v11[v17] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_spinner] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_player] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_heightConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate] = _swiftEmptyArrayStorage;

  if (a2)
  {
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v18 = 0;
  }
  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for B389NFCStatusViewController();
  v19 = objc_msgSendSuper2(&v21, "initWithNibName:bundle:", v18, a3);

  return v19;
}

id sub_10002BEF8(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  objc_super v17;

  v3 = &v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_onDoneAction];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_previousNFCConfig] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_coalescer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig] = 0;
  v4 = &v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v5 = &v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_uiStartTicks] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_bigBtn] = 0;
  v6 = &v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_btnTitle];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = (uint64_t *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_defaultBtnTitle];
  v8 = v1;
  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100117314(v9);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *v7 = v11;
  v7[1] = v13;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_numberLbl] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_msgLbl] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_titleLabel] = 0;
  v14 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_connectingLabel;
  *(_QWORD *)&v8[v14] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_spinner] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_player] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_heightConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate] = _swiftEmptyArrayStorage;

  v17.receiver = v8;
  v17.super_class = (Class)type metadata accessor for B389NFCStatusViewController();
  v15 = objc_msgSendSuper2(&v17, "initWithCoder:", a1);

  return v15;
}

id sub_10002C0D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for B389NFCStatusViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for B389NFCStatusViewController()
{
  return objc_opt_self(_TtC18SharingViewService27B389NFCStatusViewController);
}

uint64_t sub_10002C24C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10002C270(uint64_t a1, uint64_t a2)
{
  sub_10002B75C(a1, a2);
}

uint64_t sub_10002C290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002C2A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002C2A8()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10002C2E4()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  v2 = *(uint64_t (**)(void))(v0 + 32);
  if (v1)
    result = v1();
  if (v2)
    return v2();
  return result;
}

uint64_t sub_10002C324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

double sub_10002C34C(uint64_t a1)
{
  uint64_t *v1;

  return sub_10002AD64(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10002C35C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

double sub_10002C390(uint64_t a1)
{
  uint64_t *v1;

  return sub_10002AF44(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10002C3A8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_10002C3DC()
{
  uint64_t v0;

  sub_10002B074(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10002C3FC()
{
  uint64_t v0;

  return sub_10002A39C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10002C404()
{
  uint64_t v0;

  return sub_100029C74(*(void **)(v0 + 16));
}

id sub_10002C40C()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v1 = *(_QWORD *)(v0 + 16);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_connectingLabel), "setAlpha:", 0.0);
  result = *(id *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_spinner);
  if (result)
    return objc_msgSend(result, "setAlpha:", 0.0);
  return result;
}

id sub_10002C468()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v1 = *(_QWORD *)(v0 + 16);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_connectingLabel), "removeFromSuperview");
  result = *(id *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_spinner);
  if (result)
    return objc_msgSend(result, "removeFromSuperview");
  return result;
}

id sub_10002C4BC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

uint64_t sub_10002C4D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10002C4FC(uint64_t a1)
{
  uint64_t v1;

  return sub_100029A6C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10002C504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A42A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_10002C54C(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v3 = &v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_onDoneAction];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_previousNFCConfig] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_coalescer] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig] = 0;
  v4 = &v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_response];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v5 = &v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_uiStartTicks] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_bigBtn] = 0;
  v6 = &v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_btnTitle];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = (uint64_t *)&v1[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_defaultBtnTitle];
  v8 = v1;
  v9 = String._bridgeToObjectiveC()();
  v10 = sub_100117314(v9);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *v7 = v11;
  v7[1] = v13;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_numberLbl] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_msgLbl] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_titleLabel] = 0;
  v14 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_connectingLabel;
  *(_QWORD *)&v8[v14] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_spinner] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_player] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_heightConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_subviewsToRemoveOnUpdate] = _swiftEmptyArrayStorage;

  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for B389NFCStatusViewController();
  return objc_msgSendSuper2(&v16, "initWithMainController:", a1);
}

uint64_t sub_10002C74C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A4998);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A4998);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10002C7DC()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  Class isa;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  _QWORD v45[5];
  uint64_t v46;
  objc_super v47;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v47.receiver = v0;
  v47.super_class = (Class)type metadata accessor for AirTagInstallFindMyViewController();
  objc_msgSendSuper2(&v47, "viewDidLoad");
  sub_1000897BC(0x64u);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v1, "setTitle:", v5);

  sub_1000897BC(0x65u);
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v1, "setSubtitle:", v8);

  objc_msgSend(v1, "setDismissalType:", 1);
  v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v10 = sub_10002D26C();
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v9, "setImage:", v10);

  }
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = objc_msgSend(v1, "contentView");
  objc_msgSend(v12, "addSubview:", v9);

  v13 = objc_msgSend(v1, "contentView");
  v14 = objc_msgSend(v13, "mainContentGuide");

  v15 = (void *)objc_opt_self(NSLayoutConstraint);
  v16 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v17 = swift_allocObject(v16, 80, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100131CB0;
  v18 = objc_msgSend(v9, "centerXAnchor");
  v19 = objc_msgSend(v14, "centerXAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v17 + 32) = v20;
  v21 = objc_msgSend(v9, "centerYAnchor");
  v22 = objc_msgSend(v14, "centerYAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v17 + 40) = v23;
  v24 = objc_msgSend(v9, "widthAnchor");
  v25 = objc_msgSend(v24, "constraintEqualToConstant:", 76.0);

  *(_QWORD *)(v17 + 48) = v25;
  v26 = objc_msgSend(v9, "heightAnchor");
  v27 = objc_msgSend(v26, "constraintEqualToConstant:", 76.0);

  *(_QWORD *)(v17 + 56) = v27;
  v28 = objc_msgSend(v9, "topAnchor");
  v29 = objc_msgSend(v14, "topAnchor");
  v30 = objc_msgSend(v28, "constraintGreaterThanOrEqualToAnchor:", v29);

  *(_QWORD *)(v17 + 64) = v30;
  v31 = objc_msgSend(v9, "bottomAnchor");
  v32 = objc_msgSend(v14, "bottomAnchor");
  v33 = objc_msgSend(v31, "constraintLessThanOrEqualToAnchor:", v32);

  *(_QWORD *)(v17 + 72) = v33;
  specialized Array._endMutation()(v34);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  objc_msgSend(v15, "activateConstraints:", isa);

  sub_1000897BC(0x66u);
  v37 = v36;
  v38 = swift_allocObject(&unk_100178B40, 24, 7);
  swift_unknownObjectWeakInit(v38 + 16, v1);
  v39 = swift_allocObject(&unk_100178B68, 32, 7);
  *(_QWORD *)(v39 + 16) = v38;
  *(_QWORD *)(v39 + 24) = ObjectType;
  swift_retain(v38);
  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  v45[4] = sub_10002D3F4;
  v46 = v39;
  v45[0] = _NSConcreteStackBlock;
  v45[1] = 1107296256;
  v45[2] = sub_10001B5D0;
  v45[3] = &unk_100178B80;
  v41 = _Block_copy(v45);
  v42 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v40, 0, v41);

  _Block_release(v41);
  v43 = v46;
  swift_release(v38);
  v44 = objc_msgSend(v1, "addAction:", v42, swift_release(v43).n128_f64[0]);

}

void sub_10002CD34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSString v14;
  NSObject *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t aBlock;
  _QWORD v22[5];
  _BYTE v23[24];

  v2 = a2 + 16;
  if (qword_1001A2F28 != -1)
    swift_once(&qword_1001A2F28, sub_10002C74C);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10000E8E8(v3, (uint64_t)qword_1001A4998);
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    aBlock = 53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v22, v8 + 4, v8 + 12);
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "Install FindMy App pressed in %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);
  }

  swift_beginAccess(v2, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC18SharingViewService33AirTagInstallFindMyViewController_mainController);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = objc_allocWithZone((Class)ASDSystemAppRequest);
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend(v13, "initWithBundleID:", v14);

      v22[3] = sub_10002CFAC;
      v22[4] = 0;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v22[0] = 1107296256;
      v22[1] = sub_1000AC624;
      v22[2] = &unk_100178BA8;
      v16 = _Block_copy(&aBlock);
      -[NSObject startWithErrorHandler:](v15, "startWithErrorHandler:", v16);
      _Block_release(v16);
      sub_1000AC894(v17, v18);

      goto LABEL_11;
    }

  }
  v15 = Logger.logObject.getter(Strong);
  v19 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v15, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v19, "mainController nil while initializing primaryAction", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }
LABEL_11:

}

void sub_10002CFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  NSObject *oslog;
  uint64_t v13;
  uint64_t v14;

  if (a1)
  {
    if (qword_1001A2F28 != -1)
      swift_once(&qword_1001A2F28, sub_10002C74C);
    v3 = type metadata accessor for Logger(0, a2);
    sub_10000E8E8(v3, (uint64_t)qword_1001A4998);
    swift_errorRetain(a1);
    v4 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v14 = v7;
      *(_DWORD *)v6 = 136315138;
      v8 = sub_100006A6C(&qword_1001A3900);
      v9 = Optional.debugDescription.getter(v8);
      v11 = v10;
      v13 = sub_10001EFA4(v9, v10, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4, v6 + 12);
      swift_bridgeObjectRelease(v11);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "### Restoring FindMy app failed: %s\n", v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
}

id sub_10002D20C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AirTagInstallFindMyViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AirTagInstallFindMyViewController()
{
  return objc_opt_self(_TtC18SharingViewService33AirTagInstallFindMyViewController);
}

id sub_10002D26C()
{
  id v0;
  NSString v1;
  id v2;
  id v3;
  id v4;
  id result;
  void *v6;
  double v7;
  id v8;

  v0 = objc_allocWithZone((Class)ISIcon);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithBundleIdentifier:", v1);

  v3 = objc_msgSend((id)objc_opt_self(ISImageDescriptor), "imageDescriptorNamed:", kISImageDescriptorHomeScreen);
  v4 = objc_msgSend(v2, "imageForImageDescriptor:", v3);
  result = objc_msgSend(v4, "CGImage");
  if (result)
  {
    v6 = result;
    objc_msgSend(v4, "scale");
    v8 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v6, 0, v7);

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002D3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_10002D3D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10002D3F4(uint64_t a1)
{
  uint64_t v1;

  sub_10002CD34(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10002D3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002D40C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10002D41C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A49E0);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A49E0);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_10002D4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *Strong;
  unint64_t v6;
  char v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  NSString v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  id v42;
  id v43;
  id v44;
  NSString v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  id v52;
  id v53;
  id v54;
  NSString v55;
  NSString v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSString v61;
  id v62;
  id v63;
  id v64;
  NSString v65;
  NSString v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSString v71;
  id v72;
  id v73;
  id v74;
  NSString v75;
  NSString v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSString v82;
  id v83;
  id v84;
  id v85;
  NSString v86;
  NSString v87;
  id v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v1 = sub_1000897BC(0x7Eu);
  v3 = v2;
  v4 = v0 + OBJC_IVAR____TtC18SharingViewService24AirTagDoneViewController_mainController;
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong
    || (v6 = *(_QWORD *)&Strong[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex],
        v7 = Strong[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex + 8],
        Strong,
        (v7 & 1) != 0)
    || (v8 = (char *)swift_unknownObjectWeakLoadStrong(v4)) == 0)
  {
LABEL_10:
    v20 = sub_1000897BC(0x7Du);
    v22 = v21;
    v23 = sub_100006A6C((uint64_t *)&unk_1001A7D20);
    v24 = swift_allocObject(v23, 72, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100131C40;
    *(_QWORD *)(v24 + 56) = &type metadata for String;
    *(_QWORD *)(v24 + 64) = sub_10000D794();
    *(_QWORD *)(v24 + 32) = v1;
    *(_QWORD *)(v24 + 40) = v3;
    static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
    v26 = v25;
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v24);
    sub_1000897BC(0x7Cu);
    v28 = v27;
    v29 = String._bridgeToObjectiveC()();
    v30 = (void *)objc_opt_self(UIImage);
    v31 = objc_msgSend(v30, "imageNamed:", v29);

    v32 = (void *)objc_opt_self(UIColor);
    v33 = objc_msgSend(v32, "systemWhiteColor");
    v34 = objc_allocWithZone((Class)PRXFeature);
    v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v98 = objc_msgSend(v34, "initWithTitle:detailText:icon:tintColor:valueChangedBlock:", v35, v36, v31, v33, 0);

    sub_1000897BC(0x7Fu);
    v38 = v37;
    sub_1000897BC(0x80u);
    v40 = v39;
    v41 = String._bridgeToObjectiveC()();
    v42 = objc_msgSend(v30, "systemImageNamed:", v41);

    v43 = objc_msgSend(v32, "systemBlueColor");
    v44 = objc_allocWithZone((Class)PRXFeature);
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v40);
    v97 = objc_msgSend(v44, "initWithTitle:detailText:icon:tintColor:valueChangedBlock:", v45, v46, v42, v43, 0);

    sub_1000897BC(0x81u);
    v48 = v47;
    sub_1000897BC(0x82u);
    v50 = v49;
    v51 = String._bridgeToObjectiveC()();
    v52 = objc_msgSend(v30, "systemImageNamed:", v51);

    v53 = objc_msgSend(v32, "systemIndigoColor");
    v54 = objc_allocWithZone((Class)PRXFeature);
    v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v48);
    v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v50);
    v96 = objc_msgSend(v54, "initWithTitle:detailText:icon:tintColor:valueChangedBlock:", v55, v56, v52, v53, 0);

    sub_1000897BC(0x83u);
    v58 = v57;
    sub_1000897BC(0x84u);
    v60 = v59;
    v61 = String._bridgeToObjectiveC()();
    v62 = objc_msgSend(v30, "systemImageNamed:", v61);

    v63 = objc_msgSend(v32, "systemGreenColor");
    v64 = objc_allocWithZone((Class)PRXFeature);
    v65 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v58);
    v66 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v60);
    v95 = objc_msgSend(v64, "initWithTitle:detailText:icon:tintColor:valueChangedBlock:", v65, v66, v62, v63, 0);

    sub_1000897BC(0x85u);
    v68 = v67;
    sub_1000897BC(0x86u);
    v70 = v69;
    v71 = String._bridgeToObjectiveC()();
    v72 = objc_msgSend(v30, "systemImageNamed:", v71);

    v73 = objc_msgSend(v32, "systemPinkColor");
    v74 = objc_allocWithZone((Class)PRXFeature);
    v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v68);
    v76 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v70);
    v77 = objc_msgSend(v74, "initWithTitle:detailText:icon:tintColor:valueChangedBlock:", v75, v76, v72, v73, 0);

    sub_1000897BC(0x87u);
    v79 = v78;
    sub_1000897BC(0x88u);
    v81 = v80;
    v82 = String._bridgeToObjectiveC()();
    v83 = objc_msgSend(v30, "systemImageNamed:", v82);

    v84 = objc_msgSend(v32, "systemGreenColor");
    v85 = objc_allocWithZone((Class)PRXFeature);
    v86 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v79);
    v87 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v81);
    v88 = objc_msgSend(v85, "initWithTitle:detailText:icon:tintColor:valueChangedBlock:", v86, v87, v83, v84, 0);

    LOBYTE(v83) = SFIsFMFAllowed();
    v89 = SFIsRangingSupported();
    v90 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
    v91 = swift_allocObject(v90, 56, 7);
    *(_OWORD *)(v91 + 16) = xmmword_100132C50;
    if ((v83 & 1) != 0)
    {
      if ((v89 & 1) == 0)
      {
        *(_QWORD *)(v91 + 32) = v96;
        *(_QWORD *)(v91 + 40) = v88;
        *(_QWORD *)(v91 + 48) = v77;
        v99 = v91;
        specialized Array._endMutation()(v91);
        v92 = v99;

        return v92;
      }
    }
    else if ((v89 & 1) == 0)
    {
      *(_QWORD *)(v91 + 32) = v96;
      *(_QWORD *)(v91 + 40) = v88;
      *(_QWORD *)(v91 + 48) = v98;
      v101 = v91;
      specialized Array._endMutation()(v91);
      v92 = v101;
      v94 = v96;

      v93 = v95;
      goto LABEL_16;
    }
    *(_QWORD *)(v91 + 32) = v95;
    *(_QWORD *)(v91 + 40) = v96;
    *(_QWORD *)(v91 + 48) = v88;
    v100 = v91;
    specialized Array._endMutation()(v91);
    v92 = v100;

    v93 = v97;
LABEL_16:

    return v92;
  }
  v9 = v8;
  v10 = *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories];
  if (!v10)
  {

    goto LABEL_10;
  }
  v11 = swift_bridgeObjectRetain(*(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories]);
  v12 = sub_100030800(v11);

  result = swift_bridgeObjectRelease(v10);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < v12[2])
  {
    v14 = (id)v12[2 * v6 + 5];
    swift_bridgeObjectRelease(v12);
    type metadata accessor for SFMExampleUtterance(0);
    v15 = v14;
    v16 = (_QWORD *)SFMExampleUtterance.__allocating_init(forRole:)(v14);
    v17 = (*(uint64_t (**)(void))((swift_isaMask & *v16) + 0x70))();
    v19 = v18;

    if (v19)
    {
      swift_bridgeObjectRelease(v3);
      v1 = v17;
      v3 = v19;
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_10002DD4C()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  Class isa;
  id v24;

  v1 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService24AirTagDoneViewController_mapViewController];
  if (v1)
  {
    v24 = v1;
    v2 = objc_msgSend(v24, "view");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 216.0);
      objc_msgSend(v0, "addChildViewController:", v24);
      objc_msgSend(v4, "addSubview:", v3);
      objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v5 = objc_msgSend(v0, "tableView");
      objc_msgSend(v5, "setTableHeaderView:", v4);

      v6 = objc_msgSend(v0, "tableView");
      objc_msgSend(v6, "setSeparatorStyle:", 0);

      objc_msgSend(v3, "_setContinuousCornerRadius:", 13.0);
      v7 = (void *)objc_opt_self(NSLayoutConstraint);
      v8 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
      v9 = swift_allocObject(v8, 64, 7);
      *(_OWORD *)(v9 + 16) = xmmword_100132270;
      v10 = objc_msgSend(v3, "topAnchor");
      v11 = objc_msgSend(v4, "topAnchor");
      v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

      *(_QWORD *)(v9 + 32) = v12;
      v13 = objc_msgSend(v3, "bottomAnchor");
      v14 = objc_msgSend(v4, "bottomAnchor");
      v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, -16.0);

      *(_QWORD *)(v9 + 40) = v15;
      v16 = objc_msgSend(v3, "leadingAnchor");
      v17 = objc_msgSend(v4, "leadingAnchor");
      v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, PRXCardDefaultLayoutMargins[1]);

      *(_QWORD *)(v9 + 48) = v18;
      v19 = objc_msgSend(v3, "trailingAnchor");
      v20 = objc_msgSend(v4, "trailingAnchor");
      v21 = objc_msgSend(v19, "constraintEqualToAnchor:constant:", v20, -PRXCardDefaultLayoutMargins[3]);

      *(_QWORD *)(v9 + 56) = v21;
      specialized Array._endMutation()(v22);
      sub_100013194(0, (unint64_t *)&qword_1001A5810, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v9);
      objc_msgSend(v7, "activateConstraints:", isa);

    }
    else
    {

    }
  }
}

void sub_10002E0F4()
{
  char *v0;
  void *v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  Swift::String v21;
  void *object;
  id v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  uint64_t aBlock;
  unint64_t v60;
  void (*v61)(uint64_t, void *);
  void *v62;
  void (*v63)(uint64_t);
  uint64_t v64;
  objc_super v65;

  v1 = v0;
  v65.receiver = v0;
  v65.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v65, "viewDidLoad");
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18SharingViewService24AirTagDoneViewController_mainController]);
  if (!Strong)
  {
    if (qword_1001A2F30 == -1)
      goto LABEL_5;
    goto LABEL_27;
  }
  v4 = Strong;
  sub_1000AEB54();
  if (v5)
  {
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v1, "setTitle:", v7);

  objc_msgSend(v1, "setDismissalType:", 1);
  v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v14 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithHierarchicalColor:", v13);

  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v16, v15);

  if (v17)
  {
    v18 = objc_msgSend((id)objc_opt_self(NSTextAttachment), "textAttachmentWithImage:", v17);
    v19 = sub_100013194(0, &qword_1001A4A30, NSMutableAttributedString_ptr);
    v20 = objc_msgSend((id)swift_getObjCClassFromMetadata(v19), "attributedStringWithAttachment:", v18);
    aBlock = 32;
    v60 = 0xE100000000000000;
    v21._countAndFlagsBits = sub_1000897BC(0x7Au);
    object = v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(object);
    v23 = objc_allocWithZone((Class)NSAttributedString);
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(0xE100000000000000);
    v25 = objc_msgSend(v23, "initWithString:", v24);

    objc_msgSend(v20, "appendAttributedString:", v25);
    objc_msgSend(v1, "setAttributedSubtitle:", v20);

  }
  v26 = sub_10002D4AC();
  v27 = v26;
  if (!((unint64_t)v26 >> 62))
  {
    v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v28)
      goto LABEL_21;
    goto LABEL_12;
  }
  if (v26 >= 0)
    v26 &= 0xFFFFFFFFFFFFFF8uLL;
  v28 = _CocoaArrayWrapper.endIndex.getter(v26);
  if (v28)
  {
LABEL_12:
    if (v28 >= 1)
    {
      v29 = 0;
      do
      {
        if ((v27 & 0xC000000000000001) != 0)
          v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
        else
          v30 = *(id *)(v27 + 8 * v29 + 32);
        v31 = v30;
        ++v29;
        v32 = objc_msgSend(v1, "addFeature:", v30);

      }
      while (v28 != v29);
      goto LABEL_21;
    }
    __break(1u);
LABEL_27:
    swift_once(&qword_1001A2F30, sub_10002D41C);
LABEL_5:
    v8 = type metadata accessor for Logger(0, v3);
    v9 = sub_10000E8E8(v8, (uint64_t)qword_1001A49E0);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "mainController is nil during viewDidLoad", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
    goto LABEL_25;
  }
LABEL_21:
  swift_bridgeObjectRelease(v27);
  sub_10002DD4C();
  v33 = sub_1000897BC(0x7Bu);
  v35 = v34;
  v36 = sub_100006A6C((uint64_t *)&unk_1001A7D20);
  v37 = swift_allocObject(v36, 72, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100131C40;
  if (qword_1001A2E60 != -1)
    swift_once(&qword_1001A2E60, sub_1000078E4);
  v38 = objc_msgSend((id)qword_1001AD3B8, "localizedShortName", v4);
  if (v38)
  {
    v39 = v38;
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v42 = v41;

    *(_QWORD *)(v37 + 56) = &type metadata for String;
    *(_QWORD *)(v37 + 64) = sub_10000D794();
    *(_QWORD *)(v37 + 32) = v40;
    *(_QWORD *)(v37 + 40) = v42;
    static String.localizedStringWithFormat(_:_:)(v33, v35, v37);
    v44 = v43;
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v35);
    v45 = swift_allocObject(&unk_100178BE0, 24, 7);
    swift_unknownObjectWeakInit(v45 + 16, v1);
    swift_retain(v45);
    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v44);
    v63 = sub_10002F1C4;
    v64 = v45;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v60 = 1107296256;
    v61 = sub_10001B5D0;
    v62 = &unk_100178BF8;
    v47 = _Block_copy(&aBlock);
    v48 = (void *)objc_opt_self(PRXAction);
    v49 = objc_msgSend(v48, "actionWithTitle:style:handler:", v46, 0, v47);

    _Block_release(v47);
    v50 = v64;
    swift_release(v45);

    sub_1000897BC(2u);
    v52 = v51;
    v53 = swift_allocObject(&unk_100178BE0, 24, 7);
    swift_unknownObjectWeakInit(v53 + 16, v1);
    swift_retain(v53);
    v54 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v52);
    v63 = sub_10002F1FC;
    v64 = v53;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v60 = 1107296256;
    v61 = sub_10001B5D0;
    v62 = &unk_100178C20;
    v55 = _Block_copy(&aBlock);
    v56 = objc_msgSend(v48, "actionWithTitle:style:handler:", v54, 1, v55);

    _Block_release(v55);
    v57 = v64;
    swift_release(v53);
    v10 = objc_msgSend(v1, "addAction:", v56, swift_release(v57).n128_f64[0]);

LABEL_25:
    return;
  }
  __break(1u);
}

uint64_t sub_10002E7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  void *object;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  uint64_t v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  void *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  unint64_t v73;
  id v74;
  uint64_t v75;

  v1 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v1);
  v3 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (_QWORD **)((char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for UUID(0);
  v70 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100006A6C(&qword_1001A42A0);
  v11 = __chkstk_darwin(v68);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v61 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v61 - v17;
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC18SharingViewService24AirTagDoneViewController_mainController);
  if (result)
  {
    v66 = v1;
    v67 = v4;
    v69 = v10;
    v65 = (void *)result;
    v74 = *(id *)(result + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
    v20 = v74;
    v21 = sub_100006A6C(&qword_1001A4A38);
    Optional.unwrap(_:file:line:)(&v72, sub_10002F048, 0, "SharingViewService/AirTagDoneViewController.swift", 49, 2, 207, v21);

    v23 = v72;
    if (qword_1001A2F30 != -1)
      swift_once(&qword_1001A2F30, sub_10002D41C);
    v24 = type metadata accessor for Logger(0, v22);
    v25 = sub_10000E8E8(v24, (uint64_t)qword_1001A49E0);
    v26 = v23;
    v63 = v25;
    v27 = Logger.logObject.getter(v26);
    v29 = static os_log_type_t.default.getter(v27, v28);
    v30 = os_log_type_enabled(v27, v29);
    v64 = v26;
    if (v30)
    {
      v61 = v7;
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v33 = v26;
      v34 = v32;
      v72 = (void *)v32;
      *(_DWORD *)v31 = 136315138;
      v35 = objc_msgSend(v33, "beaconId");
      v62 = v5;
      if (v35)
      {
        v36 = v35;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        v37 = 0;
      }
      else
      {
        v37 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v16, v37, 1, v71);
      sub_10002C504((uint64_t)v16, (uint64_t)v18);
      v38 = sub_1000AC100();
      v40 = v39;
      sub_10000D858((uint64_t)v18, &qword_1001A42A0);
      v74 = (id)sub_10001EFA4(v38, v40, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v31 + 4, v31 + 12);
      v41 = v64;

      swift_bridgeObjectRelease(v40);
      _os_log_impl((void *)&_mh_execute_header, v27, v29, "beaconID: %s", v31, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      v42 = v34;
      v26 = v41;
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      v7 = v61;
      v5 = v62;
    }
    else
    {

    }
    v43 = objc_msgSend(v26, "beaconId");
    v44 = v69;
    if (v43)
    {
      v45 = v43;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v46 = 0;
    }
    else
    {
      v46 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v13, v46, 1, v71);
    Optional.unwrap(_:file:line:)(v44, sub_10002F06C, 0, "SharingViewService/AirTagDoneViewController.swift", 49, 2, 212, v68);
    sub_10000D858((uint64_t)v13, &qword_1001A42A0);
    v72 = 0;
    v73 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    v47 = swift_bridgeObjectRelease(v73);
    v72 = (void *)0xD000000000000013;
    v73 = 0x80000001001379C0;
    v48._countAndFlagsBits = UUID.uuidString.getter(v47);
    object = v48._object;
    String.append(_:)(v48);
    swift_bridgeObjectRelease(object);
    v51 = (uint64_t)v72;
    v50 = v73;
    v52 = swift_bridgeObjectRetain_n(v73, 2);
    v53 = Logger.logObject.getter(v52);
    v55 = static os_log_type_t.default.getter(v53, v54);
    if (os_log_type_enabled(v53, v55))
    {
      v68 = (uint64_t)v3;
      v56 = (uint8_t *)swift_slowAlloc(12, -1);
      v57 = swift_slowAlloc(32, -1);
      v72 = (void *)v57;
      *(_DWORD *)v56 = 136315138;
      swift_bridgeObjectRetain(v50);
      v74 = (id)sub_10001EFA4(v51, v50, (uint64_t *)&v72);
      v3 = (char *)v68;
      v44 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v56 + 4, v56 + 12);
      swift_bridgeObjectRelease_n(v50, 3);
      _os_log_impl((void *)&_mh_execute_header, v53, v55, "Opening findmy at %s", v56, 0xCu);
      swift_arrayDestroy(v57, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1, -1);
      v58 = v56;
      v26 = v64;
      swift_slowDealloc(v58, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v50, 2);
    }
    URL.init(string:)(v51, v50);
    swift_bridgeObjectRelease(v50);
    Optional.unwrap(_:file:line:)(v7, sub_10002F088, 0, "SharingViewService/AirTagDoneViewController.swift", 49, 2, 218, v66);
    sub_10000D858((uint64_t)v3, &qword_1001A3618);
    v59 = v67;
    (*(void (**)(char *, _QWORD *, uint64_t))(v5 + 16))(v3, v7, v67);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v59);
    v60 = v65;
    sub_1000B313C(0, (uint64_t)v3, 0, 0, 220);

    sub_10000D858((uint64_t)v3, &qword_1001A3618);
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v59);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v70 + 8))(v44, v71);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10002EE88(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3();

  }
}

void sub_10002EEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *Strong;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  if (qword_1001A2F30 != -1)
    swift_once(&qword_1001A2F30, sub_10002D41C);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A49E0);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v9 = 134217984;
    v12 = 199;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v9 + 4, v9 + 12);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "dismissPressed in %ld", v9, 0xCu);
    swift_slowDealloc(v9, -1, -1);
  }

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC18SharingViewService24AirTagDoneViewController_mainController);
  if (Strong)
  {
    v11 = Strong;
    objc_msgSend(Strong, "dismiss:", 0);

  }
}

uint64_t sub_10002F048()
{
  return 0x7320746365707845;
}

unint64_t sub_10002F06C()
{
  return 0xD000000000000013;
}

unint64_t sub_10002F088()
{
  return 0xD00000000000001CLL;
}

id sub_10002F114()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AirTagDoneViewController()
{
  return objc_opt_self(_TtC18SharingViewService24AirTagDoneViewController);
}

uint64_t sub_10002F1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10002F1C4(uint64_t a1)
{
  uint64_t v1;

  sub_10002EE88(a1, v1, (void (*)(void))sub_10002E7BC);
}

uint64_t sub_10002F1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002F1F4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10002F1FC(uint64_t a1)
{
  uint64_t v1;

  sub_10002EE88(a1, v1, (void (*)(void))sub_10002EEDC);
}

void *sub_10002F224()
{
  void *result;

  result = sub_10002F240();
  qword_1001AD4D0 = (uint64_t)result;
  return result;
}

void *sub_10002F240()
{
  char isUniquelyReferenced_nonNull_native;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(6899277, 0xE300000000000000, 1u, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(0x8000000000000000);
  v1 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x656D75736552, 0xE600000000000000, 2u, v1);
  swift_bridgeObjectRelease(0x8000000000000000);
  v2 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x6D6574737953, 0xE600000000000000, 4u, v2);
  swift_bridgeObjectRelease(0x8000000000000000);
  v3 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x6369766544726550, 0xE900000000000065, 8u, v3);
  swift_bridgeObjectRelease(0x8000000000000000);
  v4 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x6E6569736E617254, 0xE900000000000074, 0x10u, v4);
  swift_bridgeObjectRelease(0x8000000000000000);
  v5 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(1868983881, 0xE400000000000000, 0x20u, v5);
  swift_bridgeObjectRelease(0x8000000000000000);
  v6 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x7373655372657355, 0xEB000000006E6F69, 0x40u, v6);
  swift_bridgeObjectRelease(0x8000000000000000);
  v7 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x556E49746C697542, 0xE900000000000049, 0x80u, v7);
  swift_bridgeObjectRelease(0x8000000000000000);
  v8 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x6C6175736956, 0xE600000000000000, 0x100u, v8);
  swift_bridgeObjectRelease(0x8000000000000000);
  v9 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(4408910, 0xE300000000000000, 0x200u, v9);
  swift_bridgeObjectRelease(0x8000000000000000);
  v10 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(1769105747, 0xE400000000000000, 0x400u, v10);
  swift_bridgeObjectRelease(0x8000000000000000);
  v11 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x6F69647541, 0xE500000000000000, 0x800u, v11);
  swift_bridgeObjectRelease(0x8000000000000000);
  v12 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x4449656C707041, 0xE700000000000000, 0x1000u, v12);
  swift_bridgeObjectRelease(0x8000000000000000);
  v13 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x496874754169464DLL, 0xE900000000000043, 0x2000u, v13);
  swift_bridgeObjectRelease(0x8000000000000000);
  v14 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x7774666F5369464DLL, 0xEF74726543657261, 0x4000u, v14);
  swift_bridgeObjectRelease(0x8000000000000000);
  v15 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x6E656B6F5469464DLL, 0xE800000000000000, 0x8000u, v15);
  swift_bridgeObjectRelease(0x8000000000000000);
  v16 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x636572726F636E49, 0xE900000000000074, 0x10000u, v16);
  swift_bridgeObjectRelease(0x8000000000000000);
  v17 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x656C74746F726854, 0xE800000000000000, 0x20000u, v17);
  swift_bridgeObjectRelease(0x8000000000000000);
  v18 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x686374614DLL, 0xE500000000000000, 0x40000u, v18);
  swift_bridgeObjectRelease(0x8000000000000000);
  v19 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x7465736552, 0xE500000000000000, 0x80000u, v19);
  swift_bridgeObjectRelease(0x8000000000000000);
  v20 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0xD000000000000012, 0x8000000100137C10, 0x100000u, v20);
  swift_bridgeObjectRelease(0x8000000000000000);
  v21 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0xD000000000000013, 0x8000000100137C30, 0x200000u, v21);
  swift_bridgeObjectRelease(0x8000000000000000);
  v22 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x74694B656D6F48, 0xE700000000000000, 0x400000u, v22);
  swift_bridgeObjectRelease(0x8000000000000000);
  v23 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x6552657571696E55, 0xEC000000656D7573, 0x800000u, v23);
  swift_bridgeObjectRelease(0x8000000000000000);
  v24 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x74655374696C7053, 0xEA00000000007075, 0x1000000u, v24);
  swift_bridgeObjectRelease(0x8000000000000000);
  v25 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0xD000000000000010, 0x8000000100137C50, 0x2000000u, v25);
  swift_bridgeObjectRelease(0x8000000000000000);
  v26 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x5574694B656D6F48, 0xEB00000000726573, 0x4000000u, v26);
  swift_bridgeObjectRelease(0x8000000000000000);
  v27 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x615063696C627550, 0xEE0064726F777373, 0x8000000u, v27);
  swift_bridgeObjectRelease(0x8000000000000000);
  v28 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x566874754169464DLL, 0xE900000000000033, 0x10000000u, v28);
  swift_bridgeObjectRelease(0x8000000000000000);
  v29 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0xD000000000000012, 0x8000000100137C70, 0x20000000u, v29);
  swift_bridgeObjectRelease(0x8000000000000000);
  v30 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_1000CF82C(0x69687372656E774FLL, 0xEE00666F6F725070, 0x40000000u, v30);
  swift_bridgeObjectRelease(0x8000000000000000);
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_10002F9E0(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  Swift::UInt32 v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD *v26;
  Swift::String v27;
  void *object;
  Swift::String v29;
  Swift::String v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _BYTE v35[24];

  if (qword_1001A2F38 != -1)
LABEL_36:
    swift_once(&qword_1001A2F38, sub_10002F224);
  swift_beginAccess(&qword_1001AD4D0, v35, 0, 0);
  v2 = qword_1001AD4D0;
  v3 = qword_1001AD4D0 + 64;
  v4 = 1 << *(_BYTE *)(qword_1001AD4D0 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(qword_1001AD4D0 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain(qword_1001AD4D0);
  v9 = 0;
  v10 = _swiftEmptyArrayStorage;
  while (v6)
  {
    v11 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v12 = v11 | (v9 << 6);
LABEL_26:
    v16 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v12);
    if ((v16 & ~a1) == 0)
    {
      swift_beginAccess(&qword_1001AD4D0, &v33, 32, 0);
      v17 = qword_1001AD4D0;
      if (*(_QWORD *)(qword_1001AD4D0 + 16) && (v18 = sub_100005F18(v16), (v19 & 1) != 0))
      {
        v20 = (uint64_t *)(*(_QWORD *)(v17 + 56) + 16 * v18);
        v21 = v20[1];
        v32 = *v20;
        swift_endAccess(&v33);
        swift_bridgeObjectRetain(v21);
        result = swift_isUniquelyReferenced_nonNull_native(v10);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1000C896C(0, v10[2] + 1, 1, v10);
          v10 = (_QWORD *)result;
        }
        v22 = v10;
        v23 = v10[2];
        v24 = v22;
        v25 = v22[3];
        if (v23 >= v25 >> 1)
        {
          result = (uint64_t)sub_1000C896C((_QWORD *)(v25 > 1), v23 + 1, 1, v24);
          v24 = (_QWORD *)result;
        }
        v24[2] = v23 + 1;
        v26 = &v24[2 * v23];
        v10 = v24;
        v26[4] = v32;
        v26[5] = v21;
      }
      else
      {
        result = swift_endAccess(&v33);
      }
    }
  }
  v13 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v13 >= v7)
    goto LABEL_34;
  v14 = *(_QWORD *)(v3 + 8 * v13);
  ++v9;
  if (v14)
    goto LABEL_25;
  v9 = v13 + 1;
  if (v13 + 1 >= v7)
    goto LABEL_34;
  v14 = *(_QWORD *)(v3 + 8 * v9);
  if (v14)
    goto LABEL_25;
  v9 = v13 + 2;
  if (v13 + 2 >= v7)
    goto LABEL_34;
  v14 = *(_QWORD *)(v3 + 8 * v9);
  if (v14)
    goto LABEL_25;
  v9 = v13 + 3;
  if (v13 + 3 >= v7)
    goto LABEL_34;
  v14 = *(_QWORD *)(v3 + 8 * v9);
  if (v14)
    goto LABEL_25;
  v9 = v13 + 4;
  if (v13 + 4 >= v7)
    goto LABEL_34;
  v14 = *(_QWORD *)(v3 + 8 * v9);
  if (v14)
  {
LABEL_25:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
    goto LABEL_26;
  }
  v15 = v13 + 5;
  if (v15 >= v7)
  {
LABEL_34:
    swift_release(v2);
    v33 = 0;
    v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease(v34);
    v33 = 0xD000000000000019;
    v34 = 0x8000000100137BF0;
    v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt32, &protocol witness table for UInt32);
    object = v27._object;
    String.append(_:)(v27);
    swift_bridgeObjectRelease(object);
    v29._countAndFlagsBits = 8233;
    v29._object = (void *)0xE200000000000000;
    String.append(_:)(v29);
    v30._countAndFlagsBits = Array.description.getter(v10, &type metadata for String);
    v31 = v30._object;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v31);
    return v33;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v7)
      goto LABEL_34;
    v14 = *(_QWORD *)(v3 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_25;
  }
  __break(1u);
  return result;
}

_DWORD *sub_10002FD20@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

Swift::Int sub_10002FD2C()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10002FD70()
{
  Swift::UInt32 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10002FD98(uint64_t a1)
{
  Swift::UInt32 *v1;
  Swift::UInt32 v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_10002FDD8()
{
  int *v0;

  return sub_10002F9E0(*v0);
}

void sub_10002FDE0(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_10002FDE8@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_10002FDFC@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_10002FE10@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10002FE24(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_10002FE54@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_10002FE80@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_10002FEA4(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_10002FEB8(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_10002FECC(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_10002FEE0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10002FEF4(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_10002FF08(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_10002FF1C(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_10002FF30()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_10002FF40(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

ValueMetadata *type metadata accessor for SFPairingFlags()
{
  return &type metadata for SFPairingFlags;
}

uint64_t sub_10002FF64@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4;
  uint64_t result;

  v4 = sub_1000069FC(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

unint64_t sub_10002FFA4()
{
  unint64_t result;

  result = qword_1001A4A40;
  if (!qword_1001A4A40)
  {
    result = swift_getWitnessTable(&unk_100132CC4, &type metadata for SFPairingFlags);
    atomic_store(result, (unint64_t *)&qword_1001A4A40);
  }
  return result;
}

unint64_t sub_10002FFEC()
{
  unint64_t result;

  result = qword_1001A4A48;
  if (!qword_1001A4A48)
  {
    result = swift_getWitnessTable(&unk_100132C94, &type metadata for SFPairingFlags);
    atomic_store(result, (unint64_t *)&qword_1001A4A48);
  }
  return result;
}

unint64_t sub_100030034()
{
  unint64_t result;

  result = qword_1001A4A50;
  if (!qword_1001A4A50)
  {
    result = swift_getWitnessTable(&unk_100132CEC, &type metadata for SFPairingFlags);
    atomic_store(result, (unint64_t *)&qword_1001A4A50);
  }
  return result;
}

unint64_t sub_10003007C()
{
  unint64_t result;

  result = qword_1001A4A58;
  if (!qword_1001A4A58)
  {
    result = swift_getWitnessTable(&unk_100132D24, &type metadata for SFPairingFlags);
    atomic_store(result, (unint64_t *)&qword_1001A4A58);
  }
  return result;
}

id sub_1000300C4(void *a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(void))
{
  objc_class *v7;
  id v8;
  double v9;
  id v10;
  id v11;
  void *v12;
  id result;
  void *v14;
  id v15;
  id v16;
  objc_super v17;

  v7 = (objc_class *)sub_100006A6C(a2);
  v8 = objc_allocWithZone(v7);
  if (qword_1001A30D8 != -1)
    swift_once(&qword_1001A30D8, sub_1000992D4);
  v9 = *(double *)&qword_1001AD740;
  v10 = objc_allocWithZone((Class)a3(0));
  v11 = a1;
  v12 = (void *)a4();
  result = objc_msgSend((id)objc_opt_self(PRXFlowConfiguration), "defaultConfiguration");
  if (result)
  {
    v14 = result;
    v17.receiver = v8;
    v17.super_class = v7;
    v15 = objc_msgSendSuper2(&v17, "initAsSingleCardWithContentViewController:containerLayoutMargins:configuration:", v12, result, v9, v9, v9, v9);

    v16 = v15;
    objc_msgSend(v16, "setOverrideUserInterfaceStyle:", 1);

    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000301F4(void *a1)
{
  objc_class *v2;
  id v3;
  double v4;
  id v5;
  id v6;
  id v7;
  id result;
  void *v9;
  id v10;
  id v11;
  objc_super v12;

  v2 = (objc_class *)sub_100006A6C(&qword_1001A56B8);
  v3 = objc_allocWithZone(v2);
  if (qword_1001A30D8 != -1)
    swift_once(&qword_1001A30D8, sub_1000992D4);
  v4 = *(double *)&qword_1001AD740;
  v5 = objc_allocWithZone((Class)type metadata accessor for B389CustomEmojiViewController());
  v6 = a1;
  v7 = sub_10005D46C((uint64_t)v6);

  result = objc_msgSend((id)objc_opt_self(PRXFlowConfiguration), "defaultConfiguration");
  if (result)
  {
    v9 = result;
    v12.receiver = v3;
    v12.super_class = v2;
    v10 = objc_msgSendSuper2(&v12, "initAsSingleCardWithContentViewController:containerLayoutMargins:configuration:", v7, result, v4, v4, v4, v4);

    v11 = v10;
    objc_msgSend(v11, "setOverrideUserInterfaceStyle:", 1);

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100030324(void *a1)
{
  void *v1;
  double v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  id v7;
  id result;
  void *v9;
  id v10;
  id v11;
  objc_super v12;
  objc_super v13;

  if (qword_1001A30D8 != -1)
    swift_once(&qword_1001A30D8, sub_1000992D4);
  v3 = *(double *)&qword_1001AD740;
  v4 = (objc_class *)type metadata accessor for B389ErrorViewController();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC18SharingViewService23B389ErrorViewController_mainController], 0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC18SharingViewService23B389ErrorViewController_error] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC18SharingViewService23B389ErrorViewController_buttons] = _swiftEmptyArrayStorage;
  swift_unknownObjectWeakAssign(v6, a1);
  v13.receiver = v5;
  v13.super_class = v4;
  v7 = objc_msgSendSuper2(&v13, "initWithContentView:", 0);
  result = objc_msgSend((id)objc_opt_self(PRXFlowConfiguration), "defaultConfiguration");
  if (result)
  {
    v9 = result;
    v12.receiver = v1;
    v12.super_class = (Class)sub_100006A6C(&qword_1001A5460);
    v10 = objc_msgSendSuper2(&v12, "initAsSingleCardWithContentViewController:containerLayoutMargins:configuration:", v7, v9, v3, v3, v3, v3);

    v11 = v10;
    objc_msgSend(v11, "setOverrideUserInterfaceStyle:", 1);

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100030494()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;

  v1 = v0;
  v2 = sub_100006A6C(&qword_1001A3CE0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchTimeInterval(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v11);
  v16 = (char *)&v36 - v15;
  v17 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_loadingVC];
  if (!v17)
  {
    __break(1u);
    goto LABEL_11;
  }
  v18 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav];
  if (!v18)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v37 = v17;
  sub_10011757C(v18, v37);
  static DispatchTime.now()();
  *v8 = 90;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DispatchTimeInterval.seconds(_:), v5);
  + infix(_:_:)(v13, v8);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v13, v9);
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v21 = type metadata accessor for Logger(0, v20);
  v22 = sub_10000E8E8(v21, (uint64_t)qword_1001A4A60);
  v23 = Logger.logObject.getter(v22);
  v25 = static os_log_type_t.default.getter(v23, v24);
  if (os_log_type_enabled(v23, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v25, "Starting timeout.", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v16, v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v4, 1, 1, v9);
  sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
  v27 = (void *)static OS_dispatch_queue.main.getter();
  v28 = swift_allocObject(&unk_100179A08, 24, 7);
  *(_QWORD *)(v28 + 16) = v1;
  v29 = type metadata accessor for PushableTimer(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v30 = v1;
  v31 = sub_100021388(v13, (uint64_t)v4, v27, (uint64_t)sub_10005BAD0, v28);

  swift_release(v28);
  v32 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_timeout;
  v33 = *(_QWORD *)&v30[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_timeout];
  *(_QWORD *)&v30[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_timeout] = v31;
  swift_release(v33);
  v35 = *(_QWORD *)&v30[v32];
  if (v35)
  {
    swift_getObjectType(*(_QWORD *)(v35 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_timer));
    swift_retain(v35);
    OS_dispatch_source.resume()();
    swift_release(v35);
  }
  sub_100031994(v34);

  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v9);
}

_QWORD *sub_100030800(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *result;
  char v26;

  if ((unint64_t)a1 >> 62)
    goto LABEL_34;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v2)
  {
    v3 = _swiftEmptyArrayStorage;
    for (i = 4; ; ++i)
    {
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1)
         : *(id *)(a1 + 8 * i);
      v6 = v5;
      v7 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v8 = objc_msgSend(v5, "roles");
      v9 = sub_100013194(0, (unint64_t *)&qword_1001A5468, SPBeaconRole_ptr);
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

      v11 = v6;
      v12 = sub_1000555F8(v10, v11);
      swift_bridgeObjectRelease(v10);

      v13 = v12[2];
      v14 = v3[2];
      v15 = v14 + v13;
      if (__OFADD__(v14, v13))
        goto LABEL_30;
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v3);
      if ((_DWORD)isUniquelyReferenced_nonNull_native && v15 <= v3[3] >> 1)
      {
        if (v12[2])
          goto LABEL_19;
      }
      else
      {
        if (v14 <= v15)
          v17 = v14 + v13;
        else
          v17 = v14;
        v3 = sub_1000C8658(isUniquelyReferenced_nonNull_native, v17, 1, v3);
        if (v12[2])
        {
LABEL_19:
          v18 = v3[2];
          if ((v3[3] >> 1) - v18 < v13)
            goto LABEL_32;
          v19 = (unint64_t)&v3[2 * v18 + 4];
          if ((unint64_t)(v12 + 4) < v19 + 16 * v13 && v19 < (unint64_t)&v12[2 * v13 + 4])
          {
            v26 = 2;
            result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
            __break(1u);
            return result;
          }
          sub_100006A6C((uint64_t *)&unk_1001A5470);
          swift_arrayInitWithCopy(v19);
          if (v13)
          {
            v21 = v3[2];
            v22 = __OFADD__(v21, v13);
            v23 = v21 + v13;
            if (v22)
              goto LABEL_33;
            v3[2] = v23;
          }
          goto LABEL_5;
        }
      }
      if (v13)
        goto LABEL_31;
LABEL_5:
      swift_bridgeObjectRelease(v12);
      if (v7 == v2)
      {
        swift_bridgeObjectRelease(a1);
        return v3;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v24);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100030AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A4A60);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A4A60);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void *sub_100030B40(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDInfo, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_100030B84(uint64_t a1, uint64_t a2)
{
  return sub_10005575C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_100030BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  id v8;
  id v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleName + 8);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleName);
LABEL_3:
    swift_bridgeObjectRetain(v1);
    return v2;
  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories);
  if (!v4)
  {
    v2 = 0;
    goto LABEL_3;
  }
  v5 = swift_bridgeObjectRetain(*(_QWORD *)(v0
                                          + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories));
  v6 = sub_100030800(v5);
  result = swift_bridgeObjectRelease(v4);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex + 8) == 1)
  {
    swift_bridgeObjectRelease(v6);
    v2 = 0;
    goto LABEL_3;
  }
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < v6[2])
  {
    v8 = (id)v6[2 * v7 + 5];
    swift_bridgeObjectRelease(v6);
    v9 = objc_msgSend(v8, "roleId");
    if (v9 == (id)SPBeaconRoleIdOther)
    {
      v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v11 = String._bridgeToObjectiveC()();
      v12 = String._bridgeToObjectiveC()();
      v13 = sub_100117218(v10, v11, v12);

    }
    else
    {
      v13 = objc_msgSend(v8, "role");
    }
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;

    v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_fnameDisplay);
    v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_fnameDisplay + 8);
    if (v17)
    {
      v18 = *v16;
      v19 = (void *)objc_opt_self(NSBundle);
      swift_bridgeObjectRetain(v17);
      v20 = objc_msgSend(v19, "mainBundle");
      v21 = String._bridgeToObjectiveC()();
      v22 = String._bridgeToObjectiveC()();
      v23 = sub_100117218(v20, v21, v22);

      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

      v27 = sub_100006A6C((uint64_t *)&unk_1001A7D20);
      v28 = swift_allocObject(v27, 112, 7);
      *(_OWORD *)(v28 + 16) = xmmword_100131C30;
      *(_QWORD *)(v28 + 56) = &type metadata for String;
      v29 = sub_10000D794();
      *(_QWORD *)(v28 + 32) = v18;
      *(_QWORD *)(v28 + 40) = v17;
      *(_QWORD *)(v28 + 96) = &type metadata for String;
      *(_QWORD *)(v28 + 104) = v29;
      *(_QWORD *)(v28 + 64) = v29;
      *(_QWORD *)(v28 + 72) = v2;
      *(_QWORD *)(v28 + 80) = v15;
      v2 = static String.localizedStringWithFormat(_:_:)(v24, v26, v28);

      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v28);
    }
    else
    {

    }
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100030EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  unint64_t v7;
  id v8;
  id v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleEmoji + 8);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleEmoji);
LABEL_10:
    swift_bridgeObjectRetain(v1);
    return v2;
  }
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories);
  if (!v3)
  {
LABEL_6:
    v2 = 0;
    goto LABEL_10;
  }
  v4 = swift_bridgeObjectRetain(*(_QWORD *)(v0
                                          + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories));
  v5 = sub_100030800(v4);
  result = swift_bridgeObjectRelease(v3);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex + 8) == 1)
  {
    swift_bridgeObjectRelease(v5);
    goto LABEL_6;
  }
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < v5[2])
  {
    v8 = (id)v5[2 * v7 + 5];
    swift_bridgeObjectRelease(v5);
    v9 = objc_msgSend(v8, "roleEmoji");

    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003100C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  unint64_t v7;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
    return 30;
  v2 = v1;
  v3 = objc_msgSend(v1, "window");

  if (!v3)
    return 30;

  v4 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  if (v5 != (id)1)
    return 2;
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v7 = (unint64_t)objc_msgSend(v6, "activeInterfaceOrientation");

  if (v7 > 0x40)
    return 0;
  if (v7 == 64)
    return 0;
  return 1 << v7;
}

void sub_100031110(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char *v19;
  Class isa;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  Class v26;
  unint64_t v27;
  Class v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  BOOL v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  objc_class *v52;
  id v53;
  uint64_t v54;
  char *v55;
  double v56;
  objc_class *v57;
  char *v58;
  uint64_t v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  Class v66;
  char *v67;
  id v68;
  void *v69;
  char *v70;
  id v71;
  void *v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  objc_super v78;
  objc_super v79;
  char v80[80];
  objc_super v81;

  v2 = v1;
  v81.receiver = v1;
  v81.super_class = (Class)type metadata accessor for B389SetupMainViewController(0);
  objc_msgSendSuper2(&v81, "viewWillAppear:", a1 & 1);
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v5 = type metadata accessor for Logger(0, v4);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A4A60);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "B389SetupMainViewController viewWillAppear", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = objc_msgSend(v2, "_remoteViewControllerProxy");
  v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_retain];
  *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_retain] = v11;
  swift_unknownObjectRetain(v11);
  swift_unknownObjectRelease(v12);
  if (v11)
  {
    objc_msgSend(v11, "setStatusBarHidden:withDuration:", 1, 0.0);
    swift_unknownObjectRetain(v11);
    objc_msgSend(v11, "setDesiredHardwareButtonEvents:", objc_msgSend(v2, "desiredHomeButtonEvents"));
    swift_unknownObjectRelease(v11);
  }
  sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter();
  v14 = sub_100006A6C(&qword_1001A56A8);
  inited = swift_initStackObject(v14, v80);
  *(_OWORD *)(inited + 16) = xmmword_100131C40;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(CBManagerNeedsRestrictedStateOperation);
  *(_QWORD *)(inited + 40) = v16;
  *(_QWORD *)(inited + 72) = &type metadata for Bool;
  *(_BYTE *)(inited + 48) = 1;
  v17 = sub_1000046D0(inited);
  v18 = objc_allocWithZone((Class)CBCentralManager);
  v19 = v2;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v17);
  v21 = objc_msgSend(v18, "initWithDelegate:queue:options:", v19, v13, isa);

  v22 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central;
  v23 = *(void **)&v19[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central];
  *(_QWORD *)&v19[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central] = v21;

  v24 = *(void **)&v19[v22];
  if (!v24)
  {
    __break(1u);
    goto LABEL_27;
  }
  sub_100013194(0, (unint64_t *)&unk_1001A54A0, CBUUID_ptr);
  v25 = v24;
  v26 = Array._bridgeToObjectiveC()().super.isa;
  v27 = sub_1000046D0((uint64_t)_swiftEmptyArrayStorage);
  v28 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v27);
  objc_msgSend(v25, "scanForPeripheralsWithServices:options:", v26, v28);

  v29 = *(void **)&v19[v22];
  if (!v29)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v30 = objc_msgSend(v29, "sharedPairingAgent");
  if (!v30)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v31 = v30;
  objc_msgSend(v30, "setDelegate:", v19);

  v32 = objc_msgSend(objc_allocWithZone((Class)SVSCommonNavController), "init");
  v33 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav;
  v34 = *(void **)&v19[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav];
  *(_QWORD *)&v19[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav] = v32;

  v35 = *(void **)&v19[v33];
  if (!v35)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  objc_msgSend(v35, "setDelegate:", v19);
  v36 = *(void **)&v19[v33];
  if (!v36)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  objc_msgSend(v36, "setNavigationBarHidden:", 1);
  v37 = *(void **)&v19[v33];
  if (!v37)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(v37, "setModalPresentationStyle:", 4);
  v38 = *(void **)&v19[v33];
  if (!v38)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  objc_msgSend(v38, "setTransitioningDelegate:", *(_QWORD *)&v19[v33]);
  v39 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389StartViewController()), "initWithMainController:", v19);
  v40 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startVC;
  v41 = *(void **)&v19[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startVC];
  *(_QWORD *)&v19[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startVC] = v39;

  v42 = sub_100056284();
  v43 = *(void **)&v19[v33];
  if (!v42)
  {
    if (v43)
    {
      v50 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
      v51 = swift_allocObject(v50, 40, 7);
      *(_OWORD *)(v51 + 16) = xmmword_100132030;
      v52 = (objc_class *)sub_100006A6C(&qword_1001A56B0);
      v53 = objc_allocWithZone(v52);
      v54 = qword_1001A30D8;
      v55 = v19;
      v48 = v43;
      if (v54 != -1)
        swift_once(&qword_1001A30D8, sub_1000992D4);
      v56 = *(double *)&qword_1001AD740;
      v57 = (objc_class *)type metadata accessor for B389RestrictedViewController();
      v58 = (char *)objc_allocWithZone(v57);
      v59 = swift_unknownObjectWeakInit(&v58[OBJC_IVAR____TtC18SharingViewService28B389RestrictedViewController_mainController], 0);
      swift_unknownObjectWeakAssign(v59, v55);
      v79.receiver = v58;
      v79.super_class = v57;
      v60 = objc_msgSendSuper2(&v79, "initWithContentView:", 0);
      v61 = objc_msgSend((id)objc_opt_self(PRXFlowConfiguration), "defaultConfiguration");
      if (v61)
      {
        v62 = v61;
        v78.receiver = v53;
        v78.super_class = v52;
        v63 = objc_msgSendSuper2(&v78, "initAsSingleCardWithContentViewController:containerLayoutMargins:configuration:", v60, v61, v56, v56, v56, v56);

        v64 = v63;
        objc_msgSend(v64, "setOverrideUserInterfaceStyle:", 1);

        *(_QWORD *)(v51 + 32) = v64;
        specialized Array._endMutation()(v65);
        v47 = v51;
        sub_100013194(0, (unint64_t *)&qword_1001A3A10, UIViewController_ptr);
        goto LABEL_23;
      }
LABEL_36:
      __break(1u);
      return;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (!v43)
    goto LABEL_33;
  v44 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v45 = swift_allocObject(v44, 40, 7);
  *(_OWORD *)(v45 + 16) = xmmword_100132030;
  v46 = *(void **)&v19[v40];
  if (!v46)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v45 + 32) = v46;
  v77 = v45;
  specialized Array._endMutation()(v45);
  v47 = v77;
  sub_100013194(0, (unint64_t *)&qword_1001A3A10, UIViewController_ptr);
  v48 = v43;
  v49 = v46;
LABEL_23:
  v66 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v47);
  objc_msgSend(v48, "setViewControllers:", v66);

  v67 = v19;
  v68 = sub_1000300C4(v67, &qword_1001A56A0, (uint64_t (*)(_QWORD))type metadata accessor for B389CustomNameViewController, (uint64_t (*)(void))sub_100090854);
  v69 = *(void **)&v67[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_namingVC];
  *(_QWORD *)&v67[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_namingVC] = v68;

  v70 = v67;
  v71 = sub_1000300C4(v70, (uint64_t *)&unk_1001A54F0, (uint64_t (*)(_QWORD))type metadata accessor for B389LinkingViewController, (uint64_t (*)(void))sub_1000154E8);
  v72 = *(void **)&v70[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_linkingVC];
  *(_QWORD *)&v70[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_linkingVC] = v71;

  v73 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389LoadingViewController()), "initWithMainController:", v70);
  v74 = *(void **)&v70[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_loadingVC];
  *(_QWORD *)&v70[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_loadingVC] = v73;

  if (v70[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_needsNFCUI] == 1)
    sub_100031864(v75, v76);
  sub_100031994(v75);
  swift_unknownObjectRelease(v11);
}

void sub_100031864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;

  v3 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "showNFCStatus", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcVC;
  v11 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcVC);
  v12 = v11;
  v13 = v11;
  if (!v11)
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389NFCStatusViewController()), "initWithMainController:", v3);
    v12 = *(void **)(v3 + v10);
  }
  *(_QWORD *)(v3 + v10) = v13;
  v14 = v11;

  v15 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
  if (v15)
  {
    v16 = *(void **)(v3 + v10);
    if (v16)
    {
      sub_10011757C(v15, v16);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100031994(uint64_t a1)
{
  char *v1;
  char *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  if (qword_1001A2F10 != -1)
    a1 = swift_once(&qword_1001A2F10, sub_10001DDF8);
  v3 = (os_unfair_lock_s *)qword_1001A3CD8;
  __chkstk_darwin(a1);
  swift_retain(v3);
  os_unfair_lock_lock(v3 + 4);
  sub_1000D205C((_QWORD *(*)(uint64_t *__return_ptr))sub_100055804, &v15);
  os_unfair_lock_unlock(v3 + 4);
  v4 = v15;
  swift_release(v3);
  if (v4 != 1)
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v6 = type metadata accessor for Logger(0, v5);
    v7 = sub_10000E8E8(v6, (uint64_t)qword_1001A4A60);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v10 = 134217984;
      v15 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v10 + 4, v10 + 12);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unexpected quantity of B389SetupMainViewController instances: %lu. fault is likely due to a retain cycle.", v10, 0xCu);
      swift_slowDealloc(v10, -1, -1);
    }

  }
  v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om];
  v12 = v2;
  sub_1000218FC(1478, 0xD00000000000006ELL, 0x8000000100138430, v11, v12);

  if ((v12[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_needsNFCUI] & 1) == 0)
  {
    sub_100038B38();
    sub_10003C158();
    sub_100048494();
    sub_10003C5D0();
    sub_10003AF94();
    sub_10003BC18(v13, v14);
    sub_10003D37C();
    sub_1000403D8();
    sub_1000406D0();
    sub_100038B38();
    sub_100040894();
    sub_100041000();
    sub_100041644();
    sub_10003DFF0();
    sub_10003C394();
    sub_100042238();
    sub_100044A20();
    sub_100045148();
    sub_100046230();
    sub_100046A58();
    sub_100047378();
    sub_100047728();
    sub_10003E184();
    sub_10004792C(1);
    sub_10003FA24();
    sub_1000323A4(1);
  }
}

void sub_100031DEC(char a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  char *v52;
  void (*v53)(_QWORD, uint64_t, double);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  Swift::UInt64 v57;
  Swift::UInt64 v58;
  BOOL v59;
  Swift::UInt64 v60;
  double v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  void *v68;
  id v69;
  objc_super v70;
  objc_super v71;
  objc_super v72;
  objc_super v73;

  v3 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A4A60);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "Main viewDidDisappear", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v73.receiver = v3;
  v73.super_class = (Class)type metadata accessor for B389SetupMainViewController(0);
  objc_msgSendSuper2(&v73, "viewDidDisappear:", a1 & 1);
  sub_1000323A4(0);
  v11 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startVC;
  v12 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startVC];
  if (v12)
  {
    objc_msgSend(v12, "setMainController:", 0);
    v13 = *(void **)&v3[v11];
  }
  else
  {
    v13 = 0;
  }
  *(_QWORD *)&v3[v11] = 0;

  v14 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleVC;
  v15 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleVC];
  if (v15)
  {
    objc_msgSend(v15, "setMainController:", 0);
    v16 = *(void **)&v3[v14];
  }
  else
  {
    v16 = 0;
  }
  *(_QWORD *)&v3[v14] = 0;

  v17 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_namingVC;
  v18 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_namingVC];
  if (v18)
  {
    v19 = v18;
    v72.receiver = v19;
    v72.super_class = (Class)sub_100006A6C(&qword_1001A56A0);
    v20 = objc_msgSendSuper2(&v72, "contentViewController");
    v21 = type metadata accessor for B389CustomNameViewController();
    v22 = swift_dynamicCastClassUnconditional(v20, v21, 0, 0, 0);
    swift_unknownObjectWeakAssign(v22 + OBJC_IVAR____TtC18SharingViewService28B389CustomNameViewController_mainController, 0);

    v18 = *(void **)&v3[v17];
  }
  *(_QWORD *)&v3[v17] = 0;

  v23 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_linkingVC;
  v24 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_linkingVC];
  if (v24)
  {
    v25 = v24;
    v71.receiver = v25;
    v71.super_class = (Class)sub_100006A6C((uint64_t *)&unk_1001A54F0);
    v26 = objc_msgSendSuper2(&v71, "contentViewController");
    v27 = type metadata accessor for B389LinkingViewController();
    v28 = swift_dynamicCastClassUnconditional(v26, v27, 0, 0, 0);
    v29 = *(void **)(v28 + OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_mainController);
    *(_QWORD *)(v28 + OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_mainController) = 0;

    v24 = *(void **)&v3[v23];
  }
  *(_QWORD *)&v3[v23] = 0;

  v30 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_loadingVC;
  v31 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_loadingVC];
  if (v31)
  {
    objc_msgSend(v31, "setMainController:", 0);
    v32 = *(void **)&v3[v30];
  }
  else
  {
    v32 = 0;
  }
  *(_QWORD *)&v3[v30] = 0;

  v33 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_doneVC;
  v34 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_doneVC];
  if (v34)
  {
    objc_msgSend(v34, "setMainController:", 0);
    v35 = *(void **)&v3[v33];
  }
  else
  {
    v35 = 0;
  }
  *(_QWORD *)&v3[v33] = 0;

  v36 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_errorVC;
  v37 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_errorVC];
  if (v37)
  {
    v38 = v37;
    v70.receiver = v38;
    v70.super_class = (Class)sub_100006A6C(&qword_1001A5460);
    v39 = objc_msgSendSuper2(&v70, "contentViewController");
    v40 = type metadata accessor for B389ErrorViewController();
    v41 = swift_dynamicCastClassUnconditional(v39, v40, 0, 0, 0);
    swift_unknownObjectWeakAssign(v41 + OBJC_IVAR____TtC18SharingViewService23B389ErrorViewController_mainController, 0);

    v37 = *(void **)&v3[v36];
  }
  *(_QWORD *)&v3[v36] = 0;

  v42 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDVC;
  v43 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDVC];
  if (v43)
  {
    objc_msgSend(v43, "setMainController:", 0);
    v44 = *(void **)&v3[v42];
  }
  else
  {
    v44 = 0;
  }
  *(_QWORD *)&v3[v42] = 0;

  v45 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_hsa2VC;
  v46 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_hsa2VC];
  if (v46)
  {
    objc_msgSend(v46, "setMainController:", 0);
    v47 = *(void **)&v3[v45];
  }
  else
  {
    v47 = 0;
  }
  *(_QWORD *)&v3[v45] = 0;

  v48 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairLockedVC;
  v49 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairLockedVC];
  if (v49)
  {
    objc_msgSend(v49, "setMainController:", 0);
    v50 = *(void **)&v3[v48];
  }
  else
  {
    v50 = 0;
  }
  *(_QWORD *)&v3[v48] = 0;

  v51 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcVC;
  v52 = *(char **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcVC];
  if (!v52)
    goto LABEL_41;
  v53 = *(void (**)(_QWORD, uint64_t, double))&v52[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler];
  if (!v53)
    goto LABEL_40;
  v54 = *(_QWORD *)&v52[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler + 8];
  v55 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_uiStartTicks;
  if (*(_QWORD *)&v52[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_uiStartTicks])
  {
    sub_100022024(*(_QWORD *)&v52[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler], v54);
    v56 = v52;
    v57 = UpTicks()();
    v58 = *(_QWORD *)&v52[v55];
    v59 = v57 >= v58;
    v60 = v57 - v58;
    if (!v59)
    {
      __break(1u);
      return;
    }
    v61 = UpTicksToSecondsF(_:)(v60);

  }
  else
  {
    swift_retain(v54);
    v61 = 0.0;
  }
  v53(0, 1, v61);
  sub_100012F60((uint64_t)v53, v54);
  v52 = *(char **)&v3[v51];
  if (v52)
  {
LABEL_40:
    objc_msgSend(v52, "setMainController:", 0);
    v62 = *(void **)&v3[v51];
  }
  else
  {
LABEL_41:
    v62 = 0;
  }
  *(_QWORD *)&v3[v51] = 0;

  v63 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_timeout;
  v64 = *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_timeout];
  if (v64)
  {
    swift_getObjectType(*(_QWORD *)(v64 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_timer));
    swift_retain(v64);
    OS_dispatch_source.cancel()();
    swift_release(v64);
    v65 = *(_QWORD *)&v3[v63];
  }
  else
  {
    v65 = 0;
  }
  *(_QWORD *)&v3[v63] = 0;
  *(_QWORD *)&v66 = swift_release(v65).n128_u64[0];
  v67 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_xpcAgent;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_xpcAgent], "invalidate", v66);
  v68 = *(void **)&v3[v67];
  *(_QWORD *)&v3[v67] = 0;

  v69 = objc_msgSend(v3, "_remoteViewControllerProxy");
  sub_100037064(0);
  if (v69)
  {
    if ((objc_msgSend(v69, "respondsToSelector:", "invalidate") & 1) != 0)
      objc_msgSend(v69, "invalidate");
    swift_unknownObjectRelease(v69);
  }
}

void sub_1000323A4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  NSObject *v32;
  NSObject *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  os_log_type_t v49;
  uint8_t *v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t type;
  os_log_type_t typea;
  NSObject *v61;
  unsigned int v62;
  uint64_t v63;
  id aBlock;
  unint64_t v66;
  void (*v67)(uint64_t, void *);
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v2 = v1;
  aBlock = (id)0x3A73736563637573;
  v66 = 0xE900000000000020;
  v3 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v4 = 1702195828;
  else
    v4 = 0x65736C6166;
  if (v3)
    v5 = 0xE500000000000000;
  else
    v5 = 0xE400000000000000;
  v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease(v5);
  v8 = aBlock;
  v7 = v66;
  v9 = v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, &aBlock, 33, 0);
  sub_1000C967C(&v71, 0xD000000000000019, 0x8000000100138D40);
  v10 = v72;
  swift_endAccess(&aBlock);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  swift_bridgeObjectRetain(v7);
  sub_1000219E4(1428, 0xD00000000000006ELL, 0x8000000100138430, v11, 0xD000000000000019, 0x8000000100138D40, (uint64_t)v8, v7);
  swift_bridgeObjectRelease_n(v7, 2);
  sub_100037064(0);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentDisconnect) & 1) != 0)
    goto LABEL_35;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentDisconnect) = 1;
  v14 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph);
  if (v14)
  {
    v15 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central);
    if (!v15)
    {
LABEL_44:
      __break(1u);
      return;
    }
    v63 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph);
    v16 = v14;
    v17 = objc_msgSend(v15, "sharedPairingAgent");
    v71 = (uint64_t)v17;
    v18 = sub_100006A6C((uint64_t *)&unk_1001A54C0);
    Optional.unwrap(_:file:line:)(&aBlock, sub_10003BBFC, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1437, v18);

    v19 = aBlock;
    v62 = objc_msgSend(aBlock, "isPeerPaired:", v16);
    if (v62)
    {
      v21 = 0x64656C696166;
      if ((a1 & 1) != 0)
        v21 = 0x6564656563637573;
      type = v21;
      if ((a1 & 1) != 0)
        v22 = 0xE900000000000064;
      else
        v22 = 0xE600000000000000;
      if (qword_1001A2F40 != -1)
        swift_once(&qword_1001A2F40, sub_100030AB0);
      v23 = type metadata accessor for Logger(0, v20);
      sub_10000E8E8(v23, (uint64_t)qword_1001A4A60);
      v24 = swift_bridgeObjectRetain(v22);
      v25 = Logger.logObject.getter(v24);
      v27 = static os_log_type_t.default.getter(v25, v26);
      if (os_log_type_enabled(v25, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(12, -1);
        v61 = v19;
        v29 = (void *)swift_slowAlloc(32, -1);
        aBlock = v29;
        *(_DWORD *)v28 = 136315138;
        swift_bridgeObjectRetain(v22);
        v71 = sub_10001EFA4(type, v22, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v28 + 4, v28 + 12);
        swift_bridgeObjectRelease_n(v22, 3);
        _os_log_impl((void *)&_mh_execute_header, v25, v27, "Intentionally unpairing after setup %s <rdar://49613642>", v28, 0xCu);
        swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
        v30 = v29;
        v19 = v61;
        swift_slowDealloc(v30, -1, -1);
        swift_slowDealloc(v28, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v22, 2);
      }
      -[NSObject unpairPeer:](v19, "unpairPeer:", v16);
    }
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v31 = type metadata accessor for Logger(0, v20);
    sub_10000E8E8(v31, (uint64_t)qword_1001A4A60);
    v32 = v16;
    v33 = Logger.logObject.getter(v32);
    v35 = static os_log_type_t.default.getter(v33, v34);
    if (os_log_type_enabled(v33, v35))
    {
      v36 = swift_slowAlloc(18, -1);
      v58 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v36 = 138412546;
      typea = v35;
      aBlock = v32;
      v32 = v32;
      v37 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v66, v36 + 4, v36 + 12);
      *v58 = v63;

      *(_WORD *)(v36 + 12) = 1024;
      LODWORD(aBlock) = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v36 + 14, v36 + 18);
      _os_log_impl((void *)&_mh_execute_header, v33, typea, "%@. BT-paired already? %{BOOL}d", (uint8_t *)v36, 0x12u);
      v38 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v58, 1, v38);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v36, -1, -1);
    }
    else
    {

      v33 = v32;
      v37 = v32;
    }

  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_findMyFinalizeState) != 2)
  {
    v39 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
    if (v39)
    {
      v40 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_spManager);
      v69 = sub_100048148;
      v70 = 0;
      aBlock = _NSConcreteStackBlock;
      v66 = 1107296256;
      v67 = sub_1000AC624;
      v68 = &unk_100179110;
      v41 = _Block_copy(&aBlock);
      v42 = v39;
      objc_msgSend(v40, "invalidatePairingSession:completion:", v42, v41);
      _Block_release(v41);

    }
  }
  if ((a1 & 1) != 0)
    sub_100048338(v12, v13);
  v43 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central);
  if (!v43)
  {
    __break(1u);
    goto LABEL_44;
  }
  objc_msgSend(v43, "stopScan");
LABEL_35:
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_didTapStart) == 1)
  {
    v44 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_reenabledProxCard;
    if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_reenabledProxCard) & 1) == 0)
    {
      if (qword_1001A2F40 != -1)
        swift_once(&qword_1001A2F40, sub_100030AB0);
      v45 = type metadata accessor for Logger(0, v13);
      v46 = sub_10000E8E8(v45, (uint64_t)qword_1001A4A60);
      v47 = Logger.logObject.getter(v46);
      v49 = static os_log_type_t.default.getter(v47, v48);
      if (os_log_type_enabled(v47, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v50 = 0;
        _os_log_impl((void *)&_mh_execute_header, v47, v49, "Re-enabling another setup", v50, 2u);
        swift_slowDealloc(v50, -1, -1);
      }

      v51 = objc_msgSend(objc_allocWithZone((Class)SFClient), "init");
      v52 = swift_allocObject(&unk_1001790D0, 24, 7);
      *(_QWORD *)(v52 + 16) = v51;
      v69 = sub_100055D98;
      v70 = v52;
      aBlock = _NSConcreteStackBlock;
      v66 = 1107296256;
      v67 = sub_1000AC624;
      v68 = &unk_1001790E8;
      v53 = _Block_copy(&aBlock);
      v54 = v70;
      v55 = v51;
      objc_msgSend(v55, "reenableProxCardType:completion:", 102, v53, swift_release(v54).n128_f64[0]);

      _Block_release(v53);
      *(_BYTE *)(v2 + v44) = 1;
    }
  }
  swift_beginAccess(v9, &aBlock, 33, 0);
  sub_1000D0A84(0xD000000000000019, 0x8000000100138D40);
  v57 = v56;
  swift_endAccess(&aBlock);
  swift_bridgeObjectRelease(v57);
  sub_100021A0C(1472, 0xD00000000000006ELL, 0x8000000100138430, v11, 0xD000000000000019, 0x8000000100138D40, 0, 0xE000000000000000);
}

void sub_100032C68(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  NSObject *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  void **v33;
  id v34;
  void **aBlock;
  _QWORD v36[4];
  _QWORD *v37;
  char v38[24];

  v3 = v2;
  v6 = sub_100006A6C(&qword_1001A5428);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig];
  swift_beginAccess(&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig], v38, 0, 0);
  sub_100006BD8(v9, (uint64_t)v8, &qword_1001A5428);
  v10 = type metadata accessor for B389PresentationConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) == 1)
  {
    __break(1u);
  }
  else
  {
    v11 = (void **)*(unsigned int *)&v8[*(int *)(v10 + 20)];
    sub_100023FA0((uint64_t)v8, type metadata accessor for B389PresentationConfig);
    v12 = objc_msgSend(objc_allocWithZone((Class)SFDeviceAssetQuery), "initWithTagColor:", v11);
    v13 = swift_allocObject(&unk_100178EF0, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16, v3);
    v14 = (_QWORD *)swift_allocObject(&unk_100179850, 48, 7);
    v14[2] = v13;
    v14[3] = v11;
    v14[4] = a1;
    v14[5] = a2;
    v15 = objc_allocWithZone((Class)SFDeviceAssetRequestConfiguration);
    v36[3] = sub_10005B980;
    v37 = v14;
    aBlock = _NSConcreteStackBlock;
    v36[0] = 1107296256;
    v36[1] = sub_100055554;
    v36[2] = &unk_100179868;
    v16 = _Block_copy(&aBlock);
    swift_retain(v13);
    v17 = objc_msgSend(v15, "initWithQueryResultHandler:", v16, swift_retain(a2).n128_f64[0]);
    _Block_release(v16);
    v18 = v37;
    swift_release(v13);
    swift_release(v18);
    objc_msgSend(v17, "setTimeout:", 3.0);
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v20 = type metadata accessor for Logger(0, v19);
    sub_10000E8E8(v20, (uint64_t)qword_1001A4A60);
    v21 = v3;
    v22 = Logger.logObject.getter(v21);
    v24 = static os_log_type_t.default.getter(v22, v23);
    if (os_log_type_enabled(v22, v24))
    {
      v25 = swift_slowAlloc(22, -1);
      v26 = swift_slowAlloc(8, -1);
      v33 = v11;
      v27 = (_QWORD *)v26;
      *(_DWORD *)v25 = 138412546;
      v34 = v17;
      aBlock = (void **)&v21->isa;
      v28 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v36, v25 + 4, v25 + 12);
      *v27 = v3;

      *(_WORD *)(v25 + 12) = 2048;
      aBlock = v33;
      v17 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v36, v25 + 14, v25 + 22);
      _os_log_impl((void *)&_mh_execute_header, v22, v24, "Loading asset bundle. self: %@, colorCode: %ld", (uint8_t *)v25, 0x16u);
      v29 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v27, 1, v29);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {

      v22 = v21;
    }

    v30 = objc_msgSend(objc_allocWithZone((Class)SFDeviceAssetManager), "init");
    sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
    v31 = (void *)static OS_dispatch_queue.main.getter();
    objc_msgSend(v30, "setDispatchQueue:", v31);

    objc_msgSend(v30, "activate");
    objc_msgSend(v30, "getAssetBundleForDeviceQuery:withRequestConfiguration:", v12, v17);

  }
}

uint64_t sub_100033080(void *a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void *, uint64_t))
{
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t *v40;
  _QWORD v41[3];
  char v42[8];
  uint64_t v43;
  unint64_t v44;
  char v45[24];
  uint64_t v46;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v14 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v14, (uint64_t)qword_1001A4A60);
  swift_retain(a6);
  v15 = a1;
  swift_bridgeObjectRetain(a3);
  swift_errorRetain(a5);
  swift_retain(a6);
  v16 = v15;
  swift_bridgeObjectRetain(a3);
  v17 = swift_errorRetain(a5);
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.default.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    v35 = a4;
    v36 = v20;
    v21 = swift_slowAlloc(58, -1);
    v40 = (uint64_t *)swift_slowAlloc(8, -1);
    v37 = swift_slowAlloc(96, -1);
    v46 = v37;
    *(_DWORD *)v21 = 138413570;
    swift_beginAccess(a6 + 16, v45, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a6 + 16);
    v23 = Strong;
    if (Strong)
      v43 = Strong;
    else
      v43 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v21 + 4, v21 + 12);
    *v40 = v23;
    swift_release_n(a6, 2, v25);
    *(_WORD *)(v21 + 12) = 2048;
    v43 = a7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v21 + 14, v21 + 22);
    *(_WORD *)(v21 + 22) = 2080;
    v43 = (uint64_t)a1;
    v26 = sub_100006A6C(&qword_1001A55F8);
    v27 = Optional.debugDescription.getter(v26);
    v29 = v28;
    v43 = sub_10001EFA4(v27, v28, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v21 + 24, v21 + 32);

    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v21 + 32) = 2080;
    swift_bridgeObjectRetain(a3);
    v43 = sub_10001EFA4(a2, a3, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v21 + 34, v21 + 42);
    swift_bridgeObjectRelease_n(a3, 3);
    *(_WORD *)(v21 + 42) = 1024;
    LODWORD(v43) = v35 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, (char *)&v43 + 4, v21 + 44, v21 + 48);
    *(_WORD *)(v21 + 48) = 2080;
    if (a5)
    {
      swift_getErrorValue(a5, v42, v41);
      v30 = Error.localizedDescription.getter(v41[1], v41[2]);
      v32 = v31;
    }
    else
    {
      v43 = 0;
      v44 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v44);
      v32 = 0x8000000100136820;
      v30 = 0xD000000000000015;
    }
    v43 = sub_10001EFA4(v30, v32, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v21 + 50, v21 + 58);
    swift_bridgeObjectRelease(v32);
    swift_errorRelease(a5);
    swift_errorRelease(a5);
    _os_log_impl((void *)&_mh_execute_header, v18, v36, "Finished loading asset bundle. self: %@, colorCode: %ld, bundle: %s, productType: %s, isFallback: %{BOOL}d, error: %s", (uint8_t *)v21, 0x3Au);
    v33 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v40, 1, v33);
    swift_slowDealloc(v40, -1, -1);
    swift_arrayDestroy(v37, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(a3, 2);

    swift_release_n(a6, 2, v24);
    swift_errorRelease(a5);
    swift_errorRelease(a5);

  }
  return a8(a1, a5);
}

void sub_1000334E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  unint64_t v26;
  char v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void **v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int EnumCaseMultiPayload;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  os_log_type_t v51;
  uint8_t *v52;
  void **v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void **v57;
  uint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  uint64_t v66;
  os_log_type_t v67;
  uint8_t *v68;
  void **v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  void **v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  void *v85;
  void *v86;
  id v87;
  NSString v88;
  id v89;
  void *v90;
  void *v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  void **v103;
  void **v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  _QWORD v109[2];
  void **aBlock;
  uint64_t v111;
  void *v112;
  void *v113;
  void *v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;

  v4 = v3;
  v107 = type metadata accessor for B389PresentationConfig.Mode(0);
  v8 = __chkstk_darwin(v107);
  v101 = (uint64_t)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v98 - v10;
  v12 = sub_100006A6C(&qword_1001A5428);
  __chkstk_darwin(v12);
  v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for B389PresentationConfig(0);
  v15 = *(_QWORD *)(v106 - 8);
  v16 = __chkstk_darwin(v106);
  v99 = (uint64_t)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v98 - v18;
  *(_QWORD *)&v116 = a1;
  v20 = sub_100006A6C(&qword_1001A5628);
  Optional.unwrap(_:file:line:)(&aBlock, sub_1000340C8, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 307, v20);
  v104 = aBlock;
  v21 = objc_msgSend(aBlock, "userInfo");
  if (v21)
  {
    v22 = v21;
    v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v23 = 0;
  }
  *(_QWORD *)&v116 = v23;
  v24 = sub_100006A6C(&qword_1001A5630);
  Optional.unwrap(_:file:line:)(&aBlock, sub_1000340E8, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 308, v24);
  swift_bridgeObjectRelease(v23);
  v25 = aBlock;
  *(_QWORD *)&v116 = 0xD000000000000011;
  *((_QWORD *)&v116 + 1) = 0x8000000100139510;
  AnyHashable.init<A>(_:)(&aBlock, &v116, &type metadata for String, &protocol witness table for String);
  if (v25[2] && (v26 = sub_100005CF4((uint64_t)&aBlock), (v27 & 1) != 0))
  {
    sub_10000D894((uint64_t)v25[7] + 32 * v26, (uint64_t)&v116);
  }
  else
  {
    v116 = 0u;
    v117 = 0u;
  }
  v108 = v19;
  swift_bridgeObjectRelease(v25);
  sub_100006B34((uint64_t)&aBlock);
  if (*((_QWORD *)&v117 + 1))
  {
    v28 = swift_dynamicCast(v109, &v116, (char *)&type metadata for Any + 8, &type metadata for Data, 6);
    if (v28)
      v29 = v109[0];
    else
      v29 = 0;
    if (v28)
      v30 = v109[1];
    else
      v30 = 0xF000000000000000;
  }
  else
  {
    sub_10000D858((uint64_t)&v116, &qword_1001A4340);
    v29 = 0;
    v30 = 0xF000000000000000;
  }
  *(_QWORD *)&v116 = v29;
  *((_QWORD *)&v116 + 1) = v30;
  v31 = sub_100006A6C(&qword_1001A5438);
  Optional.unwrap(_:file:line:)(&aBlock, sub_10003410C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 309, v31);
  sub_100023F48(v29, v30);
  v32 = aBlock;
  v33 = v111;
  v34 = type metadata accessor for PropertyListDecoder(0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v35 = PropertyListDecoder.init()();
  v36 = sub_100005B80(&qword_1001A5638, type metadata accessor for B389PresentationConfig, (uint64_t)&unk_100132680);
  v37 = (uint64_t)v108;
  v103 = v32;
  v102 = v33;
  v38 = v33;
  v39 = v106;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)(v106, v32, v38, v106, v36);
  swift_release(v35);
  sub_100023F5C(v37, (uint64_t)v14, type metadata accessor for B389PresentationConfig);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v14, 0, 1, v39);
  v40 = v4 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig;
  swift_beginAccess(v4 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig, &aBlock, 33, 0);
  sub_10005BA44((uint64_t)v14, v40, &qword_1001A5428);
  swift_endAccess(&aBlock);
  sub_100023F5C(v37, (uint64_t)v11, type metadata accessor for B389PresentationConfig.Mode);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v107);
  v105 = a3;
  if (EnumCaseMultiPayload)
  {
    v43 = a2;
    if (EnumCaseMultiPayload == 1)
    {
      v44 = v11[*(int *)(sub_100006A6C(&qword_1001A7DF0) + 48)];
      v45 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v11, v45);
    }
    else
    {
      sub_100023FA0((uint64_t)v11, type metadata accessor for B389PresentationConfig.Mode);
      v44 = 0;
    }
  }
  else
  {
    v44 = *v11;
    v43 = a2;
  }
  v100 = v4;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_needsMulti) = v44;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v46 = type metadata accessor for Logger(0, v42);
  sub_10000E8E8(v46, (uint64_t)qword_1001A4A60);
  v47 = v99;
  v48 = sub_100023F5C(v37, v99, type metadata accessor for B389PresentationConfig);
  v49 = Logger.logObject.getter(v48);
  v51 = static os_log_type_t.default.getter(v49, v50);
  if (os_log_type_enabled(v49, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc(12, -1);
    v53 = (void **)swift_slowAlloc(32, -1);
    aBlock = v53;
    *(_DWORD *)v52 = 136315138;
    v54 = sub_10001C220();
    v56 = v55;
    *(_QWORD *)&v116 = sub_10001EFA4(v54, v55, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v52 + 4, v52 + 12);
    swift_bridgeObjectRelease(v56);
    sub_100023FA0(v47, type metadata accessor for B389PresentationConfig);
    _os_log_impl((void *)&_mh_execute_header, v49, v51, "presentConfig: %s", v52, 0xCu);
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    v57 = v53;
    v37 = (uint64_t)v108;
    swift_slowDealloc(v57, -1, -1);
    swift_slowDealloc(v52, -1, -1);
  }
  else
  {
    sub_100023FA0(v47, type metadata accessor for B389PresentationConfig);
  }

  v58 = v43;
  v59 = (uint64_t *)(v37 + *(int *)(v106 + 44));
  v60 = v59[1];
  v61 = v100;
  if (v60)
  {
    v62 = *v59;
    v63 = HIBYTE(v60) & 0xF;
    if ((v60 & 0x2000000000000000) == 0)
      v63 = v62 & 0xFFFFFFFFFFFFLL;
    if (v63)
    {
      v64 = swift_bridgeObjectRetain_n(v60, 3);
      v65 = Logger.logObject.getter(v64);
      v67 = static os_log_type_t.default.getter(v65, v66);
      if (os_log_type_enabled(v65, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc(12, -1);
        v69 = (void **)swift_slowAlloc(32, -1);
        aBlock = v69;
        *(_DWORD *)v68 = 136315138;
        swift_bridgeObjectRetain(v60);
        *(_QWORD *)&v116 = sub_10001EFA4(v62, v60, (uint64_t *)&aBlock);
        v37 = (uint64_t)v108;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v68 + 4, v68 + 12);
        swift_bridgeObjectRelease_n(v60, 3);
        _os_log_impl((void *)&_mh_execute_header, v65, v67, "Using given name: '%s'", v68, 0xCu);
        swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v69, -1, -1);
        swift_slowDealloc(v68, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v60, 2);
      }
      v70 = (uint64_t *)(v61 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_fnameDisplay);
      v71 = *(_QWORD *)(v61 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_fnameDisplay + 8);
      *v70 = v62;
      v70[1] = v60;
      swift_bridgeObjectRelease(v71);
    }
  }
  v72 = v101;
  sub_100023F5C(v37, v101, type metadata accessor for B389PresentationConfig.Mode);
  v73 = swift_getEnumCaseMultiPayload(v72, v107);
  v75 = v104;
  v74 = v105;
  if (v73)
  {
    sub_100023FA0(v72, type metadata accessor for B389PresentationConfig.Mode);
  }
  else
  {
    v76 = v61 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairState;
    *(_QWORD *)v76 = 5;
    *(_BYTE *)(v76 + 8) = 1;
    *(_BYTE *)(v61 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_connectionState) = 1;
  }
  v77 = objc_msgSend(v75, "xpcEndpoint");
  if (v77)
  {
    v78 = v77;
    *(_BYTE *)(v61 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_needsNFCUI) = 1;
    v79 = objc_msgSend(objc_allocWithZone((Class)NSXPCListenerEndpoint), "init");
    v80 = *(void **)(v61 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_endpoint);
    *(_QWORD *)(v61 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_endpoint) = v79;
    v81 = v79;

    objc_msgSend(v81, "_setEndpoint:", v78);
    v82 = objc_msgSend(objc_allocWithZone((Class)CUXPCAgent), "init");
    v83 = *(void **)(v61 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_xpcAgent);
    *(_QWORD *)(v61 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_xpcAgent) = v82;
    v84 = v82;

    sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
    v85 = (void *)static OS_dispatch_queue.main.getter();
    objc_msgSend(v84, "setDispatchQueue:", v85);

    v86 = (void *)objc_opt_self(NSXPCInterface);
    v87 = objc_msgSend(v86, "interfaceWithProtocol:", &OBJC_PROTOCOL___SFXPCB389NFCPromptConfigurationReceiving);
    objc_msgSend(v84, "setExportedInterface:", v87);

    objc_msgSend(v84, "setExportedObject:", v61);
    v88 = String._bridgeToObjectiveC()();
    objc_msgSend(v84, "setLabel:", v88);

    objc_msgSend(v84, "setListenerEndpoint:", v81);
    v89 = objc_msgSend(v86, "interfaceWithProtocol:", &OBJC_PROTOCOL___SDXPCClientInterface);
    objc_msgSend(v84, "setRemoteObjectInterface:", v89);

    v114 = sub_100034128;
    v115 = 0;
    aBlock = _NSConcreteStackBlock;
    v111 = 1107296256;
    v112 = sub_10001BB50;
    v113 = &unk_100179930;
    v90 = _Block_copy(&aBlock);
    objc_msgSend(v84, "setInterruptionHandler:", v90);
    _Block_release(v90);
    v114 = sub_100034134;
    v115 = 0;
    aBlock = _NSConcreteStackBlock;
    v111 = 1107296256;
    v112 = sub_10001BB50;
    v113 = &unk_100179958;
    v91 = _Block_copy(&aBlock);
    objc_msgSend(v84, "setInvalidationHandler:", v91);
    _Block_release(v91);
    v92 = swift_allocObject(&unk_100179990, 24, 7);
    *(_QWORD *)(v92 + 16) = v84;
    v114 = sub_10005BAC8;
    v115 = v92;
    aBlock = _NSConcreteStackBlock;
    v111 = 1107296256;
    v112 = sub_1000AC624;
    v113 = &unk_1001799A8;
    v93 = _Block_copy(&aBlock);
    v94 = v115;
    v95 = v84;
    objc_msgSend(v95, "activateWithCompletion:", v93, swift_release(v94).n128_f64[0]);
    _Block_release(v93);
    swift_unknownObjectRelease(v78);

    v37 = (uint64_t)v108;
  }
  v96 = swift_allocObject(&unk_100178EF0, 24, 7);
  swift_unknownObjectWeakInit(v96 + 16, v61);
  v97 = (_QWORD *)swift_allocObject(&unk_100179918, 40, 7);
  v97[2] = v58;
  v97[3] = v74;
  v97[4] = v96;
  sub_100022024(v58, v74);
  swift_retain(v96);
  sub_100032C68((uint64_t)sub_10005BABC, (uint64_t)v97);
  swift_release(v97);
  sub_100007348((uint64_t)v103, v102);

  sub_100023FA0(v37, type metadata accessor for B389PresentationConfig);
  swift_release(v96);
}

uint64_t sub_1000340C8()
{
  return 0x6E6F63206465656ELL;
}

uint64_t sub_1000340E8()
{
  return 0x657375206465656ELL;
}

unint64_t sub_10003410C()
{
  return 0xD000000000000012;
}

void sub_100034128(uint64_t a1, uint64_t a2)
{
  sub_100034140("XPC interrupted\n", a2);
}

void sub_100034134(uint64_t a1, uint64_t a2)
{
  sub_100034140("XPC invalidated\n", a2);
}

void sub_100034140(const char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *oslog;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10000E8E8(v3, (uint64_t)qword_1001A4A60);
  oslog = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(oslog, v5);
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, a1, v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

}

void sub_100034214(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  _QWORD v16[3];
  _BYTE v17[8];
  uint64_t v18;
  uint64_t aBlock;
  _QWORD v20[5];

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v18 = v10;
    *(_DWORD *)v9 = 136315138;
    if (a1)
    {
      swift_getErrorValue(a1, v17, v16);
      v11 = Error.localizedDescription.getter(v16[1], v16[2]);
      v13 = v12;
    }
    else
    {
      aBlock = 0;
      v20[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(0xE000000000000000);
      v13 = 0x8000000100136820;
      v11 = 0xD000000000000015;
    }
    aBlock = sub_10001EFA4(v11, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v20, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "Agent activated, error? %s.", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v20[3] = sub_100034490;
  v20[4] = 0;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v20[0] = 1107296256;
  v20[1] = sub_1000AC624;
  v20[2] = &unk_1001799D0;
  v14 = _Block_copy(&aBlock);
  v15 = objc_msgSend(a2, "remoteObjectProxyWithErrorHandler:", v14);
  _Block_release(v14);
  if (v15)
  {
    objc_msgSend(v15, "preheatXPCConnection");
    swift_unknownObjectRelease(v15);
  }
}

void sub_100034490(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  _QWORD v12[3];
  _BYTE v13[8];
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v3 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v3, (uint64_t)qword_1001A4A60);
  swift_errorRetain(a1);
  v4 = swift_errorRetain(a1);
  oslog = Logger.logObject.getter(v4);
  v5 = static os_log_type_t.error.getter(oslog);
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v16 = v7;
    *(_DWORD *)v6 = 136315138;
    if (a1)
    {
      swift_getErrorValue(a1, v13, v12);
      v8 = Error.localizedDescription.getter(v12[1], v12[2]);
      v10 = v9;
    }
    else
    {
      v14 = 0;
      v15 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(0xE000000000000000);
      v10 = 0x8000000100136820;
      v8 = 0xD000000000000015;
    }
    v14 = sub_10001EFA4(v8, v10, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v10);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "remoteObjectProxyWithErrorHandler failed in updateStateRemotely. Error: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
}

void sub_100034694(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  id v10;
  unsigned __int8 v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  _BYTE v29[16];
  id v30;
  _BYTE v31[24];

  v6 = a5 + 16;
  if (a3)
    a3();
  swift_beginAccess(v6, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(void **)(Strong + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_assetBundle);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_assetBundle) = a1;
    v10 = a1;

    if (!a1)
    {
LABEL_7:

      return;
    }
    v30 = 0;
    v11 = objc_msgSend(v10, "loadAndReturnError:", &v30);
    v12 = v30;
    if ((v11 & 1) != 0)
    {
      v13 = v30;
      goto LABEL_7;
    }
    v14 = v30;
    v15 = _convertNSErrorToError(_:)(v12);

    swift_willThrow(v16);
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v18 = type metadata accessor for Logger(0, v17);
    sub_10000E8E8(v18, (uint64_t)qword_1001A4A60);
    swift_errorRetain(v15);
    v19 = swift_errorRetain(v15);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = (void *)swift_slowAlloc(32, -1);
      v30 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_getErrorValue(v15, v29, v28);
      v24 = Error.localizedDescription.getter(v28[1], v28[2]);
      v26 = v25;
      v27 = sub_10001EFA4(v24, v25, (uint64_t *)&v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v22 + 4, v22 + 12);
      swift_bridgeObjectRelease(v26);
      swift_errorRelease(v15);
      swift_errorRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Couldn't load asset bundle: %s", v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

      swift_errorRelease(v15);
    }
    else
    {

      swift_errorRelease(v15);
      swift_errorRelease(v15);
      swift_errorRelease(v15);

    }
  }
}

void sub_1000349EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::String v17;
  void *object;
  Swift::String v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  char v38;
  void *v39;
  void *v40;
  id v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  void (*v48)(uint64_t *, _QWORD);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55[3];
  uint64_t v56;
  uint64_t v57;
  char v58;
  _QWORD *v59;

  if (qword_1001A2F40 != -1)
    goto LABEL_48;
  while (1)
  {
    v3 = type metadata accessor for Logger(0, a2);
    sub_10000E8E8(v3, (uint64_t)qword_1001A4A60);
    v4 = swift_bridgeObjectRetain_n(a1, 2);
    v5 = Logger.logObject.getter(v4);
    v7 = static os_log_type_t.default.getter(v5, v6);
    if (os_log_type_enabled(v5, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v56 = v9;
      *(_DWORD *)v8 = 136315138;
      if (a1)
      {
        v10 = sub_100013194(0, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
        v11 = sub_10005B9EC();
        v12 = swift_bridgeObjectRetain(a1);
        v13 = Set.description.getter(v12, v10, v11);
        v15 = v14;
        swift_bridgeObjectRelease(a1);
      }
      else
      {
        v54 = 0;
        v55[0] = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v55[0]);
        v54 = 0x6C616E6F6974704FLL;
        v55[0] = 0xE90000000000003CLL;
        v16 = sub_100006A6C(&qword_1001A5620);
        v17._countAndFlagsBits = _typeName(_:qualified:)(v16, 0);
        object = v17._object;
        String.append(_:)(v17);
        swift_bridgeObjectRelease(object);
        v19._countAndFlagsBits = 0x656E6F6E2E3ELL;
        v19._object = (void *)0xE600000000000000;
        String.append(_:)(v19);
        v13 = v54;
        v15 = v55[0];
      }
      v54 = sub_10001EFA4(v13, v15, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v8 + 4, v8 + 12);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v5, v7, "handleButtonActions: %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a1, 2);
    }
    if (!a1)
      break;
    v20 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 >= 0)
        v21 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v21 = a1;
      swift_bridgeObjectRetain(a1);
      v22 = __CocoaSet.count.getter(v21);
      if (!v22)
      {
LABEL_20:
        swift_bridgeObjectRelease(a1);
        v27 = _swiftEmptyArrayStorage;
        v28 = _swiftEmptyArrayStorage[2];
        if (!v28)
          goto LABEL_45;
        goto LABEL_39;
      }
    }
    else
    {
      v22 = *(_QWORD *)(a1 + 16);
      swift_bridgeObjectRetain(a1);
      if (!v22)
        goto LABEL_20;
    }
    v59 = _swiftEmptyArrayStorage;
    sub_1000C8BBC(0, v22 & ~(v22 >> 63), 0);
    if (v20)
    {
      if (a1 >= 0)
        v23 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v23 = a1;
      v24 = __CocoaSet.startIndex.getter(v23);
      v26 = 1;
    }
    else
    {
      v24 = sub_1000D2B1C(a1);
      v26 = v29 & 1;
    }
    v56 = v24;
    v57 = v25;
    v58 = v26;
    if (v22 < 0)
    {
      __break(1u);
LABEL_50:
      __break(1u);
      break;
    }
    v30 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0)
      v30 = a1;
    v53 = v30;
    do
    {
      while (1)
      {
        v37 = v56;
        v36 = v57;
        v38 = v58;
        sub_1000D2894(v56, v57, v58, a1);
        v40 = v39;
        v41 = objc_msgSend(v39, "events");

        v42 = v59;
        if ((swift_isUniquelyReferenced_nonNull_native(v59) & 1) == 0)
        {
          sub_1000C8BBC(0, v42[2] + 1, 1);
          v42 = v59;
        }
        v44 = v42[2];
        v43 = v42[3];
        if (v44 >= v43 >> 1)
        {
          sub_1000C8BBC(v43 > 1, v44 + 1, 1);
          v42 = v59;
        }
        v42[2] = v44 + 1;
        v42[v44 + 4] = v41;
        if (v20)
          break;
        v31 = sub_1000D27B0(v37, v36, v38, a1);
        v33 = v32;
        v35 = v34;
        sub_100008990(v37, v36, v38);
        v56 = v31;
        v57 = v33;
        v58 = v35 & 1;
        if (!--v22)
          goto LABEL_38;
      }
      if ((v38 & 1) == 0)
        goto LABEL_50;
      v45 = __CocoaSet.Index.handleBitPattern.getter(v37, v36);
      if (v45)
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v45);
      else
        isUniquelyReferenced_nonNull_native = 1;
      v47 = sub_100006A6C(&qword_1001A5618);
      v48 = (void (*)(uint64_t *, _QWORD))Set.Index._asCocoa.modify(&v54, v47);
      __CocoaSet.formIndex(after:isUnique:)(v49, isUniquelyReferenced_nonNull_native, v53);
      v48(&v54, 0);
      --v22;
    }
    while (v22);
LABEL_38:
    sub_100008990(v56, v57, v58);
    swift_bridgeObjectRelease(a1);
    v27 = v59;
    v28 = v59[2];
    if (!v28)
    {
LABEL_45:
      swift_bridgeObjectRelease(v27);
      return;
    }
LABEL_39:
    if ((v27[4] & 0x10) != 0)
    {
LABEL_46:
      swift_bridgeObjectRelease(v27);
      objc_msgSend(v52, "dismiss:", 4);
      return;
    }
    if (v28 == 1)
      goto LABEL_45;
    v50 = 5;
    while (1)
    {
      v51 = v50 - 3;
      if (__OFADD__(v50 - 4, 1))
        break;
      if ((v27[v50] & 0x10) != 0)
        goto LABEL_46;
      ++v50;
      if (v51 == v28)
        goto LABEL_45;
    }
    __break(1u);
LABEL_48:
    swift_once(&qword_1001A2F40, sub_100030AB0);
  }
  __break(1u);
}

void sub_10003505C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  unint64_t v7;
  Class isa;
  id v9;
  uint64_t v10;
  void *v11;
  NSURL *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;
  id v21;

  v6 = objc_msgSend(objc_allocWithZone((Class)_LSOpenConfiguration), "init");
  objc_msgSend(v6, "setSensitive:", 1);
  v7 = sub_1000ACBF4(*(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_fbOtions));
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v6, "setFrontBoardOptions:", isa);

  v9 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  v21 = v9;
  v10 = sub_100006A6C(&qword_1001A55F0);
  Optional.unwrap(_:file:line:)(aBlock, sub_10003524C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 400, v10);

  v11 = (void *)aBlock[0];
  URL._bridgeToObjectiveC()(v12);
  v14 = v13;
  v15 = swift_allocObject(&unk_100179800, 32, 7);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  aBlock[4] = sub_10005B94C;
  v20 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000AD300;
  aBlock[3] = &unk_100179818;
  v16 = _Block_copy(aBlock);
  v17 = v20;
  v18 = v6;
  sub_100022024(a2, a3);
  objc_msgSend(v11, "openURL:configuration:completionHandler:", v14, v18, v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);

}

unint64_t sub_10003524C()
{
  return 0xD000000000000025;
}

void sub_100035268(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[3];
  _BYTE v21[8];
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v6, (uint64_t)qword_1001A4A60);
  swift_bridgeObjectRetain(a1);
  swift_errorRetain(a2);
  swift_bridgeObjectRetain(a1);
  v7 = swift_errorRetain(a2);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = swift_slowAlloc(22, -1);
    v12 = swift_slowAlloc(64, -1);
    v24 = v12;
    *(_DWORD *)v11 = 136315394;
    if (a1)
    {
      v13 = swift_bridgeObjectRetain(a1);
      v14 = Dictionary.description.getter(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
      v16 = v15;
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v22 = 0;
      v23 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(0xE000000000000000);
      v14 = 0xD000000000000026;
      v16 = 0x8000000100138E60;
    }
    v22 = sub_10001EFA4(v14, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v11 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue(a2, v21, v20);
      v17 = Error.localizedDescription.getter(v20[1], v20[2]);
      v19 = v18;
    }
    else
    {
      v17 = 0xD000000000000015;
      v22 = 0;
      v23 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v23);
      v19 = 0x8000000100136820;
    }
    v22 = sub_10001EFA4(v17, v19, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v11 + 14, v11 + 22);
    swift_bridgeObjectRelease(v19);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "Open URL callback success: %s, error: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    if (a3)
      goto LABEL_13;
  }
  else
  {
    swift_bridgeObjectRelease_n(a1, 2);
    swift_errorRelease(a2);
    swift_errorRelease(a2);

    if (a3)
LABEL_13:
      a3();
  }
}

void sub_100035570(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *oslog;
  int v9;
  uint64_t v10;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10000E8E8(v3, (uint64_t)qword_1001A4A60);
  oslog = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(oslog, v5);
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 67109120;
    v9 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v7 + 4, v7 + 8);
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, "assertion acquired: %{BOOL}d", v7, 8u);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
}

unint64_t sub_100035690()
{
  return 0xD000000000000029;
}

void sub_1000356AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)();
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char *v50;
  uint64_t v51;
  int v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v6 = v5;
  v54 = a2;
  v11 = sub_100006A6C(&qword_1001A3618);
  v55 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v55 + 64);
  v13 = __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v47 - v16;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v18 = type metadata accessor for Logger(0, v15);
  sub_10000E8E8(v18, (uint64_t)qword_1001A4A60);
  sub_100022024(a3, a4);
  v19 = sub_100022024(a3, a4);
  v20 = Logger.logObject.getter(v19);
  v22 = static os_log_type_t.default.getter(v20, v21);
  if (os_log_type_enabled(v20, (os_log_type_t)v22))
  {
    v49 = v22;
    v50 = v17;
    v23 = a1;
    v24 = swift_slowAlloc(28, -1);
    v48 = swift_slowAlloc(32, -1);
    v58 = v48;
    *(_DWORD *)v24 = 134218498;
    v56 = a5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v24 + 4, v24 + 12);
    *(_WORD *)(v24 + 12) = 1024;
    v52 = v23;
    LODWORD(v56) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, (char *)&v56 + 4, v24 + 14, v24 + 18);
    *(_WORD *)(v24 + 18) = 2080;
    v53 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v51 = v6;
    if (a3)
    {
      v25 = swift_allocObject(&unk_1001796E8, 32, 7);
      *(_QWORD *)(v25 + 16) = a3;
      *(_QWORD *)(v25 + 24) = a4;
      v26 = sub_10005B7D0;
    }
    else
    {
      v26 = 0;
      v25 = 0;
    }
    v56 = (uint64_t)v26;
    v57 = v25;
    sub_100022024(a3, a4);
    v27 = sub_100006A6C((uint64_t *)&unk_1001A55E0);
    v28 = Optional.debugDescription.getter(v27);
    v30 = v29;
    sub_100012F60((uint64_t)v26, v25);
    v56 = sub_10001EFA4(v28, v30, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v24 + 20, v24 + 28);
    swift_bridgeObjectRelease(v30);
    sub_100012F60(a3, a4);
    sub_100012F60(a3, a4);
    _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v49, "dismissCompletion from %ld. inActionType: %d, completion: %s", (uint8_t *)v24, 0x1Cu);
    v31 = v48;
    swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v24, -1, -1);

    v14 = v53;
    a1 = v52;
    v17 = v50;
    v6 = v51;
  }
  else
  {
    sub_100012F60(a3, a4);
    sub_100012F60(a3, a4);

  }
  v32 = swift_allocObject(&unk_100178EF0, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, v6);
  sub_100006BD8(v54, (uint64_t)v17, &qword_1001A3618);
  sub_100006BD8((uint64_t)v17, (uint64_t)v14, &qword_1001A3618);
  v33 = *(unsigned __int8 *)(v55 + 80);
  v34 = (v33 + 48) & ~v33;
  v35 = swift_allocObject(&unk_1001796C0, v34 + v12, v33 | 7);
  *(_QWORD *)(v35 + 16) = v32;
  *(_DWORD *)(v35 + 24) = a1;
  *(_QWORD *)(v35 + 32) = a3;
  *(_QWORD *)(v35 + 40) = a4;
  sub_10005B590((uint64_t)v17, v35 + v34, &qword_1001A3618);
  v36 = *(void **)(v6 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
  if (v36)
  {
    sub_100022024(a3, a4);
    v37 = objc_msgSend(v36, "topViewController", swift_retain(v32).n128_f64[0]);
    v58 = (uint64_t)v37;
    v38 = sub_100006A6C((uint64_t *)&unk_1001A7D30);
    Optional.unwrap(_:file:line:)(&v56, sub_100036264, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 468, v38);

    v39 = (void *)v56;
    v40 = objc_opt_self(SVSBaseViewController);
    v41 = swift_dynamicCastObjCClass(v39, v40);
    if (v41)
    {
      v44 = (void *)v41;
      v42 = v39;
      v43 = objc_msgSend(v44, "containerView");
      LODWORD(v44) = objc_msgSend(v43, "swipeDismissible");

      if (!a1)
        goto LABEL_18;
    }
    else
    {
      v45 = objc_opt_self(PRXCardContentViewController);
      v46 = (void *)swift_dynamicCastObjCClass(v39, v45);
      if (!v46)
      {
        if (a1)
          goto LABEL_16;
        goto LABEL_18;
      }
      v44 = (void *)(((unint64_t)objc_msgSend(v46, "dismissalType") >> 1) & 1);
      if (!a1)
        goto LABEL_18;
    }
    if (!(_DWORD)v44)
    {
LABEL_16:
      sub_10000D858((uint64_t)v14, &qword_1001A3618);
      swift_release(v32);
      sub_100055EB4(v39, (uint64_t)sub_10005B794, v35);

      swift_release(v35);
      return;
    }
LABEL_18:
    sub_100035BFC(v32, a1, a3, a4, (uint64_t)v14);
    swift_release(v32);

    swift_release(v35);
    sub_10000D858((uint64_t)v14, &qword_1001A3618);
    return;
  }
  sub_100022024(a3, a4);
  sub_10000D858((uint64_t)v14, &qword_1001A3618);
  __break(1u);
}

void sub_100035BFC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _QWORD aBlock[5];
  uint64_t v37;
  char v38[24];

  v10 = sub_100006A6C(&qword_1001A3618);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v16 = (void *)Strong;
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v17 = type metadata accessor for Logger(0, v15);
    v18 = sub_10000E8E8(v17, (uint64_t)qword_1001A4A60);
    v19 = Logger.logObject.getter(v18);
    v21 = static os_log_type_t.default.getter(v19, v20);
    if (os_log_type_enabled(v19, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      v35 = a3;
      v23 = a2;
      v24 = a4;
      v25 = a5;
      v26 = v22;
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v21, "dismissClosure called", v22, 2u);
      v27 = v26;
      a5 = v25;
      a4 = v24;
      a2 = v23;
      a3 = v35;
      swift_slowDealloc(v27, -1, -1);
    }

    sub_1000323A4(0);
    sub_100006BD8(a5, (uint64_t)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1001A3618);
    v28 = *(unsigned __int8 *)(v11 + 80);
    v29 = (v28 + 32) & ~v28;
    v30 = (v12 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v31 = swift_allocObject(&unk_100179760, v30 + 8, v28 | 7);
    *(_QWORD *)(v31 + 16) = a3;
    *(_QWORD *)(v31 + 24) = a4;
    sub_10005B590((uint64_t)v13, v31 + v29, &qword_1001A3618);
    *(_QWORD *)(v31 + v30) = v16;
    aBlock[4] = sub_10005B89C;
    v37 = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001BB50;
    aBlock[3] = &unk_100179778;
    v32 = _Block_copy(aBlock);
    v33 = v37;
    sub_100022024(a3, a4);
    v34 = v16;
    objc_msgSend(v34, "dismissViewControllerAnimated:completion:", a2 != 19, v32, swift_release(v33).n128_f64[0]);
    _Block_release(v32);

  }
}

uint64_t sub_100035E78(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  id v30;
  _QWORD *v31;
  uint8_t *v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  _QWORD *v44;
  uint8_t *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  id v50;
  uint64_t v51;

  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006A6C(&qword_1001A3618);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v43 - v16;
  if (a1)
    a1(v15);
  sub_100006BD8(a3, (uint64_t)v17, &qword_1001A3618);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v18 = v49(v17, 1, v7);
  v19 = sub_10000D858((uint64_t)v17, &qword_1001A3618);
  if (v18 == 1)
  {
    v21 = 0;
  }
  else
  {
    v48 = a3;
    v23 = (void *)sub_10005632C(v19, v20);
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v24 = type metadata accessor for Logger(0, v22);
    sub_10000E8E8(v24, (uint64_t)qword_1001A4A60);
    v21 = v23;
    v25 = Logger.logObject.getter(v21);
    v27 = static os_log_type_t.default.getter(v25, v26);
    if (os_log_type_enabled(v25, v27))
    {
      v28 = swift_slowAlloc(12, -1);
      v47 = v7;
      v29 = (uint8_t *)v28;
      v44 = (_QWORD *)swift_slowAlloc(8, -1);
      v45 = v29;
      v46 = v10;
      *(_DWORD *)v29 = 138412290;
      v50 = v21;
      v30 = v21;
      v10 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v29 + 4, v29 + 12);
      v31 = v44;
      *v44 = v21;

      v32 = v45;
      _os_log_impl((void *)&_mh_execute_header, v25, v27, "Took assertion: %@", v45, 0xCu);
      v33 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v31, 1, v33);
      swift_slowDealloc(v31, -1, -1);
      v34 = v32;
      v7 = v47;
      swift_slowDealloc(v34, -1, -1);

    }
    else
    {

    }
    a3 = v48;
  }
  v35 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_xpcAgent;
  objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_xpcAgent], "invalidate");
  v36 = *(void **)&a4[v35];
  *(_QWORD *)&a4[v35] = 0;

  v37 = objc_msgSend(a4, "_remoteViewControllerProxy");
  sub_100037064(0);
  if (v37)
  {
    if ((objc_msgSend(v37, "respondsToSelector:", "invalidate") & 1) != 0)
      objc_msgSend(v37, "invalidate");
    swift_unknownObjectRelease(v37);
  }
  sub_100006BD8(a3, (uint64_t)v14, &qword_1001A3618);
  if (v49(v14, 1, v7) == 1)
  {

    return sub_10000D858((uint64_t)v14, &qword_1001A3618);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
    v39 = swift_allocObject(&unk_1001797B0, 24, 7);
    *(_QWORD *)(v39 + 16) = v21;
    v40 = (uint64_t)v10;
    v41 = v21;
    sub_10003505C(v40, (uint64_t)sub_10005B908, v39);

    v42 = swift_release(v39);
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v40, v7, v42);
  }
}

unint64_t sub_100036264()
{
  return 0xD000000000000022;
}

void sub_100036280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11;

  v5 = objc_msgSend((id)objc_opt_self(FMFSession), "sharedInstance");
  if (v5)
  {
    v6 = v5;
    v7 = swift_allocObject(&unk_100179620, 32, 7);
    *(_QWORD *)(v7 + 16) = a2;
    *(_QWORD *)(v7 + 24) = a3;
    v10[4] = sub_10005B6DC;
    v11 = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_1000AC624;
    v10[3] = &unk_100179638;
    v8 = _Block_copy(v10);
    v9 = v11;
    swift_retain(a3);
    objc_msgSend(v6, "setActiveDevice:completion:", 0, v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100036370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  __n128 v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];
  char v48[8];
  uint64_t aBlock[5];
  uint64_t v50;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v44 = v11;
    v45 = v10;
    swift_errorRetain(a1);
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v15 = type metadata accessor for Logger(0, v14);
    sub_10000E8E8(v15, (uint64_t)qword_1001A4A60);
    swift_errorRetain(a1);
    v16 = swift_errorRetain(a1);
    v17 = Logger.logObject.getter(v16);
    v19 = static os_log_type_t.default.getter(v17, v18);
    if (os_log_type_enabled(v17, v19))
    {
      v20 = swift_slowAlloc(12, -1);
      v42 = a3;
      v21 = (uint8_t *)v20;
      v22 = swift_slowAlloc(32, -1);
      v41 = a2;
      v23 = v22;
      aBlock[0] = v22;
      v43 = v7;
      *(_DWORD *)v21 = 136315138;
      v40 = v21 + 4;
      swift_getErrorValue(a1, v48, v47);
      v24 = Error.localizedDescription.getter(v47[1], v47[2]);
      v26 = v25;
      v46 = sub_10001EFA4(v24, v25, aBlock);
      v7 = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v40, v21 + 12);
      swift_bridgeObjectRelease(v26);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v17, v19, "Me device switch failed: %s", v21, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      v27 = v23;
      a2 = v41;
      swift_slowDealloc(v27, -1, -1);
      v28 = v21;
      a3 = v42;
      swift_slowDealloc(v28, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
    v11 = v44;
    v10 = v45;
  }
  sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
  v30 = (void *)static OS_dispatch_queue.main.getter(v29);
  v31 = swift_allocObject(&unk_100179670, 32, 7);
  *(_QWORD *)(v31 + 16) = a2;
  *(_QWORD *)(v31 + 24) = a3;
  aBlock[4] = (uint64_t)sub_10005BAD8;
  v50 = v31;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10001BB50;
  aBlock[3] = (uint64_t)&unk_100179688;
  v32 = _Block_copy(aBlock);
  v33 = v50;
  swift_retain(a3);
  v34 = swift_release(v33);
  static DispatchQoS.unspecified.getter(v34);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v35 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v36 = sub_100006A6C((uint64_t *)&unk_1001A4330);
  v37 = sub_100012F94();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v36, v37, v6, v35);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v32);
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_10003672C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  void *v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  id v12;
  id v13;
  _QWORD v14[5];
  _QWORD *v15;

  v7 = objc_msgSend((id)objc_opt_self(FMFSession), "sharedInstance");
  if (v7)
  {
    v8 = v7;
    v9 = (_QWORD *)swift_allocObject(&unk_100179440, 48, 7);
    v9[2] = v3;
    v9[3] = a1;
    v9[4] = a2;
    v9[5] = a3;
    v14[4] = sub_10005B630;
    v15 = v9;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_1000AD3B4;
    v14[3] = &unk_100179458;
    v10 = _Block_copy(v14);
    v11 = v15;
    v12 = v3;
    v13 = a1;
    swift_retain(a3);
    objc_msgSend(v8, "getActiveLocationSharingDevice:", v10, swift_release(v11).n128_f64[0]);
    _Block_release(v10);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100036830(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  __n128 v26;
  void *v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint8_t *v43;
  __n128 v44;
  _QWORD *v45;
  void *v46;
  _QWORD *v47;
  id v48;
  id v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  __n128 v54;
  _QWORD *v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  _QWORD *v59;
  id v60;
  id v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void **aBlock;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);
  void *v74;
  void *v75;
  _QWORD *v76;

  v69 = a5;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v70 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v67 = v11;
    v18 = a1;
    if ((objc_msgSend(v18, "isThisDevice") & 1) != 0)
    {
      if (qword_1001A2F40 != -1)
        swift_once(&qword_1001A2F40, sub_100030AB0);
      v20 = type metadata accessor for Logger(0, v19);
      v21 = sub_10000E8E8(v20, (uint64_t)qword_1001A4A60);
      v22 = Logger.logObject.getter(v21);
      v24 = static os_log_type_t.default.getter(v22, v23);
      if (os_log_type_enabled(v22, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v24, "Me device is this device.", v25, 2u);
        swift_slowDealloc(v25, -1, -1);
      }

      sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
      v27 = (void *)static OS_dispatch_queue.main.getter(v26);
      v28 = swift_allocObject(&unk_100179530, 32, 7);
      *(_QWORD *)(v28 + 16) = v69;
      *(_QWORD *)(v28 + 24) = a6;
      v75 = sub_1000240E4;
      v76 = (_QWORD *)v28;
      aBlock = _NSConcreteStackBlock;
      v72 = 1107296256;
      v73 = sub_10001BB50;
      v74 = &unk_100179548;
      v29 = _Block_copy(&aBlock);
      v30 = v76;
      swift_retain(a6);
      v31 = swift_release(v30);
      static DispatchQoS.unspecified.getter(v31);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v32 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v33 = sub_100006A6C((uint64_t *)&unk_1001A4330);
      v34 = sub_100012F94();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v33, v34, v10, v32);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v13, v29);
      v35 = v29;
    }
    else
    {
      sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
      v27 = (void *)static OS_dispatch_queue.main.getter(v54);
      v55 = (_QWORD *)swift_allocObject(&unk_1001794E0, 56, 7);
      v55[2] = a3;
      v55[3] = a4;
      v56 = v69;
      v55[4] = v18;
      v55[5] = v56;
      v55[6] = a6;
      v75 = sub_10005B6C4;
      v76 = v55;
      aBlock = _NSConcreteStackBlock;
      v72 = 1107296256;
      v73 = sub_10001BB50;
      v74 = &unk_1001794F8;
      v57 = _Block_copy(&aBlock);
      v68 = v14;
      v58 = v57;
      v59 = v76;
      v18 = v18;
      v60 = a3;
      v61 = a4;
      swift_retain(a6);
      v62 = swift_release(v59);
      static DispatchQoS.unspecified.getter(v62);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v63 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v64 = sub_100006A6C((uint64_t *)&unk_1001A4330);
      v65 = sub_100012F94();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v64, v65, v10, v63);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v13, v58);
      v35 = v58;
      v14 = v68;
    }
    _Block_release(v35);

    v11 = v67;
  }
  else
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v68 = v14;
    v36 = type metadata accessor for Logger(0, v15);
    v37 = sub_10000E8E8(v36, (uint64_t)qword_1001A4A60);
    v38 = Logger.logObject.getter(v37);
    v40 = static os_log_type_t.default.getter(v38, v39);
    if (os_log_type_enabled(v38, v40))
    {
      v41 = v11;
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v40, "No active me device.", v42, 2u);
      v43 = v42;
      v11 = v41;
      swift_slowDealloc(v43, -1, -1);
    }

    sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
    v27 = (void *)static OS_dispatch_queue.main.getter(v44);
    v45 = (_QWORD *)swift_allocObject(&unk_100179490, 48, 7);
    v45[2] = a3;
    v45[3] = a4;
    v45[4] = v69;
    v45[5] = a6;
    v75 = sub_10005B674;
    v76 = v45;
    aBlock = _NSConcreteStackBlock;
    v72 = 1107296256;
    v73 = sub_10001BB50;
    v74 = &unk_1001794A8;
    v46 = _Block_copy(&aBlock);
    v47 = v76;
    v48 = a3;
    v49 = a4;
    swift_retain(a6);
    v50 = swift_release(v47);
    static DispatchQoS.unspecified.getter(v50);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v51 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v52 = sub_100006A6C((uint64_t *)&unk_1001A4330);
    v53 = sub_100012F94();
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v52, v53, v10, v51);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v13, v46);
    _Block_release(v46);
    v14 = v68;
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v17, v14);
}

uint64_t sub_100036E40(int a1, void *a2, id a3, uint64_t a4, uint64_t a5)
{
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v8 = objc_msgSend(a3, "deviceName");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  sub_10005686C(a2, v10, v12, a4, a5);
  return swift_bridgeObjectRelease(v12);
}

void sub_100036ECC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v9;
  uint64_t v10;
  id v11;
  double v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v4 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_dismissed;
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_dismissed) & 1) == 0)
  {
    v5 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
    if (v5)
    {
      if (a2)
      {
        v14[4] = a2;
        v15 = a3;
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 1107296256;
        v14[2] = sub_10001BB50;
        v14[3] = &unk_1001798B8;
        v9 = _Block_copy(v14);
        v10 = v15;
        v11 = v5;
        sub_100022024(a2, a3);
        *(_QWORD *)&v12 = swift_release(v10).n128_u64[0];
      }
      else
      {
        v13 = v5;
        v9 = 0;
      }
      objc_msgSend(v5, "dismissViewControllerAnimated:completion:", a1 & 1, v9, v12);
      _Block_release(v9);

      *(_BYTE *)(v3 + v4) = 1;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100037064(char a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  _OWORD v20[2];
  int v21;
  _BYTE v22[28];

  v3 = objc_msgSend(v1, "_remoteViewControllerProxy");
  if (v3)
  {
    v4 = v3;
    _bridgeAnyObjectToAny(_:)(v20);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_10005B590((uint64_t)v20, (uint64_t)&v21, &qword_1001A4340);
  if (*(_QWORD *)&v22[20])
  {
    v5 = sub_100006A6C((uint64_t *)&unk_1001A55D0);
    if ((swift_dynamicCast(&v19, &v21, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
    {
      v7 = v19;
      if (qword_1001A2F40 != -1)
        swift_once(&qword_1001A2F40, sub_100030AB0);
      v8 = type metadata accessor for Logger(0, v6);
      v9 = sub_10000E8E8(v8, (uint64_t)qword_1001A4A60);
      v10 = Logger.logObject.getter(v9);
      v12 = static os_log_type_t.default.getter(v10, v11);
      if (os_log_type_enabled(v10, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v13 = 67109120;
        v21 = a1 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v13 + 4, v13 + 8);
        _os_log_impl((void *)&_mh_execute_header, v10, v12, "Setting idle timer disabled: %{BOOL}d", v13, 8u);
        swift_slowDealloc(v13, -1, -1);
      }

      v14 = String._bridgeToObjectiveC()();
      objc_msgSend(v7, "setIdleTimerDisabled:forReason:", a1 & 1, v14);
      swift_unknownObjectRelease(v7);
      goto LABEL_16;
    }
  }
  else
  {
    sub_10000D858((uint64_t)&v21, &qword_1001A4340);
  }
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v15 = type metadata accessor for Logger(0, v6);
  v16 = sub_10000E8E8(v15, (uint64_t)qword_1001A4A60);
  v14 = Logger.logObject.getter(v16);
  v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v17, "Could not grab remote view controller proxy", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }
LABEL_16:

}

id sub_10003730C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  char *v30;
  _QWORD *v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  _OWORD *v38;
  char *v39;
  uint64_t v40;
  NSString v41;
  id v42;
  objc_super v44;

  v6 = sub_100006A6C((uint64_t *)&unk_1001A5600);
  v7 = swift_allocObject(v6, 32, 7);
  *(_QWORD *)(v7 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v7 + 24) = 0x8000000100132F70;
  v8 = qword_1001A2F10;
  v9 = v3;
  if (v8 != -1)
    swift_once(&qword_1001A2F10, sub_10001DDF8);
  v10 = qword_1001A3CD8;
  v11 = (os_unfair_lock_s *)(qword_1001A3CD8 + 16);
  swift_retain(qword_1001A3CD8);
  os_unfair_lock_lock(v11);
  sub_1000C8490(v12, sub_10005B9A8);
  v13 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController___doNotReference;
  os_unfair_lock_unlock(v11);
  swift_release(v10);
  *(_QWORD *)&v9[v13] = v7;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations] = &_swiftEmptySetSingleton;
  v14 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDInfo];
  *(_OWORD *)v14 = xmmword_1001320D0;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = 0;
  *((_QWORD *)v14 + 2) = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_timeout] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_multiThreshold] = -50;
  v15 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig];
  v16 = type metadata accessor for B389PresentationConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om;
  v18 = type metadata accessor for OnceManager();
  v19 = swift_allocObject(v18, 24, 7);
  *(_QWORD *)(v19 + 16) = &_swiftEmptySetSingleton;
  *(_QWORD *)&v9[v17] = v19;
  v20 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_beaconManager;
  *(_QWORD *)&v9[v20] = objc_msgSend(objc_allocWithZone((Class)SPBeaconManager), "init");
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_dismissed] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_retain] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startVC] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleVC] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_namingVC] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_linkingVC] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_loadingVC] = 0;
  v21 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_spManager;
  *(_QWORD *)&v9[v21] = objc_msgSend(objc_allocWithZone((Class)SPPairingManager), "init");
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_requestedPairingData] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_reenabledProxCard] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_didTapStart] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_didAgreeToLinking] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_needsMulti] = 0;
  v22 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_followupController;
  *(_QWORD *)&v9[v22] = objc_msgSend(objc_allocWithZone((Class)FLFollowUpController), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_connectionState] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapSnapshotter] = 0;
  v23 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex];
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_doneVC] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_errorVC] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcVC] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDVC] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_hsa2VC] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairLockedVC] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sessionError] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_assetBundle] = 0;
  v24 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_location];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_shownError] = 0;
  v25 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_remainingCharacteristicsToDiscover;
  *(_QWORD *)&v9[v25] = sub_1000D3A40((uint64_t)&off_100176430);
  v26 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars;
  *(_QWORD *)&v9[v26] = sub_100004CFC((uint64_t)_swiftEmptyArrayStorage);
  v27 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues;
  *(_QWORD *)&v9[v27] = sub_100004DFC((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredMainService] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startedCharacteristicDiscovery] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentDisconnect] = 0;
  v28 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager];
  v29 = sub_100004924((uint64_t)_swiftEmptyArrayStorage);
  *v28 = 178;
  v28[1] = v29;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentReadRequest] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentSecondReadRequest] = 0;
  *(_OWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_storeS1] = xmmword_100132B40;
  v30 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_targetS1Length];
  *(_QWORD *)v30 = 0;
  v30[8] = 1;
  v31 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_fnameDisplay];
  *v31 = 0;
  v31[1] = 0;
  v32 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vbVersionStr];
  *v32 = 0;
  v32[1] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_handledS1S2PayloadRead] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sessionVerified] = 0;
  v33 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcUUID];
  v34 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_needsNFCUI] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcConfig] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_endpoint] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_xpcAgent] = 0;
  v35 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_locationShifter;
  *(_QWORD *)&v9[v35] = objc_msgSend(objc_allocWithZone((Class)GEOLocationShifter), "init");
  v36 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleName];
  *v36 = 0;
  v36[1] = 0;
  v37 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleEmoji];
  *v37 = 0;
  v37[1] = 0;
  v38 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue];
  *v38 = xmmword_100132B40;
  v38[1] = 0u;
  v38[2] = 0u;
  v38[3] = 0u;
  v38[4] = 0u;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories] = 0;
  v39 = &v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairState];
  *(_QWORD *)v39 = 0;
  v39[8] = 1;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_findMyFinalizeState] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapConfigurationState] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapViewController] = 0;
  v40 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_fbOtions;
  *(_QWORD *)&v9[v40] = sub_100004F0C((uint64_t)&off_1001768C8);

  if (a2)
  {
    v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v41 = 0;
  }
  v44.receiver = v9;
  v44.super_class = (Class)type metadata accessor for B389SetupMainViewController(0);
  v42 = objc_msgSendSuper2(&v44, "initWithNibName:bundle:", v41, a3);

  return v42;
}

id sub_100037924(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  char *v27;
  _QWORD *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _OWORD *v35;
  char *v36;
  uint64_t v37;
  id v38;
  objc_super v40;

  v3 = sub_100006A6C((uint64_t *)&unk_1001A5600);
  v4 = swift_allocObject(v3, 32, 7);
  *(_QWORD *)(v4 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v4 + 24) = 0x8000000100132F70;
  v5 = qword_1001A2F10;
  v6 = v1;
  if (v5 != -1)
    swift_once(&qword_1001A2F10, sub_10001DDF8);
  v7 = qword_1001A3CD8;
  v8 = (os_unfair_lock_s *)(qword_1001A3CD8 + 16);
  swift_retain(qword_1001A3CD8);
  os_unfair_lock_lock(v8);
  sub_1000C8490(v9, sub_10005B9A8);
  v10 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController___doNotReference;
  os_unfair_lock_unlock(v8);
  swift_release(v7);
  *(_QWORD *)&v6[v10] = v4;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations] = &_swiftEmptySetSingleton;
  v11 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDInfo];
  *(_OWORD *)v11 = xmmword_1001320D0;
  *((_QWORD *)v11 + 3) = 0;
  *((_QWORD *)v11 + 4) = 0;
  *((_QWORD *)v11 + 2) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_timeout] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_multiThreshold] = -50;
  v12 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig];
  v13 = type metadata accessor for B389PresentationConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om;
  v15 = type metadata accessor for OnceManager();
  v16 = swift_allocObject(v15, 24, 7);
  *(_QWORD *)(v16 + 16) = &_swiftEmptySetSingleton;
  *(_QWORD *)&v6[v14] = v16;
  v17 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_beaconManager;
  *(_QWORD *)&v6[v17] = objc_msgSend(objc_allocWithZone((Class)SPBeaconManager), "init");
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_dismissed] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_retain] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startVC] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleVC] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_namingVC] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_linkingVC] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_loadingVC] = 0;
  v18 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_spManager;
  *(_QWORD *)&v6[v18] = objc_msgSend(objc_allocWithZone((Class)SPPairingManager), "init");
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_requestedPairingData] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_reenabledProxCard] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_didTapStart] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_didAgreeToLinking] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_needsMulti] = 0;
  v19 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_followupController;
  *(_QWORD *)&v6[v19] = objc_msgSend(objc_allocWithZone((Class)FLFollowUpController), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_connectionState] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapSnapshotter] = 0;
  v20 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_doneVC] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_errorVC] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcVC] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDVC] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_hsa2VC] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairLockedVC] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sessionError] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_assetBundle] = 0;
  v21 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_location];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_shownError] = 0;
  v22 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_remainingCharacteristicsToDiscover;
  *(_QWORD *)&v6[v22] = sub_1000D3A40((uint64_t)&off_100176430);
  v23 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars;
  *(_QWORD *)&v6[v23] = sub_100004CFC((uint64_t)_swiftEmptyArrayStorage);
  v24 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues;
  *(_QWORD *)&v6[v24] = sub_100004DFC((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredMainService] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startedCharacteristicDiscovery] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentDisconnect] = 0;
  v25 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager];
  v26 = sub_100004924((uint64_t)_swiftEmptyArrayStorage);
  *v25 = 178;
  v25[1] = v26;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentReadRequest] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentSecondReadRequest] = 0;
  *(_OWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_storeS1] = xmmword_100132B40;
  v27 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_targetS1Length];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  v28 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_fnameDisplay];
  *v28 = 0;
  v28[1] = 0;
  v29 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vbVersionStr];
  *v29 = 0;
  v29[1] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_handledS1S2PayloadRead] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sessionVerified] = 0;
  v30 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcUUID];
  v31 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_needsNFCUI] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcConfig] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_endpoint] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_xpcAgent] = 0;
  v32 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_locationShifter;
  *(_QWORD *)&v6[v32] = objc_msgSend(objc_allocWithZone((Class)GEOLocationShifter), "init");
  v33 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleName];
  *v33 = 0;
  v33[1] = 0;
  v34 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleEmoji];
  *v34 = 0;
  v34[1] = 0;
  v35 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue];
  *v35 = xmmword_100132B40;
  v35[1] = 0u;
  v35[2] = 0u;
  v35[3] = 0u;
  v35[4] = 0u;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories] = 0;
  v36 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairState];
  *(_QWORD *)v36 = 0;
  v36[8] = 1;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_findMyFinalizeState] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapConfigurationState] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapViewController] = 0;
  v37 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_fbOtions;
  *(_QWORD *)&v6[v37] = sub_100004F0C((uint64_t)&off_100176918);

  v40.receiver = v6;
  v40.super_class = (Class)type metadata accessor for B389SetupMainViewController(0);
  v38 = objc_msgSendSuper2(&v40, "initWithCoder:", a1);

  return v38;
}

id sub_100037F18()
{
  return sub_100014100(0, (uint64_t (*)(void))type metadata accessor for B389SetupMainViewController);
}

uint64_t sub_100038290()
{
  return type metadata accessor for B389SetupMainViewController(0);
}

uint64_t type metadata accessor for B389SetupMainViewController(uint64_t a1)
{
  return sub_100023778(a1, qword_1001A4C58, (uint64_t)&nominal type descriptor for B389SetupMainViewController);
}

void sub_1000382AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[69];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[2] = "(";
  v6[3] = &unk_100132FC8;
  v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_10000A630(319, (unint64_t *)&unk_1001A7AF0, type metadata accessor for B389PresentationConfig);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    v6[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[8] = &unk_100132FE0;
    v6[9] = &unk_100132FC8;
    v6[10] = &unk_100132FC8;
    v6[11] = &unk_100132FC8;
    v6[12] = &unk_100132FC8;
    v6[13] = &unk_100132FC8;
    v6[14] = &unk_100132FC8;
    v6[15] = &unk_100132FC8;
    v6[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[17] = &unk_100132FE0;
    v6[18] = &unk_100132FE0;
    v6[19] = &unk_100132FE0;
    v6[20] = &unk_100132FE0;
    v6[21] = &unk_100132FE0;
    v6[22] = &unk_100132FC8;
    v6[23] = &unk_100132FC8;
    v6[24] = &unk_100132FC8;
    v6[25] = &unk_100132FF8;
    v6[26] = &unk_100132FC8;
    v6[27] = &unk_100133010;
    v6[28] = &unk_100132FC8;
    v6[29] = &unk_100132FC8;
    v6[30] = &unk_100132FC8;
    v6[31] = &unk_100132FC8;
    v6[32] = &unk_100132FC8;
    v6[33] = &unk_100132FC8;
    v6[34] = &unk_100132FC8;
    v6[35] = &unk_100132FC8;
    v6[36] = &unk_100132FC8;
    v6[37] = &unk_100133028;
    v6[38] = &unk_100132FE0;
    v6[39] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[40] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[41] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[42] = &unk_100132FC8;
    v6[43] = &unk_100132FE0;
    v6[44] = &unk_100132FE0;
    v6[45] = &unk_100133040;
    v6[46] = &unk_100132FE0;
    v6[47] = &unk_100132FE0;
    v6[48] = &unk_100133058;
    v6[49] = &unk_100133010;
    v6[50] = &unk_100133070;
    v6[51] = &unk_100133070;
    v6[52] = &unk_100132FE0;
    v6[53] = &unk_100132FE0;
    sub_10000A630(319, (unint64_t *)&qword_1001A4C70, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
    if (v5 <= 0x3F)
    {
      v6[54] = *(_QWORD *)(v4 - 8) + 64;
      v6[55] = &unk_100132FE0;
      v6[56] = &unk_100132FC8;
      v6[57] = &unk_100132FC8;
      v6[58] = &unk_100132FC8;
      v6[59] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[60] = &unk_100133070;
      v6[61] = &unk_100133070;
      v6[62] = &unk_100133088;
      v6[63] = &unk_100132FC8;
      v6[64] = &unk_100133010;
      v6[65] = &unk_1001330A0;
      v6[66] = &unk_1001330A0;
      v6[67] = &unk_100132FC8;
      v6[68] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_updateClassMetadata2(a1, 256, 69, v6, a1 + 80);
    }
  }
}

void sub_100038484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  __n128 v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v6, (uint64_t)qword_1001A4A60);
  v7 = swift_retain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v31 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = swift_allocObject(&unk_100179418, 32, 7);
    *(_QWORD *)(v13 + 16) = a1;
    *(_QWORD *)(v13 + 24) = a2;
    v29 = (uint64_t)sub_10005B600;
    v30 = v13;
    swift_retain(a2);
    v14 = sub_100006A6C(&qword_1001A5568);
    v15 = String.init<A>(describing:)(&v29, v14);
    v17 = v16;
    v29 = sub_10001EFA4(v15, v16, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v11 + 4, v11 + 12);
    swift_release_n(a2, 2, v18);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "setResponseHandler: %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_release_n(a2, 2, v19);
  }
  v20 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcVC;
  v21 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcVC);
  v22 = v21;
  v23 = v21;
  if (!v21)
  {
    v23 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389NFCStatusViewController()), "initWithMainController:", v3);
    v22 = *(void **)(v3 + v20);
  }
  *(_QWORD *)(v3 + v20) = v23;
  v24 = v21;

  v25 = *(_QWORD *)(v3 + v20);
  if (v25)
  {
    v26 = (uint64_t *)(v25 + OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler);
    v27 = *v26;
    v28 = v26[1];
    *v26 = a1;
    v26[1] = a2;
    swift_retain(a2);
    sub_100012F60(v27, v28);
  }
}

void sub_10003874C(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  id v7;

  if (a1)
    v6 = _convertErrorToNSError(_:)();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, double))(a4 + 16))(a4, a2);

}

void sub_1000387B0(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  char *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  uint64_t v42;

  v3 = v2;
  if (a1)
  {
    v5 = qword_1001A2F40;
    v7 = a1;
    if (v5 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v8 = type metadata accessor for Logger(0, v6);
    sub_10000E8E8(v8, (uint64_t)qword_1001A4A60);
    v9 = v7;
    v10 = Logger.logObject.getter(v9);
    v12 = static os_log_type_t.default.getter(v10, v11);
    if (os_log_type_enabled(v10, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = v3;
      v41 = v9;
      v14 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v13 = 138412290;
      v15 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v13 + 4, v13 + 12);
      *v14 = a1;

      _os_log_impl((void *)&_mh_execute_header, v10, v12, "Updated configuration: %@", v13, 0xCu);
      v16 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v14, 1, v16);
      v17 = v14;
      v3 = v40;
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

    }
    v24 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcVC;
    v25 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_nfcVC];
    v26 = v25;
    v27 = v25;
    if (!v25)
    {
      v27 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389NFCStatusViewController()), "initWithMainController:", v3);
      v26 = *(void **)&v3[v24];
    }
    *(_QWORD *)&v3[v24] = v27;
    v28 = v25;

    v29 = *(char **)&v3[v24];
    if (v29)
    {
      v30 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig;
      v31 = *(void **)&v29[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_nfcConfig];
      v32 = *(void **)&v29[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_previousNFCConfig];
      *(_QWORD *)&v29[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_previousNFCConfig] = v31;
      v33 = v9;
      v34 = v29;
      v35 = v31;

      v36 = *(void **)&v29[v30];
      *(_QWORD *)&v29[v30] = a1;
      v37 = v33;

      sub_100027274(v38, v39);
    }
    else
    {

    }
  }
  else
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v18 = type metadata accessor for Logger(0, a2);
    v19 = sub_10000E8E8(v18, (uint64_t)qword_1001A4A60);
    v20 = Logger.logObject.getter(v19);
    v22 = static os_log_type_t.default.getter(v20, v21);
    if (os_log_type_enabled(v20, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v22, "Received nil config, dismissing.", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    objc_msgSend(v3, "dismiss:", 0);
  }
}

void sub_100038B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  unint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  NSString v53;
  id v54;
  unint64_t v55;
  NSString v56;
  NSObject *v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  uint64_t v68;
  os_log_type_t v69;
  _BOOL4 v70;
  id v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  uint64_t v78;
  os_log_type_t v79;
  _BOOL4 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint8_t *v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  void *v101;
  id v102;
  id v103;
  uint64_t v104;
  id v105;
  NSObject *v106;
  uint64_t v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint8_t *v110;
  id v111;
  unsigned int v112;
  uint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  void *v122;
  id v123;
  id v124;
  void *v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint8_t *v132;
  unint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  void *v139;
  id v140;
  void *v141;
  id v142;
  void *v143;
  void *v144;
  uint64_t v145;
  NSObject *v146;
  os_log_type_t v147;
  uint8_t *v148;
  unint64_t v149;
  uint64_t v150;
  _BYTE *v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  id v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  NSObject *v159;
  uint64_t v160;
  os_log_type_t v161;
  _BOOL4 v162;
  uint8_t *v163;
  uint64_t v164;
  uint8_t *v165;
  uint64_t v166;
  _QWORD *v167;
  void (*v168)(__int128 *, _QWORD);
  unint64_t v169;
  uint8_t *v170;
  uint8_t *v171;
  uint64_t v172;
  id v173;
  NSObject *v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  id v180;
  id v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  void *v186;
  unint64_t v187;
  __int128 v188;
  __int128 v189;
  char v190[24];
  __int128 aBlock;
  __int128 v192;
  void *v193;
  uint64_t v194;

  v2 = v0;
  v3 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v3);
  v5 = (char *)&v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v182 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (uint8_t **)((char *)&v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v9, &aBlock, 33, 0);
  v184 = (unint64_t)"ensureUserConsented()";
  v185 = v9;
  sub_1000C967C((uint64_t *)&v188, 0xD00000000000001CLL, 0x8000000100138DF0);
  v10 = *((_QWORD *)&v188 + 1);
  swift_endAccess(&aBlock);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  v183 = (unint64_t)"neViewController";
  sub_1000219E4(659, 0xD00000000000006ELL, 0x8000000100138430, v11, 0xD00000000000001CLL, 0x8000000100138DF0, 0, 0xE000000000000000);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_requestedPairingData) & 1) != 0)
  {
LABEL_2:
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session)
      && *(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories))
    {
      v12 = v11;
      swift_beginAccess(v185, &aBlock, 33, 0);
      v13 = v184 | 0x8000000000000000;
      sub_1000D0A84(0xD00000000000001CLL, v184 | 0x8000000000000000);
      v15 = v14;
      swift_endAccess(&aBlock);
      swift_bridgeObjectRelease(v15);
      sub_100021A0C(757, 0xD00000000000006ELL, v183 | 0x8000000000000000, v12, 0xD00000000000001CLL, v13, 0, 0xE000000000000000);
    }
    else
    {
      v32 = sub_100055824();
      v33 = swift_allocError(&type metadata for SDRunState, v32, 0, 0);
      *v34 = 1;
      swift_willThrow(v33);
    }
    return;
  }
  v177 = v11;
  v178 = v1;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_requestedPairingData) = 1;
  v16 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_spManager);
  v17 = swift_allocObject(&unk_100178EF0, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, v2);
  v193 = sub_100055DA8;
  v194 = v17;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v192 = sub_1000AD3B4;
  *((_QWORD *)&v192 + 1) = &unk_100179138;
  v18 = v2;
  v19 = _Block_copy(&aBlock);
  objc_msgSend(v16, "initiatePairingSessionWithCompletion:", v19, swift_release(v194).n128_f64[0]);
  _Block_release(v19);
  v20 = *(void **)(v18 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_beaconManager);
  v21 = swift_allocObject(&unk_100178EF0, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16, v18);
  v193 = sub_100055DB0;
  v194 = v21;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v192 = sub_1000AD42C;
  *((_QWORD *)&v192 + 1) = &unk_100179160;
  v22 = _Block_copy(&aBlock);
  objc_msgSend(v20, "roleCategoriesWithCompletion:", v22, swift_release(v194).n128_f64[0]);
  _Block_release(v22);
  v23 = objc_msgSend(objc_allocWithZone((Class)ACAccountStore), "init");
  v24 = objc_msgSend(v23, "aa_primaryAppleAccount");
  if (!v24)
  {
    URL.init(string:)(0xD00000000000002CLL, 0x8000000100138E30);
    Optional.unwrap(_:file:line:)(v8, sub_10003AACC, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 695, v3);
    sub_10000D858((uint64_t)v5, &qword_1001A3618);
    v35 = v182;
    (*(void (**)(char *, _QWORD *, uint64_t))(v182 + 16))(v5, v8, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v5, 0, 1, v6);
    sub_10003AAE8(0, 0, 0, 0, 0, 0, 0, 0, (uint64_t)v5);
    sub_10000D858((uint64_t)v5, &qword_1001A3618);
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v37 = type metadata accessor for Logger(0, v36);
    v38 = sub_10000E8E8(v37, (uint64_t)qword_1001A4A60);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.error.getter(v39);
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "No iCloud account.", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }

    v42 = sub_100055824();
    v43 = swift_allocError(&type metadata for SDRunState, v42, 0, 0);
    *v44 = 3;
    swift_willThrow(v43);

    (*(void (**)(_QWORD *, uint64_t))(v35 + 8))(v8, v6);
    return;
  }
  v25 = v24;
  v182 = v18;
  v179 = objc_msgSend(objc_allocWithZone((Class)AAUIProfilePictureStore), "initWithAppleAccount:grandSlamAccount:accountStore:", v24, 0, v23);
  v26 = objc_msgSend(v179, "profilePictureForAccountOwner");
  v27 = objc_msgSend(v25, "username");
  v181 = v25;
  v180 = v23;
  if (v27)
  {
    v28 = v27;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v31 = v30;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  v45 = (uint64_t *)(v182 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDInfo);
  swift_beginAccess(v182 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDInfo, v190, 1, 0);
  v46 = *v45;
  v47 = v45[1];
  v48 = (void *)v45[2];
  v49 = v45[3];
  v50 = v45[4];
  *v45 = v29;
  v45[1] = v31;
  v45[3] = 0;
  v45[4] = 0;
  v45[2] = (uint64_t)v26;
  v51 = v26;
  sub_1000174C4(v46, v47, v48, v49, v50);
  v52 = objc_msgSend((id)objc_opt_self(AKAccountManager), "sharedInstance");
  v53 = String._bridgeToObjectiveC()();
  v54 = objc_msgSend(v181, "accountPropertyForKey:", v53);

  if (v54)
  {
    _bridgeAnyObjectToAny(_:)(&v188);
    swift_unknownObjectRelease(v54);
  }
  else
  {
    v188 = 0u;
    v189 = 0u;
  }
  sub_10005B590((uint64_t)&v188, (uint64_t)&aBlock, &qword_1001A4340);
  v2 = v182;
  if (!*((_QWORD *)&v192 + 1))
  {
    sub_10000D858((uint64_t)&aBlock, &qword_1001A4340);
    goto LABEL_24;
  }
  if ((swift_dynamicCast(&v186, &aBlock, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_24:
    v62 = sub_100055824();
    v63 = swift_allocError(&type metadata for SDRunState, v62, 0, 0);
    *v64 = 3;
    swift_willThrow(v63);

    return;
  }
  v55 = v187;
  v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v55);
  v57 = objc_msgSend(v52, "authKitAccountWithAltDSID:", v56);

  v175 = v52;
  if (!v57)
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v65 = type metadata accessor for Logger(0, v58);
    v66 = sub_10000E8E8(v65, (uint64_t)qword_1001A4A60);
    v67 = Logger.logObject.getter(v66);
    v69 = static os_log_type_t.default.getter(v67, v68);
    v70 = os_log_type_enabled(v67, v69);
    v71 = v180;
    if (v70)
    {
      v72 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v72 = 0;
      _os_log_impl((void *)&_mh_execute_header, v67, v69, "No AppleID account", v72, 2u);
      swift_slowDealloc(v72, -1, -1);
    }
    goto LABEL_61;
  }
  v59 = objc_msgSend(v52, "additionalInfoForAccount:", v57);
  if (v59)
  {
    v60 = v59;
    v61 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v59, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v61 = 0;
  }
  LODWORD(v172) = objc_msgSend(v52, "phoneAsAppleIDForAccount:", v57);
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v74 = type metadata accessor for Logger(0, v73);
  v75 = sub_10000E8E8(v74, (uint64_t)qword_1001A4A60);
  v76 = swift_bridgeObjectRetain_n(v61, 2);
  v176 = v75;
  v77 = Logger.logObject.getter(v76);
  v79 = static os_log_type_t.default.getter(v77, v78);
  v80 = os_log_type_enabled(v77, v79);
  v174 = v57;
  v173 = v51;
  if (v80)
  {
    v81 = swift_slowAlloc(18, -1);
    v171 = (uint8_t *)swift_slowAlloc(32, -1);
    *(_QWORD *)&v188 = v171;
    *(_DWORD *)v81 = 136315394;
    if (v61)
    {
      v82 = swift_bridgeObjectRetain(v61);
      v83 = Dictionary.description.getter(v82, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
      v85 = v84;
      swift_bridgeObjectRelease(v61);
    }
    else
    {
      *(_QWORD *)&aBlock = 0;
      *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(*((_QWORD *)&aBlock + 1));
      v83 = 0xD000000000000026;
      v85 = 0x8000000100138E60;
    }
    *(_QWORD *)&aBlock = sub_10001EFA4(v83, v85, (uint64_t *)&v188);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v81 + 4, v81 + 12);
    swift_bridgeObjectRelease_n(v61, 2);
    swift_bridgeObjectRelease(v85);
    *(_WORD *)(v81 + 12) = 1024;
    LODWORD(aBlock) = v172;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v81 + 14, v81 + 18);
    _os_log_impl((void *)&_mh_execute_header, v77, v79, "Additional account info: %s, MAKO: %{BOOL}d", (uint8_t *)v81, 0x12u);
    v86 = v171;
    swift_arrayDestroy(v171, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v86, -1, -1);
    swift_slowDealloc(v81, -1, -1);

    if (!v61)
      goto LABEL_42;
  }
  else
  {

    swift_bridgeObjectRelease_n(v61, 2);
    if (!v61)
      goto LABEL_42;
  }
  if (!*(_QWORD *)(v61 + 16))
  {
LABEL_42:
    v89 = v61;
    aBlock = 0u;
    v192 = 0u;
LABEL_43:
    sub_10000D858((uint64_t)&aBlock, &qword_1001A4340);
LABEL_44:
    v2 = v182;
LABEL_45:
    v90 = v89;
    v91 = swift_bridgeObjectRetain(v89);
    v92 = Logger.logObject.getter(v91);
    v93 = static os_log_type_t.error.getter(v92);
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc(12, -1);
      v172 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v188 = v172;
      *(_DWORD *)v94 = 136315138;
      v95 = v90;
      if (v90)
      {
        v96 = swift_bridgeObjectRetain(v90);
        v97 = Dictionary.description.getter(v96, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
        v99 = v98;
        swift_bridgeObjectRelease(v95);
      }
      else
      {
        *(_QWORD *)&aBlock = 0;
        *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(*((_QWORD *)&aBlock + 1));
        v97 = 0xD000000000000026;
        v99 = 0x8000000100138E60;
      }
      *(_QWORD *)&aBlock = sub_10001EFA4(v97, v99, (uint64_t *)&v188);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v94 + 4, v94 + 12);
      swift_bridgeObjectRelease_n(v95, 2);
      swift_bridgeObjectRelease(v99);
      _os_log_impl((void *)&_mh_execute_header, v92, v93, "Failed to decode phone number from: %s", v94, 0xCu);
      v104 = v172;
      swift_arrayDestroy(v172, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v104, -1, -1);
      swift_slowDealloc(v94, -1, -1);

      v71 = v180;
      v2 = v182;
    }
    else
    {

      swift_bridgeObjectRelease_n(v90, 2);
      v71 = v180;
    }
    v52 = v175;
    goto LABEL_57;
  }
  swift_bridgeObjectRetain(v61);
  v87 = sub_100005D24(0x6D754E656E6F6870, 0xEC00000073726562);
  if ((v88 & 1) != 0)
  {
    sub_10000D894(*(_QWORD *)(v61 + 56) + 32 * v87, (uint64_t)&aBlock);
  }
  else
  {
    aBlock = 0u;
    v192 = 0u;
  }
  v89 = v61;
  swift_bridgeObjectRelease(v61);
  if (!*((_QWORD *)&v192 + 1))
    goto LABEL_43;
  v100 = sub_100013194(0, (unint64_t *)&unk_1001A7CE0, NSArray_ptr);
  if ((swift_dynamicCast(&v188, &aBlock, (char *)&type metadata for Any + 8, v100, 6) & 1) == 0)
    goto LABEL_44;
  v101 = (void *)v188;
  v102 = objc_msgSend((id)v188, "firstObject");
  if (v102)
  {
    v103 = v102;
    _bridgeAnyObjectToAny(_:)(&v188);
    swift_unknownObjectRelease(v103);
  }
  else
  {
    v188 = 0u;
    v189 = 0u;
  }
  sub_10005B590((uint64_t)&v188, (uint64_t)&aBlock, &qword_1001A4340);
  if (!*((_QWORD *)&v192 + 1))
  {

    goto LABEL_43;
  }
  v152 = sub_100013194(0, (unint64_t *)&unk_1001A54E0, NSDictionary_ptr);
  if ((swift_dynamicCast(&v186, &aBlock, (char *)&type metadata for Any + 8, v152, 6) & 1) == 0)
  {

    goto LABEL_44;
  }
  v153 = v186;
  *(_QWORD *)&v188 = 0x6D754E656E6F6870;
  *((_QWORD *)&v188 + 1) = 0xEB00000000726562;
  v154 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v188, &type metadata for String);
  v155 = objc_msgSend(v153, "__swift_objectForKeyedSubscript:", v154);
  swift_unknownObjectRelease(v154);
  if (v155)
  {
    _bridgeAnyObjectToAny(_:)(&v188);
    swift_unknownObjectRelease(v155);
  }
  else
  {
    v188 = 0u;
    v189 = 0u;
  }
  sub_10005B590((uint64_t)&v188, (uint64_t)&aBlock, &qword_1001A4340);
  v2 = v182;
  if (!*((_QWORD *)&v192 + 1))
  {

    sub_10000D858((uint64_t)&aBlock, &qword_1001A4340);
    goto LABEL_45;
  }
  if ((swift_dynamicCast(&v186, &aBlock, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {

    goto LABEL_45;
  }
  v156 = v187;
  if ((v172 & 1) != 0)
  {

    swift_bridgeObjectRelease(v156);
    goto LABEL_45;
  }
  v157 = (uint64_t)v186;
  swift_bridgeObjectRelease(v89);
  v158 = swift_bridgeObjectRetain_n(v156, 2);
  v159 = Logger.logObject.getter(v158);
  v161 = static os_log_type_t.default.getter(v159, v160);
  v162 = os_log_type_enabled(v159, v161);
  v172 = v157;
  if (v162)
  {
    v163 = (uint8_t *)swift_slowAlloc(12, -1);
    v164 = swift_slowAlloc(32, -1);
    *(_QWORD *)&aBlock = v164;
    v171 = v163;
    *(_DWORD *)v163 = 136315138;
    v170 = v163 + 4;
    swift_bridgeObjectRetain(v156);
    *(_QWORD *)&v188 = sub_10001EFA4(v157, v156, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v188, (char *)&v188 + 8, v170, v163 + 12);
    swift_bridgeObjectRelease_n(v156, 3);
    v165 = v171;
    _os_log_impl((void *)&_mh_execute_header, v159, v161, "Phone number: %s", v171, 0xCu);
    swift_arrayDestroy(v164, 1, (char *)&type metadata for Any + 8);
    v166 = v164;
    v2 = v182;
    swift_slowDealloc(v166, -1, -1);
    swift_slowDealloc(v165, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v156, 2);
  }
  v71 = v180;
  v52 = v175;
  v168 = (void (*)(__int128 *, _QWORD))sub_100030B40((uint64_t)&aBlock);
  if (v167[1] == 1)
  {
    v169 = v156;
  }
  else
  {
    v169 = v167[4];
    v167[3] = v172;
    v167[4] = v156;
  }
  swift_bridgeObjectRelease(v169);
  v168(&aBlock, 0);

LABEL_57:
  v105 = objc_msgSend(v52, "securityLevelForAccount:", v174);
  v106 = Logger.logObject.getter(v105);
  v108 = static os_log_type_t.default.getter(v106, v107);
  if (os_log_type_enabled(v106, v108))
  {
    v109 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v109 = 134217984;
    *(_QWORD *)&aBlock = v105;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v109 + 4, v109 + 12);
    _os_log_impl((void *)&_mh_execute_header, v106, v108, "securityLevel: %lu", v109, 0xCu);
    v110 = v109;
    v2 = v182;
    swift_slowDealloc(v110, -1, -1);
  }

  if (v105 == (id)4)
  {
    v51 = v173;
    v67 = v174;
LABEL_61:

    v111 = objc_msgSend(objc_allocWithZone((Class)CDPStateController), "init");
    *(_QWORD *)&aBlock = 0;
    v112 = objc_msgSend(v111, "isManateeAvailable:", &aBlock);
    v113 = aBlock;
    if (v112)
    {
      v114 = (id)aBlock;

      v11 = v177;
      goto LABEL_2;
    }
    v115 = v51;
    v116 = v2;
    v117 = (id)aBlock;
    v118 = _convertNSErrorToError(_:)(v113);

    swift_willThrow(v119);
    v120 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_hsa2VC;
    v121 = *(void **)(v116 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_hsa2VC);
    v122 = v121;
    v123 = v121;
    if (!v121)
    {
      v123 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389HSA2ViewController()), "initWithMainController:", v116);
      v122 = *(void **)(v116 + v120);
    }
    *(_QWORD *)(v116 + v120) = v123;
    v124 = v121;

    v125 = *(void **)(v116 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
    if (v125)
    {
      v126 = *(void **)(v116 + v120);
      if (v126)
      {
        sub_10011757C(v125, v126);
        if (qword_1001A2F40 != -1)
          swift_once(&qword_1001A2F40, sub_100030AB0);
        v128 = type metadata accessor for Logger(0, v127);
        v129 = sub_10000E8E8(v128, (uint64_t)qword_1001A4A60);
        v130 = Logger.logObject.getter(v129);
        v131 = static os_log_type_t.error.getter(v130);
        if (os_log_type_enabled(v130, v131))
        {
          v132 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v132 = 0;
          _os_log_impl((void *)&_mh_execute_header, v130, v131, "No manatee.", v132, 2u);
          swift_slowDealloc(v132, -1, -1);
        }

        v133 = sub_100055824();
        v134 = swift_allocError(&type metadata for SDRunState, v133, 0, 0);
        *v135 = 3;
        swift_willThrow(v134);
        swift_errorRelease(v118);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_102;
  }
  v136 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_hsa2VC;
  v137 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_hsa2VC);
  v138 = v2;
  v139 = v137;
  v140 = v137;
  v141 = v173;
  if (!v137)
  {
    v140 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389HSA2ViewController()), "initWithMainController:", v138);
    v139 = *(void **)(v138 + v136);
  }
  *(_QWORD *)(v138 + v136) = v140;
  v142 = v137;

  v143 = *(void **)(v138 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
  if (!v143)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  v144 = *(void **)(v138 + v136);
  if (!v144)
  {
LABEL_103:
    __break(1u);
    return;
  }
  sub_10011757C(v143, v144);
  v146 = Logger.logObject.getter(v145);
  v147 = static os_log_type_t.error.getter(v146);
  if (os_log_type_enabled(v146, v147))
  {
    v148 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v148 = 0;
    _os_log_impl((void *)&_mh_execute_header, v146, v147, "No HSA2.", v148, 2u);
    swift_slowDealloc(v148, -1, -1);
  }

  v149 = sub_100055824();
  v150 = swift_allocError(&type metadata for SDRunState, v149, 0, 0);
  *v151 = 3;
  swift_willThrow(v150);

}

uint64_t sub_10003A0EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  const void *v20;
  _QWORD *v21;
  id v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  _QWORD *v32;
  char v33[24];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v33, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v15 = (void *)result;
    sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
    v16 = static OS_dispatch_queue.main.getter();
    v30 = v7;
    v17 = (void *)v16;
    v18 = (_QWORD *)swift_allocObject(&unk_1001791E8, 40, 7);
    v18[2] = a1;
    v18[3] = a2;
    v18[4] = v15;
    aBlock[4] = sub_100055E30;
    v32 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001BB50;
    aBlock[3] = &unk_100179200;
    v19 = _Block_copy(aBlock);
    v29 = v10;
    v20 = v19;
    v21 = v32;
    v22 = a1;
    swift_errorRetain(a2);
    v23 = v15;
    v24 = swift_release(v21);
    static DispatchQoS.unspecified.getter(v24);
    aBlock[0] = _swiftEmptyArrayStorage;
    v25 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v26 = sub_100006A6C((uint64_t *)&unk_1001A4330);
    v27 = sub_100012F94();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v6, v25);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v20);
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v29);
  }
  return result;
}

uint64_t sub_10003A330(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v24;
  _QWORD v25[3];
  _BYTE v26[8];
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v6, (uint64_t)qword_1001A4A60);
  v7 = a1;
  swift_errorRetain(a2);
  v8 = v7;
  v9 = swift_errorRetain(a2);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = (_QWORD *)swift_slowAlloc(8, -1);
    v24 = swift_slowAlloc(32, -1);
    v29 = v24;
    *(_DWORD *)v13 = 138412546;
    if (a1)
    {
      v27 = (uint64_t)v8;
      v15 = v8;
    }
    else
    {
      v27 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v13 + 4, v13 + 12);
    *v14 = a1;

    *(_WORD *)(v13 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue(a2, v26, v25);
      v16 = Error.localizedDescription.getter(v25[1], v25[2]);
      v18 = v17;
    }
    else
    {
      v27 = 0;
      v28 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v28);
      v18 = 0x8000000100136820;
      v16 = 0xD000000000000015;
    }
    v27 = sub_10001EFA4(v16, v18, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v13 + 14, v13 + 22);
    swift_bridgeObjectRelease(v18);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "Got pairing session: %@, error: %s", (uint8_t *)v13, 0x16u);
    v19 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v14, 1, v19);
    swift_slowDealloc(v14, -1, -1);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {

    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  v20 = *(_QWORD *)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sessionError);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sessionError) = a2;
  swift_errorRetain(a2);
  swift_errorRelease(v20);
  v21 = *(void **)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session) = a1;
  v22 = v8;

  return sub_100031994();
}

uint64_t sub_10003A670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;
  char v27[24];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v13 = (void *)result;
    sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
    v14 = static OS_dispatch_queue.main.getter();
    v24 = v5;
    v15 = (void *)v14;
    v16 = swift_allocObject(&unk_100179198, 32, 7);
    *(_QWORD *)(v16 + 16) = a1;
    *(_QWORD *)(v16 + 24) = v13;
    aBlock[4] = sub_100055DF4;
    v26 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001BB50;
    aBlock[3] = &unk_1001791B0;
    v17 = _Block_copy(aBlock);
    v18 = v26;
    swift_bridgeObjectRetain(a1);
    v19 = v13;
    v20 = swift_release(v18);
    static DispatchQoS.unspecified.getter(v20);
    aBlock[0] = _swiftEmptyArrayStorage;
    v21 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v22 = sub_100006A6C((uint64_t *)&unk_1001A4330);
    v23 = sub_100012F94();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v4, v21);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_10003A8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  v5 = swift_bridgeObjectRetain_n(a1, 2);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v22 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_100013194(0, &qword_1001A7CF0, SPBeaconRoleCategory_ptr);
    v12 = swift_bridgeObjectRetain(a1);
    v13 = Array.description.getter(v12, v11);
    v15 = v14;
    swift_bridgeObjectRelease(a1);
    v21 = sub_10001EFA4(v13, v15, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "roleCategories: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  v16 = *(_QWORD *)(a2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories) = a1;
  swift_bridgeObjectRetain(a1);
  v17 = swift_bridgeObjectRelease(v16);
  v18 = *(void **)(a2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleVC);
  if (v18)
  {
    v19 = v18;
    sub_100094620();

  }
  return sub_100031994(v17);
}

unint64_t sub_10003AACC()
{
  return 0xD000000000000039;
}

void sub_10003AAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  char *v28;
  id v29;
  NSString v30;
  NSString v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void *v42;
  char *v43;
  id v44;
  NSString v45;
  NSString v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void *v55;
  char *v56;
  id v57;
  NSString v58;
  NSString v59;
  id v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[24];

  v10 = v9;
  v19 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v19);
  v21 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDVC;
  if (*(_QWORD *)(v10 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDVC))
    goto LABEL_17;
  v75 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = a8;
  v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389AppleIDViewController(0)), "initWithMainController:", v10);
  v23 = *(void **)(v10 + v21);
  *(_QWORD *)(v10 + v21) = v22;

  v24 = *(char **)(v10 + v21);
  if (!v24)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v77 = a1;
  v78 = a7;
  if (a4)
  {
    v25 = v24;
    v26 = a4;
  }
  else
  {
    v27 = (void *)objc_opt_self(NSBundle);
    v28 = v24;
    v29 = objc_msgSend(v27, "mainBundle");
    v30 = String._bridgeToObjectiveC()();
    v31 = String._bridgeToObjectiveC()();
    v74 = a2;
    v32 = v31;
    v33 = sub_100117218(v29, v30, v31);

    a2 = v74;
    a3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v26 = v34;

  }
  v35 = (uint64_t *)&v24[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_bodyText];
  v36 = *(_QWORD *)&v24[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_bodyText + 8];
  *v35 = a3;
  v35[1] = v26;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRelease(v36);
  sub_10004EAB8();

  v37 = *(char **)(v10 + v21);
  if (!v37)
    goto LABEL_23;
  v38 = v77;
  v39 = v78;
  if (a6)
  {
    v40 = v37;
    v41 = a6;
  }
  else
  {
    v42 = (void *)objc_opt_self(NSBundle);
    v43 = v37;
    v44 = objc_msgSend(v42, "mainBundle");
    v45 = String._bridgeToObjectiveC()();
    v46 = String._bridgeToObjectiveC()();
    v47 = a2;
    v48 = sub_100117218(v44, v45, v46);

    a5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v41 = v49;

    a2 = v47;
    v38 = v77;
    v39 = v78;
  }
  v50 = (uint64_t *)&v37[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_buttonText];
  v51 = *(_QWORD *)&v37[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_buttonText + 8];
  *v50 = a5;
  v50[1] = v41;
  swift_bridgeObjectRetain(a6);
  swift_bridgeObjectRelease(v51);
  sub_10004EAB8();

  v52 = *(char **)(v10 + v21);
  if (!v52)
    goto LABEL_24;
  if (a2)
  {
    v53 = v52;
    v54 = a2;
  }
  else
  {
    v55 = (void *)objc_opt_self(NSBundle);
    v56 = v52;
    v57 = objc_msgSend(v55, "mainBundle");
    v58 = String._bridgeToObjectiveC()();
    v59 = String._bridgeToObjectiveC()();
    v60 = sub_100117218(v57, v58, v59);

    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v54 = v61;

    a2 = 0;
  }
  v62 = (uint64_t *)&v52[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleText];
  v63 = *(_QWORD *)&v52[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleText + 8];
  *v62 = v38;
  v62[1] = v54;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v63);
  sub_10004EAB8();

  v64 = *(_QWORD *)(v10 + v21);
  if (!v64)
    goto LABEL_25;
  v65 = (_QWORD *)(v64 + OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_imageName);
  v66 = v65[1];
  v67 = v76;
  *v65 = v39;
  v65[1] = v67;
  swift_bridgeObjectRetain(v67);
  swift_bridgeObjectRelease(v66);
  v68 = *(char **)(v10 + v21);
  if (v68)
  {
    v69 = v75;
    sub_100006BD8(a9, v75, &qword_1001A3618);
    v70 = (uint64_t)&v68[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_onDoneURL];
    swift_beginAccess(&v68[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_onDoneURL], v79, 33, 0);
    v71 = v68;
    sub_10005BA44(v69, v70, &qword_1001A3618);
    swift_endAccess(v79);

LABEL_17:
    v72 = *(void **)(v10 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
    if (v72)
    {
      v73 = *(void **)(v10 + v21);
      if (v73)
      {
        sub_10011757C(v72, v73);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
}

void sub_10003AF94()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  unsigned int (*v26)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v27;
  char *v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  int v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  _BYTE *v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  _BYTE *v50;
  char *v51;
  char *v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  Class isa;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  _BYTE *v68;
  _BYTE *v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  NSObject *v79;
  uint64_t v80;
  os_log_type_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  os_log_t v88;
  uint64_t v89;
  _BYTE *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  _BYTE v100[12];
  int v101;
  os_log_t v102;
  id v103;
  _BYTE *v104;
  _BYTE *v105;
  char *v106;
  _BYTE *v107;
  _BYTE *v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  _QWORD v114[2];
  uint64_t v115;
  uint64_t v116;
  char v117[32];

  v1 = type metadata accessor for B389PresentationConfig(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v104 = &v100[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v4);
  v108 = &v100[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v109 = type metadata accessor for UUID(0);
  v111 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v110 = &v100[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for B389PresentationConfig.Mode(0);
  v8 = __chkstk_darwin(v7);
  v106 = &v100[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v8);
  v107 = &v100[-v11];
  v12 = __chkstk_darwin(v10);
  v14 = &v100[-v13];
  __chkstk_darwin(v12);
  v16 = &v100[-v15];
  v17 = sub_100006A6C(&qword_1001A5428);
  v18 = __chkstk_darwin(v17);
  v105 = &v100[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __chkstk_darwin(v18);
  v22 = &v100[-v21];
  __chkstk_darwin(v20);
  v24 = &v100[-v23];
  v112 = v0;
  v25 = (uint64_t)&v0[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig];
  swift_beginAccess(v25, v117, 0, 0);
  sub_100006BD8(v25, (uint64_t)v24, &qword_1001A5428);
  v26 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v2 + 48);
  if (v26(v24, 1, v1) == 1)
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  sub_100023F5C((uint64_t)v24, (uint64_t)v16, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023F5C((uint64_t)v16, (uint64_t)v14, type metadata accessor for B389PresentationConfig.Mode);
  if (!swift_getEnumCaseMultiPayload(v14, v7))
  {
    sub_100023FA0((uint64_t)v16, type metadata accessor for B389PresentationConfig.Mode);
    sub_100023FA0((uint64_t)v24, type metadata accessor for B389PresentationConfig);
    return;
  }
  sub_100023FA0((uint64_t)v14, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023FA0((uint64_t)v16, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023FA0((uint64_t)v24, type metadata accessor for B389PresentationConfig);
  sub_100006BD8(v25, (uint64_t)v22, &qword_1001A5428);
  if (v26(v22, 1, v1) == 1)
    goto LABEL_49;
  v103 = v26;
  v27 = v107;
  sub_100023F5C((uint64_t)v22, (uint64_t)v107, type metadata accessor for B389PresentationConfig.Mode);
  v28 = v106;
  sub_100023F5C((uint64_t)v27, (uint64_t)v106, type metadata accessor for B389PresentationConfig.Mode);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28, v7);
  v30 = v109;
  v31 = v111;
  v32 = v108;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(_BYTE *, char *, uint64_t))(v111 + 32))(v108, v28, v109);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v30);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v111 + 56))(v108, 1, 1, v109);
    sub_100023FA0((uint64_t)v28, type metadata accessor for B389PresentationConfig.Mode);
  }
  sub_100023FA0((uint64_t)v27, type metadata accessor for B389PresentationConfig.Mode);
  v33 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v32, 1, v30);
  v34 = v112;
  if (v33 != 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 32))(v110, v32, v30);
    sub_100023FA0((uint64_t)v22, type metadata accessor for B389PresentationConfig);
    v48 = (char *)v34 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
    swift_beginAccess((char *)v34 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, &v113, 33, 0);
    sub_1000C967C(&v115, 0xD000000000000012, 0x8000000100138CB0);
    v49 = v116;
    swift_endAccess(&v113);
    swift_bridgeObjectRelease(v49);
    v50 = *(_BYTE **)((char *)v34 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
    v51 = "neViewController";
    sub_1000219E4(768, 0xD00000000000006ELL, 0x8000000100138430, (uint64_t)v50, 0xD000000000000012, 0x8000000100138CB0, 0, 0xE000000000000000);
    v52 = (char *)OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central;
    v53 = *(void **)((char *)v34 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central);
    if (v53)
    {
      if (objc_msgSend(v53, "state") == (id)5)
        goto LABEL_18;
      v54 = *(void **)&v52[(_QWORD)v34];
      if (v54)
      {
        if (objc_msgSend(v54, "state") != (id)10)
          goto LABEL_44;
LABEL_18:
        v108 = v50;
        if (*(_QWORD *)((char *)v34 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph))
        {
LABEL_42:
          swift_beginAccess(v48, &v113, 33, 0);
          sub_1000D0A84(0xD000000000000012, 0x8000000100138CB0);
          v95 = v94;
          swift_endAccess(&v113);
          swift_bridgeObjectRelease(v95);
          sub_100021A0C(789, 0xD00000000000006ELL, (unint64_t)v51 | 0x8000000000000000, (uint64_t)v108, 0xD000000000000012, 0x8000000100138CB0, 0, 0xE000000000000000);
          (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v110, v30);
          return;
        }
        v107 = (_BYTE *)OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph;
        v55 = *(void **)&v52[(_QWORD)v34];
        if (v55)
        {
          v56 = sub_100006A6C((uint64_t *)&unk_1001A54B0);
          v57 = *(_QWORD *)(v31 + 72);
          v58 = *(unsigned __int8 *)(v31 + 80);
          v59 = v31;
          v60 = (v58 + 32) & ~v58;
          v61 = swift_allocObject(v56, v60 + v57, v58 | 7);
          *(_OWORD *)(v61 + 16) = xmmword_100131C40;
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v59 + 16))(v61 + v60, v110, v30);
          v62 = v55;
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v61);
          v64 = objc_msgSend(v62, "retrievePeripheralsWithIdentifiers:", isa);

          v65 = sub_100013194(0, (unint64_t *)&unk_1001A7CB0, CBPeripheral_ptr);
          v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v64, v65);

          if ((unint64_t)v66 >> 62)
          {
            if (v66 < 0)
              v92 = v66;
            else
              v92 = v66 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v66);
            v93 = _CocoaArrayWrapper.endIndex.getter(v92);
            swift_bridgeObjectRelease(v66);
            v31 = v111;
            v67 = v112;
            if (v93)
              goto LABEL_22;
          }
          else
          {
            v31 = v111;
            v67 = v112;
            if (*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_22:
              v106 = "neViewController";
              if ((v66 & 0xC000000000000001) != 0)
              {
                v68 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v66);
              }
              else
              {
                if (!*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
LABEL_47:
                  swift_once(&qword_1001A2F40, sub_100030AB0);
LABEL_29:
                  v77 = type metadata accessor for Logger(0, v76);
                  sub_10000E8E8(v77, (uint64_t)qword_1001A4A60);
                  v78 = (char *)v67;
                  v79 = Logger.logObject.getter(v78);
                  v81 = static os_log_type_t.default.getter(v79, v80);
                  v82 = v81;
                  if (os_log_type_enabled(v79, v81))
                  {
                    v83 = swift_slowAlloc(18, -1);
                    v102 = v79;
                    v84 = v83;
                    v85 = swift_slowAlloc(8, -1);
                    v101 = v82;
                    v86 = (_QWORD *)v85;
                    *(_DWORD *)v84 = 138412546;
                    v103 = v52;
                    v113 = v78;
                    v87 = v78;
                    v30 = v109;
                    v31 = v111;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, v114, v84 + 4, v84 + 12);
                    *v86 = v105;

                    *(_WORD *)(v84 + 12) = 1024;
                    LODWORD(v113) = (_DWORD)v104;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, (char *)&v113 + 4, v84 + 14, v84 + 18);
                    v88 = v102;
                    _os_log_impl((void *)&_mh_execute_header, v102, (os_log_type_t)v101, "%@. BT-paired already? %{BOOL}d", (uint8_t *)v84, 0x12u);
                    v89 = sub_100006A6C(&qword_1001A5420);
                    swift_arrayDestroy(v86, 1, v89);
                    swift_slowDealloc(v86, -1, -1);
                    swift_slowDealloc(v84, -1, -1);

                  }
                  else
                  {

                  }
                  v67 = v112;
                  goto LABEL_41;
                }
                v68 = *(id *)(v66 + 32);
              }
              v69 = v68;
              swift_bridgeObjectRelease(v66);
              v70 = *(void **)&v107[(_QWORD)v67];
              *(_QWORD *)&v107[(_QWORD)v67] = v69;
              v105 = v69;
              v71 = v67;
              v67 = v69;

              v72 = *(void **)&v52[(_QWORD)v71];
              if (v72)
              {
                v73 = objc_msgSend(v72, "sharedPairingAgent");
                v115 = (uint64_t)v73;
                v74 = sub_100006A6C((uint64_t *)&unk_1001A54C0);
                Optional.unwrap(_:file:line:)(&v113, sub_10003BBFC, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 776, v74);

                v52 = v113;
                v75 = objc_msgSend(v113, "isPeerPaired:", v67);
                v51 = v106;
                LODWORD(v104) = v75;
                if (v75)
                  objc_msgSend(v52, "unpairPeer:", v67);
                if (qword_1001A2F40 == -1)
                  goto LABEL_29;
                goto LABEL_47;
              }
LABEL_53:
              __break(1u);
              return;
            }
          }
          swift_bridgeObjectRelease(v66);
LABEL_41:
          if (*(_QWORD *)&v107[(_QWORD)v67])
            goto LABEL_42;
          swift_beginAccess(v48, &v113, 33, 0);
          sub_1000C967C(&v115, 0xD000000000000012, 0x8000000100138CB0);
          v96 = v116;
          swift_endAccess(&v113);
          swift_bridgeObjectRelease(v96);
          sub_1000219E4(785, 0xD00000000000006ELL, (unint64_t)v51 | 0x8000000000000000, (uint64_t)v108, 0xD000000000000012, 0x8000000100138CB0, 0, 0xE000000000000000);
LABEL_44:
          v97 = sub_100055824();
          v98 = swift_allocError(&type metadata for SDRunState, v97, 0, 0);
          *v99 = 1;
          swift_willThrow(v98);
          (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v110, v30);
          return;
        }
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v35 = v25;
  v36 = (uint64_t)v32;
  v37 = v1;
  sub_10000D858(v36, &qword_1001A42A0);
  sub_100023FA0((uint64_t)v22, type metadata accessor for B389PresentationConfig);
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v39 = type metadata accessor for Logger(0, v38);
  sub_10000E8E8(v39, (uint64_t)qword_1001A4A60);
  v40 = v34;
  v41 = Logger.logObject.getter(v40);
  v42 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc(12, -1);
    v44 = swift_slowAlloc(32, -1);
    v115 = v44;
    *(_DWORD *)v43 = 136315138;
    v45 = v105;
    sub_100006BD8(v35, (uint64_t)v105, &qword_1001A5428);
    if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v103)(v45, 1, v37))
    {
      sub_10000D858((uint64_t)v45, &qword_1001A5428);
      v113 = 0;
      v114[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v114[0]);
      v46 = 0xD000000000000015;
      v47 = 0x8000000100136820;
    }
    else
    {
      v90 = v104;
      sub_100023F5C((uint64_t)v45, (uint64_t)v104, type metadata accessor for B389PresentationConfig);
      sub_10000D858((uint64_t)v45, &qword_1001A5428);
      v46 = sub_10001C220();
      v47 = v91;
      sub_100023FA0((uint64_t)v90, type metadata accessor for B389PresentationConfig);
    }
    v113 = (char *)sub_10001EFA4(v46, v47, &v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, v114, v43 + 4, v43 + 12);

    swift_bridgeObjectRelease(v47);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "No btUUID on %s", v43, 0xCu);
    swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1, -1);
    swift_slowDealloc(v43, -1, -1);

  }
  else
  {

  }
}

unint64_t sub_10003BBFC()
{
  return 0xD000000000000013;
}

void sub_10003BC18(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  Class isa;
  char v13;
  uint64_t v14;
  Swift::String v15;
  void *object;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  NSObject *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43[2];
  unint64_t v44;
  unint64_t v45;
  id v46;

  v3 = v2;
  v4 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_connectionState;
  v5 = v2[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_connectionState];
  if (v5 != 4)
  {
    if (v5 == 2)
    {
      swift_beginAccess(&v2[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations], &v44, 33, 0);
      sub_1000D0A84(0xD000000000000011, 0x8000000100138C90);
      v26 = v25;
      swift_endAccess(&v44);
      swift_bridgeObjectRelease(v26);
      sub_100021A0C(803, 0xD00000000000006ELL, 0x8000000100138430, *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om], 0xD000000000000011, 0x8000000100138C90, 0, 0xE000000000000000);
      return;
    }
    if (!v2[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_connectionState])
    {
      swift_beginAccess(&v2[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations], &v44, 33, 0);
      sub_1000C967C(v43, 0xD000000000000011, 0x8000000100138C90);
      v6 = v43[1];
      swift_endAccess(&v44);
      swift_bridgeObjectRelease(v6);
      sub_1000219E4(797, 0xD00000000000006ELL, 0x8000000100138430, *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om], 0xD000000000000011, 0x8000000100138C90, 0, 0xE000000000000000);
      v7 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central];
      if (v7)
      {
        v8 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph];
        if (v8)
        {
          v9 = v7;
          v10 = v8;
          v11 = sub_1000046D0((uint64_t)_swiftEmptyArrayStorage);
          isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v11);
          objc_msgSend(v9, "connectPeripheral:options:", v10, isa);

          v13 = 1;
          v3[v4] = 1;
LABEL_20:
          v40 = sub_100055824();
          v41 = swift_allocError(&type metadata for SDRunState, v40, 0, 0);
          *v42 = v13;
          swift_willThrow(v41);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v27 = type metadata accessor for Logger(0, a2);
    sub_10000E8E8(v27, (uint64_t)qword_1001A4A60);
    v28 = v2;
    v29 = Logger.logObject.getter(v28);
    v31 = static os_log_type_t.default.getter(v29, v30);
    if (os_log_type_enabled(v29, v31))
    {
      v46 = v28;
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v32 = 138412290;
      v34 = v3[v4];
      v35 = sub_100055824();
      v36 = swift_allocError(&type metadata for SDRunState, v35, 0, 0);
      *v37 = v34;
      v38 = _swift_stdlib_bridgeErrorToNSError(v36);
      v44 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v32 + 4, v32 + 12);
      *v33 = v38;

      _os_log_impl((void *)&_mh_execute_header, v29, v31, "Default connectionState throw %@...", v32, 0xCu);
      v39 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v33, 1, v39);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);

    }
    else
    {

    }
    v13 = v3[v4];
    goto LABEL_20;
  }
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om];
  v44 = 0xD00000000000006ELL;
  v45 = 0x8000000100138430;
  v43[0] = 807;
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(object);
  v17 = String.hashValue.getter(0xD00000000000006ELL, 0x8000000100138430);
  swift_bridgeObjectRelease(0x8000000100138430);
  swift_beginAccess(v14 + 16, &v44, 33, 0);
  LOBYTE(object) = sub_1000C9584(v43, v17);
  swift_endAccess(&v44);
  if ((object & 1) != 0)
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v19 = type metadata accessor for Logger(0, v18);
    v20 = sub_10000E8E8(v19, (uint64_t)qword_1001A4A60);
    v21 = Logger.logObject.getter(v20);
    v23 = static os_log_type_t.default.getter(v21, v22);
    if (os_log_type_enabled(v21, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v23, "ensureConnected - skip", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

  }
}

uint64_t sub_10003C158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE v18[24];
  uint64_t v19[2];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v2, v18, 33, 0);
  sub_1000C967C(v19, 0xD000000000000015, 0x8000000100138DD0);
  v3 = v19[1];
  swift_endAccess(v18);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(818, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000015, 0x8000000100138DD0, 0, 0xE000000000000000);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_didTapStart) & 1) != 0)
  {
    swift_beginAccess(v2, v18, 33, 0);
    sub_1000D0A84(0xD000000000000015, 0x8000000100138DD0);
    v7 = v6;
    swift_endAccess(v18);
    swift_bridgeObjectRelease(v7);
    return sub_100021A0C(824, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000015, 0x8000000100138DD0, 0, 0xE000000000000000);
  }
  else
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v9 = type metadata accessor for Logger(0, v5);
    v10 = sub_10000E8E8(v9, (uint64_t)qword_1001A4A60);
    v11 = Logger.logObject.getter(v10);
    v13 = static os_log_type_t.default.getter(v11, v12);
    if (os_log_type_enabled(v11, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v13, "Waiting for user to tap start...", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    v15 = sub_100055824();
    v16 = swift_allocError(&type metadata for SDRunState, v15, 0, 0);
    *v17 = 1;
    return swift_willThrow(v16);
  }
}

uint64_t sub_10003C394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE v18[24];
  uint64_t v19[2];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v2, v18, 33, 0);
  sub_1000C967C(v19, 0xD000000000000012, 0x8000000100138AC0);
  v3 = v19[1];
  swift_endAccess(v18);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(829, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000012, 0x8000000100138AC0, 0, 0xE000000000000000);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_didAgreeToLinking) & 1) != 0)
  {
    swift_beginAccess(v2, v18, 33, 0);
    sub_1000D0A84(0xD000000000000012, 0x8000000100138AC0);
    v7 = v6;
    swift_endAccess(v18);
    swift_bridgeObjectRelease(v7);
    return sub_100021A0C(835, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000012, 0x8000000100138AC0, 0, 0xE000000000000000);
  }
  else
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v9 = type metadata accessor for Logger(0, v5);
    v10 = sub_10000E8E8(v9, (uint64_t)qword_1001A4A60);
    v11 = Logger.logObject.getter(v10);
    v13 = static os_log_type_t.default.getter(v11, v12);
    if (os_log_type_enabled(v11, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v13, "Waiting for user to agree to linking...", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    v15 = sub_100055824();
    v16 = swift_allocError(&type metadata for SDRunState, v15, 0, 0);
    *v17 = 1;
    return swift_willThrow(v16);
  }
}

void sub_10003C5D0()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  unint64_t v56;
  unint64_t v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  NSObject *v63;
  uint64_t v64;
  _BOOL4 v65;
  uint64_t v66;
  _QWORD *v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  os_log_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  id v80;
  uint8_t *v81;
  void *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(uint8_t *, char *, uint64_t);
  char *v86;
  uint64_t v87;
  void (*v88)(uint8_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v89;
  NSObject *v90;
  uint64_t v91;
  os_log_type_t v92;
  uint8_t *v93;
  void *v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  void *v98;
  uint64_t v99;
  NSString v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  _QWORD *v115;
  NSObject *v116;
  _QWORD *v117;
  uint8_t *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  os_log_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  id v127;
  uint64_t v128;
  id v129;
  Swift::Int v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint8_t *v135;
  id v136;
  id v137;
  _QWORD v138[2];
  uint64_t v139;
  uint64_t v140;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v134 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v133 = (char *)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006A6C(&qword_1001A3618);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v135 = (uint8_t *)&v120 - v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v120 - v10;
  v12 = (char *)v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v12, &v137, 33, 0);
  sub_1000C967C(&v139, 0xD000000000000020, 0x8000000100138CF0);
  v13 = v140;
  swift_endAccess(&v137);
  swift_bridgeObjectRelease(v13);
  v14 = *(uint64_t *)((char *)&v1->isa + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(843, 0xD00000000000006ELL, 0x8000000100138430, v14, 0xD000000000000020, 0x8000000100138CF0, 0, 0xE000000000000000);
  v15 = *(Class *)((char *)&v1->isa
                 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_followupController);
  if (!v15)
  {
    swift_beginAccess(v12, &v137, 33, 0);
    sub_1000D0A84(0xD000000000000020, 0x8000000100138CF0);
    v39 = v38;
    swift_endAccess(&v137);
    swift_bridgeObjectRelease(v39);
    sub_100021A0C(848, 0xD00000000000006ELL, 0x8000000100138430, v14, 0xD000000000000020, 0x8000000100138CF0, 0, 0xE000000000000000);
    return;
  }
  v132 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_followupController;
  v137 = 0;
  v16 = v15;
  v17 = objc_msgSend(v16, "pendingFollowUpItems:", &v137);
  v18 = v137;
  if (!v17)
  {
    v40 = v137;
    _convertNSErrorToError(_:)(v18);

    swift_willThrow(v41);
    return;
  }
  v19 = v17;
  v124 = v2;
  v20 = sub_100013194(0, (unint64_t *)&unk_1001A7CC0, FLFollowUpItem_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);
  v22 = v18;

  v130 = sub_100021A34((uint64_t)&off_100176730);
  swift_arrayDestroy(&unk_100176750, 2, &type metadata for String);
  v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(FLGroupIdentifierAccount);
  v129 = v23;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v127 = v16;
  v24 = type metadata accessor for Logger(0, v23);
  v25 = sub_10000E8E8(v24, (uint64_t)qword_1001A4A60);
  v26 = swift_bridgeObjectRetain_n(v21, 2);
  v131 = v25;
  v27 = Logger.logObject.getter(v26);
  v29 = static os_log_type_t.default.getter(v27, v28);
  if (os_log_type_enabled(v27, v29))
  {
    v126 = v11;
    v30 = swift_slowAlloc(12, -1);
    v125 = v7;
    v31 = (uint8_t *)v30;
    v32 = (void *)swift_slowAlloc(32, -1);
    v137 = v32;
    v123 = v1;
    *(_DWORD *)v31 = 136315138;
    v33 = swift_bridgeObjectRetain(v21);
    v34 = Array.description.getter(v33, v20);
    v36 = v35;
    swift_bridgeObjectRelease(v21);
    v139 = sub_10001EFA4(v34, v36, (uint64_t *)&v137);
    v11 = v126;
    v1 = v123;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140, v31 + 4, v31 + 12);
    swift_bridgeObjectRelease_n(v21, 2);
    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v27, v29, "Followup Items: %s", v31, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    v37 = v31;
    v7 = v125;
    swift_slowDealloc(v37, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v21, 2);
  }
  v42 = (uint64_t)v129;
  swift_bridgeObjectRetain(v129);
  v43 = v130;
  swift_bridgeObjectRetain(v130);
  v44 = v136;
  v45 = sub_100055BB4(v21, v128, v42, v43);
  v46 = v44;
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease_n(v42, 2);
  swift_bridgeObjectRelease_n(v43, 2);
  if (!v45)
  {
    v58 = *(Class *)((char *)&v1->isa + v132);
    *(Class *)((char *)&v1->isa + v132) = 0;

LABEL_46:
    return;
  }
  v47 = v45;
  v48 = objc_msgSend(v47, "actions");
  if (!v48)
  {
    __break(1u);
    return;
  }
  v49 = v48;
  v50 = sub_100013194(0, (unint64_t *)&unk_1001A54D0, FLFollowUpAction_ptr);
  v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v50);

  if (!((unint64_t)v51 >> 62))
  {
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_14;
    goto LABEL_42;
  }
  if (v51 < 0)
    v109 = v51;
  else
    v109 = v51 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v51);
  v110 = _CocoaArrayWrapper.endIndex.getter(v109);
  swift_bridgeObjectRelease(v51);
  if (!v110)
  {
LABEL_42:
    swift_bridgeObjectRelease(v51);
    v111 = v47;
    v112 = Logger.logObject.getter(v111);
    v113 = static os_log_type_t.error.getter(v112);
    if (os_log_type_enabled(v112, v113))
    {
      v136 = v46;
      v114 = (uint8_t *)swift_slowAlloc(12, -1);
      v115 = (_QWORD *)swift_slowAlloc(8, -1);
      v123 = v1;
      v135 = v114;
      *(_DWORD *)v114 = 138412290;
      v137 = v111;
      v116 = v111;
      v1 = v123;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138, v114 + 4, v114 + 12);
      *v115 = v45;
      v117 = v115;

      v118 = v135;
      _os_log_impl((void *)&_mh_execute_header, v112, v113, "account followup %@ has no actions", v135, 0xCu);
      v119 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v117, 1, v119);
      swift_slowDealloc(v117, -1, -1);
      swift_slowDealloc(v118, -1, -1);
    }
    else
    {

      v112 = v111;
    }

    v58 = *(Class *)((char *)&v1->isa + v132);
    *(Class *)((char *)&v1->isa + v132) = 0;

    goto LABEL_46;
  }
LABEL_14:
  if ((v51 & 0xC000000000000001) != 0)
  {
    v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v51);
  }
  else
  {
    if (!*(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v52 = *(id *)(v51 + 32);
  }
  v53 = v52;
  swift_bridgeObjectRelease(v51);
  v54 = objc_msgSend(v47, "title");
  if (v54)
  {
    v55 = v54;
    v132 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v57 = v56;

  }
  else
  {
    v132 = 0;
    v57 = 0;
  }
  swift_bridgeObjectRetain_n(v57, 2);
  v59 = v53;
  v60 = v47;
  v61 = v59;
  v62 = v60;
  v63 = Logger.logObject.getter(v62);
  LODWORD(v128) = static os_log_type_t.default.getter(v63, v64);
  v65 = os_log_type_enabled(v63, (os_log_type_t)v128);
  v129 = v62;
  v130 = v57;
  v126 = v11;
  v136 = v61;
  if (v65)
  {
    v123 = v63;
    v125 = v7;
    v66 = swift_slowAlloc(32, -1);
    v67 = (_QWORD *)swift_slowAlloc(8, -1);
    v122 = swift_slowAlloc(64, -1);
    v139 = v122;
    *(_DWORD *)v66 = 138412802;
    v137 = v62;
    v68 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138, v66 + 4, v66 + 12);
    v121 = v67;
    *v67 = v45;

    *(_WORD *)(v66 + 12) = 2080;
    v69 = v132;
    v70 = v57;
    if (!v57)
    {
      v137 = 0;
      v138[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v138[0]);
      v69 = 0xD000000000000015;
      v70 = 0x8000000100136820;
    }
    swift_bridgeObjectRetain(v57);
    v137 = (id)sub_10001EFA4(v69, v70, &v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138, v66 + 14, v66 + 22);
    swift_bridgeObjectRelease_n(v57, 2);
    swift_bridgeObjectRelease(v70);
    *(_WORD *)(v66 + 22) = 2080;
    v61 = v136;
    v71 = objc_msgSend(v136, "label");
    if (v71)
    {
      v72 = v71;
      v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
      v75 = v74;

    }
    else
    {
      v137 = 0;
      v138[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v138[0]);
      v73 = 0xD000000000000015;
      v75 = 0x8000000100136820;
    }
    v11 = v126;
    v137 = (id)sub_10001EFA4(v73, v75, &v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138, v66 + 24, v66 + 32);

    swift_bridgeObjectRelease(v75);
    v76 = v123;
    _os_log_impl((void *)&_mh_execute_header, v123, (os_log_type_t)v128, "accountFollowup: %@, title: %s, label: %s", (uint8_t *)v66, 0x20u);
    v77 = sub_100006A6C(&qword_1001A5420);
    v78 = v121;
    swift_arrayDestroy(v121, 1, v77);
    swift_slowDealloc(v78, -1, -1);
    v79 = v122;
    swift_arrayDestroy(v122, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v79, -1, -1);
    swift_slowDealloc(v66, -1, -1);

    v7 = v125;
  }
  else
  {

    swift_bridgeObjectRelease_n(v57, 2);
  }
  v80 = objc_msgSend(v61, "launchActionURL");
  v81 = v135;
  if (!v80)
  {
    (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(v134 + 56))(v135, 1, 1, v124);
    goto LABEL_33;
  }
  v82 = v80;
  v83 = v133;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v80);

  v84 = v134;
  v85 = *(void (**)(uint8_t *, char *, uint64_t))(v134 + 32);
  v86 = v83;
  v87 = v124;
  v85(v81, v86, v124);
  v88 = *(void (**)(uint8_t *, _QWORD, uint64_t, uint64_t))(v84 + 56);
  v88(v81, 0, 1, v87);
  if ((*(unsigned int (**)(uint8_t *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v87) == 1)
  {
LABEL_33:
    URL.init(string:)(0x3A7366657270, 0xE600000000000000);
    sub_10000D858((uint64_t)v81, &qword_1001A3618);
    goto LABEL_34;
  }
  v85((uint8_t *)v11, (char *)v81, v87);
  v88((uint8_t *)v11, 0, 1, v87);
LABEL_34:
  v89 = sub_100006BD8((uint64_t)v11, (uint64_t)v7, &qword_1001A3618);
  v90 = Logger.logObject.getter(v89);
  v92 = static os_log_type_t.default.getter(v90, v91);
  if (os_log_type_enabled(v90, v92))
  {
    v93 = (uint8_t *)swift_slowAlloc(12, -1);
    v94 = (void *)swift_slowAlloc(32, -1);
    v137 = v94;
    *(_DWORD *)v93 = 136315138;
    v95 = sub_1000ABF98();
    v97 = v96;
    v139 = sub_10001EFA4(v95, v96, (uint64_t *)&v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140, v93 + 4, v93 + 12);
    swift_bridgeObjectRelease(v97);
    sub_10000D858((uint64_t)v7, &qword_1001A3618);
    _os_log_impl((void *)&_mh_execute_header, v90, v92, "launchActionURL: %s", v93, 0xCu);
    swift_arrayDestroy(v94, 1, (char *)&type metadata for Any + 8);
    v98 = v94;
    v11 = v126;
    swift_slowDealloc(v98, -1, -1);
    swift_slowDealloc(v93, -1, -1);
  }
  else
  {
    sub_10000D858((uint64_t)v7, &qword_1001A3618);
  }

  v99 = v130;
  v100 = String._bridgeToObjectiveC()();
  v101 = sub_100117314(v100);

  v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v101);
  v104 = v103;

  sub_10003AAE8(v132, v99, 0, 0xE000000000000000, v102, v104, 0, 0, (uint64_t)v11);
  swift_bridgeObjectRelease(v104);
  swift_bridgeObjectRelease(v99);
  v105 = sub_100055824();
  v106 = swift_allocError(&type metadata for SDRunState, v105, 0, 0);
  *v107 = 1;
  swift_willThrow(v106);
  v108 = v129;

  sub_10000D858((uint64_t)v11, &qword_1001A3618);
}

uint64_t sub_10003D37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  void *object;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  unint64_t v20;
  Class isa;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v26;
  _QWORD v27[3];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairState;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairState);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairState + 8) == 1)
    __asm { BR              X9 }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  v27[0] = 0xD00000000000006ELL;
  v27[1] = 0x8000000100138430;
  v26 = 899;
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7 = String.hashValue.getter(0xD00000000000006ELL, 0x8000000100138430);
  swift_bridgeObjectRelease(0x8000000100138430);
  swift_beginAccess(v4 + 16, v27, 33, 0);
  LOBYTE(object) = sub_1000C9584(&v26, v7);
  swift_endAccess(v27);
  if ((object & 1) != 0)
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v9 = type metadata accessor for Logger(0, v8);
    v10 = sub_10000E8E8(v9, (uint64_t)qword_1001A4A60);
    v11 = Logger.logObject.getter(v10);
    v13 = static os_log_type_t.default.getter(v11, v12);
    if (os_log_type_enabled(v11, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v13, "ensurePaired - Respond to request", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

  }
  v15 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_central);
  if (!v15)
  {
    __break(1u);
    goto LABEL_14;
  }
  v16 = objc_msgSend(v15, "sharedPairingAgent");
  if (!v16)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v17 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph);
  if (!v17)
  {
LABEL_15:
    __break(1u);
    JUMPOUT(0x10003DFC0);
  }
  v18 = v16;
  v19 = v17;
  v20 = sub_10000434C((uint64_t)_swiftEmptyArrayStorage);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v18, "respondToPairingRequest:type:accept:data:", v19, v3, 1, isa);

  *(_QWORD *)v2 = 2;
  *(_BYTE *)(v2 + 8) = 1;
  v22 = sub_100055824();
  v23 = swift_allocError(&type metadata for SDRunState, v22, 0, 0);
  *v24 = 1;
  return swift_willThrow(v23);
}

uint64_t sub_10003DFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12[2];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v2, v11, 33, 0);
  sub_1000C967C(v12, 0xD000000000000014, 0x8000000100138AE0);
  v3 = v12[1];
  swift_endAccess(v11);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(926, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000014, 0x8000000100138AE0, 0, 0xE000000000000000);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex + 8) & 1) != 0)
  {
    v5 = sub_100055824();
    v6 = swift_allocError(&type metadata for SDRunState, v5, 0, 0);
    *v7 = 1;
    return swift_willThrow(v6);
  }
  else
  {
    swift_beginAccess(v2, v11, 33, 0);
    sub_1000D0A84(0xD000000000000014, 0x8000000100138AE0);
    v10 = v9;
    swift_endAccess(v11);
    swift_bridgeObjectRelease(v10);
    return sub_100021A0C(929, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000014, 0x8000000100138AE0, 0, 0xE000000000000000);
  }
}

void sub_10003E184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint8_t *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  os_log_type_t v44;
  BOOL v45;
  uint8_t *v46;
  uint64_t v47;
  uint8_t *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  unint64_t v79;
  uint8_t *v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  id v86;
  NSString v87;
  id v88;
  unint64_t v89;
  Class isa;
  uint64_t v91;
  unint64_t v92;
  Class v93;
  uint64_t v94;
  unint64_t v95;
  void *v96;
  void *v97;
  void *v98;
  NSObject *v99;
  NSObject *v100;
  uint64_t v101;
  os_log_type_t v102;
  uint8_t *v103;
  NSObject **v104;
  NSObject *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  void *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  id v113;
  unint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  NSString v119;
  id v120;
  int v121;
  uint8_t *v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  unint64_t v135;
  _QWORD *v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *aBlock;
  unint64_t v144[4];
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;

  v1 = v0;
  v2 = sub_100006A6C(&qword_1001A5428);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v118 - v6;
  v8 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, &aBlock, 33, 0);
  v140 = (unint64_t)"v32@?0{?=dd}8d24";
  sub_1000C967C(&v148, 0xD000000000000017, 0x8000000100138530);
  v13 = v149;
  swift_endAccess(&aBlock);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  v139 = (unint64_t)"neViewController";
  v141 = v14;
  sub_1000219E4(934, 0xD00000000000006ELL, 0x8000000100138430, v14, 0xD000000000000017, 0x8000000100138530, 0, 0xE000000000000000);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_findMyFinalizeState))
  {
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_findMyFinalizeState) == 2)
    {
LABEL_3:
      swift_beginAccess(v12, &aBlock, 33, 0);
      v15 = v140 | 0x8000000000000000;
      sub_1000D0A84(0xD000000000000017, v140 | 0x8000000000000000);
      v17 = v16;
      swift_endAccess(&aBlock);
      swift_bridgeObjectRelease(v17);
      sub_100021A0C(1013, 0xD00000000000006ELL, v139 | 0x8000000000000000, v141, 0xD000000000000017, v15, 0, 0xE000000000000000);
      return;
    }
    goto LABEL_46;
  }
  v130 = v7;
  v133 = v11;
  v135 = v9;
  v132 = v5;
  v18 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_findMyFinalizeState;
  v19 = sub_100030BA0();
  v21 = v20;
  v148 = v19;
  v149 = v20;
  v22 = sub_100006A6C(&qword_1001A5430);
  Optional.unwrap(_:file:line:)(&aBlock, sub_10003EEDC, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 937, v22);
  swift_bridgeObjectRelease(v21);
  v127 = (uint64_t)aBlock;
  v128 = (id)v144[0];
  v125 = v18;
  *(_BYTE *)(v1 + v18) = 1;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v24 = type metadata accessor for Logger(0, v23);
  v25 = sub_10000E8E8(v24, (uint64_t)qword_1001A4A60);
  v26 = Logger.logObject.getter(v25);
  v28 = static os_log_type_t.default.getter(v26, v27);
  v29 = os_log_type_enabled(v26, v28);
  v126 = v12;
  v30 = v142;
  if (v29)
  {
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v28, "Calling finalizePairing...", v31, 2u);
    swift_slowDealloc(v31, -1, -1);
  }

  v32 = (_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues);
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues, &v148, 0, 0);
  v136 = v32;
  v33 = *v32;
  if (*(_QWORD *)(v33 + 16))
  {
    swift_bridgeObjectRetain(v33);
    v34 = sub_100005E38(13);
    if ((v35 & 1) != 0)
    {
      v36 = (uint64_t *)(*(_QWORD *)(v33 + 56) + 16 * v34);
      v37 = *v36;
      v38 = v36[1];
      sub_100006B94(*v36, v38);
    }
    else
    {
      v37 = 0;
      v38 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    v37 = 0;
    v38 = 0xF000000000000000;
  }
  v146 = v37;
  v147 = v38;
  v134 = sub_100006A6C(&qword_1001A5438);
  Optional.unwrap(_:file:line:)(&aBlock, sub_10003EEF8, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 940, v134);
  sub_100023F48(v37, v38);
  v39 = (uint64_t)aBlock;
  v40 = v144[0];
  sub_100006B94((uint64_t)aBlock, v144[0]);
  v41 = sub_100006B94(v39, v40);
  v129 = v25;
  v42 = Logger.logObject.getter(v41);
  v44 = static os_log_type_t.default.getter(v42, v43);
  v45 = os_log_type_enabled(v42, v44);
  v137 = v40;
  v138 = v39;
  v131 = v1;
  if (v45)
  {
    v46 = (uint8_t *)swift_slowAlloc(12, -1);
    v47 = swift_slowAlloc(32, -1);
    v124 = v47;
    v123 = v46;
    *(_DWORD *)v46 = 136315138;
    v48 = v46 + 12;
    v150 = v47;
    v122 = v46 + 4;
    aBlock = 0;
    v144[0] = 0xE000000000000000;
    v146 = v39;
    v147 = v40;
    v49 = v135;
    v50 = (unint64_t)v133;
    (*(void (**)(char *, _QWORD, uint64_t))(v135 + 104))(v133, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v8);
    v51 = sub_100055934();
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v146, v50, 58, 0xE100000000000000, &type metadata for Data, v51);
    (*(void (**)(unint64_t, uint64_t))(v49 + 8))(v50, v8);
    v52 = v144[0];
    aBlock = (_QWORD *)sub_10001EFA4((uint64_t)aBlock, v144[0], &v150);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v144, v122, v48);
    swift_bridgeObjectRelease(v52);
    sub_100007348(v39, v40);
    sub_100007348(v39, v40);
    v53 = v123;
    _os_log_impl((void *)&_mh_execute_header, v42, v44, "c3t4s4Notif: %s", v123, 0xCu);
    v54 = v124;
    swift_arrayDestroy(v124, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    v1 = v131;
    v30 = v142;
    swift_slowDealloc(v53, -1, -1);
  }
  else
  {
    sub_100007348(v39, v40);
    sub_100007348(v39, v40);
  }

  v55 = v136;
  v56 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories);
  v57 = v130;
  if (!v56)
    goto LABEL_49;
  v58 = swift_bridgeObjectRetain(*(_QWORD *)(v1
                                           + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories));
  v59 = v30;
  v60 = sub_100030800(v58);
  swift_bridgeObjectRelease(v56);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex + 8) & 1) != 0)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v61 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex);
  v62 = v134;
  if ((v61 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v61 >= v60[2])
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v63 = (char *)(id)v60[2 * v61 + 5];
  swift_bridgeObjectRelease(v60);
  v64 = *v55;
  if (*(_QWORD *)(*v55 + 16))
  {
    swift_bridgeObjectRetain(*v55);
    v65 = sub_100005E38(11);
    if ((v66 & 1) != 0)
    {
      v67 = (uint64_t *)(*(_QWORD *)(v64 + 56) + 16 * v65);
      v68 = *v67;
      v69 = v67[1];
      sub_100006B94(*v67, v69);
    }
    else
    {
      v68 = 0;
      v69 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease(v64);
  }
  else
  {
    v68 = 0;
    v69 = 0xF000000000000000;
  }
  v146 = v68;
  v147 = v69;
  Optional.unwrap(_:file:line:)(&aBlock, sub_10003EF14, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 944, v62);
  sub_100023F48(v68, v69);
  v135 = v144[0];
  v136 = aBlock;
  v70 = *v55;
  if (*(_QWORD *)(*v55 + 16))
  {
    swift_bridgeObjectRetain(*v55);
    v71 = sub_100005E38(12);
    if ((v72 & 1) != 0)
    {
      v73 = (uint64_t *)(*(_QWORD *)(v70 + 56) + 16 * v71);
      v74 = *v73;
      v75 = v73[1];
      sub_100006B94(*v73, v75);
    }
    else
    {
      v74 = 0;
      v75 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease(v70);
  }
  else
  {
    v74 = 0;
    v75 = 0xF000000000000000;
  }
  v146 = v74;
  v147 = v75;
  Optional.unwrap(_:file:line:)(&aBlock, sub_10003EF38, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 945, v62);
  sub_100023F48(v74, v75);
  v134 = (uint64_t)aBlock;
  v133 = (char *)v144[0];
  v124 = swift_allocObject(&unk_100178EF0, 24, 7);
  swift_unknownObjectWeakInit(v124 + 16, v1);
  v76 = v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig;
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig, &v146, 0, 0);
  sub_100006BD8(v76, (uint64_t)v57, &qword_1001A5428);
  v77 = type metadata accessor for B389PresentationConfig(0);
  v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48);
  if (v78(v57, 1, v77) == 1)
    goto LABEL_51;
  v79 = v57[*(int *)(v77 + 28)];
  sub_100023FA0((uint64_t)v57, type metadata accessor for B389PresentationConfig);
  v142 = v59;
  if (v79 > 3)
    v80 = 0;
  else
    v80 = (uint8_t *)qword_100133250[v79];
  v130 = v63;
  v81 = (uint8_t *)objc_msgSend(v63, "roleId");
  v120 = (id)sub_100030EC4();
  v83 = v82;
  v84 = (uint64_t)v132;
  sub_100006BD8(v76, (uint64_t)v132, &qword_1001A5428);
  if (v78((char *)v84, 1, v77) == 1)
    goto LABEL_52;
  v85 = *(unsigned __int8 *)(v84 + *(int *)(v77 + 24));
  sub_100006B94(v138, v137);
  sub_100006B94(v134, (unint64_t)v133);
  sub_100006B94((uint64_t)v136, v135);
  v86 = v128;
  v87 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v86);
  v123 = v80;
  v122 = v81;
  v127 = (uint64_t)v87;
  v121 = v85;
  if (v83)
  {
    v119 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v83);
  }
  else
  {
    v119 = 0;
  }
  v88 = objc_allocWithZone((Class)SPPairingConfiguration);
  v89 = v137;
  isa = Data._bridgeToObjectiveC()().super.isa;
  v92 = v135;
  v91 = (uint64_t)v136;
  v93 = Data._bridgeToObjectiveC()().super.isa;
  v94 = v134;
  v95 = (unint64_t)v133;
  v120 = Data._bridgeToObjectiveC()().super.isa;
  LOBYTE(v117) = v121;
  v96 = v88;
  v97 = (void *)v127;
  v98 = v119;
  v128 = objc_msgSend(v96, "initWithName:roleId:roleEmoji:keyStatus:collaborativeKeyC3:signatureS4:isZeus:batteryLevel:", v127, v122, v119, isa, v93, v120, v117, v123);
  sub_100007348(v94, v95);
  sub_100007348(v91, v92);
  sub_100007348(v138, v89);

  sub_100023FA0((uint64_t)v132, type metadata accessor for B389PresentationConfig);
  v99 = v128;
  v100 = Logger.logObject.getter(v99);
  v102 = static os_log_type_t.default.getter(v100, v101);
  if (os_log_type_enabled(v100, v102))
  {
    v103 = (uint8_t *)swift_slowAlloc(12, -1);
    v104 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v103 = 138412290;
    aBlock = &v99->isa;
    v105 = v99;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v144, v103 + 4, v103 + 12);
    *v104 = v99;

    _os_log_impl((void *)&_mh_execute_header, v100, v102, "Calling finalizePairing with config: %@", v103, 0xCu);
    v106 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v104, 1, v106);
    swift_slowDealloc(v104, -1, -1);
    swift_slowDealloc(v103, -1, -1);
  }
  else
  {

    v100 = v99;
  }
  v107 = v131;

  v108 = *(void **)(v107 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
  if (v108)
  {
    v109 = *(void **)(v107 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_spManager);
    v110 = v124;
    v144[3] = (unint64_t)sub_100055904;
    v145 = v124;
    aBlock = _NSConcreteStackBlock;
    v144[0] = 1107296256;
    v144[1] = (unint64_t)sub_1000AD3B4;
    v144[2] = (unint64_t)&unk_100178FD0;
    v111 = _Block_copy(&aBlock);
    v112 = v145;
    v113 = v108;
    swift_retain(v110);
    objc_msgSend(v109, "finalizePairingWithSession:configuration:completion:", v113, v99, v111, swift_release(v112).n128_f64[0]);
    sub_100007348(v138, v137);
    sub_100007348((uint64_t)v136, v135);
    sub_100007348(v134, (unint64_t)v133);

    swift_release(v110);
    _Block_release(v111);

    v12 = v126;
    if (*(_BYTE *)(v107 + v125) == 2)
      goto LABEL_3;
LABEL_46:
    v114 = sub_100055824();
    v115 = swift_allocError(&type metadata for SDRunState, v114, 0, 0);
    *v116 = 1;
    swift_willThrow(v115);
    return;
  }
LABEL_53:
  __break(1u);
}

unint64_t sub_10003EEDC()
{
  return 0xD000000000000021;
}

unint64_t sub_10003EEF8()
{
  return 0xD000000000000012;
}

uint64_t sub_10003EF14()
{
  return 0x6320746365707845;
}

uint64_t sub_10003EF38()
{
  return 0x7320746365707845;
}

uint64_t sub_10003EF5C(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  _BOOL4 v25;
  uint64_t v26;
  NSObject **v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v36;
  NSObject *v37;
  NSObject *v38;
  uint64_t v39;
  NSObject *v40;
  NSObject *v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  _QWORD *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  os_log_type_t v58;
  uint8_t *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  void (*v65)(_BYTE *, uint64_t);
  uint8_t *v66;
  uint64_t v67;
  _BYTE v68[4];
  int v69;
  _QWORD *v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  uint64_t v78;
  _QWORD v79[3];
  char v80[8];
  id v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v73 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v73);
  v7 = &v68[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v78 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v78 - 8);
  v9 = __chkstk_darwin(v78);
  v11 = &v68[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v9);
  v15 = &v68[-v14];
  if (a1)
    v16 = static os_log_type_t.error.getter(v12);
  else
    v16 = static os_log_type_t.default.getter(v12, v13);
  v18 = v16;
  v72 = v7;
  v74 = v11;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v19 = type metadata accessor for Logger(0, v17);
  v20 = sub_10000E8E8(v19, (uint64_t)qword_1001A4A60);
  v21 = a2;
  swift_errorRetain(a1);
  v22 = v21;
  v23 = swift_errorRetain(a1);
  v76 = v20;
  v24 = Logger.logObject.getter(v23);
  v25 = os_log_type_enabled(v24, (os_log_type_t)v18);
  v77 = a2;
  if (v25)
  {
    v69 = v18;
    v75 = v8;
    v70 = v15;
    v71 = a3;
    v26 = swift_slowAlloc(22, -1);
    v27 = (NSObject **)swift_slowAlloc(8, -1);
    v28 = swift_slowAlloc(32, -1);
    v83 = v28;
    *(_DWORD *)v26 = 138412546;
    if (a2)
    {
      v81 = v22;
      v29 = v22;
    }
    else
    {
      v81 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v26 + 4, v26 + 12);
    *v27 = v77;

    *(_WORD *)(v26 + 12) = 2080;
    if (a1)
    {
      swift_getErrorValue(a1, v80, v79);
      v30 = Error.localizedDescription.getter(v79[1], v79[2]);
      v32 = v31;
    }
    else
    {
      v81 = 0;
      v82 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v82);
      v32 = 0x8000000100136820;
      v30 = 0xD000000000000015;
    }
    v8 = v75;
    v81 = (id)sub_10001EFA4(v30, v32, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v26 + 14, v26 + 22);
    swift_bridgeObjectRelease(v32);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v69, "finalizePairing: session: %@, error: %s", (uint8_t *)v26, 0x16u);
    v33 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v27, 1, v33);
    swift_slowDealloc(v27, -1, -1);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v26, -1, -1);

    v15 = v70;
    a3 = v71;
  }
  else
  {

    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
  v34 = *(_QWORD *)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_timeout);
  if (v34)
  {
    swift_getObjectType(*(_QWORD *)(v34 + OBJC_IVAR____TtC18SharingViewService13PushableTimer_timer));
    swift_retain(v34);
    OS_dispatch_source.cancel()();
    swift_release(v34);
  }
  if (a1)
  {
    swift_errorRetain(a1);
    sub_10003F708(a1);
    return swift_errorRelease(a1);
  }
  else
  {
    v36 = *(void **)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
    v37 = v77;
    *(_QWORD *)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session) = v77;
    v38 = v22;

    v83 = (uint64_t)v37;
    v39 = sub_100006A6C(&qword_1001A4A38);
    Optional.unwrap(_:file:line:)(&v81, sub_10003F9EC, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 964, v39);
    v40 = v81;
    v41 = Logger.logObject.getter(v40);
    v43 = static os_log_type_t.default.getter(v41, v42);
    if (os_log_type_enabled(v41, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(12, -1);
      v45 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v44 = 138412290;
      v46 = -[NSObject pairingLocation](v40, "pairingLocation");
      v47 = v46;
      if (v46)
        v81 = v46;
      else
        v81 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v44 + 4, v44 + 12);
      *v45 = v47;

      _os_log_impl((void *)&_mh_execute_header, v41, v43, "session pairingLocation: %@", v44, 0xCu);
      v48 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v45, 1, v48);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v44, -1, -1);
    }
    else
    {

      v41 = v40;
    }
    v49 = v78;

    v50 = -[NSObject beaconId](v40, "beaconId");
    v51 = (uint64_t)v72;
    v77 = v40;
    if (v50)
    {
      v52 = v50;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v53 = 0;
    }
    else
    {
      v53 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v51, v53, 1, v49);
    Optional.unwrap(_:file:line:)(v15, sub_10003FA08, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 966, v73);
    sub_10000D858(v51, &qword_1001A42A0);
    v54 = v74;
    v55 = (*(uint64_t (**)(_BYTE *, _QWORD *, uint64_t))(v8 + 16))(v74, v15, v49);
    v56 = Logger.logObject.getter(v55);
    v58 = static os_log_type_t.default.getter(v56, v57);
    if (os_log_type_enabled(v56, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc(12, -1);
      v60 = (void *)swift_slowAlloc(32, -1);
      v81 = v60;
      *(_DWORD *)v59 = 136315138;
      v75 = v8;
      v61 = sub_100005B80(&qword_1001A5450, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v62 = dispatch thunk of CustomStringConvertible.description.getter(v78, v61);
      v64 = v63;
      v83 = sub_10001EFA4(v62, v63, (uint64_t *)&v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v59 + 4, v59 + 12);
      swift_bridgeObjectRelease(v64);
      v65 = *(void (**)(_BYTE *, uint64_t))(v75 + 8);
      v65(v54, v78);
      _os_log_impl((void *)&_mh_execute_header, v56, v58, "beaconID: %s", v59, 0xCu);
      swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v60, -1, -1);
      v66 = v59;
      v49 = v78;
      swift_slowDealloc(v66, -1, -1);
    }
    else
    {
      v65 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
      v65(v54, v49);
    }

    *(_BYTE *)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_findMyFinalizeState) = 2;
    sub_100031994(v67);

    return ((uint64_t (*)(_QWORD *, uint64_t))v65)(v15, v49);
  }
}

void sub_10003F708(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v22[3];
  _BYTE v23[8];
  void *v24;
  uint64_t v25;

  v25 = a1;
  swift_errorRetain(a1);
  v2 = sub_100006A6C(&qword_1001A7C30);
  type metadata accessor for SPPairingSessionError(0);
  if (swift_dynamicCast(&v24, &v25, v2, v3, 6))
  {
    v5 = v24;
    sub_100043BF0((uint64_t)v24);

  }
  else
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v6 = type metadata accessor for Logger(0, v4);
    sub_10000E8E8(v6, (uint64_t)qword_1001A4A60);
    swift_errorRetain(a1);
    v7 = swift_errorRetain(a1);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v25 = v11;
      *(_DWORD *)v10 = 136315138;
      swift_getErrorValue(a1, v23, v22);
      v12 = Error.localizedDescription.getter(v22[1], v22[2]);
      v14 = v13;
      v24 = (void *)sub_10001EFA4(v12, v13, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v10 + 4, v10 + 12);
      swift_bridgeObjectRelease(v14);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "handleError: error: %s failed decode as NSError", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v16 = String._bridgeToObjectiveC()();
    v17 = String._bridgeToObjectiveC()();
    v18 = sub_100117218(v15, v16, v17);

    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    sub_100043404(v19, v21, a1, 0, 0, 0);
    swift_bridgeObjectRelease(v21);
  }
}

unint64_t sub_10003F9EC()
{
  return 0xD00000000000002ELL;
}

unint64_t sub_10003FA08()
{
  return 0xD00000000000001ELL;
}

void sub_10003FA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  NSObject *v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  BOOL v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  NSObject *v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  NSObject *v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  double *v52;
  NSObject *v53;
  double *v54;
  void *v55;
  double *v56;
  void *v57;
  unint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _QWORD *v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  void **aBlock;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t (*v70)();
  double *v71;
  uint64_t v72[2];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, &aBlock, 33, 0);
  sub_1000C967C(v72, 0xD000000000000015, 0x80000001001384F0);
  v3 = v72[1];
  swift_endAccess(&aBlock);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(1018, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000015, 0x80000001001384F0, 0, 0xE000000000000000);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
  if (v6)
  {
    v65 = v4;
    v7 = v6;
    v8 = SFIsFMFAllowed();
    v9 = objc_msgSend(v7, "pairingLocation");

    v11 = (_QWORD *)&unk_1001AD000;
    if (!v9 || (v8 & 1) == 0)
    {
      if (qword_1001A2F40 != -1)
        swift_once(&qword_1001A2F40, sub_100030AB0);
      v12 = type metadata accessor for Logger(0, v10);
      sub_10000E8E8(v12, (uint64_t)qword_1001A4A60);
      v13 = v7;
      v14 = Logger.logObject.getter(v13);
      v16 = static os_log_type_t.default.getter(v14, v15);
      if (os_log_type_enabled(v14, v16))
      {
        v63 = v7;
        v17 = swift_slowAlloc(14, -1);
        *(_DWORD *)v17 = 67109376;
        LODWORD(aBlock) = v8;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v17 + 4, v17 + 8);
        *(_WORD *)(v17 + 8) = 1024;
        v18 = v2;
        v19 = -[NSObject pairingLocation](v13, "pairingLocation");

        v20 = v19 == 0;
        v2 = v18;
        v21 = v20;
        LODWORD(aBlock) = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v17 + 10, v17 + 14);

        _os_log_impl((void *)&_mh_execute_header, v14, v16, "Not rendering map (isFMFAllowed: %{BOOL}d, pairingLocationIsNil: %{BOOL}d)", (uint8_t *)v17, 0xEu);
        v22 = v17;
        v7 = v63;
        swift_slowDealloc(v22, -1, -1);
      }
      else
      {

        v14 = v13;
      }

      v28 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapViewController);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapViewController) = 0;

      v11 = &unk_1001AD000;
      *(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapConfigurationState) = 2;
    }
    v29 = v11[215];
    if (*(_BYTE *)(v1 + v29))
    {
      if (*(_BYTE *)(v1 + v29) == 2)
      {
LABEL_20:
        swift_beginAccess(v2, &aBlock, 33, 0);
        sub_1000D0A84(0xD000000000000015, 0x80000001001384F0);
        v31 = v30;
        swift_endAccess(&aBlock);
        swift_bridgeObjectRelease(v31);
        sub_100021A0C(1073, 0xD00000000000006ELL, 0x8000000100138430, v65, 0xD000000000000015, 0x80000001001384F0, 0, 0xE000000000000000);
LABEL_29:

        return;
      }
LABEL_28:
      v58 = sub_100055824();
      v59 = swift_allocError(&type metadata for SDRunState, v58, 0, 0);
      *v60 = 1;
      swift_willThrow(v59);
      goto LABEL_29;
    }
    v32 = objc_msgSend(v7, "pairingLocation");
    if (v32)
    {
      v34 = v32;
      v64 = v7;
      if (qword_1001A2F40 != -1)
        swift_once(&qword_1001A2F40, sub_100030AB0);
      v35 = type metadata accessor for Logger(0, v33);
      sub_10000E8E8(v35, (uint64_t)qword_1001A4A60);
      v36 = v34;
      v37 = Logger.logObject.getter(v36);
      v39 = static os_log_type_t.default.getter(v37, v38);
      v62 = v29;
      if (os_log_type_enabled(v37, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(12, -1);
        v61 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v40 = 138412290;
        aBlock = (void **)&v36->isa;
        v41 = v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v67, v40 + 4, v40 + 12);
        *v61 = v34;

        v29 = v62;
        _os_log_impl((void *)&_mh_execute_header, v37, v39, "session pairingLocation: %@", v40, 0xCu);
        v42 = sub_100006A6C(&qword_1001A5420);
        swift_arrayDestroy(v61, 1, v42);
        swift_slowDealloc(v61, -1, -1);
        swift_slowDealloc(v40, -1, -1);
      }
      else
      {

        v37 = v36;
      }

      *(_BYTE *)(v1 + v29) = 1;
      -[NSObject coordinate](v36, "coordinate");
      v44 = v43;
      v46 = v45;
      v47 = swift_allocObject(&unk_100178EF0, 24, 7);
      swift_unknownObjectWeakInit(v47 + 16, v1);
      v48 = swift_allocObject(&unk_100178F18, 32, 7);
      *(_QWORD *)(v48 + 16) = v47;
      *(_QWORD *)(v48 + 24) = v36;
      v49 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_locationShifter);
      v50 = swift_allocObject(&unk_100178F40, 32, 7);
      *(_QWORD *)(v50 + 16) = sub_100055898;
      *(_QWORD *)(v50 + 24) = v48;
      v70 = sub_1000240E4;
      v71 = (double *)v50;
      aBlock = _NSConcreteStackBlock;
      v67 = 1107296256;
      v68 = sub_1000AD5CC;
      v69 = &unk_100178F58;
      v51 = _Block_copy(&aBlock);
      v52 = v71;
      v53 = v36;
      swift_retain(v48);
      swift_release(v52);
      v54 = (double *)swift_allocObject(&unk_100178F90, 48, 7);
      *((_QWORD *)v54 + 2) = sub_100055898;
      *((_QWORD *)v54 + 3) = v48;
      v54[4] = v44;
      v54[5] = v46;
      v70 = sub_1000558DC;
      v71 = v54;
      aBlock = _NSConcreteStackBlock;
      v67 = 1107296256;
      v68 = sub_1000AC624;
      v69 = &unk_100178FA8;
      v55 = _Block_copy(&aBlock);
      v56 = v71;
      swift_retain(v48);
      swift_release(v56);
      sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
      v57 = (void *)static OS_dispatch_queue.main.getter();
      objc_msgSend(v49, "shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:", v51, 0, v55, v57, v44, v46, 0.0);

      _Block_release(v55);
      _Block_release(v51);

      swift_release(v48);
      v7 = v64;
      if (*(_BYTE *)(v1 + v62) == 2)
        goto LABEL_20;
      goto LABEL_28;
    }
    __break(1u);
  }
  else
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v23 = type metadata accessor for Logger(0, v5);
    v24 = sub_10000E8E8(v23, (uint64_t)qword_1001A4A60);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Should always have session in ensureMapViewConfigured", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }

  }
}

void sub_1000401DC(uint64_t a1, void *a2, CLLocationDegrees a3, CLLocationDegrees a4)
{
  uint64_t v7;
  uint64_t Strong;
  _BYTE *v9;
  CLLocationDegrees latitude;
  CLLocationDegrees longitude;
  CLLocationDegrees latitudeDelta;
  CLLocationDegrees longitudeDelta;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  char *v20;
  CLLocationDegrees *v21;
  id v22;
  id v23;
  objc_class *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  id v28;
  id v29;
  char *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  objc_super v35;
  objc_super v36;
  char v37[24];
  CLLocationCoordinate2D v38;
  MKCoordinateRegion v39;

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (_BYTE *)Strong;
    v38.latitude = a3;
    v38.longitude = a4;
    v39 = MKCoordinateRegionMakeWithDistance(v38, 600.0, 400.0);
    latitude = v39.center.latitude;
    longitude = v39.center.longitude;
    latitudeDelta = v39.span.latitudeDelta;
    longitudeDelta = v39.span.longitudeDelta;
    v14 = sub_100030EC4();
    if (v15)
    {
      v16 = v14;
      v17 = v15;
      v18 = (objc_class *)type metadata accessor for B389MapAnnotation();
      v19 = (char *)objc_allocWithZone(v18);
      v20 = &v19[OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_roleEmoji];
      *(_QWORD *)v20 = v16;
      *((_QWORD *)v20 + 1) = v17;
      v21 = (CLLocationDegrees *)&v19[OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_region];
      *v21 = latitude;
      v21[1] = longitude;
      v21[2] = latitudeDelta;
      v21[3] = longitudeDelta;
      *(_QWORD *)&v19[OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_pairingLocation] = a2;
      v36.receiver = v19;
      v36.super_class = v18;
      v22 = a2;
      v23 = objc_msgSendSuper2(&v36, "init");
      v24 = (objc_class *)type metadata accessor for B389MapViewController();
      v25 = (char *)objc_allocWithZone(v24);
      v26 = &v25[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_tapHandler];
      *(_QWORD *)v26 = 0;
      *((_QWORD *)v26 + 1) = 0;
      v27 = OBJC_IVAR____TtC18SharingViewService21B389MapViewController_mapView;
      v28 = objc_allocWithZone((Class)MKMapView);
      v29 = v23;
      v30 = v25;
      *(_QWORD *)&v25[v27] = objc_msgSend(v28, "init");
      *(_QWORD *)&v30[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_mapAnnotation] = v29;
      v31 = v29;

      v35.receiver = v30;
      v35.super_class = v24;
      v32 = objc_msgSendSuper2(&v35, "initWithNibName:bundle:", 0, 0);

      v33 = *(void **)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapViewController];
      *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapViewController] = v32;

      v9[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapConfigurationState] = 2;
      sub_100031994(v34);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000403D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27[4];

  v2 = v0;
  v3 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, v26, 33, 0);
  sub_1000C967C(v27, 0xD00000000000001DLL, 0x8000000100138C70);
  v4 = v27[1];
  swift_endAccess(v26);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(1078, 0xD00000000000006ELL, 0x8000000100138430, v5, 0xD00000000000001DLL, 0x8000000100138C70, 0, 0xE000000000000000);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredMainService);
  if (!v6)
  {
    v8 = sub_100055824();
    v9 = swift_allocError(&type metadata for SDRunState, v8, 0, 0);
    *v10 = 1;
    swift_willThrow(v9);
    return;
  }
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startedCharacteristicDiscovery) & 1) != 0)
  {
    v7 = v6;
LABEL_11:
    swift_beginAccess(v3, v26, 33, 0);
    sub_1000D0A84(0xD00000000000001DLL, 0x8000000100138C70);
    v25 = v24;
    swift_endAccess(v26);
    swift_bridgeObjectRelease(v25);
    sub_100021A0C(1086, 0xD00000000000006ELL, 0x8000000100138430, v5, 0xD00000000000001DLL, 0x8000000100138C70, 0, 0xE000000000000000);

    return;
  }
  v27[3] = v1;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_startedCharacteristicDiscovery) = 1;
  v11 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph);
  if (v11)
  {
    v12 = v6;
    v13 = v11;
    sub_1000080D4();
    v15 = v14;
    sub_100013194(0, (unint64_t *)&unk_1001A54A0, CBUUID_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v15);
    objc_msgSend(v13, "discoverCharacteristics:forService:", isa, v12);

    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v18 = type metadata accessor for Logger(0, v17);
    v19 = sub_10000E8E8(v18, (uint64_t)qword_1001A4A60);
    v20 = Logger.logObject.getter(v19);
    v22 = static os_log_type_t.default.getter(v20, v21);
    if (os_log_type_enabled(v20, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v22, "ensureMainServiceDiscovered", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }

    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1000406D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];
  uint64_t v13[2];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, v12, 33, 0);
  sub_1000C967C(v13, 0xD000000000000024, 0x8000000100138C40);
  v3 = v13[1];
  swift_endAccess(v12);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(1091, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000024, 0x8000000100138C40, 0, 0xE000000000000000);
  v5 = v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_remainingCharacteristicsToDiscover;
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_remainingCharacteristicsToDiscover, v12, 33, 0);
  sub_1000D0C10(5u);
  swift_endAccess(v12);
  if (*(_QWORD *)(*(_QWORD *)v5 + 16))
  {
    v6 = sub_100055824();
    v7 = swift_allocError(&type metadata for SDRunState, v6, 0, 0);
    *v8 = 1;
    return swift_willThrow(v7);
  }
  else
  {
    swift_beginAccess(v2, v12, 33, 0);
    sub_1000D0A84(0xD000000000000024, 0x8000000100138C40);
    v11 = v10;
    swift_endAccess(v12);
    swift_bridgeObjectRelease(v11);
    return sub_100021A0C(1097, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000024, 0x8000000100138C40, 0, 0xE000000000000000);
  }
}

void sub_100040894()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9[3];
  id v10[3];

  v1 = v0;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, v10, 33, 0);
  sub_1000C967C((uint64_t *)v9, 0xD000000000000014, 0x8000000100138BD0);
  v2 = v9[1];
  swift_endAccess(v10);
  swift_bridgeObjectRelease(v2);
  sub_1000219E4(1102, 0xD00000000000006ELL, 0x8000000100138430, *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om), 0xD000000000000014, 0x8000000100138BD0, 0, 0xE000000000000000);
  v9[0] = *(id *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
  v3 = v9[0];
  v4 = sub_100006A6C(&qword_1001A4A38);
  Optional.unwrap(_:file:line:)(v10, sub_10002F048, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1104, v4);

  v5 = v10[0];
  v6 = objc_msgSend(v10[0], "nonce");

  static Data._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  __asm { BR              X10 }
}

uint64_t sub_100040A14()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char v27;
  char v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  char v35;
  id v36;
  id v37;
  id v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  id v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  unint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63[2];
  void *v64;
  _QWORD v65[18];

  if (BYTE6(v0) != 32)
  {
LABEL_44:
    __break(1u);
    JUMPOUT(0x100040F9CLL);
  }
  v6 = (_QWORD *)(v4 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars);
  swift_beginAccess(v4 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars, v5 - 104, 0, 0);
  v7 = *v6;
  if (*(_QWORD *)(*v6 + 16))
  {
    swift_bridgeObjectRetain(v7);
    v8 = sub_100005E38(4);
    if ((v9 & 1) != 0)
    {
      v10 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v8);
      v11 = v10;
    }
    else
    {
      v10 = 0;
    }
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v10 = 0;
  }
  v63[0] = (uint64_t)v10;
  v12 = sub_100006A6C((uint64_t *)&unk_1001A7C50);
  Optional.unwrap(_:file:line:)(v65, sub_100040FAC, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1107, v12);

  *(_QWORD *)(v5 - 72) = v65[0];
  v13 = *v6;
  if (*(_QWORD *)(*v6 + 16))
  {
    swift_bridgeObjectRetain(*v6);
    v14 = sub_100005E38(1);
    if ((v15 & 1) != 0)
    {
      v16 = *(void **)(*(_QWORD *)(v13 + 56) + 8 * v14);
      v17 = v16;
    }
    else
    {
      v16 = 0;
    }
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v16 = 0;
  }
  v63[0] = (uint64_t)v16;
  Optional.unwrap(_:file:line:)(v65, sub_100040FC8, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1108, v12);

  v61 = (void *)v65[0];
  v18 = *v6;
  v57 = v3;
  v58 = v2;
  if (*(_QWORD *)(*v6 + 16))
  {
    swift_bridgeObjectRetain(v18);
    v19 = sub_100005E38(0);
    if ((v20 & 1) != 0)
    {
      v21 = *(void **)(*(_QWORD *)(v18 + 56) + 8 * v19);
      v22 = v21;
    }
    else
    {
      v21 = 0;
    }
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v21 = 0;
  }
  v63[0] = (uint64_t)v21;
  Optional.unwrap(_:file:line:)(v65, sub_100040FE4, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1109, v12);

  v23 = (void *)v65[0];
  v24 = v4 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager;
  swift_beginAccess(v4 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager, v65, 0, 0);
  v25 = *(_QWORD *)(v24 + 8);
  if (!*(_QWORD *)(v25 + 16)
    || (swift_bridgeObjectRetain(*(_QWORD *)(v24 + 8)),
        v26 = v23,
        sub_100005E08((uint64_t)v26),
        v28 = v27,
        swift_bridgeObjectRelease(v25),
        v26,
        (v28 & 1) == 0))
  {
    v29 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph;
    v30 = *(void **)(v4 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph);
    if (v30)
    {
      objc_msgSend(v30, "setNotifyValue:forCharacteristic:", 1, *(_QWORD *)(v5 - 72), v57);
      v31 = *(void **)(v4 + v29);
      if (v31)
      {
        objc_msgSend(v31, "setNotifyValue:forCharacteristic:", 1, v61);
        v32 = *(void **)(v4 + v29);
        if (v32)
        {
          swift_beginAccess(v24, v63, 33, 0);
          if (*(_QWORD *)(*(_QWORD *)(v24 + 8) + 16))
          {
            v33 = v23;
            v34 = v32;
            sub_100005E08((uint64_t)v33);
            if ((v35 & 1) != 0)
            {
LABEL_30:

              swift_endAccess(v63);
              goto LABEL_31;
            }

          }
          else
          {
            v36 = v32;
          }
          v37 = v23;
          v38 = v32;
          sub_100006B94(v1, v0);
          sub_100006B94(v1, v0);
          v34 = v38;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v24 + 8));
          v62 = *(_QWORD *)(v24 + 8);
          *(_QWORD *)(v24 + 8) = 0x8000000000000000;
          sub_1000CF3F8(v1, v0, (uint64_t)v32, v37, isUniquelyReferenced_nonNull_native);
          v40 = *(_QWORD *)(v24 + 8);
          *(_QWORD *)(v24 + 8) = v62;

          swift_bridgeObjectRelease(v40);
          sub_10001A55C(v37);
          sub_100007348(v1, v0);
          v33 = v34;
          goto LABEL_30;
        }
        goto LABEL_43;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
LABEL_31:
  v41 = *(_QWORD *)(v24 + 8);
  if (*(_QWORD *)(v41 + 16))
  {
    v42 = v23;
    swift_bridgeObjectRetain(v41);
    v43 = sub_100005E08((uint64_t)v42);
    if ((v44 & 1) != 0)
    {
      v45 = *(_QWORD *)(v41 + 56) + 24 * v43;
      v46 = *(id *)v45;
      v47 = *(_QWORD *)(v45 + 8);
      v48 = *(_QWORD *)(v45 + 16);
      sub_100006B68(*(id *)v45, v47, (void *)v48);

      goto LABEL_37;
    }

  }
  else
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v24 + 8));
  }
  v46 = 0;
  v47 = 0;
  v48 = 1;
LABEL_37:
  v49 = sub_100006A6C((uint64_t *)&unk_1001A7C60);
  Optional.unwrap(_:file:line:)(v63, sub_10001A7B4, 0, "SharingViewService/SDCommonSwifty.swift", 39, 2, 298, v49);
  sub_100055998((uint64_t)v46, v47, (void *)v48);
  v50 = v64;
  sub_100024034(v63[0], v63[1], v64);
  swift_bridgeObjectRelease(v41);
  if (v50)
  {
    v51 = sub_100055824();
    v52 = swift_allocError(&type metadata for SDRunState, v51, 0, 0);
    *v53 = 1;
    swift_willThrow(v52);
  }
  else
  {
    swift_beginAccess(v58, v63, 33, 0);
    sub_1000D0A84(0xD000000000000014, v60 | 0x8000000000000000);
    v56 = v55;
    swift_endAccess(v63);
    swift_bridgeObjectRelease(v56);
    sub_100021A0C(1120, 0xD00000000000006ELL, v59 | 0x8000000000000000, v57, 0xD000000000000014, v60 | 0x8000000000000000, 0, 0xE000000000000000);
  }

  return sub_100007348(v1, v0);
}

unint64_t sub_100040FAC()
{
  return 0xD000000000000026;
}

unint64_t sub_100040FC8()
{
  return 0xD000000000000019;
}

unint64_t sub_100040FE4()
{
  return 0xD000000000000019;
}

void *sub_100041000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  void *result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  void *v47;
  id v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  _QWORD v56[3];
  uint64_t v57[3];
  _BYTE v58[24];
  void *v59;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, v58, 33, 0);
  sub_1000C967C(v57, 0xD00000000000001FLL, 0x8000000100138B50);
  v3 = v57[1];
  swift_endAccess(v58);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(1125, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD00000000000001FLL, 0x8000000100138B50, 0, 0xE000000000000000);
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues);
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues, v58, 0, 0);
  v6 = *v5;
  if (!*(_QWORD *)(v6 + 16)
    || (swift_bridgeObjectRetain(v6), sub_100005E38(4), v8 = v7, swift_bridgeObjectRelease(v6), (v8 & 1) == 0))
  {
    v23 = sub_100055824();
    v24 = swift_allocError(&type metadata for SDRunState, v23, 0, 0);
    *v25 = 1;
    return (void *)swift_willThrow(v24);
  }
  v10 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentReadRequest;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentReadRequest) & 1) != 0)
    goto LABEL_45;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v11 = type metadata accessor for Logger(0, v9);
  v12 = sub_10000E8E8(v11, (uint64_t)qword_1001A4A60);
  v13 = Logger.logObject.getter(v12);
  v15 = static os_log_type_t.default.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v15, "reading all values", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  *(_BYTE *)(v1 + v10) = 1;
  v17 = (_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars);
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars, v57, 0, 0);
  v18 = *v17;
  if (*(_QWORD *)(*v17 + 16))
  {
    swift_bridgeObjectRetain(*v17);
    v19 = sub_100005E38(2);
    if ((v20 & 1) != 0)
    {
      v21 = *(void **)(*(_QWORD *)(v18 + 56) + 8 * v19);
      v22 = v21;
    }
    else
    {
      v21 = 0;
    }
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v21 = 0;
  }
  v59 = v21;
  v27 = sub_100006A6C((uint64_t *)&unk_1001A7C50);
  Optional.unwrap(_:file:line:)(v56, sub_100040FE4, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1131, v27);

  v28 = *v17;
  v55 = (void *)v56[0];
  if (*(_QWORD *)(*v17 + 16))
  {
    swift_bridgeObjectRetain(v28);
    v29 = sub_100005E38(3);
    if ((v30 & 1) != 0)
    {
      v31 = *(void **)(*(_QWORD *)(v28 + 56) + 8 * v29);
      v32 = v31;
    }
    else
    {
      v31 = 0;
    }
    swift_bridgeObjectRelease(v28);
  }
  else
  {
    v31 = 0;
  }
  v59 = v31;
  Optional.unwrap(_:file:line:)(v56, sub_10004160C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1132, v27);

  v54 = (void *)v56[0];
  v33 = *v17;
  if (*(_QWORD *)(*v17 + 16))
  {
    swift_bridgeObjectRetain(*v17);
    v34 = sub_100005E38(16);
    if ((v35 & 1) != 0)
    {
      v36 = *(void **)(*(_QWORD *)(v33 + 56) + 8 * v34);
      v37 = v36;
    }
    else
    {
      v36 = 0;
    }
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    v36 = 0;
  }
  v59 = v36;
  Optional.unwrap(_:file:line:)(v56, sub_100041628, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1133, v27);

  v53 = (void *)v56[0];
  v38 = *v17;
  if (*(_QWORD *)(*v17 + 16))
  {
    swift_bridgeObjectRetain(*v17);
    v39 = sub_100005E38(17);
    if ((v40 & 1) != 0)
    {
      v41 = *(void **)(*(_QWORD *)(v38 + 56) + 8 * v39);
      v42 = v41;
    }
    else
    {
      v41 = 0;
    }
    swift_bridgeObjectRelease(v38);
  }
  else
  {
    v41 = 0;
  }
  v59 = v41;
  Optional.unwrap(_:file:line:)(v56, sub_100041628, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1134, v27);

  v43 = (void *)v56[0];
  v44 = *v17;
  if (*(_QWORD *)(*v17 + 16))
  {
    swift_bridgeObjectRetain(*v17);
    v45 = sub_100005E38(18);
    if ((v46 & 1) != 0)
    {
      v47 = *(void **)(*(_QWORD *)(v44 + 56) + 8 * v45);
      v48 = v47;
    }
    else
    {
      v47 = 0;
    }
    swift_bridgeObjectRelease(v44);
  }
  else
  {
    v47 = 0;
  }
  v59 = v47;
  Optional.unwrap(_:file:line:)(v56, sub_100041628, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1135, v27);

  v49 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph;
  result = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph);
  if (!result)
  {
    __break(1u);
    goto LABEL_47;
  }
  v50 = (void *)v56[0];
  objc_msgSend(result, "readValueForCharacteristic:", v55);
  result = *(void **)(v1 + v49);
  if (!result)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  objc_msgSend(result, "readValueForCharacteristic:", v54);
  result = *(void **)(v1 + v49);
  if (!result)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  objc_msgSend(result, "readValueForCharacteristic:", v53);
  result = *(void **)(v1 + v49);
  if (!result)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  objc_msgSend(result, "readValueForCharacteristic:", v43);
  result = *(void **)(v1 + v49);
  if (result)
  {
    objc_msgSend(result, "readValueForCharacteristic:", v50);

LABEL_45:
    swift_beginAccess(v2, v56, 33, 0);
    sub_1000D0A84(0xD00000000000001FLL, 0x8000000100138B50);
    v52 = v51;
    swift_endAccess(v56);
    swift_bridgeObjectRelease(v52);
    return (void *)sub_100021A0C(1144, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD00000000000001FLL, 0x8000000100138B50, 0, 0xE000000000000000);
  }
LABEL_50:
  __break(1u);
  return result;
}

unint64_t sub_10004160C()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_100041628()
{
  return 0xD000000000000015;
}

uint64_t sub_100041644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  _BYTE v39[32];

  v1 = v0;
  v2 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat(0);
  __chkstk_darwin(v2);
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, v39, 33, 0);
  sub_1000C967C(v38, 0xD000000000000017, 0x8000000100138B00);
  v3 = v38[1];
  swift_endAccess(v39);
  swift_bridgeObjectRelease(v3);
  sub_1000219E4(1149, 0xD00000000000006ELL, 0x8000000100138430, *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om), 0xD000000000000017, 0x8000000100138B00, 0, 0xE000000000000000);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue + 8) >> 60 != 15)
  {
    v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues);
    swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues, v39, 0, 0);
    v5 = *v4;
    if (*(_QWORD *)(*v4 + 16))
    {
      swift_bridgeObjectRetain(*v4);
      sub_100005E38(2);
      v7 = v6;
      swift_bridgeObjectRelease(v5);
      if ((v7 & 1) != 0)
      {
        v8 = *v4;
        if (*(_QWORD *)(*v4 + 16))
        {
          swift_bridgeObjectRetain(*v4);
          v9 = sub_100005E38(16);
          if ((v10 & 1) != 0)
          {
            v11 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v9);
            v12 = v11[1];
            v37 = *v11;
            sub_100006B94(*v11, v12);
            swift_bridgeObjectRelease(v8);
            v13 = *v4;
            if (!*(_QWORD *)(*v4 + 16))
            {
              v26 = v37;
              v27 = v12;
LABEL_19:
              sub_100007348(v26, v27);
              goto LABEL_20;
            }
            v36 = v12;
            swift_bridgeObjectRetain(v13);
            v14 = sub_100005E38(17);
            if ((v15 & 1) != 0)
            {
              v16 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v14);
              v17 = v16[1];
              v35 = *v16;
              sub_100006B94(*v16, v17);
              swift_bridgeObjectRelease(v13);
              v18 = *v4;
              if (*(_QWORD *)(*v4 + 16))
              {
                v34 = v17;
                swift_bridgeObjectRetain(v18);
                v19 = sub_100005E38(18);
                if ((v20 & 1) != 0)
                {
                  v21 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 16 * v19);
                  v23 = *v21;
                  v22 = v21[1];
                  sub_100006B94(*v21, v22);
                  swift_bridgeObjectRelease(v18);
                  v24 = v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_storeS1;
                  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_storeS1, v38, 0, 0);
                  v25 = *(_QWORD *)(v24 + 8);
                  if (v25 >> 60 != 15)
                    __asm { BR              X10 }
                  sub_100007348(v23, v22);
                  sub_100007348(v35, v34);
                  goto LABEL_15;
                }
                swift_bridgeObjectRelease(v18);
                v29 = v17;
                v28 = v35;
              }
              else
              {
                v28 = v35;
                v29 = v17;
              }
              sub_100007348(v28, v29);
              v26 = v37;
              v27 = v36;
              goto LABEL_19;
            }
            swift_bridgeObjectRelease(v13);
LABEL_15:
            v27 = v36;
            v26 = v37;
            goto LABEL_19;
          }
          swift_bridgeObjectRelease(v8);
        }
      }
    }
  }
LABEL_20:
  v30 = sub_100055824();
  v31 = swift_allocError(&type metadata for SDRunState, v30, 0, 0);
  *v32 = 1;
  return swift_willThrow(v31);
}

void sub_1000419A4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v9 = (_QWORD *)(v6 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_targetS1Length);
  if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_targetS1Length + 8) & 1) != 0)
  {
    v10 = v1;
    sub_100007348(a1, *(_QWORD *)(v8 - 232));
    sub_100007348(*(_QWORD *)(v8 - 248), *(_QWORD *)(v8 - 240));
    v11 = v3;
    v12 = v10;
  }
  else
  {
    *(_QWORD *)(v8 - 256) = v1;
    if (BYTE6(v1) == *v9)
    {
      *(_QWORD *)(v8 - 264) = v3;
      v13 = (_QWORD *)(v6 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vbVersionStr);
      v15 = *(_QWORD *)(v8 - 240);
      v14 = *(_QWORD *)(v8 - 232);
      v16 = *(_QWORD *)(v8 - 248);
      if (!v13[1])
      {
        v17 = *(_QWORD *)(v8 - 216);
        v18 = b389VersionString(from:)(*(_QWORD *)(v8 - 208), v17);
        v20 = v19;
        *(_QWORD *)(v8 - 176) = v18;
        *(_QWORD *)(v8 - 168) = v19;
        v21 = sub_100006A6C(&qword_1001A5430);
        Optional.unwrap(_:file:line:)((_QWORD *)(v8 - 160), sub_100041EB4, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1163, v21);
        swift_bridgeObjectRelease(v20);
        v22 = *(_QWORD *)(v8 - 160);
        v23 = *(_QWORD *)(v8 - 152);
        v24 = v13[1];
        *(_QWORD *)(v8 - 272) = v22;
        *v13 = v22;
        v13[1] = v23;
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRelease(v24);
        if (qword_1001A2F40 != -1)
          swift_once(&qword_1001A2F40, sub_100030AB0);
        v26 = type metadata accessor for Logger(0, v25);
        sub_10000E8E8(v26, (uint64_t)qword_1001A4A60);
        v27 = *(_QWORD *)(v8 - 208);
        sub_100006B94(v27, v17);
        sub_100006B94(v27, v17);
        v28 = swift_bridgeObjectRetain(v23);
        v29 = Logger.logObject.getter(v28);
        v31 = static os_log_type_t.default.getter(v29, v30);
        *(_DWORD *)(v8 - 276) = v31;
        v32 = v23;
        v33 = v17;
        if (os_log_type_enabled(v29, v31))
        {
          v34 = swift_slowAlloc(22, -1);
          *(_QWORD *)(v8 - 296) = v32;
          v35 = v34;
          v36 = swift_slowAlloc(64, -1);
          *(_QWORD *)(v8 - 288) = v36;
          *(_QWORD *)(v8 - 72) = v36;
          *(_DWORD *)v35 = 136315394;
          *(_QWORD *)(v8 - 160) = 0;
          *(_QWORD *)(v8 - 152) = 0xE000000000000000;
          *(_QWORD *)(v8 - 176) = *(_QWORD *)(v8 - 208);
          *(_QWORD *)(v8 - 168) = v17;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v5, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v7);
          v37 = sub_100055934();
          *(_QWORD *)(v8 - 304) = v29;
          DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(v8 - 176, v5, 58, 0xE100000000000000, &type metadata for Data, v37);
          (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v7);
          v38 = *(_QWORD *)(v8 - 152);
          *(_QWORD *)(v8 - 160) = sub_10001EFA4(*(_QWORD *)(v8 - 160), v38, (uint64_t *)(v8 - 72));
          v39 = *(_QWORD *)(v8 - 224);
          v40 = *(_QWORD *)(v8 - 208);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v8 - 160, v8 - 152, v35 + 4, v35 + 12);
          swift_bridgeObjectRelease(v38);
          sub_100007348(v40, v33);
          sub_100007348(v40, v33);
          *(_WORD *)(v35 + 12) = 2080;
          v41 = *(_QWORD *)(v8 - 296);
          swift_bridgeObjectRetain(v41);
          *(_QWORD *)(v8 - 160) = sub_10001EFA4(*(_QWORD *)(v8 - 272), v41, (uint64_t *)(v8 - 72));
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v8 - 160, v8 - 152, v35 + 14, v35 + 22);
          swift_bridgeObjectRelease_n(v41, 3);
          v42 = *(NSObject **)(v8 - 304);
          v43 = *(_QWORD *)(v8 - 288);
          swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v43, -1, -1);
          swift_slowDealloc(v35, -1, -1);

          a1 = v39;
          v15 = *(_QWORD *)(v8 - 240);
          v14 = *(_QWORD *)(v8 - 232);
          v16 = *(_QWORD *)(v8 - 248);
        }
        else
        {
          v44 = *(_QWORD *)(v8 - 208);
          sub_100007348(v44, v33);
          sub_100007348(v44, v33);

          swift_bridgeObjectRelease_n(v32, 2);
          v15 = *(_QWORD *)(v8 - 240);
          v14 = *(_QWORD *)(v8 - 232);
          v16 = *(_QWORD *)(v8 - 248);
          a1 = *(_QWORD *)(v8 - 224);
        }
      }
      v45 = a1;
      v46 = v14;
      sub_100006B94(a1, v14);
      sub_100006B94(v16, v15);
      v47 = v15;
      *(_QWORD *)(v8 - 240) = 0xD00000000000006ELL;
      v48 = *(_QWORD *)(v8 - 200) | 0x8000000000000000;
      v49 = *(_QWORD *)(v8 - 184);
      sub_100021F6C(1168, 0xD00000000000006ELL, v48, v49, v45, v46, v16, v15);
      sub_100007348(v16, v15);
      sub_100007348(v45, v46);
      swift_beginAccess(v2, v8 - 160, 33, 0);
      v50 = *(_QWORD *)(v8 - 192) | 0x8000000000000000;
      sub_1000D0A84(0xD000000000000017, v50);
      v52 = v51;
      swift_endAccess(v8 - 160);
      swift_bridgeObjectRelease(v52);
      sub_100021A0C(1170, *(_QWORD *)(v8 - 240), v48, v49, 0xD000000000000017, v50, 0, 0xE000000000000000);
      sub_100023F48(*(_QWORD *)(v8 - 264), *(_QWORD *)(v8 - 256));
      sub_100007348(v16, v47);
      sub_100007348(v45, *(_QWORD *)(v8 - 232));
      sub_100007348(*(_QWORD *)(v8 - 208), *(_QWORD *)(v8 - 216));
      JUMPOUT(0x100041958);
    }
    sub_100007348(a1, *(_QWORD *)(v8 - 232));
    sub_100007348(*(_QWORD *)(v8 - 248), *(_QWORD *)(v8 - 240));
    v11 = v3;
    v12 = *(_QWORD *)(v8 - 256);
  }
  sub_100023F48(v11, v12);
  JUMPOUT(0x1000418F8);
}

unint64_t sub_100041EB4()
{
  return 0xD000000000000029;
}

void sub_100041ED0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *);
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v13 = type metadata accessor for Logger(0, v10);
  sub_10000E8E8(v13, (uint64_t)qword_1001A4A60);
  sub_100006B94(a1, a2);
  sub_100006B94(a3, a4);
  sub_100006B94(a1, a2);
  v14 = sub_100006B94(a3, a4);
  v30 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v30, v15);
  v17 = v16;
  if (os_log_type_enabled(v30, v16))
  {
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v29 = v19;
    *(_DWORD *)v18 = 136315394;
    v25 = v18 + 4;
    v32 = a2;
    v33 = 0;
    v34 = 0xE000000000000000;
    v35 = v19;
    v31 = a1;
    v27 = enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:);
    v20 = *(void (**)(char *))(v9 + 104);
    v20(v12);
    v26 = sub_100055934();
    v28 = v17;
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v31, v12, 58, 0xE100000000000000, &type metadata for Data, v26);
    v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v12, v8);
    v22 = v34;
    v33 = sub_10001EFA4(v33, v34, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v25, v18 + 12);
    swift_bridgeObjectRelease(v22);
    sub_100007348(a1, a2);
    sub_100007348(a1, a2);
    *(_WORD *)(v18 + 12) = 2080;
    v33 = 0;
    v34 = 0xE000000000000000;
    v31 = a3;
    v32 = a4;
    ((void (*)(char *, _QWORD, uint64_t))v20)(v12, v27, v8);
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v31, v12, 58, 0xE100000000000000, &type metadata for Data, v26);
    v21(v12, v8);
    v23 = v34;
    v33 = sub_10001EFA4(v33, v34, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v18 + 14, v18 + 22);
    swift_bridgeObjectRelease(v23);
    sub_100007348(a3, a4);
    sub_100007348(a3, a4);
    _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v28, "rpkv: %s, spkv: %s", (uint8_t *)v18, 0x16u);
    v24 = v29;
    swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    sub_100007348(a1, a2);
    sub_100007348(a1, a2);
    sub_100007348(a3, a4);
    sub_100007348(a3, a4);
  }

}

uint64_t *sub_100042238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t **v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  NSData v48;
  NSData v49;
  uint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t *result;
  uint64_t v61;
  Class v62;
  Class v63;
  NSString v64;
  Class v65;
  uint64_t v66;
  void *v67;
  double v68;
  Class v69;
  Class v70;
  void *v71;
  Class v72;
  Class v73;
  void *v74;
  Class v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  Class v82;
  Class v83;
  NSString v84;
  Class v85;
  _OWORD *v86;
  Class v87;
  id v88;
  NSString v89;
  Class v90;
  uint64_t v91;
  uint64_t v92;
  Class v93;
  Class isa;
  Class v95;
  id v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  id v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  _QWORD v107[3];
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  _OWORD v123[2];
  __int128 v124;
  __int128 v125;
  __int128 v126;
  _OWORD v127[2];
  uint64_t v128;

  v1 = v0;
  v2 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v2);
  v101 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v4, &v118, 33, 0);
  v98 = (unint64_t)"Expect userMessage encodes";
  v100 = v4;
  sub_1000C967C(&v108, 0xD000000000000017, 0x80000001001389F0);
  v5 = v109;
  swift_endAccess(&v118);
  swift_bridgeObjectRelease(v5);
  v128 = v1;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  v97 = (unint64_t)"neViewController";
  v99 = v6;
  sub_1000219E4(1175, 0xD00000000000006ELL, 0x8000000100138430, v6, 0xD000000000000017, 0x80000001001389F0, 0, 0xE000000000000000);
  v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue);
  v9 = v7[1];
  v10 = v7[2];
  v11 = v7[3];
  v13 = v7[4];
  v12 = (void *)v7[5];
  v14 = v7[6];
  v15 = v7[7];
  v16 = v7[8];
  v17 = v7[9];
  v108 = v8;
  v109 = v9;
  v110 = v10;
  v111 = v11;
  v112 = v13;
  v113 = v12;
  v102 = v12;
  v103 = v15;
  v104 = v14;
  v114 = v14;
  v115 = v15;
  v116 = v16;
  v117 = v17;
  sub_1000559A8(v8, v9, v10, v11, v13, (uint64_t)v12, v14, v15, v16, v17, (void (*)(void))sub_100006B94);
  v18 = sub_100006A6C(&qword_1001A5498);
  Optional.unwrap(_:file:line:)(&v118, sub_100042A60, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1177, v18);
  v19 = v11;
  v20 = v128;
  sub_1000559A8(v8, v9, v10, v19, v13, (uint64_t)v102, v104, v103, v16, v17, (void (*)(void))sub_100007348);
  v124 = v120;
  v125 = v121;
  v126 = v122;
  v123[0] = v118;
  v123[1] = v119;
  v21 = (uint64_t **)(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues);
  swift_beginAccess(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues, &v108, 0, 0);
  v22 = *v21;
  if ((*v21)[2])
  {
    swift_bridgeObjectRetain(*v21);
    v23 = sub_100005E38(2);
    if ((v24 & 1) != 0)
    {
      v25 = (uint64_t *)(v22[7] + 16 * v23);
      v27 = *v25;
      v26 = v25[1];
      sub_100006B94(*v25, v26);
    }
    else
    {
      v27 = 0;
      v26 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    v27 = 0;
    v26 = 0xF000000000000000;
  }
  v107[0] = v27;
  v107[1] = v26;
  v28 = sub_100006A6C(&qword_1001A5438);
  Optional.unwrap(_:file:line:)(&v118, sub_100042A7C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1178, v28);
  sub_100023F48(v27, v26);
  v104 = *((_QWORD *)&v118 + 1);
  v29 = v118;
  v30 = (uint64_t *)(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_storeS1);
  swift_beginAccess(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_storeS1, v107, 0, 0);
  v32 = v30[1];
  v105 = *v30;
  v31 = v105;
  v106 = v32;
  sub_100024020(v105, v32);
  Optional.unwrap(_:file:line:)(&v118, sub_100042A98, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1179, v28);
  sub_100023F48(v31, v32);
  v33 = *((_QWORD *)&v118 + 1);
  v34 = v118;
  if ((*(_BYTE *)(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_handledS1S2PayloadRead) & 1) != 0)
    goto LABEL_15;
  v103 = *((_QWORD *)&v118 + 1);
  *(_BYTE *)(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_handledS1S2PayloadRead) = 1;
  v127[0] = v124;
  v118 = v124;
  v35 = sub_100055A54((uint64_t)v127);
  v36 = v101;
  static String.Encoding.utf8.getter(v35);
  v37 = sub_100055934();
  v38 = String.init<A>(bytes:encoding:)(&v118, v36, &type metadata for Data, v37);
  v40 = v39;
  v41 = sub_100055A80((uint64_t)v127);
  v105 = v38;
  v106 = v40;
  __chkstk_darwin(v41);
  v86 = v123;
  v42 = sub_100006A6C(&qword_1001A5430);
  v43 = &v105;
  Optional.unwrap(_:file:line:)(&v118, sub_100055AAC, &v84, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1186, v42);
  swift_bridgeObjectRelease(v106);
  v44 = *(void **)(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
  if (!v44)
    goto LABEL_21;
  v45 = *((_QWORD *)&v118 + 1);
  v46 = *(void **)(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_spManager);
  v101 = (char *)v118;
  v102 = v46;
  v47 = v44;
  v48.super.isa = Data._bridgeToObjectiveC()().super.isa;
  v49.super.isa = Data._bridgeToObjectiveC()().super.isa;
  v43 = *v21;
  if (!(*v21)[2])
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isa = v49.super.isa;
  v95 = v48.super.isa;
  v96 = v47;
  swift_bridgeObjectRetain(v43);
  v50 = sub_100005E38(18);
  if ((v51 & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRelease(v43);
    __break(1u);
    goto LABEL_23;
  }
  v52 = (uint64_t *)(v43[7] + 16 * v50);
  v53 = *v52;
  v54 = v52[1];
  sub_100006B94(*v52, v54);
  swift_bridgeObjectRelease(v43);
  v93 = Data._bridgeToObjectiveC()().super.isa;
  sub_100007348(v53, v54);
  v43 = *v21;
  if (!(*v21)[2])
    goto LABEL_20;
  v92 = v29;
  swift_bridgeObjectRetain(v43);
  v55 = sub_100005E38(17);
  if ((v56 & 1) == 0)
  {
LABEL_23:
    result = (uint64_t *)swift_bridgeObjectRelease(v43);
    __break(1u);
    goto LABEL_24;
  }
  v91 = v34;
  v57 = (uint64_t *)(v43[7] + 16 * v55);
  v58 = *v57;
  v59 = v57[1];
  sub_100006B94(*v57, v59);
  swift_bridgeObjectRelease(v43);
  v90 = Data._bridgeToObjectiveC()().super.isa;
  result = (uint64_t *)sub_100007348(v58, v59);
  v61 = *(_QWORD *)(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vbVersionStr + 8);
  if (!v61)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain(*(_QWORD *)(v20
                                     + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vbVersionStr
                                     + 8));
  v89 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v61);
  v62 = Data._bridgeToObjectiveC()().super.isa;
  v63 = Data._bridgeToObjectiveC()().super.isa;
  v87 = v63;
  v64 = String._bridgeToObjectiveC()();
  v88 = v64;
  swift_bridgeObjectRelease(v45);
  v65 = Data._bridgeToObjectiveC()().super.isa;
  v101 = (char *)v65;
  v66 = swift_allocObject(&unk_100178EF0, 24, 7);
  swift_unknownObjectWeakInit(v66 + 16, v20);
  *(_QWORD *)&v120 = sub_100055AB4;
  *((_QWORD *)&v120 + 1) = v66;
  *(_QWORD *)&v118 = _NSConcreteStackBlock;
  *((_QWORD *)&v118 + 1) = 1107296256;
  *(_QWORD *)&v119 = sub_1000AD3B4;
  *((_QWORD *)&v119 + 1) = &unk_100179048;
  v67 = _Block_copy(&v118);
  *(_QWORD *)&v68 = swift_release(*((_QWORD *)&v120 + 1)).n128_u64[0];
  v85 = v65;
  v83 = v63;
  v84 = v64;
  v82 = v62;
  v69 = v62;
  v70 = v95;
  v71 = v96;
  v73 = v93;
  v72 = isa;
  v74 = v89;
  v75 = v90;
  objc_msgSend(v102, "verifyPairingWithPairingSession:signature:attestation:systemPublicKey:refKeyPublicKey:systemVersion:vendorId:productId:ecid:chipId:serialNumber:collaborativeKey:completion:", v96, v95, isa, v93, v90, v89, v68, 76, 21760, v82, v83, v84, v85, v67);
  _Block_release(v67);

  v20 = v128;
  v34 = v91;
  v29 = v92;
  v33 = v103;
LABEL_15:
  if ((*(_BYTE *)(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sessionVerified) & 1) != 0)
  {
    swift_beginAccess(v100, &v118, 33, 0);
    v76 = v98 | 0x8000000000000000;
    sub_1000D0A84(0xD000000000000017, v98 | 0x8000000000000000);
    v78 = v77;
    swift_endAccess(&v118);
    swift_bridgeObjectRelease(v78);
    sub_100021A0C(1233, 0xD00000000000006ELL, v97 | 0x8000000000000000, v99, 0xD000000000000017, v76, 0, 0xE000000000000000);
    sub_100007348(v34, v33);
    sub_100007348(v29, v104);
    return sub_100055AE4((uint64_t *)v123);
  }
  else
  {
    v79 = sub_100055824();
    v80 = swift_allocError(&type metadata for SDRunState, v79, 0, 0);
    *v81 = 1;
    swift_willThrow(v80);
    sub_100007348(v34, v33);
    sub_100007348(v29, v104);
    return sub_100055AE4((uint64_t *)v123);
  }
}

unint64_t sub_100042A60()
{
  return 0xD00000000000002BLL;
}

unint64_t sub_100042A7C()
{
  return 0xD000000000000028;
}

unint64_t sub_100042A98()
{
  return 0xD000000000000028;
}

uint64_t sub_100042AB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Swift::String v6;
  unint64_t v7;
  void *object;
  Swift::String v9;
  __int128 v11;
  Swift::String v12;
  uint64_t v13;
  unint64_t v14;

  v2 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  v6._countAndFlagsBits = 0x6E206C6169726553;
  v6._object = (void *)0xEF28207265626D75;
  String.append(_:)(v6);
  v11 = *(_OWORD *)(a1 + 32);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v2);
  v7 = sub_100055934();
  DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v11, v5, 58, 0xE100000000000000, &type metadata for Data, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  object = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  v9._object = (void *)0x8000000100138A10;
  v9._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v9);
  return v13;
}

uint64_t sub_100042BF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  void *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  _QWORD *v37;
  char v38[24];

  v33 = a6;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v15 - 8);
  v35 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v38, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a3);
  if (result)
  {
    v19 = (void *)result;
    sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
    v20 = static OS_dispatch_queue.main.getter();
    v32 = v12;
    v21 = (void *)v20;
    v22 = (_QWORD *)swift_allocObject(a4, 40, 7);
    v22[2] = a2;
    v22[3] = a1;
    v22[4] = v19;
    aBlock[4] = a5;
    v37 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001BB50;
    aBlock[3] = v33;
    v23 = _Block_copy(aBlock);
    v24 = v37;
    swift_errorRetain(a2);
    v25 = a1;
    v26 = v19;
    v27 = swift_release(v24);
    static DispatchQoS.unspecified.getter(v27);
    aBlock[0] = _swiftEmptyArrayStorage;
    v28 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v29 = sub_100006A6C((uint64_t *)&unk_1001A4330);
    v30 = sub_100012F94();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v11, v28);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v14, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v35);
  }
  return result;
}

uint64_t sub_100042E34(uint64_t a1, void *a2, uint64_t a3)
{
  os_log_type_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v37;
  NSString v38;
  NSString v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  char v46[8];
  _QWORD v47[3];
  char v48[8];
  uint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;

  if (a1)
    v6 = static os_log_type_t.error.getter(a1);
  else
    v6 = static os_log_type_t.default.getter(0, a2);
  v8 = v6;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v9 = type metadata accessor for Logger(0, v7);
  sub_10000E8E8(v9, (uint64_t)qword_1001A4A60);
  v10 = a2;
  swift_errorRetain(a1);
  v11 = v10;
  v12 = swift_errorRetain(a1);
  v13 = Logger.logObject.getter(v12);
  if (os_log_type_enabled(v13, v8))
  {
    v44 = a3;
    v14 = swift_slowAlloc(22, -1);
    v15 = (_QWORD *)swift_slowAlloc(8, -1);
    v16 = swift_slowAlloc(32, -1);
    v51 = (void *)v16;
    *(_DWORD *)v14 = 138412546;
    if (a2)
    {
      v49 = (uint64_t)v11;
      v17 = v11;
    }
    else
    {
      v49 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v14 + 4, v14 + 12);
    *v15 = a2;

    *(_WORD *)(v14 + 12) = 2080;
    if (a1)
    {
      swift_getErrorValue(a1, v46, v45);
      v29 = Error.localizedDescription.getter(v45[1], v45[2]);
      v31 = v30;
    }
    else
    {
      v49 = 0;
      v50 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v50);
      v29 = 0xD000000000000015;
      v31 = 0x8000000100136820;
    }
    v49 = sub_10001EFA4(v29, v31, (uint64_t *)&v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v14 + 14, v14 + 22);
    swift_bridgeObjectRelease(v31);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v13, v8, "verifyPairing %@ completion, error: %s", (uint8_t *)v14, 0x16u);
    v32 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v15, 1, v32);
    swift_slowDealloc(v15, -1, -1);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    a3 = v44;
    if (!a1)
      goto LABEL_19;
  }
  else
  {

    swift_errorRelease(a1);
    swift_errorRelease(a1);

    if (!a1)
    {
LABEL_19:
      v33 = *(void **)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
      *(_QWORD *)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session) = a2;
      v34 = v11;

      *(_BYTE *)(a3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sessionVerified) = 1;
      return sub_100031994(v35);
    }
  }
  v49 = a1;
  swift_errorRetain(a1);
  swift_errorRetain(a1);
  v18 = sub_100006A6C(&qword_1001A7C30);
  type metadata accessor for SPPairingSessionError(0);
  if ((swift_dynamicCast(&v51, &v49, v18, v19, 6) & 1) != 0)
  {
    v20 = v51;
    sub_100043BF0((uint64_t)v51);

  }
  else
  {
    swift_errorRetain(a1);
    v21 = swift_errorRetain(a1);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v49 = v25;
      *(_DWORD *)v24 = 136315138;
      swift_getErrorValue(a1, v48, v47);
      v26 = Error.localizedDescription.getter(v47[1], v47[2]);
      v28 = v27;
      v51 = (void *)sub_10001EFA4(v26, v27, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease(v28);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "verifyPairing error %s failed decode as NSError", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    v37 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v38 = String._bridgeToObjectiveC()();
    v39 = String._bridgeToObjectiveC()();
    v40 = sub_100117218(v37, v38, v39);

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    swift_errorRetain(a1);
    sub_100043404(v41, v43, a1, 0, 0, 0);
    swift_errorRelease(a1);
    swift_bridgeObjectRelease(v43);
  }
  return swift_errorRelease(a1);
}

void sub_100043404(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _BYTE *v6;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v17;
  _BYTE *v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  objc_class *v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  NSString v46;
  NSString v47;
  id v48;
  uint64_t v49;
  NSString v50;
  id v51;
  void *v52;
  NSString v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD v67[3];
  char v68[8];
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[2];
  uint64_t v72;
  objc_super v73;
  objc_super v74;
  objc_super v75;
  objc_super v76;

  if ((v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_shownError] & 1) == 0)
  {
    v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_shownError] = 1;
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v17 = type metadata accessor for Logger(0, a2);
    sub_10000E8E8(v17, (uint64_t)qword_1001A4A60);
    swift_bridgeObjectRetain(a2);
    swift_errorRetain(a3);
    v18 = v6;
    swift_bridgeObjectRetain(a2);
    swift_errorRetain(a3);
    v19 = v18;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    v65 = a3;
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(32, -1);
      v63 = swift_slowAlloc(96, -1);
      v72 = v63;
      *(_DWORD *)v22 = 136315650;
      swift_bridgeObjectRetain(a2);
      v70 = sub_10001EFA4(a1, a2, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71, v22 + 4, v22 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      *(_WORD *)(v22 + 12) = 2080;
      if (a3)
      {
        swift_getErrorValue(a3, v68, v67);
        v23 = Error.localizedDescription.getter(v67[1], v67[2]);
        v25 = v24;
      }
      else
      {
        v70 = 0;
        v71[0] = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v71[0]);
        v23 = 0xD000000000000015;
        v25 = 0x8000000100136820;
      }
      v70 = sub_10001EFA4(v23, v25, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71, v22 + 14, v22 + 22);
      swift_bridgeObjectRelease(v25);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      *(_WORD *)(v22 + 22) = 2080;
      v26 = &v19[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations];
      swift_beginAccess(&v19[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations], &v70, 0, 0);
      v27 = *(_QWORD *)v26;
      v28 = swift_bridgeObjectRetain(v27);
      v29 = Set.description.getter(v28, &type metadata for String, &protocol witness table for String);
      v31 = v30;
      swift_bridgeObjectRelease(v27);
      v69 = sub_10001EFA4(v29, v31, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v22 + 24, v22 + 32);

      swift_bridgeObjectRelease(v31);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "showError reason: %s, error: %s\nThe following operations were in-flight at the time of error, and have not finished:\n%s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy(v63, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n(a2, 2);
      swift_errorRelease(a3);
      swift_errorRelease(a3);

    }
    sub_1000323A4(0);
    v32 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_errorVC;
    v33 = *(void **)&v19[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_errorVC];
    v34 = v33;
    v35 = v33;
    if (!v33)
    {
      v36 = objc_allocWithZone((Class)sub_100006A6C(&qword_1001A5460));
      v35 = sub_100030324(v19);
      v34 = *(void **)&v19[v32];
    }
    *(_QWORD *)&v19[v32] = v35;
    v37 = v33;

    v38 = *(void **)&v19[v32];
    if (v38)
    {
      v39 = (objc_class *)sub_100006A6C(&qword_1001A5460);
      v76.receiver = v38;
      v76.super_class = v39;
      v40 = objc_msgSendSuper2(&v76, "contentViewController");
      v41 = type metadata accessor for B389ErrorViewController();
      v42 = (void *)swift_dynamicCastClassUnconditional(v40, v41, 0, 0, 0);
      v43 = a5;
      if (a5)
      {
        v44 = a5;
      }
      else
      {
        v45 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v64 = a6;
        v46 = String._bridgeToObjectiveC()();
        v47 = String._bridgeToObjectiveC()();
        v48 = sub_100117218(v45, v46, v47);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v44 = v49;

        v43 = 0;
        a6 = v64;
      }
      swift_bridgeObjectRetain(v43);
      v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v44);
      objc_msgSend(v42, "setTitle:", v50);

      if (*(_QWORD *)&v19[v32])
      {
        v75.receiver = *(id *)&v19[v32];
        v75.super_class = v39;
        v51 = objc_msgSendSuper2(&v75, "contentViewController");
        v52 = (void *)swift_dynamicCastClassUnconditional(v51, v41, 0, 0, 0);
        v53 = String._bridgeToObjectiveC()();
        objc_msgSend(v52, "setSubtitle:", v53);

        if (*(_QWORD *)&v19[v32])
        {
          v74.receiver = *(id *)&v19[v32];
          v74.super_class = v39;
          v54 = objc_msgSendSuper2(&v74, "contentViewController");
          v55 = swift_dynamicCastClassUnconditional(v54, v41, 0, 0, 0);
          v56 = *(_QWORD *)(v55 + OBJC_IVAR____TtC18SharingViewService23B389ErrorViewController_error);
          *(_QWORD *)(v55 + OBJC_IVAR____TtC18SharingViewService23B389ErrorViewController_error) = v65;
          swift_errorRetain(v65);
          swift_errorRelease(v56);

          if (*(_QWORD *)&v19[v32])
          {
            v73.receiver = *(id *)&v19[v32];
            v73.super_class = v39;
            v57 = objc_msgSendSuper2(&v73, "contentViewController");
            v58 = swift_dynamicCastClassUnconditional(v57, v41, 0, 0, 0);
            v59 = _swiftEmptyArrayStorage;
            if (a6)
              v59 = a6;
            v60 = *(_QWORD *)(v58 + OBJC_IVAR____TtC18SharingViewService23B389ErrorViewController_buttons);
            *(_QWORD *)(v58 + OBJC_IVAR____TtC18SharingViewService23B389ErrorViewController_buttons) = v59;
            swift_bridgeObjectRetain(a6);

            swift_bridgeObjectRelease(v60);
            v61 = *(void **)&v19[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav];
            if (v61)
            {
              v62 = *(void **)&v19[v32];
              if (v62)
              {
                sub_10011757C(v61, v62);
                return;
              }
              goto LABEL_34;
            }
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
            return;
          }
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_31;
  }
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v9 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v9, (uint64_t)qword_1001A4A60);
  v10 = swift_bridgeObjectRetain_n(a2, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v70 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain(a2);
    v72 = sub_10001EFA4(a1, a2, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Already showing error, dropping message: %s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

void sub_100043BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint8_t *v29;
  id v30;
  NSString v31;
  NSString v32;
  void *v33;
  id v34;
  NSString v35;
  NSString v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  id v40;
  NSString v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  NSString v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  id v67;
  NSString v68;
  void *v69;
  NSString v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  id v82;
  NSString v83;
  NSString v84;
  id v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  NSString v92;
  NSString v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  NSString v99;
  NSString v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSString v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v2 = v1;
  v4 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v4);
  v6 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = a1;
  type metadata accessor for SPPairingSessionError(0);
  v8 = v7;
  v9 = sub_100005B80(&qword_1001A33D0, (uint64_t (*)(uint64_t))type metadata accessor for SPPairingSessionError, (uint64_t)&unk_1001317D4);
  _BridgedStoredNSError.code.getter(&v115, v8, v9);
  switch(v115)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 13:
    case 14:
    case 19:
      v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v12 = String._bridgeToObjectiveC()();
      v13 = String._bridgeToObjectiveC()();
      v14 = sub_100117218(v11, v12, v13);

      goto LABEL_3;
    case 17:
      v33 = (void *)objc_opt_self(NSBundle);
      v34 = objc_msgSend(v33, "mainBundle");
      v112 = v2;
      v35 = String._bridgeToObjectiveC()();
      v36 = String._bridgeToObjectiveC()();
      v37 = a1;
      v38 = sub_100117218(v34, v35, v36);

      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v17 = v39;

      v40 = objc_msgSend(v33, "mainBundle");
      v41 = String._bridgeToObjectiveC()();
      v42 = String._bridgeToObjectiveC()();
      v43 = sub_100117218(v40, v41, v42);

      a1 = v37;
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v21 = v44;

      v45 = sub_100006A6C(&qword_1001A5458);
      v19 = swift_allocObject(v45, 96, 7);
      *(_OWORD *)(v19 + 16) = xmmword_100131C30;
      v46 = objc_msgSend(v33, "mainBundle");
      v47 = String._bridgeToObjectiveC()();
      v48 = String._bridgeToObjectiveC()();
      v49 = sub_100117218(v46, v47, v48);

      v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v52 = v51;

      v53 = swift_allocObject(&unk_100178EF0, 24, 7);
      swift_unknownObjectWeakInit(v53 + 16, v112);
      *(_QWORD *)(v19 + 32) = v50;
      *(_QWORD *)(v19 + 40) = v52;
      *(_QWORD *)(v19 + 48) = sub_100055988;
      *(_QWORD *)(v19 + 56) = v53;
      v54 = String._bridgeToObjectiveC()();
      v55 = sub_100117314(v54);

      v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      v58 = v57;

      v59 = v112;
      v60 = swift_allocObject(&unk_100178EF0, 24, 7);
      swift_unknownObjectWeakInit(v60 + 16, v59);
      *(_QWORD *)(v19 + 64) = v56;
      *(_QWORD *)(v19 + 72) = v58;
      *(_QWORD *)(v19 + 80) = sub_100055990;
      *(_QWORD *)(v19 + 88) = v60;
      goto LABEL_4;
    case 18:
      if (qword_1001A2F40 != -1)
        swift_once(&qword_1001A2F40, sub_100030AB0);
      v61 = type metadata accessor for Logger(0, v10);
      v62 = sub_10000E8E8(v61, (uint64_t)qword_1001A4A60);
      v63 = Logger.logObject.getter(v62);
      v64 = static os_log_type_t.error.getter(v63);
      if (os_log_type_enabled(v63, v64))
      {
        v65 = (uint8_t *)swift_slowAlloc(12, -1);
        v66 = swift_slowAlloc(32, -1);
        v114 = v66;
        *(_DWORD *)v65 = 136315138;
        v111 = (uint64_t)(v65 + 4);
        v67 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v68 = String._bridgeToObjectiveC()();
        v112 = v2;
        v69 = v68;
        v70 = String._bridgeToObjectiveC()();
        v71 = sub_100117218(v67, v69, v70);

        v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
        v74 = v73;

        v113 = sub_10001EFA4(v72, v74, &v114);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v111, v65 + 12);
        swift_bridgeObjectRelease(v74);
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "%s", v65, 0xCu);
        swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v66, -1, -1);
        swift_slowDealloc(v65, -1, -1);
      }

      sub_1000486C8(v75, v76);
      return;
    case 20:
      if (qword_1001A2F40 != -1)
        swift_once(&qword_1001A2F40, sub_100030AB0);
      v112 = v1;
      v77 = type metadata accessor for Logger(0, v10);
      v78 = sub_10000E8E8(v77, (uint64_t)qword_1001A4A60);
      v79 = Logger.logObject.getter(v78);
      v80 = static os_log_type_t.error.getter(v79);
      if (os_log_type_enabled(v79, v80))
      {
        v81 = (uint8_t *)swift_slowAlloc(12, -1);
        v111 = swift_slowAlloc(32, -1);
        v114 = v111;
        *(_DWORD *)v81 = 136315138;
        v110 = v81 + 4;
        v82 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v83 = String._bridgeToObjectiveC()();
        v84 = String._bridgeToObjectiveC()();
        v85 = sub_100117218(v82, v83, v84);

        v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
        v88 = v87;

        v113 = sub_10001EFA4(v86, v88, &v114);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v110, v81 + 12);
        swift_bridgeObjectRelease(v88);
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "%s", v81, 0xCu);
        v89 = v111;
        swift_arrayDestroy(v111, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v89, -1, -1);
        swift_slowDealloc(v81, -1, -1);
      }

      v90 = (void *)objc_opt_self(NSBundle);
      v91 = objc_msgSend(v90, "mainBundle");
      v92 = String._bridgeToObjectiveC()();
      v93 = String._bridgeToObjectiveC()();
      v94 = sub_100117218(v91, v92, v93);

      v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
      v97 = v96;

      v98 = objc_msgSend(v90, "mainBundle");
      v99 = String._bridgeToObjectiveC()();
      v100 = String._bridgeToObjectiveC()();
      v101 = sub_100117218(v98, v99, v100);

      v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v101);
      v104 = v103;

      v105 = String._bridgeToObjectiveC()();
      v106 = sub_100117314(v105);

      v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
      v109 = v108;

      URL.init(string:)(0x3A7366657270, 0xE600000000000000);
      sub_10003AAE8(v95, v97, v102, v104, v107, v109, 0xD000000000000010, 0x8000000100138640, (uint64_t)v6);
      swift_bridgeObjectRelease(v97);
      swift_bridgeObjectRelease(v104);
      swift_bridgeObjectRelease(v109);
      sub_10000D858((uint64_t)v6, &qword_1001A3618);
      return;
    default:
      v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v31 = String._bridgeToObjectiveC()();
      v32 = String._bridgeToObjectiveC()();
      v14 = sub_100117218(v30, v31, v32);

LABEL_3:
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

      v19 = 0;
      v20 = 0;
      v21 = 0;
LABEL_4:
      if (qword_1001A2F40 != -1)
        swift_once(&qword_1001A2F40, sub_100030AB0);
      v22 = type metadata accessor for Logger(0, v18);
      sub_10000E8E8(v22, (uint64_t)qword_1001A4A60);
      v23 = swift_bridgeObjectRetain_n(v17, 2);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.error.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v110 = (uint8_t *)v19;
        v26 = swift_slowAlloc(12, -1);
        v112 = v21;
        v27 = (uint8_t *)v26;
        v28 = swift_slowAlloc(32, -1);
        v115 = v28;
        v111 = v20;
        *(_DWORD *)v27 = 136315138;
        swift_bridgeObjectRetain(v17);
        v114 = sub_10001EFA4(v15, v17, &v115);
        v19 = (uint64_t)v110;
        v20 = v111;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v114, &v115, v27 + 4, v27 + 12);
        swift_bridgeObjectRelease_n(v17, 3);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s", v27, 0xCu);
        swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v28, -1, -1);
        v29 = v27;
        v21 = v112;
        swift_slowDealloc(v29, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v17, 2);
      }
      sub_100043404(v15, v17, a1, v20, v21, (_QWORD *)v19);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v21);
      return;
  }
}

void sub_100044A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  char v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  Swift::String v24;
  void *object;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  id v45;
  char v46;
  id v47;
  id v48;
  id v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  uint64_t v52;
  id v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  unint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[2];
  unint64_t v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void *v78;
  uint64_t v79;
  unint64_t v80;
  _BYTE v81[24];
  uint64_t v82;

  v2 = v0;
  v3 = type metadata accessor for String.Encoding(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v7, v81, 33, 0);
  v72 = (unint64_t)"Expect discovered c3_t4_s4 char";
  v82 = v7;
  sub_1000C967C(&v79, 0xD00000000000001ALL, 0x80000001001389B0);
  v8 = v80;
  swift_endAccess(v81);
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  v69 = (unint64_t)"neViewController";
  v71 = v9;
  sub_1000219E4(1238, 0xD00000000000006ELL, 0x8000000100138430, v9, 0xD00000000000001ALL, 0x80000001001389B0, 0, 0xE000000000000000);
  v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars);
  swift_beginAccess(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars, v81, 0, 0);
  v11 = *v10;
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain(v11);
    v12 = sub_100005E38(5);
    if ((v13 & 1) != 0)
    {
      v70 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v12);
      swift_bridgeObjectRelease(v11);
      v14 = v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager;
      swift_beginAccess(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager, &v79, 0, 0);
      v15 = *(_QWORD *)(v14 + 8);
      if (*(_QWORD *)(v15 + 16))
      {
        v16 = v70;
        swift_bridgeObjectRetain(v15);
        sub_100005E08((uint64_t)v16);
        v18 = v17;
        swift_bridgeObjectRelease(v15);

        if ((v18 & 1) != 0)
        {
LABEL_24:
          v52 = *(_QWORD *)(v14 + 8);
          if (*(_QWORD *)(v52 + 16))
          {
            v53 = v70;
            swift_bridgeObjectRetain(v52);
            v54 = sub_100005E08((uint64_t)v53);
            if ((v55 & 1) != 0)
            {
              v56 = *(_QWORD *)(v52 + 56) + 24 * v54;
              v57 = *(id *)v56;
              v58 = *(_QWORD *)(v56 + 8);
              v59 = *(_QWORD *)(v56 + 16);
              sub_100006B68(*(id *)v56, v58, (void *)v59);

LABEL_30:
              v73 = (uint64_t)v57;
              v74 = v58;
              v75 = v59;
              v60 = sub_100006A6C((uint64_t *)&unk_1001A7C60);
              Optional.unwrap(_:file:line:)(&v76, sub_10001A7B4, 0, "SharingViewService/SDCommonSwifty.swift", 39, 2, 298, v60);
              sub_100055998((uint64_t)v57, v58, (void *)v59);
              v61 = v78;
              sub_100024034(v76, v77, v78);
              swift_bridgeObjectRelease(v52);
              if (v61)
              {
                v62 = sub_100055824();
                v63 = swift_allocError(&type metadata for SDRunState, v62, 0, 0);
                *v64 = 1;
                swift_willThrow(v63);
              }
              else
              {
                swift_beginAccess(v82, &v76, 33, 0);
                v65 = v72 | 0x8000000000000000;
                sub_1000D0A84(0xD00000000000001ALL, v72 | 0x8000000000000000);
                v67 = v66;
                swift_endAccess(&v76);
                swift_bridgeObjectRelease(v67);
                sub_100021A0C(1258, 0xD00000000000006ELL, v69 | 0x8000000000000000, v71, 0xD00000000000001ALL, v65, 0, 0xE000000000000000);
              }

              return;
            }

          }
          else
          {
            swift_bridgeObjectRetain(v52);
          }
          v57 = 0;
          v58 = 0;
          v59 = 1;
          goto LABEL_30;
        }
      }
      v19 = *(id *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
      v68[1] = v1;
      if (v19 && (v19 = objc_msgSend(v19, "userMessage")) != 0)
      {
        v20 = v19;
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v23 = v22;

      }
      else
      {
        v21 = 0;
        v23 = 0xE000000000000000;
      }
      static String.Encoding.utf8.getter(v19);
      v37 = String.data(using:allowLossyConversion:)(v6, 0, v21, v23);
      v39 = v38;
      swift_bridgeObjectRelease(v23);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v73 = v37;
      v74 = v39;
      v40 = sub_100006A6C(&qword_1001A5438);
      Optional.unwrap(_:file:line:)(&v76, sub_10004512C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1252, v40);
      sub_100023F48(v37, v39);
      v41 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph);
      if (!v41)
      {
        __break(1u);
        return;
      }
      v42 = v76;
      v43 = v77;
      swift_beginAccess(v14, &v76, 33, 0);
      if (*(_QWORD *)(*(_QWORD *)(v14 + 8) + 16))
      {
        v44 = v70;
        v45 = v41;
        sub_100005E08((uint64_t)v44);
        if ((v46 & 1) != 0)
        {
LABEL_23:

          swift_endAccess(&v76);
          sub_100007348(v42, v43);
          goto LABEL_24;
        }

      }
      else
      {
        v47 = v41;
      }
      v48 = v70;
      v49 = v41;
      sub_100006B94(v42, v43);
      sub_100006B94(v42, v43);
      v45 = v49;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v14 + 8));
      v73 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)(v14 + 8) = 0x8000000000000000;
      sub_1000CF3F8(v42, v43, (uint64_t)v41, v48, isUniquelyReferenced_nonNull_native);
      v51 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)(v14 + 8) = v73;

      swift_bridgeObjectRelease(v51);
      sub_10001A55C(v48);
      sub_100007348(v42, v43);
      v44 = v45;
      goto LABEL_23;
    }
    swift_bridgeObjectRelease(v11);
  }
  v79 = 0xD00000000000006ELL;
  v80 = 0x8000000100138430;
  v76 = 1242;
  v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(object);
  v26 = v80;
  v27 = String.hashValue.getter(v79, v80);
  swift_bridgeObjectRelease(v26);
  swift_beginAccess(v71 + 16, &v79, 33, 0);
  LOBYTE(v26) = sub_1000C9584(&v76, v27);
  swift_endAccess(&v79);
  if ((v26 & 1) != 0)
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v29 = type metadata accessor for Logger(0, v28);
    v30 = sub_10000E8E8(v29, (uint64_t)qword_1001A4A60);
    v31 = Logger.logObject.getter(v30);
    v33 = static os_log_type_t.default.getter(v31, v32);
    if (os_log_type_enabled(v31, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v33, "ensureUserMessageWritten - skipped", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

  }
  swift_beginAccess(v82, &v79, 33, 0);
  sub_1000D0A84(0xD00000000000001ALL, v72 | 0x8000000000000000);
  v36 = v35;
  swift_endAccess(&v79);
  swift_bridgeObjectRelease(v36);
}

unint64_t sub_10004512C()
{
  return 0xD00000000000001ALL;
}

void sub_100045148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  uint64_t v85;
  os_log_type_t v86;
  uint8_t *v87;
  unint64_t v88;
  Class isa;
  id v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[2];
  unint64_t v97;
  unint64_t v98;
  const char *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  id v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  id v108;
  id v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115[2];
  id v116;
  unint64_t v117;
  _QWORD v118[4];

  v1 = v0;
  v2 = type metadata accessor for String.Encoding(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, v118, 33, 0);
  v99 = "Expect discovered baaCert char";
  sub_1000C967C((uint64_t *)&v116, 0xD00000000000001BLL, 0x80000001001388A0);
  v7 = v117;
  swift_endAccess(v118);
  swift_bridgeObjectRelease(v7);
  v100 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(1263, 0xD00000000000006ELL, 0x8000000100138430, v100, 0xD00000000000001BLL, 0x80000001001388A0, 0, 0xE000000000000000);
  v116 = *(id *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
  v8 = v116;
  v9 = sub_100006A6C(&qword_1001A4A38);
  Optional.unwrap(_:file:line:)(v118, sub_10002F048, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1265, v9);

  v10 = (void *)v118[0];
  v112 = v1;
  v11 = (_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars);
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars, v118, 0, 0);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v98 = (unint64_t)"neViewController";
  v97 = v3;
  if (v13)
  {
    swift_bridgeObjectRetain(v12);
    v14 = sub_100005E38(13);
    if ((v15 & 1) != 0)
    {
      v16 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v14);
      v17 = v16;
    }
    else
    {
      v16 = 0;
    }
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v16 = 0;
  }
  v113 = (uint64_t)v16;
  v18 = sub_100006A6C((uint64_t *)&unk_1001A7C50);
  Optional.unwrap(_:file:line:)(&v116, sub_100046114, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1267, v18);

  v19 = v116;
  v20 = *v11;
  if (*(_QWORD *)(*v11 + 16))
  {
    swift_bridgeObjectRetain(*v11);
    v21 = sub_100005E38(6);
    if ((v22 & 1) != 0)
    {
      v23 = *(void **)(*(_QWORD *)(v20 + 56) + 8 * v21);
      v24 = v23;
    }
    else
    {
      v23 = 0;
    }
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v23 = 0;
  }
  v113 = (uint64_t)v23;
  Optional.unwrap(_:file:line:)(&v116, sub_100046130, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1268, v18);

  v111 = v116;
  v25 = *v11;
  if (*(_QWORD *)(*v11 + 16))
  {
    swift_bridgeObjectRetain(*v11);
    v26 = sub_100005E38(7);
    if ((v27 & 1) != 0)
    {
      v28 = *(void **)(*(_QWORD *)(v25 + 56) + 8 * v26);
      v29 = v28;
    }
    else
    {
      v28 = 0;
    }
    swift_bridgeObjectRelease(v25);
  }
  else
  {
    v28 = 0;
  }
  v113 = (uint64_t)v28;
  Optional.unwrap(_:file:line:)(&v116, sub_10004614C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1269, v18);

  v110 = v116;
  v30 = *v11;
  if (*(_QWORD *)(*v11 + 16))
  {
    swift_bridgeObjectRetain(*v11);
    v31 = sub_100005E38(8);
    if ((v32 & 1) != 0)
    {
      v33 = *(void **)(*(_QWORD *)(v30 + 56) + 8 * v31);
      v34 = v33;
    }
    else
    {
      v33 = 0;
    }
    swift_bridgeObjectRelease(v30);
  }
  else
  {
    v33 = 0;
  }
  v113 = (uint64_t)v33;
  Optional.unwrap(_:file:line:)(&v116, sub_100046168, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1270, v18);

  v109 = v116;
  v35 = *v11;
  if (*(_QWORD *)(*v11 + 16))
  {
    swift_bridgeObjectRetain(*v11);
    v36 = sub_100005E38(9);
    if ((v37 & 1) != 0)
    {
      v38 = *(void **)(*(_QWORD *)(v35 + 56) + 8 * v36);
      v39 = v38;
    }
    else
    {
      v38 = 0;
    }
    swift_bridgeObjectRelease(v35);
  }
  else
  {
    v38 = 0;
  }
  v113 = (uint64_t)v38;
  Optional.unwrap(_:file:line:)(&v116, sub_100046184, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1271, v18);

  v108 = v116;
  v40 = objc_msgSend(v10, "collaborativeKeyC2");
  v103 = (id)v2;
  if (v40)
  {
    v41 = v40;
    v42 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v44 = v43;

  }
  else
  {
    v42 = 0;
    v44 = 0xF000000000000000;
  }
  v113 = v42;
  v114 = v44;
  v45 = sub_100006A6C(&qword_1001A5438);
  Optional.unwrap(_:file:line:)(&v116, sub_1000461A0, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1273, v45);
  sub_100023F48(v42, v44);
  v104 = v117;
  v105 = (uint64_t)v116;
  v46 = objc_msgSend(v10, "serverSeed");
  if (v46)
  {
    v47 = v46;
    v48 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v46);
    v50 = v49;

  }
  else
  {
    v48 = 0;
    v50 = 0xF000000000000000;
  }
  v113 = v48;
  v114 = v50;
  Optional.unwrap(_:file:line:)(&v116, sub_1000461BC, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1274, v45);
  sub_100023F48(v48, v50);
  v106 = v117;
  v107 = (uint64_t)v116;
  v51 = objc_msgSend(v10, "serverSignature");
  if (v51)
  {
    v52 = v51;
    v53 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v55 = v54;

  }
  else
  {
    v53 = 0;
    v55 = 0xF000000000000000;
  }
  v113 = v53;
  v114 = v55;
  Optional.unwrap(_:file:line:)(&v116, sub_1000461D8, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1275, v45);
  sub_100023F48(v53, v55);
  v102 = (uint64_t)v116;
  v101 = v117;
  v56 = objc_msgSend(v10, "maskedAppleID");
  if (v56)
  {
    v57 = v56;
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v60 = v59;

  }
  else
  {
    v58 = 0;
    v60 = 0;
  }
  v113 = v58;
  v114 = v60;
  v61 = sub_100006A6C(&qword_1001A5430);
  Optional.unwrap(_:file:line:)(&v116, sub_1000461FC, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1276, v61);
  swift_bridgeObjectRelease(v60);
  v63 = v116;
  v62 = v117;
  v64 = v112 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager;
  v65 = swift_beginAccess(v112 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager, &v116, 0, 0);
  v66 = *(_QWORD *)(v64 + 8);
  if (!*(_QWORD *)(v66 + 16))
  {
LABEL_47:
    v96[0] = v10;
    v96[1] = v6;
    static String.Encoding.utf8.getter(v65);
    v75 = String.data(using:allowLossyConversion:)(v5, 0, v63, v62);
    v77 = v76;
    swift_bridgeObjectRelease(v62);
    (*(void (**)(char *, id))(v97 + 8))(v5, v103);
    v115[0] = v75;
    v115[1] = v77;
    Optional.unwrap(_:file:line:)(&v113, sub_100046214, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1280, v45);
    sub_100023F48(v75, v77);
    v80 = v113;
    v79 = v114;
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v81 = type metadata accessor for Logger(0, v78);
    sub_10000E8E8(v81, (uint64_t)qword_1001A4A60);
    v82 = v79 >> 62;
    sub_100006B94(v80, v79);
    v83 = sub_100006B94(v80, v79);
    v84 = Logger.logObject.getter(v83);
    v86 = static os_log_type_t.default.getter(v84, v85);
    if (os_log_type_enabled(v84, v86))
    {
      v97 = v79 >> 62;
      v103 = v19;
      v87 = (uint8_t *)swift_slowAlloc(12, -1);
      v82 = swift_slowAlloc(32, -1);
      v115[0] = v82;
      *(_DWORD *)v87 = 136315138;
      v88 = v79;
      isa = Data._bridgeToObjectiveC()().super.isa;
      v90 = (id)SFHexStringForData();

      if (v90)
      {
        v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
        v93 = v92;

      }
      else
      {
        v113 = 0;
        v114 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v114);
        v91 = 0xD000000000000015;
        v93 = 0x8000000100136820;
      }
      v113 = sub_10001EFA4(v91, v93, v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v87 + 4, v87 + 12);
      swift_bridgeObjectRelease(v93);
      sub_100007348(v80, v88);
      sub_100007348(v80, v88);
      _os_log_impl((void *)&_mh_execute_header, v84, v86, "writingAppleID: %s", v87, 0xCu);
      swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v82, -1, -1);
      swift_slowDealloc(v87, -1, -1);

      LODWORD(v82) = v97;
    }
    else
    {
      sub_100007348(v80, v79);
      sub_100007348(v80, v79);

    }
    __asm { BR              X10 }
  }
  v67 = v19;
  v68 = v10;
  swift_bridgeObjectRetain(*(_QWORD *)(v64 + 8));
  v69 = v111;
  sub_100005E08((uint64_t)v69);
  if ((v70 & 1) == 0)
  {
    swift_bridgeObjectRelease(v66);

    v10 = v68;
    v19 = v67;
    goto LABEL_47;
  }
  swift_bridgeObjectRelease(v62);
  swift_bridgeObjectRelease(v66);

  v71 = v100;
  v72 = (uint64_t)v99;
  v73 = v102;
  v74 = v101;
  swift_beginAccess(v6, &v113, 33, 0);
  v72 |= 0x8000000000000000;
  sub_1000D0A84(0xD00000000000001BLL, v72);
  v95 = v94;
  swift_endAccess(&v113);
  swift_bridgeObjectRelease(v95);
  sub_100021A0C(1297, 0xD00000000000006ELL, v98 | 0x8000000000000000, v71, 0xD00000000000001BLL, v72, 0, 0xE000000000000000);
  sub_100007348(v73, v74);
  sub_100007348(v107, v106);
  sub_100007348(v105, v104);

}

unint64_t sub_100046114()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_100046130()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_10004614C()
{
  return 0xD000000000000019;
}

unint64_t sub_100046168()
{
  return 0xD000000000000019;
}

unint64_t sub_100046184()
{
  return 0xD000000000000023;
}

unint64_t sub_1000461A0()
{
  return 0xD000000000000012;
}

uint64_t sub_1000461BC()
{
  return 0x6553726576726573;
}

uint64_t sub_1000461D8()
{
  return 0x6953726576726573;
}

uint64_t sub_1000461FC()
{
  return 0x4449656C707061;
}

unint64_t sub_100046214()
{
  return 0xD00000000000001FLL;
}

void sub_100046230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  char v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  void *v44;
  uint64_t v45[3];
  _BYTE v46[24];
  id v47;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v2, v46, 33, 0);
  v41 = v2;
  sub_1000C967C(v45, 0xD000000000000014, 0x8000000100138840);
  v3 = v45[1];
  swift_endAccess(v46);
  swift_bridgeObjectRelease(v3);
  v40 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(1302, 0xD00000000000006ELL, 0x8000000100138430, v40, 0xD000000000000014, 0x8000000100138840, 0, 0xE000000000000000);
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars);
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars, v46, 0, 0);
  v5 = *v4;
  if (*(_QWORD *)(*v4 + 16))
  {
    swift_bridgeObjectRetain(*v4);
    v6 = sub_100005E38(10);
    if ((v7 & 1) != 0)
    {
      v8 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v6);
      v9 = v8;
    }
    else
    {
      v8 = 0;
    }
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v8 = 0;
  }
  v42 = v8;
  v10 = sub_100006A6C((uint64_t *)&unk_1001A7C50);
  Optional.unwrap(_:file:line:)(v45, sub_100046A00, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1304, v10);

  v11 = (void *)v45[0];
  v12 = v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager;
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager, v45, 0, 0);
  v13 = *(_QWORD *)(v12 + 8);
  if (!*(_QWORD *)(v13 + 16)
    || (swift_bridgeObjectRetain(*(_QWORD *)(v12 + 8)),
        v14 = v11,
        sub_100005E08((uint64_t)v14),
        v16 = v15,
        swift_bridgeObjectRelease(v13),
        v14,
        (v16 & 1) == 0))
  {
    v42 = *(id *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session);
    v17 = v42;
    v18 = sub_100006A6C(&qword_1001A4A38);
    Optional.unwrap(_:file:line:)(&v47, sub_10002F048, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1308, v18);

    v19 = v47;
    v20 = objc_msgSend(v47, "baaLeaftCert");

    if (v20)
    {
      v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

    }
    else
    {
      v21 = 0;
      v23 = 0xF000000000000000;
    }
    v24 = sub_100006A6C(&qword_1001A5438);
    Optional.unwrap(_:file:line:)(&v42, sub_100046A1C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1308, v24);
    sub_100023F48(v21, v23);
    __asm { BR              X11 }
  }
  v25 = *(_QWORD *)(v12 + 8);
  if (*(_QWORD *)(v25 + 16))
  {
    v26 = v11;
    swift_bridgeObjectRetain(v25);
    v27 = sub_100005E08((uint64_t)v26);
    if ((v28 & 1) != 0)
    {
      v29 = *(_QWORD *)(v25 + 56) + 24 * v27;
      v30 = *(id *)v29;
      v31 = *(_QWORD *)(v29 + 8);
      v32 = *(_QWORD *)(v29 + 16);
      sub_100006B68(*(id *)v29, v31, (void *)v32);

      goto LABEL_19;
    }

  }
  else
  {
    swift_bridgeObjectRetain(v25);
  }
  v30 = 0;
  v31 = 0;
  v32 = 1;
LABEL_19:
  v33 = sub_100006A6C((uint64_t *)&unk_1001A7C60);
  Optional.unwrap(_:file:line:)(&v42, sub_10001A7B4, 0, "SharingViewService/SDCommonSwifty.swift", 39, 2, 298, v33);
  sub_100055998((uint64_t)v30, v31, (void *)v32);
  v34 = v44;
  sub_100024034((uint64_t)v42, v43, v44);
  swift_bridgeObjectRelease(v25);
  if (v34)
  {
    v35 = sub_100055824();
    v36 = swift_allocError(&type metadata for SDRunState, v35, 0, 0);
    *v37 = 1;
    swift_willThrow(v36);
  }
  else
  {
    swift_beginAccess(v41, &v42, 33, 0);
    sub_1000D0A84(0xD000000000000014, 0x8000000100138840);
    v39 = v38;
    swift_endAccess(&v42);
    swift_bridgeObjectRelease(v39);
    sub_100021A0C(1321, 0xD00000000000006ELL, 0x8000000100138430, v40, 0xD000000000000014, 0x8000000100138840, 0, 0xE000000000000000);
  }

}

unint64_t sub_100046A00()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_100046A1C()
{
  return 0x746661654C616162;
}

unint64_t sub_100046A3C()
{
  return 0xD00000000000001BLL;
}

void sub_100046A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  double v41;
  uint64_t v42;
  unint64_t v43;
  BOOL v44;
  BOOL v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void *v60;
  id v61;
  id v62;
  char v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  id v69;
  id v70;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  id v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  id v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  unint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint8_t *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[2];
  double v104;
  unint64_t v105;
  void *v106;
  uint64_t v107[3];
  _BYTE v108[32];
  id v109;

  v1 = v0;
  v2 = type metadata accessor for Calendar(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v96 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v99 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v98 = (char *)&v91 - v9;
  v10 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, v108, 33, 0);
  v93 = (unint64_t)"Expect discovered c3 char";
  sub_1000C967C(v107, 0xD000000000000014, 0x80000001001387E0);
  v11 = v107[1];
  swift_endAccess(v108);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  v92 = (unint64_t)"neViewController";
  v94 = v12;
  sub_1000219E4(1339, 0xD00000000000006ELL, 0x8000000100138430, v12, 0xD000000000000014, 0x80000001001387E0, 0, 0xE000000000000000);
  v101 = v1;
  v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars);
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars, v108, 0, 0);
  v14 = *v13;
  v15 = *(_QWORD *)(v14 + 16);
  v95 = v10;
  v97 = v6;
  if (v15)
  {
    swift_bridgeObjectRetain(v14);
    v16 = sub_100005E38(14);
    if ((v17 & 1) != 0)
    {
      v18 = *(void **)(*(_QWORD *)(v14 + 56) + 8 * v16);
      v19 = v18;
    }
    else
    {
      v18 = 0;
    }
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v18 = 0;
  }
  v104 = *(double *)&v18;
  v20 = sub_100006A6C((uint64_t *)&unk_1001A7C50);
  Optional.unwrap(_:file:line:)(v107, sub_100047340, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1341, v20);

  v109 = (id)v107[0];
  v21 = v101 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager;
  v22 = swift_beginAccess(v101 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager, v107, 0, 0);
  v23 = *(_QWORD *)(v21 + 8);
  if (!*(_QWORD *)(v23 + 16)
    || (swift_bridgeObjectRetain(*(_QWORD *)(v21 + 8)),
        v24 = v109,
        sub_100005E08((uint64_t)v24),
        v26 = v25,
        swift_bridgeObjectRelease(v23),
        v24,
        (v26 & 1) == 0))
  {
    v27 = v98;
    v28 = Date.init()(v22);
    static Calendar.current.getter(v28);
    Calendar.startOfDay(for:)(v27);
    v29 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v30 = Date.timeIntervalSinceReferenceDate.getter(v29);
    v33 = Date.timeIntervalSinceReferenceDate.getter(v31);
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v34 = v30 - v33;
    v35 = type metadata accessor for Logger(0, v32);
    v36 = sub_10000E8E8(v35, (uint64_t)qword_1001A4A60);
    v37 = Logger.logObject.getter(v36);
    v39 = static os_log_type_t.default.getter(v37, v38);
    if (os_log_type_enabled(v37, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v40 = 134217984;
      v104 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v40 + 4, v40 + 12);
      _os_log_impl((void *)&_mh_execute_header, v37, v39, "timeSinceMidnight: %f", v40, 0xCu);
      swift_slowDealloc(v40, -1, -1);
    }

    v41 = v34 * (double)MillisecondsPerSecond.getter();
    if ((~*(_QWORD *)&v41 & 0x7FF0000000000000) != 0)
    {
      if (v41 > -9.22337204e18)
      {
        if (v41 < 9.22337204e18)
        {
          v42 = (uint64_t)v41;
          v43 = (unint64_t)(uint64_t)v41 >> 32;
          v44 = v43 == 0;
          v45 = v43 != 0;
          if (!v44)
            LODWORD(v42) = 0;
          LODWORD(v104) = v42;
          BYTE4(v104) = v45;
          v46 = sub_100006A6C((uint64_t *)&unk_1001A5480);
          Optional.unwrap(_:file:line:)(&v102, sub_10004735C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1350, v46);
          v49 = sub_1000AC3AC(v102, 4uLL, v47, v48);
          v50 = swift_bridgeObjectRetain_n(v49, 2);
          v51 = Logger.logObject.getter(v50);
          v53 = static os_log_type_t.default.getter(v51, v52);
          if (os_log_type_enabled(v51, v53))
          {
            v54 = (uint8_t *)swift_slowAlloc(12, -1);
            v55 = swift_slowAlloc(32, -1);
            v104 = *(double *)&v55;
            *(_DWORD *)v54 = 136315138;
            v91 = v54 + 4;
            v56 = swift_bridgeObjectRetain(v49);
            v57 = Array.description.getter(v56, &type metadata for UInt8);
            v59 = v58;
            swift_bridgeObjectRelease(v49);
            v102 = sub_10001EFA4(v57, v59, (uint64_t *)&v104);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103, v91, v54 + 12);
            swift_bridgeObjectRelease_n(v49, 2);
            swift_bridgeObjectRelease(v59);
            _os_log_impl((void *)&_mh_execute_header, v51, v53, "reftime payload: %s", v54, 0xCu);
            swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v55, -1, -1);
            swift_slowDealloc(v54, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v49, 2);
          }
          if (v49[2] == 4)
          {
            v60 = *(void **)(v101 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph);
            if (v60)
            {
              swift_beginAccess(v21, &v104, 33, 0);
              if (*(_QWORD *)(*(_QWORD *)(v21 + 8) + 16))
              {
                v61 = v109;
                v62 = v60;
                sub_100005E08((uint64_t)v61);
                if ((v63 & 1) != 0)
                {
LABEL_28:
                  swift_bridgeObjectRelease(v49);

                  swift_endAccess(&v104);
                  v73 = v97;
                  v74 = *(void (**)(char *, uint64_t))(v96 + 8);
                  v74(v99, v97);
                  v74(v98, v73);
                  goto LABEL_29;
                }

              }
              else
              {
                v64 = v60;
              }
              v65 = swift_bridgeObjectRetain(v49);
              v66 = sub_1000D2E08(v65);
              v68 = v67;
              swift_bridgeObjectRelease(v49);
              v69 = v109;
              v70 = v60;
              sub_100006B94(v66, v68);
              v62 = v70;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v21 + 8));
              v102 = *(_QWORD *)(v21 + 8);
              *(_QWORD *)(v21 + 8) = 0x8000000000000000;
              sub_1000CF3F8(v66, v68, (uint64_t)v60, v69, isUniquelyReferenced_nonNull_native);
              v72 = *(_QWORD *)(v21 + 8);
              *(_QWORD *)(v21 + 8) = v102;

              swift_bridgeObjectRelease(v72);
              sub_10001A55C(v69);
              sub_100007348(v66, v68);
              v61 = v62;
              goto LABEL_28;
            }
LABEL_43:
            __break(1u);
            return;
          }
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_41;
  }
LABEL_29:
  v75 = *(_QWORD *)(v21 + 8);
  if (!*(_QWORD *)(v75 + 16))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v21 + 8));
LABEL_34:
    v80 = 0;
    v81 = 0;
    v82 = 1;
    goto LABEL_35;
  }
  v76 = v109;
  swift_bridgeObjectRetain(v75);
  v77 = sub_100005E08((uint64_t)v76);
  if ((v78 & 1) == 0)
  {

    goto LABEL_34;
  }
  v79 = *(_QWORD *)(v75 + 56) + 24 * v77;
  v80 = *(id *)v79;
  v81 = *(_QWORD *)(v79 + 8);
  v82 = *(_QWORD *)(v79 + 16);
  sub_100006B68(*(id *)v79, v81, (void *)v82);

LABEL_35:
  v102 = (uint64_t)v80;
  v103[0] = v81;
  v103[1] = v82;
  v83 = sub_100006A6C((uint64_t *)&unk_1001A7C60);
  Optional.unwrap(_:file:line:)(&v104, sub_10001A7B4, 0, "SharingViewService/SDCommonSwifty.swift", 39, 2, 298, v83);
  sub_100055998((uint64_t)v80, v81, (void *)v82);
  v84 = v106;
  sub_100024034(*(uint64_t *)&v104, v105, v106);
  swift_bridgeObjectRelease(v75);
  if (v84)
  {
    v85 = sub_100055824();
    v86 = swift_allocError(&type metadata for SDRunState, v85, 0, 0);
    *v87 = 1;
    v100 = v86;
    swift_willThrow(v86);
  }
  else
  {
    swift_beginAccess(v95, &v104, 33, 0);
    v88 = v93 | 0x8000000000000000;
    sub_1000D0A84(0xD000000000000014, v93 | 0x8000000000000000);
    v90 = v89;
    swift_endAccess(&v104);
    swift_bridgeObjectRelease(v90);
    sub_100021A0C(1359, 0xD00000000000006ELL, v92 | 0x8000000000000000, v94, 0xD000000000000014, v88, 0, 0xE000000000000000);
  }

}

unint64_t sub_100047340()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_10004735C()
{
  return 0xD000000000000015;
}

void *sub_100047378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  void *result;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31[3];
  _BYTE v32[24];
  void *v33;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, v32, 33, 0);
  sub_1000C967C(v31, 0xD00000000000001DLL, 0x8000000100138780);
  v3 = v31[1];
  swift_endAccess(v32);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(1364, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD00000000000001DLL, 0x8000000100138780, 0, 0xE000000000000000);
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues);
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues, v32, 0, 0);
  v6 = *v5;
  if (!*(_QWORD *)(v6 + 16)
    || (swift_bridgeObjectRetain(v6), sub_100005E38(13), v8 = v7, swift_bridgeObjectRelease(v6), (v8 & 1) == 0))
  {
    v15 = sub_100055824();
    v16 = swift_allocError(&type metadata for SDRunState, v15, 0, 0);
    *v17 = 1;
    return (void *)swift_willThrow(v16);
  }
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentSecondReadRequest) & 1) != 0)
    goto LABEL_20;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sentSecondReadRequest) = 1;
  v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars);
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars, v31, 0, 0);
  v10 = *v9;
  if (*(_QWORD *)(*v9 + 16))
  {
    swift_bridgeObjectRetain(*v9);
    v11 = sub_100005E38(11);
    if ((v12 & 1) != 0)
    {
      v13 = *(void **)(*(_QWORD *)(v10 + 56) + 8 * v11);
      v14 = v13;
    }
    else
    {
      v13 = 0;
    }
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v13 = 0;
  }
  v33 = v13;
  v29 = sub_100006A6C((uint64_t *)&unk_1001A7C50);
  Optional.unwrap(_:file:line:)(v30, sub_1000476F0, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1369, v29);

  v19 = *v9;
  if (*(_QWORD *)(*v9 + 16))
  {
    v20 = (void *)v30[0];
    swift_bridgeObjectRetain(v19);
    v21 = sub_100005E38(12);
    if ((v22 & 1) != 0)
    {
      v23 = *(void **)(*(_QWORD *)(v19 + 56) + 8 * v21);
      v24 = v23;
    }
    else
    {
      v23 = 0;
    }
    swift_bridgeObjectRelease(v19);
  }
  else
  {
    v20 = (void *)v30[0];
    v23 = 0;
  }
  v33 = v23;
  Optional.unwrap(_:file:line:)(v30, sub_10004770C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1370, v29);

  v25 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph;
  result = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph);
  if (result)
  {
    v26 = (void *)v30[0];
    objc_msgSend(result, "readValueForCharacteristic:", v20);
    result = *(void **)(v1 + v25);
    if (result)
    {
      objc_msgSend(result, "readValueForCharacteristic:", v26);

LABEL_20:
      swift_beginAccess(v2, v30, 33, 0);
      sub_1000D0A84(0xD00000000000001DLL, 0x8000000100138780);
      v28 = v27;
      swift_endAccess(v30);
      swift_bridgeObjectRelease(v28);
      return (void *)sub_100021A0C(1375, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD00000000000001DLL, 0x8000000100138780, 0, 0xE000000000000000);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1000476F0()
{
  return 0xD000000000000019;
}

unint64_t sub_10004770C()
{
  return 0xD000000000000019;
}

uint64_t sub_100047728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18[3];
  _BYTE v19[24];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, v19, 33, 0);
  sub_1000C967C(v18, 0xD000000000000016, 0x8000000100138760);
  v3 = v18[1];
  swift_endAccess(v19);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(1380, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000016, 0x8000000100138760, 0, 0xE000000000000000);
  v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues);
  swift_beginAccess(v5, v19, 0, 0);
  v6 = *v5;
  if (!*(_QWORD *)(*v5 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain(*v5);
  sub_100005E38(11);
  v8 = v7;
  swift_bridgeObjectRelease(v6);
  if ((v8 & 1) == 0)
    goto LABEL_6;
  v9 = *v5;
  if (*(_QWORD *)(*v5 + 16)
    && (swift_bridgeObjectRetain(*v5), sub_100005E38(12), v11 = v10, swift_bridgeObjectRelease(v9), (v11 & 1) != 0))
  {
    swift_beginAccess(v2, v18, 33, 0);
    sub_1000D0A84(0xD000000000000016, 0x8000000100138760);
    v13 = v12;
    swift_endAccess(v18);
    swift_bridgeObjectRelease(v13);
    return sub_100021A0C(1385, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000016, 0x8000000100138760, 0, 0xE000000000000000);
  }
  else
  {
LABEL_6:
    v15 = sub_100055824();
    v16 = swift_allocError(&type metadata for SDRunState, v15, 0, 0);
    *v17 = 1;
    return swift_willThrow(v16);
  }
}

void sub_10004792C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  id v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  unint64_t v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;

  v2 = v1;
  v66 = 0x3A73736563637573;
  v67 = 0xE900000000000020;
  v4 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v5 = 1702195828;
  else
    v5 = 0x65736C6166;
  if (v4)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease(v6);
  v9 = v66;
  v8 = v67;
  v10 = v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations, &v66, 33, 0);
  v68 = (unint64_t)"ensureCleanedUp(success:)";
  sub_1000C967C((uint64_t *)&v63, 0xD00000000000001ELL, 0x8000000100138D60);
  v11 = v64;
  swift_endAccess(&v66);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  swift_bridgeObjectRetain(v8);
  sub_1000219E4(1390, 0xD00000000000006ELL, 0x8000000100138430, v12, 0xD00000000000001ELL, 0x8000000100138D60, v9, v8);
  swift_bridgeObjectRelease_n(v8, 2);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairState + 8) == 1
    && *(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairState) == 4)
  {
    v60 = v12;
    v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars);
    swift_beginAccess(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars, &v66, 0, 0);
    v15 = *v14;
    if (*(_QWORD *)(v15 + 16))
    {
      swift_bridgeObjectRetain(v15);
      v16 = sub_100005E38(15);
      if ((v17 & 1) != 0)
      {
        v18 = *(void **)(*(_QWORD *)(v15 + 56) + 8 * v16);
        v19 = v18;
      }
      else
      {
        v18 = 0;
      }
      swift_bridgeObjectRelease(v15);
    }
    else
    {
      v18 = 0;
    }
    v26 = sub_100006A6C((uint64_t *)&unk_1001A7C50);
    Optional.unwrap(_:file:line:)(&v63, sub_100047F0C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 1399, v26);

    v27 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_periph);
    if (!v27)
    {
      __break(1u);
      return;
    }
    v28 = v63;
    v29 = v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager;
    swift_beginAccess(v29, &v63, 33, 0);
    v30 = *(_QWORD *)(*(_QWORD *)(v29 + 8) + 16);
    v31 = v27;
    v61 = v28;
    if (v30)
    {
      v32 = v28;
      sub_100005E08((uint64_t)v32);
      if ((v33 & 1) != 0)
        goto LABEL_25;

      v28 = v61;
    }
    v34 = sub_100006A6C(&qword_1001A4350);
    v35 = swift_allocObject(v34, 33, 7);
    *(_OWORD *)(v35 + 16) = xmmword_100131C40;
    *(_BYTE *)(v35 + 32) = a1 & 1;
    v36 = sub_1000D2E08(v35);
    v37 = v28;
    v39 = v38;
    swift_bridgeObjectRelease(v35);
    v40 = v31;
    v41 = v37;
    sub_100006B94(v36, v39);
    v31 = v40;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v29 + 8));
    v62 = *(_QWORD *)(v29 + 8);
    *(_QWORD *)(v29 + 8) = 0x8000000000000000;
    sub_1000CF3F8(v36, v39, (uint64_t)v27, v41, isUniquelyReferenced_nonNull_native);
    v43 = *(_QWORD *)(v29 + 8);
    *(_QWORD *)(v29 + 8) = v62;

    swift_bridgeObjectRelease(v43);
    sub_10001A55C(v41);
    sub_100007348(v36, v39);
    v32 = v31;
LABEL_25:

    swift_endAccess(&v63);
    v44 = *(_QWORD *)(v29 + 8);
    if (*(_QWORD *)(v44 + 16))
    {
      v45 = v61;
      swift_bridgeObjectRetain(v44);
      v46 = sub_100005E08((uint64_t)v45);
      if ((v47 & 1) != 0)
      {
        v48 = *(_QWORD *)(v44 + 56) + 24 * v46;
        v49 = *(id *)v48;
        v50 = *(_QWORD *)(v48 + 8);
        v51 = *(_QWORD *)(v48 + 16);
        sub_100006B68(*(id *)v48, v50, (void *)v51);

LABEL_31:
        v52 = sub_100006A6C((uint64_t *)&unk_1001A7C60);
        Optional.unwrap(_:file:line:)(&v63, sub_10001A7B4, 0, "SharingViewService/SDCommonSwifty.swift", 39, 2, 298, v52);
        sub_100055998((uint64_t)v49, v50, (void *)v51);
        v53 = v65;
        sub_100024034((uint64_t)v63, v64, v65);
        swift_bridgeObjectRelease(v44);
        if (v53)
        {
          v54 = sub_100055824();
          v55 = swift_allocError(&type metadata for SDRunState, v54, 0, 0);
          *v56 = 1;
          swift_willThrow(v55);
        }
        else
        {
          swift_beginAccess(v10, &v63, 33, 0);
          v57 = v68 | 0x8000000000000000;
          sub_1000D0A84(0xD00000000000001ELL, v68 | 0x8000000000000000);
          v59 = v58;
          swift_endAccess(&v63);
          swift_bridgeObjectRelease(v59);
          sub_100021A0C(1405, 0xD00000000000006ELL, 0x8000000100138430, v60, 0xD00000000000001ELL, v57, 0, 0xE000000000000000);
        }

        return;
      }

    }
    else
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v29 + 8));
    }
    v49 = 0;
    v50 = 0;
    v51 = 1;
    goto LABEL_31;
  }
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v20 = type metadata accessor for Logger(0, v13);
  v21 = sub_10000E8E8(v20, (uint64_t)qword_1001A4A60);
  v22 = Logger.logObject.getter(v21);
  v24 = static os_log_type_t.default.getter(v22, v23);
  if (os_log_type_enabled(v22, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v24, "Never paired. Skip receipt write.", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }

}

unint64_t sub_100047F0C()
{
  return 0xD000000000000025;
}

void sub_100047F28(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_100047F40(a1, a2, a3, a4, "%s - started... %s");
}

void sub_100047F34(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_100047F40(a1, a2, a3, a4, "%s - done. %s");
}

void sub_100047F40(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, const char *a5)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v10 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v10, (uint64_t)qword_1001A4A60);
  swift_bridgeObjectRetain_n(a2, 2);
  v11 = swift_bridgeObjectRetain_n(a4, 2);
  v12 = Logger.logObject.getter(v11);
  v14 = static os_log_type_t.default.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v18 = v16;
    *(_DWORD *)v15 = 136315394;
    swift_bridgeObjectRetain(a2);
    v17 = sub_10001EFA4(a1, a2, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain(a4);
    v17 = sub_10001EFA4(a3, a4, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v15 + 14, v15 + 22);
    swift_bridgeObjectRelease_n(a4, 3);
    _os_log_impl((void *)&_mh_execute_header, v12, v14, a5, (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a2, 2);
  }
}

void sub_100048148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  NSObject *oslog;
  uint64_t v13;
  _QWORD v14[3];
  _BYTE v15[8];
  uint64_t v16;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v3 = type metadata accessor for Logger(0, v2);
    sub_10000E8E8(v3, (uint64_t)qword_1001A4A60);
    swift_errorRetain(a1);
    v4 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter(oslog, v5);
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = swift_slowAlloc(32, -1);
      v16 = v8;
      *(_DWORD *)v7 = 136315138;
      swift_getErrorValue(a1, v15, v14);
      v9 = Error.localizedDescription.getter(v14[1], v14[2]);
      v11 = v10;
      v13 = sub_10001EFA4(v9, v10, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, v14, v7 + 4, v7 + 12);
      swift_bridgeObjectRelease(v11);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Error in invalidatePairing: %s", v7, 0xCu);
      swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
}

void sub_100048338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;

  v3 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "showDone", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_doneVC;
  v11 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_doneVC);
  v12 = v11;
  v13 = v11;
  if (!v11)
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389DoneViewController()), "initWithMainController:", v3);
    v12 = *(void **)(v3 + v10);
  }
  *(_QWORD *)(v3 + v10) = v13;
  v14 = v11;

  v15 = *(_QWORD *)(v3 + v10);
  if (v15)
  {
    v16 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_mapViewController);
    v17 = *(void **)(v15 + OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_mapViewController);
    *(_QWORD *)(v15 + OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_mapViewController) = v16;
    v18 = v16;

  }
  v19 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
  if (v19)
  {
    v20 = *(void **)(v3 + v10);
    if (v20)
    {
      sub_10011757C(v19, v20);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100048494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12[2];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_inFlightOperations;
  swift_beginAccess(v2, v11, 33, 0);
  sub_1000C967C(v12, 0xD000000000000016, 0x8000000100138D20);
  v3 = v12[1];
  swift_endAccess(v11);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_om);
  sub_1000219E4(1485, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000016, 0x8000000100138D20, 0, 0xE000000000000000);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_needsMulti) & 1) != 0)
  {
    v5 = sub_100055824();
    v6 = swift_allocError(&type metadata for SDRunState, v5, 0, 0);
    *v7 = 1;
    return swift_willThrow(v6);
  }
  else
  {
    swift_beginAccess(v2, v11, 33, 0);
    sub_1000D0A84(0xD000000000000016, 0x8000000100138D20);
    v10 = v9;
    swift_endAccess(v11);
    swift_bridgeObjectRelease(v10);
    return sub_100021A0C(1487, 0xD00000000000006ELL, 0x8000000100138430, v4, 0xD000000000000016, 0x8000000100138D20, 0, 0xE000000000000000);
  }
}

uint64_t sub_100048624(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  void *object;
  Swift::String v5;
  _QWORD v7[3];
  _BYTE v8[8];
  uint64_t v9;
  unint64_t v10;

  v9 = 0;
  v10 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v2._object = (void *)0x8000000100138DB0;
  v2._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v2);
  swift_getErrorValue(a1, v8, v7);
  v3._countAndFlagsBits = Error.localizedDescription.getter(v7[1], v7[2]);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  String.append(_:)(v5);
  return v9;
}

void sub_1000486C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;

  v3 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "pairLocked", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairLockedVC;
  v11 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairLockedVC);
  v12 = v11;
  v13 = v11;
  if (!v11)
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389PairLockedViewController()), "initWithMainController:", v3);
    v12 = *(void **)(v3 + v10);
  }
  *(_QWORD *)(v3 + v10) = v13;
  v14 = v11;

  v15 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
  if (v15)
  {
    v16 = *(void **)(v3 + v10);
    if (v16)
    {
      sub_10011757C(v15, v16);
      *(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_shownError) = 1;
      sub_1000323A4(0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100048810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Strong;
  void *v6;
  _BYTE v9[24];

  v2 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  URL.init(string:)(0x2F3A796D646E6966, 0xEE00736D6574692FLL);
  swift_beginAccess(a1, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1000356AC(5, (uint64_t)v4, 0, 0, 1597);

  }
  return sub_10000D858((uint64_t)v4, &qword_1001A3618);
}

void sub_1000488E8(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "dismiss:", 5);

  }
}

void sub_100048944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v3 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "startTapped", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  *(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_didTapStart) = 1;
  v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sessionError);
  if (v10)
  {
    swift_errorRetain(*(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_sessionError));
    sub_10003F708(v10);
    swift_errorRelease(v10);
    return;
  }
  v11 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleVC;
  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleVC))
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for B389RolePickerViewController()), "initWithMainController:", v3);
    v13 = *(void **)(v3 + v11);
    *(_QWORD *)(v3 + v11) = v12;

  }
  v14 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
  if (v14)
  {
    v15 = *(void **)(v3 + v11);
    if (v15)
    {
      sub_10011757C(v14, v15);
      sub_100031994(v16);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100048AB8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _BYTE v22[24];
  objc_super v23;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_linkingVC);
  if (v1)
  {
    v18 = v1;
    v23.receiver = v18;
    v23.super_class = (Class)sub_100006A6C((uint64_t *)&unk_1001A54F0);
    v21 = objc_msgSendSuper2(&v23, "contentViewController");
    v2 = type metadata accessor for B389LinkingViewController();
    v19 = swift_dynamicCastClassUnconditional(v21, v2, 0, 0, 0);
    v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDInfo);
    swift_beginAccess(v0 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_appleIDInfo, v22, 0, 0);
    v4 = *v3;
    v5 = v3[1];
    v6 = (void *)v3[2];
    v7 = v3[3];
    v8 = v3[4];
    v9 = (uint64_t *)(v19 + OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo);
    v11 = *(_QWORD *)(v19 + OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo);
    v10 = *(_QWORD *)(v19 + OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo + 8);
    v12 = *(void **)(v19 + OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo + 16);
    v13 = *(_QWORD *)(v19 + OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo + 24);
    v20 = v0;
    v14 = *(_QWORD *)(v19 + OBJC_IVAR____TtC18SharingViewService25B389LinkingViewController_appleIDInfo + 32);
    *v9 = v4;
    v9[1] = v5;
    v9[2] = (uint64_t)v6;
    v9[3] = v7;
    v9[4] = v8;
    sub_100055E3C(v4, v5, v6, v7, v8);
    sub_100055E3C(v4, v5, v6, v7, v8);
    v15 = sub_1000174C4(v11, v10, v12, v13, v14);
    sub_100014DB0(v15, v16);
    sub_1000174C4(v4, v5, v6, v7, v8);

    v17 = *(void **)(v20 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
    if (v17)
    {
      sub_10011757C(v17, v18);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100048C60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v2 = type metadata accessor for Logger(0, a2);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A4A60);
  v4 = Logger.logObject.getter(v3);
  v6 = static os_log_type_t.default.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v6, "Connection Timed Out", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100117218(v8, v9, v10);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  sub_100043404(v12, v14, 0, 0, 0, 0);
  return swift_bridgeObjectRelease(v14);
}

void sub_100048E00(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v3 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v3, (uint64_t)qword_1001A4A60);
  v4 = a1;
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v10 = objc_msgSend(v4, "state");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v8 + 4, v8 + 12);

    _os_log_impl((void *)&_mh_execute_header, v5, v7, "centralManagerDidUpdateState: %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  sub_100031994(v9);
}

void sub_100049204(void *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  Swift::String v36;
  void *object;
  Swift::String v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  _QWORD v53[3];
  char v54[8];
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;

  v3 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredMainService;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredMainService))
    return;
  v5 = a1;
  v6 = objc_msgSend(a1, "services");
  if (!v6)
    return;
  v7 = v6;
  v8 = sub_100013194(0, &qword_1001A5558, CBService_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    if (v10)
      goto LABEL_5;
LABEL_32:
    swift_bridgeObjectRelease_n(v9, 2);
    return;
  }
LABEL_28:
  if (v9 < 0)
    v45 = v9;
  else
    v45 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v10 = _CocoaArrayWrapper.endIndex.getter(v45);
  if (!v10)
    goto LABEL_32;
LABEL_5:
  v50 = v5;
  v52 = a2;
  v47 = v8;
  v48 = v3;
  v49 = v2;
  v2 = sub_100013194(0, (unint64_t *)&qword_1001A7260, NSObject_ptr);
  v3 = v9 & 0xC000000000000001;
  v8 = 4;
  while (1)
  {
    v5 = (void *)(v8 - 4);
    if (v3)
      v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v9);
    else
      v11 = *(id *)(v9 + 8 * v8);
    v12 = v11;
    a2 = v8 - 3;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    v13 = objc_msgSend(v11, "UUID");
    if (qword_1001A2E50 != -1)
      swift_once(&qword_1001A2E50, sub_1000077A8);
    v14 = static NSObject.== infix(_:_:)(v13, qword_1001AD3A8);

    if ((v14 & 1) != 0)
      break;

    ++v8;
    if (a2 == v10)
      goto LABEL_32;
  }
  swift_bridgeObjectRelease_n(v9, 2);
  v15 = qword_1001A2F40;
  v17 = v12;
  if (v15 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v18 = type metadata accessor for Logger(0, v16);
  sub_10000E8E8(v18, (uint64_t)qword_1001A4A60);
  v19 = v50;
  swift_errorRetain(v52);
  v20 = v19;
  v21 = swift_errorRetain(v52);
  v22 = Logger.logObject.getter(v21);
  v24 = static os_log_type_t.default.getter(v22, v23);
  if (os_log_type_enabled(v22, v24))
  {
    v51 = v17;
    v25 = swift_slowAlloc(22, -1);
    v46 = swift_slowAlloc(64, -1);
    v57 = v46;
    *(_DWORD *)v25 = 136315394;
    v26 = objc_msgSend(v20, "services");
    if (v26)
    {
      v27 = v26;
      v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v47);

      v29 = swift_bridgeObjectRetain(v28);
      v30 = Array.description.getter(v29, v47);
      v32 = v31;
      swift_bridgeObjectRelease_n(v28, 2);
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(0xE000000000000000);
      v56 = 0xE90000000000003CLL;
      v35 = sub_100006A6C(&qword_1001A5560);
      v36._countAndFlagsBits = _typeName(_:qualified:)(v35, 0);
      object = v36._object;
      String.append(_:)(v36);
      swift_bridgeObjectRelease(object);
      v38._countAndFlagsBits = 0x656E6F6E2E3ELL;
      v38._object = (void *)0xE600000000000000;
      String.append(_:)(v38);
      v30 = 0x6C616E6F6974704FLL;
      v32 = 0xE90000000000003CLL;
    }
    v55 = sub_10001EFA4(v30, v32, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v25 + 4, v25 + 12);

    swift_bridgeObjectRelease(v32);
    *(_WORD *)(v25 + 12) = 2080;
    if (v52)
    {
      swift_getErrorValue(v52, v54, v53);
      v39 = Error.localizedDescription.getter(v53[1], v53[2]);
      v41 = v40;
    }
    else
    {
      v55 = 0;
      v56 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v56);
      v41 = 0x8000000100136820;
      v39 = 0xD000000000000015;
    }
    v34 = v48;
    v33 = v49;
    v17 = v51;
    v55 = sub_10001EFA4(v39, v41, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v25 + 14, v25 + 22);
    swift_bridgeObjectRelease(v41);
    swift_errorRelease(v52);
    swift_errorRelease(v52);
    _os_log_impl((void *)&_mh_execute_header, v22, v24, "didDiscoverServices: %s, error? %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v46, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_errorRelease(v52);
    swift_errorRelease(v52);

    v34 = v48;
    v33 = v49;
  }
  v42 = *(void **)(v33 + v34);
  *(_QWORD *)(v33 + v34) = v17;
  v43 = v17;

  sub_100031994(v44);
}

void sub_100049864(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, void *))
{
  id v10;
  id v11;
  id v12;
  id v13;

  v10 = a3;
  v11 = a4;
  v12 = a1;
  v13 = a5;
  a6(v11, a5);

}

void sub_1000498E4(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  objc_class *started;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  uint64_t v77;
  id v78;
  unsigned int v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  void *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void *v96;
  __objc2_ivar *v97;
  id v98;
  NSString v99;
  NSString v100;
  id v101;
  char *v102;
  uint64_t v103;
  _QWORD *v104;
  void (*v105)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v106;
  uint64_t (*v107)(char *, uint64_t, uint64_t);
  int v108;
  void (*v109)(char *, char *, uint64_t);
  void *v110;
  id v111;
  NSString v112;
  NSString v113;
  id v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  uint64_t v125;
  void *v126;
  _QWORD *v127;
  id v128;
  __objc2_ivar *v129;
  void **p_cache;
  void *v131;
  Class v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  char *v140;
  NSURL *v141;
  void *v142;
  void *v143;
  _QWORD *v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  char *v149;
  uint64_t v150;
  id v151;
  Class isa;
  void *v153;
  id v154;
  id v155;
  id v156;
  void *v157;
  id v158;
  void *v159;
  id v160;
  void *v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  double v167;
  id v168;
  void *v169;
  NSString v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  id v174;
  NSString v175;
  char *v176;
  id v177;
  NSString v178;
  NSString v179;
  id v180;
  char *v181;
  SVSCardContainerView *v182;
  UILabel v183;
  _UNKNOWN **v184;
  NSString v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  NSString v190;
  void *v191;
  NSString v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  NSString v196;
  id v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  id v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  id v210;
  NSString v211;
  NSString v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  NSString v216;
  id v217;
  id v218;
  id v219;
  id v220;
  Class v221;
  id v222;
  id v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  id v231;
  id v232;
  id v233;
  char *v234;
  NSString v235;
  id v236;
  id v237;
  id v238;
  id v239;
  id v240;
  id v241;
  id v242;
  id v243;
  uint64_t v244;
  void *v245;
  id v246;
  id v247;
  id v248;
  char *v249;
  NSString v250;
  char **v251;
  char *v252;
  void *v253;
  uint64_t v254;
  id v255;
  void *v256;
  void *v257;
  uint64_t v258;
  id v259;
  id v260;
  SVSCardContainerView *v261;
  UIButton v262;
  char *v263;
  void *v264;
  char *v265;
  id v266;
  uint64_t v267;
  NSObject *v268;
  id v269;
  char *v270;
  void *v271;
  void *v272;
  char *v273;
  id v274;
  uint64_t v275;
  id v276;
  uint64_t v277;
  _QWORD *v278;
  char *v279;
  NSObject *v280;
  uint64_t v281;
  os_log_type_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  unint64_t v288;
  char *v289;
  char *v290;
  _QWORD *v291;
  os_log_t v292;
  uint64_t v293;
  void *v294;
  char *v295;
  id v296;
  void *v297;
  void *v298;
  id v299;
  id v300;
  char *v301;
  char *v302;
  id v303;
  uint64_t v304;
  void *v305;
  void (*v306)(char *, uint64_t);
  uint64_t v307;
  os_log_t v308;
  _QWORD *v309;
  void *v310;
  char *v311;
  uint64_t v312;
  char *v313;
  char *v314;
  char *v315;
  char *v316;
  id v317;
  char *v318;
  Class v319;
  char *v320;
  uint64_t v321;
  char *v322;
  char *v323;
  char *v324;
  _QWORD *v325;
  char v326[8];
  uint64_t v327;
  uint64_t v328;
  char v329[8];
  char *v330;
  uint64_t v331;
  objc_super v332;
  id aBlock[5];
  uint64_t v334;
  char v335[8];
  char v336[8];
  char v337[8];
  NSURL v338;
  NSURL v339;

  v2 = v1;
  v4 = sub_100006A6C(&qword_1001A3618);
  v5 = __chkstk_darwin(v4);
  v319 = (Class)((char *)&v307 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __chkstk_darwin(v5);
  v322 = (char *)&v307 - v8;
  v9 = __chkstk_darwin(v7);
  v314 = (char *)&v307 - v10;
  v11 = __chkstk_darwin(v9);
  v316 = (char *)&v307 - v12;
  v13 = __chkstk_darwin(v11);
  v318 = (char *)&v307 - v14;
  __chkstk_darwin(v13);
  v323 = (char *)&v307 - v15;
  v16 = type metadata accessor for URL(0);
  v325 = *(_QWORD **)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v307 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v313 = (char *)&v307 - v21;
  v22 = __chkstk_darwin(v20);
  v315 = (char *)&v307 - v23;
  __chkstk_darwin(v22);
  v320 = (char *)&v307 - v24;
  v25 = type metadata accessor for B389PresentationConfig.Mode(0);
  v26 = __chkstk_darwin(v25);
  v28 = (unsigned __int8 *)&v307 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v307 - v29;
  v31 = sub_100006A6C(&qword_1001A5428);
  v32 = __chkstk_darwin(v31);
  v34 = (char *)&v307 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v36 = (char *)&v307 - v35;
  started = (objc_class *)type metadata accessor for B389StartViewController();
  v332.receiver = v2;
  v332.super_class = started;
  objc_msgSendSuper2(&v332, "viewWillAppear:", a1 & 1);
  v38 = (char *)objc_msgSend(v2, "mainController");
  if (!v38)
  {
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v43 = type metadata accessor for Logger(0, v39);
    v44 = sub_10000E8E8(v43, (uint64_t)qword_1001A4A60);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Main controller not found", v47, 2u);
      swift_slowDealloc(v47, -1, -1);
    }
    goto LABEL_81;
  }
  v40 = v38;
  v41 = (char *)v2 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_viewWillAppearTimestamp;
  v42 = *((_BYTE *)v2 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_viewWillAppearTimestamp + 8) == 1;
  v321 = v16;
  if (v42)
    v48 = mach_continuous_time();
  else
    v48 = *(_QWORD *)v41;
  *(_QWORD *)v41 = v48;
  v41[8] = 0;
  v49 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v2, "handleTapOutside");
  objc_msgSend(v49, "setDelegate:", v2);
  objc_msgSend(v49, "setNumberOfTapsRequired:", 1);
  objc_msgSend(v49, "setCancelsTouchesInView:", 0);
  v50 = objc_msgSend(v2, "view");
  if (!v50)
  {
    __break(1u);
    goto LABEL_89;
  }
  v51 = v50;
  v311 = v19;
  v317 = v49;
  objc_msgSend(v50, "addGestureRecognizer:", v49);

  v324 = v40;
  v52 = (uint64_t)&v40[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig];
  swift_beginAccess(&v40[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig], v337, 0, 0);
  sub_100006BD8(v52, (uint64_t)v36, &qword_1001A5428);
  v53 = type metadata accessor for B389PresentationConfig(0);
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48);
  if (v54(v36, 1, v53) == 1)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  sub_100023F5C((uint64_t)v36, (uint64_t)v30, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023F5C((uint64_t)v30, (uint64_t)v28, type metadata accessor for B389PresentationConfig.Mode);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v28, v25);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v56 = v28[*(int *)(sub_100006A6C(&qword_1001A7DF0) + 48)];
      v57 = type metadata accessor for UUID(0);
      (*(void (**)(unsigned __int8 *, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v28, v57);
    }
    else
    {
      sub_100023FA0((uint64_t)v28, type metadata accessor for B389PresentationConfig.Mode);
      v56 = 0;
    }
  }
  else
  {
    v56 = *v28;
  }
  sub_100023FA0((uint64_t)v30, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023FA0((uint64_t)v36, type metadata accessor for B389PresentationConfig);
  if ((v56 & 1) != 0)
  {
    v58 = -50;
    goto LABEL_20;
  }
  sub_100006BD8(v52, (uint64_t)v34, &qword_1001A5428);
  if (v54(v34, 1, v53) != 1)
  {
    v58 = *(_QWORD *)&v34[*(int *)(v53 + 36)];
    sub_100023FA0((uint64_t)v34, type metadata accessor for B389PresentationConfig);
LABEL_20:
    v59 = v324;
    v60 = v321;
    v61 = type metadata accessor for SDB389BubbleMonitor();
    swift_allocObject(v61, 88, 7);
    v62 = sub_10001ADC0(v58);
    v63 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bubbleMonitor;
    v64 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bubbleMonitor);
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bubbleMonitor) = v62;
    swift_release(v64);
    v65 = *(_QWORD *)((char *)v2 + v63);
    if (v65)
    {
      sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
      v66 = swift_retain(v65);
      v67 = static OS_dispatch_queue.main.getter(v66);
      swift_beginAccess(v65 + 24, v336, 1, 0);
      v68 = *(void **)(v65 + 24);
      *(_QWORD *)(v65 + 24) = v67;
      swift_release(v65);

      v69 = *(_QWORD *)((char *)v2 + v63);
      if (v69)
      {
        v70 = swift_allocObject(&unk_100179378, 24, 7);
        swift_unknownObjectWeakInit(v70 + 16, v2);
        swift_beginAccess(v69 + 48, v335, 1, 0);
        v71 = *(_QWORD *)(v69 + 48);
        v72 = *(_QWORD *)(v69 + 56);
        *(_QWORD *)(v69 + 48) = sub_10005B544;
        *(_QWORD *)(v69 + 56) = v70;
        sub_100012F60(v71, v72);
        if (qword_1001A30A8 != -1)
          swift_once(&qword_1001A30A8, sub_1000990D8);
        v73 = sub_10009375C(v2, 0, *(double *)&qword_1001AD718);
        v75 = v74;

        v76 = objc_msgSend(v2, "containerView");
        objc_msgSend(v76, "setSwipeDismissible:", 1);

        objc_msgSend(v2, "setModalPresentationStyle:", 4);
        v77 = *(_QWORD *)((char *)v2 + v63);
        if (v77)
        {
          swift_retain(*(_QWORD *)((char *)v2 + v63));
          sub_10001AE3C((uint64_t)nullsub_4, 0);
          swift_release(v77);
          v78 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
          aBlock[0] = 0;
          v79 = objc_msgSend(v78, "setCategory:withOptions:error:", AVAudioSessionCategoryAmbient, 1, aBlock);

          v80 = aBlock[0];
          if (v79)
          {
            v81 = aBlock[0];
          }
          else
          {
            v82 = aBlock[0];
            v83 = _convertNSErrorToError(_:)(v80);

            swift_willThrow(v84);
            if (qword_1001A2F40 != -1)
              swift_once(&qword_1001A2F40, sub_100030AB0);
            v86 = type metadata accessor for Logger(0, v85);
            sub_10000E8E8(v86, (uint64_t)qword_1001A4A60);
            swift_errorRetain(v83);
            v87 = swift_errorRetain(v83);
            v88 = Logger.logObject.getter(v87);
            v89 = static os_log_type_t.error.getter(v88);
            if (os_log_type_enabled(v88, v89))
            {
              v90 = (uint8_t *)swift_slowAlloc(12, -1);
              v91 = (void *)swift_slowAlloc(32, -1);
              aBlock[0] = v91;
              *(_DWORD *)v90 = 136315138;
              swift_getErrorValue(v83, v329, v326);
              v92 = Error.localizedDescription.getter(v327, v328);
              v94 = v93;
              v330 = (char *)sub_10001EFA4(v92, v93, (uint64_t *)aBlock);
              v60 = v321;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v330, &v331, v90 + 4, v90 + 12);
              swift_bridgeObjectRelease(v94);
              swift_errorRelease(v83);
              swift_errorRelease(v83);
              _os_log_impl((void *)&_mh_execute_header, v88, v89, "setCategory failed: %s", v90, 0xCu);
              swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v91, -1, -1);
              swift_slowDealloc(v90, -1, -1);

              swift_errorRelease(v83);
            }
            else
            {
              swift_errorRelease(v83);
              swift_errorRelease(v83);
              swift_errorRelease(v83);

            }
            v59 = v324;
          }
          v95 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_assetBundle;
          v96 = *(void **)&v59[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_assetBundle];
          v97 = &stru_100197000;
          if (v96)
          {
            v312 = OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_assetBundle;
            v98 = v96;
            v99 = String._bridgeToObjectiveC()();
            v100 = String._bridgeToObjectiveC()();
            v101 = objc_msgSend(v98, "URLForResource:withExtension:", v99, v100);

            v102 = v59;
            if (v101)
            {
              v103 = (uint64_t)v318;
              static URL._unconditionallyBridgeFromObjectiveC(_:)(v101);

              v104 = v325;
              v105 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v325[7];
              v105(v103, 0, 1, v60);
            }
            else
            {
              v104 = v325;
              v105 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v325[7];
              v103 = (uint64_t)v318;
              v105((uint64_t)v318, 1, 1, v60);
            }
            v106 = v323;
            sub_10005B590(v103, (uint64_t)v323, &qword_1001A3618);
            v107 = (uint64_t (*)(char *, uint64_t, uint64_t))v104[6];
            v108 = v107(v106, 1, v60);
            v95 = v312;
            if (v108 != 1)
            {
              LODWORD(v318) = v56;
              v109 = (void (*)(char *, char *, uint64_t))v104[4];
              v109(v320, v106, v60);
              v110 = *(void **)&v102[v95];
              if (v110)
              {
                v111 = v110;
                v112 = String._bridgeToObjectiveC()();
                v113 = String._bridgeToObjectiveC()();
                v114 = objc_msgSend(v111, "URLForResource:withExtension:", v112, v113);

                if (v114)
                {
                  v115 = v314;
                  static URL._unconditionallyBridgeFromObjectiveC(_:)(v114);

                  v116 = 0;
                }
                else
                {
                  v116 = 1;
                  v115 = v314;
                }
                v105((uint64_t)v115, v116, 1, v60);
                v117 = (uint64_t)v115;
                v106 = v316;
                sub_10005B590(v117, (uint64_t)v316, &qword_1001A3618);
                v118 = v107(v106, 1, v60);
                v104 = v325;
                v95 = v312;
                if (v118 != 1)
                {
                  v109(v315, v106, v60);
                  v269 = objc_allocWithZone((Class)AVURLAsset);
                  v270 = v320;
                  URL._bridgeToObjectiveC()(&v339);
                  v272 = v271;
                  v273 = (char *)objc_msgSend(v269, "initWithURL:options:", v271, 0);

                  v274 = objc_allocWithZone((Class)AVPlayerItem);
                  v316 = v273;
                  v276 = objc_msgSend(v274, "initWithAsset:", v273);
                  if (qword_1001A2F40 != -1)
                    swift_once(&qword_1001A2F40, sub_100030AB0);
                  v277 = type metadata accessor for Logger(0, v275);
                  sub_10000E8E8(v277, (uint64_t)qword_1001A4A60);
                  v278 = v325;
                  v279 = v313;
                  ((void (*)(char *, char *, uint64_t))v325[2])(v313, v270, v60);
                  v323 = (char *)v276;
                  v280 = Logger.logObject.getter(v323);
                  v282 = static os_log_type_t.default.getter(v280, v281);
                  v97 = &stru_100197000;
                  if (os_log_type_enabled(v280, v282))
                  {
                    v283 = v60;
                    v284 = swift_slowAlloc(22, -1);
                    v309 = (_QWORD *)swift_slowAlloc(8, -1);
                    v310 = (void *)swift_slowAlloc(32, -1);
                    aBlock[0] = v310;
                    *(_DWORD *)v284 = 136315394;
                    v314 = (char *)(v284 + 4);
                    v285 = sub_100005B80((unint64_t *)&unk_1001A7CD0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
                    v308 = v280;
                    v286 = dispatch thunk of CustomStringConvertible.description.getter(v283, v285);
                    v288 = v287;
                    v330 = (char *)sub_10001EFA4(v286, v287, (uint64_t *)aBlock);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v330, &v331, v314, v284 + 12);
                    swift_bridgeObjectRelease(v288);
                    v314 = (char *)v278[1];
                    ((void (*)(char *, uint64_t))v314)(v279, v283);
                    *(_WORD *)(v284 + 12) = 2112;
                    v289 = v323;
                    v330 = v323;
                    v290 = v323;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v330, &v331, v284 + 14, v284 + 22);
                    v291 = v309;
                    *v309 = v289;

                    v292 = v308;
                    _os_log_impl((void *)&_mh_execute_header, v308, v282, "engageURL: %s, engageAsset: %@", (uint8_t *)v284, 0x16u);
                    v293 = sub_100006A6C(&qword_1001A5420);
                    swift_arrayDestroy(v291, 1, v293);
                    swift_slowDealloc(v291, -1, -1);
                    v294 = v310;
                    swift_arrayDestroy(v310, 1, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v294, -1, -1);
                    swift_slowDealloc(v284, -1, -1);

                  }
                  else
                  {
                    v314 = (char *)v278[1];
                    ((void (*)(char *, uint64_t))v314)(v279, v60);

                    v295 = v323;
                  }
                  v56 = (int)v318;
                  v296 = objc_allocWithZone((Class)AVURLAsset);
                  URL._bridgeToObjectiveC()(&v338);
                  v298 = v297;
                  v299 = objc_msgSend(v296, "initWithURL:options:", v297, 0);

                  v300 = objc_msgSend(objc_allocWithZone((Class)AVPlayerItem), "initWithAsset:", v299);
                  objc_allocWithZone((Class)type metadata accessor for SVSProxVideoView());
                  v301 = v323;
                  v302 = v323;
                  v303 = v300;
                  v304 = sub_100025294(v301, v300, 2u);
                  v305 = *(void **)((char *)v2 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player);
                  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player) = v304;

                  v60 = v321;
                  v306 = (void (*)(char *, uint64_t))v314;
                  ((void (*)(char *, uint64_t))v314)(v315, v321);
                  v306(v320, v60);
                  v59 = v324;
                  v125 = (uint64_t)v322;
                  v95 = v312;
LABEL_52:
                  v126 = *(void **)&v59[v95];
                  v127 = v325;
                  if (v126)
                  {
                    v128 = objc_msgSend(v126, v97[64].name, SFDeviceAssetNameAdjustments, 0);
                    v129 = &stru_100197000;
                    p_cache = ProxCardKitTestFeaturesViewController.cache;
                    if (v128)
                    {
                      v131 = v128;
                      v132 = v319;
                      static URL._unconditionallyBridgeFromObjectiveC(_:)(v128);

                      v133 = 0;
                    }
                    else
                    {
                      v133 = 1;
                      v132 = v319;
                    }
                    v105((uint64_t)v132, v133, 1, v60);
                    sub_10005B590((uint64_t)v132, v125, &qword_1001A3618);
                    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v127[6])(v125, 1, v60) != 1)
                    {
                      v140 = v311;
                      ((void (*)(char *, uint64_t, uint64_t))v127[4])(v311, v125, v60);
                      URL._bridgeToObjectiveC()(v141);
                      v143 = v142;
                      v144 = v127;
                      v145 = (id)SFAdjustmentFiltersForAssetTypeAndURL(2, v142);

                      v146 = sub_100013194(0, (unint64_t *)&unk_1001A5540, CAFilter_ptr);
                      v147 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v145, v146);

                      v148 = *(void **)((char *)v2 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player);
                      if (v148)
                      {
                        v149 = v148;
                        v150 = sub_1000619E4(v147);
                        swift_bridgeObjectRelease(v147);
                        v151 = objc_msgSend(*(id *)&v149[OBJC_IVAR____TtC18SharingViewService16SVSProxVideoView_movieView], "layer");
                        isa = Array._bridgeToObjectiveC()().super.isa;
                        objc_msgSend(v151, "setFilters:", isa);

                        swift_bridgeObjectRelease(v150);
                        ((void (*)(char *, uint64_t))v144[1])(v140, v60);
                      }
                      else
                      {
                        ((void (*)(char *, uint64_t))v144[1])(v140, v60);
                        swift_bridgeObjectRelease(v147);
                      }
LABEL_66:
                      v323 = (char *)OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player;
                      v153 = *(void **)((char *)v2 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player);
                      if (v153)
                      {
                        v154 = v153;
                        v155 = objc_msgSend(v2, v129[108].name);
                        if (qword_1001A30C0 != -1)
                          swift_once(&qword_1001A30C0, sub_100099214);
                        v156 = sub_1000984E4(v154, v155, *(double *)&qword_1001AD730);

                        v157 = *(void **)((char *)v2
                                        + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_playerYConstraint);
                        *(_QWORD *)((char *)v2
                                  + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_playerYConstraint) = v156;

                      }
                      v158 = objc_msgSend(v2, v129[108].name);
                      v159 = *(void **)((char *)v2
                                      + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bottomInfoLbl);
                      objc_msgSend(v158, "addSubview:", v159);

                      v160 = objc_msgSend(v2, v129[108].name);
                      v161 = *(void **)((char *)v2
                                      + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_topInfoLbl);
                      objc_msgSend(v160, "addSubview:", v161);

                      v162 = objc_msgSend(v2, v129[108].name);
                      v163 = sub_1000992F4(v162);
                      v164 = objc_msgSend(v163, "bottomAnchor");
                      v165 = objc_msgSend(v162, "bottomAnchor");
                      if (qword_1001A30C8 != -1)
                        swift_once(&qword_1001A30C8, sub_100099228);
                      v166 = objc_msgSend(v164, "constraintEqualToAnchor:constant:", v165, -*((double *)&xmmword_1001A6F78 + 1));

                      LODWORD(v167) = 1148846080;
                      objc_msgSend(v166, "setPriority:", v167);
                      objc_msgSend(v166, "setActive:", 1);

                      v320 = (char *)objc_opt_self(UIColor);
                      v168 = objc_msgSend(v320, "grayColor");
                      objc_msgSend(v163, "setTitleColor:forState:", v168, 2);

                      v169 = *(void **)((char *)v2
                                      + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_mainBtn);
                      *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_mainBtn) = v163;
                      v325 = v163;

                      LODWORD(v163) = v56;
                      SFIsGreenTeaDevice();
                      v170 = String._bridgeToObjectiveC()();
                      v171 = sub_100117314(v170);

                      static String._unconditionallyBridgeFromObjectiveC(_:)(v171);
                      v173 = v172;

                      v174 = v325;
                      v316 = "continuePressed";
                      objc_msgSend(v325, "addTarget:action:forControlEvents:", v2);
                      v175 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease(v173);
                      objc_msgSend(v174, "setTitle:forState:", v175, 0);

                      objc_msgSend(v174, "setAlpha:", 0.0);
                      v176 = (char *)objc_opt_self(NSBundle);
                      v177 = objc_msgSend(v176, "mainBundle");
                      v178 = String._bridgeToObjectiveC()();
                      v179 = String._bridgeToObjectiveC()();
                      v180 = sub_100117218(v177, v178, v179);

                      v321 = static String._unconditionallyBridgeFromObjectiveC(_:)(v180);
                      v322 = v181;

                      v182 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
                      v183.super.super.super.isa = setupTitleLabel(inContainerView:textAlignment:)(v182, NSTextAlignmentCenter).super.super.super.isa;

                      v184 = &_ss5ErrorP10FoundationAC13CustomNSErrorRzrlE7_domainSSvg_ptr;
                      if ((_DWORD)v163)
                      {
                        LODWORD(v318) = (_DWORD)v163;
                        v185 = String._bridgeToObjectiveC()();
                        v186 = sub_100116484(v185);

                        static String._unconditionallyBridgeFromObjectiveC(_:)(v186);
                        v188 = v187;

                        v315 = v176;
                        v189 = objc_msgSend(v176, "mainBundle");
                        v190 = String._bridgeToObjectiveC()();
                        v319 = v183.super.super.super.isa;
                        v191 = v190;
                        v192 = String._bridgeToObjectiveC()();
                        v193 = sub_100117218(v189, v191, v192);

                        static String._unconditionallyBridgeFromObjectiveC(_:)(v193);
                        v195 = v194;
                        swift_bridgeObjectRelease(v188);

                        v196 = String._bridgeToObjectiveC()();
                        swift_bridgeObjectRelease(v195);
                        objc_msgSend(v159, "setText:", v196);

                        objc_msgSend(v159, "setTextAlignment:", 1);
                        v314 = (char *)objc_opt_self(UIFont);
                        v197 = objc_msgSend(v314, "systemFontOfSize:weight:", 17.0, UIFontWeightMedium);
                        objc_msgSend(v159, "setFont:", v197);

                        objc_msgSend(v159, "setAlpha:", 0.0);
                        v198 = objc_msgSend(v320, "lightGrayColor");
                        objc_msgSend(v159, "setTextColor:", v198);

                        objc_msgSend(v159, "setNumberOfLines:", 0);
                        objc_msgSend(v159, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                        v199 = objc_msgSend(v2, "containerView");
                        objc_msgSend(v199, "addSubview:", v159);

                        v200 = objc_msgSend(v159, "leadingAnchor");
                        v201 = v325;
                        v202 = objc_msgSend(v325, "leadingAnchor");
                        v203 = objc_msgSend(v200, "constraintEqualToAnchor:", v202);

                        objc_msgSend(v203, "setActive:", 1);
                        v204 = objc_msgSend(v159, "trailingAnchor");
                        v205 = objc_msgSend(v201, "trailingAnchor");
                        v206 = objc_msgSend(v204, "constraintEqualToAnchor:", v205);

                        objc_msgSend(v206, "setActive:", 1);
                        v207 = objc_msgSend(v159, "topAnchor");
                        v208 = objc_msgSend(v161, "bottomAnchor");
                        v209 = objc_msgSend(v207, "constraintEqualToAnchor:constant:", v208, 5.0);

                        objc_msgSend(v209, "setActive:", 1);
                        v210 = objc_msgSend(v315, "mainBundle");
                        v211 = String._bridgeToObjectiveC()();
                        v212 = String._bridgeToObjectiveC()();
                        v213 = sub_100117218(v210, v211, v212);

                        static String._unconditionallyBridgeFromObjectiveC(_:)(v213);
                        v215 = v214;

                        v216 = String._bridgeToObjectiveC()();
                        swift_bridgeObjectRelease(v215);
                        objc_msgSend(v161, "setText:", v216);

                        objc_msgSend(v161, "setTextAlignment:", 1);
                        v217 = objc_msgSend(v314, "systemFontOfSize:weight:", 17.0, UIFontWeightMedium);
                        objc_msgSend(v161, "setFont:", v217);

                        objc_msgSend(v161, "setAlpha:", 0.0);
                        v218 = objc_msgSend(v320, "lightGrayColor");
                        objc_msgSend(v161, "setTextColor:", v218);

                        objc_msgSend(v161, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                        objc_msgSend(v161, "setNumberOfLines:", 2);
                        v219 = objc_msgSend(v2, "containerView");
                        objc_msgSend(v219, "addSubview:", v161);

                        v220 = objc_msgSend(v161, "topAnchor");
                        v221 = v319;
                        v222 = -[objc_class bottomAnchor](v319, "bottomAnchor");
                        v223 = objc_msgSend(v220, "constraintEqualToAnchor:constant:", v222, 5.0);

                        objc_msgSend(v223, "setActive:", 1);
                        v224 = objc_msgSend(v161, "heightAnchor");
                        v225 = objc_msgSend(v224, "constraintEqualToConstant:", 20.0);

                        objc_msgSend(v225, "setActive:", 1);
                        v226 = objc_msgSend(v161, "widthAnchor");
                        v227 = objc_msgSend(v2, "containerView");
                        v228 = objc_msgSend(v227, "widthAnchor");

                        v229 = objc_msgSend(v226, "constraintEqualToAnchor:", v228);
                        objc_msgSend(v229, "setActive:", 1);

                        v230 = objc_msgSend(v161, "centerXAnchor");
                        v231 = objc_msgSend(v2, "containerView");
                        v232 = objc_msgSend(v231, "centerXAnchor");

                        v233 = objc_msgSend(v230, "constraintEqualToAnchor:", v232);
                        objc_msgSend(v233, "setActive:", 1);

                        v234 = v322;
                        v235 = String._bridgeToObjectiveC()();
                        swift_bridgeObjectRelease(v234);
                        -[objc_class setText:](v221, "setText:", v235);

                        -[objc_class setAlpha:](v221, "setAlpha:", 0.0);
                        v236 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
                        objc_msgSend(v236, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                        objc_msgSend(v236, "setHidden:", 1);
                        v237 = objc_msgSend(v2, "containerView");
                        objc_msgSend(v237, "addSubview:", v236);

                        v238 = objc_msgSend(v236, "topAnchor");
                        v239 = objc_msgSend(v159, "bottomAnchor");
                        v240 = objc_msgSend(v238, "constraintEqualToAnchor:", v239);

                        objc_msgSend(v240, "setActive:", 1);
                        v241 = objc_msgSend(v236, "bottomAnchor");
                        v242 = objc_msgSend(v325, "topAnchor");
                        v243 = objc_msgSend(v241, "constraintEqualToAnchor:", v242);

                        objc_msgSend(v243, "setActive:", 1);
                        v244 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_playerYConstraint;
                        objc_msgSend(*(id *)((char *)v2+ OBJC_IVAR____TtC18SharingViewService23B389StartViewController_playerYConstraint), "setActive:", 0);
                        v245 = *(void **)&v323[(_QWORD)v2];
                        if (v245)
                        {
                          v246 = objc_msgSend(v245, "centerYAnchor");
                          v247 = objc_msgSend(v236, "centerYAnchor");
                          v248 = objc_msgSend(v246, "constraintEqualToAnchor:", v247);

                        }
                        else
                        {
                          v248 = 0;
                        }
                        v251 = &selRef_setTransitioningDelegate_;
                        v252 = v316;
                        v253 = *(void **)((char *)v2 + v244);
                        *(_QWORD *)((char *)v2 + v244) = v248;

                        objc_msgSend(*(id *)((char *)v2 + v244), "setActive:", 1);
                        v163 = v325;
                        objc_msgSend(v325, "removeTarget:action:forControlEvents:", v2, v252, 64);
                        objc_msgSend(v163, "addTarget:action:forControlEvents:", v2, "transitionOutOfMulti", 64);

                        LOBYTE(v163) = (_BYTE)v318;
                        v183.super.super.super.isa = v319;
                        v184 = &_ss5ErrorP10FoundationAC13CustomNSErrorRzrlE7_domainSSvg_ptr;
                      }
                      else
                      {
                        v249 = v322;
                        v250 = String._bridgeToObjectiveC()();
                        swift_bridgeObjectRelease(v249);
                        -[objc_class setText:](v183.super.super.super.isa, "setText:", v250);

                        -[objc_class setAlpha:](v183.super.super.super.isa, "setAlpha:", 0.0);
                        v251 = &selRef_setTransitioningDelegate_;
                      }
                      v254 = swift_allocObject(&unk_1001793A0, 48, 7);
                      *(UILabel *)(v254 + 16) = v183;
                      *(_BYTE *)(v254 + 24) = (_BYTE)v163;
                      v255 = v325;
                      *(_QWORD *)(v254 + 32) = v2;
                      *(_QWORD *)(v254 + 40) = v255;
                      v256 = (void *)objc_opt_self(v184[322]);
                      aBlock[4] = sub_10005B580;
                      v334 = v254;
                      aBlock[0] = _NSConcreteStackBlock;
                      aBlock[1] = (id)1107296256;
                      aBlock[2] = sub_10001BB50;
                      aBlock[3] = &unk_1001793B8;
                      v257 = _Block_copy(aBlock);
                      v258 = v334;
                      v259 = v255;
                      v45 = v183.super.super.super.isa;
                      v260 = v2;
                      swift_retain(v254);
                      swift_release(v258);
                      objc_msgSend(v256, "animateWithDuration:delay:options:animations:completion:", 65538, v257, 0, 1.5, 0.7);
                      _Block_release(v257);
                      v261 = (SVSCardContainerView *)objc_msgSend(v260, "containerView");
                      v262.super.super.super.super.isa = setupXButton(inContainerView:)(v261).super.super.super.super.isa;

                      objc_msgSend(v262.super.super.super.super.isa, v251[503], v260, "dismissPressed", 64);
                      v263 = *(char **)&v323[(_QWORD)v2];
                      if (v263)
                      {
                        v264 = *(void **)&v263[OBJC_IVAR____TtC18SharingViewService16SVSProxVideoView_movieView];
                        v265 = v263;
                        v266 = objc_msgSend(v264, "layer");
                        v267 = objc_opt_self(AVPlayerLayer);
                        v268 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v266, v267, 0, 0, 0), "player");

                        -[NSObject play](v268, "play");
                        swift_release(v254);

                        v45 = v268;
                      }
                      else
                      {

                        swift_release(v254);
                      }
LABEL_81:

                      return;
                    }
                  }
                  else
                  {
                    v105(v125, 1, 1, v60);
                    v129 = &stru_100197000;
                    p_cache = (void **)(ProxCardKitTestFeaturesViewController + 16);
                  }
                  sub_10000D858(v125, &qword_1001A3618);
                  if (p_cache[488] != (void *)-1)
                    swift_once(&qword_1001A2F40, sub_100030AB0);
                  v135 = type metadata accessor for Logger(0, v134);
                  v136 = sub_10000E8E8(v135, (uint64_t)qword_1001A4A60);
                  v137 = Logger.logObject.getter(v136);
                  v138 = static os_log_type_t.error.getter(v137);
                  if (os_log_type_enabled(v137, v138))
                  {
                    v139 = (uint8_t *)swift_slowAlloc(2, -1);
                    *(_WORD *)v139 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v137, v138, "Could not find adjustment file", v139, 2u);
                    swift_slowDealloc(v139, -1, -1);
                  }

                  goto LABEL_66;
                }
              }
              else
              {
                v106 = v316;
                v105((uint64_t)v316, 1, 1, v60);
              }
              ((void (*)(char *, uint64_t))v104[1])(v320, v60);
              v56 = (int)v318;
            }
            v59 = v102;
            v97 = &stru_100197000;
          }
          else
          {
            v105 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v325[7];
            v106 = v323;
            v105((uint64_t)v323, 1, 1, v60);
          }
          sub_10000D858((uint64_t)v106, &qword_1001A3618);
          if (qword_1001A2F40 != -1)
            swift_once(&qword_1001A2F40, sub_100030AB0);
          v120 = type metadata accessor for Logger(0, v119);
          v121 = sub_10000E8E8(v120, (uint64_t)qword_1001A4A60);
          v122 = Logger.logObject.getter(v121);
          v123 = static os_log_type_t.error.getter(v122);
          if (os_log_type_enabled(v122, v123))
          {
            v124 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v124 = 0;
            _os_log_impl((void *)&_mh_execute_header, v122, v123, "Could not find engage or loop movies", v124, 2u);
            swift_slowDealloc(v124, -1, -1);
          }

          v125 = (uint64_t)v322;
          goto LABEL_52;
        }
        goto LABEL_92;
      }
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
LABEL_93:
  __break(1u);
}

void sub_10004BD94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t Strong;
  void *v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char v74[24];
  char v75[24];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v66 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v65 = (char *)&v62 - v8;
  v70 = sub_100006A6C(&qword_1001A5550);
  __chkstk_darwin(v70);
  v71 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for B389PresentationConfig.Mode(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v62 - v14;
  v16 = sub_100006A6C(&qword_1001A5428);
  __chkstk_darwin(v16);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100006A6C(&qword_1001A42A0);
  v20 = __chkstk_darwin(v19);
  v67 = (uint64_t)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v62 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v62 - v25;
  a2 += 16;
  swift_beginAccess(a2, v75, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v28 = (void *)Strong;
    v63 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v64 = a1;
    v63(v26, a1, v4);
    v69 = v5;
    v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v29(v26, 0, 1, v4);
    v68 = v28;
    v30 = (char *)objc_msgSend(v28, "mainController");
    if (v30)
    {
      v31 = v30;
      v32 = (uint64_t)&v30[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig];
      swift_beginAccess(&v30[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig], v74, 0, 0);
      sub_100006BD8(v32, (uint64_t)v18, &qword_1001A5428);

      v33 = type metadata accessor for B389PresentationConfig(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v18, 1, v33) == 1)
      {
        __break(1u);
        return;
      }
      sub_100023F5C((uint64_t)v18, (uint64_t)v15, type metadata accessor for B389PresentationConfig.Mode);
      sub_100023F5C((uint64_t)v15, (uint64_t)v13, type metadata accessor for B389PresentationConfig.Mode);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v13, v10);
      v35 = v68;
      if (EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v24, v13, v4);
        v29(v24, 0, 1, v4);
      }
      else
      {
        v29(v24, 1, 1, v4);
        sub_100023FA0((uint64_t)v13, type metadata accessor for B389PresentationConfig.Mode);
      }
      v36 = v70;
      v37 = (uint64_t)v71;
      sub_100023FA0((uint64_t)v15, type metadata accessor for B389PresentationConfig.Mode);
      sub_100023FA0((uint64_t)v18, type metadata accessor for B389PresentationConfig);
    }
    else
    {
      v29(v24, 1, 1, v4);
      v35 = v68;
      v36 = v70;
      v37 = (uint64_t)v71;
    }
    v38 = v37 + *(int *)(v36 + 48);
    sub_100006BD8((uint64_t)v26, v37, &qword_1001A42A0);
    sub_100006BD8((uint64_t)v24, v38, &qword_1001A42A0);
    v39 = v69;
    v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
    if (v40(v37, 1, v4) == 1)
    {
      sub_10000D858((uint64_t)v24, &qword_1001A42A0);
      sub_10000D858((uint64_t)v26, &qword_1001A42A0);
      if (v40(v38, 1, v4) == 1)
      {
        sub_10000D858(v37, &qword_1001A42A0);
LABEL_16:
        if (qword_1001A2F40 != -1)
          swift_once(&qword_1001A2F40, sub_100030AB0);
        v47 = type metadata accessor for Logger(0, v41);
        sub_10000E8E8(v47, (uint64_t)qword_1001A4A60);
        v48 = v66;
        v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v63)(v66, v64, v4);
        v50 = Logger.logObject.getter(v49);
        v52 = static os_log_type_t.default.getter(v50, v51);
        if (os_log_type_enabled(v50, v52))
        {
          v53 = (uint8_t *)swift_slowAlloc(12, -1);
          v54 = v39;
          v55 = swift_slowAlloc(32, -1);
          v73 = v55;
          *(_DWORD *)v53 = 136315138;
          v56 = sub_100005B80(&qword_1001A5450, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v57 = dispatch thunk of CustomStringConvertible.description.getter(v4, v56);
          v59 = v58;
          v72 = sub_10001EFA4(v57, v58, &v73);
          v35 = v68;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v53 + 4, v53 + 12);
          swift_bridgeObjectRelease(v59);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v4);
          _os_log_impl((void *)&_mh_execute_header, v50, v52, "Lost %s", v53, 0xCu);
          swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v55, -1, -1);
          swift_slowDealloc(v53, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v39 + 8))(v48, v4);
        }

        v60 = objc_msgSend(v35, "mainController");
        if (v60)
        {
          v61 = v60;
          objc_msgSend(v60, "dismiss:", 7);

        }
        goto LABEL_23;
      }
    }
    else
    {
      v42 = v67;
      sub_100006BD8(v37, v67, &qword_1001A42A0);
      if (v40(v38, 1, v4) != 1)
      {
        v43 = v65;
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v65, v38, v4);
        v44 = sub_100005B80((unint64_t *)&qword_1001A5530, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v45 = dispatch thunk of static Equatable.== infix(_:_:)(v42, v43, v4, v44);
        v46 = *(void (**)(char *, uint64_t))(v39 + 8);
        v46(v43, v4);
        sub_10000D858((uint64_t)v24, &qword_1001A42A0);
        sub_10000D858((uint64_t)v26, &qword_1001A42A0);
        v46((char *)v42, v4);
        sub_10000D858(v37, &qword_1001A42A0);
        if ((v45 & 1) != 0)
          goto LABEL_16;
LABEL_23:

        return;
      }
      sub_10000D858((uint64_t)v24, &qword_1001A42A0);
      sub_10000D858((uint64_t)v26, &qword_1001A42A0);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v4);
    }
    sub_10000D858(v37, &qword_1001A5550);
    goto LABEL_23;
  }
}

id sub_10004C4A8(void *a1, char a2, uint64_t a3, void *a4)
{
  objc_msgSend(a1, "setAlpha:", 1.0);
  if ((a2 & 1) != 0)
  {
    objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_topInfoLbl), "setAlpha:", 1.0);
    objc_msgSend(a4, "setAlpha:", 1.0);
    a4 = *(void **)(a3 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bottomInfoLbl);
  }
  return objc_msgSend(a4, "setAlpha:", 1.0);
}

id sub_10004C568(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_class *started;
  id result;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  objc_super v23;

  v3 = type metadata accessor for OSSignpostID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  started = (objc_class *)type metadata accessor for B389StartViewController();
  v23.receiver = v1;
  v23.super_class = started;
  result = objc_msgSendSuper2(&v23, "viewDidAppear:", a1 & 1);
  v9 = &v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_viewWillAppearTimestamp];
  if ((v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_viewWillAppearTimestamp + 8] & 1) == 0)
  {
    v10 = *(_QWORD *)v9;
    result = (id)b389_log(result);
    if (result)
    {
      v11 = OSSignpostID.init(log:)();
      v12 = static os_signpost_type_t.begin.getter(v11);
      result = (id)b389_log(v12);
      if (result)
      {
        v13 = result;
        v14 = sub_100006A6C((uint64_t *)&unk_1001A7D20);
        v15 = swift_allocObject(v14, 72, 7);
        v22 = xmmword_100131C40;
        *(_OWORD *)(v15 + 16) = xmmword_100131C40;
        *(_QWORD *)(v15 + 56) = &type metadata for UInt64;
        *(_QWORD *)(v15 + 64) = &protocol witness table for UInt64;
        *(_QWORD *)(v15 + 32) = v10;
        os_signpost(_:dso:log:name:signpostID:_:_:)(v12, &_mh_execute_header, v13, "TimeToShowB389ProxCard", 22, 2, v6, "enableTelemetry=YES %{public, signpost.description:begin_time}llu", 65, 2, v15);

        v16 = swift_bridgeObjectRelease(v15);
        v17 = static os_signpost_type_t.end.getter(v16);
        result = (id)b389_log(v17);
        if (result)
        {
          v18 = result;
          v19 = swift_allocObject(v14, 72, 7);
          *(_OWORD *)(v19 + 16) = v22;
          v20 = mach_continuous_time();
          *(_QWORD *)(v19 + 56) = &type metadata for UInt64;
          *(_QWORD *)(v19 + 64) = &protocol witness table for UInt64;
          *(_QWORD *)(v19 + 32) = v20;
          LOBYTE(v21) = 2;
          os_signpost(_:dso:log:name:signpostID:_:_:)(v17, &_mh_execute_header, v18, "TimeToShowB389ProxCard", 22, 2, v6, "%{public, signpost.description:end_time}llu", 43, v21, v19);

          swift_bridgeObjectRelease(v19);
          result = (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
          *(_QWORD *)v9 = 0;
          v9[8] = 1;
          return result;
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

void sub_10004C7F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  int v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  __n128 v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  id v51;
  __n128 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD aBlock[5];
  uint64_t v69;
  id v70[3];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v66 = *(_QWORD *)(v2 - 8);
  v67 = v2;
  __chkstk_darwin(v2);
  v65 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v63 = *(_QWORD *)(v4 - 8);
  v64 = v4;
  __chkstk_darwin(v4);
  v62 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchTime(0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v59 - v10;
  v12 = type metadata accessor for B389PresentationConfig.Mode(0);
  v13 = __chkstk_darwin(v12);
  v15 = (unsigned __int8 *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v59 - v16;
  v18 = sub_100006A6C(&qword_1001A5428);
  __chkstk_darwin(v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(v0, "mainController");
  v70[0] = v21;
  v22 = sub_100006A6C((uint64_t *)&unk_1001A5520);
  Optional.unwrap(_:file:line:)(aBlock, sub_10004CE30, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 2167, v22);

  v23 = (void *)aBlock[0];
  v24 = aBlock[0] + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig;
  swift_beginAccess(aBlock[0] + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig, v70, 0, 0);
  sub_100006BD8(v24, (uint64_t)v20, &qword_1001A5428);
  v25 = type metadata accessor for B389PresentationConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v20, 1, v25) == 1)
  {
    __break(1u);
    return;
  }
  sub_100023F5C((uint64_t)v20, (uint64_t)v17, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023F5C((uint64_t)v17, (uint64_t)v15, type metadata accessor for B389PresentationConfig.Mode);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v12);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      sub_100023FA0((uint64_t)v15, type metadata accessor for B389PresentationConfig.Mode);
      sub_100023FA0((uint64_t)v17, type metadata accessor for B389PresentationConfig.Mode);
      sub_100023FA0((uint64_t)v20, type metadata accessor for B389PresentationConfig);
      goto LABEL_12;
    }
    v27 = v15[*(int *)(sub_100006A6C(&qword_1001A7DF0) + 48)];
    v28 = type metadata accessor for UUID(0);
    (*(void (**)(unsigned __int8 *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v15, v28);
  }
  else
  {
    v27 = *v15;
  }
  sub_100023FA0((uint64_t)v17, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023FA0((uint64_t)v20, type metadata accessor for B389PresentationConfig);
  if (!v27)
  {
LABEL_12:

    return;
  }
  v29 = objc_msgSend(v1, "containerView");
  v30 = objc_msgSend(v29, "layer");

  objc_msgSend(v30, "removeAllAnimations");
  v31 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_playerYConstraint;
  v32 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_playerYConstraint];
  if (v32)
    objc_msgSend(v32, "setActive:", 0);
  v33 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player];
  if (v33)
  {
    v34 = objc_msgSend(v33, "centerYAnchor");
    v35 = objc_msgSend(v1, "containerView");
    v36 = objc_msgSend(v35, "centerYAnchor");

    v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);
  }
  else
  {
    v37 = 0;
  }
  v38 = *(void **)&v1[v31];
  *(_QWORD *)&v1[v31] = v37;

  v39 = *(void **)&v1[v31];
  if (v39)
    objc_msgSend(v39, "setActive:", 1);
  v40 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_mainBtn;
  v41 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_mainBtn];
  if (v41)
  {
    objc_msgSend(v41, "removeTarget:action:forControlEvents:", v1, "continuePressed", 64);
    v42 = *(void **)&v1[v40];
    if (v42)
      objc_msgSend(v42, "addTarget:action:forControlEvents:", v1, "continuePressed", 64);
  }
  sub_10004DDC0();
  sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
  v44 = (void *)static OS_dispatch_queue.main.getter(v43);
  static DispatchTime.now()();
  v45 = v11;
  + infix(_:_:)(v9, 1.0);
  v46 = v61;
  v60 = *(_QWORD *)(v60 + 8);
  ((void (*)(char *, uint64_t))v60)(v9, v61);
  v47 = swift_allocObject(&unk_100179328, 32, 7);
  *(_QWORD *)(v47 + 16) = v1;
  *(_QWORD *)(v47 + 24) = v23;
  aBlock[4] = sub_10005B4F8;
  v69 = v47;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001BB50;
  aBlock[3] = &unk_100179340;
  v48 = _Block_copy(aBlock);
  v49 = v69;
  v50 = v1;
  v51 = v23;
  v52 = swift_release(v49);
  v53 = v62;
  static DispatchQoS.unspecified.getter(v52);
  aBlock[0] = _swiftEmptyArrayStorage;
  v54 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v55 = sub_100006A6C((uint64_t *)&unk_1001A4330);
  v56 = sub_100012F94();
  v57 = v65;
  v58 = v67;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v55, v56, v67, v54);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v45, v53, v57, v48);
  _Block_release(v48);

  (*(void (**)(char *, uint64_t))(v66 + 8))(v57, v58);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v53, v64);
  ((void (*)(char *, uint64_t))v60)(v45, v46);
}

unint64_t sub_10004CE30()
{
  return 0xD000000000000015;
}

void sub_10004CE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  int v69;
  id v70;
  id v71;
  NSObject *v72;
  uint64_t v73;
  os_log_type_t v74;
  uint64_t v75;
  _QWORD *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  NSObject *v85;
  uint64_t v86;
  NSObject *v87;
  NSObject *v88;
  uint64_t v89;
  os_log_type_t v90;
  uint8_t *v91;
  NSObject **v92;
  NSObject *v93;
  uint64_t v94;
  NSObject *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  NSObject *v109;
  void *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  NSObject *v122;
  uint64_t v123;
  _QWORD *p_isa;
  _BYTE v125[16];
  char v126[24];

  v119 = a2;
  v113 = type metadata accessor for B389PresentationConfig.Mode(0);
  v3 = __chkstk_darwin(v113);
  v5 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v107 - v7;
  __chkstk_darwin(v6);
  v114 = (uint64_t)&v107 - v9;
  v10 = sub_100006A6C(&qword_1001A5428);
  __chkstk_darwin(v10);
  v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100006A6C(&qword_1001A42A0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v107 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v107 - v20;
  v22 = type metadata accessor for UUID(0);
  v116 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v112 = (char *)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v115 = (char *)&v107 - v26;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v111 = v5;
  v118 = v22;
  v27 = type metadata accessor for Logger(0, v25);
  v117 = sub_10000E8E8(v27, (uint64_t)qword_1001A4A60);
  v28 = Logger.logObject.getter(v117);
  v30 = static os_log_type_t.default.getter(v28, v29);
  if (os_log_type_enabled(v28, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v30, "Done waiting for multi scan", v31, 2u);
    swift_slowDealloc(v31, -1, -1);
  }

  v32 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bubbleMonitor;
  v33 = *(_QWORD *)(a1 + OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bubbleMonitor);
  if (!v33)
    goto LABEL_54;
  swift_beginAccess(v33 + 80, v126, 0, 0);
  v34 = *(_QWORD *)(v33 + 80);
  swift_retain(v33);
  v35 = swift_bridgeObjectRetain(v34);
  p_isa = sub_10001F750(v35);
  sub_10001F5E4((uint64_t *)&p_isa);
  v36 = sub_10001ABA8((unint64_t)p_isa);
  swift_release(v33);
  swift_bridgeObjectRelease(v34);
  v37 = *(_QWORD *)(a1 + v32);
  if (v37)
  {
    swift_retain(*(_QWORD *)(a1 + v32));
    sub_10001B934();
    swift_release(v37);
  }
  v38 = v118;
  if (!((unint64_t)v36 >> 62))
  {
    v39 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v36);
    if (v39)
      goto LABEL_10;
LABEL_48:
    v103 = swift_bridgeObjectRelease_n(v36, 2);
    v104 = Logger.logObject.getter(v103);
    v105 = static os_log_type_t.error.getter(v104);
    if (os_log_type_enabled(v104, v105))
    {
      v106 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v106 = 0;
      _os_log_impl((void *)&_mh_execute_header, v104, v105, "No more B389s in range...", v106, 2u);
      swift_slowDealloc(v106, -1, -1);
    }

    goto LABEL_51;
  }
  if (v36 < 0)
    v102 = v36;
  else
    v102 = v36 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v36);
  if (!_CocoaArrayWrapper.endIndex.getter(v102))
    goto LABEL_48;
LABEL_10:
  if ((v36 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v40 = *(id *)(v36 + 32);
      goto LABEL_13;
    }
    __break(1u);
LABEL_54:
    __break(1u);
  }
  v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v36);
LABEL_13:
  v41 = v40;
  swift_bridgeObjectRelease(v36);
  v42 = objc_msgSend(v41, "bleDevice");
  if (!v42)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))(v21, 1, 1, v38);
    goto LABEL_19;
  }
  v43 = v42;
  v44 = objc_msgSend(v42, "identifier");

  if (v44)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v44);

    v45 = v116;
    v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56);
    v46(v19, 0, 1, v38);
  }
  else
  {
    v45 = v116;
    v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56);
    v46(v19, 1, 1, v38);
  }
  sub_10005B590((uint64_t)v19, (uint64_t)v21, &qword_1001A42A0);
  v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  if (v47(v21, 1, v38) == 1)
  {
LABEL_19:
    swift_bridgeObjectRelease(v36);
    sub_10000D858((uint64_t)v21, &qword_1001A42A0);
    v48 = v41;
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.error.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc(22, -1);
      v52 = (_QWORD *)swift_slowAlloc(16, -1);
      *(_DWORD *)v51 = 138412546;
      v53 = -[NSObject bleDevice](v48, "bleDevice");
      v54 = v53;
      if (v53)
        p_isa = v53;
      else
        p_isa = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&p_isa, v125, v51 + 4, v51 + 12);
      *v52 = v54;

      *(_WORD *)(v51 + 12) = 2112;
      p_isa = &v48->isa;
      v95 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&p_isa, v125, v51 + 14, v51 + 22);
      v52[1] = v48;

      _os_log_impl((void *)&_mh_execute_header, v49, v50, "No identifier for ble device %@ on %@", (uint8_t *)v51, 0x16u);
      v96 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v52, 2, v96);
      swift_slowDealloc(v52, -1, -1);
      swift_slowDealloc(v51, -1, -1);
    }
    else
    {

      v49 = v48;
    }

    goto LABEL_51;
  }
  v110 = v41;
  v109 = *(NSObject **)(v45 + 32);
  ((void (*)(char *, char *, uint64_t))v109)(v115, v21, v38);
  v55 = v119 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig;
  swift_beginAccess(v119 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig, &p_isa, 0, 0);
  sub_100006BD8(v55, (uint64_t)v12, &qword_1001A5428);
  v56 = type metadata accessor for B389PresentationConfig(0);
  v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48);
  v108 = v56;
  v107 = v57;
  v58 = ((uint64_t (*)(char *, uint64_t))v57)(v12, 1);
  if ((_DWORD)v58 == 1)
  {
    __break(1u);
    goto LABEL_56;
  }
  v59 = v114;
  sub_100023F5C((uint64_t)v12, v114, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023F5C(v59, (uint64_t)v8, type metadata accessor for B389PresentationConfig.Mode);
  if (swift_getEnumCaseMultiPayload(v8, v113) == 1)
  {
    ((void (*)(char *, char *, uint64_t))v109)(v16, v8, v38);
    v46(v16, 0, 1, v38);
  }
  else
  {
    v46(v16, 1, 1, v38);
    sub_100023FA0((uint64_t)v8, type metadata accessor for B389PresentationConfig.Mode);
  }
  v60 = v110;
  sub_100023FA0(v114, type metadata accessor for B389PresentationConfig.Mode);
  if (v47(v16, 1, v38) == 1)
  {
    swift_bridgeObjectRelease(v36);
    sub_10000D858((uint64_t)v16, &qword_1001A42A0);
    v61 = sub_100023FA0((uint64_t)v12, type metadata accessor for B389PresentationConfig);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.error.getter(v62);
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "No btUUID", v64, 2u);
      swift_slowDealloc(v64, -1, -1);
    }

    v65 = (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v115, v38);
    goto LABEL_51;
  }
  v114 = v55;
  v66 = v112;
  ((void (*)(char *, char *, uint64_t))v109)(v112, v16, v38);
  sub_100023FA0((uint64_t)v12, type metadata accessor for B389PresentationConfig);
  v67 = sub_100005B80((unint64_t *)&qword_1001A5530, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v68 = v115;
  v69 = dispatch thunk of static Equatable.== infix(_:_:)(v115, v66, v38, v67);
  v70 = v60;
  swift_bridgeObjectRetain(v36);
  v71 = v70;
  v72 = Logger.logObject.getter(v71);
  v74 = static os_log_type_t.default.getter(v72, v73);
  if (os_log_type_enabled(v72, v74))
  {
    v75 = swift_slowAlloc(28, -1);
    v76 = (_QWORD *)swift_slowAlloc(8, -1);
    v109 = swift_slowAlloc(32, -1);
    v122 = v109;
    *(_DWORD *)v75 = 138412802;
    LODWORD(v110) = v69;
    v120 = (uint64_t)v71;
    v77 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121, v75 + 4, v75 + 12);
    *v76 = v71;

    *(_WORD *)(v75 + 12) = 1024;
    LODWORD(v120) = (v110 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, (char *)&v120 + 4, v75 + 14, v75 + 18);
    *(_WORD *)(v75 + 18) = 2080;
    v78 = sub_100013194(0, &qword_1001A4380, SFDevice_ptr);
    v79 = swift_bridgeObjectRetain(v36);
    v80 = Array.description.getter(v79, v78);
    v82 = v81;
    swift_bridgeObjectRelease(v36);
    v120 = sub_10001EFA4(v80, v82, (uint64_t *)&v122);
    v68 = v115;
    v83 = (char)v110;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121, v75 + 20, v75 + 28);
    swift_bridgeObjectRelease_n(v36, 2);
    swift_bridgeObjectRelease(v82);
    _os_log_impl((void *)&_mh_execute_header, v72, v74, "Closest B389 is %@. isDifferent: %{BOOL}d.\nall: %s", (uint8_t *)v75, 0x1Cu);
    v84 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v76, 1, v84);
    swift_slowDealloc(v76, -1, -1);
    v85 = v109;
    swift_arrayDestroy(v109, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v85, -1, -1);
    v86 = v75;
    v38 = v118;
    swift_slowDealloc(v86, -1, -1);

    if ((v83 & 1) == 0)
      goto LABEL_33;
LABEL_39:

    v97 = *(void (**)(char *, uint64_t))(v116 + 8);
    v97(v112, v38);
LABEL_43:
    v65 = ((uint64_t (*)(char *, uint64_t))v97)(v68, v38);
LABEL_51:
    *(_BYTE *)(v119 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_needsMulti) = 0;
    sub_100031994(v65);
    return;
  }

  swift_bridgeObjectRelease_n(v36, 2);
  if ((v69 & 1) != 0)
    goto LABEL_39;
LABEL_33:
  v87 = v71;
  v88 = Logger.logObject.getter(v87);
  v90 = static os_log_type_t.default.getter(v88, v89);
  if (os_log_type_enabled(v88, v90))
  {
    v91 = (uint8_t *)swift_slowAlloc(12, -1);
    v92 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v91 = 138412290;
    v122 = v87;
    v93 = v87;
    v38 = v118;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123, v91 + 4, v91 + 12);
    *v92 = v87;

    _os_log_impl((void *)&_mh_execute_header, v88, v90, "Setting different tag for multi: %@", v91, 0xCu);
    v94 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v92, 1, v94);
    swift_slowDealloc(v92, -1, -1);
    swift_slowDealloc(v91, -1, -1);
  }
  else
  {

    v88 = v87;
  }
  v98 = (uint64_t)v111;
  v99 = v114;

  v100 = *(int *)(sub_100006A6C(&qword_1001A7DF0) + 48);
  v101 = v116;
  (*(void (**)(uint64_t, char *, uint64_t))(v116 + 16))(v98, v68, v38);
  *(_BYTE *)(v98 + v100) = 1;
  swift_storeEnumTagMultiPayload(v98, v113, 1);
  swift_beginAccess(v99, &v122, 33, 0);
  v58 = v107(v99, 1, v108);
  if ((_DWORD)v58 != 1)
  {
    sub_10005B500(v98, v99);
    swift_endAccess(&v122);

    v97 = *(void (**)(char *, uint64_t))(v101 + 8);
    v97(v112, v38);
    goto LABEL_43;
  }
LABEL_56:
  __break(1u);
  swift_release(v58);
  __break(1u);
}

void sub_10004DBC0(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  objc_super v14;

  v2 = v1;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for B389StartViewController();
  objc_msgSendSuper2(&v14, "viewDidDisappear:", a1 & 1);
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bubbleMonitor];
  if (v4)
  {
    swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bubbleMonitor]);
    sub_10001B934();
    swift_release(v4);
    v5 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player;
    v6 = *(char **)&v2[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player];
    if (v6)
    {
      v7 = *(void **)&v6[OBJC_IVAR____TtC18SharingViewService16SVSProxVideoView_movieView];
      v8 = v6;
      v9 = objc_msgSend(v7, "layer");
      v10 = objc_opt_self(AVPlayerLayer);
      v11 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v9, v10, 0, 0, 0), "player");

      objc_msgSend(v11, "pause");
      v12 = objc_msgSend(v7, "layer");
      v13 = objc_opt_self(AVPlayerLayer);
      objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v12, v13, 0, 0, 0), "setPlayer:", 0);

      objc_msgSend(v8, "removeFromSuperview");
      v6 = *(char **)&v2[v5];
    }
    *(_QWORD *)&v2[v5] = 0;

  }
  else
  {
    __break(1u);
  }
}

void sub_10004DD84(uint64_t a1, uint64_t a2)
{
  sub_100050AD0(2227, a2);
}

void sub_10004DDC0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  void *v26;
  char *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  char v34[24];

  v1 = v0;
  v2 = sub_100006A6C(&qword_1001A5428);
  __chkstk_darwin(v2);
  v4 = &v34[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1001A2E58 != -1)
    swift_once(&qword_1001A2E58, sub_100007814);
  v5 = qword_1001AD3B0;
  v6 = String._bridgeToObjectiveC()();
  LOBYTE(v5) = objc_msgSend((id)v5, "BOOLForKey:", v6);

  if ((v5 & 1) == 0)
  {
    v8 = (char *)objc_msgSend(v1, "mainController");
    if (!v8)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    v9 = v8;
    v10 = (uint64_t)&v8[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig];
    swift_beginAccess(&v8[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig], v34, 0, 0);
    sub_100006BD8(v10, (uint64_t)v4, &qword_1001A5428);

    v11 = type metadata accessor for B389PresentationConfig(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v4, 1, v11) == 1)
    {
LABEL_20:
      __break(1u);
      return;
    }
    v12 = v4[*(int *)(v11 + 32)];
    sub_100023FA0((uint64_t)v4, type metadata accessor for B389PresentationConfig);
    if (v12 == 1)
    {
      sub_10004E2C8();
      return;
    }
  }
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v13 = type metadata accessor for Logger(0, v7);
  v14 = sub_10000E8E8(v13, (uint64_t)qword_1001A4A60);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.default.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "continuePressed", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend(v1, "mainController");
  if (v19)
  {
    v20 = v19;
    sub_100037064(1);

  }
  v21 = objc_msgSend(v1, "mainController");
  if (!v21)
  {
    __break(1u);
    goto LABEL_19;
  }
  v23 = v21;
  sub_100048944((uint64_t)v21, v22);

  v24 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player;
  v25 = *(char **)&v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player];
  if (v25)
  {
    v26 = *(void **)&v25[OBJC_IVAR____TtC18SharingViewService16SVSProxVideoView_movieView];
    v27 = v25;
    v28 = objc_msgSend(v26, "layer");
    v29 = objc_opt_self(AVPlayerLayer);
    v30 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v28, v29, 0, 0, 0), "player");

    objc_msgSend(v30, "pause");
    v31 = objc_msgSend(v26, "layer");
    v32 = objc_opt_self(AVPlayerLayer);
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v31, v32, 0, 0, 0), "setPlayer:", 0);

    objc_msgSend(v27, "removeFromSuperview");
    v25 = *(char **)&v1[v24];
  }
  *(_QWORD *)&v1[v24] = 0;

}

void sub_10004E184(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  id v11;

  v3 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "user tapped outside", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = objc_msgSend(v3, "mainController");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "dismiss:", 1);

  }
  else
  {
    __break(1u);
  }
}

void sub_10004E2C8()
{
  void *v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  id v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  void *v26;
  id v27;
  _QWORD v28[5];
  uint64_t v29;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = sub_100117218(v2, v3, v4);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v7 = v6;

  v8 = objc_msgSend(v1, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = sub_100117218(v8, v9, v10);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v13 = v12;

  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v14, v15, 1);

  v17 = objc_msgSend(v1, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = sub_100117218(v17, v18, v19);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = swift_allocObject(&unk_1001792D8, 24, 7);
  *(_QWORD *)(v23 + 16) = v0;
  v24 = v0;
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v28[4] = sub_10005B4C4;
  v29 = v23;
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 1107296256;
  v28[2] = sub_10001B5D0;
  v28[3] = &unk_1001792F0;
  v26 = _Block_copy(v28);
  swift_release(v29);
  v27 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v25, 0, v26);
  _Block_release(v26);

  objc_msgSend(v16, "addAction:", v27);
  objc_msgSend(v16, "setPreferredAction:", v27);
  objc_msgSend(v24, "presentViewController:animated:completion:", v16, 1, 0);

}

void sub_10004E648(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "mainController");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "dismiss:", 5);

  }
  else
  {
    __break(1u);
  }
}

id sub_10004E6CC(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  NSString v12;
  id v13;
  objc_super v15;

  v3[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_pairPressed_] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_mainBtn] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_playerYConstraint] = 0;
  v6 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_topInfoLbl;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bottomInfoLbl;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bubbleMonitor] = 0;
  v10 = &v8[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_viewWillAppearTimestamp];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = &v8[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bypassBatteryTooLowCheck];
  *(_QWORD *)v11 = 0xD00000000000001CLL;
  *((_QWORD *)v11 + 1) = 0x80000001001390E0;

  if (a2)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v12 = 0;
  }
  v15.receiver = v8;
  v15.super_class = (Class)type metadata accessor for B389StartViewController();
  v13 = objc_msgSendSuper2(&v15, "initWithNibName:bundle:", v12, a3);

  return v13;
}

id sub_10004E848(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_pairPressed_] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_mainBtn] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_playerYConstraint] = 0;
  v3 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_topInfoLbl;
  v4 = objc_allocWithZone((Class)UILabel);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bottomInfoLbl;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bubbleMonitor] = 0;
  v7 = &v5[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_viewWillAppearTimestamp];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v5[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bypassBatteryTooLowCheck];
  *(_QWORD *)v8 = 0xD00000000000001CLL;
  *((_QWORD *)v8 + 1) = 0x80000001001390E0;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for B389StartViewController();
  v9 = objc_msgSendSuper2(&v11, "initWithCoder:", a1);

  return v9;
}

id sub_10004E9A0(uint64_t a1)
{
  return sub_100014100(a1, type metadata accessor for B389StartViewController);
}

uint64_t type metadata accessor for B389StartViewController()
{
  return objc_opt_self(_TtC18SharingViewService23B389StartViewController);
}

void sub_10004EAB8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSString v4;
  void *v5;
  uint64_t v6;
  id v7;
  NSString v8;
  void *v9;
  uint64_t v10;
  id v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_btn);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_buttonText + 8);
    v3 = v1;
    if (v2)
    {
      swift_bridgeObjectRetain(v2);
      v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v2);
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v1, "setTitle:forState:", v4, 0);

  }
  v5 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleLbl);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleText + 8);
    v7 = v5;
    if (v6)
    {
      swift_bridgeObjectRetain(v6);
      v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v5, "setText:", v8);

  }
  v9 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_msgLbl);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_bodyText + 8);
  if (v10)
  {
    swift_bridgeObjectRetain(v10);
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v9, "setText:", v11);

}

void sub_10004EC34(char a1)
{
  char *v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  SVSCardContainerView *v17;
  Class isa;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  NSString v29;
  id v30;
  id v31;
  double v32;
  double v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  SVSCardContainerView *v61;
  Class v62;
  objc_class *v63;
  objc_super v64;

  v64.receiver = v1;
  v64.super_class = (Class)type metadata accessor for B389AppleIDViewController(0);
  objc_msgSendSuper2(&v64, "viewWillAppear:", a1 & 1);
  if (qword_1001A30A8 != -1)
    swift_once(&qword_1001A30A8, sub_1000990D8);
  v3 = sub_10009375C(v1, 0, *(double *)&qword_1001AD718);
  v5 = v4;

  v6 = objc_msgSend(v1, "containerView");
  objc_msgSend(v6, "setSwipeDismissible:", 0);

  objc_msgSend(v1, "setModalPresentationStyle:", 4);
  v7 = objc_msgSend(v1, "containerView");
  v8 = sub_1000992F4(v7);
  v9 = objc_msgSend(v8, "bottomAnchor");
  v10 = objc_msgSend(v7, "bottomAnchor");
  if (qword_1001A30C8 != -1)
    swift_once(&qword_1001A30C8, sub_100099228);
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -*((double *)&xmmword_1001A6F78 + 1));

  LODWORD(v12) = 1148846080;
  objc_msgSend(v11, "setPriority:", v12);
  objc_msgSend(v11, "setActive:", 1);

  v13 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_btn];
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_btn] = v8;
  v14 = v8;

  v15 = (void *)objc_opt_self(UIColor);
  v16 = objc_msgSend(v15, "labelColor");
  objc_msgSend(v14, "setTitleColor:forState:", v16, 0);

  objc_msgSend(v14, "addTarget:action:forControlEvents:", v1, "openSettingsPressed", 64);
  v17 = (SVSCardContainerView *)objc_msgSend(v1, "containerView");
  isa = setupTitleLabel(inContainerView:textAlignment:)(v17, NSTextAlignmentCenter).super.super.super.isa;

  -[objc_class setNumberOfLines:](isa, "setNumberOfLines:", 2);
  v19 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleLbl];
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleLbl] = isa;
  v63 = isa;

  v20 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_msgLbl];
  v21 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "defaultFontDescriptorWithTextStyle:addingSymbolicTraits:options:", UIFontTextStyleSubhead, 0x8000, 0);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v21, 0.0);

    objc_msgSend(v20, "setFont:", v23);
    v24 = objc_msgSend(v15, "blackColor");
    objc_msgSend(v20, "setTextColor:", v24);

    objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v20, "setTextAlignment:", 1);
    objc_msgSend(v20, "setNumberOfLines:", 5);
    v25 = objc_msgSend(v1, "containerView");
    objc_msgSend(v25, "addSubview:", v20);

    v26 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_lockImageView];
    v27 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_imageName + 8];
    if (v27)
      v28 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_imageName + 8];
    else
      v28 = 0xEE00676E702E6E6FLL;
    swift_bridgeObjectRetain(v27);
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v30 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v29);

    if (v30)
    {
      v31 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v31, "scale");
      v33 = v32;

      v34 = objc_msgSend(v30, "_applicationIconImageForFormat:precomposed:scale:", 2, 0, v33);
    }
    else
    {
      v34 = 0;
    }
    objc_msgSend(v26, "setImage:", v34);

    objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v35 = objc_msgSend(v1, "containerView");
    objc_msgSend(v35, "addSubview:", v26);

    v36 = objc_msgSend(v14, "topAnchor");
    v37 = objc_msgSend(v20, "bottomAnchor");
    v38 = objc_msgSend(v36, "constraintGreaterThanOrEqualToAnchor:constant:", v37, 16.0);

    objc_msgSend(v38, "setActive:", 1);
    v39 = objc_msgSend(v20, "firstBaselineAnchor");
    v40 = objc_msgSend(v26, "bottomAnchor");
    v41 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v40, 32.0);

    objc_msgSend(v41, "setActive:", 1);
    v42 = objc_msgSend(v20, "leadingAnchor");
    v43 = objc_msgSend(v1, "containerView");
    v44 = objc_msgSend(v43, "leadingAnchor");

    v45 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v44, 36.0);
    objc_msgSend(v45, "setActive:", 1);

    v46 = objc_msgSend(v20, "trailingAnchor");
    v47 = objc_msgSend(v1, "containerView");
    v48 = objc_msgSend(v47, "trailingAnchor");

    v49 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v48, -36.0);
    objc_msgSend(v49, "setActive:", 1);

    v50 = objc_msgSend(v26, "centerXAnchor");
    v51 = objc_msgSend(v1, "containerView");
    v52 = objc_msgSend(v51, "centerXAnchor");

    v53 = objc_msgSend(v50, "constraintEqualToAnchor:", v52);
    objc_msgSend(v53, "setActive:", 1);

    v54 = objc_msgSend(v26, "widthAnchor");
    v55 = objc_msgSend(v54, "constraintEqualToConstant:", 76.0);

    objc_msgSend(v55, "setActive:", 1);
    v56 = objc_msgSend(v26, "heightAnchor");
    v57 = objc_msgSend(v56, "constraintEqualToConstant:", 76.0);

    objc_msgSend(v57, "setActive:", 1);
    v58 = objc_msgSend(v26, "topAnchor");
    v59 = -[objc_class bottomAnchor](v63, "bottomAnchor");
    v60 = objc_msgSend(v58, "constraintEqualToAnchor:constant:", v59, 18.0);

    objc_msgSend(v60, "setActive:", 1);
    v61 = (SVSCardContainerView *)objc_msgSend(v1, "containerView");
    v62 = setupXButton(inContainerView:)(v61).super.super.super.super.isa;

    -[objc_class addTarget:action:forControlEvents:](v62, "addTarget:action:forControlEvents:", v1, "dismissPressed", 64);
    sub_10004EAB8();

  }
  else
  {
    __break(1u);
  }
}

id sub_10004F5B4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  id result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v6 = type metadata accessor for Logger(0, v3);
  v7 = sub_10000E8E8(v6, (uint64_t)qword_1001A4A60);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v11 = 134217984;
    v16 = 2360;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v11 + 4, v11 + 12);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "openSettingsPressed in %ld", v11, 0xCu);
    swift_slowDealloc(v11, -1, -1);
  }

  result = objc_msgSend(v1, "mainController");
  if (result)
  {
    v13 = result;
    v14 = (uint64_t)v1 + OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_onDoneURL;
    swift_beginAccess(v14, &v16, 0, 0);
    sub_100006BD8(v14, (uint64_t)v5, &qword_1001A3618);
    sub_1000356AC(0, (uint64_t)v5, 0, 0, 2363);

    return (id)sub_10000D858((uint64_t)v5, &qword_1001A3618);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10004F7B0(uint64_t a1, uint64_t a2)
{
  sub_100050AD0(2368, a2);
}

id sub_10004F820(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  NSString v17;
  id v18;
  objc_super v20;

  v6 = &v3[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_imageName];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v3[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_onDoneURL];
  v8 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = &v3[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_body];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v3[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_buttonText];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v3[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleText];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = &v3[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_bodyText];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_btn] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleLbl] = 0;
  v13 = OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_msgLbl;
  v14 = objc_allocWithZone((Class)UILabel);
  v15 = v3;
  *(_QWORD *)&v3[v13] = objc_msgSend(v14, "init");
  v16 = OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_lockImageView;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  if (a2)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v17 = 0;
  }
  v20.receiver = v15;
  v20.super_class = (Class)type metadata accessor for B389AppleIDViewController(0);
  v18 = objc_msgSendSuper2(&v20, "initWithNibName:bundle:", v17, a3);

  return v18;
}

id sub_10004F9B8(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  v3 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_imageName];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_onDoneURL];
  v5 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_body];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_buttonText];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleText];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_bodyText];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_btn] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleLbl] = 0;
  v10 = OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_msgLbl;
  v11 = objc_allocWithZone((Class)UILabel);
  v12 = v1;
  *(_QWORD *)&v1[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_lockImageView;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for B389AppleIDViewController(0);
  v14 = objc_msgSendSuper2(&v16, "initWithCoder:", a1);

  return v14;
}

id sub_10004FB2C()
{
  return sub_100014100(0, (uint64_t (*)(void))type metadata accessor for B389AppleIDViewController);
}

uint64_t sub_10004FC10()
{
  return type metadata accessor for B389AppleIDViewController(0);
}

uint64_t type metadata accessor for B389AppleIDViewController(uint64_t a1)
{
  return sub_100023778(a1, (uint64_t *)&unk_1001A4F28, (uint64_t)&nominal type descriptor for B389AppleIDViewController);
}

void sub_10004FC2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_100133070;
  sub_10000A630(319, (unint64_t *)&qword_1001A4F38, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100133070;
    v4[3] = &unk_100133070;
    v4[4] = &unk_100133070;
    v4[5] = &unk_100133070;
    v4[6] = &unk_100132FC8;
    v4[7] = &unk_100132FC8;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

void sub_10004FCD8(char a1)
{
  char *v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  void *v13;
  id v14;
  id v15;
  NSString v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  SVSCardContainerView *v20;
  Class isa;
  void *v22;
  id v23;
  NSString v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  void *v30;
  id v31;
  NSString v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  id v38;
  id v39;
  void *v40;
  NSString v41;
  id v42;
  id v43;
  double v44;
  double v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  SVSCardContainerView *v73;
  Class v74;
  id v75;
  Class v76;
  objc_super v77;

  v77.receiver = v1;
  v77.super_class = (Class)type metadata accessor for B389HSA2ViewController();
  objc_msgSendSuper2(&v77, "viewWillAppear:", a1 & 1);
  if (qword_1001A30A8 != -1)
    swift_once(&qword_1001A30A8, sub_1000990D8);
  v3 = sub_10009375C(v1, 0, *(double *)&qword_1001AD718);
  v5 = v4;

  v6 = objc_msgSend(v1, "containerView");
  objc_msgSend(v6, "setSwipeDismissible:", 0);

  objc_msgSend(v1, "setModalPresentationStyle:", 4);
  v7 = objc_msgSend(v1, "containerView");
  v8 = sub_1000992F4(v7);
  v9 = objc_msgSend(v8, "bottomAnchor");
  v10 = objc_msgSend(v7, "bottomAnchor");
  if (qword_1001A30C8 != -1)
    swift_once(&qword_1001A30C8, sub_100099228);
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -*((double *)&xmmword_1001A6F78 + 1));

  LODWORD(v12) = 1148846080;
  objc_msgSend(v11, "setPriority:", v12);
  objc_msgSend(v11, "setActive:", 1);

  v13 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService22B389HSA2ViewController_btn];
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService22B389HSA2ViewController_btn] = v8;
  v14 = v8;

  v75 = (id)objc_opt_self(UIColor);
  v15 = objc_msgSend(v75, "labelColor");
  objc_msgSend(v14, "setTitleColor:forState:", v15, 0);

  objc_msgSend(v14, "addTarget:action:forControlEvents:", v1, "updateSettingsPressed", 64);
  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100117314(v16);

  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v19 = v18;
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
  }
  objc_msgSend(v14, "setTitle:forState:", v17, 0);

  v20 = (SVSCardContainerView *)objc_msgSend(v1, "containerView");
  isa = setupTitleLabel(inContainerView:textAlignment:)(v20, NSTextAlignmentCenter).super.super.super.isa;

  v22 = (void *)objc_opt_self(NSBundle);
  v23 = objc_msgSend(v22, "mainBundle");
  v24 = String._bridgeToObjectiveC()();
  v25 = String._bridgeToObjectiveC()();
  v26 = sub_100117218(v23, v24, v25);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v28 = v27;

  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  -[objc_class setText:](isa, "setText:", v29);

  v76 = isa;
  -[objc_class setNumberOfLines:](isa, "setNumberOfLines:", 2);
  v30 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService22B389HSA2ViewController_msgLbl];
  v31 = objc_msgSend(v22, "mainBundle");
  v32 = String._bridgeToObjectiveC()();
  v33 = String._bridgeToObjectiveC()();
  v34 = sub_100117218(v31, v32, v33);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v36 = v35;

  v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v36);
  objc_msgSend(v30, "setText:", v37);

  v38 = objc_msgSend(v75, "blackColor");
  objc_msgSend(v30, "setTextColor:", v38);

  objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v30, "setTextAlignment:", 1);
  objc_msgSend(v30, "setNumberOfLines:", 5);
  objc_msgSend(v30, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v30, "setMinimumScaleFactor:", 0.3);
  v39 = objc_msgSend(v1, "containerView");
  objc_msgSend(v39, "addSubview:", v30);

  v40 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService22B389HSA2ViewController_lockImageView];
  v41 = String._bridgeToObjectiveC()();
  v42 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v41);

  if (v42)
  {
    v43 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v43, "scale");
    v45 = v44;

    v46 = objc_msgSend(v42, "_applicationIconImageForFormat:precomposed:scale:", 2, 1, v45);
  }
  else
  {
    v46 = 0;
  }
  objc_msgSend(v40, "setImage:", v46);

  objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v47 = objc_msgSend(v1, "containerView");
  objc_msgSend(v47, "addSubview:", v40);

  v48 = objc_msgSend(v14, "topAnchor");
  v49 = objc_msgSend(v30, "bottomAnchor");
  v50 = objc_msgSend(v48, "constraintGreaterThanOrEqualToAnchor:constant:", v49, 16.0);

  objc_msgSend(v50, "setActive:", 1);
  v51 = objc_msgSend(v30, "firstBaselineAnchor");
  v52 = objc_msgSend(v40, "bottomAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v52, 32.0);

  objc_msgSend(v53, "setActive:", 1);
  v54 = objc_msgSend(v30, "leadingAnchor");
  v55 = objc_msgSend(v1, "containerView");
  v56 = objc_msgSend(v55, "leadingAnchor");

  v57 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v56, 36.0);
  objc_msgSend(v57, "setActive:", 1);

  v58 = objc_msgSend(v30, "trailingAnchor");
  v59 = objc_msgSend(v1, "containerView");
  v60 = objc_msgSend(v59, "trailingAnchor");

  v61 = objc_msgSend(v58, "constraintEqualToAnchor:constant:", v60, -36.0);
  objc_msgSend(v61, "setActive:", 1);

  v62 = objc_msgSend(v40, "centerXAnchor");
  v63 = objc_msgSend(v1, "containerView");
  v64 = objc_msgSend(v63, "centerXAnchor");

  v65 = objc_msgSend(v62, "constraintEqualToAnchor:", v64);
  objc_msgSend(v65, "setActive:", 1);

  v66 = objc_msgSend(v40, "widthAnchor");
  v67 = objc_msgSend(v66, "constraintEqualToConstant:", 76.0);

  objc_msgSend(v67, "setActive:", 1);
  v68 = objc_msgSend(v40, "heightAnchor");
  v69 = objc_msgSend(v68, "constraintEqualToConstant:", 76.0);

  objc_msgSend(v69, "setActive:", 1);
  v70 = objc_msgSend(v40, "topAnchor");
  v71 = -[objc_class bottomAnchor](v76, "bottomAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v71, 18.0);

  objc_msgSend(v72, "setActive:", 1);
  v73 = (SVSCardContainerView *)objc_msgSend(v1, "containerView");
  v74 = setupXButton(inContainerView:)(v73).super.super.super.super.isa;

  -[objc_class addTarget:action:forControlEvents:](v74, "addTarget:action:forControlEvents:", v1, "dismissPressed", 64);
}

void sub_1000507B0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v9 = 134217984;
    v14 = 2430;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v9 + 4, v9 + 12);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "updateSettingsPressed in %ld", v9, 0xCu);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = objc_msgSend(v3, "mainController");
  if (v10)
  {
    v11 = v10;
    v12 = swift_allocObject(&unk_100179260, 24, 7);
    *(_QWORD *)(v12 + 16) = v11;
    v13 = v11;
    sub_100056530(v3, (uint64_t)sub_10005B4BC, v12);

    swift_release(v12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100050924()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v0 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  URL.init(string:)(0xD000000000000036, 0x80000001001364E0);
  Optional.unwrap(_:file:line:)(v6, sub_10000E754, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 2436, v0);
  sub_10000D858((uint64_t)v2, &qword_1001A3618);
  (*(void (**)(char *, _QWORD *, uint64_t))(v4 + 16))(v2, v6, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  sub_1000356AC(0, (uint64_t)v2, 0, 0, 2438);
  sub_10000D858((uint64_t)v2, &qword_1001A3618);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_100050AC8(uint64_t a1, uint64_t a2)
{
  sub_100050AD0(2444, a2);
}

void sub_100050AD0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A4A60);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v10 = 134217984;
    v13 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v10 + 4, v10 + 12);
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "dismissPressed in %ld", v10, 0xCu);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = objc_msgSend(v4, "mainController");
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, "dismiss:", 5);

  }
  else
  {
    __break(1u);
  }
}

id sub_100050D14(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  NSString v10;
  id v11;
  objc_super v13;

  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService22B389HSA2ViewController_btn] = 0;
  v6 = OBJC_IVAR____TtC18SharingViewService22B389HSA2ViewController_msgLbl;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC18SharingViewService22B389HSA2ViewController_lockImageView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  if (a2)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for B389HSA2ViewController();
  v11 = objc_msgSendSuper2(&v13, "initWithNibName:bundle:", v10, a3);

  return v11;
}

id sub_100050E1C(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService22B389HSA2ViewController_btn] = 0;
  v3 = OBJC_IVAR____TtC18SharingViewService22B389HSA2ViewController_msgLbl;
  v4 = objc_allocWithZone((Class)UILabel);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC18SharingViewService22B389HSA2ViewController_lockImageView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for B389HSA2ViewController();
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_100050F00(uint64_t a1)
{
  return sub_100014100(a1, type metadata accessor for B389HSA2ViewController);
}

uint64_t type metadata accessor for B389HSA2ViewController()
{
  return objc_opt_self(_TtC18SharingViewService22B389HSA2ViewController);
}

void sub_100050F74(char a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  double v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  SVSCardContainerView *v26;
  Class isa;
  id v28;
  NSString v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  NSString v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  id v51;
  id v52;
  void *v53;
  NSString v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  NSString v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  SVSCardContainerView *v100;
  Class v101;
  id v102;
  id v103;
  void *v104;
  objc_super v105;

  v2 = v1;
  v105.receiver = v2;
  v105.super_class = (Class)type metadata accessor for B389PairLockedViewController();
  objc_msgSendSuper2(&v105, "viewWillAppear:", a1 & 1);
  if (qword_1001A30A8 != -1)
    swift_once(&qword_1001A30A8, sub_1000990D8);
  v4 = sub_10009375C(v2, 0, *(double *)&qword_1001AD718);
  v6 = v5;

  v7 = objc_msgSend(v2, "containerView");
  objc_msgSend(v7, "setSwipeDismissible:", 0);

  objc_msgSend(v2, "setModalPresentationStyle:", 4);
  v8 = objc_msgSend(v2, "containerView");
  v9 = sub_1000992F4(v8);
  v10 = objc_msgSend(v9, "bottomAnchor");
  v11 = objc_msgSend(v8, "bottomAnchor");
  if (qword_1001A30C8 != -1)
    swift_once(&qword_1001A30C8, sub_100099228);
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v11, -*((double *)&xmmword_1001A6F78 + 1));

  LODWORD(v13) = 1148846080;
  objc_msgSend(v12, "setPriority:", v13);
  objc_msgSend(v12, "setActive:", 1);

  v14 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_btn];
  *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_btn] = v9;
  v15 = v9;

  v102 = (id)objc_opt_self(UIColor);
  v16 = objc_msgSend(v102, "labelColor");
  v17 = v15;
  objc_msgSend(v15, "setTitleColor:forState:", v16, 0);

  v103 = v15;
  objc_msgSend(v15, "addTarget:action:forControlEvents:", v2, "learnMorePressed", 64);
  v18 = (void *)objc_opt_self(NSBundle);
  v19 = objc_msgSend(v18, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100117218(v19, v20, v21);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v24 = v23;

  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  objc_msgSend(v17, "setTitle:forState:", v25, 0);

  v26 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  isa = setupTitleLabel(inContainerView:textAlignment:)(v26, NSTextAlignmentCenter).super.super.super.isa;

  v28 = objc_msgSend(v18, "mainBundle");
  v29 = String._bridgeToObjectiveC()();
  v30 = String._bridgeToObjectiveC()();
  v31 = sub_100117218(v28, v29, v30);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  -[objc_class setText:](isa, "setText:", v34);

  v35 = (void *)objc_opt_self(UIFont);
  v36 = objc_msgSend(v35, "systemFontOfSize:", 30.0);
  v37 = objc_msgSend(v36, "fontDescriptor");
  v38 = objc_msgSend(v37, "fontDescriptorWithSymbolicTraits:", 2);

  v39 = sub_100006A6C((uint64_t *)&unk_1001A6CF0);
  Optional.unwrap(_:file:line:)(&v104, sub_100099650, 0, "SharingViewService/SVSCardConfiguration.swift", 45, 2, 260, v39);

  v40 = v104;
  objc_msgSend(v36, "pointSize");
  v41 = objc_msgSend(v35, "fontWithDescriptor:size:", v40);

  -[objc_class setFont:](isa, "setFont:", v41);
  v42 = objc_msgSend(v102, "blackColor");
  -[objc_class setTextColor:](isa, "setTextColor:", v42);

  -[objc_class setNumberOfLines:](isa, "setNumberOfLines:", 2);
  v43 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_msgLbl];
  v44 = objc_msgSend(v18, "mainBundle");
  v45 = String._bridgeToObjectiveC()();
  v46 = String._bridgeToObjectiveC()();
  v47 = sub_100117218(v44, v45, v46);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  v49 = v48;

  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49);
  objc_msgSend(v43, "setText:", v50);

  v51 = objc_msgSend(v102, "blackColor");
  objc_msgSend(v43, "setTextColor:", v51);

  objc_msgSend(v43, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v43, "setTextAlignment:", 1);
  objc_msgSend(v43, "setNumberOfLines:", 5);
  objc_msgSend(v43, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v43, "setMinimumScaleFactor:", 0.3);
  v52 = objc_msgSend(v2, "containerView");
  objc_msgSend(v52, "addSubview:", v43);

  v53 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_avatarImageView];
  v54 = String._bridgeToObjectiveC()();
  v55 = (void *)objc_opt_self(UIImage);
  v56 = objc_msgSend(v55, "imageNamed:", v54);

  objc_msgSend(v53, "setImage:", v56);
  objc_msgSend(v53, "setContentMode:", 1);
  v57 = objc_msgSend(v102, "systemGrayColor");
  objc_msgSend(v53, "setTintColor:", v57);

  objc_msgSend(v53, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v58 = objc_msgSend(v2, "containerView");
  objc_msgSend(v58, "addSubview:", v53);

  v59 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_lockImageView];
  v60 = String._bridgeToObjectiveC()();
  v61 = objc_msgSend(v55, "imageNamed:", v60);

  objc_msgSend(v59, "setImage:", v61);
  objc_msgSend(v59, "setContentMode:", 1);
  v62 = objc_msgSend(v102, "systemBlueColor");
  objc_msgSend(v59, "setTintColor:", v62);

  objc_msgSend(v59, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v63 = objc_msgSend(v2, "containerView");
  objc_msgSend(v63, "addSubview:", v59);

  v64 = objc_msgSend(v103, "topAnchor");
  v65 = objc_msgSend(v43, "bottomAnchor");
  v66 = objc_msgSend(v64, "constraintGreaterThanOrEqualToAnchor:constant:", v65, 16.0);

  objc_msgSend(v66, "setActive:", 1);
  v67 = objc_msgSend(v43, "firstBaselineAnchor");
  v68 = objc_msgSend(v59, "bottomAnchor");
  v69 = objc_msgSend(v67, "constraintEqualToAnchor:constant:", v68, 32.0);

  objc_msgSend(v69, "setActive:", 1);
  v70 = objc_msgSend(v43, "leadingAnchor");
  v71 = objc_msgSend(v2, "containerView");
  v72 = objc_msgSend(v71, "leadingAnchor");

  v73 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v72, 36.0);
  objc_msgSend(v73, "setActive:", 1);

  v74 = objc_msgSend(v43, "trailingAnchor");
  v75 = objc_msgSend(v2, "containerView");
  v76 = objc_msgSend(v75, "trailingAnchor");

  v77 = objc_msgSend(v74, "constraintEqualToAnchor:constant:", v76, -36.0);
  objc_msgSend(v77, "setActive:", 1);

  v78 = objc_msgSend(v53, "centerXAnchor");
  v79 = objc_msgSend(v2, "containerView");
  v80 = objc_msgSend(v79, "centerXAnchor");

  v81 = objc_msgSend(v78, "constraintEqualToAnchor:", v80);
  objc_msgSend(v81, "setActive:", 1);

  v82 = objc_msgSend(v53, "widthAnchor");
  v83 = objc_msgSend(v82, "constraintEqualToConstant:", 152.0);

  objc_msgSend(v83, "setActive:", 1);
  v84 = objc_msgSend(v53, "heightAnchor");
  v85 = objc_msgSend(v84, "constraintEqualToConstant:", 152.0);

  objc_msgSend(v85, "setActive:", 1);
  v86 = objc_msgSend(v53, "topAnchor");
  v87 = -[objc_class bottomAnchor](isa, "bottomAnchor");
  v88 = objc_msgSend(v86, "constraintEqualToAnchor:constant:", v87, 18.0);

  objc_msgSend(v88, "setActive:", 1);
  v89 = objc_msgSend(v59, "centerXAnchor");
  v90 = objc_msgSend(v2, "containerView");
  v91 = objc_msgSend(v90, "centerXAnchor");

  v92 = objc_msgSend(v89, "constraintEqualToAnchor:", v91);
  objc_msgSend(v92, "setActive:", 1);

  v93 = objc_msgSend(v59, "widthAnchor");
  v94 = objc_msgSend(v93, "constraintEqualToConstant:", 152.0);

  objc_msgSend(v94, "setActive:", 1);
  v95 = objc_msgSend(v59, "heightAnchor");
  v96 = objc_msgSend(v95, "constraintEqualToConstant:", 152.0);

  objc_msgSend(v96, "setActive:", 1);
  v97 = objc_msgSend(v59, "topAnchor");
  v98 = -[objc_class bottomAnchor](isa, "bottomAnchor");
  v99 = objc_msgSend(v97, "constraintEqualToAnchor:constant:", v98, 18.0);

  objc_msgSend(v99, "setActive:", 1);
  v100 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v101 = setupXButton(inContainerView:)(v100).super.super.super.super.isa;

  -[objc_class addTarget:action:forControlEvents:](v101, "addTarget:action:forControlEvents:", v2, "dismissPressed", 64);
}

id sub_100051E4C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  id result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v6 = type metadata accessor for Logger(0, v3);
  v7 = sub_10000E8E8(v6, (uint64_t)qword_1001A4A60);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v11 = 134217984;
    v16 = 2521;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v11 + 4, v11 + 12);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "learnMorePressed in %ld", v11, 0xCu);
    swift_slowDealloc(v11, -1, -1);
  }

  result = objc_msgSend(v1, "mainController");
  if (result)
  {
    v13 = result;
    v14 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
    sub_1000356AC(0, (uint64_t)v5, (uint64_t)sub_100052008, 0, 2522);

    return (id)sub_10000D858((uint64_t)v5, &qword_1001A3618);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100052008()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  NSURL *v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  Class isa;
  uint64_t v15;

  v0 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  URL.init(string:)(0xD000000000000024, 0x8000000100138F40);
  Optional.unwrap(_:file:line:)(v6, sub_1000521B4, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 2525, v0);
  sub_10000D858((uint64_t)v2, &qword_1001A3618);
  v7 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v7)
  {
    v9 = v7;
    URL._bridgeToObjectiveC()(v8);
    v11 = v10;
    v12 = sub_1000046D0((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v12);
    objc_msgSend(v9, "openSensitiveURL:withOptions:", v11, isa);

  }
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1000521B4()
{
  return 0xD000000000000013;
}

id sub_100052204()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  id result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v6 = type metadata accessor for Logger(0, v3);
  v7 = sub_10000E8E8(v6, (uint64_t)qword_1001A4A60);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v11 = 134217984;
    v16 = 2532;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v11 + 4, v11 + 12);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "dismissPressed in %ld", v11, 0xCu);
    swift_slowDealloc(v11, -1, -1);
  }

  result = objc_msgSend(v1, "mainController");
  if (result)
  {
    v13 = result;
    v14 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
    sub_1000356AC(5, (uint64_t)v5, 0, 0, 2533);

    return (id)sub_10000D858((uint64_t)v5, &qword_1001A3618);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100052424(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_btn] = 0;
  v6 = OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_msgLbl;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_avatarImageView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v10 = OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_lockImageView;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  if (a2)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for B389PairLockedViewController();
  v12 = objc_msgSendSuper2(&v14, "initWithNibName:bundle:", v11, a3);

  return v12;
}

id sub_100052548(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_btn] = 0;
  v3 = OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_msgLbl;
  v4 = objc_allocWithZone((Class)UILabel);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_avatarImageView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v7 = OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_lockImageView;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for B389PairLockedViewController();
  v8 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);

  return v8;
}

id sub_100052648(uint64_t a1)
{
  return sub_100014100(a1, type metadata accessor for B389PairLockedViewController);
}

uint64_t type metadata accessor for B389PairLockedViewController()
{
  return objc_opt_self(_TtC18SharingViewService28B389PairLockedViewController);
}

uint64_t sub_1000526CC()
{
  uint64_t result;

  strcpy((char *)&qword_1001A4A78, "FIND_WITH_SIRI");
  unk_1001A4A87 = -18;
  qword_1001A4A88 = 0x6568705369726953;
  unk_1001A4A90 = 0xEA00000000006572;
  byte_1001A4A98 = 0;
  qword_1001A4AA0 = (uint64_t)objc_msgSend((id)objc_opt_self(UIColor), "systemWhiteColor");
  byte_1001A4AA8 = 0;
  result = swift_getKeyPath(&unk_100133218);
  qword_1001A4AB0 = result;
  return result;
}

id sub_100052768()
{
  id result;

  qword_1001A4AB8 = 0x4C414E4F53524550;
  unk_1001A4AC0 = 0xEB00000000455A49;
  qword_1001A4AC8 = 0x662E79656C696D73;
  unk_1001A4AD0 = 0xEB000000006C6C69;
  byte_1001A4AD8 = 1;
  result = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  qword_1001A4AE0 = (uint64_t)result;
  byte_1001A4AE8 = 0;
  qword_1001A4AF0 = 0;
  return result;
}

id sub_1000527FC()
{
  id result;

  qword_1001A4AF8 = 0x554F535F59414C50;
  unk_1001A4B00 = 0xEA0000000000444ELL;
  qword_1001A4B08 = 0xD000000000000010;
  unk_1001A4B10 = 0x8000000100137B70;
  byte_1001A4B18 = 1;
  result = objc_msgSend((id)objc_opt_self(UIColor), "systemIndigoColor");
  qword_1001A4B20 = (uint64_t)result;
  byte_1001A4B28 = 1;
  qword_1001A4B30 = 0;
  return result;
}

id sub_100052888()
{
  id result;

  qword_1001A4B38 = 0x5F45534943455250;
  unk_1001A4B40 = 0xEF474E49444E4946;
  qword_1001A4B48 = 0xD00000000000001CLL;
  unk_1001A4B50 = 0x8000000100137B90;
  byte_1001A4B58 = 1;
  result = objc_msgSend((id)objc_opt_self(UIColor), "systemGreenColor");
  qword_1001A4B60 = (uint64_t)result;
  byte_1001A4B68 = 0;
  qword_1001A4B70 = 0;
  return result;
}

id sub_10005291C()
{
  id result;

  qword_1001A4B78 = 0xD000000000000011;
  unk_1001A4B80 = 0x8000000100138F20;
  qword_1001A4B88 = 0xD000000000000010;
  unk_1001A4B90 = 0x8000000100137BB0;
  byte_1001A4B98 = 1;
  result = objc_msgSend((id)objc_opt_self(UIColor), "systemPinkColor");
  qword_1001A4BA0 = (uint64_t)result;
  byte_1001A4BA8 = 0;
  qword_1001A4BB0 = 0;
  return result;
}

uint64_t sub_1000529A4()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  void *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void *v56;
  char v57;
  uint64_t v58;
  id v59;

  v0 = SFIsFMFAllowed();
  v1 = SFIsRangingSupported();
  v2 = sub_100006A6C(&qword_1001A5508);
  v3 = swift_allocObject(v2, 224, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100132B30;
  if ((v0 & 1) != 0)
  {
    if ((v1 & 1) != 0)
    {
      if (qword_1001A2F60 != -1)
        swift_once(&qword_1001A2F60, sub_100052888);
      v4 = unk_1001A4B40;
      v5 = qword_1001A4B48;
      v6 = unk_1001A4B50;
      v7 = byte_1001A4B58;
      v8 = (void *)qword_1001A4B60;
      v9 = byte_1001A4B68;
      v10 = qword_1001A4B70;
      *(_QWORD *)(v3 + 32) = qword_1001A4B38;
      *(_QWORD *)(v3 + 40) = v4;
      *(_QWORD *)(v3 + 48) = v5;
      *(_QWORD *)(v3 + 56) = v6;
      *(_BYTE *)(v3 + 64) = v7;
      *(_QWORD *)(v3 + 72) = v8;
      *(_BYTE *)(v3 + 80) = v9;
      *(_QWORD *)(v3 + 88) = v10;
      v11 = qword_1001A2F58;
      swift_bridgeObjectRetain(v4);
      swift_bridgeObjectRetain(v6);
      v12 = v8;
      swift_retain(v10);
      if (v11 != -1)
        swift_once(&qword_1001A2F58, sub_1000527FC);
      v13 = unk_1001A4B00;
      v14 = qword_1001A4B08;
      v15 = unk_1001A4B10;
      v16 = byte_1001A4B18;
      v17 = (void *)qword_1001A4B20;
      v18 = byte_1001A4B28;
      v19 = qword_1001A4B30;
      *(_QWORD *)(v3 + 96) = qword_1001A4AF8;
      *(_QWORD *)(v3 + 104) = v13;
      *(_QWORD *)(v3 + 112) = v14;
      *(_QWORD *)(v3 + 120) = v15;
      *(_BYTE *)(v3 + 128) = v16;
      *(_QWORD *)(v3 + 136) = v17;
      *(_BYTE *)(v3 + 144) = v18;
      *(_QWORD *)(v3 + 152) = v19;
      v20 = qword_1001A2F68;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRetain(v15);
      v21 = v17;
      swift_retain(v19);
      if (v20 != -1)
        swift_once(&qword_1001A2F68, sub_10005291C);
      v22 = &qword_1001A4B78;
      goto LABEL_28;
    }
    if (qword_1001A2F68 != -1)
      swift_once(&qword_1001A2F68, sub_10005291C);
    v23 = &qword_1001A4B78;
  }
  else
  {
    if ((v1 & 1) == 0)
    {
      if (qword_1001A2F58 != -1)
        swift_once(&qword_1001A2F58, sub_1000527FC);
      v34 = unk_1001A4B00;
      v35 = qword_1001A4B08;
      v36 = unk_1001A4B10;
      v37 = byte_1001A4B18;
      v38 = (void *)qword_1001A4B20;
      v39 = byte_1001A4B28;
      v40 = qword_1001A4B30;
      *(_QWORD *)(v3 + 32) = qword_1001A4AF8;
      *(_QWORD *)(v3 + 40) = v34;
      *(_QWORD *)(v3 + 48) = v35;
      *(_QWORD *)(v3 + 56) = v36;
      *(_BYTE *)(v3 + 64) = v37;
      *(_QWORD *)(v3 + 72) = v38;
      *(_BYTE *)(v3 + 80) = v39;
      *(_QWORD *)(v3 + 88) = v40;
      v41 = qword_1001A2F50;
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRetain(v36);
      v42 = v38;
      swift_retain(v40);
      if (v41 != -1)
        swift_once(&qword_1001A2F50, sub_100052768);
      v33 = &qword_1001A4AB8;
      goto LABEL_25;
    }
    if (qword_1001A2F60 != -1)
      swift_once(&qword_1001A2F60, sub_100052888);
    v23 = &qword_1001A4B38;
  }
  v24 = v23[1];
  v25 = v23[2];
  v26 = v23[3];
  v27 = *((_BYTE *)v23 + 32);
  v28 = (void *)v23[5];
  v29 = *((_BYTE *)v23 + 48);
  v30 = v23[7];
  *(_QWORD *)(v3 + 32) = *v23;
  *(_QWORD *)(v3 + 40) = v24;
  *(_QWORD *)(v3 + 48) = v25;
  *(_QWORD *)(v3 + 56) = v26;
  *(_BYTE *)(v3 + 64) = v27;
  *(_QWORD *)(v3 + 72) = v28;
  *(_BYTE *)(v3 + 80) = v29;
  *(_QWORD *)(v3 + 88) = v30;
  v31 = qword_1001A2F58;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v26);
  v32 = v28;
  swift_retain(v30);
  if (v31 != -1)
    swift_once(&qword_1001A2F58, sub_1000527FC);
  v33 = &qword_1001A4AF8;
LABEL_25:
  v43 = v33[1];
  v44 = v33[2];
  v45 = v33[3];
  v46 = *((_BYTE *)v33 + 32);
  v47 = (void *)v33[5];
  v48 = *((_BYTE *)v33 + 48);
  v49 = v33[7];
  *(_QWORD *)(v3 + 96) = *v33;
  *(_QWORD *)(v3 + 104) = v43;
  *(_QWORD *)(v3 + 112) = v44;
  *(_QWORD *)(v3 + 120) = v45;
  *(_BYTE *)(v3 + 128) = v46;
  *(_QWORD *)(v3 + 136) = v47;
  *(_BYTE *)(v3 + 144) = v48;
  *(_QWORD *)(v3 + 152) = v49;
  v50 = qword_1001A2F48;
  swift_bridgeObjectRetain(v43);
  swift_bridgeObjectRetain(v45);
  v51 = v47;
  swift_retain(v49);
  if (v50 != -1)
    swift_once(&qword_1001A2F48, sub_1000526CC);
  v22 = &qword_1001A4A78;
LABEL_28:
  v52 = v22[1];
  v53 = v22[2];
  v54 = v22[3];
  v55 = *((_BYTE *)v22 + 32);
  v56 = (void *)v22[5];
  v57 = *((_BYTE *)v22 + 48);
  v58 = v22[7];
  *(_QWORD *)(v3 + 160) = *v22;
  *(_QWORD *)(v3 + 168) = v52;
  *(_QWORD *)(v3 + 176) = v53;
  *(_QWORD *)(v3 + 184) = v54;
  *(_BYTE *)(v3 + 192) = v55;
  *(_QWORD *)(v3 + 200) = v56;
  *(_BYTE *)(v3 + 208) = v57;
  *(_QWORD *)(v3 + 216) = v58;
  swift_retain(v58);
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRetain(v54);
  v59 = v56;
  return v3;
}

uint64_t sub_100052D80()
{
  uint64_t result;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  double v4;

  result = sub_1001177F4();
  if ((_DWORD)result == 1)
  {
    v1 = xmmword_100132E90;
    v2 = xmmword_100132EA0;
    v3 = xmmword_100132EB0;
    v4 = 24.0;
  }
  else
  {
    if ((_DWORD)result == 2)
    {
      v1 = xmmword_100132EC0;
      v2 = xmmword_100132ED0;
      v3 = xmmword_100132EE0;
    }
    else
    {
      v1 = xmmword_100132EF0;
      v2 = xmmword_100132F00;
      v3 = xmmword_100132F10;
    }
    v4 = 48.0;
  }
  xmmword_1001A4BB8 = v3;
  *(_OWORD *)&qword_1001A4BC8 = v2;
  qword_1001A4BD8 = v2;
  *(_OWORD *)&qword_1001A4BE0 = v1;
  qword_1001A4BF0 = *(_QWORD *)&v4;
  return result;
}

uint64_t sub_100052E18()
{
  void *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;

  v1 = (char *)objc_msgSend(v0, "mainController");
  if (!v1)
    goto LABEL_9;
  v2 = v1;
  if ((v1[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex + 8] & 1) != 0
    || (v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories]) == 0)
  {

    goto LABEL_9;
  }
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex];
  v5 = swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories]);
  v6 = sub_100030800(v5);
  result = swift_bridgeObjectRelease(v3);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v4 < v6[2])
  {
    v8 = (id)v6[2 * v4 + 5];
    swift_bridgeObjectRelease(v6);
    type metadata accessor for SFMExampleUtterance(0);
    v9 = v8;
    v10 = (_QWORD *)SFMExampleUtterance.__allocating_init(forRole:)(v8);
    v11 = (*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x70))();
    v13 = v12;

    if (v13)
      return v11;
LABEL_9:
    v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v15 = String._bridgeToObjectiveC()();
    v16 = String._bridgeToObjectiveC()();
    v17 = sub_100117218(v14, v15, v16);

    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    return v11;
  }
  __break(1u);
  return result;
}

void sub_100052FE8(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  double *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  SVSCardContainerView *v10;
  Swift::tuple_SVSHighlightButton_UIButton v11;
  void *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  id v30;
  id v31;
  void *v32;
  NSString v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  SVSCardContainerView *v37;
  UILabel v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  NSString v51;
  NSString v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  NSString v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  Class v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  SVSCardContainerView *v77;
  Class v78;
  id v79;
  void *v80;
  void *v81;
  char *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  Class v100;
  id v101;
  id v102;
  id v103;
  __objc2_ivar *v104;
  id v105;
  uint64_t v106;
  void (**v107)(uint64_t);
  uint64_t v108;
  uint64_t v109;
  char **v110;
  __objc2_ivar *v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  uint64_t v124;
  uint64_t ObjCClassFromMetadata;
  NSString v126;
  void *v127;
  Class v128;
  id v129;
  void *v130;
  char *v131;
  char *v132;
  Class isa;
  uint64_t v134;
  objc_super v135;

  v2 = v1;
  v135.receiver = v2;
  v135.super_class = (Class)type metadata accessor for B389DoneViewController();
  objc_msgSendSuper2(&v135, "viewWillAppear:", a1 & 1);
  v131 = (char *)OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_mapViewController;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_mapViewController];
  if (qword_1001A2F70 != -1)
    swift_once(&qword_1001A2F70, sub_100052D80);
  v5 = (double *)&xmmword_1001A4BB8;
  if (!v4)
    v5 = (double *)&xmmword_1001A4BB8 + 1;
  v6 = sub_10009375C(v2, 0, *v5);
  v8 = v7;

  v9 = objc_msgSend(v2, "containerView");
  objc_msgSend(v9, "setSwipeDismissible:", 1);

  objc_msgSend(v2, "setModalPresentationStyle:", 4);
  v10 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v11 = setupNormalButtonAndOptionButton(inContainerView:)(v10);

  -[objc_class addTarget:action:forControlEvents:](v11._0.super.super.super.super.super.isa, "addTarget:action:forControlEvents:", v2, "customizePressed", 64);
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = objc_msgSend(v12, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = sub_100117218(v13, v14, v15);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20 = sub_100006A6C((uint64_t *)&unk_1001A7D20);
  v21 = swift_allocObject(v20, 72, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100131C40;
  if (qword_1001A2E60 != -1)
    swift_once(&qword_1001A2E60, sub_1000078E4);
  v22 = objc_msgSend((id)qword_1001AD3B8, "localizedShortName");
  if (!v22)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v23 = v22;
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v26 = v25;

  *(_QWORD *)(v21 + 56) = &type metadata for String;
  *(_QWORD *)(v21 + 64) = sub_10000D794();
  *(_QWORD *)(v21 + 32) = v24;
  *(_QWORD *)(v21 + 40) = v26;
  static String.localizedStringWithFormat(_:_:)(v17, v19, v21);
  v28 = v27;
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v19);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  -[objc_class setTitle:forState:](v11._0.super.super.super.super.super.isa, "setTitle:forState:", v29, 0);

  v30 = -[objc_class titleLabel](v11._0.super.super.super.super.super.isa, "titleLabel");
  objc_msgSend(v30, "setAdjustsFontSizeToFitWidth:", 1);

  v31 = -[objc_class titleLabel](v11._0.super.super.super.super.super.isa, "titleLabel");
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, "setMinimumScaleFactor:", 0.3);

  }
  -[objc_class addTarget:action:forControlEvents:](v11._1.super.super.super.super.isa, "addTarget:action:forControlEvents:", v2, "dismissPressed", 64);
  v33 = String._bridgeToObjectiveC()();
  v34 = sub_100117314(v33);

  if (!v34)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v36 = v35;
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v36);
  }
  -[objc_class setTitle:forState:](v11._1.super.super.super.super.isa, "setTitle:forState:", v34, 0);

  v37 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v38.super.super.super.isa = setupTitleLabel(inContainerView:textAlignment:)(v37, NSTextAlignmentNatural).super.super.super.isa;

  v39 = objc_msgSend(v2, "mainController");
  if (!v39)
    goto LABEL_26;
  v40 = v39;
  sub_100030BA0();
  v42 = v41;

  if (v42)
  {
    v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v42);
  }
  else
  {
    v43 = 0;
  }
  -[objc_class setText:](v38.super.super.super.isa, "setText:", v43);

  isa = v38.super.super.super.isa;
  v44 = objc_msgSend(objc_allocWithZone((Class)SVSCurrentLocationIndicator), "init");
  v45 = (void *)objc_opt_self(UIColor);
  v46 = v44;
  v47 = objc_msgSend(v45, "clearColor");
  objc_msgSend(v46, "setBackgroundColor:", v47);

  v48 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v49 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 14.0);
  objc_msgSend(v48, "setFont:", v49);

  v50 = objc_msgSend(v12, "mainBundle");
  v51 = String._bridgeToObjectiveC()();
  v52 = String._bridgeToObjectiveC()();
  v53 = sub_100117218(v50, v51, v52);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
  v55 = v54;

  v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v55);
  objc_msgSend(v48, "setText:", v56);

  v57 = objc_msgSend(v45, "secondaryLabelColor");
  objc_msgSend(v48, "setTextColor:", v57);

  v58 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v59 = swift_allocObject(v58, 48, 7);
  *(_OWORD *)(v59 + 16) = xmmword_1001321B0;
  *(_QWORD *)(v59 + 32) = v46;
  *(_QWORD *)(v59 + 40) = v48;
  v134 = v59;
  specialized Array._endMutation()(v59);
  v60 = objc_allocWithZone((Class)UIStackView);
  sub_100013194(0, (unint64_t *)&qword_1001A5510, UIView_ptr);
  v61 = v46;
  v129 = v48;
  v62 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v134);
  v63 = objc_msgSend(v60, "initWithArrangedSubviews:", v62);

  objc_msgSend(v63, "setSpacing:", 5.0);
  objc_msgSend(v63, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v64 = objc_msgSend(v2, "containerView");
  objc_msgSend(v64, "addSubview:", v63);

  v65 = objc_msgSend(v63, "leadingAnchor");
  v66 = objc_msgSend(v2, "containerView");
  v67 = objc_msgSend(v66, "leadingAnchor");

  if (qword_1001A30D0 != -1)
    swift_once(&qword_1001A30D0, sub_10009928C);
  v68 = objc_msgSend(v65, "constraintEqualToAnchor:constant:", v67, *(double *)&qword_1001AD738);

  objc_msgSend(v68, "setActive:", 1);
  v69 = v63;
  v70 = objc_msgSend(v63, "topAnchor");
  v71 = -[objc_class lastBaselineAnchor](isa, "lastBaselineAnchor");
  if (qword_1001A2F70 != -1)
    swift_once(&qword_1001A2F70, sub_100052D80);
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v71, *(double *)&qword_1001A4BC8);

  objc_msgSend(v72, "setActive:", 1);
  v73 = objc_msgSend(v61, "widthAnchor");
  v74 = objc_msgSend(v73, "constraintEqualToConstant:", 14.0);

  objc_msgSend(v74, "setActive:", 1);
  v130 = v61;
  v75 = objc_msgSend(v61, "heightAnchor");
  v76 = objc_msgSend(v75, "constraintEqualToConstant:", 14.0);

  objc_msgSend(v76, "setActive:", 1);
  v77 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v78 = setupXButton(inContainerView:)(v77).super.super.super.super.isa;

  v128 = v78;
  -[objc_class addTarget:action:forControlEvents:](v78, "addTarget:action:forControlEvents:", v2, "dismissPressed", 64);
  v79 = objc_msgSend(v2, "containerView");
  v80 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_tv];
  objc_msgSend(v79, "addSubview:", v80);

  objc_msgSend(v80, "setSeparatorStyle:", 0);
  objc_msgSend(v80, "setAlwaysBounceVertical:", 0);
  objc_msgSend(v80, "setAllowsSelection:", 0);
  objc_msgSend(v80, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v81 = *(void **)&v131[(_QWORD)v2];
  if (!v81)
  {
    v112 = objc_msgSend(v80, "topAnchor", v69);
    v113 = objc_msgSend(v69, "bottomAnchor");
    v114 = objc_msgSend(v112, "constraintEqualToAnchor:constant:", v113, *(double *)&qword_1001A4BF0);

    objc_msgSend(v114, "setActive:", 1);
    v115 = -[objc_class topAnchor](v11._0.super.super.super.super.super.isa, "topAnchor");
    v116 = objc_msgSend(v80, "bottomAnchor");
    v100 = v11._0.super.super.super.super.super.isa;
    v84 = objc_msgSend(v115, "constraintEqualToAnchor:constant:", v116, *(double *)&qword_1001A4BE0);

    objc_msgSend(v84, "setActive:", 1);
    v111 = &stru_100197000;
    v110 = &selRef_setTransitioningDelegate_;
    v104 = &stru_100197000;
    goto LABEL_24;
  }
  v82 = v81;
  objc_msgSend(v2, "addChildViewController:", v82, v69);
  v132 = v82;
  v83 = objc_msgSend(v82, "view");
  if (v83)
  {
    v84 = v83;
    v85 = objc_msgSend(v2, "containerView");
    objc_msgSend(v85, "addSubview:", v84);

    objc_msgSend(v84, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v86 = objc_msgSend(v84, "topAnchor");
    v87 = objc_msgSend(v69, "bottomAnchor");
    v88 = objc_msgSend(v86, "constraintEqualToAnchor:constant:", v87, *(double *)&qword_1001A4BD8);

    objc_msgSend(v88, "setActive:", 1);
    v89 = objc_msgSend(v84, "widthAnchor");
    v90 = -[objc_class widthAnchor](v11._0.super.super.super.super.super.isa, "widthAnchor");
    v91 = objc_msgSend(v89, "constraintEqualToAnchor:", v90);

    objc_msgSend(v91, "setActive:", 1);
    v92 = objc_msgSend(v84, "centerXAnchor");
    v93 = objc_msgSend(v2, "containerView");
    v94 = objc_msgSend(v93, "centerXAnchor");

    v95 = objc_msgSend(v92, "constraintEqualToAnchor:", v94);
    objc_msgSend(v95, "setActive:", 1);

    v96 = objc_msgSend(v84, "heightAnchor");
    v97 = objc_msgSend(v96, "constraintEqualToConstant:", *(double *)&qword_1001A4BD0);

    objc_msgSend(v97, "setActive:", 1);
    objc_msgSend(v84, "_setContinuousCornerRadius:", 13.0);
    v98 = objc_msgSend(v80, "topAnchor");
    v99 = objc_msgSend(v84, "bottomAnchor");
    v100 = v11._0.super.super.super.super.super.isa;
    v101 = objc_msgSend(v98, "constraintEqualToAnchor:constant:", v99, *(double *)&qword_1001A4BE8);

    objc_msgSend(v101, "setActive:", 1);
    v102 = -[objc_class topAnchor](v11._0.super.super.super.super.super.isa, "topAnchor");
    v103 = objc_msgSend(v80, "bottomAnchor");
    v104 = &stru_100197000;
    v105 = objc_msgSend(v102, "constraintEqualToAnchor:constant:", v103, 2.0);

    objc_msgSend(v105, "setActive:", 1);
    objc_msgSend(v132, "didMoveToParentViewController:", v2);
    v106 = swift_allocObject(&unk_100179238, 24, 7);
    swift_unknownObjectWeakInit(v106 + 16, v2);
    v107 = (void (**)(uint64_t))&v132[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_tapHandler];
    v108 = *(_QWORD *)&v132[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_tapHandler];
    v109 = *(_QWORD *)&v132[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_tapHandler + 8];
    *v107 = sub_100055EAC;
    v107[1] = (void (*)(uint64_t))v106;
    sub_100012F60(v108, v109);

    v110 = &selRef_setTransitioningDelegate_;
    v111 = &stru_100197000;
LABEL_24:

    v117 = objc_msgSend(v80, v110[164]);
    v118 = objc_msgSend(v100, v110[164]);
    v119 = objc_msgSend(v117, *(SEL *)&v111[106].align, v118, -6.0);

    objc_msgSend(v119, "setActive:", 1);
    v120 = objc_msgSend(v80, v104[100].name);
    v121 = objc_msgSend(v2, "containerView");
    v122 = objc_msgSend(v121, v104[100].name);

    v123 = objc_msgSend(v120, "constraintEqualToAnchor:", v122);
    objc_msgSend(v123, "setActive:", 1);

    v124 = type metadata accessor for B389FeatureTableViewCell();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v124);
    v126 = String._bridgeToObjectiveC()();
    objc_msgSend(v80, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v126);

    objc_msgSend(v80, "setDataSource:", v2);
    return;
  }
LABEL_27:
  __break(1u);
}

void sub_100054054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10005429C();

  }
}

void sub_100054128(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v9 = 134217984;
    v12 = 2782;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v9 + 4, v9 + 12);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "dismissPressed in %ld", v9, 0xCu);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = objc_msgSend(v3, "mainController");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "dismiss:", 5);

  }
}

char *sub_10005429C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *result;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  uint64_t v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  void *object;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void *v58;
  _QWORD v59[2];
  char *v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  char *v69;
  uint64_t v70;
  void *v71;
  unint64_t v72;
  id v73;
  uint64_t v74;

  v1 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v1);
  v3 = (char *)v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v70 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v69 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100006A6C(&qword_1001A42A0);
  v10 = __chkstk_darwin(v66);
  v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)v59 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)v59 - v16;
  result = (char *)objc_msgSend(v0, "mainController");
  if (result)
  {
    v62 = v1;
    v63 = v7;
    v67 = v8;
    v64 = v5;
    v65 = v4;
    v61 = result;
    v73 = *(id *)&result[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_session];
    v19 = v73;
    v20 = sub_100006A6C(&qword_1001A4A38);
    Optional.unwrap(_:file:line:)(&v71, sub_10002F048, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 2792, v20);

    v22 = v71;
    if (qword_1001A2F40 != -1)
      swift_once(&qword_1001A2F40, sub_100030AB0);
    v23 = type metadata accessor for Logger(0, v21);
    v24 = sub_10000E8E8(v23, (uint64_t)qword_1001A4A60);
    v25 = v22;
    v26 = Logger.logObject.getter(v25);
    v28 = static os_log_type_t.default.getter(v26, v27);
    v29 = os_log_type_enabled(v26, v28);
    v68 = v25;
    if (v29)
    {
      v59[1] = v24;
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = swift_slowAlloc(32, -1);
      v71 = (void *)v31;
      *(_DWORD *)v30 = 136315138;
      v32 = objc_msgSend(v25, "beaconId");
      v60 = v3;
      if (v32)
      {
        v33 = v32;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)(v32);

        v34 = 0;
      }
      else
      {
        v34 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v15, v34, 1, v67);
      sub_10005B590((uint64_t)v15, (uint64_t)v17, &qword_1001A42A0);
      v35 = sub_1000AC100();
      v37 = v36;
      sub_10000D858((uint64_t)v17, &qword_1001A42A0);
      v73 = (id)sub_10001EFA4(v35, v37, (uint64_t *)&v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v30 + 4, v30 + 12);
      v25 = v68;

      swift_bridgeObjectRelease(v37);
      _os_log_impl((void *)&_mh_execute_header, v26, v28, "beaconID: %s", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      v3 = v60;
    }
    else
    {

    }
    v38 = objc_msgSend(v25, "beaconId");
    v39 = v69;
    if (v38)
    {
      v40 = v38;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v38);

      v41 = 0;
    }
    else
    {
      v41 = 1;
    }
    v42 = v66;
    v43 = v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v12, v41, 1, v67);
    Optional.unwrap(_:file:line:)(v39, sub_10002F06C, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 2797, v42);
    sub_10000D858((uint64_t)v12, &qword_1001A42A0);
    v71 = 0;
    v72 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    v44 = swift_bridgeObjectRelease(v72);
    v71 = (void *)0xD000000000000013;
    v72 = 0x80000001001379C0;
    v45._countAndFlagsBits = UUID.uuidString.getter(v44);
    object = v45._object;
    String.append(_:)(v45);
    swift_bridgeObjectRelease(object);
    v48 = (uint64_t)v71;
    v47 = v72;
    v49 = swift_bridgeObjectRetain_n(v72, 2);
    v50 = Logger.logObject.getter(v49);
    v52 = static os_log_type_t.default.getter(v50, v51);
    if (os_log_type_enabled(v50, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc(12, -1);
      v54 = swift_slowAlloc(32, -1);
      v71 = (void *)v54;
      *(_DWORD *)v53 = 136315138;
      swift_bridgeObjectRetain(v47);
      v73 = (id)sub_10001EFA4(v48, v47, (uint64_t *)&v71);
      v39 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v53 + 4, v53 + 12);
      swift_bridgeObjectRelease_n(v47, 3);
      _os_log_impl((void *)&_mh_execute_header, v50, v52, "Opening findmy at %s", v53, 0xCu);
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v47, 2);
    }
    v56 = v64;
    v55 = v65;
    v57 = v63;
    URL.init(string:)(v48, v47);
    swift_bridgeObjectRelease(v47);
    Optional.unwrap(_:file:line:)(v57, sub_10002F088, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 2803, v62);
    sub_10000D858((uint64_t)v3, &qword_1001A3618);
    (*(void (**)(char *, _QWORD *, uint64_t))(v56 + 16))(v3, v57, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v3, 0, 1, v55);
    v58 = v61;
    sub_1000356AC(0, (uint64_t)v3, 0, 0, 2805);

    sub_10000D858((uint64_t)v3, &qword_1001A3618);
    (*(void (**)(_QWORD *, uint64_t))(v56 + 8))(v57, v55);
    return (char *)(*(uint64_t (**)(_QWORD *, uint64_t))(v70 + 8))(v39, v43);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100054A78(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  NSString v10;
  id v11;
  objc_super v13;

  v6 = OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_tv;
  v7 = objc_allocWithZone((Class)UITableView);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "initWithFrame:style:", 0, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v8[OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_mapViewController] = 0;
  v9 = OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_data;
  *(_QWORD *)&v8[v9] = sub_1000529A4();

  if (a2)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for B389DoneViewController();
  v11 = objc_msgSendSuper2(&v13, "initWithNibName:bundle:", v10, a3);

  return v11;
}

uint64_t sub_100054B84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t, uint64_t, void *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  if (a3)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v9 = v8;
  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v10 = a4;
  return a5(v7, v9, a4);
}

id sub_100054BF0(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_tv;
  v4 = objc_allocWithZone((Class)UITableView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithFrame:style:", 0, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_mapViewController] = 0;
  v6 = OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_data;
  *(_QWORD *)&v5[v6] = sub_1000529A4();

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for B389DoneViewController();
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_100054CD8(uint64_t a1)
{
  return sub_100014100(a1, type metadata accessor for B389DoneViewController);
}

uint64_t type metadata accessor for B389DoneViewController()
{
  return objc_opt_self(_TtC18SharingViewService22B389DoneViewController);
}

void sub_100054D60(void *a1)
{
  char *v1;
  NSString v3;
  Class isa;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  Swift::String v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSString v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  NSString v48;
  NSString v49;
  id v50;
  uint64_t v51;
  void *v52;
  id v53;
  NSString v54;
  id v55;
  NSString v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  NSString v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;

  v3 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v3, isa);

  v6 = type metadata accessor for B389FeatureTableViewCell();
  v7 = swift_dynamicCastClassUnconditional(v5, v6, 0, 0, 0);
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService22B389DoneViewController_data];
  v9 = IndexPath.row.getter();
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v9 >= *(_QWORD *)(v8 + 16))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v64 = v1;
  v10 = v8 + (v9 << 6);
  v12 = *(_QWORD *)(v10 + 32);
  v11 = *(_QWORD *)(v10 + 40);
  v13 = v7;
  v14 = *(_QWORD *)(v10 + 48);
  v15 = *(_QWORD *)(v10 + 56);
  v16 = *(unsigned __int8 *)(v10 + 64);
  v17 = *(void **)(v10 + 72);
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = *(_QWORD *)(v10 + 88);
  v20 = (_QWORD *)(v13 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration);
  v21 = *(_QWORD *)(v13 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration);
  v22 = *(_QWORD *)(v13 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration + 8);
  v24 = *(_QWORD *)(v13 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration + 16);
  v23 = *(void **)(v13 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell_glyphConfiguration + 24);
  *v20 = v14;
  v20[1] = v15;
  v20[2] = v16;
  v20[3] = v17;
  v68 = v19;
  swift_retain(v19);
  swift_bridgeObjectRetain_n(v15, 3);
  v25 = v17;
  swift_bridgeObjectRetain(v11);
  sub_100017C08(v21, v22, v24, v23);
  v26 = v13;
  sub_100017538();
  v66 = v25;

  v67 = v15;
  swift_bridgeObjectRelease(v15);
  v70 = v12;
  v71 = v11;
  swift_bridgeObjectRetain(v11);
  v27._countAndFlagsBits = 0x4C5449544255535FLL;
  v27._object = (void *)0xE900000000000045;
  String.append(_:)(v27);
  if (v18 == 1)
  {
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    v29 = sub_100116484(v28);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v31 = v30;

  }
  else
  {
    v31 = v11;
  }
  v32 = v26;
  if (v68)
  {
    v69 = v64;
    swift_retain(v68);
    v33 = v64;
    swift_getAtKeyPath(&v70, &v69, v68);

    v34 = v11;
    v35 = v70;
    v65 = v71;
    v36 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v37 = String._bridgeToObjectiveC()();
    v38 = String._bridgeToObjectiveC()();
    v39 = sub_100117218(v36, v37, v38);

    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v42 = v41;
    swift_bridgeObjectRelease(v31);

    v43 = sub_100006A6C((uint64_t *)&unk_1001A7D20);
    v44 = swift_allocObject(v43, 72, 7);
    *(_OWORD *)(v44 + 16) = xmmword_100131C40;
    *(_QWORD *)(v44 + 56) = &type metadata for String;
    *(_QWORD *)(v44 + 64) = sub_10000D794();
    *(_QWORD *)(v44 + 32) = v35;
    v11 = v34;
    *(_QWORD *)(v44 + 40) = v65;
    static String.localizedStringWithFormat(_:_:)(v40, v42, v44);
    v46 = v45;
    swift_bridgeObjectRelease(v42);
    swift_bridgeObjectRelease(v44);
    swift_release(v68);
  }
  else
  {
    v47 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v48 = String._bridgeToObjectiveC()();
    v49 = String._bridgeToObjectiveC()();
    v50 = sub_100117218(v47, v48, v49);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v46 = v51;
    swift_bridgeObjectRelease(v31);

  }
  v52 = *(void **)(v32 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__detailTextLabel);
  if (!v52)
    goto LABEL_14;
  v53 = v52;
  v54 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v46);
  objc_msgSend(v53, "setText:", v54);

  v55 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v56 = String._bridgeToObjectiveC()();
  v57 = String._bridgeToObjectiveC()();
  v58 = sub_100117218(v55, v56, v57);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
  v60 = v59;

  v61 = *(void **)(v32 + OBJC_IVAR____TtC18SharingViewService24B389FeatureTableViewCell__textLabel);
  if (v61)
  {
    v62 = v61;
    v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v60);
    objc_msgSend(v62, "setText:", v63);
    swift_release(v68);

    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v11);

    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t storeEnumTagSinglePayload for B389SetupMainViewController.FindMyFinalizationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1000553DC + 4 * byte_100132F65[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100055410 + 4 * byte_100132F60[v4]))();
}

uint64_t sub_100055410(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100055418(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100055420);
  return result;
}

uint64_t sub_10005542C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100055434);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100055438(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100055440(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for B389SetupMainViewController.FindMyFinalizationState()
{
  return &type metadata for B389SetupMainViewController.FindMyFinalizationState;
}

uint64_t initializeBufferWithCopyOfBuffer for B389SetupMainViewController.PairingState(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for B389SetupMainViewController.PairingState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for B389SetupMainViewController.PairingState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1000554C0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1000554DC(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for B389SetupMainViewController.PairingState()
{
  return &type metadata for B389SetupMainViewController.PairingState;
}

unint64_t sub_100055510()
{
  unint64_t result;

  result = qword_1001A5400;
  if (!qword_1001A5400)
  {
    result = swift_getWitnessTable(&unk_1001331F0, &type metadata for B389SetupMainViewController.FindMyFinalizationState);
    atomic_store(result, (unint64_t *)&qword_1001A5400);
  }
  return result;
}

void sub_100055554(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t, uint64_t, void *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  v9 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v12 = v11;
  swift_retain(v8);
  v14 = a2;
  v13 = a5;
  v9(a2, v10, v12, a4, a5);
  swift_release(v8);
  swift_bridgeObjectRelease(v12);

}

_QWORD *sub_1000555F8(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v3)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_1000C8BA0(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v5 = 0;
    v14 = v2 & 0xC000000000000001;
    v6 = v2;
    while (v3 != v5)
    {
      if (v14)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      v11 = a2;
      if (v9 >= v10 >> 1)
        sub_1000C8BA0(v10 > 1, v9 + 1, 1);
      ++v5;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      v12 = (char *)&_swiftEmptyArrayStorage[2 * v9];
      *((_QWORD *)v12 + 4) = v11;
      *((_QWORD *)v12 + 5) = v8;
      v2 = v6;
      if (v3 == v5)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (v2 < 0)
      v13 = v2;
    else
      v13 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

uint64_t sub_10005575C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
    return ((uint64_t (*)(void))((char *)&loc_100055788 + 4 * byte_100132F6A[a1]))();
  if ((a4 & 1) != 0)
    return 0;
  return a1 == a3;
}

uint64_t sub_100055804@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_10001E168(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10005581C()
{
  uint64_t v0;

  return sub_100048624(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100055824()
{
  unint64_t result;

  result = qword_1001A5410;
  if (!qword_1001A5410)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SDRunState, &type metadata for SDRunState);
    atomic_store(result, (unint64_t *)&qword_1001A5410);
  }
  return result;
}

uint64_t sub_100055868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_10005588C()
{
  return sub_100055DC4((void (*)(_QWORD))&_swift_release);
}

void sub_100055898(CLLocationDegrees a1, CLLocationDegrees a2)
{
  uint64_t v2;

  sub_1000401DC(*(_QWORD *)(v2 + 16), *(void **)(v2 + 24), a1, a2);
}

uint64_t sub_1000558A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000558B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1000558B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000558DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(double, double))(v0 + 16))(*(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_100055904(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100042BF8(a1, a2, v2, (uint64_t)&unk_100179008, (uint64_t)sub_10005597C, (uint64_t)&unk_100179020);
}

unint64_t sub_100055934()
{
  unint64_t result;

  result = qword_1001A5440;
  if (!qword_1001A5440)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1001A5440);
  }
  return result;
}

uint64_t sub_10005597C()
{
  uint64_t v0;

  return sub_10003EF5C(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100055988()
{
  uint64_t v0;

  return sub_100048810(v0);
}

void sub_100055990()
{
  uint64_t v0;

  sub_1000488E8(v0);
}

void sub_100055998(uint64_t a1, unint64_t a2, void *a3)
{
  if (a3 != (void *)1)
    sub_100024034(a1, a2, a3);
}

uint64_t sub_1000559A8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(void))
{
  uint64_t result;

  if (a2 >> 60 != 15)
  {
    a11();
    ((void (*)(uint64_t, uint64_t))a11)(a3, a4);
    ((void (*)(uint64_t, uint64_t))a11)(a5, a6);
    ((void (*)(uint64_t, uint64_t))a11)(a7, a8);
    return ((uint64_t (*)(uint64_t, uint64_t))a11)(a9, a10);
  }
  return result;
}

uint64_t sub_100055A54(uint64_t a1)
{
  sub_100006B94(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100055A80(uint64_t a1)
{
  sub_100007348(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100055AAC()
{
  uint64_t v0;

  return sub_100042AB4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100055AB4(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100042BF8(a1, a2, v2, (uint64_t)&unk_100179080, (uint64_t)sub_100055BA8, (uint64_t)&unk_100179098);
}

uint64_t *sub_100055AE4(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[9];
  sub_100007348(*a1, a1[1]);
  sub_100007348(v2, v3);
  sub_100007348(v4, v5);
  sub_100007348(v6, v7);
  sub_100007348(v8, v9);
  return a1;
}

uint64_t sub_100055B74()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100055BA8()
{
  uint64_t v0;

  return sub_100042E34(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

id sub_100055BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  id result;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if ((unint64_t)a1 >> 62)
  {
LABEL_22:
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v23);
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
    {
LABEL_3:
      v7 = 4;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1);
        else
          v8 = *(id *)(a1 + 8 * v7);
        v9 = v8;
        v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
        {
          __break(1u);
          goto LABEL_22;
        }
        v11 = objc_msgSend(v8, "groupIdentifier");
        if (v11)
        {
          v12 = v11;
          v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
          v15 = v14;

          if (v13 == a2 && v15 == a3)
          {
            swift_bridgeObjectRelease(a3);
          }
          else
          {
            v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, a2, a3, 0);
            swift_bridgeObjectRelease(v15);
            if ((v17 & 1) == 0)
              goto LABEL_4;
          }
          result = objc_msgSend(v9, "uniqueIdentifier");
          if (!result)
          {
            __break(1u);
            return result;
          }
          v19 = result;
          v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
          v22 = v21;

          LOBYTE(v19) = sub_1000AD498(v20, v22, a4);
          swift_bridgeObjectRelease(v22);
          if ((v19 & 1) != 0)
          {
            swift_bridgeObjectRelease(a1);
            return v9;
          }
        }
LABEL_4:

        ++v7;
      }
      while (v10 != v6);
    }
  }
  swift_bridgeObjectRelease(a1);
  return 0;
}

id sub_100055D98()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "invalidate");
}

uint64_t sub_100055DA8(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10003A0EC(a1, a2, v2);
}

uint64_t sub_100055DB0(uint64_t a1)
{
  uint64_t v1;

  return sub_10003A670(a1, v1);
}

uint64_t sub_100055DB8()
{
  return sub_100055DC4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100055DC4(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, 32, 7);
}

uint64_t sub_100055DF4()
{
  uint64_t v0;

  return sub_10003A8A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100055DFC()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100055E30()
{
  uint64_t v0;

  return sub_10003A330(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

id sub_100055E3C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a2);
    return a3;
  }
  return result;
}

uint64_t sub_100055E84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100052E18();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_100055EAC(uint64_t a1)
{
  uint64_t v1;

  sub_100054054(a1, v1);
}

void sub_100055EB4(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  NSString v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  void *v30;
  id v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  _QWORD v38[5];
  uint64_t v39;

  v6 = String._bridgeToObjectiveC()();
  v7 = sub_100116484(v6);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100117218(v10, v11, v12);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;
  swift_bridgeObjectRelease(v9);

  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100117314(v16);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v19 = v18;

  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v22 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v20, v21, 1);

  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100117314(v23);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v26 = v25;

  v27 = swift_allocObject(&unk_100179710, 32, 7);
  *(_QWORD *)(v27 + 16) = a2;
  *(_QWORD *)(v27 + 24) = a3;
  swift_retain(a3);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v38[4] = sub_10005BAD8;
  v39 = v27;
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 1107296256;
  v38[2] = sub_10001B5D0;
  v38[3] = &unk_100179728;
  v29 = _Block_copy(v38);
  swift_release(v39);
  v30 = (void *)objc_opt_self(UIAlertAction);
  v31 = objc_msgSend(v30, "actionWithTitle:style:handler:", v28, 0, v29);
  _Block_release(v29);

  objc_msgSend(v22, "addAction:", v31);
  v32 = String._bridgeToObjectiveC()();
  v33 = sub_100117314(v32);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v35 = v34;

  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  v37 = objc_msgSend(v30, "actionWithTitle:style:handler:", v36, 1, 0);

  objc_msgSend(v22, "addAction:", v37);
  objc_msgSend(v22, "setPreferredAction:", v31);
  objc_msgSend(a1, "presentViewController:animated:completion:", v22, 1, 0);

}

BOOL sub_100056284()
{
  id v0;
  void *v1;
  unsigned int v2;
  id v3;
  unsigned int v4;

  v0 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (!v0)
    return 1;
  v1 = v0;
  v2 = objc_msgSend(v0, "effectiveBoolValueForSetting:", MCFeatureFindMyDeviceAllowed);
  v3 = MCFeatureFindMyFriendsAllowed;
  v4 = objc_msgSend(v1, "effectiveBoolValueForSetting:", v3);

  return v2 != 2 && v4 != 2;
}

uint64_t sub_10005632C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  id v9;
  id v10;
  NSString v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD aBlock[5];
  uint64_t v17;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v2 = type metadata accessor for Logger(0, a2);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A4A60);
  v4 = Logger.logObject.getter(v3);
  v6 = static os_log_type_t.default.getter(v4, v5);
  if (os_log_type_enabled(v4, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v6, "takeBKSAssertion()", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v9 = objc_msgSend(v8, "processIdentifier");

  v10 = objc_allocWithZone((Class)BKSProcessAssertion);
  v11 = String._bridgeToObjectiveC()();
  aBlock[4] = sub_100035570;
  v17 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000AC858;
  aBlock[3] = &unk_1001797C8;
  v12 = _Block_copy(aBlock);
  v13 = objc_msgSend(v10, "initWithPID:flags:reason:name:withHandler:", v9, 15, 9, v11, v12, swift_release(v17).n128_f64[0]);
  _Block_release(v12);

  v14 = sub_100006A6C(&qword_1001A7D40);
  Optional.unwrap(_:file:line:)(aBlock, sub_100035690, 0, "SharingViewService/B389SetupMainViewController.swift", 52, 2, 427, v14);

  return aBlock[0];
}

void sub_100056530(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  NSString v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  id v30;
  _QWORD v31[5];
  uint64_t v32;

  v6 = String._bridgeToObjectiveC()();
  v7 = sub_100116484(v6);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100117218(v10, v11, v12);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;
  swift_bridgeObjectRelease(v9);

  v16 = String._bridgeToObjectiveC()();
  v17 = sub_100117314(v16);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v19 = v18;

  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v22 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v20, v21, 1);

  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100117314(v23);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v26 = v25;

  v27 = swift_allocObject(&unk_100179288, 32, 7);
  *(_QWORD *)(v27 + 16) = a2;
  *(_QWORD *)(v27 + 24) = a3;
  swift_retain(a3);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v31[4] = sub_1000240E4;
  v32 = v27;
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 1107296256;
  v31[2] = sub_10001B5D0;
  v31[3] = &unk_1001792A0;
  v29 = _Block_copy(v31);
  swift_release(v32);
  v30 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v28, 0, v29);
  _Block_release(v29);

  objc_msgSend(v22, "addAction:", v30);
  objc_msgSend(v22, "setPreferredAction:", v30);
  objc_msgSend(a1, "presentViewController:animated:completion:", v22, 1, 0);

}

void sub_10005686C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSString v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  NSString v41;
  id v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSString v48;
  void *v49;
  void *v50;
  id v51;
  NSString v52;
  NSString v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  void *v61;
  id v62;
  void **aBlock;
  uint64_t v68;
  void (*v69)(uint64_t, void *);
  void *v70;
  void *v71;
  uint64_t v72;

  v6 = String._bridgeToObjectiveC()();
  v7 = MGGetBoolAnswer(v6);

  v8 = 0x8000000100139300;
  if (!a3)
    v8 = 0x80000001001392B0;
  v9 = 0x8000000100139380;
  if (!a3)
    v9 = 0x8000000100139350;
  if (v7)
    v10 = v9;
  else
    v10 = v8;
  if (v7)
    v11 = 0x8000000100139330;
  else
    v11 = 0x8000000100139290;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  v13 = sub_100116484(v12);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v17 = sub_100116484(v16);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v19 = v18;

  v20 = (void *)objc_opt_self(NSBundle);
  v21 = objc_msgSend(v20, "mainBundle");
  v22 = String._bridgeToObjectiveC()();
  v23 = String._bridgeToObjectiveC()();
  v24 = sub_100117218(v21, v22, v23);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;
  swift_bridgeObjectRelease(v15);

  v28 = sub_100006A6C((uint64_t *)&unk_1001A7D20);
  v29 = swift_allocObject(v28, 72, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100131C40;
  *(_QWORD *)(v29 + 56) = &type metadata for String;
  *(_QWORD *)(v29 + 64) = sub_10000D794();
  v30 = a2;
  if (!a3)
    v30 = 0;
  v31 = 0xE000000000000000;
  if (a3)
    v31 = a3;
  *(_QWORD *)(v29 + 32) = v30;
  *(_QWORD *)(v29 + 40) = v31;
  swift_bridgeObjectRetain(a3);
  static String.localizedStringWithFormat(_:_:)(v25, v27, v29);
  v33 = v32;
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v29);
  v34 = objc_msgSend(v20, "mainBundle");
  v35 = String._bridgeToObjectiveC()();
  v36 = String._bridgeToObjectiveC()();
  v37 = sub_100117218(v34, v35, v36);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v39 = v38;
  swift_bridgeObjectRelease(v19);

  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  v42 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v40, v41, 1);

  v43 = String._bridgeToObjectiveC()();
  v44 = sub_100117314(v43);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
  v46 = v45;

  v47 = swift_allocObject(&unk_100179580, 32, 7);
  *(_QWORD *)(v47 + 16) = a4;
  *(_QWORD *)(v47 + 24) = a5;
  swift_retain(a5);
  v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v46);
  v71 = sub_10005BAD8;
  v72 = v47;
  aBlock = _NSConcreteStackBlock;
  v68 = 1107296256;
  v69 = sub_10001B5D0;
  v70 = &unk_100179598;
  v49 = _Block_copy(&aBlock);
  swift_release(v72);
  v50 = (void *)objc_opt_self(UIAlertAction);
  v51 = objc_msgSend(v50, "actionWithTitle:style:handler:", v48, 1, v49);
  _Block_release(v49);

  objc_msgSend(v42, "addAction:", v51);
  v52 = String._bridgeToObjectiveC()();
  v53 = sub_100116484(v52);

  if (!v53)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v55 = v54;
    v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v55);
  }
  v56 = sub_100117314(v53);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
  v58 = v57;

  v59 = swift_allocObject(&unk_1001795D0, 32, 7);
  *(_QWORD *)(v59 + 16) = a4;
  *(_QWORD *)(v59 + 24) = a5;
  swift_retain(a5);
  v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v58);
  v71 = sub_10005B6D4;
  v72 = v59;
  aBlock = _NSConcreteStackBlock;
  v68 = 1107296256;
  v69 = sub_10001B5D0;
  v70 = &unk_1001795E8;
  v61 = _Block_copy(&aBlock);
  v62 = objc_msgSend(v50, "actionWithTitle:style:handler:", v60, 0, v61, swift_release(v72).n128_f64[0]);
  _Block_release(v61);

  objc_msgSend(v42, "addAction:", v62);
  objc_msgSend(v42, "setPreferredAction:", v62);
  objc_msgSend(a1, "presentViewController:animated:completion:", v42, 1, 0);

}

void sub_100056EDC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  uint64_t v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  id v31;
  id v32;
  _QWORD *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  uint8_t *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;

  v65 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100006A6C(&qword_1001A5550);
  __chkstk_darwin(v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for B389PresentationConfig.Mode(0);
  v8 = __chkstk_darwin(v61);
  v62 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v53 - v10;
  v12 = sub_100006A6C(&qword_1001A5428);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100006A6C(&qword_1001A42A0);
  v16 = __chkstk_darwin(v15);
  v60 = (uint64_t)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v53 - v19;
  __chkstk_darwin(v18);
  v63 = (uint64_t)&v53 - v22;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v23 = type metadata accessor for Logger(0, v21);
  sub_10000E8E8(v23, (uint64_t)qword_1001A4A60);
  v24 = a1;
  v25 = Logger.logObject.getter(v24);
  v27 = static os_log_type_t.default.getter(v25, v26);
  v28 = os_log_type_enabled(v25, v27);
  v59 = v4;
  if (v28)
  {
    v29 = swift_slowAlloc(12, -1);
    v57 = v2;
    v30 = (uint8_t *)v29;
    v54 = (_QWORD *)swift_slowAlloc(8, -1);
    v58 = v7;
    v55 = v30;
    *(_DWORD *)v30 = 138412290;
    v66 = v24;
    v31 = v24;
    v56 = v20;
    v32 = v31;
    v7 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v30 + 4, v30 + 12);
    v33 = v54;
    *v54 = v24;

    v34 = v27;
    v35 = v55;
    v20 = v56;
    _os_log_impl((void *)&_mh_execute_header, v25, v34, "didConnect: %@", v55, 0xCu);
    v36 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v33, 1, v36);
    swift_slowDealloc(v33, -1, -1);
    v2 = v57;
    swift_slowDealloc(v35, -1, -1);

  }
  else
  {

  }
  v37 = objc_msgSend(v24, "identifier");
  v38 = v63;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v39(v38, 0, 1, v65);
  v40 = v64 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig;
  swift_beginAccess(v64 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig, &v66, 0, 0);
  sub_100006BD8(v40, (uint64_t)v14, &qword_1001A5428);
  v41 = type metadata accessor for B389PresentationConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v14, 1, v41) == 1)
  {
    __break(1u);
    return;
  }
  sub_100023F5C((uint64_t)v14, (uint64_t)v11, type metadata accessor for B389PresentationConfig.Mode);
  v42 = v62;
  sub_100023F5C((uint64_t)v11, v62, type metadata accessor for B389PresentationConfig.Mode);
  if (swift_getEnumCaseMultiPayload(v42, v61) == 1)
  {
    v43 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v20, v42, v65);
    v39((uint64_t)v20, 0, 1, v43);
  }
  else
  {
    v39((uint64_t)v20, 1, 1, v65);
    sub_100023FA0(v42, type metadata accessor for B389PresentationConfig.Mode);
  }
  sub_100023FA0((uint64_t)v11, type metadata accessor for B389PresentationConfig.Mode);
  v44 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_100006BD8(v38, (uint64_t)v7, &qword_1001A42A0);
  sub_100006BD8((uint64_t)v20, v44, &qword_1001A42A0);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v45((uint64_t)v7, 1, v65) != 1)
  {
    v47 = v60;
    sub_100006BD8((uint64_t)v7, v60, &qword_1001A42A0);
    if (v45(v44, 1, v65) != 1)
    {
      v48 = v59;
      v49 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v59, v44, v65);
      v50 = sub_100005B80((unint64_t *)&qword_1001A5530, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v51 = dispatch thunk of static Equatable.== infix(_:_:)(v47, v48, v49, v50);
      v52 = *(void (**)(char *, uint64_t))(v2 + 8);
      v52(v48, v49);
      sub_10000D858((uint64_t)v20, &qword_1001A42A0);
      sub_10000D858(v63, &qword_1001A42A0);
      v52((char *)v47, v49);
      sub_10000D858((uint64_t)v7, &qword_1001A42A0);
      v46 = sub_100023FA0((uint64_t)v14, type metadata accessor for B389PresentationConfig);
      if ((v51 & 1) == 0)
        return;
      goto LABEL_17;
    }
    sub_10000D858((uint64_t)v20, &qword_1001A42A0);
    sub_10000D858(v38, &qword_1001A42A0);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v47, v65);
LABEL_15:
    sub_10000D858((uint64_t)v7, &qword_1001A5550);
    sub_100023FA0((uint64_t)v14, type metadata accessor for B389PresentationConfig);
    return;
  }
  sub_10000D858((uint64_t)v20, &qword_1001A42A0);
  sub_10000D858(v38, &qword_1001A42A0);
  if (v45(v44, 1, v65) != 1)
    goto LABEL_15;
  sub_10000D858((uint64_t)v7, &qword_1001A42A0);
  v46 = sub_100023FA0((uint64_t)v14, type metadata accessor for B389PresentationConfig);
LABEL_17:
  *(_BYTE *)(v64 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_connectionState) = 2;
  sub_100031994(v46);
}

void sub_100057564(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = (_QWORD *)swift_slowAlloc(8, -1);
    v28 = v5;
    *(_DWORD *)v8 = 138412290;
    v9 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v8 + 4, v8 + 12);
    *v27 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "didFailToConnect: %@", v8, 0xCu);
    v10 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v27, 1, v10);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v11 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v11, "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100117218(v12, v13, v14);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v18 = v17;

  v19 = objc_msgSend(v11, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = sub_100117218(v19, v20, v21);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  sub_100043404(v16, v18, a2, v23, v25, 0);
  swift_bridgeObjectRelease(v18);
  v26 = swift_bridgeObjectRelease(v25);
  sub_100031994(v26);
}

void sub_10005787C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  NSString v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  _BYTE v39[8];
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v3 = v2;
  if (a2)
    v6 = static os_log_type_t.error.getter(a1);
  else
    v6 = static os_log_type_t.default.getter(a1, 0);
  v8 = v6;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v9 = type metadata accessor for Logger(0, v7);
  sub_10000E8E8(v9, (uint64_t)qword_1001A4A60);
  v10 = a1;
  swift_errorRetain(a2);
  v11 = v10;
  v12 = swift_errorRetain(a2);
  v13 = Logger.logObject.getter(v12);
  if (os_log_type_enabled(v13, v8))
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = (_QWORD *)swift_slowAlloc(8, -1);
    v16 = swift_slowAlloc(32, -1);
    v42 = v16;
    *(_DWORD *)v14 = 138412546;
    v40 = (uint64_t)v11;
    v17 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v14 + 4, v14 + 12);
    *v15 = v11;

    *(_WORD *)(v14 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue(a2, v39, v38);
      v18 = Error.localizedDescription.getter(v38[1], v38[2]);
      v20 = v19;
    }
    else
    {
      v40 = 0;
      v41 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v41);
      v18 = 0xD000000000000015;
      v20 = 0x8000000100136820;
    }
    v40 = sub_10001EFA4(v18, v20, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v14 + 14, v14 + 22);
    swift_bridgeObjectRelease(v20);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v13, v8, "didDisconnectPeripheral: %@, error: %s", (uint8_t *)v14, 0x16u);
    v21 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v15, 1, v21);
    swift_slowDealloc(v15, -1, -1);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {

    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_findMyFinalizeState) != 2)
  {
    v23 = (void *)objc_opt_self(NSBundle);
    v24 = objc_msgSend(v23, "mainBundle");
    v25 = String._bridgeToObjectiveC()();
    v26 = String._bridgeToObjectiveC()();
    v27 = sub_100117218(v24, v25, v26);

    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v31 = objc_msgSend(v23, "mainBundle");
    v32 = String._bridgeToObjectiveC()();
    v33 = String._bridgeToObjectiveC()();
    v34 = sub_100117218(v31, v32, v33);

    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v37 = v36;

    sub_100043404(v28, v30, a2, v35, v37, 0);
    swift_bridgeObjectRelease(v30);
    v22 = swift_bridgeObjectRelease(v37);
  }
  sub_100031994(v22);
}

void sub_100057CB8(void *a1, void *a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t type;
  id v35;
  uint64_t v36;

  v3 = v2;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v6, (uint64_t)qword_1001A4A60);
  v7 = a1;
  v8 = a2;
  v9 = v7;
  v10 = v8;
  v11 = Logger.logObject.getter(v10);
  v13 = static os_log_type_t.default.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = (_QWORD *)swift_slowAlloc(16, -1);
    *(_DWORD *)v14 = 138412546;
    v35 = v9;
    type = v13;
    v16 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v14 + 4, v14 + 12);
    *v15 = v9;

    *(_WORD *)(v14 + 12) = 2112;
    v35 = v10;
    v17 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v14 + 14, v14 + 22);
    v15[1] = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, type, "didLosePeripheral: %@, forType: %@", (uint8_t *)v14, 0x16u);
    v18 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v15, 2, v18);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

  }
  if (v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_didTapStart] == 1)
  {
    if (v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_findMyFinalizeState] != 2)
    {
      v19 = (void *)objc_opt_self(NSBundle);
      v20 = objc_msgSend(v19, "mainBundle");
      v21 = String._bridgeToObjectiveC()();
      v22 = String._bridgeToObjectiveC()();
      v23 = sub_100117218(v20, v21, v22);

      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

      v27 = objc_msgSend(v19, "mainBundle");
      v28 = String._bridgeToObjectiveC()();
      v29 = String._bridgeToObjectiveC()();
      v30 = sub_100117218(v27, v28, v29);

      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v33 = v32;

      sub_100043404(v24, v26, 0, v31, v33, 0);
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v33);
    }
  }
  else
  {
    objc_msgSend(v3, "dismiss:", 7);
  }
  sub_1000323A4(0);
}

void sub_100058064(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  _BYTE v35[8];
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v4 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v4, (uint64_t)qword_1001A4A60);
  v5 = a1;
  swift_errorRetain(a2);
  v6 = v5;
  v7 = swift_errorRetain(a2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    v33 = swift_slowAlloc(32, -1);
    v38 = v33;
    *(_DWORD *)v10 = 138412546;
    if (a1)
    {
      v36 = (uint64_t)v6;
      v12 = v6;
    }
    else
    {
      v36 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v10 + 4, v10 + 12);
    *v11 = a1;

    *(_WORD *)(v10 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue(a2, v35, v34);
      v13 = Error.localizedDescription.getter(v34[1], v34[2]);
      v15 = v14;
    }
    else
    {
      v36 = 0;
      v37 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v37);
      v13 = 0xD000000000000015;
      v15 = 0x8000000100136820;
    }
    v36 = sub_10001EFA4(v13, v15, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v10 + 14, v10 + 22);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "peerDidFailToCompletePairing: %@, error: %s", (uint8_t *)v10, 0x16u);
    v16 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v11, 1, v16);
    swift_slowDealloc(v11, -1, -1);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {

    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  v17 = (void *)objc_opt_self(NSBundle);
  v18 = objc_msgSend(v17, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = String._bridgeToObjectiveC()();
  v21 = sub_100117218(v18, v19, v20);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = objc_msgSend(v17, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = sub_100117218(v25, v26, v27);

  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  sub_100043404(v22, v24, a2, v29, v31, 0);
  swift_bridgeObjectRelease(v24);
  v32 = swift_bridgeObjectRelease(v31);
  sub_100031994(v32);
}

void sub_1000584B0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  uint64_t v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;

  v2 = type metadata accessor for UUID(0);
  v57 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v53 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100006A6C(&qword_1001A5550);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for B389PresentationConfig.Mode(0);
  v7 = __chkstk_darwin(v55);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v60 = (uint64_t)&v49 - v10;
  v11 = sub_100006A6C(&qword_1001A5428);
  __chkstk_darwin(v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100006A6C(&qword_1001A42A0);
  v15 = __chkstk_darwin(v14);
  v54 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v58 = (uint64_t)&v49 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v49 - v20;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v22 = type metadata accessor for Logger(0, v19);
  sub_10000E8E8(v22, (uint64_t)qword_1001A4A60);
  v23 = a1;
  v24 = Logger.logObject.getter(v23);
  v26 = static os_log_type_t.default.getter(v24, v25);
  v27 = os_log_type_enabled(v24, v26);
  v56 = v9;
  if (v27)
  {
    v49 = v21;
    v50 = v4;
    v51 = v13;
    v52 = v6;
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v28 = 138412290;
    if (a1)
    {
      v61 = v23;
      v30 = v23;
    }
    else
    {
      v61 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v28 + 4, v28 + 12);
    *v29 = a1;

    _os_log_impl((void *)&_mh_execute_header, v24, v26, "peerDidCompletePairing: %@", v28, 0xCu);
    v31 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v29, 1, v31);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v28, -1, -1);

    v13 = v51;
    v6 = v52;
    v21 = v49;
    v4 = v50;
  }
  else
  {

  }
  v32 = v58;
  if (!a1)
  {
    __break(1u);
LABEL_24:
    __break(1u);
  }
  v33 = objc_msgSend(v23, "identifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v34 = v57;
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
  v35(v21, 0, 1, v2);
  v36 = v59 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig;
  swift_beginAccess(v59 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig, &v61, 0, 0);
  sub_100006BD8(v36, (uint64_t)v13, &qword_1001A5428);
  v37 = type metadata accessor for B389PresentationConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v13, 1, v37) == 1)
    goto LABEL_24;
  v38 = v60;
  sub_100023F5C((uint64_t)v13, v60, type metadata accessor for B389PresentationConfig.Mode);
  v39 = (uint64_t)v56;
  sub_100023F5C(v38, (uint64_t)v56, type metadata accessor for B389PresentationConfig.Mode);
  if (swift_getEnumCaseMultiPayload(v39, v55) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v32, v39, v2);
    v35((char *)v32, 0, 1, v2);
  }
  else
  {
    v35((char *)v32, 1, 1, v2);
    sub_100023FA0(v39, type metadata accessor for B389PresentationConfig.Mode);
  }
  sub_100023FA0(v60, type metadata accessor for B389PresentationConfig.Mode);
  v40 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_100006BD8((uint64_t)v21, (uint64_t)v6, &qword_1001A42A0);
  sub_100006BD8(v32, v40, &qword_1001A42A0);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v41((uint64_t)v6, 1, v2) != 1)
  {
    v43 = v54;
    sub_100006BD8((uint64_t)v6, v54, &qword_1001A42A0);
    if (v41(v40, 1, v2) != 1)
    {
      v44 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v53, v40, v2);
      v45 = sub_100005B80((unint64_t *)&qword_1001A5530, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v46 = dispatch thunk of static Equatable.== infix(_:_:)(v43, v44, v2, v45);
      v47 = *(void (**)(char *, uint64_t))(v34 + 8);
      v47(v44, v2);
      sub_10000D858(v58, &qword_1001A42A0);
      sub_10000D858((uint64_t)v21, &qword_1001A42A0);
      v47((char *)v43, v2);
      sub_10000D858((uint64_t)v6, &qword_1001A42A0);
      v42 = sub_100023FA0((uint64_t)v13, type metadata accessor for B389PresentationConfig);
      if ((v46 & 1) == 0)
        return;
      goto LABEL_21;
    }
    sub_10000D858(v32, &qword_1001A42A0);
    sub_10000D858((uint64_t)v21, &qword_1001A42A0);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v43, v2);
LABEL_19:
    sub_10000D858((uint64_t)v6, &qword_1001A5550);
    sub_100023FA0((uint64_t)v13, type metadata accessor for B389PresentationConfig);
    return;
  }
  sub_10000D858(v32, &qword_1001A42A0);
  sub_10000D858((uint64_t)v21, &qword_1001A42A0);
  if (v41(v40, 1, v2) != 1)
    goto LABEL_19;
  sub_10000D858((uint64_t)v6, &qword_1001A42A0);
  v42 = sub_100023FA0((uint64_t)v13, type metadata accessor for B389PresentationConfig);
LABEL_21:
  v48 = v59 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairState;
  *(_QWORD *)v48 = 3;
  *(_BYTE *)(v48 + 8) = 1;
  sub_100031994(v42);
}

uint64_t sub_100058B74(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  uint64_t v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint8_t *v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  void (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  int v55;
  char *v56;
  uint64_t v57;
  int v58;
  char *v59;
  uint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  uint64_t v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t (*v77)(char *, uint64_t);
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;

  v88 = a2;
  v95 = sub_100006A6C(&qword_1001A5550);
  __chkstk_darwin(v95);
  v101 = (uint64_t)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for B389PresentationConfig.Mode(0);
  v4 = __chkstk_darwin(v92);
  v93 = (uint64_t)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v94 = (uint64_t)&v83 - v6;
  v7 = sub_100006A6C(&qword_1001A5428);
  __chkstk_darwin(v7);
  v97 = (uint64_t)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006A6C(&qword_1001A42A0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v83 - v14;
  v16 = __chkstk_darwin(v13);
  v99 = (uint64_t)&v83 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v83 - v18;
  v20 = type metadata accessor for UUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v96 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v87 = (char *)&v83 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v83 - v27;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v29 = type metadata accessor for Logger(0, v26);
  v30 = sub_10000E8E8(v29, (uint64_t)qword_1001A4A60);
  v31 = a1;
  v89 = v30;
  v32 = Logger.logObject.getter(v31);
  v34 = static os_log_type_t.default.getter(v32, v33);
  v35 = os_log_type_enabled(v32, v34);
  v100 = v21;
  v90 = v12;
  if (v35)
  {
    v84 = v20;
    v85 = v15;
    v91 = v28;
    v86 = v19;
    v36 = (uint8_t *)swift_slowAlloc(12, -1);
    v37 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v36 = 138412290;
    if (a1)
    {
      v104 = v31;
      v38 = v31;
    }
    else
    {
      v104 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v36 + 4, v36 + 12);
    *v37 = a1;

    _os_log_impl((void *)&_mh_execute_header, v32, v34, "peerDidRequestPairing: %@", v36, 0xCu);
    v39 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v37, 1, v39);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    v19 = v86;
    v28 = v91;
    v21 = v100;
    v15 = v85;
    v20 = v84;
  }
  else
  {

  }
  v40 = v98;
  if (!a1)
  {
    __break(1u);
LABEL_26:
    __break(1u);
  }
  v41 = objc_msgSend(v31, "identifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v42 = v40 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig;
  swift_beginAccess(v40 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_presentationConfig, &v104, 0, 0);
  v43 = v97;
  sub_100006BD8(v42, v97, &qword_1001A5428);
  v44 = type metadata accessor for B389PresentationConfig(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44) == 1)
    goto LABEL_26;
  v45 = v94;
  sub_100023F5C(v43, v94, type metadata accessor for B389PresentationConfig.Mode);
  v46 = v93;
  sub_100023F5C(v45, v93, type metadata accessor for B389PresentationConfig.Mode);
  v47 = (uint64_t)v15;
  if (swift_getEnumCaseMultiPayload(v46, v92) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v19, v46, v20);
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v48(v19, 0, 1, v20);
  }
  else
  {
    v49 = v46;
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v48(v19, 1, 1, v20);
    sub_100023FA0(v49, type metadata accessor for B389PresentationConfig.Mode);
  }
  sub_100023FA0(v45, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023FA0(v43, type metadata accessor for B389PresentationConfig);
  v50 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 16);
  v51 = v99;
  v50(v99, v28, v20);
  v48((char *)v51, 0, 1, v20);
  v52 = v101;
  v53 = v101 + *(int *)(v95 + 48);
  sub_100006BD8(v51, v101, &qword_1001A42A0);
  sub_100006BD8((uint64_t)v19, v53, &qword_1001A42A0);
  v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v54(v52, 1, v20) == 1)
  {
    sub_10000D858(v51, &qword_1001A42A0);
    v55 = v54(v53, 1, v20);
    v56 = v96;
    if (v55 == 1)
    {
      v57 = sub_10000D858(v101, &qword_1001A42A0);
LABEL_21:
      v63 = v98 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_pairState;
      *(_QWORD *)v63 = v88;
      *(_BYTE *)(v63 + 8) = 0;
      sub_100031994(v57);
      sub_10000D858((uint64_t)v19, &qword_1001A42A0);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v28, v20);
    }
    goto LABEL_19;
  }
  sub_100006BD8(v52, v47, &qword_1001A42A0);
  v58 = v54(v53, 1, v20);
  v56 = v96;
  if (v58 == 1)
  {
    sub_10000D858(v99, &qword_1001A42A0);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v47, v20);
LABEL_19:
    sub_10000D858(v101, &qword_1001A5550);
    goto LABEL_22;
  }
  v59 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v87, v53, v20);
  v60 = sub_100005B80((unint64_t *)&qword_1001A5530, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v61 = dispatch thunk of static Equatable.== infix(_:_:)(v47, v59, v20, v60);
  v62 = *(void (**)(char *, uint64_t))(v100 + 8);
  v62(v59, v20);
  sub_10000D858(v99, &qword_1001A42A0);
  v62((char *)v47, v20);
  v21 = v100;
  v57 = sub_10000D858(v52, &qword_1001A42A0);
  if ((v61 & 1) != 0)
    goto LABEL_21;
LABEL_22:
  v50((uint64_t)v56, v28, v20);
  v65 = (uint64_t)v90;
  v66 = sub_100006BD8((uint64_t)v19, (uint64_t)v90, &qword_1001A42A0);
  v67 = Logger.logObject.getter(v66);
  v69 = static os_log_type_t.default.getter(v67, v68);
  if (os_log_type_enabled(v67, v69))
  {
    v70 = swift_slowAlloc(22, -1);
    v71 = swift_slowAlloc(64, -1);
    v91 = v28;
    v101 = v71;
    v103 = v71;
    *(_DWORD *)v70 = 136315394;
    v72 = sub_100005B80(&qword_1001A5450, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v73 = dispatch thunk of CustomStringConvertible.description.getter(v20, v72);
    v75 = v74;
    v102 = sub_10001EFA4(v73, v74, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v70 + 4, v70 + 12);
    swift_bridgeObjectRelease(v75);
    v76 = *(void (**)(char *, uint64_t))(v100 + 8);
    v76(v56, v20);
    v77 = (uint64_t (*)(char *, uint64_t))v76;
    *(_WORD *)(v70 + 12) = 2080;
    v78 = sub_1000AC100();
    v80 = v79;
    v102 = sub_10001EFA4(v78, v79, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103, v70 + 14, v70 + 22);
    swift_bridgeObjectRelease(v80);
    sub_10000D858(v65, &qword_1001A42A0);
    _os_log_impl((void *)&_mh_execute_header, v67, v69, "Identifier mismatch, skip pairing request: %s != %s", (uint8_t *)v70, 0x16u);
    v81 = v101;
    swift_arrayDestroy(v101, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v81, -1, -1);
    swift_slowDealloc(v70, -1, -1);

    sub_10000D858((uint64_t)v19, &qword_1001A42A0);
    return v77(v91, v20);
  }
  else
  {

    sub_10000D858(v65, &qword_1001A42A0);
    v82 = *(void (**)(char *, uint64_t))(v100 + 8);
    v82(v56, v20);
    sub_10000D858((uint64_t)v19, &qword_1001A42A0);
    return ((uint64_t (*)(char *, uint64_t))v82)(v28, v20);
  }
}

void sub_1000594EC(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t i;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t j;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char **v36;
  id v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  uint64_t v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;

  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v3 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v3, (uint64_t)qword_1001A4A60);
  v4 = a1;
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    v74 = (unint64_t)v4;
    v10 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v74, &v75, v8 + 4, v8 + 12);
    *v9 = v4;

    _os_log_impl((void *)&_mh_execute_header, v5, v7, "didDiscoverCharacteristicsFor: %@\n\n", v8, 0xCu);
    v11 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v12 = objc_msgSend(v4, "services");
  if (!v12)
  {
    v31 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_28;
LABEL_38:
    if (v31 < 0)
      v62 = v31;
    else
      v62 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v31);
    v32 = _CocoaArrayWrapper.endIndex.getter(v62);
    swift_bridgeObjectRelease(v31);
    if (v32)
      goto LABEL_29;
    goto LABEL_42;
  }
  v13 = v12;
  v14 = sub_100013194(0, &qword_1001A5558, CBService_ptr);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v69 = v15;
    else
      v69 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v16 = _CocoaArrayWrapper.endIndex.getter(v69);
  }
  else
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v15);
  }
  v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    if (v16 < 1)
      goto LABEL_50;
    for (i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
      else
        v19 = *(id *)(v15 + 8 * i + 32);
      v20 = v19;
      v21 = objc_msgSend(v19, "characteristics");
      if (v21)
      {
        v22 = v21;
        v23 = sub_100013194(0, (unint64_t *)&qword_1001A3250, CBCharacteristic_ptr);
        v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
          v17 = sub_1000C8A78(0, v17[2] + 1, 1, v17);
        v26 = v17[2];
        v25 = v17[3];
        if (v26 >= v25 >> 1)
          v17 = sub_1000C8A78((_QWORD *)(v25 > 1), v26 + 1, 1, v17);
        v17[2] = v26 + 1;
        v17[v26 + 4] = v24;
      }
      else
      {

      }
    }
  }
  swift_bridgeObjectRelease_n(v15, 2);
  v74 = (unint64_t)_swiftEmptyArrayStorage;
  v27 = v17[2];
  if (v27)
  {
    swift_bridgeObjectRetain(v17);
    for (j = 0; j != v27; ++j)
    {
      v29 = v17[j + 4];
      v30 = swift_bridgeObjectRetain(v29);
      sub_1000CCFD0(v30);
    }
    swift_bridgeObjectRelease(v17);
  }
  swift_bridgeObjectRelease(v17);
  v31 = v74;
  if (v74 >> 62)
    goto LABEL_38;
LABEL_28:
  v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v32)
  {
LABEL_29:
    if (v32 >= 1)
    {
      v33 = 0;
      v34 = v70 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_remainingCharacteristicsToDiscover;
      v35 = (_QWORD *)(v70 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars);
      v36 = &selRef_systemWhiteColor;
      v71 = (_QWORD *)(v70 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_discoveredChars);
      v72 = v70 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_remainingCharacteristicsToDiscover;
      do
      {
        v40 = *(id *)(v31 + 8 * v33 + 32);
        v41 = objc_msgSend(v40, v36[138]);
        v42 = objc_msgSend(v41, "UUIDString");

        v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
        v45 = v44;

        v46 = sub_10000840C(v43, v45);
        if (v46 != 19)
        {
          v47 = v46;
          swift_beginAccess(v34, &v74, 33, 0);
          v48 = sub_1000D0C10(v47);
          v49 = swift_endAccess(&v74);
          if (v48 != 19)
          {
            v50 = Logger.logObject.getter(v49);
            v52 = static os_log_type_t.default.getter(v50, v51);
            if (os_log_type_enabled(v50, v52))
            {
              v53 = swift_slowAlloc(12, -1);
              v54 = swift_slowAlloc(32, -1);
              v74 = v54;
              *(_DWORD *)v53 = 136315138;
              v55 = sub_100007AD0(v47);
              v56 = v32;
              v57 = v31;
              v59 = v58;
              *(_QWORD *)(v53 + 4) = sub_10001EFA4(v55, v58, (uint64_t *)&v74);
              v60 = v59;
              v31 = v57;
              v32 = v56;
              v34 = v72;
              swift_bridgeObjectRelease(v60);
              _os_log_impl((void *)&_mh_execute_header, v50, v52, "Discovered %s", (uint8_t *)v53, 0xCu);
              swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
              v61 = v54;
              v35 = v71;
              swift_slowDealloc(v61, -1, -1);
              swift_slowDealloc(v53, -1, -1);
            }

            swift_beginAccess(v35, &v74, 33, 0);
            v37 = v40;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v35);
            v73 = *v35;
            *v35 = 0x8000000000000000;
            sub_1000CF968((uint64_t)v37, v47, isUniquelyReferenced_nonNull_native);
            v39 = *v35;
            *v35 = v73;
            swift_bridgeObjectRelease(v39);
            swift_endAccess(&v74);
            v36 = &selRef_systemWhiteColor;
          }
        }
        ++v33;

      }
      while (v32 != v33);
      goto LABEL_42;
    }
    __break(1u);
LABEL_50:
    __break(1u);
    return;
  }
LABEL_42:
  v63 = swift_bridgeObjectRelease(v31);
  sub_100031994(v63);
  v65 = Logger.logObject.getter(v64);
  v67 = static os_log_type_t.default.getter(v65, v66);
  if (os_log_type_enabled(v65, v67))
  {
    v68 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v68 = 0;
    _os_log_impl((void *)&_mh_execute_header, v65, v67, "done iterating chars", v68, 2u);
    swift_slowDealloc(v68, -1, -1);
  }

}

void sub_100059BA0(uint64_t a1, void *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(uint8_t *, uint64_t, uint64_t);
  uint64_t v11;
  uint8_t *v12;
  id v13;
  void *v14;
  void *v15;
  void (**v16)(uint8_t *, uint64_t, uint64_t);
  NSString v17;
  void *v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  void (**v42)(uint8_t *, uint64_t, uint64_t);
  NSString v43;
  id v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  uint64_t v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t *v73;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  uint64_t v88;
  os_log_type_t v89;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  _QWORD v94[2];
  uint64_t v95;
  uint8_t *v96;
  void (**v97)(uint8_t *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  id v101;
  uint64_t v102;
  _QWORD v103[3];
  uint64_t v104;
  uint64_t v105;
  unint64_t v106[10];

  v4 = (char *)type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat(0);
  v5 = *((_QWORD *)v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0, v8);
  v10 = *(void (***)(uint8_t *, uint64_t, uint64_t))(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint8_t *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a2, "value");
  if (v13)
  {
    v14 = v13;
    v96 = v12;
    v97 = v10;
    v98 = v9;
    v99 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v101 = v15;

    v16 = (void (**)(uint8_t *, uint64_t, uint64_t))objc_msgSend(a2, "UUID");
    v17 = String._bridgeToObjectiveC()();
    v18 = (void *)objc_opt_self(CBUUID);
    v19 = objc_msgSend(v18, "UUIDWithString:", v17);

    sub_100013194(0, (unint64_t *)&unk_1001A54A0, CBUUID_ptr);
    v20 = static NSObject.== infix(_:_:)(v19, v16);

    if ((v20 & 1) != 0)
    {
      if (qword_1001A2F40 != -1)
        swift_once(&qword_1001A2F40, sub_100030AB0);
      v21 = v98;
      v22 = sub_10000E8E8(v98, (uint64_t)qword_1001A4A60);
      v23 = v99;
      v24 = (uint64_t)v101;
      sub_100006B94(v99, (unint64_t)v101);
      sub_100006B94(v23, v24);
      sub_100006B94(v23, v24);
      v25 = sub_100006B94(v23, v24);
      v95 = v22;
      v26 = Logger.logObject.getter(v25);
      v28 = static os_log_type_t.default.getter(v26, v27);
      v29 = os_log_type_enabled(v26, v28);
      v94[1] = a1;
      if (v29)
      {
        v4 = (char *)swift_slowAlloc(22, -1);
        v30 = swift_slowAlloc(32, -1);
        v105 = v30;
        *(_DWORD *)v4 = 136315394;
        sub_100006B94(v23, v24);
        v31 = Data.description.getter(v23, v24);
        v33 = v32;
        sub_100007348(v23, (unint64_t)v101);
        v102 = sub_10001EFA4(v31, v33, &v105);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103, v4 + 4, v4 + 12);
        swift_bridgeObjectRelease(v33);
        sub_100007348(v23, (unint64_t)v101);
        sub_100007348(v23, (unint64_t)v101);
        *((_WORD *)v4 + 6) = 2048;
        v34 = Data.hashValue.getter(v23, v101);
        sub_100007348(v23, (unint64_t)v101);
        v102 = v34;
        v24 = (uint64_t)v101;
        v21 = v98;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103, v4 + 14, v4 + 22);
        sub_100007348(v23, v24);
        _os_log_impl((void *)&_mh_execute_header, v26, v28, "didUpdateValueFor s1UUID: %s, hash: %ld", (uint8_t *)v4, 0x16u);
        swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v30, -1, -1);
        swift_slowDealloc(v4, -1, -1);
      }
      else
      {
        sub_100007348(v23, v24);
        sub_100007348(v23, v24);
        sub_100007348(v23, v24);
        sub_100007348(v23, v24);
      }

      v57 = &v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_storeS1];
      swift_beginAccess(&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_storeS1], &v105, 1, 0);
      if (*((_QWORD *)v57 + 1) >> 60 != 15)
      {
        swift_beginAccess(v57, &v102, 33, 0);
        if (*((_QWORD *)v57 + 1) >> 60 == 15)
        {
          __break(1u);
        }
        else
        {
          Data.append(_:)(v23, v24);
          swift_endAccess(&v102);
          v97[2](v96, v95, v21);
          v4 = v100;
          v87 = Logger.logObject.getter(v4);
          v89 = static os_log_type_t.default.getter(v87, v88);
          if (!os_log_type_enabled(v87, v89))
          {

            ((void (*)(uint8_t *, uint64_t))v97[1])(v96, v21);
            v92 = *((_QWORD *)v57 + 1);
            if (v92 >> 60 != 15)
              __asm { BR              X13 }
            __break(1u);
            JUMPOUT(0x10005AD40);
          }
          *(_DWORD *)swift_slowAlloc(12, -1) = 134217984;
          v91 = *((_QWORD *)v57 + 1);
          if (v91 >> 60 != 15)
            __asm { BR              X13 }
        }

        __break(1u);
        JUMPOUT(0x10005AD60);
      }
      if (v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_targetS1Length + 8] == 1)
        __asm { BR              X10 }
      __break(1u);
    }
    else
    {
      v42 = v16;
      v43 = String._bridgeToObjectiveC()();
      v44 = objc_msgSend(v18, "UUIDWithString:", v43);

      v45 = static NSObject.== infix(_:_:)(v44, v42);
      if ((v45 & 1) != 0)
      {
        v97 = v16;
        v46 = v99;
        v47 = (uint64_t)v101;
        if (qword_1001A2F40 != -1)
          swift_once(&qword_1001A2F40, sub_100030AB0);
        sub_10000E8E8(v98, (uint64_t)qword_1001A4A60);
        sub_100006B94(v46, v47);
        v48 = sub_100006B94(v46, v47);
        v49 = Logger.logObject.getter(v48);
        v51 = static os_log_type_t.default.getter(v49, v50);
        if (os_log_type_enabled(v49, v51))
        {
          v52 = (uint8_t *)swift_slowAlloc(12, -1);
          v53 = swift_slowAlloc(32, -1);
          v98 = v53;
          *(_DWORD *)v52 = 136315138;
          v104 = v53;
          v105 = 0;
          v96 = v52 + 4;
          v106[0] = 0xE000000000000000;
          v102 = v46;
          v103[0] = v47;
          (*(void (**)(char *, _QWORD, char *))(v5 + 104))(v7, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v4);
          v54 = sub_100055934();
          DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)(&v102, v7, 58, 0xE100000000000000, &type metadata for Data, v54);
          (*(void (**)(char *, char *))(v5 + 8))(v7, v4);
          v55 = v106[0];
          v105 = sub_10001EFA4(v105, v106[0], &v104);
          v46 = v99;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v96, v52 + 12);
          swift_bridgeObjectRelease(v55);
          sub_100007348(v46, v47);
          sub_100007348(v46, v47);
          _os_log_impl((void *)&_mh_execute_header, v49, v51, "didUpdateValueFor payload: %s", v52, 0xCu);
          v56 = v98;
          swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v56, -1, -1);
          swift_slowDealloc(v52, -1, -1);
        }
        else
        {
          sub_100007348(v46, v47);
          sub_100007348(v46, v47);
        }

        sub_100006B94(v46, v47);
        sub_10000849C(v46, v47);
        v76 = *(_QWORD *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue];
        v77 = *(_QWORD *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue + 8];
        v78 = *(_QWORD *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue + 16];
        v79 = *(_QWORD *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue + 24];
        v80 = *(_QWORD *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue + 32];
        v81 = *(_QWORD *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue + 40];
        v82 = *(_QWORD *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue + 48];
        v83 = *(_QWORD *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue + 56];
        v85 = *(_QWORD *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue + 64];
        v84 = *(_QWORD *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue + 72];
        sub_10005B590((uint64_t)&v105, (uint64_t)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_payloadValue], &qword_1001A5498);
        v93 = v85;
        v23 = v99;
        v86 = v83;
        v24 = (uint64_t)v101;
        v62 = sub_1000559A8(v76, v77, v78, v79, v80, v81, v82, v86, v93, v84, (void (*)(void))sub_100007348);
        v16 = v97;
        goto LABEL_35;
      }
      v58 = objc_msgSend(v42, "UUIDString");
      v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
      v61 = v60;

      v62 = sub_10000840C(v59, v61);
      v23 = v99;
      v24 = (uint64_t)v101;
      if (v62 == 19)
      {
LABEL_35:
        sub_100031994(v62);

        sub_100007348(v23, v24);
        return;
      }
      v4 = (char *)v62;
      if (qword_1001A2F40 == -1)
      {
LABEL_23:
        v63 = sub_10000E8E8(v98, (uint64_t)qword_1001A4A60);
        v64 = Logger.logObject.getter(v63);
        v66 = static os_log_type_t.default.getter(v64, v65);
        if (os_log_type_enabled(v64, v66))
        {
          v67 = (uint8_t *)swift_slowAlloc(12, -1);
          v68 = swift_slowAlloc(32, -1);
          v105 = v68;
          *(_DWORD *)v67 = 136315138;
          v23 = v99;
          v69 = sub_100007AD0((char)v4);
          v71 = v70;
          v102 = sub_10001EFA4(v69, v70, &v105);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, v103, v67 + 4, v67 + 12);
          v72 = v71;
          v24 = (uint64_t)v101;
          swift_bridgeObjectRelease(v72);
          _os_log_impl((void *)&_mh_execute_header, v64, v66, "didUpdateValueFor %s", v67, 0xCu);
          swift_arrayDestroy(v68, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v68, -1, -1);
          swift_slowDealloc(v67, -1, -1);
        }

        v73 = (uint64_t *)&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues];
        swift_beginAccess(&v100[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_readValues], &v105, 33, 0);
        sub_100006B94(v23, v24);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v73);
        v102 = *v73;
        *v73 = 0x8000000000000000;
        sub_1000CFA9C(v23, v24, (uint64_t)v4, isUniquelyReferenced_nonNull_native);
        v75 = *v73;
        *v73 = v102;
        swift_bridgeObjectRelease(v75);
        v62 = swift_endAccess(&v105);
        goto LABEL_35;
      }
    }
    swift_once(&qword_1001A2F40, sub_100030AB0);
    goto LABEL_23;
  }
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  sub_10000E8E8(v9, (uint64_t)qword_1001A4A60);
  v101 = a2;
  v35 = Logger.logObject.getter(v101);
  v37 = static os_log_type_t.default.getter(v35, v36);
  if (os_log_type_enabled(v35, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v38 = 138412290;
    v105 = (uint64_t)v101;
    v40 = v101;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v38 + 4, v38 + 12);
    *v39 = v101;

    _os_log_impl((void *)&_mh_execute_header, v35, v37, "didUpdateValueFor %@ value = nil", v38, 0xCu);
    v41 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v39, 1, v41);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

  }
}

void sub_10005ADC8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  _BYTE v25[8];
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];

  v3 = v2;
  if (a2)
    v6 = static os_log_type_t.error.getter(a1);
  else
    v6 = static os_log_type_t.default.getter(a1, 0);
  v8 = v6;
  if (qword_1001A2F40 != -1)
    swift_once(&qword_1001A2F40, sub_100030AB0);
  v9 = type metadata accessor for Logger(0, v7);
  sub_10000E8E8(v9, (uint64_t)qword_1001A4A60);
  v10 = a1;
  swift_errorRetain(a2);
  v11 = v10;
  v12 = swift_errorRetain(a2);
  v13 = Logger.logObject.getter(v12);
  if (!os_log_type_enabled(v13, v8))
  {

    swift_errorRelease(a2);
    swift_errorRelease(a2);

    if (a2)
      return;
    goto LABEL_13;
  }
  v23 = v3;
  v14 = swift_slowAlloc(22, -1);
  v15 = (_QWORD *)swift_slowAlloc(8, -1);
  v16 = swift_slowAlloc(32, -1);
  v26 = v16;
  v27 = (uint64_t)v11;
  *(_DWORD *)v14 = 138412546;
  v17 = v11;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v14 + 4, v14 + 12);
  *v15 = v11;

  *(_WORD *)(v14 + 12) = 2080;
  if (a2)
  {
    swift_getErrorValue(a2, v25, v24);
    v18 = Error.localizedDescription.getter(v24[1], v24[2]);
    v20 = v19;
  }
  else
  {
    v27 = 0;
    v28[0] = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease(v28[0]);
    v20 = 0x8000000100136820;
    v18 = 0xD000000000000015;
  }
  v3 = v23;
  v27 = sub_10001EFA4(v18, v20, &v26);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v14 + 14, v14 + 22);
  swift_bridgeObjectRelease(v20);
  swift_errorRelease(a2);
  swift_errorRelease(a2);
  _os_log_impl((void *)&_mh_execute_header, v13, v8, "didWriteValueFor characteristic: %@, error? %s", (uint8_t *)v14, 0x16u);
  v21 = sub_100006A6C(&qword_1001A5420);
  swift_arrayDestroy(v15, 1, v21);
  swift_slowDealloc(v15, -1, -1);
  swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v16, -1, -1);
  swift_slowDealloc(v14, -1, -1);

  if (!a2)
  {
LABEL_13:
    swift_beginAccess(v3 + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_writeManager, &v27, 33, 0);
    sub_10001A55C(v11);
    v22 = swift_endAccess(&v27);
    sub_100031994(v22);
  }
}

id sub_10005B0BC(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  objc_super v10;

  v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_pairPressed_] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_player] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_mainBtn] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_playerYConstraint] = 0;
  v3 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_topInfoLbl;
  v4 = objc_allocWithZone((Class)UILabel);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bottomInfoLbl;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bubbleMonitor] = 0;
  v7 = &v5[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_viewWillAppearTimestamp];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = &v5[OBJC_IVAR____TtC18SharingViewService23B389StartViewController_bypassBatteryTooLowCheck];
  *(_QWORD *)v8 = 0xD00000000000001CLL;
  *((_QWORD *)v8 + 1) = 0x80000001001390E0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for B389StartViewController();
  return objc_msgSendSuper2(&v10, "initWithMainController:", a1);
}

uint64_t sub_10005B1E4(void *a1, id a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  char v7;

  v3 = objc_msgSend(a2, "view");
  v4 = objc_msgSend(a1, "view");
  v5 = v4;
  if (v3)
  {
    if (!v4)
    {
      v7 = 0;
      goto LABEL_8;
    }
    sub_100013194(0, (unint64_t *)&qword_1001A5510, UIView_ptr);
    v6 = v3;
    v7 = static NSObject.== infix(_:_:)(v6, v5);

  }
  else
  {
    if (!v4)
    {
      v7 = 1;
      return v7 & 1;
    }
    v7 = 0;
  }
  v3 = v5;
LABEL_8:

  return v7 & 1;
}

id sub_10005B2A8(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  objc_super v15;

  v3 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_imageName];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_onDoneURL];
  v5 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_body];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_buttonText];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleText];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_bodyText];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_btn] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_titleLbl] = 0;
  v10 = OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_msgLbl;
  v11 = objc_allocWithZone((Class)UILabel);
  v12 = v1;
  *(_QWORD *)&v1[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC18SharingViewService25B389AppleIDViewController_lockImageView;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  v15.receiver = v12;
  v15.super_class = (Class)type metadata accessor for B389AppleIDViewController(0);
  return objc_msgSendSuper2(&v15, "initWithMainController:", a1);
}

id sub_10005B3EC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_btn] = 0;
  v3 = OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_msgLbl;
  v4 = objc_allocWithZone((Class)UILabel);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_avatarImageView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v7 = OBJC_IVAR____TtC18SharingViewService28B389PairLockedViewController_lockImageView;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for B389PairLockedViewController();
  return objc_msgSendSuper2(&v9, "initWithMainController:", a1);
}

uint64_t sub_10005B4BC()
{
  return sub_100050924();
}

void sub_10005B4C4(int a1)
{
  uint64_t v1;

  sub_10004E648(a1, *(id *)(v1 + 16));
}

uint64_t sub_10005B4CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10005B4F8()
{
  uint64_t v0;

  sub_10004CE4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10005B500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for B389PresentationConfig.Mode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10005B544(uint64_t a1)
{
  uint64_t v1;

  sub_10004BD94(a1, v1);
}

uint64_t sub_10005B54C()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

id sub_10005B580()
{
  uint64_t v0;

  return sub_10004C4A8(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10005B590(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100006A6C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_10005B5D4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;

  sub_10003874C(a1, a3, a2, *(_QWORD *)(v3 + 16));
}

uint64_t sub_10005B5DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005B600(_QWORD *a1, double *a2, _QWORD *a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, _QWORD, double))(v3 + 16))(*a1, *a3, *a2);
}

uint64_t sub_10005B630(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100036830(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_10005B640()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10005B674()
{
  uint64_t v0;

  sub_10005686C(*(void **)(v0 + 24), 0, 0, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10005B688()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10005B6C4()
{
  uint64_t v0;

  return sub_100036E40(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_10005B6D4(uint64_t a1)
{
  uint64_t v1;

  sub_100036280(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10005B6DC(uint64_t a1)
{
  uint64_t v1;

  return sub_100036370(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10005B6E4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100006A6C(&qword_1001A3618) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*((_QWORD *)v0 + 2));
  if (*((_QWORD *)v0 + 4))
    swift_release(*((_QWORD *)v0 + 5));
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(&v0[v3], 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(&v0[v3], v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_10005B794()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100006A6C(&qword_1001A3618) - 8) + 80);
  sub_100035BFC(*(_QWORD *)(v0 + 16), *(_DWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v0 + ((v1 + 48) & ~v1));
}

uint64_t sub_10005B7D0()
{
  uint64_t v0;

  return sub_1000AD394(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10005B7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_100006A6C(&qword_1001A3618) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;

  return swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_10005B89C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_100006A6C(&qword_1001A3618) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100035E78(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(char **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10005B8E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10005B908()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 16);
  if (result)
    return objc_msgSend(result, "invalidate");
  return result;
}

uint64_t sub_10005B920()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10005B94C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100035268(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_10005B954()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10005B980(void *a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;

  return sub_100033080(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(uint64_t (**)(void *, uint64_t))(v5 + 32));
}

uint64_t sub_10005B9A8()
{
  uint64_t v0;

  return sub_1000AC678(v0);
}

uint64_t sub_10005B9C0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005B9E4()
{
  uint64_t v0;

  return sub_1000ACBEC(*(_QWORD *)(v0 + 16));
}

unint64_t sub_10005B9EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A5610;
  if (!qword_1001A5610)
  {
    v1 = sub_100013194(255, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1001A5610);
  }
  return result;
}

uint64_t sub_10005BA44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100006A6C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005BA88()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10005BABC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100034694(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_10005BAC8(uint64_t a1)
{
  uint64_t v1;

  sub_100034214(a1, *(void **)(v1 + 16));
}

uint64_t sub_10005BAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100048C60(*(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_10005BC30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A5720);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A5720);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10005BCC0()
{
  qword_1001A5738 = 0x4008000000000000;
}

void sub_10005BCD0()
{
  qword_1001A5740 = 0x4054000000000000;
}

void sub_10005BCE0()
{
  qword_1001A5748 = 0x4049000000000000;
}

void sub_10005BCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17[24];
  char v18[24];
  char v19[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    goto LABEL_8;
  v6 = (char *)Strong;
  v7 = a3 + 16;
  swift_beginAccess(v7, v18, 0, 0);
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v7);
  v9 = v8;
  if (!v8)
    goto LABEL_6;
  v10 = objc_msgSend(v8, "text");

  if (!v10)
  {
    v9 = 0;
LABEL_6:
    v12 = 0;
    goto LABEL_7;
  }
  v9 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;

LABEL_7:
  v13 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleEmoji];
  v14 = *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleEmoji + 8];
  *(_QWORD *)v13 = v9;
  *((_QWORD *)v13 + 1) = v12;

  swift_bridgeObjectRelease(v14);
LABEL_8:
  swift_beginAccess(v4, v17, 0, 0);
  v15 = swift_unknownObjectWeakLoadStrong(v4);
  if (v15)
  {
    v16 = (void *)v15;
    sub_100048AB8();

  }
}

void sub_10005BE08()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *Strong;
  NSString v34;
  void *v35;
  id v36;
  uint64_t v37;
  void **v38;
  uint64_t v39;
  void (*v40)(uint64_t, void *);
  void *v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  objc_super v44;

  v44.receiver = v0;
  v44.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v44, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryLarge);
    objc_msgSend(v2, "_setLocalOverrideTraitCollection:", v3);

    v4 = (void *)objc_opt_self(NSBundle);
    v5 = objc_msgSend(v4, "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = sub_100117218(v5, v6, v7);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v10 = v9;

    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v0, "setTitle:", v11);

    v12 = objc_msgSend(v4, "mainBundle");
    v13 = String._bridgeToObjectiveC()();
    v14 = String._bridgeToObjectiveC()();
    v15 = sub_100117218(v12, v13, v14);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v17 = v16;

    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v0, "setSubtitle:", v18);

    objc_msgSend(v0, "setDismissalType:", 1);
    v19 = swift_allocObject(&unk_100179A90, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16, v0);
    swift_retain(v19);
    v20 = String._bridgeToObjectiveC()();
    v42 = sub_10005D954;
    v43 = v19;
    v38 = _NSConcreteStackBlock;
    v39 = 1107296256;
    v40 = sub_10001B5D0;
    v41 = &unk_100179AA8;
    v21 = _Block_copy(&v38);
    v22 = (void *)objc_opt_self(PRXAction);
    v23 = objc_msgSend(v22, "actionWithTitle:style:handler:", v20, 0, v21);

    _Block_release(v21);
    v24 = v43;
    swift_release(v19);
    objc_msgSend(v0, "setDismissButtonAction:", v23, swift_release(v24).n128_f64[0]);

    v25 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_continueAction];
    objc_msgSend(v25, "setEnabled:", 0);

    v26 = objc_msgSend(v4, "mainBundle");
    v27 = String._bridgeToObjectiveC()();
    v28 = String._bridgeToObjectiveC()();
    v29 = sub_100117218(v26, v27, v28);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v31 = v30;

    v32 = swift_allocObject(&unk_100179AE0, 24, 7);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_mainController]);
    swift_unknownObjectWeakInit(v32 + 16, Strong);

    swift_retain(v32);
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    v42 = sub_10005D974;
    v43 = v32;
    v38 = _NSConcreteStackBlock;
    v39 = 1107296256;
    v40 = sub_10001B5D0;
    v41 = &unk_100179AF8;
    v35 = _Block_copy(&v38);
    v36 = objc_msgSend(v22, "actionWithTitle:style:handler:", v34, 1, v35);

    _Block_release(v35);
    v37 = v43;
    swift_release(v32);

    sub_10005C668();
  }
  else
  {
    __break(1u);
  }
}

void sub_10005C33C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t Strong;
  void *v15;
  uint64_t ObjectType;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31[3];

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 16;
  if (qword_1001A2F78 != -1)
    swift_once(&qword_1001A2F78, sub_10005BC30);
  v8 = sub_10000E8E8(v3, (uint64_t)qword_1001A5720);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  v9 = swift_retain_n(a2, 2);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v31[0] = v27;
    *(_DWORD *)v13 = 136315138;
    swift_beginAccess(a2 + 16, v30, 0, 0);
    v28 = a2 + 16;
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (!Strong)
    {
      swift_release(a2);
      __break(1u);
      return;
    }
    v15 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);

    v17 = _typeName(_:qualified:)(ObjectType, 0);
    v19 = v18;
    v29 = sub_10001EFA4(v17, v18, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v13 + 4, v13 + 12);
    swift_release_n(a2, 2, v20);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "dismissPressed in %s", v13, 0xCu);
    v21 = v27;
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v28;
  }
  else
  {

    swift_release_n(a2, 2, v22);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_beginAccess(v7, v31, 0, 0);
  v23 = swift_unknownObjectWeakLoadStrong(v7);
  if (v23)
  {
    v24 = (void *)v23;
    v25 = (void *)swift_unknownObjectWeakLoadStrong(v23 + OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_mainController);

    if (v25)
    {
      objc_msgSend(v25, "dismiss:", 5);

    }
  }
}

void sub_10005C5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav);
    if (v5)
    {
      v6 = *(void **)&v4[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_namingVC];
      if (v6)
      {
        sub_10011757C(v5, v6);
        sub_100031994(v7);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10005C668()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  NSString v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  Class isa;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_emojiContainer];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "secondarySystemFillColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v2, "layer");
  if (qword_1001A2F88 != -1)
    swift_once(&qword_1001A2F88, sub_10005BCD0);
  v6 = *(double *)&qword_1001A5740;
  if (qword_1001A2F80 != -1)
    swift_once(&qword_1001A2F80, sub_10005BCC0);
  objc_msgSend(v5, "setCornerRadius:", (v6 + *(double *)&qword_1001A5738) * 0.5);

  v7 = objc_msgSend(v2, "layer");
  v8 = objc_msgSend(v3, "systemBlueColor");
  v9 = objc_msgSend(v8, "CGColor");

  objc_msgSend(v7, "setBorderColor:", v9);
  v10 = objc_msgSend(v2, "layer");
  objc_msgSend(v10, "setBorderWidth:", *(double *)&qword_1001A5738);

  objc_msgSend(v2, "setClipsToBounds:", 1);
  v11 = objc_msgSend(v1, "contentView");
  objc_msgSend(v11, "addSubview:", v2);

  v12 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_selectedEmojiLabel];
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = (void *)objc_opt_self(UIFont);
  if (qword_1001A2F90 != -1)
    swift_once(&qword_1001A2F90, sub_10005BCE0);
  v14 = objc_msgSend(v13, "systemFontOfSize:", *(double *)&qword_1001A5748);
  objc_msgSend(v12, "setFont:", v14);

  objc_msgSend(v12, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v2, "addSubview:", v12);
  v74 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 3, 2, *(double *)&qword_1001A5748);
  v15 = String._bridgeToObjectiveC()();
  v73 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v15, v74);

  v16 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_emojiButton];
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "setImage:forState:", v73, 0);
  v17 = objc_msgSend(v3, "tertiaryLabelColor");
  objc_msgSend(v16, "setTintColor:", v17);

  objc_msgSend(v16, "addTarget:action:forControlEvents:", v1, "handleEmojiButtonTapped", 64);
  objc_msgSend(v2, "addSubview:", v16);
  v18 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_hiddenEmojiField];
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v18, "setHidden:", 1);
  objc_msgSend(v18, "setDelegate:", v1);
  objc_msgSend(v2, "addSubview:", v18);
  v72 = (id)objc_opt_self(NSLayoutConstraint);
  v19 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v20 = swift_allocObject(v19, 152, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100133270;
  v21 = objc_msgSend(v2, "topAnchor");
  v22 = objc_msgSend(v1, "contentView");
  v23 = objc_msgSend(v22, "mainContentGuide");

  v24 = objc_msgSend(v23, "topAnchor");
  v25 = objc_msgSend(v21, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v20 + 32) = v25;
  v26 = objc_msgSend(v2, "centerXAnchor");
  v27 = objc_msgSend(v1, "contentView");
  v28 = objc_msgSend(v27, "mainContentGuide");

  v29 = objc_msgSend(v28, "centerXAnchor");
  v30 = objc_msgSend(v26, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v20 + 40) = v30;
  v31 = objc_msgSend(v2, "heightAnchor");
  v32 = objc_msgSend(v31, "constraintEqualToConstant:", *(double *)&qword_1001A5740 + *(double *)&qword_1001A5738);

  *(_QWORD *)(v20 + 48) = v32;
  v33 = objc_msgSend(v2, "widthAnchor");
  v34 = objc_msgSend(v2, "heightAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v20 + 56) = v35;
  v36 = objc_msgSend(v2, "bottomAnchor");
  v37 = objc_msgSend(v1, "contentView");
  v38 = objc_msgSend(v37, "mainContentGuide");

  v39 = objc_msgSend(v38, "bottomAnchor");
  v40 = objc_msgSend(v36, "constraintLessThanOrEqualToAnchor:", v39);

  *(_QWORD *)(v20 + 64) = v40;
  v41 = objc_msgSend(v12, "centerXAnchor");
  v42 = objc_msgSend(v2, "centerXAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v20 + 72) = v43;
  v44 = objc_msgSend(v12, "centerYAnchor");
  v45 = objc_msgSend(v2, "centerYAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v20 + 80) = v46;
  v47 = objc_msgSend(v12, "leadingAnchor");
  v48 = objc_msgSend(v2, "leadingAnchor");
  v49 = objc_msgSend(v47, "constraintGreaterThanOrEqualToAnchor:", v48);

  *(_QWORD *)(v20 + 88) = v49;
  v50 = objc_msgSend(v12, "trailingAnchor");
  v51 = objc_msgSend(v2, "trailingAnchor");
  v52 = objc_msgSend(v50, "constraintLessThanOrEqualToAnchor:", v51);

  *(_QWORD *)(v20 + 96) = v52;
  v53 = objc_msgSend(v16, "centerXAnchor");
  v54 = objc_msgSend(v2, "centerXAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v20 + 104) = v55;
  v56 = objc_msgSend(v16, "centerYAnchor");
  v57 = objc_msgSend(v2, "centerYAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v20 + 112) = v58;
  v59 = objc_msgSend(v16, "leadingAnchor");
  v60 = objc_msgSend(v2, "leadingAnchor");
  v61 = objc_msgSend(v59, "constraintGreaterThanOrEqualToAnchor:", v60);

  *(_QWORD *)(v20 + 120) = v61;
  v62 = objc_msgSend(v16, "trailingAnchor");
  v63 = objc_msgSend(v2, "trailingAnchor");
  v64 = objc_msgSend(v62, "constraintLessThanOrEqualToAnchor:", v63);

  *(_QWORD *)(v20 + 128) = v64;
  v65 = objc_msgSend(v18, "centerXAnchor");
  v66 = objc_msgSend(v2, "centerXAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  *(_QWORD *)(v20 + 136) = v67;
  v68 = objc_msgSend(v18, "centerYAnchor");
  v69 = objc_msgSend(v2, "centerYAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:constant:", v69, *(double *)&qword_1001A5748 * 0.5);

  *(_QWORD *)(v20 + 144) = v70;
  specialized Array._endMutation()(v71);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v72, "activateConstraints:", isa);

}

uint64_t type metadata accessor for B389CustomEmojiViewController()
{
  return objc_opt_self(_TtC18SharingViewService29B389CustomEmojiViewController);
}

void sub_10005D3A4(char *a1, uint64_t a2, void *a3, SEL *a4)
{
  void *v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;

  v6 = *(void **)&a1[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_emojiContainer];
  v7 = a3;
  v8 = a1;
  v9 = objc_msgSend(v6, "layer");
  v10 = objc_msgSend((id)objc_opt_self(UIColor), *a4);
  v11 = objc_msgSend(v10, "CGColor");

  objc_msgSend(v9, "setBorderColor:", v11);
}

id sub_10005D46C(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  void *v22;
  id v23;
  uint64_t v24;
  objc_super v26;
  _QWORD aBlock[5];
  uint64_t v28;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_mainController], 0);
  swift_unknownObjectWeakAssign(v4, a1);
  v5 = objc_allocWithZone((Class)UIView);
  v6 = v1;
  v7 = objc_msgSend(v5, "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_emojiContainer] = v7;
  v8 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_emojiButton] = v8;
  v9 = type metadata accessor for EmojiTextField();
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_hiddenEmojiField] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
  v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_selectedEmojiLabel;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_selectedEmojiLabel] = v10;
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100117218(v12, v13, v14);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = swift_allocObject(&unk_100179AE0, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, a1);
  v19 = swift_allocObject(&unk_100179B30, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, *(_QWORD *)&v6[v11]);
  v20 = swift_allocObject(&unk_100179B58, 32, 7);
  *(_QWORD *)(v20 + 16) = v18;
  *(_QWORD *)(v20 + 24) = v19;
  swift_retain(v18);
  swift_retain(v19);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  aBlock[4] = sub_10005D9A8;
  v28 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B5D0;
  aBlock[3] = &unk_100179B70;
  v22 = _Block_copy(aBlock);
  v23 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v21, 0, v22);

  _Block_release(v22);
  v24 = v28;
  swift_release(v18);
  swift_release(v19);
  swift_release(v24);
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_continueAction] = v23;

  v26.receiver = v6;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, "initWithContentView:", 0);
}

BOOL sub_10005D764()
{
  uint64_t v0;
  NSString v1;
  int IsSingleEmoji;
  void *v3;
  NSString v4;
  void *v5;
  NSString v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 v22;

  v1 = String._bridgeToObjectiveC()();
  IsSingleEmoji = CEMStringIsSingleEmoji();

  if (IsSingleEmoji)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_hiddenEmojiField);
    v4 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setText:", v4);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_emojiButton), "setImage:forState:", 0, 0);
    v5 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_selectedEmojiLabel);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setText:", v6);

    v7 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_continueAction);
    v8 = objc_msgSend(v3, "text");
    if (v8)
    {
      v9 = v8;
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v12 = v11;

      v13 = String.count.getter(v10, v12);
      swift_bridgeObjectRelease(v12);
      v14 = v13 > 0;
    }
    else
    {
      v14 = 0;
    }
    objc_msgSend(v7, "setEnabled:", v14);
  }
  else
  {
    v15 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_continueAction);
    v16 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC18SharingViewService29B389CustomEmojiViewController_hiddenEmojiField), "text");
    if (v16)
    {
      v17 = v16;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v20 = v19;

      v21 = String.count.getter(v18, v20);
      swift_bridgeObjectRelease(v20);
      v22 = v21 > 0;
    }
    else
    {
      v22 = 0;
    }
    objc_msgSend(v15, "setEnabled:", v22);
  }
  return IsSingleEmoji == 0;
}

uint64_t sub_10005D930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10005D954(uint64_t a1)
{
  uint64_t v1;

  sub_10005C33C(a1, v1);
}

uint64_t sub_10005D95C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005D96C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10005D974(uint64_t a1)
{
  uint64_t v1;

  sub_10005C5E4(a1, v1);
}

uint64_t sub_10005D97C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10005D9A8(uint64_t a1)
{
  uint64_t v1;

  sub_10005BCF0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_10005DAC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiTextField();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EmojiTextField()
{
  return objc_opt_self(_TtC18SharingViewService14EmojiTextField);
}

void sub_10005DB10()
{
  qword_1001A5848 = 0x4061C00000000000;
}

void sub_10005DB24()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  _QWORD v38[5];
  uint64_t v39;
  _QWORD v40[24];
  _QWORD aBlock[5];
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[24];
  _QWORD v45[24];
  _QWORD v46[24];
  _BYTE v47[24];
  void *v48;
  objc_super v49;
  _QWORD v50[24];
  _BYTE v51[200];

  v1 = v0;
  v49.receiver = v0;
  v49.super_class = (Class)type metadata accessor for D2DSetupStartViewController();
  objc_msgSendSuper2(&v49, "viewDidLoad");
  v2 = (uint64_t)v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel;
  sub_10005B590((uint64_t)v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel, (uint64_t)v50, &qword_1001A39D0);
  sub_10005B590((uint64_t)v50, (uint64_t)v47, &qword_1001A39D0);
  sub_10005B590((uint64_t)v50, (uint64_t)v51, &qword_1001A39D0);
  if (sub_1000145F8((uint64_t)v51) != 1)
  {
    v3 = v48;
    sub_10005B590((uint64_t)v47, (uint64_t)v46, &qword_1001A39D0);
    v4 = v3;
    sub_100014610(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
    sub_100014610(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    if (v3)
    {
      v5 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v4);
      objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v5, "setContentMode:", 1);
      v6 = objc_msgSend(v1, "contentView");
      objc_msgSend(v6, "addSubview:", v5);

      v7 = objc_msgSend(v1, "contentView");
      v8 = objc_msgSend(v7, "mainContentGuide");

      v36 = (id)objc_opt_self(NSLayoutConstraint);
      v9 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
      v10 = swift_allocObject(v9, 64, 7);
      *(_OWORD *)(v10 + 16) = xmmword_100132270;
      v11 = objc_msgSend(v5, "heightAnchor");
      if (qword_1001A2F98 != -1)
        swift_once(&qword_1001A2F98, sub_10005DB10);
      v12 = objc_msgSend(v11, "constraintEqualToConstant:", *(double *)&qword_1001A5848, v36);

      *(_QWORD *)(v10 + 32) = v12;
      v13 = objc_msgSend(v5, "topAnchor");
      v14 = objc_msgSend(v8, "topAnchor");
      v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

      *(_QWORD *)(v10 + 40) = v15;
      v16 = objc_msgSend(v5, "bottomAnchor");
      v17 = objc_msgSend(v8, "bottomAnchor");
      v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

      *(_QWORD *)(v10 + 48) = v18;
      v19 = objc_msgSend(v5, "centerXAnchor");
      v20 = objc_msgSend(v8, "centerXAnchor");
      v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

      *(_QWORD *)(v10 + 56) = v21;
      v45[0] = v10;
      specialized Array._endMutation()(v22);
      sub_10000E868();
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v10);
      objc_msgSend(v37, "activateConstraints:", isa);

    }
  }
  sub_10005B590(v2, (uint64_t)v46, &qword_1001A39D0);
  sub_10005B590((uint64_t)v46, (uint64_t)v45, &qword_1001A39D0);
  sub_10005B590((uint64_t)v46, (uint64_t)v47, &qword_1001A39D0);
  if (sub_1000145F8((uint64_t)v47) != 1)
  {
    v24 = v45[7];
    sub_10005B590((uint64_t)v45, (uint64_t)v44, &qword_1001A39D0);
    swift_bridgeObjectRetain(v24);
    sub_100014610(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
    sub_100014610(v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    if (v24)
    {
      v25 = swift_allocObject(&unk_100179BB0, 24, 7);
      swift_unknownObjectUnownedInit(v25 + 16, v1);
      swift_retain(v25);
      v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v24);
      aBlock[4] = sub_10005E908;
      v42 = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B5D0;
      aBlock[3] = &unk_100179BF0;
      v27 = _Block_copy(aBlock);
      v28 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v26, 0, v27);

      _Block_release(v27);
      v29 = v42;
      swift_release(v25);

    }
  }
  sub_10005B590(v2, (uint64_t)v44, &qword_1001A39D0);
  sub_10005B590((uint64_t)v44, (uint64_t)aBlock, &qword_1001A39D0);
  sub_10005B590((uint64_t)v44, (uint64_t)v45, &qword_1001A39D0);
  if (sub_1000145F8((uint64_t)v45) != 1)
  {
    v30 = v43;
    sub_10005B590((uint64_t)aBlock, (uint64_t)v40, &qword_1001A39D0);
    swift_bridgeObjectRetain(v30);
    sub_100014610(v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
    sub_100014610(v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    if (v30)
    {
      v31 = swift_allocObject(&unk_100179BB0, 24, 7);
      swift_unknownObjectUnownedInit(v31 + 16, v1);
      swift_retain(v31);
      v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
      v38[4] = sub_10005E908;
      v39 = v31;
      v38[0] = _NSConcreteStackBlock;
      v38[1] = 1107296256;
      v38[2] = sub_10001B5D0;
      v38[3] = &unk_100179BC8;
      v33 = _Block_copy(v38);
      v34 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v32, 1, v33);

      _Block_release(v33);
      v35 = v39;
      swift_release(v31);

    }
  }
}

void sub_10005E1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  char *Strong;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v2 = swift_unknownObjectWeakLoadStrong(&Strong[OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_presenter]);
  if (v2)
  {
    v4 = v2;
    if (qword_1001A3100 != -1)
      swift_once(&qword_1001A3100, sub_10009DB40);
    v5 = type metadata accessor for Logger(0, v3);
    v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A7328);
    v7 = Logger.logObject.getter(v6);
    v9 = static os_log_type_t.default.getter(v7, v8);
    if (os_log_type_enabled(v7, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v9, "D2D Setup request start setup process", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    sub_1000734EC();
    swift_unknownObjectRelease(v4);
  }
  else
  {

  }
}

void sub_10005E354(char a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  NSString v5;
  _QWORD v6[24];
  _BYTE v7[112];
  uint64_t v8;
  objc_super v9;
  _QWORD v10[24];
  _BYTE v11[200];

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for D2DSetupStartViewController();
  objc_msgSendSuper2(&v9, "viewWillAppear:", a1 & 1);
  sub_10005B590((uint64_t)v1 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel, (uint64_t)v10, &qword_1001A39D0);
  sub_10005B590((uint64_t)v10, (uint64_t)v7, &qword_1001A39D0);
  sub_10005B590((uint64_t)v10, (uint64_t)v11, &qword_1001A39D0);
  if (sub_1000145F8((uint64_t)v11) == 1
    || (v3 = v8,
        sub_10005B590((uint64_t)v7, (uint64_t)v6, &qword_1001A39D0),
        swift_bridgeObjectRetain(v3),
        sub_100014610(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C), sub_100014610(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C), !v3))
  {
    v4 = objc_msgSend((id)objc_opt_self(NSDistributedNotificationCenter), "defaultCenter");
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "addObserver:selector:name:object:suspensionBehavior:", v1, "didReceiveDeviceSetupNotification:", v5, 0, 4);

  }
  else
  {
    swift_bridgeObjectRelease(v3);
  }
}

void sub_10005E5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSString v12;
  NSString v13;
  NSString v14;
  NSString v15;
  NSString v16;
  NSString v17;
  id v18;
  _BYTE v19[64];
  _BYTE v20[16];
  _QWORD v21[2];
  _QWORD v22[2];
  _OWORD v23[12];
  _QWORD v24[25];

  v5 = *(_OWORD *)(a3 + 144);
  v23[8] = *(_OWORD *)(a3 + 128);
  v23[9] = v5;
  v6 = *(_OWORD *)(a3 + 176);
  v23[10] = *(_OWORD *)(a3 + 160);
  v23[11] = v6;
  v7 = *(_OWORD *)(a3 + 80);
  v23[4] = *(_OWORD *)(a3 + 64);
  v23[5] = v7;
  v8 = *(_OWORD *)(a3 + 112);
  v23[6] = *(_OWORD *)(a3 + 96);
  v23[7] = v8;
  v9 = *(_OWORD *)(a3 + 16);
  v23[0] = *(_OWORD *)a3;
  v23[1] = v9;
  v10 = *(_OWORD *)(a3 + 48);
  v23[2] = *(_OWORD *)(a3 + 32);
  v23[3] = v10;
  nullsub_4(v23);
  v11 = (uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel;
  sub_10005B590((uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel, (uint64_t)v24, &qword_1001A39D0);
  sub_10005B590((uint64_t)v23, v11, &qword_1001A39D0);
  sub_100014330(a3);
  sub_100014610(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setTitle:", v12);

  objc_msgSend(v3, "setAttributedSubtitle:", *(_QWORD *)(a3 + 40));
  sub_10005B590(a3 + 104, (uint64_t)v20, &qword_1001A5430);
  sub_10005B590((uint64_t)v20, (uint64_t)v21, &qword_1001A5430);
  if (v21[1])
  {
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "showActivityIndicatorWithStatus:", v13);

  }
  sub_10005B590(a3 + 128, (uint64_t)v19, &qword_1001A5878);
  sub_10005B590((uint64_t)v19, (uint64_t)v22, &qword_1001A5878);
  if (v22[1])
  {
    v14 = String._bridgeToObjectiveC()();
    v15 = String._bridgeToObjectiveC()();
    v16 = String._bridgeToObjectiveC()();
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v3, "dismissalConfirmationActionWithTitle:message:confirmButtonTitle:cancelButtonTitle:", v14, v15, v16, v17);

    objc_msgSend(v3, "setDismissButtonAction:", v18);
  }
}

id sub_10005E894()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for D2DSetupStartViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for D2DSetupStartViewController()
{
  return objc_opt_self(_TtC18SharingViewService27D2DSetupStartViewController);
}

uint64_t sub_10005E8E4()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10005E908(uint64_t a1)
{
  uint64_t v1;

  sub_10005E1F0(a1, v1);
}

uint64_t sub_10005E910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005E920(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005E930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A5880);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A5880);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10005E9C0()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  NSString v5;
  id v6;
  id v7;
  double v8;
  double v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  _QWORD v38[5];
  uint64_t v39;
  objc_super v40;

  v1 = v0;
  v40.receiver = v0;
  v40.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v40, "viewDidLoad");
  objc_msgSend(v0, "setDismissalType:", 1);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService27AirTagAppleIDViewController_imageName + 8];
  if (v3)
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService27AirTagAppleIDViewController_imageName + 8];
  else
    v4 = 0xEE00676E702E6E6FLL;
  swift_bridgeObjectRetain(v3);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v5);

  if (v6)
  {
    v7 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v7, "scale");
    v9 = v8;

    v10 = objc_msgSend(v6, "_applicationIconImageForFormat:precomposed:scale:", 2, 0, v9);
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v2, "setImage:", v10);

  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = objc_msgSend(v1, "contentView");
  objc_msgSend(v11, "addSubview:", v2);

  v12 = objc_msgSend(v1, "contentView");
  v13 = objc_msgSend(v12, "mainContentGuide");

  v14 = (void *)objc_opt_self(NSLayoutConstraint);
  v15 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v16 = swift_allocObject(v15, 64, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100132270;
  v17 = objc_msgSend(v2, "centerXAnchor");
  v18 = objc_msgSend(v13, "centerXAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v16 + 32) = v19;
  v20 = objc_msgSend(v2, "centerYAnchor");
  v21 = objc_msgSend(v13, "centerYAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v16 + 40) = v22;
  v23 = objc_msgSend(v2, "topAnchor");
  v24 = objc_msgSend(v13, "topAnchor");
  v25 = objc_msgSend(v23, "constraintGreaterThanOrEqualToAnchor:", v24);

  *(_QWORD *)(v16 + 48) = v25;
  v26 = objc_msgSend(v2, "bottomAnchor");
  v27 = objc_msgSend(v13, "bottomAnchor");
  v28 = objc_msgSend(v26, "constraintLessThanOrEqualToAnchor:", v27);

  *(_QWORD *)(v16 + 56) = v28;
  v38[0] = v16;
  specialized Array._endMutation()(v29);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  objc_msgSend(v14, "activateConstraints:", isa);

  v31 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27AirTagAppleIDViewController_buttonText + 8];
  if (v31)
  {
    v32 = swift_allocObject(&unk_100179C38, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16, v1);
    swift_bridgeObjectRetain(v31);
    swift_retain(v32);
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    v38[4] = sub_10005F424;
    v39 = v32;
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 1107296256;
    v38[2] = sub_10001B5D0;
    v38[3] = &unk_100179C50;
    v34 = _Block_copy(v38);
    v35 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v33, 0, v34);

    _Block_release(v34);
    v36 = v39;
    swift_release(v32);
    v37 = objc_msgSend(v1, "addAction:", v35, swift_release(v36).n128_f64[0]);

  }
}

void sub_10005EF04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];

  v3 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC18SharingViewService27AirTagAppleIDViewController_mainController);
    if (v9)
    {
      v11 = (void *)v9;
      if (qword_1001A2FA0 != -1)
        swift_once(&qword_1001A2FA0, sub_10005E930);
      v12 = type metadata accessor for Logger(0, v10);
      v13 = sub_10000E8E8(v12, (uint64_t)qword_1001A5880);
      v14 = Logger.logObject.getter(v13);
      v16 = static os_log_type_t.default.getter(v14, v15);
      if (os_log_type_enabled(v14, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v17 = 134217984;
        v24 = 56;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v17 + 4, v17 + 12);
        _os_log_impl((void *)&_mh_execute_header, v14, v16, "openSettingsPressed in %ld", v17, 0xCu);
        swift_slowDealloc(v17, -1, -1);
      }

      v18 = (uint64_t)&v8[OBJC_IVAR____TtC18SharingViewService27AirTagAppleIDViewController_onDoneURL];
      swift_beginAccess(&v8[OBJC_IVAR____TtC18SharingViewService27AirTagAppleIDViewController_onDoneURL], &v24, 0, 0);
      sub_10005F444(v18, (uint64_t)v5);
      sub_1000B313C(0, (uint64_t)v5, 0, 0, 58);

      sub_10000E92C((uint64_t)v5);
      return;
    }

  }
  if (qword_1001A2FA0 != -1)
    swift_once(&qword_1001A2FA0, sub_10005E930);
  v19 = type metadata accessor for Logger(0, v7);
  v20 = sub_10000E8E8(v19, (uint64_t)qword_1001A5880);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "mainController nil while initializing primaryAction", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

}

uint64_t sub_10005F2E4()
{
  return type metadata accessor for AirTagAppleIDViewController(0);
}

uint64_t type metadata accessor for AirTagAppleIDViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1001A58C8;
  if (!qword_1001A58C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AirTagAppleIDViewController);
  return result;
}

void sub_10005F328(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100133330;
  sub_10005F3AC(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100133330;
    v4[3] = &unk_100133348;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_10005F3AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1001A4F38)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1001A4F38);
  }
}

uint64_t sub_10005F400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10005F424(uint64_t a1)
{
  uint64_t v1;

  sub_10005EF04(a1, v1);
}

uint64_t sub_10005F42C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005F43C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005F444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A3618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005F48C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A58D8);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A58D8);
  if (qword_1001A2EF0 != -1)
    swift_once(&qword_1001A2EF0, sub_100018CB8);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10005F51C(_QWORD *a1)
{
  char *v1;
  char *v2;
  NSString v4;
  NSString v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSString v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  _QWORD v42[5];
  uint64_t v43;

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v4);

  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setSubtitle:", v5);

  v6 = a1[8];
  v7 = &v2[OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_activityIndicatorTitle];
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_activityIndicatorTitle
                    + 8];
  *(_QWORD *)v7 = a1[7];
  *((_QWORD *)v7 + 1) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v8);
  v9 = a1[5];
  v10 = (void *)objc_opt_self(_UIImageSymbolConfiguration);
  swift_bridgeObjectRetain(v9);
  v11 = objc_msgSend(v10, "configurationWithPointSize:", 72.0);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v13 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v12, v11);

  v14 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v13);
  objc_msgSend(v14, "setTintColor:", a1[6]);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v15 = objc_msgSend(v2, "contentView");
  objc_msgSend(v15, "addSubview:", v14);

  v16 = objc_msgSend(v2, "contentView");
  v17 = objc_msgSend(v16, "mainContentGuide");

  v18 = (void *)objc_opt_self(NSLayoutConstraint);
  v19 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v20 = swift_allocObject(v19, 64, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100132270;
  v21 = objc_msgSend(v14, "topAnchor");
  v22 = objc_msgSend(v17, "topAnchor");
  v23 = objc_msgSend(v21, "constraintGreaterThanOrEqualToAnchor:", v22);

  *(_QWORD *)(v20 + 32) = v23;
  v24 = objc_msgSend(v14, "bottomAnchor");
  v25 = objc_msgSend(v17, "bottomAnchor");
  v26 = objc_msgSend(v24, "constraintLessThanOrEqualToAnchor:", v25);

  *(_QWORD *)(v20 + 40) = v26;
  v27 = objc_msgSend(v14, "centerXAnchor");
  v28 = objc_msgSend(v17, "centerXAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v20 + 48) = v29;
  v30 = objc_msgSend(v14, "centerYAnchor");
  v31 = objc_msgSend(v17, "centerYAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v20 + 56) = v32;
  v42[0] = v20;
  specialized Array._endMutation()(v33);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v18, "activateConstraints:", isa);

  v35 = a1[10];
  v36 = swift_allocObject(&unk_100179CC8, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16, v2);
  swift_bridgeObjectRetain(v35);
  swift_retain(v36);
  v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  v42[4] = sub_100060208;
  v43 = v36;
  v42[0] = _NSConcreteStackBlock;
  v42[1] = 1107296256;
  v42[2] = sub_10001B5D0;
  v42[3] = &unk_100179CE0;
  v38 = _Block_copy(v42);
  v39 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v37, 0, v38);

  _Block_release(v38);
  v40 = v43;
  swift_release(v36);
  v41 = objc_msgSend(v2, "addAction:", v39, swift_release(v40).n128_f64[0]);

}

void sub_10005FA20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10005FFC0(Strong, v4);

  }
}

uint64_t sub_10005FA70()
{
  char *v0;
  uint64_t v1;
  NSString v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for PasswordSharingStartViewController();
  objc_msgSendSuper2(&v10, "viewDidLoad");
  objc_msgSend(v0, "setDismissalType:", 3);
  v1 = swift_allocObject(&unk_100179CC8, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16, v0);
  swift_retain(v1);
  v2 = String._bridgeToObjectiveC()();
  v8[4] = sub_100060228;
  v9 = v1;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10001B5D0;
  v8[3] = &unk_100179D08;
  v3 = _Block_copy(v8);
  v4 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v2, 0, v3);

  _Block_release(v3);
  v5 = v9;
  swift_release(v1);
  objc_msgSend(v0, "setDismissButtonAction:", v4, swift_release(v5).n128_f64[0]);

  result = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_presenter]);
  if (result)
  {
    v7 = result;
    *(_QWORD *)(result + 40) = &off_100179C78;
    swift_unknownObjectWeakAssign(result + 32, v0);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

void sub_10005FBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (char *)Strong;
    if (qword_1001A2FA8 != -1)
      swift_once(&qword_1001A2FA8, sub_10005F48C);
    v6 = type metadata accessor for Logger(0, v4);
    v7 = sub_10000E8E8(v6, (uint64_t)qword_1001A58D8);
    v8 = Logger.logObject.getter(v7);
    v10 = static os_log_type_t.default.getter(v8, v9);
    if (os_log_type_enabled(v8, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v10, "Start dismissed", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_presenter]);
    if (v12)
    {
      v14 = v12;
      sub_100095D74(5, v13);

      swift_unknownObjectRelease(v14);
    }
    else
    {

    }
  }
}

uint64_t sub_10005FD50(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t result;
  uint64_t v12;
  objc_super v13;

  v2 = v1;
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for PasswordSharingStartViewController();
  objc_msgSendSuper2(&v13, "viewDidAppear:", a1 & 1);
  if (qword_1001A2FA8 != -1)
    swift_once(&qword_1001A2FA8, sub_10005F48C);
  v5 = type metadata accessor for Logger(0, v4);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A58D8);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "Start ViewDidAppear", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_presenter]);
  if (result)
  {
    v12 = result;
    sub_1000965C8(v2[OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_type]);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_10005FFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  if (qword_1001A2FA8 != -1)
    swift_once(&qword_1001A2FA8, sub_10005F48C);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A58D8);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "Share button tapped", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_presenter);
  if (result)
  {
    v12 = result;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_type))
      sub_100095D74(5, v11);
    else
      sub_100096FA8();
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

id sub_100060158()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PasswordSharingStartViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PasswordSharingStartViewController()
{
  return objc_opt_self(_TtC18SharingViewService34PasswordSharingStartViewController);
}

uint64_t sub_1000601E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100060208(uint64_t a1)
{
  uint64_t v1;

  sub_10005FA20(a1, v1);
}

uint64_t sub_100060210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100060220(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100060228(uint64_t a1)
{
  uint64_t v1;

  sub_10005FBEC(a1, v1);
}

uint64_t sub_100060238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A5930);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A5930);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_1000602C8()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  char *v22;
  uint64_t Strong;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  void **v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  Swift::String v39;
  uint64_t v40;
  NSString v41;
  _BOOL4 v42;
  int v43;
  uint64_t v44;
  void *v45;
  char v46;
  char v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  void **aBlock;
  uint64_t v59;
  void (*v60)(uint64_t, void *);
  void *v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  char v64[24];
  objc_super v65;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = type metadata accessor for B389PresentationConfig.Mode(0);
  v4 = __chkstk_darwin(v3);
  v6 = (unsigned __int8 *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v57 - v7;
  v9 = sub_100006A6C(&qword_1001A5428);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65.receiver = v1;
  v65.super_class = ObjectType;
  objc_msgSendSuper2(&v65, "viewDidLoad");
  if (qword_1001A2FB0 != -1)
    swift_once(&qword_1001A2FB0, sub_100060238);
  v13 = type metadata accessor for Logger(0, v12);
  v14 = sub_10000E8E8(v13, (uint64_t)qword_1001A5930);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.default.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "AirTagStartViewController viewDidLoad", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  sub_1000897BC(0x60u);
  v20 = v19;
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v1, "setTitle:", v21);

  objc_msgSend(v1, "setDismissalType:", 1);
  v22 = &v1[OBJC_IVAR____TtC18SharingViewService25AirTagMovieViewController_mainController];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18SharingViewService25AirTagMovieViewController_mainController]);
  if (!Strong)
    goto LABEL_14;
  v24 = (void *)Strong;
  v25 = Strong + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
  swift_beginAccess(Strong + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig, v64, 0, 0);
  sub_100061230(v25, (uint64_t)v11);

  v26 = type metadata accessor for B389PresentationConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v11, 1, v26) == 1)
  {
    __break(1u);
    return;
  }
  sub_100061278((uint64_t)v11, (uint64_t)v8);
  sub_100061278((uint64_t)v8, (uint64_t)v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v3);
  if (!EnumCaseMultiPayload)
  {
    v28 = *v6;
LABEL_11:
    sub_100023FA0((uint64_t)v8, type metadata accessor for B389PresentationConfig.Mode);
    sub_100023FA0((uint64_t)v11, type metadata accessor for B389PresentationConfig);
    if (v28)
    {
      v30 = sub_1000897BC(0x6Au);
      v32 = v31;
      aBlock = (void **)v30;
      v59 = v31;
      swift_bridgeObjectRetain(v31);
      v33._countAndFlagsBits = 10;
      v33._object = (void *)0xE100000000000000;
      String.append(_:)(v33);
      swift_bridgeObjectRelease(v32);
      v34 = aBlock;
      v35 = v59;
      v36 = sub_1000897BC(0x6Bu);
      v38 = v37;
      aBlock = v34;
      v59 = v35;
      swift_bridgeObjectRetain(v35);
      v39._countAndFlagsBits = v36;
      v39._object = v38;
      String.append(_:)(v39);
      swift_bridgeObjectRelease(v35);
      swift_bridgeObjectRelease(v38);
      v40 = v59;
      v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v40);
      objc_msgSend(v1, "setSubtitle:", v41);

    }
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v28 = v6[*(int *)(sub_100006A6C(&qword_1001A7DF0) + 48)];
    v29 = type metadata accessor for UUID(0);
    (*(void (**)(unsigned __int8 *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v6, v29);
    goto LABEL_11;
  }
  sub_100023FA0((uint64_t)v6, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023FA0((uint64_t)v8, type metadata accessor for B389PresentationConfig.Mode);
  sub_100023FA0((uint64_t)v11, type metadata accessor for B389PresentationConfig);
LABEL_14:
  v42 = sub_1000612BC();
  v43 = SFIsGreenTeaDevice();
  v44 = swift_unknownObjectWeakLoadStrong(v22);
  if (v44)
  {
    v45 = (void *)v44;
    sub_1000AD620();

  }
  if (v42)
    v46 = 10;
  else
    v46 = 8;
  if (v42)
    v47 = 9;
  else
    v47 = 7;
  if (v43)
    v48 = v46;
  else
    v48 = v47;
  sub_1000897BC(v48);
  v50 = v49;
  v51 = swift_allocObject(&unk_100179D50, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16, v1);
  swift_retain(v51);
  v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v50);
  v62 = sub_1000612E0;
  v63 = v51;
  aBlock = _NSConcreteStackBlock;
  v59 = 1107296256;
  v60 = sub_10001B5D0;
  v61 = &unk_100179D90;
  v53 = _Block_copy(&aBlock);
  v54 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v52, 0, v53);

  _Block_release(v53);
  v55 = v63;
  swift_release(v51);
  v56 = objc_msgSend(v1, "addAction:", v54, swift_release(v55).n128_f64[0]);

}

void sub_1000607DC(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  __n128 v5;
  _QWORD v6[5];
  uint64_t v7;

  v6[4] = sub_1000612E8;
  v7 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10007275C;
  v6[3] = &unk_100179DB8;
  v3 = _Block_copy(v6);
  v4 = v7;
  swift_retain(a2);
  v5 = swift_release(v4);
  SBSRequestPasscodeUnlockUI(v3, v5);
  _Block_release(v3);
}

void sub_100060870(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  int v17;
  int v18;

  if (qword_1001A2FB0 != -1)
    swift_once(&qword_1001A2FB0, sub_100060238);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A5930);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 67109120;
    v17 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v9 + 4, v9 + 8);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "AirTagStartViewController unlocked device: %{BOOL}d", v9, 8u);
    swift_slowDealloc(v9, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    v10 = a2 + 16;
    swift_beginAccess(v10, &v17, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v10);
    if (Strong)
    {
      v12 = (void *)Strong;
      v13 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC18SharingViewService25AirTagMovieViewController_mainController);
      if (v13)
      {
        v14 = v13;
        sub_1000AD9D0(v12);

LABEL_12:
        return;
      }

    }
    v14 = Logger.logObject.getter(Strong);
    v15 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Nil mainController while initializing primaryAction", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    goto LABEL_12;
  }
}

void sub_100060A88(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  _QWORD v27[5];
  uint64_t v28;
  objc_super v29;

  v2 = v1;
  v29.receiver = v2;
  v29.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v29, "viewWillAppear:", a1 & 1);
  if (qword_1001A2FB0 != -1)
    swift_once(&qword_1001A2FB0, sub_100060238);
  v5 = type metadata accessor for Logger(0, v4);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A5930);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "AirTagStartViewController viewWillAppear", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = objc_msgSend(v2, "contentView");
  v12 = objc_msgSend(v11, "auxiliaryViews");

  if (!v12)
    goto LABEL_24;
  v13 = sub_1000611B0();
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v19 = v14;
    else
      v19 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v19);
    if (!v15)
      goto LABEL_18;
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v14);
    if (!v15)
      goto LABEL_18;
  }
  if (v15 < 1)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  for (i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
    else
      v17 = *(id *)(v14 + 8 * i + 32);
    v18 = v17;
    objc_msgSend(v17, "setAlpha:", 0.0);

  }
LABEL_18:
  swift_bridgeObjectRelease_n(v14, 2);
  v20 = objc_msgSend(v2, "contentView");
  v21 = objc_msgSend(v20, "titleView");

  if (v21)
  {
    objc_msgSend(v21, "setAlpha:", 0.0);

  }
  v22 = objc_msgSend(v2, "contentView");
  v23 = objc_msgSend(v22, "subtitleLabel");

  if (v23)
  {
    objc_msgSend(v23, "setAlpha:", 0.0);

  }
  v24 = (void *)objc_opt_self(UIView);
  v25 = swift_allocObject(&unk_100179D50, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, v2);
  v27[4] = sub_100061210;
  v28 = v25;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 1107296256;
  v27[2] = sub_10001BB50;
  v27[3] = &unk_100179D68;
  v26 = _Block_copy(v27);
  swift_release(v28);
  objc_msgSend(v24, "animateWithDuration:delay:options:animations:completion:", 65538, v26, 0, 1.5, 0.8);
  _Block_release(v26);
}

void sub_100060DE8(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v23, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    goto LABEL_16;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "contentView");

  v5 = objc_msgSend(v4, "auxiliaryViews");
  if (!v5)
    goto LABEL_24;
  v6 = sub_1000611B0();
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v12 = v7;
    else
      v12 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (v8)
      goto LABEL_5;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    if (v8)
    {
LABEL_5:
      if (v8 >= 1)
      {
        for (i = 0; i != v8; ++i)
        {
          if ((v7 & 0xC000000000000001) != 0)
            v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
          else
            v10 = *(id *)(v7 + 8 * i + 32);
          v11 = v10;
          objc_msgSend(v10, "setAlpha:", 1.0);

        }
        goto LABEL_15;
      }
      __break(1u);
LABEL_24:
      __break(1u);
      return;
    }
  }
LABEL_15:
  swift_bridgeObjectRelease_n(v7, 2);
LABEL_16:
  swift_beginAccess(v1, v22, 0, 0);
  v13 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, "contentView");

    v16 = objc_msgSend(v15, "titleView");
    if (v16)
    {
      objc_msgSend(v16, "setAlpha:", 1.0);

    }
  }
  swift_beginAccess(v1, v21, 0, 0);
  v17 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, "contentView");

    v20 = objc_msgSend(v19, "subtitleLabel");
    if (v20)
    {
      objc_msgSend(v20, "setAlpha:", 1.0);

    }
  }
}

uint64_t sub_100061168()
{
  uint64_t v0;

  return sub_100012F60(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService25AirTagStartViewController_invalidateBubbleMonitor), *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService25AirTagStartViewController_invalidateBubbleMonitor + 8));
}

uint64_t type metadata accessor for AirTagStartViewController()
{
  return objc_opt_self(_TtC18SharingViewService25AirTagStartViewController);
}

unint64_t sub_1000611B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A5510;
  if (!qword_1001A5510)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A5510);
  }
  return result;
}

uint64_t sub_1000611EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100061210()
{
  uint64_t v0;

  sub_100060DE8(v0);
}

uint64_t sub_100061218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100061228(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100061230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A5428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100061278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for B389PresentationConfig.Mode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1000612BC()
{
  return MKBGetDeviceLockState(0) - 1 < 2;
}

void sub_1000612E0(uint64_t a1)
{
  uint64_t v1;

  sub_1000607DC(a1, v1);
}

void sub_1000612E8(char a1)
{
  uint64_t v1;

  sub_100060870(a1, v1);
}

id sub_100061300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSString v12;
  id v13;
  NSString v14;
  _OWORD v16[12];
  _BYTE v17[192];

  v5 = *(_OWORD *)(a3 + 144);
  v16[8] = *(_OWORD *)(a3 + 128);
  v16[9] = v5;
  v6 = *(_OWORD *)(a3 + 176);
  v16[10] = *(_OWORD *)(a3 + 160);
  v16[11] = v6;
  v7 = *(_OWORD *)(a3 + 80);
  v16[4] = *(_OWORD *)(a3 + 64);
  v16[5] = v7;
  v8 = *(_OWORD *)(a3 + 112);
  v16[6] = *(_OWORD *)(a3 + 96);
  v16[7] = v8;
  v9 = *(_OWORD *)(a3 + 16);
  v16[0] = *(_OWORD *)a3;
  v16[1] = v9;
  v10 = *(_OWORD *)(a3 + 48);
  v16[2] = *(_OWORD *)(a3 + 32);
  v16[3] = v10;
  nullsub_4(v16);
  v11 = (uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService34D2DSetupBasePasscodeViewController_viewModel;
  sub_1000142E8((uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService34D2DSetupBasePasscodeViewController_viewModel, (uint64_t)v17);
  sub_1000142E8((uint64_t)v16, v11);
  sub_100014330(a3);
  sub_1000615E4((uint64_t)v17);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setTitle:", v12);

  objc_msgSend(v3, "setAttributedSubtitle:", *(_QWORD *)(a3 + 40));
  objc_msgSend(v3, "setNumberOfDigits:", 6);
  v13 = objc_msgSend(v3, "passcodeEntryView");
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v14);

  return objc_msgSend(v3, "hideActivityIndicator");
}

uint64_t sub_100061440(void *a1)
{
  char *v1;
  NSString v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "showActivityIndicatorWithStatus:", v3);

  result = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18SharingViewService34D2DSetupBasePasscodeViewController_presenter]);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(a1, "text");
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = v8;

    sub_10009F000(v7, v9);
    swift_bridgeObjectRelease(v9);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

id sub_100061594()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for D2DSetupManualAuthViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for D2DSetupManualAuthViewController()
{
  return objc_opt_self(_TtC18SharingViewService32D2DSetupManualAuthViewController);
}

uint64_t sub_1000615E4(uint64_t a1)
{
  sub_10001445C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184));
  return a1;
}

void sub_10006164C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  unsigned int v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[5];
  void *v47;

  v2 = type metadata accessor for SFMoveToAppShareSheetSettings(0);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  __chkstk_darwin(v2);
  v40 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_100013194(0, (unint64_t *)&qword_1001A7E20, BSAction_ptr);
    v7 = sub_1000641BC();
    v8 = Set.Iterator.init(_cocoa:)(v46, v5, v6, v7);
    a1 = v46[0];
    v38 = v46[1];
    v9 = v46[2];
    v10 = v46[3];
    v11 = v46[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v13 = *(_QWORD *)(a1 + 56);
    v38 = a1 + 56;
    v14 = ~v12;
    v15 = -v12;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v11 = v16 & v13;
    v8 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v9 = v14;
    v10 = 0;
  }
  v34 = v9;
  v36 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v37 = (unint64_t)(v9 + 64) >> 6;
  v39 = enum case for SFMoveToAppShareSheetSettings.reply(_:);
  v35 = (char *)&type metadata for Swift.AnyObject + 8;
  v17 = v41;
  v18 = v42;
  while (a1 < 0)
  {
    v22 = __CocoaSet.Iterator.next()(v8);
    if (!v22)
      goto LABEL_37;
    v23 = v22;
    v45 = v22;
    v24 = sub_100013194(0, (unint64_t *)&qword_1001A7E20, BSAction_ptr);
    swift_unknownObjectRetain(v23);
    swift_dynamicCast(&v47, &v45, v35, v24, 7);
    v25 = v47;
    swift_unknownObjectRelease(v23);
    v21 = v10;
    v19 = v11;
    if (!v25)
      goto LABEL_37;
LABEL_35:
    v43 = v11;
    v44 = v10;
    v29 = objc_msgSend(v25, "info", v34);
    if (v29)
    {
      v30 = v29;
      v31 = v40;
      v32 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v17 + 104))(v40, v39, v18);
      v33 = SFMoveToAppShareSheetSettings.rawValue.getter(v32);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v31, v18);
      LOBYTE(v31) = objc_msgSend(v30, "BOOLForSetting:", v33);

      if ((v31 & 1) != 0)
        goto LABEL_37;
    }

    v10 = v21;
    v11 = v19;
  }
  if (v11)
  {
    v19 = (v11 - 1) & v11;
    v20 = __clz(__rbit64(v11)) | (v10 << 6);
    v21 = v10;
LABEL_34:
    v25 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v20);
    if (!v25)
      goto LABEL_37;
    goto LABEL_35;
  }
  v26 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v26 >= v37)
      goto LABEL_37;
    v27 = *(_QWORD *)(v38 + 8 * v26);
    v21 = v10 + 1;
    if (!v27)
    {
      v21 = v10 + 2;
      if (v10 + 2 >= v37)
        goto LABEL_37;
      v27 = *(_QWORD *)(v38 + 8 * v21);
      if (!v27)
      {
        v21 = v10 + 3;
        if (v10 + 3 >= v37)
          goto LABEL_37;
        v27 = *(_QWORD *)(v38 + 8 * v21);
        if (!v27)
        {
          v21 = v10 + 4;
          if (v10 + 4 >= v37)
            goto LABEL_37;
          v27 = *(_QWORD *)(v38 + 8 * v21);
          if (!v27)
          {
            v21 = v10 + 5;
            if (v10 + 5 >= v37)
              goto LABEL_37;
            v27 = *(_QWORD *)(v38 + 8 * v21);
            if (!v27)
            {
              v28 = v10 + 6;
              while (v37 != v28)
              {
                v27 = *(_QWORD *)(v38 + 8 * v28++);
                if (v27)
                {
                  v21 = v28 - 1;
                  goto LABEL_33;
                }
              }
LABEL_37:
              sub_10002413C(a1);
              return;
            }
          }
        }
      }
    }
LABEL_33:
    v19 = (v27 - 1) & v27;
    v20 = __clz(__rbit64(v27)) + (v21 << 6);
    goto LABEL_34;
  }
  __break(1u);
}

uint64_t sub_1000619E4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];
  _QWORD *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_1000C8BF4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v6 = sub_100013194(0, (unint64_t *)&unk_1001A5540, CAFilter_ptr);
        swift_dynamicCast(v16, &v15, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_1000C8BF4(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1000C8BF4(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        v3[2] = v8 + 1;
        sub_100006AAC(v16, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      v10 = sub_100013194(0, (unint64_t *)&unk_1001A5540, CAFilter_ptr);
      do
      {
        v15 = *v9;
        v11 = v15;
        swift_dynamicCast(v16, &v15, v10, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_1000C8BF4(0, v3[2] + 1, 1);
          v3 = v17;
        }
        v13 = v3[2];
        v12 = v3[3];
        if (v13 >= v12 >> 1)
        {
          sub_1000C8BF4(v12 > 1, v13 + 1, 1);
          v3 = v17;
        }
        v3[2] = v13 + 1;
        sub_100006AAC(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100061C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  _OWORD v15[2];
  _QWORD *v16;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_1000C8BF4(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      swift_dynamicCast(v15, v5, v2, (char *)&type metadata for Any + 8, 7);
      v7 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      {
        sub_1000C8BF4(0, v7[2] + 1, 1);
        v7 = v16;
      }
      v12 = v7[2];
      v11 = v7[3];
      if (v12 >= v11 >> 1)
      {
        sub_1000C8BF4(v11 > 1, v12 + 1, 1);
        v7 = v16;
      }
      v7[2] = v12 + 1;
      sub_100006AAC(v15, &v7[4 * v12 + 4]);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_100061DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A59A0);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A59A0);
  if (qword_1001A2EC0 != -1)
    swift_once(&qword_1001A2EC0, sub_100018C20);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD3F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100061E48(void *a1, void (*a2)(void), uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void **v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void **v39;
  char *v40;
  uint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  void **v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void **v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void **v83;
  id v84;
  void *v85;
  id v86;
  char *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  uint64_t v96;
  os_log_type_t v97;
  uint8_t *v98;
  void **v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  void (*v105)(void);
  _QWORD *v106;
  id v107;
  Class isa;
  id v109;
  uint64_t v110;
  void *v111;
  id v112;
  id v113;
  void *v114;
  void *v115;
  void *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  id v120;
  NSObject *v121;
  NSObject *v122;
  uint64_t v123;
  os_log_type_t v124;
  uint8_t *v125;
  uint64_t v126;
  char *v127;
  _QWORD *v128;
  void *v129;
  id v130;
  uint8_t *v131;
  uint8_t *v132;
  uint64_t v133;
  void *v134;
  void **v135;
  uint64_t v136;
  id v137;
  char *v138;
  char *v139;
  void (*v140)(void);
  uint64_t v141;
  _QWORD v142[3];
  void **aBlock;
  _QWORD v144[4];
  uint64_t v145;
  __int128 v146;
  __int128 v147;

  v4 = v3;
  v141 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v139 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
LABEL_78:
    __break(1u);
  v10 = objc_msgSend(a1, "actions");
  if (!v10)
    goto LABEL_8;
  v12 = v10;
  v13 = sub_100013194(0, (unint64_t *)&qword_1001A7E20, BSAction_ptr);
  v14 = sub_1000641BC();
  v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v12, v13, v14);

  sub_10006164C(v15);
  v17 = v16;
  swift_bridgeObjectRelease(v15);
  if (!v17)
  {
LABEL_8:
    if (qword_1001A2FB8 != -1)
      swift_once(&qword_1001A2FB8, sub_100061DB8);
    v26 = type metadata accessor for Logger(0, v11);
    sub_10000E8E8(v26, (uint64_t)qword_1001A59A0);
    v27 = a1;
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v140 = a2;
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v31 = (void **)swift_slowAlloc(32, -1);
      aBlock = v31;
      *(_DWORD *)v30 = 136315138;
      v32 = objc_msgSend(v27, "actions");
      if (v32)
      {
        v33 = v32;
        v34 = sub_100013194(0, (unint64_t *)&qword_1001A7E20, BSAction_ptr);
        v35 = sub_1000641BC();
        v36 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v33, v34, v35);

      }
      else
      {
        v36 = 0;
      }
      *(_QWORD *)&v146 = v36;
      v59 = sub_100006A6C((uint64_t *)&unk_1001A7070);
      v60 = String.init<A>(reflecting:)(&v146, v59);
      v62 = v61;
      *(_QWORD *)&v146 = sub_10001EFA4(v60, v61, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v146, (char *)&v146 + 8, v30 + 4, v30 + 12);

      swift_bridgeObjectRelease(v62);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to get action for MoveToAppShareSheetViewController {actions: %s}", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);

      a2 = v140;
    }
    else
    {

    }
    if (a2)
    {
      a2();
      v63 = type metadata accessor for SFAirDropReceive.Failure(0);
      v64 = sub_100005B80(&qword_1001A5A00, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      v65 = swift_allocError(v63, v64, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v63 - 8) + 104))(v66, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v63);
      sub_1000639F0(0, v65);
      swift_errorRelease(v65);
      return;
    }
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v18 = *(void **)&v4[OBJC_IVAR___SVSMoveToAppShareSheetViewController_replyAction];
  *(_QWORD *)&v4[OBJC_IVAR___SVSMoveToAppShareSheetViewController_replyAction] = v17;
  v19 = v17;

  v20 = objc_msgSend(a1, "userInfo");
  v140 = a2;
  if (!v20)
  {
    v146 = 0u;
    v147 = 0u;
LABEL_25:
    sub_100064214((uint64_t)&v146);
LABEL_26:
    if (qword_1001A2FB8 != -1)
      swift_once(&qword_1001A2FB8, sub_100061DB8);
    v50 = type metadata accessor for Logger(0, v38);
    sub_10000E8E8(v50, (uint64_t)qword_1001A59A0);
    v51 = a1;
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.error.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      v137 = v19;
      v138 = v4;
      v54 = (uint8_t *)swift_slowAlloc(12, -1);
      v55 = (void **)swift_slowAlloc(32, -1);
      aBlock = v55;
      *(_DWORD *)v54 = 136315138;
      v56 = objc_msgSend(v51, "userInfo");
      if (v56)
      {
        v57 = v56;
        v58 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v56, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      }
      else
      {
        v58 = 0;
      }
      *(_QWORD *)&v146 = v58;
      v67 = sub_100006A6C(&qword_1001A5630);
      v68 = String.init<A>(reflecting:)(&v146, v67);
      v70 = v69;
      *(_QWORD *)&v146 = sub_10001EFA4(v68, v69, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v146, (char *)&v146 + 8, v54 + 4, v54 + 12);

      swift_bridgeObjectRelease(v70);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "Failed to get security scoped files for MoveToAppShareSheetViewController {userInfo: %s}", v54, 0xCu);
      swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);

      v19 = v137;
    }
    else
    {

    }
    if (v140)
    {
      v140();
      v71 = type metadata accessor for SFAirDropReceive.Failure(0);
      v72 = sub_100005B80(&qword_1001A5A00, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      v73 = swift_allocError(v71, v72, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v71 - 8) + 104))(v74, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v71);
      sub_1000639F0(0, v73);
      swift_errorRelease(v73);

      return;
    }
    goto LABEL_80;
  }
  v21 = v20;
  v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v142[0] = static SFMoveToAppShareSheetSettings.encodedFiles.getter();
  v142[1] = v23;
  AnyHashable.init<A>(_:)(&aBlock, v142, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v22 + 16) && (v24 = sub_100005CF4((uint64_t)&aBlock), (v25 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(v22 + 56) + 32 * v24, (uint64_t)&v146);
  }
  else
  {
    v146 = 0u;
    v147 = 0u;
  }
  sub_100006B34((uint64_t)&aBlock);
  swift_bridgeObjectRelease(v22);
  if (!*((_QWORD *)&v147 + 1))
    goto LABEL_25;
  v37 = sub_100006A6C(&qword_1001A5A08);
  if ((swift_dynamicCast(&aBlock, &v146, (char *)&type metadata for Any + 8, v37, 6) & 1) == 0)
    goto LABEL_26;
  v137 = v19;
  v138 = v4;
  v39 = aBlock;
  aBlock = (void **)_swiftEmptyArrayStorage;
  v40 = (char *)v39[2];
  v136 = a3;
  if (v40)
  {
    sub_100013194(0, &qword_1001A4288, NSKeyedUnarchiver_ptr);
    v41 = sub_100013194(0, (unint64_t *)&unk_1001A5A10, UISUISecurityScopedResource_ptr);
    swift_bridgeObjectRetain(v39);
    v135 = v39;
    v42 = (unint64_t *)(v39 + 5);
    do
    {
      v43 = *(v42 - 1);
      v44 = *v42;
      sub_100006B94(v43, *v42);
      v45 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v41, v43, v44, v41);
      v46 = sub_100007348(v43, v44);
      if (v45)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
        v48 = *(_QWORD *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
        v47 = *(_QWORD *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v48 >= v47 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1);
        v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v45);
        specialized Array._endMutation()(v49);
      }
      v42 += 2;
      --v40;
    }
    while (v40);
    v39 = v135;
    swift_bridgeObjectRelease(v135);
    v75 = aBlock;
  }
  else
  {
    v75 = (void **)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v39);
  v76 = OBJC_IVAR___SVSMoveToAppShareSheetViewController_files;
  v77 = v138;
  v78 = *(_QWORD *)&v138[OBJC_IVAR___SVSMoveToAppShareSheetViewController_files];
  *(_QWORD *)&v138[OBJC_IVAR___SVSMoveToAppShareSheetViewController_files] = v75;
  swift_bridgeObjectRelease(v78);
  sub_1000636C4();
  v79 = *(_QWORD *)&v77[v76];
  v80 = v139;
  if (!((unint64_t)v79 >> 62))
  {
    v81 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v77[v76]);
    if (v81)
      goto LABEL_44;
LABEL_57:
    swift_bridgeObjectRelease(v79);
    v83 = (void **)_swiftEmptyArrayStorage;
    goto LABEL_58;
  }
  if (v79 < 0)
    v91 = *(_QWORD *)&v77[v76];
  else
    v91 = v79 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)&v77[v76]);
  v81 = _CocoaArrayWrapper.endIndex.getter(v91);
  if (!v81)
    goto LABEL_57;
LABEL_44:
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_1000C8C10(0, v81 & ~(v81 >> 63), 0);
  if (v81 < 0)
  {
    __break(1u);
    goto LABEL_78;
  }
  v82 = 0;
  v83 = aBlock;
  do
  {
    if ((v79 & 0xC000000000000001) != 0)
      v84 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v82, v79);
    else
      v84 = *(id *)(v79 + 8 * v82 + 32);
    v85 = v84;
    v86 = objc_msgSend(v84, "url", v135, v136);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v86);

    aBlock = v83;
    v87 = v80;
    v89 = (unint64_t)v83[2];
    v88 = (unint64_t)v83[3];
    if (v89 >= v88 >> 1)
    {
      sub_1000C8C10(v88 > 1, v89 + 1, 1);
      v83 = aBlock;
    }
    ++v82;
    v83[2] = (void *)(v89 + 1);
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v83+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v89, v87, v141);
    v80 = v87;
  }
  while (v81 != v82);
  swift_bridgeObjectRelease(v79);
  v77 = v138;
LABEL_58:
  if (qword_1001A2FB8 != -1)
    swift_once(&qword_1001A2FB8, sub_100061DB8);
  v92 = type metadata accessor for Logger(0, v90);
  v93 = sub_10000E8E8(v92, (uint64_t)qword_1001A59A0);
  v94 = swift_bridgeObjectRetain_n(v83, 2);
  v139 = (char *)v93;
  v95 = Logger.logObject.getter(v94);
  v97 = static os_log_type_t.default.getter(v95, v96);
  if (os_log_type_enabled(v95, v97))
  {
    v98 = (uint8_t *)swift_slowAlloc(12, -1);
    v99 = (void **)swift_slowAlloc(32, -1);
    aBlock = v99;
    *(_DWORD *)v98 = 136315138;
    v100 = swift_bridgeObjectRetain(v83);
    v101 = Array.description.getter(v100, v141);
    v103 = v102;
    swift_bridgeObjectRelease(v83);
    v104 = v101;
    v77 = v138;
    *(_QWORD *)&v146 = sub_10001EFA4(v104, v103, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v146, (char *)&v146 + 8, v98 + 4, v98 + 12);
    swift_bridgeObjectRelease_n(v83, 2);
    swift_bridgeObjectRelease(v103);
    _os_log_impl((void *)&_mh_execute_header, v95, v97, "Share Sheet being configured with files: %s", v98, 0xCu);
    swift_arrayDestroy(v99, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v99, -1, -1);
    swift_slowDealloc(v98, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v83, 2);
  }
  v105 = v140;
  v106 = sub_100061C44((uint64_t)v83);
  swift_bridgeObjectRelease(v83);
  v107 = objc_allocWithZone((Class)UIActivityViewController);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v106);
  v109 = objc_msgSend(v107, "initWithActivityItems:applicationActivities:", isa, 0);

  v110 = OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheet;
  v111 = *(void **)&v77[OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheet];
  *(_QWORD *)&v77[OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheet] = v109;

  v112 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v113 = objc_msgSend(v112, "userInterfaceIdiom");

  if (v113 == (id)1)
  {
    v114 = *(void **)&v77[v110];
    if (!v114)
      goto LABEL_69;
    objc_msgSend(v114, "setAllowsCustomPresentationStyle:", 1);
    v115 = *(void **)&v77[v110];
    if (!v115)
      goto LABEL_69;
    objc_msgSend(v115, "setModalPresentationStyle:", 2);
  }
  v116 = *(void **)&v77[v110];
  if (v116)
  {
    v117 = swift_allocObject(&unk_100179E78, 24, 7);
    swift_unknownObjectWeakInit(v117 + 16, v77);
    v144[3] = sub_100064278;
    v145 = v117;
    aBlock = _NSConcreteStackBlock;
    v144[0] = 1107296256;
    v144[1] = sub_100063144;
    v144[2] = &unk_100179E90;
    v118 = _Block_copy(&aBlock);
    v119 = v145;
    v120 = v116;
    objc_msgSend(v120, "setCompletionWithItemsHandler:", v118, swift_release(v119).n128_f64[0]);
    _Block_release(v118);

  }
LABEL_69:
  v121 = v77;
  v122 = Logger.logObject.getter(v121);
  v124 = static os_log_type_t.default.getter(v122, v123);
  if (os_log_type_enabled(v122, v124))
  {
    v125 = (uint8_t *)swift_slowAlloc(12, -1);
    v126 = swift_slowAlloc(8, -1);
    v127 = v77;
    v128 = (_QWORD *)v126;
    *(_DWORD *)v125 = 138412290;
    v129 = *(void **)&v127[v110];
    if (v129)
    {
      aBlock = *(void ***)&v127[v110];
      v130 = v129;
      v131 = v125 + 4;
      v132 = v125 + 12;
    }
    else
    {
      v132 = v125 + 12;
      aBlock = 0;
      v131 = v125 + 4;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v144, v131, v132);
    *v128 = v129;

    _os_log_impl((void *)&_mh_execute_header, v122, v124, "Created Share Sheet: %@", v125, 0xCu);
    v133 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v128, 1, v133);
    swift_slowDealloc(v128, -1, -1);
    swift_slowDealloc(v125, -1, -1);
  }
  else
  {

    v122 = v121;
  }

  v134 = v137;
  if (v105)
  {
    v105();

    return;
  }
LABEL_81:
  __break(1u);
}

void sub_100062C68(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _BYTE v40[24];

  v8 = a5 + 16;
  swift_beginAccess(a5 + 16, v40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v11 = (_BYTE *)Strong;
    if ((a2 & 1) != 0)
    {
      if (qword_1001A2FB8 != -1)
        swift_once(&qword_1001A2FB8, sub_100061DB8);
      v12 = type metadata accessor for Logger(0, v10);
      sub_10000E8E8(v12, (uint64_t)qword_1001A59A0);
      v13 = a1;
      v14 = Logger.logObject.getter(v13);
      v16 = static os_log_type_t.default.getter(v14, v15);
      if (!os_log_type_enabled(v14, v16))
      {

LABEL_23:
        v11[OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheetDismissed] = 1;
        sub_1000639F0(a2 & 1, a4);

        return;
      }
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v39 = v18;
      *(_DWORD *)v17 = 136315138;
      v36 = a2;
      if (a1)
      {
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
        v21 = v20;
      }
      else
      {
        v19 = 0xD000000000000015;
        v37 = 0;
        v38 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(0xE000000000000000);
        v21 = 0x8000000100136820;
      }
      v37 = sub_10001EFA4(v19, v21, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v17 + 4, v17 + 12);

      swift_bridgeObjectRelease(v21);
      _os_log_impl((void *)&_mh_execute_header, v14, v16, "Share Sheet succeeded with activity type %s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      v36 = a2;
      if (qword_1001A2FB8 != -1)
        swift_once(&qword_1001A2FB8, sub_100061DB8);
      v22 = type metadata accessor for Logger(0, v10);
      sub_10000E8E8(v22, (uint64_t)qword_1001A59A0);
      v23 = a1;
      swift_errorRetain(a4);
      v24 = v23;
      v25 = swift_errorRetain(a4);
      v14 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.default.getter(v14, v26);
      if (os_log_type_enabled(v14, v27))
      {
        v28 = swift_slowAlloc(22, -1);
        v34 = (uint64_t *)swift_slowAlloc(8, -1);
        v35 = swift_slowAlloc(32, -1);
        v39 = v35;
        *(_DWORD *)v28 = 136315394;
        if (a1)
        {
          v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          v31 = v30;
        }
        else
        {
          v29 = 0xD000000000000015;
          v37 = 0;
          v38 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease(0xE000000000000000);
          v31 = 0x8000000100136820;
        }
        v37 = sub_10001EFA4(v29, v31, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v28 + 4, v28 + 12);

        swift_bridgeObjectRelease(v31);
        *(_WORD *)(v28 + 12) = 2112;
        if (a4)
        {
          swift_errorRetain(a4);
          v32 = _swift_stdlib_bridgeErrorToNSError(a4);
          v37 = v32;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v28 + 14, v28 + 22);
        }
        else
        {
          v37 = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v28 + 14, v28 + 22);
          v32 = 0;
        }
        a2 = v36;
        *v34 = v32;
        swift_errorRelease(a4);
        swift_errorRelease(a4);
        _os_log_impl((void *)&_mh_execute_header, v14, v27, "Share Sheet failed with activity type %s and error %@", (uint8_t *)v28, 0x16u);
        v33 = sub_100006A6C(&qword_1001A5420);
        swift_arrayDestroy(v34, 1, v33);
        swift_slowDealloc(v34, -1, -1);
        swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v28, -1, -1);

        goto LABEL_23;
      }

      swift_errorRelease(a4);
      swift_errorRelease(a4);
    }

    a2 = v36;
    goto LABEL_23;
  }
}

uint64_t sub_100063144(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  void (*v9)(void *, uint64_t, uint64_t, void *);
  uint64_t v10;
  id v11;
  id v12;

  v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (a4)
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, (char *)&type metadata for Any + 8);
  else
    v10 = 0;
  swift_retain(v8);
  v11 = a2;
  v12 = a5;
  v9(a2, a3, v10, a5);
  swift_release(v8);

  return swift_bridgeObjectRelease(v10);
}

id sub_100063298(char a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v20;

  if (qword_1001A2FB8 != -1)
    swift_once(&qword_1001A2FB8, sub_100061DB8);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A59A0);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "MoveToApp Share Sheet viewDidAppear", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v20.receiver = v2;
  v20.super_class = (Class)type metadata accessor for SVSMoveToAppShareSheetViewController();
  v10 = objc_msgSendSuper2(&v20, "viewDidAppear:", a1 & 1);
  v11 = *(_QWORD *)&v2[OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheet];
  if (v11)
    return objc_msgSend(v2, "presentViewController:animated:completion:", v11, 1, 0);
  v13 = Logger.logObject.getter(v10);
  v14 = static os_log_type_t.error.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "MoveToApp Share Sheet dismissing because there is no loaded Share Sheet", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = type metadata accessor for SFAirDropReceive.Failure(0);
  v17 = sub_100005B80(&qword_1001A5A00, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  v18 = swift_allocError(v16, v17, 0, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v16);
  sub_1000639F0(0, v18);
  return (id)swift_errorRelease(v18);
}

void sub_1000634E8(char a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  objc_super v15;

  if (qword_1001A2FB8 != -1)
    swift_once(&qword_1001A2FB8, sub_100061DB8);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A59A0);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "MoveToApp Share Sheet viewDidDisappear", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for SVSMoveToAppShareSheetViewController();
  v10 = objc_msgSendSuper2(&v15, "viewDidDisappear:", a1 & 1);
  if ((*((_BYTE *)v2 + OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheetDismissed) & 1) == 0)
  {
    v11 = Logger.logObject.getter(v10);
    v13 = static os_log_type_t.default.getter(v11, v12);
    if (os_log_type_enabled(v11, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v13, "MoveToApp Share Sheet view disappeared before Share Sheet completed. Assuming cancellation", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    sub_1000639F0(0, 0);
  }
}

uint64_t sub_1000636C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  char **v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = type metadata accessor for URL(0);
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  __chkstk_darwin(v1);
  v37 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___SVSMoveToAppShareSheetViewController_files);
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___SVSMoveToAppShareSheetViewController_files));
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v3);
  }
  if (v3 < 0)
    v31 = *(_QWORD *)(v0 + OBJC_IVAR___SVSMoveToAppShareSheetViewController_files);
  else
    v31 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___SVSMoveToAppShareSheetViewController_files));
  result = _CocoaArrayWrapper.endIndex.getter(v31);
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease(v3);
LABEL_3:
  if (v4 >= 1)
  {
    v7 = 0;
    v8 = v3 & 0xC000000000000001;
    v9 = &selRef_systemWhiteColor;
    *(_QWORD *)&v6 = 136315138;
    v34 = v6;
    v33 = (char *)&type metadata for Any + 8;
    v35 = v3;
    v36 = v4;
    do
    {
      if (v8)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v3);
      else
        v10 = *(id *)(v3 + 8 * v7 + 32);
      v11 = v10;
      if ((objc_msgSend(v10, v9[181]) & 1) != 0)
      {

      }
      else
      {
        if (qword_1001A2FB8 != -1)
          swift_once(&qword_1001A2FB8, sub_100061DB8);
        v13 = type metadata accessor for Logger(0, v12);
        sub_10000E8E8(v13, (uint64_t)qword_1001A59A0);
        v14 = v11;
        v15 = Logger.logObject.getter(v14);
        v16 = static os_log_type_t.error.getter(v15);
        if (os_log_type_enabled(v15, v16))
        {
          v17 = swift_slowAlloc(12, -1);
          v40 = swift_slowAlloc(32, -1);
          v41 = v40;
          *(_DWORD *)v17 = v34;
          v18 = objc_msgSend(v14, "url");
          v19 = v37;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v18);

          v20 = sub_100005B80((unint64_t *)&unk_1001A7CD0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v21 = v8;
          v22 = v39;
          v23 = dispatch thunk of CustomStringConvertible.description.getter(v39, v20);
          v25 = v24;
          v26 = v19;
          v4 = v36;
          v27 = v22;
          v8 = v21;
          (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v27);
          *(_QWORD *)(v17 + 4) = sub_10001EFA4(v23, v25, &v41);

          v28 = v25;
          v3 = v35;
          swift_bridgeObjectRelease(v28);
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to start accessing resource for URL %s", (uint8_t *)v17, 0xCu);
          v29 = v40;
          swift_arrayDestroy(v40, 1, v33);
          swift_slowDealloc(v29, -1, -1);
          v30 = v17;
          v9 = &selRef_systemWhiteColor;
          swift_slowDealloc(v30, -1, -1);

        }
        else
        {

        }
      }
      ++v7;
    }
    while (v4 != v7);
    return swift_bridgeObjectRelease(v3);
  }
  __break(1u);
  return result;
}

void sub_1000639F0(char a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  char *v16;
  _QWORD v17[5];
  uint64_t v18;

  v5 = *(_QWORD *)&v2[OBJC_IVAR___SVSMoveToAppShareSheetViewController_files];
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = *(_QWORD *)&v2[OBJC_IVAR___SVSMoveToAppShareSheetViewController_files];
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR___SVSMoveToAppShareSheetViewController_files]);
    v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (!v6)
      goto LABEL_13;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR___SVSMoveToAppShareSheetViewController_files]);
    if (!v6)
      goto LABEL_13;
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
    else
      v8 = *(id *)(v5 + 8 * i + 32);
    v9 = v8;
    objc_msgSend(v8, "stopAccessing");

  }
LABEL_13:
  swift_bridgeObjectRelease(v5);
  sub_100063BDC(a1 & 1, a2);
  if ((v2[OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheetDismissed] & 1) != 0
    || (v11 = *(void **)&v2[OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheet]) == 0)
  {
    objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);
  }
  else
  {
    v12 = swift_allocObject(&unk_100179E00, 24, 7);
    *(_QWORD *)(v12 + 16) = v2;
    v17[4] = sub_100064168;
    v18 = v12;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_10001BB50;
    v17[3] = &unk_100179E18;
    v13 = _Block_copy(v17);
    v14 = v18;
    v15 = v11;
    v16 = v2;
    objc_msgSend(v15, "dismissViewControllerAnimated:completion:", 1, v13, swift_release(v14).n128_f64[0]);
    _Block_release(v13);

  }
}

void sub_100063BDC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;

  v5 = type metadata accessor for SFMoveToAppShareSheetSettings(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v2 + OBJC_IVAR___SVSMoveToAppShareSheetViewController_replyAction);
  if (!v10)
  {
    if (qword_1001A2FB8 != -1)
      swift_once(&qword_1001A2FB8, sub_100061DB8);
    v14 = type metadata accessor for Logger(0, v7);
    v15 = sub_10000E8E8(v14, (uint64_t)qword_1001A59A0);
    v27 = Logger.logObject.getter(v15);
    v16 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v27, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v16, "Missing action when performing MoveToAppShareSheetViewController dismiss", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
    goto LABEL_14;
  }
  v27 = v10;
  if (!-[NSObject canSendResponse](v27, "canSendResponse"))
  {
    if (qword_1001A2FB8 != -1)
      swift_once(&qword_1001A2FB8, sub_100061DB8);
    v18 = type metadata accessor for Logger(0, v11);
    v19 = sub_10000E8E8(v18, (uint64_t)qword_1001A59A0);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Cannot send response for action in MoveToAppShareSheetViewController", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

LABEL_14:
    return;
  }
  if (a2)
  {
    swift_errorRetain(a2);
    v12 = (void *)_convertErrorToNSError(_:)(a2);
    v13 = objc_msgSend((id)objc_opt_self(BSActionResponse), "responseForError:", v12);

    swift_errorRelease(a2);
  }
  else
  {
    v23 = objc_msgSend(objc_allocWithZone((Class)BSMutableSettings), "init");
    v24 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, enum case for SFMoveToAppShareSheetSettings.shareSheetSucceeded(_:), v5);
    v25 = SFMoveToAppShareSheetSettings.rawValue.getter(v24);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    objc_msgSend(v23, "setFlag:forSetting:", a1 & 1, v25);
    v13 = objc_msgSend((id)objc_opt_self(BSActionResponse), "responseWithInfo:", v23);

  }
  -[NSObject sendResponse:](v27, "sendResponse:", v13);

}

id sub_100063EF4(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  NSString v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v3[OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheet] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___SVSMoveToAppShareSheetViewController_files] = _swiftEmptyArrayStorage;
  v3[OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheetDismissed] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___SVSMoveToAppShareSheetViewController_replyAction] = 0;
  if (a2)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for SVSMoveToAppShareSheetViewController();
  v7 = objc_msgSendSuper2(&v9, "initWithNibName:bundle:", v6, a3);

  return v7;
}

id sub_100064004(void *a1)
{
  _BYTE *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheet] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___SVSMoveToAppShareSheetViewController_files] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR___SVSMoveToAppShareSheetViewController_sharesheetDismissed] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___SVSMoveToAppShareSheetViewController_replyAction] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SVSMoveToAppShareSheetViewController();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id sub_1000640AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SVSMoveToAppShareSheetViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SVSMoveToAppShareSheetViewController()
{
  return objc_opt_self(SVSMoveToAppShareSheetViewController);
}

uint64_t sub_100064144()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100064168()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 1, 0);
}

uint64_t sub_100064180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100064190(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100064198()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1000641BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A7080;
  if (!qword_1001A7080)
  {
    v1 = sub_100013194(255, (unint64_t *)&qword_1001A7E20, BSAction_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1001A7080);
  }
  return result;
}

uint64_t sub_100064214(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006A6C(&qword_1001A4340);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100064254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100064278(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_100062C68(a1, a2, a3, a4, v4);
}

uint64_t sub_100064288()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = objc_msgSend(v0, "_remoteViewControllerProxy");
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v6);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100064600((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    v3 = sub_100006A6C((uint64_t *)&unk_1001A55D0);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_100064214((uint64_t)v7);
    return 0;
  }
}

uint64_t type metadata accessor for SoftwareUpdateRequiredFlow()
{
  return objc_opt_self(_TtC18SharingViewService26SoftwareUpdateRequiredFlow);
}

uint64_t sub_100064600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A4340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for DismissalConfirmationInformation(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

_QWORD *initializeWithCopy for DismissalConfirmationInformation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *assignWithCopy for DismissalConfirmationInformation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

__n128 initializeWithTake for DismissalConfirmationInformation(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for DismissalConfirmationInformation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for DismissalConfirmationInformation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DismissalConfirmationInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DismissalConfirmationInformation()
{
  return &type metadata for DismissalConfirmationInformation;
}

uint64_t sub_1000648B0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1000648F8((uint64_t *)v7, v8) & 1;
}

uint64_t sub_1000648F8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      if ((v16 = a1[4], v17 = a1[5], v18 = a2[4], v19 = a2[5], v16 == v18) && v17 == v19
        || (v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0), result = 0, (v20 & 1) != 0))
      {
        v21 = a1[6];
        v22 = a1[7];
        v23 = a2[6];
        v24 = a2[7];
        if (v21 == v23 && v22 == v24)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
      }
    }
  }
  return result;
}

void sub_1000649C4(Swift::String *a1@<X8>)
{
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v7;
  NSString v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  id v23;
  Swift::String v24;
  Swift::String_optional v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;

  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v28._object = (void *)0xE000000000000000;
  v4._object = (void *)0x80000001001393C0;
  v4._countAndFlagsBits = 0xD000000000000010;
  v5.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v5.value._object = (void *)0xEB00000000656C62;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v28);

  v8 = String._bridgeToObjectiveC()();
  v9 = sub_100116484(v8);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13 = objc_msgSend(v2, "mainBundle");
  v29._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = v10;
  v14._object = v12;
  v15.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v15.value._object = (void *)0xEB00000000656C62;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v29._countAndFlagsBits = 0;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v29);
  swift_bridgeObjectRelease(v12);

  v18 = objc_msgSend(v2, "mainBundle");
  v30._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0x4C45434E4143;
  v19._object = (void *)0xE600000000000000;
  v20.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v20.value._object = (void *)0xEB00000000656C62;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v30);

  v23 = objc_msgSend(v2, "mainBundle");
  v24._countAndFlagsBits = 0xD000000000000011;
  v31._object = (void *)0xE000000000000000;
  v24._object = (void *)0x80000001001393E0;
  v25.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v25.value._object = (void *)0xEB00000000656C62;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v31);

  *a1 = v7;
  a1[1] = v17;
  a1[2] = v22;
  a1[3] = v27;
}

void sub_100064C34(Swift::String *a1@<X8>)
{
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  Swift::String v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;

  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v23._object = (void *)0xE000000000000000;
  v4._object = (void *)0x80000001001393C0;
  v4._countAndFlagsBits = 0xD000000000000010;
  v5.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v5.value._object = (void *)0xEB00000000656C62;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0;
  v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v23);

  v8 = objc_msgSend(v2, "mainBundle");
  v9._countAndFlagsBits = 0xD000000000000012;
  v24._object = (void *)0xE000000000000000;
  v9._object = (void *)0x80000001001399D0;
  v10.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v10.value._object = (void *)0xEB00000000656C62;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v24._countAndFlagsBits = 0;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v24);

  v13 = objc_msgSend(v2, "mainBundle");
  v25._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0x4C45434E4143;
  v14._object = (void *)0xE600000000000000;
  v15.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v15.value._object = (void *)0xEB00000000656C62;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v25);

  v18 = objc_msgSend(v2, "mainBundle");
  v19._countAndFlagsBits = 0xD000000000000011;
  v26._object = (void *)0xE000000000000000;
  v19._object = (void *)0x80000001001393E0;
  v20.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v20.value._object = (void *)0xEB00000000656C62;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v26._countAndFlagsBits = 0;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v26);

  *a1 = v7;
  a1[1] = v12;
  a1[2] = v17;
  a1[3] = v22;
}

uint64_t sub_100064E60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A5A50);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A5A50);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100064EF0()
{
  qword_1001A5A68 = 0x4008000000000000;
}

void sub_100064F00()
{
  qword_1001A5A70 = 0x4054000000000000;
}

void sub_100064F10()
{
  qword_1001A5A78 = 0x4049000000000000;
}

void sub_100064F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18[24];
  char v19[24];
  char v20[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    goto LABEL_8;
  v6 = (char *)Strong;
  v7 = a3 + 16;
  swift_beginAccess(v7, v19, 0, 0);
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v7);
  v9 = v8;
  if (!v8)
    goto LABEL_6;
  v10 = objc_msgSend(v8, "text");

  if (!v10)
  {
    v9 = 0;
LABEL_6:
    v12 = 0;
    goto LABEL_7;
  }
  v9 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;

LABEL_7:
  v13 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleEmoji];
  v14 = *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleEmoji + 8];
  *(_QWORD *)v13 = v9;
  *((_QWORD *)v13 + 1) = v12;

  swift_bridgeObjectRelease(v14);
LABEL_8:
  swift_beginAccess(v4, v18, 0, 0);
  v15 = swift_unknownObjectWeakLoadStrong(v4);
  if (v15)
  {
    v17 = (void *)v15;
    sub_1000ADF90(v15, v16);

  }
}

void sub_100065038()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *Strong;
  NSString v34;
  void *v35;
  id v36;
  uint64_t v37;
  void **v38;
  uint64_t v39;
  void (*v40)(uint64_t, void *);
  void *v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  objc_super v44;

  v44.receiver = v0;
  v44.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v44, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryLarge);
    objc_msgSend(v2, "_setLocalOverrideTraitCollection:", v3);

    v4 = (void *)objc_opt_self(NSBundle);
    v5 = objc_msgSend(v4, "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = sub_100117218(v5, v6, v7);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v10 = v9;

    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v0, "setTitle:", v11);

    v12 = objc_msgSend(v4, "mainBundle");
    v13 = String._bridgeToObjectiveC()();
    v14 = String._bridgeToObjectiveC()();
    v15 = sub_100117218(v12, v13, v14);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v17 = v16;

    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v0, "setSubtitle:", v18);

    objc_msgSend(v0, "setDismissalType:", 1);
    v19 = swift_allocObject(&unk_10017A000, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16, v0);
    swift_retain(v19);
    v20 = String._bridgeToObjectiveC()();
    v42 = sub_100066B28;
    v43 = v19;
    v38 = _NSConcreteStackBlock;
    v39 = 1107296256;
    v40 = sub_10001B5D0;
    v41 = &unk_10017A018;
    v21 = _Block_copy(&v38);
    v22 = (void *)objc_opt_self(PRXAction);
    v23 = objc_msgSend(v22, "actionWithTitle:style:handler:", v20, 0, v21);

    _Block_release(v21);
    v24 = v43;
    swift_release(v19);
    objc_msgSend(v0, "setDismissButtonAction:", v23, swift_release(v24).n128_f64[0]);

    v25 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_continueAction];
    objc_msgSend(v25, "setEnabled:", 0);

    v26 = objc_msgSend(v4, "mainBundle");
    v27 = String._bridgeToObjectiveC()();
    v28 = String._bridgeToObjectiveC()();
    v29 = sub_100117218(v26, v27, v28);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v31 = v30;

    v32 = swift_allocObject(&unk_100179F60, 24, 7);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_mainController]);
    swift_unknownObjectWeakInit(v32 + 16, Strong);

    swift_retain(v32);
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    v42 = sub_100066B30;
    v43 = v32;
    v38 = _NSConcreteStackBlock;
    v39 = 1107296256;
    v40 = sub_10001B5D0;
    v41 = &unk_10017A040;
    v35 = _Block_copy(&v38);
    v36 = objc_msgSend(v22, "actionWithTitle:style:handler:", v34, 1, v35);

    _Block_release(v35);
    v37 = v43;
    swift_release(v32);

    sub_100065864();
  }
  else
  {
    __break(1u);
  }
}

void sub_10006556C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t Strong;
  void *v15;
  uint64_t ObjectType;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31[3];

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 16;
  if (qword_1001A2FC0 != -1)
    swift_once(&qword_1001A2FC0, sub_100064E60);
  v8 = sub_10000E8E8(v3, (uint64_t)qword_1001A5A50);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  v9 = swift_retain_n(a2, 2);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v31[0] = v27;
    *(_DWORD *)v13 = 136315138;
    swift_beginAccess(a2 + 16, v30, 0, 0);
    v28 = a2 + 16;
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (!Strong)
    {
      swift_release(a2);
      __break(1u);
      return;
    }
    v15 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);

    v17 = _typeName(_:qualified:)(ObjectType, 0);
    v19 = v18;
    v29 = sub_10001EFA4(v17, v18, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v13 + 4, v13 + 12);
    swift_release_n(a2, 2, v20);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "dismissPressed in %s", v13, 0xCu);
    v21 = v27;
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v28;
  }
  else
  {

    swift_release_n(a2, 2, v22);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_beginAccess(v7, v31, 0, 0);
  v23 = swift_unknownObjectWeakLoadStrong(v7);
  if (v23)
  {
    v24 = (void *)v23;
    v25 = (void *)swift_unknownObjectWeakLoadStrong(v23 + OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_mainController);

    if (v25)
    {
      objc_msgSend(v25, "dismiss:", 5);

    }
  }
}

void sub_100065814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1000AE238(Strong, v4);

  }
}

void sub_100065864()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  NSString v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  Class isa;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_emojiContainer];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "secondarySystemFillColor");
  objc_msgSend(v2, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v2, "layer");
  if (qword_1001A2FD0 != -1)
    swift_once(&qword_1001A2FD0, sub_100064F00);
  v6 = *(double *)&qword_1001A5A70;
  if (qword_1001A2FC8 != -1)
    swift_once(&qword_1001A2FC8, sub_100064EF0);
  objc_msgSend(v5, "setCornerRadius:", (v6 + *(double *)&qword_1001A5A68) * 0.5);

  v7 = objc_msgSend(v2, "layer");
  v8 = objc_msgSend(v3, "systemBlueColor");
  v9 = objc_msgSend(v8, "CGColor");

  objc_msgSend(v7, "setBorderColor:", v9);
  v10 = objc_msgSend(v2, "layer");
  objc_msgSend(v10, "setBorderWidth:", *(double *)&qword_1001A5A68);

  objc_msgSend(v2, "setClipsToBounds:", 1);
  v11 = objc_msgSend(v1, "contentView");
  objc_msgSend(v11, "addSubview:", v2);

  v12 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_selectedEmojiLabel];
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = (void *)objc_opt_self(UIFont);
  if (qword_1001A2FD8 != -1)
    swift_once(&qword_1001A2FD8, sub_100064F10);
  v14 = objc_msgSend(v13, "systemFontOfSize:", *(double *)&qword_1001A5A78);
  objc_msgSend(v12, "setFont:", v14);

  objc_msgSend(v12, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v2, "addSubview:", v12);
  v74 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 3, 2, *(double *)&qword_1001A5A78);
  v15 = String._bridgeToObjectiveC()();
  v73 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v15, v74);

  v16 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_emojiButton];
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "setImage:forState:", v73, 0);
  v17 = objc_msgSend(v3, "tertiaryLabelColor");
  objc_msgSend(v16, "setTintColor:", v17);

  objc_msgSend(v16, "addTarget:action:forControlEvents:", v1, "handleEmojiButtonTapped", 64);
  objc_msgSend(v2, "addSubview:", v16);
  v18 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_hiddenEmojiField];
  objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v18, "setHidden:", 1);
  objc_msgSend(v18, "setDelegate:", v1);
  objc_msgSend(v2, "addSubview:", v18);
  v72 = (id)objc_opt_self(NSLayoutConstraint);
  v19 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v20 = swift_allocObject(v19, 152, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100133270;
  v21 = objc_msgSend(v2, "topAnchor");
  v22 = objc_msgSend(v1, "contentView");
  v23 = objc_msgSend(v22, "mainContentGuide");

  v24 = objc_msgSend(v23, "topAnchor");
  v25 = objc_msgSend(v21, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v20 + 32) = v25;
  v26 = objc_msgSend(v2, "centerXAnchor");
  v27 = objc_msgSend(v1, "contentView");
  v28 = objc_msgSend(v27, "mainContentGuide");

  v29 = objc_msgSend(v28, "centerXAnchor");
  v30 = objc_msgSend(v26, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v20 + 40) = v30;
  v31 = objc_msgSend(v2, "heightAnchor");
  v32 = objc_msgSend(v31, "constraintEqualToConstant:", *(double *)&qword_1001A5A70 + *(double *)&qword_1001A5A68);

  *(_QWORD *)(v20 + 48) = v32;
  v33 = objc_msgSend(v2, "widthAnchor");
  v34 = objc_msgSend(v2, "heightAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v20 + 56) = v35;
  v36 = objc_msgSend(v2, "bottomAnchor");
  v37 = objc_msgSend(v1, "contentView");
  v38 = objc_msgSend(v37, "mainContentGuide");

  v39 = objc_msgSend(v38, "bottomAnchor");
  v40 = objc_msgSend(v36, "constraintLessThanOrEqualToAnchor:", v39);

  *(_QWORD *)(v20 + 64) = v40;
  v41 = objc_msgSend(v12, "centerXAnchor");
  v42 = objc_msgSend(v2, "centerXAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v20 + 72) = v43;
  v44 = objc_msgSend(v12, "centerYAnchor");
  v45 = objc_msgSend(v2, "centerYAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v20 + 80) = v46;
  v47 = objc_msgSend(v12, "leadingAnchor");
  v48 = objc_msgSend(v2, "leadingAnchor");
  v49 = objc_msgSend(v47, "constraintGreaterThanOrEqualToAnchor:", v48);

  *(_QWORD *)(v20 + 88) = v49;
  v50 = objc_msgSend(v12, "trailingAnchor");
  v51 = objc_msgSend(v2, "trailingAnchor");
  v52 = objc_msgSend(v50, "constraintLessThanOrEqualToAnchor:", v51);

  *(_QWORD *)(v20 + 96) = v52;
  v53 = objc_msgSend(v16, "centerXAnchor");
  v54 = objc_msgSend(v2, "centerXAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v20 + 104) = v55;
  v56 = objc_msgSend(v16, "centerYAnchor");
  v57 = objc_msgSend(v2, "centerYAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v20 + 112) = v58;
  v59 = objc_msgSend(v16, "leadingAnchor");
  v60 = objc_msgSend(v2, "leadingAnchor");
  v61 = objc_msgSend(v59, "constraintGreaterThanOrEqualToAnchor:", v60);

  *(_QWORD *)(v20 + 120) = v61;
  v62 = objc_msgSend(v16, "trailingAnchor");
  v63 = objc_msgSend(v2, "trailingAnchor");
  v64 = objc_msgSend(v62, "constraintLessThanOrEqualToAnchor:", v63);

  *(_QWORD *)(v20 + 128) = v64;
  v65 = objc_msgSend(v18, "centerXAnchor");
  v66 = objc_msgSend(v2, "centerXAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  *(_QWORD *)(v20 + 136) = v67;
  v68 = objc_msgSend(v18, "centerYAnchor");
  v69 = objc_msgSend(v2, "centerYAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:constant:", v69, *(double *)&qword_1001A5A78 * 0.5);

  *(_QWORD *)(v20 + 144) = v70;
  specialized Array._endMutation()(v71);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v72, "activateConstraints:", isa);

}

uint64_t type metadata accessor for AirTagCustomEmojiViewController()
{
  return objc_opt_self(_TtC18SharingViewService31AirTagCustomEmojiViewController);
}

void sub_1000665A0(char *a1, uint64_t a2, void *a3, SEL *a4)
{
  void *v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;

  v6 = *(void **)&a1[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_emojiContainer];
  v7 = a3;
  v8 = a1;
  v9 = objc_msgSend(v6, "layer");
  v10 = objc_msgSend((id)objc_opt_self(UIColor), *a4);
  v11 = objc_msgSend(v10, "CGColor");

  objc_msgSend(v9, "setBorderColor:", v11);
}

id sub_100066668(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  void *v22;
  id v23;
  uint64_t v24;
  objc_super v26;
  _QWORD aBlock[5];
  uint64_t v28;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_mainController], 0);
  swift_unknownObjectWeakAssign(v4, a1);
  v5 = objc_allocWithZone((Class)UIView);
  v6 = v1;
  v7 = objc_msgSend(v5, "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_emojiContainer] = v7;
  v8 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_emojiButton] = v8;
  v9 = type metadata accessor for EmojiTextField();
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_hiddenEmojiField] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v9)), "init");
  v10 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_selectedEmojiLabel;
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_selectedEmojiLabel] = v10;
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = sub_100117218(v12, v13, v14);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = swift_allocObject(&unk_100179F60, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16, a1);
  v19 = swift_allocObject(&unk_100179F88, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, *(_QWORD *)&v6[v11]);
  v20 = swift_allocObject(&unk_100179FB0, 32, 7);
  *(_QWORD *)(v20 + 16) = v18;
  *(_QWORD *)(v20 + 24) = v19;
  swift_retain(v18);
  swift_retain(v19);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  aBlock[4] = sub_1000669B0;
  v28 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B5D0;
  aBlock[3] = &unk_100179FC8;
  v22 = _Block_copy(aBlock);
  v23 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v21, 0, v22);

  _Block_release(v22);
  v24 = v28;
  swift_release(v18);
  swift_release(v19);
  swift_release(v24);
  *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_continueAction] = v23;

  v26.receiver = v6;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, "initWithContentView:", 0);
}

uint64_t sub_100066960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_100066984()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1000669B0(uint64_t a1)
{
  uint64_t v1;

  sub_100064F20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1000669B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000669C8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

BOOL sub_1000669D0()
{
  uint64_t v0;
  NSString v1;
  int IsSingleEmoji;
  void *v3;
  NSString v4;
  void *v5;
  NSString v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;

  v1 = String._bridgeToObjectiveC()();
  IsSingleEmoji = CEMStringIsSingleEmoji();

  if (IsSingleEmoji)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_selectedEmojiLabel);
    v4 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setText:", v4);

    v5 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_hiddenEmojiField);
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "setText:", v6);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_emojiButton), "setImage:forState:", 0, 0);
  }
  v7 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_continueAction);
  v8 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC18SharingViewService31AirTagCustomEmojiViewController_hiddenEmojiField), "text");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    v13 = String.count.getter(v10, v12);
    swift_bridgeObjectRelease(v12);
    v14 = v13 > 0;
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v7, "setEnabled:", v14);
  return IsSingleEmoji == 0;
}

void sub_100066B28(uint64_t a1)
{
  uint64_t v1;

  sub_10006556C(a1, v1);
}

void sub_100066B30(uint64_t a1)
{
  uint64_t v1;

  sub_100065814(a1, v1);
}

uint64_t sub_100066B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A5AD8);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A5AD8);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100066BE0()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  uint64_t v23;
  NSString v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *Strong;
  NSString v35;
  void *v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  void **v66;
  Class isa;
  id v68;
  id v69;
  id v70;
  void **aBlock;
  uint64_t v72;
  void (*v73)(uint64_t, void *);
  void *v74;
  void (*v75)(uint64_t);
  uint64_t v76;
  objc_super v77;

  v77.receiver = v0;
  v77.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v77, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryLarge);
    objc_msgSend(v2, "_setLocalOverrideTraitCollection:", v3);

    v4 = (void *)objc_opt_self(NSBundle);
    v5 = objc_msgSend(v4, "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = sub_100117218(v5, v6, v7);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v10 = v9;

    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v0, "setTitle:", v11);

    v12 = String._bridgeToObjectiveC()();
    v13 = sub_100116484(v12);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;

    v16 = objc_msgSend(v4, "mainBundle");
    v17 = String._bridgeToObjectiveC()();
    v18 = String._bridgeToObjectiveC()();
    v19 = sub_100117218(v16, v17, v18);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v21 = v20;
    swift_bridgeObjectRelease(v15);

    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    objc_msgSend(v0, "setSubtitle:", v22);

    objc_msgSend(v0, "setDismissalType:", 1);
    v23 = swift_allocObject(&unk_10017A0A0, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16, v0);
    swift_retain(v23);
    v24 = String._bridgeToObjectiveC()();
    v75 = sub_1000678A4;
    v76 = v23;
    aBlock = _NSConcreteStackBlock;
    v72 = 1107296256;
    v73 = sub_10001B5D0;
    v74 = &unk_10017A0B8;
    v25 = _Block_copy(&aBlock);
    v26 = (void *)objc_opt_self(PRXAction);
    v27 = objc_msgSend(v26, "actionWithTitle:style:handler:", v24, 0, v25);

    _Block_release(v25);
    v28 = v76;
    swift_release(v23);
    objc_msgSend(v0, "setDismissButtonAction:", v27, swift_release(v28).n128_f64[0]);

    v29 = String._bridgeToObjectiveC()();
    v30 = sub_100117314(v29);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v32 = v31;

    v33 = swift_allocObject(&unk_10017A0F0, 24, 7);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18SharingViewService28B389RestrictedViewController_mainController]);
    swift_unknownObjectWeakInit(v33 + 16, Strong);

    swift_retain(v33);
    v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    v75 = sub_1000678C4;
    v76 = v33;
    aBlock = _NSConcreteStackBlock;
    v72 = 1107296256;
    v73 = sub_10001B5D0;
    v74 = &unk_10017A108;
    v36 = _Block_copy(&aBlock);
    v70 = objc_msgSend(v26, "actionWithTitle:style:handler:", v35, 0, v36);

    _Block_release(v36);
    v37 = v76;
    swift_release(v33);

    v38 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 4, 50.0);
    v39 = String._bridgeToObjectiveC()();
    v69 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v39, v38);

    v40 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v69);
    v41 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
    objc_msgSend(v40, "setTintColor:", v41);

    objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v42 = objc_msgSend(v0, "contentView");
    objc_msgSend(v42, "addSubview:", v40);

    v68 = (id)objc_opt_self(NSLayoutConstraint);
    v43 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
    v44 = swift_allocObject(v43, 64, 7);
    *(_OWORD *)(v44 + 16) = xmmword_100132270;
    v45 = objc_msgSend(v40, "topAnchor");
    v46 = objc_msgSend(v0, "contentView");
    v47 = objc_msgSend(v46, "mainContentGuide");

    v48 = objc_msgSend(v47, "topAnchor");
    v49 = objc_msgSend(v45, "constraintGreaterThanOrEqualToAnchor:", v48);

    *(_QWORD *)(v44 + 32) = v49;
    v50 = objc_msgSend(v40, "centerXAnchor");
    v51 = objc_msgSend(v0, "contentView");
    v52 = objc_msgSend(v51, "mainContentGuide");

    v53 = objc_msgSend(v52, "centerXAnchor");
    v54 = objc_msgSend(v50, "constraintEqualToAnchor:", v53);

    *(_QWORD *)(v44 + 40) = v54;
    v55 = objc_msgSend(v40, "centerYAnchor");
    v56 = objc_msgSend(v0, "contentView");
    v57 = objc_msgSend(v56, "mainContentGuide");

    v58 = objc_msgSend(v57, "centerYAnchor");
    v59 = objc_msgSend(v55, "constraintEqualToAnchor:", v58);

    *(_QWORD *)(v44 + 48) = v59;
    v60 = objc_msgSend(v40, "bottomAnchor");
    v61 = objc_msgSend(v0, "contentView");
    v62 = objc_msgSend(v61, "mainContentGuide");

    v63 = objc_msgSend(v62, "bottomAnchor");
    v64 = objc_msgSend(v60, "constraintLessThanOrEqualToAnchor:", v63);

    *(_QWORD *)(v44 + 56) = v64;
    aBlock = (void **)v44;
    specialized Array._endMutation()(v65);
    v66 = aBlock;
    sub_10000E868();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v66);
    objc_msgSend(v68, "activateConstraints:", isa);

  }
  else
  {
    __break(1u);
  }
}

void sub_1000674E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t Strong;
  void *v15;
  uint64_t ObjectType;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31[3];

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 16;
  if (qword_1001A2FE0 != -1)
    swift_once(&qword_1001A2FE0, sub_100066B50);
  v8 = sub_10000E8E8(v3, (uint64_t)qword_1001A5AD8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  v9 = swift_retain_n(a2, 2);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v31[0] = v27;
    *(_DWORD *)v13 = 136315138;
    swift_beginAccess(a2 + 16, v30, 0, 0);
    v28 = a2 + 16;
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (!Strong)
    {
      swift_release(a2);
      __break(1u);
      return;
    }
    v15 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);

    v17 = _typeName(_:qualified:)(ObjectType, 0);
    v19 = v18;
    v29 = sub_10001EFA4(v17, v18, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v13 + 4, v13 + 12);
    swift_release_n(a2, 2, v20);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "dismissPressed in %s", v13, 0xCu);
    v21 = v27;
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v28;
  }
  else
  {

    swift_release_n(a2, 2, v22);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_beginAccess(v7, v31, 0, 0);
  v23 = swift_unknownObjectWeakLoadStrong(v7);
  if (v23)
  {
    v24 = (void *)v23;
    v25 = (void *)swift_unknownObjectWeakLoadStrong(v23 + OBJC_IVAR____TtC18SharingViewService28B389RestrictedViewController_mainController);

    if (v25)
    {
      objc_msgSend(v25, "dismiss:", 5);

    }
  }
}

void sub_100067790(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "dismiss:", 5);

  }
}

uint64_t type metadata accessor for B389RestrictedViewController()
{
  return objc_opt_self(_TtC18SharingViewService28B389RestrictedViewController);
}

uint64_t sub_100067880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1000678A4(uint64_t a1)
{
  uint64_t v1;

  sub_1000674E8(a1, v1);
}

uint64_t sub_1000678AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000678BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000678C4(uint64_t a1)
{
  uint64_t v1;

  sub_100067790(a1, v1);
}

id sub_1000678D8(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  objc_super v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v5 = swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC18SharingViewService30AirTagCustomNameViewController_mainController], 0);
  swift_unknownObjectWeakAssign(v5, a1);
  v6 = objc_allocWithZone((Class)PRXTextField);
  v7 = v2;
  v8 = objc_msgSend(v6, "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC18SharingViewService30AirTagCustomNameViewController_nameField] = v8;
  sub_1000897BC(0);
  v10 = v9;
  v11 = swift_allocObject(&unk_10017A148, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, a1);
  v12 = swift_allocObject(&unk_10017A170, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v8);
  v13 = swift_allocObject(&unk_10017A198, 32, 7);
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v12;
  swift_retain(v11);
  swift_retain(v12);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v10);
  aBlock[4] = sub_100068528;
  v26 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B5D0;
  aBlock[3] = &unk_10017A1B0;
  v15 = _Block_copy(aBlock);
  v16 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v14, 0, v15);

  _Block_release(v15);
  v17 = v26;
  swift_release(v11);
  swift_release(v12);
  swift_release(v17);
  *(_QWORD *)&v7[OBJC_IVAR____TtC18SharingViewService30AirTagCustomNameViewController_continueAction] = v16;

  v24.receiver = v7;
  v24.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v24, "initWithContentView:", 0);
  v19 = (void *)objc_opt_self(NSNotificationCenter);
  v20 = v18;
  v21 = objc_msgSend(v19, "defaultCenter");
  v22 = v20;
  objc_msgSend(v21, "addObserver:selector:name:object:", v22, "updateContinueButton", UITextFieldTextDidChangeNotification, 0);

  return v22;
}

void sub_100067B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  id v19;
  void *v20;
  char v21[24];
  char v22[24];
  char v23[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = a3 + 16;
    swift_beginAccess(v7, v22, 0, 0);
    v8 = (void *)swift_unknownObjectWeakLoadStrong(v7);
    v9 = v8;
    if (v8)
    {
      v10 = objc_msgSend(v8, "text");

      if (v10)
      {
        v9 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v12 = v11;

LABEL_7:
        v13 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleName];
        v14 = *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleName + 8];
        *(_QWORD *)v13 = v9;
        *((_QWORD *)v13 + 1) = v12;

        swift_bridgeObjectRelease(v14);
        goto LABEL_8;
      }
      v9 = 0;
    }
    v12 = 0;
    goto LABEL_7;
  }
LABEL_8:
  swift_beginAccess(v4, v21, 0, 0);
  v15 = swift_unknownObjectWeakLoadStrong(v4);
  if (v15)
  {
    v16 = (void *)v15;
    v17 = objc_allocWithZone((Class)type metadata accessor for AirTagCustomEmojiViewController());
    v18 = v16;
    v19 = sub_100066668((uint64_t)v18);

    v20 = *(void **)&v18[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
    if (v20)
    {
      sub_1000AF594((uint64_t)objc_msgSend(v20, "pushViewController:animated:", v19, 1));

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100067CD0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *Strong;
  NSString v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;
  objc_super v18;

  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v18, "viewDidLoad");
  sub_1000897BC(0x6Fu);
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  objc_msgSend(v0, "setTitle:", v3);

  sub_1000897BC(0x70u);
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v0, "setSubtitle:", v6);

  objc_msgSend(v0, "setDismissalType:", 1);
  v7 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService30AirTagCustomNameViewController_continueAction];
  objc_msgSend(v7, "setEnabled:", 0);

  sub_1000897BC(0x72u);
  v9 = v8;
  v10 = swift_allocObject(&unk_10017A148, 24, 7);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18SharingViewService30AirTagCustomNameViewController_mainController]);
  swift_unknownObjectWeakInit(v10 + 16, Strong);

  swift_retain(v10);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v16[4] = sub_100068548;
  v17 = v10;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10001B5D0;
  v16[3] = &unk_10017A1D8;
  v13 = _Block_copy(v16);
  v14 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v12, 1, v13);

  _Block_release(v13);
  v15 = v17;
  swift_release(v10);

  sub_100067F58();
}

void sub_100067F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1000AC894(Strong, v4);

  }
}

void sub_100067F58()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *v29;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService30AirTagCustomNameViewController_nameField];
  sub_1000897BC(0x71u);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v1, "setPlaceholder:", v4);

  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v0, "contentView");
  objc_msgSend(v5, "addSubview:", v1);

  v29 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100132270;
  v8 = objc_msgSend(v1, "topAnchor");
  v9 = objc_msgSend(v0, "contentView");
  v10 = objc_msgSend(v9, "mainContentGuide");

  v11 = objc_msgSend(v10, "topAnchor");
  v12 = objc_msgSend(v8, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v7 + 32) = v12;
  v13 = objc_msgSend(v1, "leadingAnchor");
  v14 = objc_msgSend(v0, "contentView");
  v15 = objc_msgSend(v14, "mainContentGuide");

  v16 = objc_msgSend(v15, "leadingAnchor");
  v17 = objc_msgSend(v13, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v7 + 40) = v17;
  v18 = objc_msgSend(v1, "trailingAnchor");
  v19 = objc_msgSend(v0, "contentView");
  v20 = objc_msgSend(v19, "mainContentGuide");

  v21 = objc_msgSend(v20, "trailingAnchor");
  v22 = objc_msgSend(v18, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v7 + 48) = v22;
  v23 = objc_msgSend(v1, "bottomAnchor");
  v24 = objc_msgSend(v0, "contentView");
  v25 = objc_msgSend(v24, "mainContentGuide");

  v26 = objc_msgSend(v25, "bottomAnchor");
  v27 = objc_msgSend(v23, "constraintLessThanOrEqualToAnchor:", v26);

  *(_QWORD *)(v7 + 56) = v27;
  specialized Array._endMutation()(v28);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v29, "activateConstraints:", isa);

}

uint64_t type metadata accessor for AirTagCustomNameViewController()
{
  return objc_opt_self(_TtC18SharingViewService30AirTagCustomNameViewController);
}

uint64_t sub_1000684D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_1000684FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100068528(uint64_t a1)
{
  uint64_t v1;

  sub_100067B60(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100068530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100068540(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100068548(uint64_t a1)
{
  uint64_t v1;

  sub_100067F08(a1, v1);
}

uint64_t sub_10006855C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A5B60);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A5B60);
  if (qword_1001A2EF0 != -1)
    swift_once(&qword_1001A2EF0, sub_100018CB8);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_1000685EC(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v7;
  NSString v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(v3);
  v7 = &v3[OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_module];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_prxContainerViewController] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_userInfo] = 0;
  if (a2)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, "initWithNibName:bundle:", v8, a3);

  return v9;
}

uint64_t sub_100068708(void *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v22;
  uint64_t v23;

  v3 = v2;
  if (qword_1001A2FE8 != -1)
    swift_once(&qword_1001A2FE8, sub_10006855C);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v6, (uint64_t)qword_1001A5B60);
  v7 = a1;
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138412290;
    v13 = objc_msgSend(v7, "userInfo");
    v14 = v13;
    if (v13)
      v22 = v13;
    else
      v22 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v11 + 4, v11 + 12);
    *v12 = v14;

    _os_log_impl((void *)&_mh_execute_header, v8, v10, "PasswordSharingFlowViewController configuring with info: %@", v11, 0xCu);
    v15 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v12, 1, v15);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

  }
  v16 = objc_msgSend(v7, "userInfo");
  if (v16)
  {
    v17 = v16;
    v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v18 = 0;
  }
  v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_userInfo);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_userInfo) = v18;
  v20 = swift_bridgeObjectRelease(v19);
  if (!a2)
    __break(1u);
  return a2(v20);
}

void sub_100068B24(char a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t started;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  objc_super v20;

  v2 = v1;
  v20.receiver = v2;
  v20.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v20, "viewWillAppear:", a1 & 1);
  v4 = objc_msgSend((id)objc_opt_self(PRXFlowConfiguration), "defaultConfiguration");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(objc_allocWithZone((Class)PRXCardContainerViewController), "initWithConfiguration:", v4);

    objc_msgSend(v6, "setFlowDelegate:", v2);
    v7 = OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_prxContainerViewController;
    v8 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_prxContainerViewController];
    *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_prxContainerViewController] = v6;
    v9 = v6;

    v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_userInfo];
    swift_bridgeObjectRetain(v10);
    v11 = v9;
    v12 = sub_1000973FC(v11, v10);

    started = type metadata accessor for PasswordSharingStartViewController();
    v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(started)), "init");
    sub_100069838((uint64_t)v14, v12);
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 24) = &off_10017A200;
    swift_unknownObjectWeakAssign(v12 + 16, v2);
    v15 = (uint64_t *)&v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_module];
    v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_module];
    *v15 = v12;
    v15[1] = (uint64_t)&off_10017B5F8;
    swift_retain(v12);
    swift_unknownObjectRelease(v16);
    sub_10000F7D0();
    v17 = *(void **)&v2[v7];
    if (v17)
    {
      v18 = objc_msgSend(v17, "mainNavigationController");
      if (v18)
      {
        v19 = v18;
        objc_msgSend(v18, "pushViewController:animated:", v14, 0);

      }
    }
    objc_msgSend(v2, "presentViewController:animated:completion:", v11, 1, 0);

    swift_release(v12);
  }
  else
  {
    __break(1u);
  }
}

void *sub_100068EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(_BYTE *, uint64_t, uint64_t);
  void (*v18)(_BYTE *, _QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_BYTE *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *result;
  void *v30;
  _BYTE v31[32];

  v1 = v0;
  v2 = sub_100006A6C(&qword_1001A6F70);
  __chkstk_darwin(v2);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1001A2FE8 != -1)
    swift_once(&qword_1001A2FE8, sub_10006855C);
  v6 = type metadata accessor for Logger(0, v3);
  v7 = sub_10000E8E8(v6, (uint64_t)qword_1001A5B60);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "Finish Password Sharing flow", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  v12 = OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_module;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_module);
  if (v13)
  {
    *(_QWORD *)(v13 + 24) = 0;
    swift_unknownObjectWeakAssign(v13 + 16, 0);
    v14 = *(_QWORD *)(v1 + v12);
    if (v14)
    {
      if (*(_BYTE *)(v14 + 48) == 1)
      {
        swift_unknownObjectRetain(*(_QWORD *)(v1 + v12));
      }
      else
      {
        v15 = *(_QWORD *)(v14 + 64);
        ObjectType = swift_getObjectType(*(_QWORD *)(v14 + 56));
        v17 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48);
        swift_unknownObjectRetain(v14);
        v18 = (void (*)(_BYTE *, _QWORD))v17(v31, ObjectType, v15);
        *(_DWORD *)(v19 + *(int *)(type metadata accessor for PasswordSharingModel(0) + 64)) = 21;
        v18(v31, 0);
      }
      sub_100096D04();
      v20 = *(_QWORD *)(v14 + 64);
      v21 = swift_getObjectType(*(_QWORD *)(v14 + 56));
      Date.init()(v21);
      v22 = type metadata accessor for Date(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 0, 1, v22);
      v23 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48))(v31, v21, v20);
      v25 = v24;
      v26 = type metadata accessor for PasswordSharingModel(0);
      sub_100012FE0((uint64_t)v5, v25 + *(int *)(v26 + 80));
      v27 = v23(v31, 0);
      sub_10000FBF8(v27, v28);
      swift_unknownObjectRelease(v14);
    }
  }
  result = (void *)sub_100064288();
  if (result)
  {
    v30 = result;
    objc_msgSend(result, "dismiss");
    return (void *)swift_unknownObjectRelease(v30);
  }
  return result;
}

uint64_t sub_100069184()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_module));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_prxContainerViewController));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_userInfo));
}

uint64_t type metadata accessor for PasswordSharingFlowViewController()
{
  return objc_opt_self(_TtC18SharingViewService33PasswordSharingFlowViewController);
}

unint64_t sub_100069228()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A5BC0;
  if (!qword_1001A5BC0)
  {
    v1 = objc_opt_self(SBUIRemoteAlertButtonAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A5BC0);
  }
  return result;
}

uint64_t sub_100069264()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100069288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A5BC8);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A5BC8);
  if (qword_1001A2EF0 != -1)
    swift_once(&qword_1001A2EF0, sub_100018CB8);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100069318()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;
  char v7;
  uint64_t done;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  void *v20;
  uint64_t v21;

  v1 = v0;
  v2 = (_QWORD *)type metadata accessor for DispatchPredicate(0);
  v3 = *(v2 - 1);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000697FC();
  *v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, _QWORD *))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once(&qword_1001A2FF0, sub_100069288);
    goto LABEL_5;
  }
  done = type metadata accessor for PasswordSharingDoneViewController();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(done)), "init");
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC18SharingViewService21PasswordSharingRouter_delegate);
  if (Strong)
  {
    v11 = Strong;
    v12 = v2;
    sub_100069854((uint64_t)v12, v11, &OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_presenter, &OBJC_IVAR____TtC18SharingViewService33PasswordSharingDoneViewController_type, (void (*)(Swift::String *))sub_100026194);

    swift_unknownObjectRelease(v11);
  }
  if (qword_1001A2FF0 != -1)
    goto LABEL_11;
LABEL_5:
  v13 = type metadata accessor for Logger(0, v10);
  v14 = sub_10000E8E8(v13, (uint64_t)qword_1001A5BC8);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.default.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "Show Done View", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC18SharingViewService21PasswordSharingRouter_prxContainerViewController), "mainNavigationController");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "pushViewController:animated:", v2, 1);

  }
}

void sub_100069530()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;
  char v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  void *v20;
  uint64_t v21;

  v1 = v0;
  v2 = (_QWORD *)type metadata accessor for DispatchPredicate(0);
  v3 = *(v2 - 1);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000697FC();
  *v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, _QWORD *))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once(&qword_1001A2FF0, sub_100069288);
    goto LABEL_5;
  }
  v8 = type metadata accessor for PasswordSharingErrorViewController();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC18SharingViewService21PasswordSharingRouter_delegate);
  if (Strong)
  {
    v11 = Strong;
    v12 = v2;
    sub_100069854((uint64_t)v12, v11, &OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_presenter, &OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_type, (void (*)(Swift::String *))sub_10007FDF4);

    swift_unknownObjectRelease(v11);
  }
  if (qword_1001A2FF0 != -1)
    goto LABEL_11;
LABEL_5:
  v13 = type metadata accessor for Logger(0, v10);
  v14 = sub_10000E8E8(v13, (uint64_t)qword_1001A5BC8);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.default.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "Show Error View", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC18SharingViewService21PasswordSharingRouter_prxContainerViewController), "mainNavigationController");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "pushViewController:animated:", v2, 1);

  }
}

id sub_100069774()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PasswordSharingRouter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PasswordSharingRouter()
{
  return objc_opt_self(_TtC18SharingViewService21PasswordSharingRouter);
}

unint64_t sub_1000697FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A6810;
  if (!qword_1001A6810)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A6810);
  }
  return result;
}

uint64_t sub_100069838(uint64_t a1, uint64_t a2)
{
  return sub_100069854(a1, a2, &OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_presenter, &OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_type, (void (*)(Swift::String *))sub_10005F51C);
}

uint64_t sub_100069854(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, void (*a5)(Swift::String *))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *object;
  uint64_t v24;
  void (*v25)(Swift::String *);
  char v26[24];
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v10 = type metadata accessor for PasswordSharingModel(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + *a3;
  *(_QWORD *)(v13 + 8) = &off_10017B660;
  swift_unknownObjectWeakAssign(v13, a2);
  v14 = *(_QWORD *)(a2 + 56) + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model;
  swift_beginAccess(v14, v26, 0, 0);
  sub_10000D7D8(v14, (uint64_t)v12);
  v15 = *(unsigned __int8 *)(a1 + *a4);
  v25 = a5;
  if (v15)
  {
    if (v15 == 1)
      sub_10000B900(&v27._countAndFlagsBits);
    else
      sub_10000BC38(&v27);
  }
  else if ((sub_10000AA30() & 1) != 0)
  {
    sub_10000CC08((uint64_t)&v27);
  }
  else
  {
    sub_10000BF00();
  }
  v16 = v38;
  v17 = v36;
  v18 = v34;
  v20 = v31;
  v19 = v32;
  v21 = v29;
  object = v27._object;
  v39 = v27;
  v40 = v28;
  v41 = v29;
  v42 = v30;
  v43 = v31;
  v44 = v32;
  v45 = v33;
  v46 = v34;
  v47 = v35;
  v48 = v36;
  v49 = v37;
  v50 = v38;
  sub_10000D81C((uint64_t)v12);
  v25(&v39);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v18);

  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(object);
  return swift_bridgeObjectRelease(v16);
}

void sub_100069A08()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSString v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  id v35;
  uint64_t v36;
  _QWORD v37[5];
  uint64_t v38;
  _QWORD v39[24];
  _QWORD aBlock[5];
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[24];
  _BYTE v44[48];
  uint64_t v45;
  objc_super v46;
  _QWORD v47[24];
  _QWORD v48[24];

  v1 = v0;
  v46.receiver = v0;
  v46.super_class = (Class)type metadata accessor for D2DSetupDoneSuccessViewController();
  objc_msgSendSuper2(&v46, "viewDidLoad");
  v2 = sub_10006A064();
  v3 = objc_msgSend(v0, "contentView");
  objc_msgSend(v3, "addSubview:", v2);

  v4 = objc_msgSend(v1, "contentView");
  v5 = objc_msgSend(v4, "mainContentGuide");

  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100132270;
  v9 = objc_msgSend(v2, "topAnchor");
  v10 = objc_msgSend(v5, "topAnchor");
  v11 = objc_msgSend(v9, "constraintGreaterThanOrEqualToAnchor:", v10);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v2, "bottomAnchor");
  v13 = objc_msgSend(v5, "bottomAnchor");
  v14 = objc_msgSend(v12, "constraintLessThanOrEqualToAnchor:", v13);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(v2, "centerXAnchor");
  v16 = objc_msgSend(v5, "centerXAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v8 + 48) = v17;
  v18 = objc_msgSend(v2, "centerYAnchor");
  v19 = objc_msgSend(v5, "centerYAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v8 + 56) = v20;
  v48[0] = v8;
  specialized Array._endMutation()(v21);
  v22 = v48[0];
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v22);
  objc_msgSend(v6, "activateConstraints:", isa);

  v24 = (uint64_t)v1 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel;
  sub_1000142E8((uint64_t)v1 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel, (uint64_t)v47);
  sub_1000142E8((uint64_t)v47, (uint64_t)v44);
  sub_1000142E8((uint64_t)v47, (uint64_t)v48);
  if (sub_1000145F8((uint64_t)v48) != 1)
  {
    v25 = v45;
    sub_1000142E8((uint64_t)v44, (uint64_t)v43);
    swift_bridgeObjectRetain(v25);
    sub_100014610(v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
    sub_100014610(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    if (v25)
    {
      v26 = swift_allocObject(&unk_10017A298, 24, 7);
      swift_unknownObjectUnownedInit(v26 + 16, v1);
      swift_retain(v26);
      v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v25);
      aBlock[4] = sub_10001986C;
      v41 = v26;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001B5D0;
      aBlock[3] = &unk_10017A2D8;
      v28 = _Block_copy(aBlock);
      v29 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v27, 0, v28);

      _Block_release(v28);
      v30 = v41;
      swift_release(v26);

    }
  }
  sub_1000142E8(v24, (uint64_t)v43);
  sub_1000142E8((uint64_t)v43, (uint64_t)aBlock);
  sub_1000142E8((uint64_t)v43, (uint64_t)v44);
  if (sub_1000145F8((uint64_t)v44) != 1)
  {
    v31 = v42;
    sub_1000142E8((uint64_t)aBlock, (uint64_t)v39);
    swift_bridgeObjectRetain(v31);
    sub_100014610(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
    sub_100014610(v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    if (v31)
    {
      v32 = swift_allocObject(&unk_10017A298, 24, 7);
      swift_unknownObjectUnownedInit(v32 + 16, v1);
      swift_retain(v32);
      v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      v37[4] = sub_10006AAC0;
      v38 = v32;
      v37[0] = _NSConcreteStackBlock;
      v37[1] = 1107296256;
      v37[2] = sub_10001B5D0;
      v37[3] = &unk_10017A2B0;
      v34 = _Block_copy(v37);
      v35 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v33, 1, v34);

      _Block_release(v34);
      v36 = v38;
      swift_release(v32);

    }
  }

}

void sub_100069FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *Strong;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v2 = swift_unknownObjectWeakLoadStrong(&Strong[OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_presenter]);
  if (v2)
  {
    v4 = v2;
    sub_10009F418(v2, v3);

    swift_unknownObjectRelease(v4);
  }
  else
  {

  }
}

id sub_10006A064()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD v10[24];
  _BYTE v11[32];
  void *v12;
  _QWORD v13[24];
  _BYTE v14[192];
  _QWORD v15[24];
  _BYTE v16[24];
  void *v17;
  _QWORD v18[24];
  _BYTE v19[192];

  v1 = v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel;
  sub_1000142E8(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel, (uint64_t)v18);
  sub_1000142E8((uint64_t)v18, (uint64_t)v16);
  sub_1000142E8((uint64_t)v18, (uint64_t)v19);
  if (sub_1000145F8((uint64_t)v19) == 1
    || (v2 = v17,
        sub_1000142E8((uint64_t)v16, (uint64_t)v15),
        v3 = v2,
        sub_100014610(v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C), sub_100014610(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C), !v2))
  {
    v8 = type metadata accessor for ExitBuddyIconView();
    v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
    objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v3);
    sub_1000142E8(v1, (uint64_t)v13);
    sub_1000142E8((uint64_t)v13, (uint64_t)v11);
    sub_1000142E8((uint64_t)v13, (uint64_t)v14);
    if (sub_1000145F8((uint64_t)v14) != 1)
    {
      v5 = v12;
      sub_1000142E8((uint64_t)v11, (uint64_t)v10);
      v6 = v5;
      sub_100014610(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
      sub_100014610(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
      if (v5)
      {
        objc_msgSend(v4, "setTintColor:", v6);

      }
    }
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = v4;
    objc_msgSend(v7, "setContentMode:", 1);

  }
  return v7;
}

id sub_10006A268()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for D2DSetupDoneSuccessViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for D2DSetupDoneSuccessViewController()
{
  return objc_opt_self(_TtC18SharingViewService33D2DSetupDoneSuccessViewController);
}

id sub_10006A2B8(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  void *v10;
  id v11;
  id v12;
  NSString v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  Class isa;
  id v66;
  objc_super v67;

  v67.receiver = v4;
  v67.super_class = (Class)swift_getObjectType(v4);
  v9 = objc_msgSendSuper2(&v67, "initWithFrame:", a1, a2, a3, a4);
  v10 = (void *)objc_opt_self(_UIImageSymbolConfiguration);
  v11 = v9;
  v12 = objc_msgSend(v10, "configurationWithPointSize:", 50.0);
  v13 = String._bridgeToObjectiveC()();
  v14 = (void *)objc_opt_self(UIImage);
  v15 = objc_msgSend(v14, "systemImageNamed:withConfiguration:", v13, v12);

  v16 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v15);
  v17 = v12;
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v14, "systemImageNamed:withConfiguration:", v18, v17);

  v20 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v19);
  v21 = v17;
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v14, "systemImageNamed:withConfiguration:", v22, v21);

  v24 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v23);
  v25 = (void *)objc_opt_self(UIColor);
  v26 = v16;
  v27 = v20;
  v28 = v24;
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v29 = objc_msgSend(v25, "systemBlueColor");
  objc_msgSend(v26, "setTintColor:", v29);

  objc_msgSend(v11, "addSubview:", v26);
  v30 = v27;
  objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v31 = objc_msgSend(v25, "systemBlueColor");
  objc_msgSend(v30, "setTintColor:", v31);

  objc_msgSend(v11, "addSubview:", v30);
  v32 = v28;
  objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v33 = objc_msgSend(v25, "systemBlueColor");
  objc_msgSend(v32, "setTintColor:", v33);

  objc_msgSend(v11, "addSubview:", v32);
  v66 = (id)objc_opt_self(NSLayoutConstraint);
  v34 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v35 = swift_allocObject(v34, 104, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100131CF0;
  v36 = objc_msgSend(v26, "topAnchor");
  v37 = objc_msgSend(v11, "topAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v35 + 32) = v38;
  v39 = objc_msgSend(v30, "topAnchor");
  v40 = objc_msgSend(v26, "bottomAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  *(_QWORD *)(v35 + 40) = v41;
  v42 = objc_msgSend(v30, "leftAnchor");
  v43 = objc_msgSend(v11, "leftAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v35 + 48) = v44;
  v45 = objc_msgSend(v30, "centerXAnchor");
  v46 = objc_msgSend(v26, "leftAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v35 + 56) = v47;
  v48 = objc_msgSend(v30, "bottomAnchor");
  v49 = objc_msgSend(v11, "bottomAnchor");
  v50 = objc_msgSend(v48, "constraintLessThanOrEqualToAnchor:", v49);

  *(_QWORD *)(v35 + 64) = v50;
  v51 = objc_msgSend(v32, "rightAnchor");
  v52 = objc_msgSend(v11, "rightAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:", v52);

  *(_QWORD *)(v35 + 72) = v53;
  v54 = objc_msgSend(v32, "centerXAnchor");
  v55 = objc_msgSend(v26, "rightAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v35 + 80) = v56;
  v57 = objc_msgSend(v32, "firstBaselineAnchor");
  v58 = objc_msgSend(v30, "firstBaselineAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v35 + 88) = v59;
  v60 = objc_msgSend(v32, "bottomAnchor");
  v61 = objc_msgSend(v11, "bottomAnchor");

  v62 = objc_msgSend(v60, "constraintLessThanOrEqualToAnchor:", v61);
  *(_QWORD *)(v35 + 96) = v62;
  specialized Array._endMutation()(v63);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v35);
  objc_msgSend(v66, "activateConstraints:", isa);

  return v11;
}

uint64_t type metadata accessor for ExitBuddyIconView()
{
  return objc_opt_self(_TtC18SharingViewService17ExitBuddyIconView);
}

uint64_t sub_10006AA9C()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10006AAC0(uint64_t a1)
{
  uint64_t v1;

  sub_100069FC4(a1, v1);
}

uint64_t sub_10006AAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006AAD8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10006AAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A5C68);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A5C68);
  if (qword_1001A2EE8 != -1)
    swift_once(&qword_1001A2EE8, sub_100018C94);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD468);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10006AB78()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  NSArray v66;
  uint64_t v67;
  uint64_t v68;
  os_log_type_t v69;
  uint8_t *v70;
  id v71;
  _QWORD v72[24];
  _BYTE v73[32];
  void *v74;
  _QWORD v75[24];
  _BYTE v76[192];
  _QWORD v77[24];
  _QWORD v78[24];
  objc_super v79;
  _QWORD v80[24];
  _BYTE v81[200];

  v79.receiver = v0;
  v79.super_class = (Class)type metadata accessor for D2DSetupBackupSyncViewController();
  objc_msgSendSuper2(&v79, "viewDidLoad");
  v1 = type metadata accessor for ProgressView();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "init");
  v3 = OBJC_IVAR____TtC18SharingViewService32D2DSetupBackupSyncViewController_progressView;
  v4 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService32D2DSetupBackupSyncViewController_progressView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService32D2DSetupBackupSyncViewController_progressView] = v2;

  sub_10006B53C();
  v5 = (uint64_t)&v0[OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel];
  sub_1000142E8((uint64_t)&v0[OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel], (uint64_t)v80);
  sub_1000142E8((uint64_t)v80, (uint64_t)v78);
  sub_1000142E8((uint64_t)v80, (uint64_t)v81);
  if (sub_1000145F8((uint64_t)v81) != 1)
  {
    v7 = (void *)v78[3];
    sub_1000142E8((uint64_t)v78, (uint64_t)v77);
    v8 = v7;
    sub_100014610(v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
    sub_100014610(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    if (v7)
    {
      v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v8);
      v10 = OBJC_IVAR____TtC18SharingViewService32D2DSetupBackupSyncViewController_backupSymbolView;
      v11 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService32D2DSetupBackupSyncViewController_backupSymbolView];
      *(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService32D2DSetupBackupSyncViewController_backupSymbolView] = v9;

      sub_1000142E8(v5, (uint64_t)v75);
      sub_1000142E8((uint64_t)v75, (uint64_t)v73);
      sub_1000142E8((uint64_t)v75, (uint64_t)v76);
      if (sub_1000145F8((uint64_t)v76) != 1)
      {
        v12 = v74;
        sub_1000142E8((uint64_t)v73, (uint64_t)v72);
        v13 = v12;
        sub_100014610(v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
        sub_100014610(v72, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
        if (v12)
        {
          v14 = *(void **)&v0[v10];
          if (v14)
          {
            v13 = v13;
            v15 = v14;
            objc_msgSend(v15, "setTintColor:", v13);

          }
        }
      }

    }
  }
  v16 = *(void **)&v0[v3];
  if (v16
    && (v17 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService32D2DSetupBackupSyncViewController_backupSymbolView]) != 0)
  {
    v18 = v16;
    v19 = v17;
    objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v18, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v20 = objc_msgSend(v0, "contentView");
    objc_msgSend(v20, "addSubview:", v19);

    v21 = objc_msgSend(v0, "bottomTray");
    objc_msgSend(v21, "addSubview:", v18);

    v22 = objc_msgSend(v0, "contentView");
    v23 = objc_msgSend(v22, "mainContentGuide");

    v71 = (id)objc_opt_self(NSLayoutConstraint);
    v24 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
    v25 = swift_allocObject(v24, 112, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100133650;
    v26 = objc_msgSend(v19, "topAnchor");
    v27 = objc_msgSend(v23, "topAnchor");
    v28 = objc_msgSend(v26, "constraintGreaterThanOrEqualToAnchor:", v27);

    *(_QWORD *)(v25 + 32) = v28;
    v29 = objc_msgSend(v19, "bottomAnchor");
    v30 = objc_msgSend(v23, "bottomAnchor");
    v31 = objc_msgSend(v29, "constraintLessThanOrEqualToAnchor:", v30);

    *(_QWORD *)(v25 + 40) = v31;
    v32 = objc_msgSend(v19, "leadingAnchor");
    v33 = objc_msgSend(v23, "leadingAnchor");
    v34 = objc_msgSend(v32, "constraintGreaterThanOrEqualToAnchor:", v33);

    *(_QWORD *)(v25 + 48) = v34;
    v35 = objc_msgSend(v19, "trailingAnchor");
    v36 = objc_msgSend(v23, "trailingAnchor");
    v37 = objc_msgSend(v35, "constraintLessThanOrEqualToAnchor:", v36);

    *(_QWORD *)(v25 + 56) = v37;
    v38 = objc_msgSend(v19, "centerXAnchor");
    v39 = objc_msgSend(v23, "centerXAnchor");
    v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

    *(_QWORD *)(v25 + 64) = v40;
    v41 = objc_msgSend(v19, "centerYAnchor");
    v42 = objc_msgSend(v23, "centerYAnchor");
    v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

    *(_QWORD *)(v25 + 72) = v43;
    v44 = objc_msgSend(v18, "topAnchor");
    v45 = objc_msgSend(v0, "bottomTray");
    v46 = objc_msgSend(v45, "layoutMarginsGuide");

    v47 = objc_msgSend(v46, "topAnchor");
    v48 = objc_msgSend(v44, "constraintEqualToAnchor:", v47);

    *(_QWORD *)(v25 + 80) = v48;
    v49 = objc_msgSend(v18, "leadingAnchor");
    v50 = objc_msgSend(v0, "bottomTray");
    v51 = objc_msgSend(v50, "layoutMarginsGuide");

    v52 = objc_msgSend(v51, "leadingAnchor");
    v53 = objc_msgSend(v49, "constraintEqualToAnchor:", v52);

    *(_QWORD *)(v25 + 88) = v53;
    v54 = objc_msgSend(v18, "trailingAnchor");
    v55 = objc_msgSend(v0, "bottomTray");
    v56 = objc_msgSend(v55, "layoutMarginsGuide");

    v57 = objc_msgSend(v56, "trailingAnchor");
    v58 = objc_msgSend(v54, "constraintEqualToAnchor:", v57);

    *(_QWORD *)(v25 + 96) = v58;
    v59 = objc_msgSend(v18, "bottomAnchor");
    v60 = objc_msgSend(v0, "bottomTray");
    v61 = objc_msgSend(v60, "layoutMarginsGuide");

    v62 = objc_msgSend(v61, "bottomAnchor");
    v63 = objc_msgSend(v59, "constraintLessThanOrEqualToAnchor:", v62);

    *(_QWORD *)(v25 + 104) = v63;
    v78[0] = v25;
    specialized Array._endMutation()(v64);
    v65 = v78[0];
    sub_10000E868();
    v66.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v65);
    objc_msgSend(v71, "activateConstraints:", v66.super.isa);

  }
  else
  {
    if (qword_1001A2FF8 != -1)
      swift_once(&qword_1001A2FF8, sub_10006AAE8);
    v67 = type metadata accessor for Logger(0, v6);
    v68 = sub_10000E8E8(v67, (uint64_t)qword_1001A5C68);
    v66.super.isa = (Class)Logger.logObject.getter(v68);
    v69 = static os_log_type_t.error.getter(v66.super.isa);
    if (os_log_type_enabled((os_log_t)v66.super.isa, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v70 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v66.super.isa, v69, "### Unable to create views for Backup Sync card", v70, 2u);
      swift_slowDealloc(v70, -1, -1);
    }
  }

}

void sub_10006B45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSString v12;
  _OWORD v13[12];
  _QWORD v14[24];

  v5 = *(_OWORD *)(a3 + 144);
  v13[8] = *(_OWORD *)(a3 + 128);
  v13[9] = v5;
  v6 = *(_OWORD *)(a3 + 176);
  v13[10] = *(_OWORD *)(a3 + 160);
  v13[11] = v6;
  v7 = *(_OWORD *)(a3 + 80);
  v13[4] = *(_OWORD *)(a3 + 64);
  v13[5] = v7;
  v8 = *(_OWORD *)(a3 + 112);
  v13[6] = *(_OWORD *)(a3 + 96);
  v13[7] = v8;
  v9 = *(_OWORD *)(a3 + 16);
  v13[0] = *(_OWORD *)a3;
  v13[1] = v9;
  v10 = *(_OWORD *)(a3 + 48);
  v13[2] = *(_OWORD *)(a3 + 32);
  v13[3] = v10;
  nullsub_4(v13);
  v11 = (uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel;
  sub_1000142E8((uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel, (uint64_t)v14);
  sub_1000142E8((uint64_t)v13, v11);
  sub_100014330(a3);
  sub_100014610(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setTitle:", v12);

  objc_msgSend(v3, "setAttributedSubtitle:", *(_QWORD *)(a3 + 40));
  sub_10006B53C();
}

void sub_10006B53C()
{
  uint64_t v0;
  uint64_t v1;
  float v2;
  float v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  NSString v16;
  _QWORD v17[24];
  _BYTE v18[88];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[24];
  _BYTE v22[80];
  float v23;
  unsigned __int8 v24;
  _BYTE v25[192];
  _BYTE v26[192];

  v1 = v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel;
  sub_1000142E8(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel, (uint64_t)v25);
  sub_1000142E8((uint64_t)v25, (uint64_t)v22);
  sub_1000142E8((uint64_t)v25, (uint64_t)v26);
  if (sub_1000145F8((uint64_t)v26) == 1)
  {
    v2 = 0.0;
  }
  else
  {
    sub_1000142E8((uint64_t)v25, (uint64_t)v18);
    v3 = v23;
    v4 = v24;
    sub_1000142E8((uint64_t)v22, (uint64_t)v21);
    sub_100014330((uint64_t)v18);
    sub_100014610(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
    v2 = 0.0;
    if (!v4)
      v2 = v3;
  }
  v5 = OBJC_IVAR____TtC18SharingViewService32D2DSetupBackupSyncViewController_progressView;
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService32D2DSetupBackupSyncViewController_progressView);
  if (v6)
  {
    *(float *)(v6 + OBJC_IVAR____TtC18SharingViewService12ProgressView_progress) = v2;
    objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC18SharingViewService12ProgressView_progressView), "setProgress:animated:", v2 != 0.0);
    v7 = *(char **)(v0 + v5);
    if (v7)
    {
      sub_1000142E8(v1, (uint64_t)v21);
      sub_1000142E8((uint64_t)v21, (uint64_t)v18);
      sub_1000142E8((uint64_t)v21, (uint64_t)v22);
      if (sub_1000145F8((uint64_t)v22) == 1)
      {
        v8 = v7;
        v9 = 0;
        v10 = 0;
      }
      else
      {
        v9 = v19;
        v10 = v20;
        sub_1000142E8((uint64_t)v18, (uint64_t)v17);
        v11 = v7;
        sub_100014610(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001467C);
        swift_bridgeObjectRetain(v10);
        sub_100014610(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10001445C);
      }
      v12 = &v7[OBJC_IVAR____TtC18SharingViewService12ProgressView_statusLabelText];
      v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC18SharingViewService12ProgressView_statusLabelText + 8];
      *(_QWORD *)v12 = v9;
      *((_QWORD *)v12 + 1) = v10;
      swift_bridgeObjectRelease(v13);
      v14 = *((_QWORD *)v12 + 1);
      if (v14)
      {
        v15 = *(void **)&v7[OBJC_IVAR____TtC18SharingViewService12ProgressView_statusLabel];
        swift_bridgeObjectRetain(v14);
        v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v14);
        objc_msgSend(v15, "setText:", v16);

        objc_msgSend(v15, "setHidden:", 0);
      }
      else
      {
        objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC18SharingViewService12ProgressView_statusLabel], "setHidden:", 1);
      }

    }
  }
}

void sub_10006B7C4()
{
  uint64_t v0;

}

id sub_10006B7F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for D2DSetupBackupSyncViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for D2DSetupBackupSyncViewController()
{
  return objc_opt_self(_TtC18SharingViewService32D2DSetupBackupSyncViewController);
}

uint64_t sub_10006B878(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x64696C61766E49;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x736150736465654ELL;
    else
      v4 = 0xD000000000000013;
    if (v3 == 1)
      v5 = 0xED000064726F7773;
    else
      v5 = 0x8000000100135DB0;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x736150736465654ELL;
      else
        v2 = 0xD000000000000013;
      if (v6 == 1)
        v7 = 0xED000064726F7773;
      else
        v7 = 0x8000000100135DB0;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = 0x64696C61766E49;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v4 != 0x64696C61766E49)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_10006B9A8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10006BA14(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10006BA74 + 4 * byte_100133694[a2]))(0x444955557462);
}

uint64_t sub_10006BA74(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x444955557462 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x444955557462, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

uint64_t sub_10006BB1C(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x64696C61766E69;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x6C616D726F6ELL;
    else
      v4 = 0x6572756C696166;
    if (v3 == 1)
      v5 = 0xE600000000000000;
    else
      v5 = 0xE700000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x6C616D726F6ELL;
      else
        v2 = 0x6572756C696166;
      if (v6 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE700000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = 0x64696C61766E69;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v4 != 0x64696C61766E69)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_10006BC2C(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 1701736302;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x64657472617473;
    else
      v4 = 0x64656873696E6966;
    if (v3 == 1)
      v5 = 0xE700000000000000;
    else
      v5 = 0xE800000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x64657472617473;
      else
        v2 = 0x64656873696E6966;
      if (v6 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE800000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE400000000000000;
    v4 = 1701736302;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v4 != 1701736302)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_10006BD34(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10006BD90(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10006BE00 + 4 * byte_10013369D[a2]))(0x6572676F72506E69);
}

uint64_t sub_10006BE00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v3 = v1 + 3854;
  if (a1 == 0x6572676F72506E69 && v2 == v3)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x6572676F72506E69, v3, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

uint64_t sub_10006BEBC(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x7472617473;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x726F727265;
    else
      v4 = 1701736292;
    if (v3 == 1)
      v5 = 0xE500000000000000;
    else
      v5 = 0xE400000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x726F727265;
      else
        v2 = 1701736292;
      if (v6 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE400000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE500000000000000;
    v4 = 0x7472617473;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v4 != 0x7472617473)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_10006BFB4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10006BFF4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10006C0DC + 4 * byte_1001336AA[a2]))(0x6166654469666957);
}

uint64_t sub_10006C0DC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6166654469666957 && v1 == 0xEB00000000746C75)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6166654469666957, 0xEB00000000746C75, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEB00000000746C75);
  return v2 & 1;
}

uint64_t sub_10006C224(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A5CB8);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A5CB8);
  if (qword_1001A2EF0 != -1)
    swift_once(&qword_1001A2EF0, sub_100018CB8);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_10006C2B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10006B878(*a1, *a2);
}

Swift::Int sub_10006C2C0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xED000064726F7773;
  v3 = 0x736150736465654ELL;
  if (v1 != 1)
  {
    v3 = 0xD000000000000013;
    v2 = 0x8000000100135DB0;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64696C61766E49;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10006C370(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xED000064726F7773;
  v3 = 0x736150736465654ELL;
  if (*v1 != 1)
  {
    v3 = 0xD000000000000013;
    v2 = 0x8000000100135DB0;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x64696C61766E49;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10006C3FC(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xED000064726F7773;
  v4 = 0x736150736465654ELL;
  if (v2 != 1)
  {
    v4 = 0xD000000000000013;
    v3 = 0x8000000100135DB0;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x64696C61766E49;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE700000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_10006C4A8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10006E50C(*a1);
  *a2 = result;
  return result;
}

void sub_10006C4D4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xED000064726F7773;
  v5 = 0x736150736465654ELL;
  if (v2 != 1)
  {
    v5 = 0xD000000000000013;
    v4 = 0x8000000100135DB0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x64696C61766E49;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_10006C544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  unint64_t v22;
  __n128 v23;
  void (*v24)(uint64_t, uint64_t, __n128);
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = 0x64696C61766E49;
  v5 = OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState;
  if (!*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState))
  {
    v7 = 0xE700000000000000;
    v6 = 0x64696C61766E49;
    v8 = a1;
    if (!(_BYTE)a1)
      goto LABEL_15;
    goto LABEL_6;
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState) != 1)
  {
    v7 = 0x8000000100135DB0;
    v6 = 0xD000000000000013;
    v8 = a1;
    if (!(_BYTE)a1)
      goto LABEL_15;
LABEL_6:
    if (v8 == 1)
      v9 = 0x736150736465654ELL;
    else
      v9 = 0xD000000000000013;
    if (v8 == 1)
      v10 = 0xED000064726F7773;
    else
      v10 = 0x8000000100135DB0;
    if (v6 != v9)
      goto LABEL_18;
    goto LABEL_16;
  }
  v6 = 0x736150736465654ELL;
  v7 = 0xED000064726F7773;
  v8 = a1;
  if ((_BYTE)a1)
    goto LABEL_6;
LABEL_15:
  v10 = 0xE700000000000000;
  v9 = 0x64696C61766E49;
  if (v6 != 0x64696C61766E49)
    goto LABEL_18;
LABEL_16:
  if (v7 == v10)
  {
    swift_bridgeObjectRelease_n(v7, 2);
    return;
  }
LABEL_18:
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v9, v10, 0);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) == 0)
  {
    if (qword_1001A3000 != -1)
      swift_once(&qword_1001A3000, sub_10006C224);
    v13 = type metadata accessor for Logger(0, v12);
    sub_10000E8E8(v13, (uint64_t)qword_1001A5CB8);
    v14 = swift_retain_n(v2, 2);
    v15 = Logger.logObject.getter(v14);
    v17 = static os_log_type_t.default.getter(v15, v16);
    if (os_log_type_enabled(v15, v17))
    {
      v18 = swift_slowAlloc(22, -1);
      v28 = swift_slowAlloc(64, -1);
      v30 = v28;
      *(_DWORD *)v18 = 136315394;
      if ((_BYTE)a1)
      {
        if (a1 == 1)
          v19 = 0x736150736465654ELL;
        else
          v19 = 0xD000000000000013;
        if (a1 == 1)
          v20 = 0xED000064726F7773;
        else
          v20 = 0x8000000100135DB0;
      }
      else
      {
        v20 = 0xE700000000000000;
        v19 = 0x64696C61766E49;
      }
      v29 = sub_10001EFA4(v19, v20, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease(v20);
      *(_WORD *)(v18 + 12) = 2080;
      if (*(_BYTE *)(v2 + v5))
      {
        if (*(_BYTE *)(v2 + v5) == 1)
        {
          v4 = 0x736150736465654ELL;
          v22 = 0xED000064726F7773;
        }
        else
        {
          v22 = 0x8000000100135DB0;
          v4 = 0xD000000000000013;
        }
      }
      else
      {
        v22 = 0xE700000000000000;
      }
      v29 = sub_10001EFA4(v4, v22, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v18 + 14, v18 + 22);
      swift_release_n(v2, 2, v23);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v15, v17, "Requester state changed %s -> %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

      swift_release_n(v2, 2, v21);
    }
    v24 = *(void (**)(uint64_t, uint64_t, __n128))(v2
                                                          + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler);
    if (v24)
    {
      v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler + 8);
      v26 = *(unsigned __int8 *)(v2 + v5);
      v27 = swift_retain(v25);
      v24(a1, v26, v27);
      sub_100012F60((uint64_t)v24, v25);
    }
  }
}

unint64_t sub_10006C940@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  unint64_t result;

  v2 = objc_msgSend(objc_allocWithZone((Class)SFDeviceDiscovery), "init");
  result = sub_10006E81C();
  a1[3] = result;
  a1[4] = &off_10017BDF8;
  *a1 = v2;
  return result;
}

void sub_10006C990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(__int128 *__return_ptr, __n128);
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  NSObject *oslog;
  _BYTE v39[24];
  _BYTE v40[40];
  _BYTE v41[24];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  if (qword_1001A3000 != -1)
    swift_once(&qword_1001A3000, sub_10006C224);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A5CB8);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "PasswordRequesterStateObserver activate", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = swift_allocObject(&unk_10017A3F8, 56, 7);
  v11 = v10;
  v12 = *(void (**)(__int128 *__return_ptr, __n128))(v2
                                                              + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscoveryGenerator);
  if (v12)
  {
    v13 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscoveryGenerator
                    + 8);
    v14 = swift_retain(v13);
    v12(&v42, v14);
    sub_100012F60((uint64_t)v12, v13);
    sub_10006E59C(&v42, v11 + 16);
    v15 = *(_QWORD *)(v11 + 40);
    v16 = *(_QWORD *)(v11 + 48);
    sub_10006E6AC(v11 + 16, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(31, v15, v16);
    v17 = *(_QWORD *)(v11 + 40);
    v18 = *(_QWORD *)(v11 + 48);
    sub_10006E6AC(v11 + 16, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40))(16, v17, v18);
    v19 = *(_QWORD *)(v11 + 40);
    v20 = *(_QWORD *)(v11 + 48);
    sub_10006E6AC(v11 + 16, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 64))(40, v19, v20);
    v21 = swift_allocObject(&unk_10017A420, 24, 7);
    swift_weakInit(v21 + 16, v3);
    v22 = *(_QWORD *)(v11 + 40);
    v23 = *(_QWORD *)(v11 + 48);
    sub_10006E6AC(v11 + 16, v22);
    (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v23 + 88))(sub_10006E6F8, v21, v22, v23);
    v24 = swift_allocObject(&unk_10017A420, 24, 7);
    swift_weakInit(v24 + 16, v3);
    v25 = *(_QWORD *)(v11 + 40);
    v26 = *(_QWORD *)(v11 + 48);
    sub_10006E6AC(v11 + 16, v25);
    (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v26 + 112))(sub_10006E718, v24, v25, v26);
    v27 = swift_allocObject(&unk_10017A420, 24, 7);
    swift_weakInit(v27 + 16, v3);
    v28 = *(_QWORD *)(v11 + 40);
    v29 = *(_QWORD *)(v11 + 48);
    sub_10006E6AC(v11 + 16, v28);
    (*(void (**)(double (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t))(v29 + 136))(sub_10006E738, v27, v28, v29);
    sub_10006E740(v11 + 16, (uint64_t)&v42);
    v30 = v43;
    v31 = v44;
    sub_100023D8C(&v42, v43);
    v32 = *(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t, __n128))(v31 + 152);
    v33 = swift_retain(v11);
    v32(sub_10006E784, v11, v30, v31, v33);
    swift_release(v11);
    sub_100024118(&v42);
    swift_beginAccess(v11 + 16, v41, 0, 0);
    sub_10006E740(v11 + 16, (uint64_t)&v42);
    sub_10006E78C((uint64_t)&v42, (uint64_t)v40);
    v34 = v3 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscovery;
    swift_beginAccess(v34, v39, 33, 0);
    sub_10006E7D4((uint64_t)v40, v34);
    swift_endAccess(v39);
    swift_release(v11);
  }
  else
  {
    v35 = swift_deallocUninitializedObject(v10, 56, 7);
    oslog = Logger.logObject.getter(v35);
    v36 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v36, "Failed to generate device discovery object", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

  }
}

uint64_t sub_10006CDA4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE v8[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    a3(a1);
    return swift_release(v7);
  }
  return result;
}

double sub_10006CE10(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    sub_10006D54C(a1);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

void sub_10006CE6C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSString v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  unint64_t v27;
  Class isa;
  NSObject *oslog;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE v33[176];

  if (a1)
  {
    if (qword_1001A3000 != -1)
      swift_once(&qword_1001A3000, sub_10006C224);
    v3 = type metadata accessor for Logger(0, a2);
    sub_10000E8E8(v3, (uint64_t)qword_1001A5CB8);
    swift_errorRetain(a1);
    v4 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v30 = a1;
      v31 = v7;
      *(_DWORD *)v6 = 136315138;
      swift_errorRetain(a1);
      v8 = sub_100006A6C(&qword_1001A3900);
      v9 = String.init<A>(reflecting:)(&v30, v8);
      v11 = v10;
      v30 = sub_10001EFA4(v9, v10, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v6 + 4, v6 + 12);
      swift_bridgeObjectRelease(v11);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Could not start device discovery: %s", v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
  else
  {
    v13 = a2 + 2;
    if (qword_1001A3000 != -1)
      swift_once(&qword_1001A3000, sub_10006C224);
    v14 = type metadata accessor for Logger(0, a2);
    v15 = sub_10000E8E8(v14, (uint64_t)qword_1001A5CB8);
    v16 = Logger.logObject.getter(v15);
    v18 = static os_log_type_t.default.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v18, "Device discovery started", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    v20 = String._bridgeToObjectiveC()();
    v21 = sub_100006A6C(&qword_1001A5E38);
    inited = swift_initStackObject(v21, v33);
    *(_OWORD *)(inited + 16) = xmmword_100131C30;
    v31 = 0x657461526E616373;
    v32 = 0xE800000000000000;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v31, &type metadata for String, &protocol witness table for String);
    swift_beginAccess(v13, &v31, 32, 0);
    v24 = a2[5];
    v23 = a2[6];
    sub_100023D8C(v13, v24);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v24, v23);
    swift_endAccess(&v31);
    v26 = sub_10006E5B4(v25);
    *(_QWORD *)(inited + 96) = sub_100006A6C(&qword_1001A5E40);
    *(_QWORD *)(inited + 72) = v26;
    v31 = 0x6574617473;
    v32 = 0xE500000000000000;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 104), &v31, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 168) = &type metadata for String;
    *(_QWORD *)(inited + 144) = 0x7472617453;
    *(_QWORD *)(inited + 152) = 0xE500000000000000;
    v27 = sub_10000434C(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v27);
    SFPowerLogEvent(v20, isa);

  }
}

uint64_t sub_10006D274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  unint64_t v18;
  Class isa;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[176];
  _BYTE v27[24];
  __int128 v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  if (qword_1001A3000 != -1)
    swift_once(&qword_1001A3000, sub_10006C224);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A5CB8);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "PasswordRequesterStateObserver invalidate", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = v3 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscovery;
  swift_beginAccess(v3 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscovery, v27, 0, 0);
  sub_100006BD8(v10, (uint64_t)&v28, &qword_1001A5E30);
  if (v29)
  {
    sub_10006E59C(&v28, (uint64_t)v30);
    v11 = String._bridgeToObjectiveC()();
    v12 = sub_100006A6C(&qword_1001A5E38);
    inited = swift_initStackObject(v12, v26);
    *(_OWORD *)(inited + 16) = xmmword_100131C30;
    *(_QWORD *)&v28 = 0x657461526E616373;
    *((_QWORD *)&v28 + 1) = 0xE800000000000000;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v28, &type metadata for String, &protocol witness table for String);
    v14 = v31;
    v15 = v32;
    sub_100023D8C(v30, v31);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 56))(v14, v15);
    v17 = sub_10006E5B4(v16);
    *(_QWORD *)(inited + 96) = sub_100006A6C(&qword_1001A5E40);
    *(_QWORD *)(inited + 72) = v17;
    *(_QWORD *)&v28 = 0x6574617473;
    *((_QWORD *)&v28 + 1) = 0xE500000000000000;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 104), &v28, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 168) = &type metadata for String;
    *(_QWORD *)(inited + 144) = 0x7472617453;
    *(_QWORD *)(inited + 152) = 0xE500000000000000;
    v18 = sub_10000434C(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v18);
    SFPowerLogEvent(v11, isa);

    v20 = v31;
    v21 = v32;
    sub_100023D8C(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v21 + 160))(v20, v21);
    sub_100024118(v30);
  }
  else
  {
    sub_10000D858((uint64_t)&v28, &qword_1001A5E30);
  }
  v22 = (_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler);
  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler);
  v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler + 8);
  *v22 = 0;
  v22[1] = 0;
  return sub_100012F60(v23, v24);
}

void sub_10006D54C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  NSObject *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  _QWORD *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;

  v58 = sub_100006A6C(&qword_1001A5550);
  __chkstk_darwin(v58);
  v59 = (uint64_t)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006A6C(&qword_1001A42A0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v55 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v55 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v55 - v17;
  v19 = objc_msgSend(a1, "identifier");
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v18, 1, 1, v3);
    goto LABEL_6;
  }
  v20 = v19;
  v56 = v10;
  v57 = a1;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v19);

  v21 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v21(v18, v6, v3);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v22(v18, 0, 1, v3);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v23(v18, 1, v3) == 1)
  {
LABEL_6:
    v27 = &qword_1001A42A0;
    v28 = (uint64_t)v18;
LABEL_7:
    sub_10000D858(v28, v27);
    return;
  }
  v55 = (void (*)(char *, uint64_t, uint64_t))v21;
  sub_10000D858((uint64_t)v18, &qword_1001A42A0);
  v24 = objc_msgSend(v57, "identifier");
  if (v24)
  {
    v25 = v24;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v24);

    v26 = 0;
  }
  else
  {
    v26 = 1;
  }
  v29 = v60;
  v22(v16, v26, 1, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v29 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterDeviceIdentifier, v3);
  v22(v13, 0, 1, v3);
  v30 = v59;
  v31 = v59 + *(int *)(v58 + 48);
  sub_100006BD8((uint64_t)v16, v59, &qword_1001A42A0);
  sub_100006BD8((uint64_t)v13, v31, &qword_1001A42A0);
  if (v23((char *)v30, 1, v3) == 1)
  {
    sub_10000D858((uint64_t)v13, &qword_1001A42A0);
    sub_10000D858((uint64_t)v16, &qword_1001A42A0);
    if (v23((char *)v31, 1, v3) == 1)
    {
      sub_10000D858(v30, &qword_1001A42A0);
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  v33 = (uint64_t)v56;
  sub_100006BD8(v30, (uint64_t)v56, &qword_1001A42A0);
  if (v23((char *)v31, 1, v3) == 1)
  {
    sub_10000D858((uint64_t)v13, &qword_1001A42A0);
    sub_10000D858((uint64_t)v16, &qword_1001A42A0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v33, v3);
LABEL_15:
    v27 = &qword_1001A5550;
    v28 = v30;
    goto LABEL_7;
  }
  v55(v6, v31, v3);
  v34 = sub_10006E554();
  v35 = dispatch thunk of static Equatable.== infix(_:_:)(v33, v6, v3, v34);
  v36 = *(void (**)(char *, uint64_t))(v4 + 8);
  v36(v6, v3);
  sub_10000D858((uint64_t)v13, &qword_1001A42A0);
  sub_10000D858((uint64_t)v16, &qword_1001A42A0);
  v36((char *)v33, v3);
  sub_10000D858(v30, &qword_1001A42A0);
  v29 = v60;
  if ((v35 & 1) == 0)
    return;
LABEL_17:
  if (qword_1001A3000 != -1)
    swift_once(&qword_1001A3000, sub_10006C224);
  v37 = type metadata accessor for Logger(0, v32);
  sub_10000E8E8(v37, (uint64_t)qword_1001A5CB8);
  v38 = v57;
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc(12, -1);
    v42 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v41 = 138412290;
    v43 = -[NSObject bleDevice](v38, "bleDevice");
    v44 = v43;
    if (v43)
      v61 = v43;
    else
      v61 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v41 + 4, v41 + 12);
    *v42 = v44;

    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Found %@", v41, 0xCu);
    v45 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v42, 1, v45);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v41, -1, -1);
  }
  else
  {

    v39 = v38;
  }

  if (!-[NSObject needsSetup](v38, "needsSetup")
    || -[NSObject deviceActionType](v38, "deviceActionType") != 8)
  {
    goto LABEL_33;
  }
  v46 = OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState;
  if (!*(_BYTE *)(v29 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState))
  {
    v47 = 0x64696C61766E49;
    v48 = 0xE700000000000000;
    goto LABEL_32;
  }
  if (*(_BYTE *)(v29 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState) != 1)
  {
    v48 = 0x8000000100135DB0;
    v47 = 0xD000000000000013;
LABEL_32:
    v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, 0x736150736465654ELL, 0xED000064726F7773, 0);
    swift_bridgeObjectRelease(v48);
    if ((v49 & 1) == 0)
    {
      v54 = *(unsigned __int8 *)(v29 + v46);
      *(_BYTE *)(v29 + v46) = 1;
      goto LABEL_43;
    }
    goto LABEL_33;
  }
  swift_bridgeObjectRelease(0xED000064726F7773);
LABEL_33:
  if (!-[NSObject needsSetup](v38, "needsSetup")
    || -[NSObject deviceActionType](v38, "deviceActionType") != 8)
  {
    v50 = OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState;
    if (*(_BYTE *)(v29 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState))
    {
      if (*(_BYTE *)(v29 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState) != 1)
      {
        swift_bridgeObjectRelease(0x8000000100135DB0);
        return;
      }
      v51 = 0x736150736465654ELL;
      v52 = 0xED000064726F7773;
    }
    else
    {
      v51 = 0x64696C61766E49;
      v52 = 0xE700000000000000;
    }
    v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v52, 0xD000000000000013, 0x8000000100135DB0, 0);
    swift_bridgeObjectRelease(v52);
    if ((v53 & 1) == 0)
    {
      v54 = *(unsigned __int8 *)(v29 + v50);
      *(_BYTE *)(v29 + v50) = 2;
LABEL_43:
      sub_10006C544(v54);
    }
  }
}

void sub_10006DC74(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  NSObject *v38;
  NSObject *v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  _QWORD *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;

  v51 = sub_100006A6C(&qword_1001A5550);
  __chkstk_darwin(v51);
  v52 = (uint64_t)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006A6C(&qword_1001A42A0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v48 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v48 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v48 - v17;
  v19 = objc_msgSend(a1, "identifier");
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v18, 1, 1, v3);
    goto LABEL_6;
  }
  v20 = v19;
  v49 = v10;
  v50 = a1;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v19);

  v21 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v21(v18, v6, v3);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v22(v18, 0, 1, v3);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v23(v18, 1, v3) == 1)
  {
LABEL_6:
    v27 = &qword_1001A42A0;
    v28 = (uint64_t)v18;
LABEL_7:
    sub_10000D858(v28, v27);
    return;
  }
  v48 = (void (*)(char *, uint64_t, uint64_t))v21;
  sub_10000D858((uint64_t)v18, &qword_1001A42A0);
  v24 = objc_msgSend(v50, "identifier");
  if (v24)
  {
    v25 = v24;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v24);

    v26 = 0;
  }
  else
  {
    v26 = 1;
  }
  v29 = v53;
  v22(v16, v26, 1, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v29 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterDeviceIdentifier, v3);
  v22(v13, 0, 1, v3);
  v30 = v52;
  v31 = v52 + *(int *)(v51 + 48);
  sub_100006BD8((uint64_t)v16, v52, &qword_1001A42A0);
  sub_100006BD8((uint64_t)v13, v31, &qword_1001A42A0);
  if (v23((char *)v30, 1, v3) != 1)
  {
    v33 = (uint64_t)v49;
    sub_100006BD8(v30, (uint64_t)v49, &qword_1001A42A0);
    if (v23((char *)v31, 1, v3) != 1)
    {
      v48(v6, v31, v3);
      v34 = sub_10006E554();
      v35 = dispatch thunk of static Equatable.== infix(_:_:)(v33, v6, v3, v34);
      v36 = *(void (**)(char *, uint64_t))(v4 + 8);
      v36(v6, v3);
      sub_10000D858((uint64_t)v13, &qword_1001A42A0);
      sub_10000D858((uint64_t)v16, &qword_1001A42A0);
      v36((char *)v33, v3);
      sub_10000D858(v30, &qword_1001A42A0);
      v29 = v53;
      if ((v35 & 1) == 0)
        return;
      goto LABEL_17;
    }
    sub_10000D858((uint64_t)v13, &qword_1001A42A0);
    sub_10000D858((uint64_t)v16, &qword_1001A42A0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v33, v3);
    goto LABEL_15;
  }
  sub_10000D858((uint64_t)v13, &qword_1001A42A0);
  sub_10000D858((uint64_t)v16, &qword_1001A42A0);
  if (v23((char *)v31, 1, v3) != 1)
  {
LABEL_15:
    v27 = &qword_1001A5550;
    v28 = v30;
    goto LABEL_7;
  }
  sub_10000D858(v30, &qword_1001A42A0);
LABEL_17:
  if (qword_1001A3000 != -1)
    swift_once(&qword_1001A3000, sub_10006C224);
  v37 = type metadata accessor for Logger(0, v32);
  sub_10000E8E8(v37, (uint64_t)qword_1001A5CB8);
  v38 = v50;
  v39 = Logger.logObject.getter(v38);
  v41 = static os_log_type_t.default.getter(v39, v40);
  if (os_log_type_enabled(v39, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc(12, -1);
    v43 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v42 = 138412290;
    v44 = -[NSObject bleDevice](v38, "bleDevice");
    v45 = v44;
    if (v44)
      v54 = v44;
    else
      v54 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v42 + 4, v42 + 12);
    *v43 = v45;

    _os_log_impl((void *)&_mh_execute_header, v39, v41, "Lost %@", v42, 0xCu);
    v46 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v43, 1, v46);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v42, -1, -1);
  }
  else
  {

    v39 = v38;
  }

  v47 = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState);
  *(_BYTE *)(v29 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterState) = 2;
  sub_10006C544(v47);
}

uint64_t sub_10006E208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_requesterDeviceIdentifier;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_100012F60(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_stateChangedHandler + 8));
  sub_100012F60(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscoveryGenerator), *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscoveryGenerator + 8));
  sub_10000D858(v0 + OBJC_IVAR____TtC18SharingViewService30PasswordRequesterStateObserver_deviceDiscovery, &qword_1001A5E30);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10006E298()
{
  return type metadata accessor for PasswordRequesterStateObserver(0);
}

uint64_t type metadata accessor for PasswordRequesterStateObserver(uint64_t a1)
{
  uint64_t result;

  result = qword_1001A5D00;
  if (!qword_1001A5D00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PasswordRequesterStateObserver);
  return result;
}

uint64_t sub_10006E2DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100133720;
    v4[2] = &unk_100133738;
    v4[3] = &unk_100133720;
    v4[4] = &unk_100133750;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PasswordSharingViewType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PasswordRequesterState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10006E444 + 4 * byte_1001336B7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10006E478 + 4 * byte_1001336B2[v4]))();
}

uint64_t sub_10006E478(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006E480(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10006E488);
  return result;
}

uint64_t sub_10006E494(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10006E49CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10006E4A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10006E4A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PasswordRequesterState()
{
  return &type metadata for PasswordRequesterState;
}

unint64_t sub_10006E4C8()
{
  unint64_t result;

  result = qword_1001A5E28;
  if (!qword_1001A5E28)
  {
    result = swift_getWitnessTable(&unk_100133800, &type metadata for PasswordRequesterState);
    atomic_store(result, (unint64_t *)&qword_1001A5E28);
  }
  return result;
}

unint64_t sub_10006E50C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100176968, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_10006E554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A5530;
  if (!qword_1001A5530)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_1001A5530);
  }
  return result;
}

uint64_t sub_10006E59C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

const char *sub_10006E5B4(uint64_t a1)
{
  const char *result;

  if (a1 > 19)
  {
    if (a1 > 39)
    {
      if (a1 == 40)
        return "High";
      if (a1 == 50)
        return "Aggressive";
    }
    else
    {
      if (a1 == 20)
        return "Normal";
      if (a1 == 30)
        return "HighNormal";
    }
    return "?";
  }
  else
  {
    result = "Invalid";
    switch(a1)
    {
      case 0:
        return result;
      case 1:
        result = "BackgroundOld";
        break;
      case 2:
        result = "NormalOld";
        break;
      case 3:
        result = "HighOld";
        break;
      case 4:
        result = "AggressiveOld";
        break;
      case 10:
        result = "Background";
        break;
      default:
        return "?";
    }
  }
  return result;
}

uint64_t sub_10006E688()
{
  uint64_t v0;

  sub_100024118((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10006E6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10006E6D4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006E6F8(uint64_t a1)
{
  uint64_t v1;

  return sub_10006CDA4(a1, v1, (void (*)(uint64_t))sub_10006D54C);
}

uint64_t sub_10006E718(uint64_t a1)
{
  uint64_t v1;

  return sub_10006CDA4(a1, v1, (void (*)(uint64_t))sub_10006DC74);
}

double sub_10006E738(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006CE10(a1, a2, v2);
}

uint64_t sub_10006E740(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_10006E784(uint64_t a1)
{
  _QWORD *v1;

  sub_10006CE6C(a1, v1);
}

uint64_t sub_10006E78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A5E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006E7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A5E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10006E81C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A5E48;
  if (!qword_1001A5E48)
  {
    v1 = objc_opt_self(SFDeviceDiscovery);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A5E48);
  }
  return result;
}

uint64_t sub_10006E858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v6 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v6(a2, a3);
  return swift_release(v5);
}

uint64_t sub_10006E8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A5E50);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A5E50);
  if (qword_1001A2F00 != -1)
    swift_once(&qword_1001A2F00, sub_100018D74);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD4B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10006E930()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t Strong;
  uint64_t v29;
  id v30;

  v1 = objc_msgSend((id)objc_opt_self(ACAccountStore), "defaultStore");
  if (v1)
  {
    v2 = v1;
    v30 = objc_msgSend(v1, "aa_primaryAppleAccount");
    v3 = objc_msgSend(v2, "ams_activeiTunesAccount");
    v4 = objc_msgSend((id)objc_opt_self(SFAuthenticateAccountsSession), "_myGameCenterAccount");
    if (v30 && (v5 = objc_msgSend(v30, "username")) != 0)
    {
      v6 = v5;
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v9 = v8;

    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v10 = v0 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model;
    v11 = (int *)type metadata accessor for AuthenticateAccountsModel(0);
    v12 = (uint64_t *)(v10 + v11[11]);
    v13 = v12[1];
    *v12 = v7;
    v12[1] = v9;
    swift_bridgeObjectRelease(v13);
    if (v3 && (v14 = objc_msgSend(v3, "username")) != 0)
    {
      v15 = v14;
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v18 = v17;

    }
    else
    {
      v16 = 0;
      v18 = 0;
    }
    v19 = (uint64_t *)(v10 + v11[12]);
    v20 = v19[1];
    *v19 = v16;
    v19[1] = v18;
    swift_bridgeObjectRelease(v20);
    if (v4 && (v21 = objc_msgSend(v4, "username")) != 0)
    {
      v22 = v21;
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v25 = v24;

    }
    else
    {
      v23 = 0;
      v25 = 0;
    }
    v26 = (uint64_t *)(v10 + v11[13]);
    v27 = v26[1];
    *v26 = v23;
    v26[1] = v25;
    swift_bridgeObjectRelease(v27);
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
    if (Strong)
    {
      v29 = Strong;
      sub_1000DC884(1);

      swift_unknownObjectRelease(v29);
    }
    else
    {

    }
  }
}

void sub_10006EB54(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Class isa;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  NSString v24;
  void **aBlock;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  void *v28;
  void *v29;
  uint64_t v30;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_setupSession;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_setupSession), "invalidate");
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_remoteViewControllerProxy);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_remoteViewControllerProxy) = a2;
  swift_unknownObjectRetain(a2);
  swift_unknownObjectRelease(v11);
  v12 = mach_absolute_time();
  v13 = v3 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model;
  v14 = type metadata accessor for AuthenticateAccountsModel(0);
  *(_QWORD *)(v13 + *(int *)(v14 + 40)) = v12;
  *(_DWORD *)(v13 + *(int *)(v14 + 36)) = 0;
  v15 = objc_msgSend(objc_allocWithZone((Class)SFDevice), "init");
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v15, "setIdentifier:", isa);

  v17 = objc_msgSend(objc_allocWithZone((Class)SFAuthenticateAccountsSession), "init");
  objc_msgSend(v17, "setPeerDevice:", v15);
  objc_msgSend(v17, "setPresentingViewController:", a1);
  v18 = swift_allocObject(&unk_10017A4F8, 24, 7);
  swift_weakInit(v18 + 16, v3);
  v29 = sub_100071110;
  v30 = v18;
  aBlock = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_10000DBE4;
  v28 = &unk_10017A510;
  v19 = _Block_copy(&aBlock);
  objc_msgSend(v17, "setProgressHandler:", v19, swift_release(v30).n128_f64[0]);
  _Block_release(v19);
  v20 = swift_allocObject(&unk_10017A4F8, 24, 7);
  swift_weakInit(v20 + 16, v3);
  v29 = sub_100071130;
  v30 = v20;
  aBlock = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_10006E858;
  v28 = &unk_10017A538;
  v21 = _Block_copy(&aBlock);
  objc_msgSend(v17, "setPromptForPINHandler:", v21, swift_release(v30).n128_f64[0]);
  _Block_release(v21);
  objc_msgSend(v17, "activate");
  v22 = *(void **)(v3 + v10);
  *(_QWORD *)(v3 + v10) = v17;
  v23 = v17;

  sub_100070034(9);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "setIdleTimerDisabled:forReason:", 1, v24);

}

double sub_10006EE54(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  _BYTE v9[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    sub_10006F8EC(a1, a2);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

void sub_10006EEC4(int a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BYTE v16[20];

  v3 = a2;
  v5 = a3 + 16;
  if (qword_1001A3008 != -1)
    swift_once(&qword_1001A3008, sub_10006E8A0);
  v6 = type metadata accessor for Logger(0, a2);
  v7 = sub_10000E8E8(v6, (uint64_t)qword_1001A5E50);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = swift_slowAlloc(14, -1);
    *(_DWORD *)v11 = 67109376;
    v15 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, v16, v11 + 4, v11 + 8);
    *(_WORD *)(v11 + 8) = 1024;
    v15 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, v16, v11 + 10, v11 + 14);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "Prompt for PIN {flags: %u, throttleSeconds: %d", (uint8_t *)v11, 0xEu);
    swift_slowDealloc(v11, -1, -1);
  }

  swift_beginAccess(v5, &v15, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v13 = Strong;
    v14 = swift_unknownObjectWeakLoadStrong(Strong + 16);
    swift_release(v13);
    if (v14)
    {
      sub_1000DCFF0(a1);
      swift_unknownObjectRelease(v14);
    }
  }
}

uint64_t sub_10006F048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  NSString v13;
  uint64_t v14;

  v1 = v0;
  v2 = OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_setupSession;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_setupSession), "invalidate");
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = 0;

  if (qword_1001A3008 != -1)
    swift_once(&qword_1001A3008, sub_10006E8A0);
  v5 = type metadata accessor for Logger(0, v4);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A5E50);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "Enabling idle timer", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_remoteViewControllerProxy;
  v12 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_remoteViewControllerProxy);
  if (v12)
  {
    swift_unknownObjectRetain(*(_QWORD *)(v1
                                        + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_remoteViewControllerProxy));
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setIdleTimerDisabled:forReason:", 0, v13);

    swift_unknownObjectRelease(v12);
    v14 = *(_QWORD *)(v1 + v11);
  }
  else
  {
    v14 = 0;
  }
  *(_QWORD *)(v1 + v11) = 0;
  return swift_unknownObjectRelease(v14);
}

void sub_10006F1B0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  char v29;
  unint64_t v30;
  char v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  NSObject *v46;
  uint64_t v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t Strong;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD v63[4];
  __int128 v64;
  __int128 v65;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v56 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(a1, "name");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v57 = a1;
  v9 = objc_msgSend(a1, "userInfo");
  if (v9)
  {
    v11 = v9;
    v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v12 = 0;
  }
  if (qword_1001A3008 != -1)
    swift_once(&qword_1001A3008, sub_10006E8A0);
  v13 = type metadata accessor for Logger(0, v10);
  v14 = sub_10000E8E8(v13, (uint64_t)qword_1001A5E50);
  swift_bridgeObjectRetain_n(v12, 2);
  v15 = swift_bridgeObjectRetain_n(v8, 2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.info.getter();
  v18 = os_log_type_enabled(v16, v17);
  v58 = v6;
  if (v18)
  {
    v53 = v14;
    v19 = swift_slowAlloc(22, -1);
    v20 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v64 = v20;
    *(_DWORD *)v19 = 136315394;
    swift_bridgeObjectRetain(v8);
    v62 = sub_10001EFA4(v6, v8, (uint64_t *)&v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease_n(v8, 3);
    *(_WORD *)(v19 + 12) = 2080;
    v54 = v3;
    v55 = v2;
    if (v12)
    {
      v21 = swift_bridgeObjectRetain(v12);
      v22 = Dictionary.description.getter(v21, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v24 = v23;
      swift_bridgeObjectRelease(v12);
    }
    else
    {
      v62 = 0;
      v63[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v63[0]);
      v22 = 0xD00000000000002BLL;
      v24 = 0x800000010013A030;
    }
    v62 = sub_10001EFA4(v22, v24, (uint64_t *)&v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, v63, v19 + 14, v19 + 22);
    swift_bridgeObjectRelease_n(v12, 2);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "DeviceSetup notification {name: %s, userInfo: %s}", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    v3 = v54;
    v2 = v55;
  }
  else
  {

    swift_bridgeObjectRelease_n(v12, 2);
    swift_bridgeObjectRelease_n(v8, 2);
  }
  if (*(_QWORD *)(v59 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_setupSession))
  {
    swift_bridgeObjectRelease(v12);
    v25 = swift_bridgeObjectRelease(v8);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Session started, ignoring DeviceSetup notification.", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    return;
  }
  if (v58 == 0xD00000000000001DLL && v8 == 0x8000000100139760)
  {
    swift_bridgeObjectRelease(0x8000000100139760);
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v8, 0xD00000000000001DLL, 0x8000000100139760, 0);
    swift_bridgeObjectRelease(v8);
    if ((v29 & 1) == 0)
    {
      swift_bridgeObjectRelease(v12);
      return;
    }
  }
  if (!v12)
    goto LABEL_32;
  v60 = 0x746553736465656ELL;
  v61 = 0xEA00000000007075;
  AnyHashable.init<A>(_:)(&v62, &v60, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v12 + 16) && (v30 = sub_100005CF4((uint64_t)&v62), (v31 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(v12 + 56) + 32 * v30, (uint64_t)&v64);
  }
  else
  {
    v64 = 0u;
    v65 = 0u;
  }
  swift_bridgeObjectRelease(v12);
  sub_100006B34((uint64_t)&v62);
  if (!*((_QWORD *)&v65 + 1))
    goto LABEL_33;
  if ((swift_dynamicCast(&v62, &v64, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) == 0
    || (v62 & 1) != 0)
  {
    return;
  }
  v32 = objc_msgSend(v57, "userInfo");
  if (!v32)
  {
LABEL_32:
    v64 = 0u;
    v65 = 0u;
LABEL_33:
    sub_100064214((uint64_t)&v64);
    return;
  }
  v33 = v32;
  v34 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v32, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v60 = 0x4449656369766564;
  v61 = 0xE800000000000000;
  AnyHashable.init<A>(_:)(&v62, &v60, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v34 + 16) && (v35 = sub_100005CF4((uint64_t)&v62), (v36 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(v34 + 56) + 32 * v35, (uint64_t)&v64);
  }
  else
  {
    v64 = 0u;
    v65 = 0u;
  }
  swift_bridgeObjectRelease(v34);
  sub_100006B34((uint64_t)&v62);
  if (!*((_QWORD *)&v65 + 1))
    goto LABEL_33;
  if ((swift_dynamicCast(&v62, &v64, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    return;
  v38 = v62;
  v37 = v63[0];
  v39 = v56;
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v56, v59 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model, v2);
  v41 = UUID.uuidString.getter(v40);
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v39, v2);
  if (v38 == v41 && v37 == v43)
  {
    v44 = swift_bridgeObjectRelease_n(v37, 2);
  }
  else
  {
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v37, v41, v43, 0);
    swift_bridgeObjectRelease(v43);
    v44 = swift_bridgeObjectRelease(v37);
    if ((v45 & 1) == 0)
      return;
  }
  v46 = Logger.logObject.getter(v44);
  v48 = static os_log_type_t.default.getter(v46, v47);
  if (os_log_type_enabled(v46, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v49 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v48, "Auto-dismissing device was lost", v49, 2u);
    swift_slowDealloc(v49, -1, -1);
  }

  Strong = swift_unknownObjectWeakLoadStrong(v59 + 16);
  if (Strong)
  {
    v52 = Strong;
    sub_10009D860(7, v51);
    swift_unknownObjectRelease(v52);
  }
}

void sub_10006F8EC(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  const char *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t Strong;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  NSObject *v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  NSString v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  NSObject *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  _QWORD *v47;
  NSObject *v48;
  uint64_t v49;
  NSObject *v50;
  void *v51;
  int v52;
  char v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  _QWORD v57[4];
  __int128 v58;
  __int128 v59;

  v3 = v2;
  v5 = a1;
  v6 = sub_100070934(a1);
  v8 = String.init(cString:)(v6);
  v9 = v7;
  if (qword_1001A3008 != -1)
    swift_once(&qword_1001A3008, sub_10006E8A0);
  v10 = type metadata accessor for Logger(0, v7);
  sub_10000E8E8(v10, (uint64_t)qword_1001A5E50);
  swift_bridgeObjectRetain_n(a2, 2);
  swift_retain_n(v2, 2);
  v11 = swift_bridgeObjectRetain(v9);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.info.getter();
  v14 = &off_1001A5000;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc(32, -1);
    v16 = (_QWORD *)swift_slowAlloc(8, -1);
    v54 = swift_slowAlloc(64, -1);
    *(_QWORD *)&v58 = v54;
    *(_DWORD *)v15 = 136315650;
    swift_bridgeObjectRetain(v9);
    v56 = sub_10001EFA4(v8, v9, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease_n(v9, 3);
    *(_WORD *)(v15 + 12) = 2080;
    v55 = v5;
    if (a2)
    {
      v17 = swift_bridgeObjectRetain(a2);
      v18 = Dictionary.description.getter(v17, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v20 = v19;
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v56 = 0;
      v57[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v57[0]);
      v20 = 0x800000010013A030;
      v18 = 0xD00000000000002BLL;
    }
    v56 = sub_10001EFA4(v18, v20, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v15 + 14, v15 + 22);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v15 + 22) = 2112;
    v22 = v3;
    v23 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_setupSession);
    if (v23)
    {
      v56 = (uint64_t)v23;
      v24 = v23;
      v25 = v15 + 24;
      v26 = v15 + 32;
    }
    else
    {
      v26 = v15 + 32;
      v56 = 0;
      v25 = v15 + 24;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v25, v26);
    *v16 = v23;
    v3 = v22;
    swift_release_n(v22, 2, v27);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Progress {event: %s, info: %s, session: %@}", (uint8_t *)v15, 0x20u);
    v28 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v16, 1, v28);
    swift_slowDealloc(v16, -1, -1);
    swift_arrayDestroy(v54, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    v5 = v55;
    v14 = &off_1001A5000;
  }
  else
  {

    swift_release_n(v3, 2, v21);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(v9, 2);
  }
  if (*(_QWORD *)((char *)v14[461] + v3))
  {
    Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
    if (Strong)
    {
      v30 = Strong;
      if (v5 <= 69)
      {
        if (v5 == 20)
        {
          v34 = Logger.logObject.getter(Strong);
          v36 = static os_log_type_t.default.getter(v34, v35);
          if (os_log_type_enabled(v34, v36))
          {
            v37 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v37 = 0;
            _os_log_impl((void *)&_mh_execute_header, v34, v36, "Setup completed", v37, 2u);
            swift_slowDealloc(v37, -1, -1);
          }

          sub_100070414(0);
          sub_1000DC884(5);
          v38 = *(void **)(v3
                         + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_remoteViewControllerProxy);
          if (v38)
          {
            swift_unknownObjectRetain(*(_QWORD *)(v3
                                                + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_remoteViewControllerProxy));
            v39 = String._bridgeToObjectiveC()();
            objc_msgSend(v38, "setIdleTimerDisabled:forReason:", 0, v39);

            swift_unknownObjectRelease(v30);
            v40 = (uint64_t)v38;
LABEL_31:
            swift_unknownObjectRelease(v40);
            return;
          }
        }
        else if (v5 == 30)
        {
          if (a2)
          {
            *(_QWORD *)&v58 = 28517;
            *((_QWORD *)&v58 + 1) = 0xE200000000000000;
            AnyHashable.init<A>(_:)(&v56, &v58, &type metadata for String, &protocol witness table for String);
            if (*(_QWORD *)(a2 + 16) && (v31 = sub_100005CF4((uint64_t)&v56), (v32 & 1) != 0))
            {
              sub_10000D894(*(_QWORD *)(a2 + 56) + 32 * v31, (uint64_t)&v58);
            }
            else
            {
              v58 = 0u;
              v59 = 0u;
            }
            sub_100006B34((uint64_t)&v56);
            if (*((_QWORD *)&v59 + 1))
            {
              v41 = sub_1000710B0();
              if (swift_dynamicCast(&v56, &v58, (char *)&type metadata for Any + 8, v41, 6))
                v42 = (void *)v56;
              else
                v42 = 0;
              goto LABEL_40;
            }
          }
          else
          {
            v58 = 0u;
            v59 = 0u;
          }
          sub_100064214((uint64_t)&v58);
          v42 = 0;
LABEL_40:
          v43 = v42;
          v44 = Logger.logObject.getter(v43);
          v45 = static os_log_type_t.error.getter(v44);
          if (os_log_type_enabled(v44, v45))
          {
            v46 = (uint8_t *)swift_slowAlloc(12, -1);
            v47 = (_QWORD *)swift_slowAlloc(8, -1);
            *(_DWORD *)v46 = 138412290;
            if (v42)
            {
              v56 = (uint64_t)v43;
              v48 = v43;
            }
            else
            {
              v56 = 0;
            }
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v46 + 4, v46 + 12);
            *v47 = v42;

            _os_log_impl((void *)&_mh_execute_header, v44, v45, "Setup failed {error: %@}", v46, 0xCu);
            v49 = sub_100006A6C(&qword_1001A5420);
            swift_arrayDestroy(v47, 1, v49);
            swift_slowDealloc(v47, -1, -1);
            swift_slowDealloc(v46, -1, -1);
          }
          else
          {

            v44 = v43;
          }

          if (v42)
          {
            v50 = v43;
            v51 = (void *)_convertErrorToNSError(_:)(v50);

          }
          else
          {
            v51 = 0;
          }
          v52 = NSErrorToOSStatus(v51);

          sub_100070414(v52);
          if (v52 == 301015)
          {
            v53 = 8;
          }
          else if (v52 == 301005)
          {
            v53 = 7;
          }
          else
          {
            v53 = 6;
          }
          sub_1000DC884(v53);
          swift_unknownObjectRelease(v30);

          return;
        }
LABEL_30:
        v40 = v30;
        goto LABEL_31;
      }
      if (v5 == 70)
      {
        v33 = 3;
      }
      else
      {
        if (v5 != 234)
          goto LABEL_30;
        v33 = 4;
      }
      sub_1000DC884(v33);
      goto LABEL_30;
    }
  }
}

double sub_100070034(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t inited;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  Class isa;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[328];

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_loggedUsageStart) & 1) == 0)
  {
    v3 = v1;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_loggedUsageStart) = 1;
    v5 = mach_absolute_time();
    v6 = v3 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model;
    v7 = (int *)type metadata accessor for AuthenticateAccountsModel(0);
    v8 = *(_QWORD *)(v6 + v7[10]);
    if (v5 < v8)
    {
      __break(1u);
    }
    else
    {
      v2 = UpTicksToMilliseconds(v5 - v8);
      v9 = sub_100006A6C(&qword_1001A56A8);
      inited = swift_initStackObject(v9, v30);
      *(_OWORD *)(inited + 16) = xmmword_100133840;
      *(_QWORD *)(inited + 32) = 1952539487;
      *(_QWORD *)(inited + 40) = 0xE400000000000000;
      *(_QWORD *)(inited + 48) = 0xD000000000000014;
      *(_QWORD *)(inited + 56) = 0x800000010013A010;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 80) = 7368543;
      *(_QWORD *)(inited + 88) = 0xE300000000000000;
      *(_QWORD *)(inited + 96) = 0x7472617453;
      *(_QWORD *)(inited + 104) = 0xE500000000000000;
      *(_QWORD *)(inited + 120) = &type metadata for String;
      *(_QWORD *)(inited + 128) = 6580595;
      *(_QWORD *)(inited + 136) = 0xE300000000000000;
      v11 = (_QWORD *)(v6 + v7[6]);
      v12 = v11[1];
      *(_QWORD *)(inited + 144) = *v11;
      *(_QWORD *)(inited + 152) = v12;
      *(_QWORD *)(inited + 168) = &type metadata for String;
      *(_QWORD *)(inited + 176) = 1769173874;
      *(_QWORD *)(inited + 184) = 0xE400000000000000;
      *(_QWORD *)(inited + 192) = *(_QWORD *)(v6 + v7[7]);
      *(_QWORD *)(inited + 216) = &type metadata for Int;
      *(_QWORD *)(inited + 224) = 0x6E6F69746361;
      *(_QWORD *)(inited + 232) = 0xE600000000000000;
      *(_DWORD *)(inited + 240) = a1;
      *(_QWORD *)(inited + 264) = &type metadata for Int32;
      *(_QWORD *)(inited + 272) = 29549;
      *(_QWORD *)(inited + 312) = &type metadata for UInt64;
      *(_QWORD *)(inited + 280) = 0xE200000000000000;
      *(_QWORD *)(inited + 288) = v2;
      swift_bridgeObjectRetain(v12);
      v13 = sub_1000046D0(inited);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v13);
      SFDashboardLogJSON(isa);

      if (qword_1001A3008 == -1)
        goto LABEL_4;
    }
    swift_once(&qword_1001A3008, sub_10006E8A0);
LABEL_4:
    v16 = type metadata accessor for Logger(0, v15);
    sub_10000E8E8(v16, (uint64_t)qword_1001A5E50);
    swift_retain(v3);
    v18 = Logger.logObject.getter(v17);
    v20 = static os_log_type_t.default.getter(v18, v19);
    if (os_log_type_enabled(v18, v20))
    {
      v21 = swift_slowAlloc(44, -1);
      v27 = swift_slowAlloc(32, -1);
      v29 = v27;
      *(_DWORD *)v21 = 136316162;
      v22 = (uint64_t *)(v6 + v7[6]);
      v26 = v2;
      v24 = *v22;
      v23 = v22[1];
      swift_bridgeObjectRetain(v23);
      v28 = sub_10001EFA4(v24, v23, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v21 + 4, v21 + 12);
      swift_bridgeObjectRelease(v23);
      *(_WORD *)(v21 + 12) = 2048;
      v28 = *(_QWORD *)(v6 + v7[7]);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v21 + 14, v21 + 22);
      *(_WORD *)(v21 + 22) = 1024;
      LODWORD(v28) = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, (char *)&v28 + 4, v21 + 24, v21 + 28);
      *(_WORD *)(v21 + 28) = 2048;
      v28 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v21 + 30, v21 + 38);
      *(_WORD *)(v21 + 38) = 1024;
      LODWORD(v28) = *(_DWORD *)(v6 + v7[9]);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, (char *)&v28 + 4, v21 + 40, v21 + 44);
      swift_release(v3);
      _os_log_impl((void *)&_mh_execute_header, v18, v20, "AuthenticateAccounts -- start {ID: %s, RSSI: %ld, action: %d, milliseconds: %llu, badPINCount: %u}", (uint8_t *)v21, 0x2Cu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

      *(_QWORD *)&result = swift_release(v3).n128_u64[0];
    }
  }
  return result;
}

double sub_100070414(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t inited;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  Class isa;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[328];

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_loggedUsageDone) & 1) == 0)
  {
    v3 = v1;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_loggedUsageDone) = 1;
    v5 = mach_absolute_time();
    v6 = v3 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model;
    v7 = (int *)type metadata accessor for AuthenticateAccountsModel(0);
    v8 = *(_QWORD *)(v6 + v7[10]);
    if (v5 < v8)
    {
      __break(1u);
    }
    else
    {
      v2 = UpTicksToMilliseconds(v5 - v8);
      v9 = sub_100006A6C(&qword_1001A56A8);
      inited = swift_initStackObject(v9, v30);
      *(_OWORD *)(inited + 16) = xmmword_100133840;
      *(_QWORD *)(inited + 32) = 1952539487;
      *(_QWORD *)(inited + 40) = 0xE400000000000000;
      *(_QWORD *)(inited + 48) = 0xD000000000000014;
      *(_QWORD *)(inited + 56) = 0x800000010013A010;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 80) = 7368543;
      *(_QWORD *)(inited + 88) = 0xE300000000000000;
      *(_QWORD *)(inited + 96) = 1701736260;
      *(_QWORD *)(inited + 104) = 0xE400000000000000;
      *(_QWORD *)(inited + 120) = &type metadata for String;
      *(_QWORD *)(inited + 128) = 6580595;
      *(_QWORD *)(inited + 136) = 0xE300000000000000;
      v11 = (_QWORD *)(v6 + v7[6]);
      v12 = v11[1];
      *(_QWORD *)(inited + 144) = *v11;
      *(_QWORD *)(inited + 152) = v12;
      *(_QWORD *)(inited + 168) = &type metadata for String;
      *(_QWORD *)(inited + 176) = 1769173874;
      *(_QWORD *)(inited + 184) = 0xE400000000000000;
      *(_QWORD *)(inited + 192) = *(_QWORD *)(v6 + v7[7]);
      *(_QWORD *)(inited + 216) = &type metadata for Int;
      *(_QWORD *)(inited + 224) = 0x726F727265;
      *(_QWORD *)(inited + 232) = 0xE500000000000000;
      *(_DWORD *)(inited + 240) = a1;
      *(_QWORD *)(inited + 264) = &type metadata for Int32;
      *(_QWORD *)(inited + 272) = 29549;
      *(_QWORD *)(inited + 312) = &type metadata for UInt64;
      *(_QWORD *)(inited + 280) = 0xE200000000000000;
      *(_QWORD *)(inited + 288) = v2;
      swift_bridgeObjectRetain(v12);
      v13 = sub_1000046D0(inited);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v13);
      SFDashboardLogJSON(isa);

      if (qword_1001A3008 == -1)
        goto LABEL_4;
    }
    swift_once(&qword_1001A3008, sub_10006E8A0);
LABEL_4:
    v16 = type metadata accessor for Logger(0, v15);
    sub_10000E8E8(v16, (uint64_t)qword_1001A5E50);
    swift_retain(v3);
    v18 = Logger.logObject.getter(v17);
    v20 = static os_log_type_t.default.getter(v18, v19);
    if (os_log_type_enabled(v18, v20))
    {
      v21 = swift_slowAlloc(44, -1);
      v27 = swift_slowAlloc(32, -1);
      v29 = v27;
      *(_DWORD *)v21 = 136316162;
      v22 = (uint64_t *)(v6 + v7[6]);
      v26 = v2;
      v24 = *v22;
      v23 = v22[1];
      swift_bridgeObjectRetain(v23);
      v28 = sub_10001EFA4(v24, v23, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v21 + 4, v21 + 12);
      swift_bridgeObjectRelease(v23);
      *(_WORD *)(v21 + 12) = 2048;
      v28 = *(_QWORD *)(v6 + v7[7]);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v21 + 14, v21 + 22);
      *(_WORD *)(v21 + 22) = 1024;
      LODWORD(v28) = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, (char *)&v28 + 4, v21 + 24, v21 + 28);
      *(_WORD *)(v21 + 28) = 2048;
      v28 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v21 + 30, v21 + 38);
      *(_WORD *)(v21 + 38) = 1024;
      LODWORD(v28) = *(_DWORD *)(v6 + v7[9]);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, (char *)&v28 + 4, v21 + 40, v21 + 44);
      swift_release(v3);
      _os_log_impl((void *)&_mh_execute_header, v18, v20, "AuthenticateAccounts -- done {ID: %s, RSSI: %ld, status: %d, milliseconds: %llu, badPINCount: %u}", (uint8_t *)v21, 0x2Cu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

      *(_QWORD *)&result = swift_release(v3).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1000707EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100013338(v2 + 16, a2);
  sub_100071138(v2 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model);

  swift_unknownObjectRelease(*(_QWORD *)(v2
                                       + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_remoteViewControllerProxy));
  swift_bridgeObjectRelease(*(_QWORD *)(v2
                                      + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_idleTimerReason
                                      + 8));
  return swift_deallocClassInstance(v2, *(unsigned int *)(*(_QWORD *)v2 + 48), *(unsigned __int16 *)(*(_QWORD *)v2 + 52));
}

uint64_t sub_100070858()
{
  return type metadata accessor for AuthenticateAccounsInteractor(0);
}

uint64_t type metadata accessor for AuthenticateAccounsInteractor(uint64_t a1)
{
  uint64_t result;

  result = qword_1001A5EB8;
  if (!qword_1001A5EB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AuthenticateAccounsInteractor);
  return result;
}

uint64_t sub_10007089C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100133980;
  result = type metadata accessor for AuthenticateAccountsModel(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_100133998;
    v4[3] = &unk_100133998;
    v4[4] = &unk_1001339B0;
    v4[5] = &unk_1001339B0;
    v4[6] = &unk_1001339C8;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

const char *sub_100070934(int a1)
{
  const char *result;

  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300)
              return "BackupProgress";
            if (a1 == 310)
              return "SyncProgress";
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000)
          return "SecureIntentStart";
        if (a1 == 1001)
          return "SecureIntentFinish";
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        result = "SU-No-SetupCancelled";
        break;
      case 904:
        result = "SU-No-SetupObliterate";
        break;
      case 905:
        result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        result = "SysDrop AirDrop Event";
        break;
      case 907:
        result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        result = "SysDrop Cancel Event";
        break;
      case 909:
        result = "File Transfer Progress Event";
        break;
      case 910:
        result = "File Transfer Completed Event";
        break;
      case 911:
        result = "iOSWiFiSetup";
        break;
      case 912:
        result = "HKPrimaryResidentSSIDFetchStart";
        break;
      default:
        switch(a1)
        {
          case 800:
            result = "AuthAccountsStart";
            break;
          case 803:
            result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            result = "AuthAccountsStoreProgress";
            break;
          case 805:
            result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          result = "TVLSFinish";
          break;
        case 270:
          result = "TVLSEstimateStart";
          break;
        case 272:
          result = "TVLSEstimateFinal";
          break;
        case 274:
          result = "TVLSEstimateFailed";
          break;
        case 276:
          result = "TVLSTryAgain";
          break;
        case 277:
          result = "TVLSToneBegan";
          break;
        case 278:
          result = "TVLCalStart";
          break;
        case 279:
          result = "TVLCalStep";
          break;
        case 280:
          result = "TVLCalFailed";
          break;
        case 281:
          result = "TVLCalTryAgain";
          break;
        case 282:
          result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250)
            return "?";
          result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130)
            return "WiFiPoweredOff";
          if (a1 == 140)
            return "RecognizeVoice";
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            result = "iCloudStart";
          }
          else
          {
            if (a1 != 224)
              return "?";
            result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65)
            return "SecurityAPCLoopStart";
          if (a1 == 70)
            return "SecurityFinish";
        }
        else
        {
          if (a1 == 50)
            return "PreAuthFinish";
          if (a1 == 60)
            return "SecurityStart";
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              result = "Error";
              break;
            case 31:
              result = "SessionStarted";
              break;
            case 32:
              result = "SessionEnded";
              break;
            case 33:
              result = "SessionSecured";
              break;
            case 35:
              result = "ConnectStart";
              break;
            case 40:
              result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        result = "BasicConfigStart";
        break;
      case 'Z':
        result = "BasicConfigFinish";
        break;
      case '\\':
        result = "StepStart";
        break;
      case '^':
        result = "StepFinish";
        break;
      case '_':
        result = "PreFinish";
        break;
        result = "SetupFinished";
        break;
      case 'a':
        result = "SetupResumed";
        break;
      case 'b':
        result = "SetupSuspend";
        break;
      case 'c':
        result = "SetupPeerSWUpdate";
        break;
      case 'd':
        result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

unint64_t sub_1000710B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A3908;
  if (!qword_1001A3908)
  {
    v1 = objc_opt_self(NSError);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A3908);
  }
  return result;
}

uint64_t sub_1000710EC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100071110(int a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006EE54(a1, a2, v2);
}

uint64_t sub_100071118(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100071128(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100071130(int a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006EEC4(a1, a2, v2);
}

uint64_t sub_100071138(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AuthenticateAccountsModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007117C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A6048);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A6048);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10007120C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  void *v20;
  id v21;
  NSString v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t inited;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  NSString v32;
  Class isa;
  id v34;
  id v35;
  NSString v36;
  id v37;
  uint64_t v38;
  NSString *v39;
  id v40;
  unint64_t v41;
  id v42;
  NSString v43;
  Class v44;
  id v45;
  NSString *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char v54[72];
  char v55[72];

  if (qword_1001A3010 != -1)
    swift_once(&qword_1001A3010, sub_10007117C);
  v3 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v3, (uint64_t)qword_1001A6048);
  v4 = v2;
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  v50 = v4;
  if (os_log_type_enabled(v5, v7))
  {
    v8 = swift_slowAlloc(32, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    v48 = swift_slowAlloc(64, -1);
    v53 = v48;
    *(_DWORD *)v8 = 136315650;
    v10 = (uint64_t *)&v4[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_appleIDInfo];
    v11 = *(_QWORD *)&v4[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_appleIDInfo + 8];
    if (v11 > 1)
    {
      v12 = *v10;
      swift_bridgeObjectRetain(*(_QWORD *)&v4[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_appleIDInfo
                                            + 8]);
    }
    else
    {
      v51 = 0;
      v52 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(0xE000000000000000);
      v11 = 0x8000000100136820;
      v12 = 0xD000000000000015;
    }
    v51 = sub_10001EFA4(v12, v11, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v8 + 12) = 2112;
    if (v10[1] == 1 || (v13 = (void *)v10[2]) == 0)
    {
      v51 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v8 + 14, v8 + 22);
      v13 = 0;
    }
    else
    {
      v51 = v10[2];
      v14 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v8 + 14, v8 + 22);
    }
    *v9 = v13;
    v4 = v50;

    *(_WORD *)(v8 + 22) = 2080;
    if (v10[1] == 1 || (v15 = v10[4]) == 0)
    {
      v51 = 0;
      v52 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v52);
      v15 = 0x8000000100136820;
      v16 = 0xD000000000000015;
    }
    else
    {
      v16 = v10[3];
      swift_bridgeObjectRetain(v10[4]);
    }
    v51 = sub_10001EFA4(v16, v15, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v8 + 24, v8 + 32);

    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "Set appleIDInfo. username: %s, profilePic: %@, phoneNumber: %s", (uint8_t *)v8, 0x20u);
    v17 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v9, 1, v17);
    swift_slowDealloc(v9, -1, -1);
    swift_arrayDestroy(v48, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v48, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v18 = *(void **)&v4[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_imageView];
  v19 = &v4[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_appleIDInfo];
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_appleIDInfo + 8] == 1
    || (v20 = (void *)*((_QWORD *)v19 + 2)) == 0)
  {
    v22 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v22);

  }
  else
  {
    v21 = v20;
  }
  objc_msgSend(v18, "setImage:", v21);

  v23 = *((_QWORD *)v19 + 1);
  if (v23 == 1)
  {
    v24 = 0;
    v23 = 0;
  }
  else
  {
    v24 = *((_QWORD *)v19 + 4);
    swift_bridgeObjectRetain(v24);
    if (v23)
    {
      swift_bridgeObjectRetain(v23);
      v25 = v23;
      goto LABEL_26;
    }
  }
  v25 = 0xE000000000000000;
LABEL_26:
  v49 = sub_100006A6C(&qword_1001A3C20);
  inited = swift_initStackObject(v49, v55);
  *(_OWORD *)(inited + 16) = xmmword_100131C40;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v27 = (void *)objc_opt_self(UIColor);
  swift_bridgeObjectRetain(v23);
  v46 = NSForegroundColorAttributeName;
  v47 = v27;
  v28 = objc_msgSend(v27, "labelColor");
  v29 = sub_100013194(0, &qword_1001A3C28, UIColor_ptr);
  *(_QWORD *)(inited + 64) = v29;
  *(_QWORD *)(inited + 40) = v28;
  v30 = sub_1000045A4(inited);
  v31 = objc_allocWithZone((Class)NSMutableAttributedString);
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  type metadata accessor for Key(0);
  sub_100017240();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v30);
  v34 = objc_msgSend(v31, "initWithString:attributes:", v32, isa);

  if (!v23)
  {
    if (v24)
      goto LABEL_31;
LABEL_30:
    v24 = 0xE000000000000000;
    goto LABEL_31;
  }
  swift_bridgeObjectRelease(v23);
  if (!v24)
    goto LABEL_30;
  v35 = objc_allocWithZone((Class)NSAttributedString);
  v36 = String._bridgeToObjectiveC()();
  v37 = objc_msgSend(v35, "initWithString:", v36);

  objc_msgSend(v34, "appendAttributedString:", v37);
LABEL_31:
  v38 = swift_initStackObject(v49, v54);
  *(_OWORD *)(v38 + 16) = xmmword_100131C40;
  *(_QWORD *)(v38 + 32) = v46;
  v39 = v46;
  v40 = objc_msgSend(v47, "secondaryLabelColor");
  *(_QWORD *)(v38 + 64) = v29;
  *(_QWORD *)(v38 + 40) = v40;
  v41 = sub_1000045A4(v38);
  v42 = objc_allocWithZone((Class)NSAttributedString);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v44 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v41);
  v45 = objc_msgSend(v42, "initWithString:attributes:", v43, v44);

  objc_msgSend(v34, "appendAttributedString:", v45);
  objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_idLabel], "setAttributedText:", v34);

}

char *sub_100071944(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  objc_super v12;

  *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_mainController] = 0;
  v3 = &v1[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_appleIDInfo];
  *(_OWORD *)v3 = xmmword_1001320D0;
  *((_QWORD *)v3 + 3) = 0;
  *((_QWORD *)v3 + 4) = 0;
  *((_QWORD *)v3 + 2) = 0;
  v4 = OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_imageView;
  v5 = objc_allocWithZone((Class)UIImageView);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_idLabel;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_infoLabel;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for AirTagLinkingViewController();
  v9 = (char *)objc_msgSendSuper2(&v12, "initWithContentView:", 0);
  v10 = *(void **)&v9[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_mainController];
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_mainController] = a1;

  return v9;
}

void sub_100071A54()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  Class isa;
  id v61;
  id v62;
  _QWORD aBlock[5];
  uint64_t v64;
  objc_super v65;

  v1 = v0;
  v65.receiver = v0;
  v65.super_class = (Class)type metadata accessor for AirTagLinkingViewController();
  objc_msgSendSuper2(&v65, "viewDidLoad");
  sub_1000897BC(0x73u);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v1, "setTitle:", v4);

  objc_msgSend(v1, "setDismissalType:", 1);
  sub_1000897BC(0x75u);
  v6 = v5;
  v7 = swift_allocObject(&unk_10017A570, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_mainController]);
  swift_retain(v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  aBlock[4] = sub_100072470;
  v64 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B5D0;
  aBlock[3] = &unk_10017A588;
  v9 = _Block_copy(aBlock);
  v62 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v8, 0, v9);

  _Block_release(v9);
  v10 = v64;
  swift_release(v7);

  v11 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_idLabel];
  v12 = (void *)objc_opt_self(UIFont);
  v13 = objc_msgSend(v12, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v11, "setFont:", v13);

  objc_msgSend(v11, "setTextAlignment:", 1);
  objc_msgSend(v11, "setNumberOfLines:", 0);
  v14 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_infoLabel];
  v15 = objc_msgSend(v12, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v14, "setFont:", v15);

  objc_msgSend(v14, "setTextAlignment:", 1);
  objc_msgSend(v14, "setNumberOfLines:", 0);
  sub_1000897BC(0x74u);
  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  objc_msgSend(v14, "setText:", v18);

  v19 = objc_msgSend(v1, "contentView");
  v20 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_imageView];
  objc_msgSend(v19, "addSubview:", v20);

  v21 = objc_msgSend(v1, "contentView");
  objc_msgSend(v21, "addSubview:", v11);

  v22 = objc_msgSend(v1, "contentView");
  objc_msgSend(v22, "addSubview:", v14);

  objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v23 = objc_msgSend(v1, "contentView");
  v24 = objc_msgSend(v23, "mainContentGuide");

  v61 = (id)objc_opt_self(NSLayoutConstraint);
  v25 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v26 = swift_allocObject(v25, 120, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1001320E0;
  v27 = objc_msgSend(v20, "widthAnchor");
  v28 = objc_msgSend(v27, "constraintEqualToConstant:", 80.0);

  *(_QWORD *)(v26 + 32) = v28;
  v29 = objc_msgSend(v20, "heightAnchor");
  v30 = objc_msgSend(v29, "constraintEqualToConstant:", 80.0);

  *(_QWORD *)(v26 + 40) = v30;
  v31 = objc_msgSend(v20, "topAnchor");
  v32 = objc_msgSend(v24, "topAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v26 + 48) = v33;
  v34 = objc_msgSend(v20, "centerXAnchor");
  v35 = objc_msgSend(v24, "centerXAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v26 + 56) = v36;
  v37 = objc_msgSend(v11, "topAnchor");
  v38 = objc_msgSend(v20, "bottomAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, 10.0);

  *(_QWORD *)(v26 + 64) = v39;
  v40 = objc_msgSend(v11, "leadingAnchor");
  v41 = objc_msgSend(v24, "leadingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v26 + 72) = v42;
  v43 = objc_msgSend(v11, "trailingAnchor");
  v44 = objc_msgSend(v24, "trailingAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  *(_QWORD *)(v26 + 80) = v45;
  v46 = objc_msgSend(v14, "topAnchor");
  v47 = objc_msgSend(v11, "bottomAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v47, 20.0);

  *(_QWORD *)(v26 + 88) = v48;
  v49 = objc_msgSend(v14, "leadingAnchor");
  v50 = objc_msgSend(v24, "leadingAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v26 + 96) = v51;
  v52 = objc_msgSend(v14, "trailingAnchor");
  v53 = objc_msgSend(v24, "trailingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v26 + 104) = v54;
  v55 = objc_msgSend(v14, "bottomAnchor");
  v56 = objc_msgSend(v24, "bottomAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:constant:", v56, -10.0);

  *(_QWORD *)(v26 + 112) = v57;
  aBlock[0] = v26;
  specialized Array._endMutation()(v58);
  v59 = aBlock[0];
  sub_100013194(0, (unint64_t *)&qword_1001A5810, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v59);
  objc_msgSend(v61, "activateConstraints:", isa);

}

void sub_10007229C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_didAgreeToLinking] = 1;

  }
  swift_beginAccess(v2, &v6, 0, 0);
  v4 = swift_unknownObjectWeakLoadStrong(v2);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1000AE414();

  }
}

id sub_100072388()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AirTagLinkingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AirTagLinkingViewController()
{
  return objc_opt_self(_TtC18SharingViewService27AirTagLinkingViewController);
}

uint64_t sub_10007244C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100072470(uint64_t a1)
{
  uint64_t v1;

  sub_10007229C(a1, v1);
}

uint64_t sub_100072478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100072488(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void *sub_100072490(char a1)
{
  void *v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *result;
  uint64_t v8;
  void *v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for BaseProxFlowViewController();
  objc_msgSendSuper2(&v10, "viewDidAppear:", a1 & 1);
  v3 = (void *)sub_100064288();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setStatusBarHidden:withDuration:", 1, 0.3);
    swift_unknownObjectRelease(v4);
  }
  v5 = (void *)sub_100064288();
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setAllowsBanners:", 1);
    swift_unknownObjectRelease(v6);
  }
  result = (void *)sub_100064288();
  if (result)
  {
    v9 = result;
    objc_msgSend(result, "setDesiredHardwareButtonEvents:", 16 * (SFDeviceHomeButtonType(result, v8) != 3));
    return (void *)swift_unknownObjectRelease(v9);
  }
  return result;
}

id sub_10007270C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseProxFlowViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BaseProxFlowViewController()
{
  return objc_opt_self(_TtC18SharingViewService26BaseProxFlowViewController);
}

uint64_t sub_10007275C(uint64_t a1, int a2)
{
  uint64_t v2;
  void (*v3)(_BOOL8);
  _BOOL8 v4;

  v3 = *(void (**)(_BOOL8))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = a2 != 0;
  swift_retain(v2);
  v3(v4);
  return swift_release(v2);
}

uint64_t sub_10007279C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A60D8);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A60D8);
  if (qword_1001A2EE8 != -1)
    swift_once(&qword_1001A2EE8, sub_100018C94);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD468);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_10007282C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint8_t *v48;
  id v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;

  v2 = v1;
  v4 = (int *)type metadata accessor for D2DSetupModel(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit(v2 + 16, 0);
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
  *v7 = 0;
  v7[1] = 0;
  v8 = (_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_migrationController);
  *v8 = 0;
  v8[1] = 0;
  v9 = OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_localAuthenticationContext;
  *(_QWORD *)(v2 + v9) = objc_msgSend(objc_allocWithZone((Class)LAContext), "init");
  sub_100085664(a1, (uint64_t)v6);
  v10 = v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  sub_10007D4B4((uint64_t)v6, v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model);
  v11 = objc_msgSend(objc_allocWithZone((Class)ACAccountStore), "init");
  v12 = objc_msgSend(v11, "aa_primaryAppleAccount");
  v14 = v12;
  if (v12)
  {
    v15 = objc_msgSend(v12, "username");
    if (v15)
    {
      v16 = v15;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v19 = v18;

      v20 = HIBYTE(v19) & 0xF;
      if ((v19 & 0x2000000000000000) == 0)
        v20 = v17 & 0xFFFFFFFFFFFFLL;
      if (v20)
      {
        v21 = (uint64_t *)(v10 + v4[7]);
        v22 = v21[1];
        *v21 = v17;
        v21[1] = v19;
        swift_bridgeObjectRelease(v22);
        goto LABEL_13;
      }
      swift_bridgeObjectRelease(v19);
    }
  }
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v23 = type metadata accessor for Logger(0, v13);
  sub_10000E8E8(v23, (uint64_t)qword_1001A60D8);
  v24 = v14;
  v25 = Logger.logObject.getter(v24);
  v27 = static os_log_type_t.default.getter(v25, v26);
  if (os_log_type_enabled(v25, v27))
  {
    v49 = v11;
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v50 = v4;
    v51 = (uint64_t)v14;
    v30 = v29;
    v52 = v29;
    *(_DWORD *)v28 = 136315138;
    v48 = v28 + 4;
    v31 = v24;
    v32 = sub_100006A6C(&qword_1001A63C8);
    v33 = String.init<A>(reflecting:)(&v51, v32);
    v35 = v34;
    v51 = sub_10001EFA4(v33, v34, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v48, v28 + 12);

    v36 = v35;
    v11 = v49;
    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v25, v27, "No Apple ID found for account: %s", v28, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    v37 = v30;
    v4 = v50;
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v28, -1, -1);

  }
  else
  {

  }
LABEL_13:
  *(_QWORD *)(v10 + v4[12]) = mach_absolute_time();
  v38 = sub_1000612BC();

  *(_BYTE *)(v10 + v4[21]) = v38;
  v39 = *(_QWORD *)(v2 + 112);
  v40 = *(_QWORD *)(v2 + 120);
  *(_QWORD *)(v2 + 112) = sub_100072BDC;
  *(_QWORD *)(v2 + 120) = 0;
  sub_100012F60(v39, v40);
  v41 = *(_QWORD *)(v2 + 128);
  v42 = *(_QWORD *)(v2 + 136);
  *(_QWORD *)(v2 + 128) = sub_100072C0C;
  *(_QWORD *)(v2 + 136) = 0;
  sub_100012F60(v41, v42);
  v43 = swift_allocObject(&unk_10017A780, 24, 7);
  swift_weakInit(v43 + 16, v2);
  v44 = *(_QWORD *)(v2 + 144);
  v45 = *(_QWORD *)(v2 + 152);
  *(_QWORD *)(v2 + 144) = sub_10007D51C;
  *(_QWORD *)(v2 + 152) = v43;
  sub_100012F60(v44, v45);
  return v2;
}

id sub_100072BDC()
{
  return objc_msgSend(objc_allocWithZone((Class)SFDeviceSetupSessioniOS), "init");
}

id sub_100072C0C()
{
  return objc_msgSend(objc_allocWithZone((Class)BYMigrationSourceController), "init");
}

uint64_t sub_100072C3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t result;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (!Strong)
    return 1;
  swift_release(Strong);
  result = WiFiManagerClientCreate(0, 0);
  if (result)
    return WiFiManagerClientGetPower() != 0;
  return result;
}

void sub_100072CA8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v39 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v37 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for D2DSetupModel(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)v33 - v11;
  __chkstk_darwin(v10);
  v40 = (char *)v33 - v13;
  v14 = objc_msgSend(a1, "name");
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = objc_msgSend(a1, "userInfo");
  if (v17)
  {
    v19 = v17;
    v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v20 = 0;
  }
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v21 = type metadata accessor for Logger(0, v18);
  v22 = sub_10000E8E8(v21, (uint64_t)qword_1001A60D8);
  swift_bridgeObjectRetain_n(v20, 2);
  v23 = swift_bridgeObjectRetain_n(v16, 2);
  v38 = v22;
  v24 = Logger.logObject.getter(v23);
  v26 = static os_log_type_t.default.getter(v24, v25);
  if (os_log_type_enabled(v24, v26))
  {
    v33[2] = v6;
    v34 = v2;
    v35 = v9;
    v36 = v12;
    v27 = swift_slowAlloc(22, -1);
    v28 = swift_slowAlloc(64, -1);
    v42 = v28;
    *(_DWORD *)v27 = 136315394;
    swift_bridgeObjectRetain(v16);
    v43 = sub_10001EFA4(v41, v16, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v27 + 4, v27 + 12);
    swift_bridgeObjectRelease_n(v16, 3);
    *(_WORD *)(v27 + 12) = 2080;
    v33[1] = v4;
    if (v20)
    {
      v29 = (void *)swift_bridgeObjectRetain(v20);
      v30 = sub_100091B8C(v29);
      v32 = v31;
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      v30 = 0;
      v32 = 0xE000000000000000;
    }
    v43 = sub_10001EFA4((uint64_t)v30, v32, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v27 + 14, v27 + 22);
    swift_bridgeObjectRelease_n(v20, 2);
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v24, v26, "DeviceSetup notification '%s', %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);

    v2 = v34;
  }
  else
  {

    swift_bridgeObjectRelease_n(v20, 2);
    swift_bridgeObjectRelease_n(v16, 2);
  }
  __asm { BR              X10 }
}

void sub_1000734EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(__n128);
  uint64_t v13;
  __n128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43[3];

  v1 = v0;
  v2 = sub_100006A6C((uint64_t *)&unk_1001A7D70);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for D2DSetupModel(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v11 = (char *)&v38 - v10;
  v12 = *(uint64_t (**)(__n128))(v0 + 144);
  if (v12)
  {
    v13 = *(_QWORD *)(v0 + 152);
    v14 = swift_retain(*(_QWORD *)(v1 + 152));
    v15 = v12(v14);
    sub_100012F60((uint64_t)v12, v13);
  }
  else
  {
    v15 = 0;
  }
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v16 = type metadata accessor for Logger(0, v9);
  v17 = sub_10000E8E8(v16, (uint64_t)qword_1001A60D8);
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.default.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    v40 = v11;
    v21 = swift_slowAlloc(12, -1);
    v41 = v4;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc(32, -1);
    v39 = v23;
    *(_DWORD *)v22 = 136315138;
    v43[0] = v23;
    if ((v15 & 1) != 0)
      v24 = 28271;
    else
      v24 = 6710895;
    if ((v15 & 1) != 0)
      v25 = 0xE200000000000000;
    else
      v25 = 0xE300000000000000;
    v42 = sub_10001EFA4(v24, v25, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v22 + 4, v22 + 12);
    v26 = v25;
    v11 = v40;
    swift_bridgeObjectRelease(v26);
    _os_log_impl((void *)&_mh_execute_header, v18, v20, "Start: WiFi %s", v22, 0xCu);
    v27 = v39;
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    v28 = v22;
    v4 = v41;
    swift_slowDealloc(v28, -1, -1);
  }

  v29 = v1 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + *(int *)(v5 + 88)) = v15 & 1;
  if ((v15 & 1) != 0)
  {
    if (*(unsigned __int8 *)(v29 + 16) >= 3u && *(_OWORD *)v29 == 0)
    {
      v30 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v4, 1, 1, v30);
      type metadata accessor for MainActor(0);
      v31 = swift_retain(v1);
      v32 = static MainActor.shared.getter(v31);
      v33 = (_QWORD *)swift_allocObject(&unk_10017A8C0, 40, 7);
      v33[2] = v32;
      v33[3] = &protocol witness table for MainActor;
      v33[4] = v1;
      v34 = sub_1000AE918((uint64_t)v4, (uint64_t)&unk_1001A63E8, (uint64_t)v33);
      swift_release(v34);
    }
  }
  else
  {
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (Strong)
    {
      v36 = Strong;
      sub_10007D3F0(v29, (uint64_t)v11);
      sub_10007D3F0((uint64_t)v11, (uint64_t)v8);
      v37 = v36 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
      swift_beginAccess(v36 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, v43, 33, 0);
      sub_10007D434((uint64_t)v8, v37);
      swift_endAccess(v43);
      sub_10009E4A8();
      sub_10007D478((uint64_t)v8);
      swift_unknownObjectRelease(v36);
      sub_10007D478((uint64_t)v11);
    }
  }
}

uint64_t sub_100073890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[52] = a4;
  v5 = sub_100006A6C(&qword_1001A42A0);
  v4[53] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for D2DSetupModel(0);
  v4[54] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[55] = swift_task_alloc(v7);
  v4[56] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v4[57] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v4[58] = v10;
  v4[59] = v11;
  return swift_task_switch(sub_100073988, v10, v11);
}

uint64_t sub_100073988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unsigned int v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t inited;
  NSString v52;
  id v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  Swift::String v58;
  Swift::String_optional v59;
  Swift::String v60;
  Swift::String v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  Class isa;
  uint64_t v69;
  _QWORD *v70;
  uint64_t Strong;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  Class v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  Swift::String v90;

  v1 = *(_QWORD *)(v0 + 432);
  v2 = *(_QWORD *)(v0 + 416);
  v3 = OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  *(_QWORD *)(v0 + 480) = OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  v4 = v2 + v3;
  v5 = *(void **)(v2 + v3);
  v6 = *(_QWORD *)(v2 + v3 + 8);
  *(_OWORD *)v4 = xmmword_100133A60;
  v7 = *(_BYTE *)(v2 + v3 + 16);
  *(_BYTE *)(v4 + 16) = 3;
  sub_10007D5D0(v5, v6, v7);
  if (*(_BYTE *)(v4 + *(int *)(v1 + 84)) == 1)
  {
    if (qword_1001A3018 != -1)
      swift_once(&qword_1001A3018, sub_10007279C);
    v9 = type metadata accessor for Logger(0, v8);
    v10 = sub_10000E8E8(v9, (uint64_t)qword_1001A60D8);
    *(_QWORD *)(v0 + 488) = v10;
    v11 = Logger.logObject.getter(v10);
    v13 = static os_log_type_t.default.getter(v11, v12);
    if (os_log_type_enabled(v11, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v13, "Start button requesting unlock", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    v15 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 496) = v15;
    *v15 = v0;
    v15[1] = sub_100074268;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
  *(_QWORD *)(v0 + 216) = &type metadata for DTOFeatureFlag;
  *(_QWORD *)(v0 + 224) = sub_10007D73C();
  v17 = isFeatureEnabled(_:)(v0 + 192);
  sub_100024118((_QWORD *)(v0 + 192));
  if ((v17 & 1) != 0)
  {
    v18 = *(_QWORD *)(v0 + 416);
    v88 = OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_localAuthenticationContext;
    v19 = *(void **)(v18 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_localAuthenticationContext);
    *(_QWORD *)(v0 + 408) = 0;
    v21 = objc_msgSend(v19, "canEvaluatePolicy:error:", 1025, v0 + 408);
    v22 = *(void **)(v0 + 408);
    *(_QWORD *)(v0 + 512) = v22;
    if (v22)
    {
      v23 = qword_1001A3018;
      v25 = v22;
      if (v23 != -1)
        swift_once(&qword_1001A3018, sub_10007279C);
      v26 = type metadata accessor for Logger(0, v24);
      sub_10000E8E8(v26, (uint64_t)qword_1001A60D8);
      v27 = v25;
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.error.getter(v28);
      if (!os_log_type_enabled(v28, v29))
      {

        if (v21)
          goto LABEL_14;
LABEL_21:
        swift_release(*(_QWORD *)(v0 + 456));

        goto LABEL_22;
      }
      v87 = v18;
      v30 = (uint8_t *)swift_slowAlloc(12, -1);
      v86 = v21;
      v31 = swift_slowAlloc(32, -1);
      v89 = v31;
      *(_DWORD *)v30 = 136315138;
      *(_QWORD *)(v0 + 392) = v27;
      v32 = sub_100013194(0, (unint64_t *)&qword_1001A3908, NSError_ptr);
      v33 = v27;
      v34 = v32;
      v18 = v87;
      v35 = String.init<A>(reflecting:)(v0 + 392, v34);
      v37 = v36;
      *(_QWORD *)(v0 + 400) = sub_10001EFA4(v35, v36, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 400, v0 + 408, v30 + 4, v30 + 12);

      swift_bridgeObjectRelease(v37);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to evaluate policy: %s", v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      v38 = v31;
      v21 = v86;
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v30, -1, -1);

    }
    if (v21)
    {
LABEL_14:
      if (qword_1001A3018 != -1)
        swift_once(&qword_1001A3018, sub_10007279C);
      v39 = type metadata accessor for Logger(0, v20);
      v40 = sub_10000E8E8(v39, (uint64_t)qword_1001A60D8);
      *(_QWORD *)(v0 + 520) = v40;
      v41 = Logger.logObject.getter(v40);
      v43 = static os_log_type_t.default.getter(v41, v42);
      if (os_log_type_enabled(v41, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, v43, "Start button requesting bio auth for DTO", v44, 2u);
        swift_slowDealloc(v44, -1, -1);
      }
      v45 = v0 + 16;
      v46 = *(_QWORD *)(v0 + 480);
      v47 = *(_QWORD *)(v0 + 432);
      v48 = *(_QWORD *)(v0 + 416);

      v49 = v48 + v46;
      v50 = sub_100006A6C(&qword_1001A63F8);
      inited = swift_initStackObject(v50, v0 + 80);
      *(_OWORD *)(inited + 16) = xmmword_100131C30;
      *(_DWORD *)(inited + 32) = 2;
      v52 = String._bridgeToObjectiveC()();
      v53 = sub_1001164E8(v52, (const char *)*(unsigned __int8 *)(v49 + *(int *)(v47 + 100)));

      v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
      v56 = v55;

      v57 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v90._object = (void *)0xE000000000000000;
      v58._countAndFlagsBits = v54;
      v58._object = v56;
      v59.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v59.value._object = (void *)0xEB00000000656C62;
      v60._countAndFlagsBits = 0;
      v60._object = (void *)0xE000000000000000;
      v90._countAndFlagsBits = 0;
      v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, v59, (NSBundle)v57, v60, v90);
      swift_bridgeObjectRelease(v56);

      *(_QWORD *)(inited + 64) = &type metadata for String;
      *(Swift::String *)(inited + 40) = v61;
      *(_DWORD *)(inited + 72) = 1061;
      *(_QWORD *)(inited + 104) = &type metadata for Bool;
      *(_BYTE *)(inited + 80) = 1;
      v62 = sub_1000068FC(inited);
      swift_setDeallocating(inited);
      v63 = sub_100006A6C(&qword_1001A32B8);
      swift_arrayDestroy(inited + 32, 2, v63);
      v64 = *(void **)(v18 + v88);
      *(_QWORD *)(v0 + 528) = v64;
      v65 = v64;
      sub_1000ACF4C(v62);
      v67 = v66;
      swift_bridgeObjectRelease(v62);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)(v0 + 536) = isa;
      swift_bridgeObjectRelease(v67);
      *(_QWORD *)(v0 + 56) = v0 + 376;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_100074D18;
      v69 = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 232) = _NSConcreteStackBlock;
      v70 = (_QWORD *)(v0 + 232);
      v70[1] = 0x40000000;
      v70[2] = sub_1000752BC;
      v70[3] = &unk_10017A8D8;
      v70[4] = v69;
      objc_msgSend(v65, "evaluatePolicy:options:reply:", 1025, isa, v70);
      return swift_continuation_await(v45);
    }
    goto LABEL_21;
  }
  swift_release(*(_QWORD *)(v0 + 456));
LABEL_22:
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 416) + 16);
  if (Strong)
  {
    v72 = Strong;
    v74 = *(_QWORD *)(v0 + 440);
    v73 = *(_QWORD *)(v0 + 448);
    sub_10007D3F0(*(_QWORD *)(v0 + 416) + *(_QWORD *)(v0 + 480), v73);
    sub_10007D3F0(v73, v74);
    v75 = v72 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
    swift_beginAccess(v72 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, v0 + 320, 33, 0);
    sub_10007D434(v74, v75);
    swift_endAccess(v0 + 320);
    sub_10009E4A8();
    sub_10007D478(v74);
    swift_unknownObjectRelease(v72);
    sub_10007D478(v73);
  }
  v76 = *(_QWORD *)(v0 + 424);
  v77 = *(_QWORD *)(v0 + 432);
  v78 = *(_QWORD *)(v0 + 416) + *(_QWORD *)(v0 + 480);
  v79 = objc_msgSend(objc_allocWithZone((Class)SFDevice), "init");
  objc_msgSend(v79, "setOsVersion:", *(unsigned __int8 *)(v78 + *(int *)(v77 + 32)));
  sub_100006BD8(v78 + *(int *)(v77 + 24), v76, &qword_1001A42A0);
  v80 = type metadata accessor for UUID(0);
  v81 = *(_QWORD *)(v80 - 8);
  v82 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v76, 1, v80) != 1)
  {
    v83 = *(_QWORD *)(v0 + 424);
    v82 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v83, v80);
  }
  objc_msgSend(v79, "setIdentifier:", v82);

  sub_100075390(v79);
  v84 = *(_QWORD *)(v0 + 440);
  v85 = *(_QWORD *)(v0 + 424);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 496);
  *(_QWORD *)(*(_QWORD *)v1 + 504) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100074AD8;
  else
    v3 = sub_100074310;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100074310()
{
  uint64_t v0;

  return swift_task_switch(sub_10007436C, *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472));
}

uint64_t sub_10007436C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unsigned int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  NSString v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  Swift::String v41;
  Swift::String_optional v42;
  Swift::String v43;
  Swift::String v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  Class isa;
  uint64_t v52;
  _QWORD *v53;
  uint64_t Strong;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  Class v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;

  *(_BYTE *)(*(_QWORD *)(v0 + 416) + *(_QWORD *)(v0 + 480) + *(int *)(*(_QWORD *)(v0 + 432) + 84)) = 0;
  *(_QWORD *)(v0 + 216) = &type metadata for DTOFeatureFlag;
  *(_QWORD *)(v0 + 224) = sub_10007D73C();
  v1 = isFeatureEnabled(_:)(v0 + 192);
  sub_100024118((_QWORD *)(v0 + 192));
  if ((v1 & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 416);
    v71 = OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_localAuthenticationContext;
    v3 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_localAuthenticationContext);
    *(_QWORD *)(v0 + 408) = 0;
    v5 = objc_msgSend(v3, "canEvaluatePolicy:error:", 1025, v0 + 408);
    v6 = *(void **)(v0 + 408);
    *(_QWORD *)(v0 + 512) = v6;
    if (v6)
    {
      v7 = qword_1001A3018;
      v9 = v6;
      if (v7 != -1)
        swift_once(&qword_1001A3018, sub_10007279C);
      v10 = type metadata accessor for Logger(0, v8);
      sub_10000E8E8(v10, (uint64_t)qword_1001A60D8);
      v11 = v9;
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.error.getter(v12);
      if (!os_log_type_enabled(v12, v13))
      {

        if (v5)
          goto LABEL_8;
LABEL_15:
        swift_release(*(_QWORD *)(v0 + 456));

        goto LABEL_16;
      }
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v70 = v5;
      v15 = swift_slowAlloc(32, -1);
      v72 = v15;
      *(_DWORD *)v14 = 136315138;
      *(_QWORD *)(v0 + 392) = v11;
      v16 = sub_100013194(0, (unint64_t *)&qword_1001A3908, NSError_ptr);
      v17 = v11;
      v18 = String.init<A>(reflecting:)(v0 + 392, v16);
      v20 = v19;
      *(_QWORD *)(v0 + 400) = sub_10001EFA4(v18, v19, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 400, v0 + 408, v14 + 4, v14 + 12);

      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to evaluate policy: %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      v21 = v15;
      v5 = v70;
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
    if (v5)
    {
LABEL_8:
      if (qword_1001A3018 != -1)
        swift_once(&qword_1001A3018, sub_10007279C);
      v22 = type metadata accessor for Logger(0, v4);
      v23 = sub_10000E8E8(v22, (uint64_t)qword_1001A60D8);
      *(_QWORD *)(v0 + 520) = v23;
      v24 = Logger.logObject.getter(v23);
      v26 = static os_log_type_t.default.getter(v24, v25);
      if (os_log_type_enabled(v24, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v26, "Start button requesting bio auth for DTO", v27, 2u);
        swift_slowDealloc(v27, -1, -1);
      }
      v28 = v0 + 16;
      v29 = *(_QWORD *)(v0 + 480);
      v30 = *(_QWORD *)(v0 + 432);
      v31 = *(_QWORD *)(v0 + 416);

      v32 = v31 + v29;
      v33 = sub_100006A6C(&qword_1001A63F8);
      inited = swift_initStackObject(v33, v0 + 80);
      *(_OWORD *)(inited + 16) = xmmword_100131C30;
      *(_DWORD *)(inited + 32) = 2;
      v35 = String._bridgeToObjectiveC()();
      v36 = sub_1001164E8(v35, (const char *)*(unsigned __int8 *)(v32 + *(int *)(v30 + 100)));

      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v39 = v38;

      v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v73._object = (void *)0xE000000000000000;
      v41._countAndFlagsBits = v37;
      v41._object = v39;
      v42.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v42.value._object = (void *)0xEB00000000656C62;
      v43._countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      v73._countAndFlagsBits = 0;
      v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, v42, (NSBundle)v40, v43, v73);
      swift_bridgeObjectRelease(v39);

      *(_QWORD *)(inited + 64) = &type metadata for String;
      *(Swift::String *)(inited + 40) = v44;
      *(_DWORD *)(inited + 72) = 1061;
      *(_QWORD *)(inited + 104) = &type metadata for Bool;
      *(_BYTE *)(inited + 80) = 1;
      v45 = sub_1000068FC(inited);
      swift_setDeallocating(inited);
      v46 = sub_100006A6C(&qword_1001A32B8);
      swift_arrayDestroy(inited + 32, 2, v46);
      v47 = *(void **)(v2 + v71);
      *(_QWORD *)(v0 + 528) = v47;
      v48 = v47;
      sub_1000ACF4C(v45);
      v50 = v49;
      swift_bridgeObjectRelease(v45);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)(v0 + 536) = isa;
      swift_bridgeObjectRelease(v50);
      *(_QWORD *)(v0 + 56) = v0 + 376;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_100074D18;
      v52 = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 232) = _NSConcreteStackBlock;
      v53 = (_QWORD *)(v0 + 232);
      v53[1] = 0x40000000;
      v53[2] = sub_1000752BC;
      v53[3] = &unk_10017A8D8;
      v53[4] = v52;
      objc_msgSend(v48, "evaluatePolicy:options:reply:", 1025, isa, v53);
      return swift_continuation_await(v28);
    }
    goto LABEL_15;
  }
  swift_release(*(_QWORD *)(v0 + 456));
LABEL_16:
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 416) + 16);
  if (Strong)
  {
    v56 = Strong;
    v58 = *(_QWORD *)(v0 + 440);
    v57 = *(_QWORD *)(v0 + 448);
    sub_10007D3F0(*(_QWORD *)(v0 + 416) + *(_QWORD *)(v0 + 480), v57);
    sub_10007D3F0(v57, v58);
    v59 = v56 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
    swift_beginAccess(v56 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, v0 + 320, 33, 0);
    sub_10007D434(v58, v59);
    swift_endAccess(v0 + 320);
    sub_10009E4A8();
    sub_10007D478(v58);
    swift_unknownObjectRelease(v56);
    sub_10007D478(v57);
  }
  v60 = *(_QWORD *)(v0 + 424);
  v61 = *(_QWORD *)(v0 + 432);
  v62 = *(_QWORD *)(v0 + 416) + *(_QWORD *)(v0 + 480);
  v63 = objc_msgSend(objc_allocWithZone((Class)SFDevice), "init");
  objc_msgSend(v63, "setOsVersion:", *(unsigned __int8 *)(v62 + *(int *)(v61 + 32)));
  sub_100006BD8(v62 + *(int *)(v61 + 24), v60, &qword_1001A42A0);
  v64 = type metadata accessor for UUID(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v60, 1, v64) != 1)
  {
    v67 = *(_QWORD *)(v0 + 424);
    v66 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v67, v64);
  }
  objc_msgSend(v63, "setIdentifier:", v66);

  sub_100075390(v63);
  v68 = *(_QWORD *)(v0 + 440);
  v69 = *(_QWORD *)(v0 + 424);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074AD8()
{
  uint64_t v0;

  return swift_task_switch(sub_100074B34, *(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472));
}

uint64_t sub_100074B34()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_release(*(_QWORD *)(v0 + 456));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.error.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Springboard unlock either failed or got canceled by the user", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 480);
  v6 = *(_QWORD *)(v0 + 432);
  v7 = *(_QWORD *)(v0 + 416);

  v8 = v7 + v5;
  v9 = v7 + v5 + *(int *)(v6 + 72);
  *(_DWORD *)v9 = 10;
  *(_BYTE *)(v9 + 4) = 0;
  v10 = *(void **)(v7 + v5);
  v11 = *(_QWORD *)(v7 + v5 + 8);
  *(_OWORD *)v8 = xmmword_100133A50;
  v12 = *(_BYTE *)(v7 + v5 + 16);
  *(_BYTE *)(v8 + 16) = 3;
  sub_10007D5D0(v10, v11, v12);
  Strong = swift_unknownObjectWeakLoadStrong(v7 + 16);
  v14 = *(_QWORD *)(v0 + 504);
  if (Strong)
  {
    v15 = Strong;
    v17 = *(_QWORD *)(v0 + 440);
    v16 = *(_QWORD *)(v0 + 448);
    sub_10007D3F0(*(_QWORD *)(v0 + 416) + *(_QWORD *)(v0 + 480), v16);
    sub_10007D3F0(v16, v17);
    v18 = v15 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
    swift_beginAccess(v15 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, v0 + 344, 33, 0);
    sub_10007D434(v17, v18);
    swift_endAccess(v0 + 344);
    sub_10009E4A8();
    sub_10007D478(v17);
    swift_errorRelease(v14);
    swift_unknownObjectRelease(v15);
    sub_10007D478(v16);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 504));
  }
  v19 = *(_QWORD *)(v0 + 440);
  v20 = *(_QWORD *)(v0 + 424);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074D18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 544) = v2;
  if (v2)
    v3 = sub_100074FC8;
  else
    v3 = sub_100074DB8;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 464), *(_QWORD *)(v1 + 472));
}

uint64_t sub_100074DB8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  Class isa;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 536);
  v2 = *(void **)(v0 + 528);
  swift_release(*(_QWORD *)(v0 + 456));
  v3 = *(_QWORD *)(v0 + 376);

  swift_bridgeObjectRelease(v3);
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 416) + 16);
  if (Strong)
  {
    v5 = Strong;
    v7 = *(_QWORD *)(v0 + 440);
    v6 = *(_QWORD *)(v0 + 448);
    sub_10007D3F0(*(_QWORD *)(v0 + 416) + *(_QWORD *)(v0 + 480), v6);
    sub_10007D3F0(v6, v7);
    v8 = v5 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
    swift_beginAccess(v5 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, v0 + 320, 33, 0);
    sub_10007D434(v7, v8);
    swift_endAccess(v0 + 320);
    sub_10009E4A8();
    sub_10007D478(v7);
    swift_unknownObjectRelease(v5);
    sub_10007D478(v6);
  }
  v9 = *(_QWORD *)(v0 + 424);
  v10 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 416) + *(_QWORD *)(v0 + 480);
  v12 = objc_msgSend(objc_allocWithZone((Class)SFDevice), "init");
  objc_msgSend(v12, "setOsVersion:", *(unsigned __int8 *)(v11 + *(int *)(v10 + 32)));
  sub_100006BD8(v11 + *(int *)(v10 + 24), v9, &qword_1001A42A0);
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) != 1)
  {
    v16 = *(_QWORD *)(v0 + 424);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v13);
  }
  objc_msgSend(v12, "setIdentifier:", isa);

  sub_100075390(v12);
  v17 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v0 + 424);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074FC8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(void **)(v0 + 536);
  v3 = *(void **)(v0 + 528);
  swift_release(*(_QWORD *)(v0 + 456));
  swift_willThrow(v4);

  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 544);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v30 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue(v8, v0 + 368, v0 + 296);
    v11 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312));
    v13 = v12;
    *(_QWORD *)(v0 + 384) = sub_10001EFA4(v11, v12, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 384, v0 + 392, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v13);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "DTO failed to bio authenticate with error: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 544);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
  }

  v15 = *(_QWORD *)(v0 + 416);
  v16 = v15 + *(_QWORD *)(v0 + 480);
  v17 = v16 + *(int *)(*(_QWORD *)(v0 + 432) + 72);
  *(_DWORD *)v17 = 10;
  *(_BYTE *)(v17 + 4) = 0;
  v18 = *(void **)v16;
  v19 = *(_QWORD *)(v16 + 8);
  *(_OWORD *)v16 = xmmword_100133A50;
  v20 = *(_BYTE *)(v16 + 16);
  *(_BYTE *)(v16 + 16) = 3;
  sub_10007D5D0(v18, v19, v20);
  Strong = swift_unknownObjectWeakLoadStrong(v15 + 16);
  v22 = *(_QWORD *)(v0 + 544);
  if (Strong)
  {
    v23 = Strong;
    v25 = *(_QWORD *)(v0 + 440);
    v24 = *(_QWORD *)(v0 + 448);
    sub_10007D3F0(*(_QWORD *)(v0 + 416) + *(_QWORD *)(v0 + 480), v24);
    sub_10007D3F0(v24, v25);
    v26 = v23 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
    swift_beginAccess(v23 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, v0 + 272, 33, 0);
    sub_10007D434(v25, v26);
    swift_endAccess(v0 + 272);
    sub_10009E4A8();
    sub_10007D478(v25);
    swift_unknownObjectRelease(v23);
    swift_errorRelease(v22);
    sub_10007D478(v24);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 544));
  }

  v27 = *(_QWORD *)(v0 + 440);
  v28 = *(_QWORD *)(v0 + 424);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000752BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100006A6C(&qword_1001A7C30);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    if (a2)
      v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    else
      v10 = 0;
    v11 = v10;
    sub_10005B590((uint64_t)&v11, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40), &qword_1001A5630);
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_100075390(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  uint64_t v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  void (*v31)(uint64_t, uint64_t);
  uint64_t (*v32)(__n128);
  uint64_t v33;
  __n128 v34;
  id v35;
  _UNKNOWN **v36;
  _UNKNOWN **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(id, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t (*)(int, unint64_t), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(void (*)(int, int), uint64_t, uint64_t, uint64_t, __n128);
  __n128 v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t result;
  void (*v75)(uint64_t, __n128);
  uint64_t v76;
  __n128 v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v2 = v1;
  v4 = type metadata accessor for D2DSetupModel(0);
  v5 = __chkstk_darwin(v4);
  v81 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v80 = (char *)&v78 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v78 - v10;
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v12 = type metadata accessor for Logger(0, v9);
  sub_10000E8E8(v12, (uint64_t)qword_1001A60D8);
  v13 = a1;
  v14 = Logger.logObject.getter(v13);
  v16 = static os_log_type_t.default.getter(v14, v15);
  v17 = os_log_type_enabled(v14, v16);
  v79 = v4;
  if (v17)
  {
    v18 = swift_slowAlloc(12, -1);
    v78 = v11;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc(32, -1);
    v82 = (uint64_t)v13;
    v83 = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = sub_100013194(0, &qword_1001A4380, SFDevice_ptr);
    v22 = v13;
    v23 = String.init<A>(reflecting:)(&v82, v21);
    v25 = v24;
    v82 = sub_10001EFA4(v23, v24, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(v25);

    _os_log_impl((void *)&_mh_execute_header, v14, v16, "Start setup with %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    v26 = v19;
    v11 = v78;
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {

  }
  v27 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
  v28 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
  if (v28)
  {
    v29 = v27[1];
    ObjectType = swift_getObjectType(*(_QWORD *)((char *)v2
                                               + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession));
    v31 = *(void (**)(uint64_t, uint64_t))(v29 + 160);
    swift_unknownObjectRetain(v28);
    v31(ObjectType, v29);
    swift_unknownObjectRelease(v28);
  }
  v32 = (uint64_t (*)(__n128))v2[14];
  if (v32)
  {
    v33 = v2[15];
    v34 = swift_retain(v33);
    v35 = (id)v32(v34);
    v37 = v36;
    sub_100012F60((uint64_t)v32, v33);
  }
  else
  {
    v35 = objc_msgSend(objc_allocWithZone((Class)SFDeviceSetupSessioniOS), "init");
    v37 = &off_10017A5B0;
  }
  v38 = (uint64_t)v80;
  v39 = *v27;
  *v27 = v35;
  v27[1] = v37;
  swift_unknownObjectRelease(v39);
  v40 = *v27;
  if (*v27)
  {
    v41 = v27[1];
    v42 = swift_getObjectType(*v27);
    v43 = *(void (**)(id, uint64_t, uint64_t))(v41 + 16);
    v44 = v13;
    swift_unknownObjectRetain(v40);
    v43(v13, v42, v41);
    swift_unknownObjectRelease(v40);
    v45 = *v27;
    if (*v27)
    {
      v46 = v27[1];
      sub_10007D3F0((uint64_t)v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model, (uint64_t)v11);
      v47 = v79;
      v48 = v11[*(int *)(v79 + 32)];
      sub_10007D3F0((uint64_t)v11, v38);
      if (v48 > 0xB)
      {
        v50 = v11;
        v51 = *(_QWORD *)(v38 + *(int *)(v47 + 28) + 8);
        swift_bridgeObjectRetain(v51);
        swift_unknownObjectRetain(v45);
        sub_10007D478(v38);
        if (v51)
        {
          swift_bridgeObjectRelease(v51);
          v49 = 1;
        }
        else
        {
          v49 = 0;
        }
        v11 = v50;
      }
      else
      {
        swift_unknownObjectRetain(v45);
        sub_10007D478(v38);
        v49 = 0;
      }
      v52 = swift_getObjectType(v45);
      sub_10007D478((uint64_t)v11);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 64))(v49, v52, v46);
      swift_unknownObjectRelease(v45);
      v53 = *v27;
      if (*v27)
      {
        v54 = v27[1];
        v55 = swift_getObjectType(*v27);
        v56 = swift_allocObject(&unk_10017A780, 24, 7);
        swift_weakInit(v56 + 16, v2);
        v57 = *(void (**)(uint64_t (*)(int, unint64_t), uint64_t, uint64_t, uint64_t, __n128))(v54 + 112);
        swift_unknownObjectRetain(v53);
        v58 = swift_retain(v56);
        v57(sub_10007D824, v56, v55, v54, v58);
        swift_release(v56);
        swift_unknownObjectRelease(v53);
        v59 = *v27;
        if (*v27)
        {
          v60 = v27[1];
          v61 = swift_getObjectType(*v27);
          v62 = swift_allocObject(&unk_10017A780, 24, 7);
          swift_weakInit(v62 + 16, v2);
          v63 = *(void (**)(void (*)(int, int), uint64_t, uint64_t, uint64_t, __n128))(v60 + 136);
          swift_unknownObjectRetain(v59);
          v64 = swift_retain(v62);
          v63(sub_10007D82C, v62, v61, v60, v64);
          swift_release(v62);
          swift_unknownObjectRelease(v59);
        }
      }
    }
  }
  v65 = v81;
  sub_10007D3F0((uint64_t)v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model, v81);
  v66 = sub_100085DA4();
  sub_10007D478(v65);
  if (v66)
  {
    if (v66 == 1)
    {
      v67 = 0x6C616D726F6ELL;
      v68 = 0xE600000000000000;
    }
    else
    {
      v67 = 0x6572756C696166;
      v68 = 0xE700000000000000;
    }
    v69 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v68, 0x64696C61766E69, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(v68);
    if ((v69 & 1) == 0)
      sub_100079804();
  }
  else
  {
    swift_bridgeObjectRelease(0xE700000000000000);
  }
  v70 = *v27;
  if (*v27)
  {
    v71 = v27[1];
    v72 = swift_getObjectType(*v27);
    v73 = *(void (**)(uint64_t, uint64_t))(v71 + 152);
    swift_unknownObjectRetain(v70);
    v73(v72, v71);
    swift_unknownObjectRelease(v70);
  }
  result = sub_100077238(9);
  v75 = (void (*)(uint64_t, __n128))v2[4];
  if (v75)
  {
    v76 = v2[5];
    v77 = swift_retain(v76);
    v75(1, v77);
    return sub_100012F60((uint64_t)v75, v76);
  }
  return result;
}

uint64_t sub_100075994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(_QWORD, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[24];

  v1 = v0;
  v2 = type metadata accessor for D2DSetupModel(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __chkstk_darwin(v3);
  v8 = &v20[-v7 - 8];
  v9 = v0 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  *(_BYTE *)(v9 + *(int *)(v6 + 52)) = 0;
  v10 = v9 + *(int *)(v6 + 60);
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 0;
  v11 = v0 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
  if (v12)
  {
    v13 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType(v12);
    v15 = *(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 40);
    swift_unknownObjectRetain(v12);
    v15(0, ObjectType, v13);
    swift_unknownObjectRelease(v12);
  }
  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v17 = result;
    sub_10007D3F0(v9, (uint64_t)v8);
    sub_10007D3F0((uint64_t)v8, (uint64_t)v5);
    v18 = v17 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
    swift_beginAccess(v17 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, v20, 33, 0);
    sub_10007D434((uint64_t)v5, v18);
    swift_endAccess(v20);
    sub_10009E4A8();
    sub_10007D478((uint64_t)v5);
    swift_unknownObjectRelease(v17);
    return sub_10007D478((uint64_t)v8);
  }
  return result;
}

void sub_100075B04(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  void (*v41)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v42;
  double v43;
  uint64_t v44;

  v3 = v2;
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v6 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v6, (uint64_t)qword_1001A60D8);
  v7 = swift_bridgeObjectRetain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v43 = *(double *)&v12;
    *(_DWORD *)v11 = 136315138;
    if (IsAppleInternalBuild(v12))
    {
      swift_bridgeObjectRetain(a2);
      v13 = a1;
      v14 = a2;
    }
    else
    {
      v14 = 0xE100000000000000;
      v13 = 42;
    }
    v42 = sub_10001EFA4(v13, v14, (uint64_t *)&v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "Visual Auth scanned code: %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v15 = mach_absolute_time();
  v16 = v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  v17 = type metadata accessor for D2DSetupModel(0);
  v18 = v17;
  if (v15 >= *(_QWORD *)(v16 + *(int *)(v17 + 56)))
  {
    v25 = *(int *)(v17 + 52);
    if (*(_BYTE *)(v16 + v25) == 1)
    {
      v26 = Logger.logObject.getter(v17);
      v28 = static os_log_type_t.default.getter(v26, v27);
      if (os_log_type_enabled(v26, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v28, "Visual Auth ignore scanned code while trying previous code", v29, 2u);
        swift_slowDealloc(v29, -1, -1);
      }

    }
    else
    {
      *(_BYTE *)(v16 + v25) = 1;
      v30 = swift_bridgeObjectRetain_n(a2, 2);
      v31 = Logger.logObject.getter(v30);
      v33 = static os_log_type_t.default.getter(v31, v32);
      if (os_log_type_enabled(v31, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc(12, -1);
        v35 = swift_slowAlloc(32, -1);
        v43 = *(double *)&v35;
        *(_DWORD *)v34 = 136315138;
        if (IsAppleInternalBuild(v35))
        {
          swift_bridgeObjectRetain(a2);
          v36 = a1;
          v37 = a2;
        }
        else
        {
          v37 = 0xE100000000000000;
          v36 = 42;
        }
        v42 = sub_10001EFA4(v36, v37, (uint64_t *)&v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v34 + 4, v34 + 12);
        swift_bridgeObjectRelease_n(a2, 2);
        swift_bridgeObjectRelease(v37);
        _os_log_impl((void *)&_mh_execute_header, v31, v33, "Try PIN '%s'", v34, 0xCu);
        swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v34, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
      }
      v38 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
      if (v38)
      {
        v39 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession + 8);
        ObjectType = swift_getObjectType(v38);
        v41 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v39 + 168);
        swift_unknownObjectRetain(v38);
        v41(a1, a2, ObjectType, v39);
        swift_unknownObjectRelease(v38);
      }
    }
  }
  else
  {
    swift_retain(v2);
    v20 = Logger.logObject.getter(v19);
    v22 = static os_log_type_t.default.getter(v20, v21);
    if (os_log_type_enabled(v20, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v23 = 134217984;
      v24 = *(_QWORD *)(v16 + *(int *)(v18 + 56));
      if (v24 < v15)
      {
        __break(1u);
      }
      else
      {
        v43 = UpTicksToSecondsF(v24 - v15);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v23 + 4, v23 + 12);
        swift_release(v3);
        _os_log_impl((void *)&_mh_execute_header, v20, v22, "Visual Auth wait for next allowed time (%f seconds)", v23, 0xCu);
        swift_slowDealloc(v23, -1, -1);

      }
    }
    else
    {

      swift_release(v3);
    }
  }
}

void sub_100075FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = type metadata accessor for D2DSetupModel(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007D3F0(v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model, (uint64_t)v8);
  v9 = sub_100085DA4();
  sub_10007D478((uint64_t)v8);
  if (v9)
  {
    if (v9 == 1)
    {
      v10 = 0x6C616D726F6ELL;
      v11 = 0xE600000000000000;
    }
    else
    {
      v10 = 0x6572756C696166;
      v11 = 0xE700000000000000;
    }
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, 0x64696C61766E69, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(v11);
    if ((v13 & 1) == 0)
    {
      sub_1000762B4(a1, a2);
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease(0xE700000000000000);
  }
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v14 = type metadata accessor for Logger(0, v12);
  sub_10000E8E8(v14, (uint64_t)qword_1001A60D8);
  v15 = swift_bridgeObjectRetain_n(a2, 2);
  v16 = Logger.logObject.getter(v15);
  v18 = static os_log_type_t.default.getter(v16, v17);
  if (os_log_type_enabled(v16, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v28 = v20;
    *(_DWORD *)v19 = 136315138;
    if (IsAppleInternalBuild())
    {
      swift_bridgeObjectRetain(a2);
      v21 = a1;
      v22 = a2;
    }
    else
    {
      v22 = 0xE100000000000000;
      v21 = 42;
    }
    v27 = sub_10001EFA4(v21, v22, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease_n(a2, 2);
    _os_log_impl((void *)&_mh_execute_header, v16, v18, "Try PIN '%s'", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a2, 2);
  }

  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
  if (v23)
  {
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession + 8);
    ObjectType = swift_getObjectType(v23);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 168);
    swift_unknownObjectRetain(v23);
    v26(a1, a2, ObjectType, v24);
    swift_unknownObjectRelease(v23);
  }
}

uint64_t sub_1000762B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  __n128 v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[5];
  _QWORD *v35;

  v30 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)v29 - v14;
  sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  static DispatchTime.now()();
  + infix(_:_:)(v13, 1.0);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  v19 = swift_allocObject(&unk_10017A780, 24, 7);
  swift_weakInit(v19 + 16, v29[1]);
  v20 = (_QWORD *)swift_allocObject(&unk_10017A7F8, 40, 7);
  v21 = v30;
  v20[2] = v19;
  v20[3] = v21;
  v20[4] = a2;
  aBlock[4] = sub_10007D574;
  v35 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001BB50;
  aBlock[3] = &unk_10017A810;
  v22 = _Block_copy(aBlock);
  v23 = v35;
  swift_bridgeObjectRetain(a2);
  v24 = swift_release(v23);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_10007D580();
  v26 = sub_100006A6C((uint64_t *)&unk_1001A4330);
  v27 = sub_100012F94();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v3, v25);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

void sub_100076550(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __n128 v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v2 = sub_100006A6C(&qword_1001A6400);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 16) & ~v5;
  v7 = swift_allocObject(&unk_10017A900, v6 + v4, v5 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_10007D7E4;
  v11 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007275C;
  aBlock[3] = &unk_10017A918;
  v8 = _Block_copy(aBlock);
  v9 = swift_release(v11);
  SBSRequestPasscodeUnlockUI(v8, v9);
  _Block_release(v8);
}

uint64_t sub_100076668(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v8;
  id v9;

  if ((a1 & 1) != 0 || !sub_1000612BC())
  {
    v8 = sub_100006A6C(&qword_1001A6400);
    return CheckedContinuation.resume(returning:)(v8, v8);
  }
  else
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSOSStatusErrorDomain);
    v2 = v1;
    v3 = objc_allocWithZone((Class)NSError);
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v2);
    v5 = objc_msgSend(v3, "initWithDomain:code:userInfo:", v4, -6723, 0);

    v9 = v5;
    v6 = sub_100006A6C(&qword_1001A6400);
    return CheckedContinuation.resume(throwing:)(&v9, v6);
  }
}

void sub_100076738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for D2DSetupModel(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v8 = (char *)aBlock - v7;
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v9 = type metadata accessor for Logger(0, v6);
  v10 = sub_10000E8E8(v9, (uint64_t)qword_1001A60D8);
  v11 = Logger.logObject.getter(v10);
  v13 = static os_log_type_t.default.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v13, "WiFi powering on", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = WiFiManagerClientCreate(0, 0);
  if (v15)
    v15 = WiFiManagerClientSetPower(v15, 1);
  v16 = Logger.logObject.getter(v15);
  v18 = static os_log_type_t.default.getter(v16, v17);
  if (os_log_type_enabled(v16, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v18, "WiFi start reachability", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = objc_msgSend(objc_allocWithZone((Class)CUReachabilityMonitor), "init");
  objc_msgSend(v20, "setTimeout:", 60.0);
  v21 = swift_allocObject(&unk_10017A7A8, 24, 7);
  *(_QWORD *)(v21 + 16) = v20;
  aBlock[4] = sub_100055D98;
  v30 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000AC624;
  aBlock[3] = &unk_10017A7C0;
  v22 = _Block_copy(aBlock);
  v23 = v30;
  v24 = v20;
  objc_msgSend(v24, "setCompletionHandler:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);
  objc_msgSend(v24, "activate");
  v25 = v1 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  *(_BYTE *)(v25 + *(int *)(v2 + 88)) = 1;
  *(_BYTE *)(v25 + *(int *)(v2 + 80)) = 1;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v27 = Strong;
    sub_10007D3F0(v25, (uint64_t)v8);
    sub_10007D3F0((uint64_t)v8, (uint64_t)v5);
    v28 = v27 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
    swift_beginAccess(v27 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, aBlock, 33, 0);
    sub_10007D434((uint64_t)v5, v28);
    swift_endAccess(aBlock);
    sub_10009E4A8();
    sub_10007D478((uint64_t)v5);

    swift_unknownObjectRelease(v27);
    sub_10007D478((uint64_t)v8);
  }
  else
  {

  }
}

void sub_100076A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  id v10;
  uint64_t v11;
  Swift::String v12;
  void *object;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  NSString v37;
  id v38;
  Class isa;
  uint64_t v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  NSURL *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  void *v58;
  char *v59;
  char *v60;
  unint64_t v61;
  int64_t v62;
  uint64_t v63;
  char *v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;

  v1 = sub_100006A6C(&qword_1001A3618);
  v2 = __chkstk_darwin(v1);
  v59 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v60 = (char *)&v59 - v4;
  v63 = type metadata accessor for URLQueryItem(0);
  v5 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v64 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006A6C(&qword_1001A63D0);
  inited = swift_initStackObject(v7, &v68);
  *(_OWORD *)(inited + 16) = xmmword_100133A70;
  strcpy((char *)(inited + 32), "Classification");
  *(_BYTE *)(inited + 47) = -18;
  *(_QWORD *)(inited + 48) = 0x2073756F69726553;
  *(_QWORD *)(inited + 56) = 0xEB00000000677542;
  *(_QWORD *)(inited + 64) = 0x6E656E6F706D6F43;
  *(_QWORD *)(inited + 72) = 0xEB00000000444974;
  *(_QWORD *)(inited + 80) = 0x343836383637;
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  strcpy((char *)(inited + 96), "ComponentName");
  *(_WORD *)(inited + 110) = -4864;
  *(_QWORD *)(inited + 112) = 0x74696D69786F7250;
  *(_QWORD *)(inited + 120) = 0xEF70757465532079;
  *(_QWORD *)(inited + 128) = 0xD000000000000010;
  *(_QWORD *)(inited + 136) = 0x800000010013A800;
  *(_QWORD *)(inited + 144) = 7105633;
  *(_QWORD *)(inited + 152) = 0xE300000000000000;
  *(_QWORD *)(inited + 160) = 0xD000000000000014;
  *(_QWORD *)(inited + 168) = 0x800000010013A820;
  *(_QWORD *)(inited + 176) = 0xD000000000000028;
  *(_QWORD *)(inited + 184) = 0x800000010013A840;
  *(_QWORD *)(inited + 192) = 0x7364726F7779654BLL;
  *(_QWORD *)(inited + 200) = 0xE800000000000000;
  *(_QWORD *)(inited + 208) = 0x323231383537;
  *(_QWORD *)(inited + 216) = 0xE600000000000000;
  *(_QWORD *)(inited + 224) = 0x6375646F72706552;
  *(_QWORD *)(inited + 232) = 0xEF7974696C696269;
  strcpy((char *)(inited + 240), "I Didn't Try");
  *(_BYTE *)(inited + 253) = 0;
  *(_WORD *)(inited + 254) = -5120;
  *(_QWORD *)(inited + 256) = 0x656C746954;
  *(_QWORD *)(inited + 264) = 0xE500000000000000;
  v66 = 0;
  v67 = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease(v67);
  v66 = 0xD00000000000001ELL;
  v67 = 0x800000010013A870;
  v9 = v0 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  v65 = *(id *)(v9 + *(int *)(type metadata accessor for D2DSetupModel(0) + 76));
  v10 = v65;
  v11 = sub_100006A6C(&qword_1001A63D8);
  v12._countAndFlagsBits = String.init<A>(reflecting:)(&v65, v11);
  object = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  v14 = v67;
  *(_QWORD *)(inited + 272) = v66;
  *(_QWORD *)(inited + 280) = v14;
  v15 = sub_100004804(inited);
  v16 = 0;
  v17 = *(_QWORD *)(v15 + 64);
  v61 = v15 + 64;
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v62 = (unint64_t)(v18 + 63) >> 6;
  v21 = _swiftEmptyArrayStorage;
  if ((v19 & v17) == 0)
    goto LABEL_5;
LABEL_4:
  v22 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (i = v22 | (v16 << 6); ; i = __clz(__rbit64(v25)) + (v16 << 6))
  {
    v27 = 16 * i;
    v28 = (uint64_t *)(*(_QWORD *)(v15 + 48) + v27);
    v29 = *v28;
    v30 = v28[1];
    v31 = (uint64_t *)(*(_QWORD *)(v15 + 56) + v27);
    v33 = *v31;
    v32 = v31[1];
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v32);
    URLQueryItem.init(name:value:)(v29, v30, v33, v32);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v30);
    if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
      v21 = (_QWORD *)sub_1000C8764(0, v21[2] + 1, 1, (unint64_t)v21);
    v35 = v21[2];
    v34 = v21[3];
    if (v35 >= v34 >> 1)
      v21 = (_QWORD *)sub_1000C8764(v34 > 1, v35 + 1, 1, (unint64_t)v21);
    v21[2] = v35 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v35, v64, v63);
    if (v20)
      goto LABEL_4;
LABEL_5:
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v62)
      break;
    v25 = *(_QWORD *)(v61 + 8 * v24);
    ++v16;
    if (v25)
      goto LABEL_18;
    v16 = v24 + 1;
    if (v24 + 1 >= v62)
      break;
    v25 = *(_QWORD *)(v61 + 8 * v16);
    if (v25)
      goto LABEL_18;
    v16 = v24 + 2;
    if (v24 + 2 >= v62)
      break;
    v25 = *(_QWORD *)(v61 + 8 * v16);
    if (v25)
      goto LABEL_18;
    v26 = v24 + 3;
    if (v26 >= v62)
      break;
    v25 = *(_QWORD *)(v61 + 8 * v26);
    if (!v25)
    {
      while (1)
      {
        v16 = v26 + 1;
        if (__OFADD__(v26, 1))
          break;
        if (v16 >= v62)
          goto LABEL_25;
        v25 = *(_QWORD *)(v61 + 8 * v16);
        ++v26;
        if (v25)
          goto LABEL_18;
      }
LABEL_41:
      __break(1u);
LABEL_42:
      swift_once(&qword_1001A3018, sub_10007279C);
      goto LABEL_36;
    }
    v16 = v26;
LABEL_18:
    v20 = (v25 - 1) & v25;
  }
LABEL_25:
  swift_release(v15);
  v36 = objc_allocWithZone((Class)NSURLComponents);
  v37 = String._bridgeToObjectiveC()();
  v20 = (unint64_t)objc_msgSend(v36, "initWithString:", v37);

  if (v20)
  {
    v38 = (id)v20;
    swift_bridgeObjectRetain(v21);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v21);
    objc_msgSend(v38, "setQueryItems:", isa);

  }
  v40 = (uint64_t)v60;
  if (!UIApp)
  {
    __break(1u);
    return;
  }
  v41 = UIApp;
  swift_bridgeObjectRelease(v21);
  if (v20)
  {
    v42 = objc_msgSend((id)v20, "URL");
    if (v42)
    {
      v43 = v42;
      v44 = (uint64_t)v59;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v42);

      v45 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
    }
    else
    {
      v45 = type metadata accessor for URL(0);
      v44 = (uint64_t)v59;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v59, 1, 1, v45);
    }
    sub_10005B590(v44, v40, &qword_1001A3618);
    type metadata accessor for URL(0);
    v48 = v40;
    v49 = *(_QWORD *)(v45 - 8);
    v47 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v48, 1, v45) != 1)
    {
      URL._bridgeToObjectiveC()(v50);
      v47 = v51;
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v45);
    }
  }
  else
  {
    v46 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v40, 1, 1, v46);
    v47 = 0;
  }
  objc_msgSend(v41, "openURL:withCompletionHandler:", v47, 0);

  if (qword_1001A3018 != -1)
    goto LABEL_42;
LABEL_36:
  v53 = type metadata accessor for Logger(0, v52);
  v54 = sub_10000E8E8(v53, (uint64_t)qword_1001A60D8);
  v55 = Logger.logObject.getter(v54);
  v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v57 = 0;
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "Report Bug complete", v57, 2u);
    swift_slowDealloc(v57, -1, -1);
    v58 = (void *)v20;
  }
  else
  {
    v58 = v55;
    v55 = v20;
  }

}

uint64_t sub_100077238(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  NSString v33;
  unint64_t v34;
  Class isa;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  char *v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char v72[136];

  v3 = sub_100006A6C(&qword_1001A42A0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v68 = (char *)&v59 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v59 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v59 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v59 - v15;
  v17 = v1 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  result = type metadata accessor for D2DSetupModel(0);
  v19 = *(int *)(result + 92);
  if ((*(_BYTE *)(v17 + v19) & 1) != 0)
    return result;
  v20 = (int *)result;
  *(_BYTE *)(v17 + v19) = 1;
  sub_100006BD8(v17 + *(int *)(result + 36), (uint64_t)v14, &qword_1001A42A0);
  v21 = type metadata accessor for UUID(0);
  v22 = *(_QWORD *)(v21 - 8);
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v67(v14, 1, v21) == 1)
  {
    UUID.init(uuidString:)(0, 0xE000000000000000);
    sub_10000D858((uint64_t)v14, &qword_1001A42A0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v14, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
  }
  v23 = mach_absolute_time();
  v24 = *(_QWORD *)(v17 + v20[12]);
  v25 = v23 >= v24;
  v26 = v23 - v24;
  if (!v25)
  {
    __break(1u);
LABEL_19:
    swift_once(&qword_1001A3018, sub_10007279C);
    goto LABEL_11;
  }
  v62 = v22;
  v64 = a1;
  v65 = v1;
  v63 = UpTicksToMilliseconds(v26);
  v27 = String._bridgeToObjectiveC()();
  v28 = sub_100006A6C(&qword_1001A63C0);
  inited = swift_initStackObject(v28, v72);
  *(_OWORD *)(inited + 16) = xmmword_100133A80;
  *(_QWORD *)(inited + 32) = 6580595;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  v66 = v16;
  sub_100006BD8((uint64_t)v16, (uint64_t)v11, &qword_1001A42A0);
  v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v67)(v11, 1, v21);
  if ((_DWORD)v30 == 1)
  {
    sub_10000D858((uint64_t)v11, &qword_1001A42A0);
    v31 = 0xE000000000000000;
  }
  else
  {
    UUID.uuidString.getter(v30);
    v31 = v32;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v11, v21);
  }
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  *(_QWORD *)(inited + 48) = v33;
  strcpy((char *)(inited + 56), "smoothedRSSI");
  *(_BYTE *)(inited + 69) = 0;
  *(_WORD *)(inited + 70) = -5120;
  *(NSNumber *)(inited + 72) = Int32._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 80) = 0x6E6F69746361;
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  *(NSNumber *)(inited + 96) = Int32._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 104) = 0x734D72657375;
  *(_QWORD *)(inited + 112) = 0xE600000000000000;
  *(NSNumber *)(inited + 120) = UInt64._bridgeToObjectiveC()();
  v34 = sub_10000448C(inited);
  sub_100013194(0, (unint64_t *)&qword_1001A7260, NSObject_ptr);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v34);
  SFMetricsLog(v27, isa);

  v11 = v68;
  if (qword_1001A3018 != -1)
    goto LABEL_19;
LABEL_11:
  v37 = type metadata accessor for Logger(0, v36);
  sub_10000E8E8(v37, (uint64_t)qword_1001A60D8);
  v38 = (uint64_t)v66;
  sub_100006BD8((uint64_t)v66, (uint64_t)v11, &qword_1001A42A0);
  v39 = v65;
  v40 = swift_retain_n(v65, 4);
  v41 = Logger.logObject.getter(v40);
  v43 = static os_log_type_t.default.getter(v41, v42);
  if (os_log_type_enabled(v41, (os_log_type_t)v43))
  {
    v61 = v43;
    v44 = swift_slowAlloc(44, -1);
    v60 = swift_slowAlloc(64, -1);
    v71 = v60;
    *(_DWORD *)v44 = 136316162;
    sub_100006BD8((uint64_t)v11, (uint64_t)v6, &qword_1001A42A0);
    v45 = ((uint64_t (*)(char *, uint64_t, uint64_t))v67)(v6, 1, v21);
    if ((_DWORD)v45 == 1)
    {
      sub_10000D858((uint64_t)v6, &qword_1001A42A0);
      v69 = 0;
      v70 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v70);
      v46 = 0x8000000100136820;
      v47 = 0xD000000000000015;
    }
    else
    {
      v47 = UUID.uuidString.getter(v45);
      v46 = v50;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v6, v21);
    }
    v69 = sub_10001EFA4(v47, v46, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v44 + 4, v44 + 12);
    swift_bridgeObjectRelease(v46);
    sub_10000D858((uint64_t)v11, &qword_1001A42A0);
    *(_WORD *)(v44 + 12) = 1024;
    v51 = *(_DWORD *)(v17 + v20[10]);
    v52 = v65;
    swift_release(v65);
    LODWORD(v69) = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, (char *)&v69 + 4, v44 + 14, v44 + 18);
    swift_release(v52);
    *(_WORD *)(v44 + 18) = 2080;
    LODWORD(v69) = v64;
    type metadata accessor for SVSUserActionType(0);
    v54 = String.init<A>(reflecting:)(&v69, v53);
    v56 = v55;
    v69 = sub_10001EFA4(v54, v55, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v44 + 20, v44 + 28);
    swift_bridgeObjectRelease(v56);
    *(_WORD *)(v44 + 28) = 2048;
    v69 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v44 + 30, v44 + 38);
    *(_WORD *)(v44 + 38) = 1024;
    v57 = *(_DWORD *)(v17 + v20[11]);
    swift_release(v52);
    LODWORD(v69) = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, (char *)&v69 + 4, v44 + 40, v44 + 44);
    swift_release(v52);
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v61, "iOSSetup: Start, ID %s, RSSI %d, action %s, userMs %llu, badPIN %u", (uint8_t *)v44, 0x2Cu);
    v58 = v60;
    swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1, -1);
    swift_slowDealloc(v44, -1, -1);

    v49 = (uint64_t)v66;
  }
  else
  {

    swift_release_n(v39, 4, v48);
    sub_10000D858((uint64_t)v11, &qword_1001A42A0);
    v49 = v38;
  }
  return sub_10000D858(v49, &qword_1001A42A0);
}

uint64_t *sub_100077960(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_100013338((uint64_t)(v2 + 2), a2);
  sub_100012F60(v2[4], v2[5]);
  sub_100012F60(v2[6], v2[7]);
  sub_100012F60(v2[8], v2[9]);
  sub_100012F60(v2[10], v2[11]);
  sub_100012F60(v2[12], v2[13]);
  sub_100012F60(v2[14], v2[15]);
  sub_100012F60(v2[16], v2[17]);
  sub_100012F60(v2[18], v2[19]);
  sub_10007D478((uint64_t)v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model);
  swift_unknownObjectRelease(*(uint64_t *)((char *)v2
                                        + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession));
  swift_unknownObjectRelease(*(uint64_t *)((char *)v2
                                        + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_migrationController));

  return v2;
}

uint64_t sub_1000779FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100077960(a1, a2);
  return swift_deallocClassInstance(v2, *(unsigned int *)(*(_QWORD *)v2 + 48), *(unsigned __int16 *)(*(_QWORD *)v2 + 52));
}

uint64_t sub_100077A20(int a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  _BYTE v9[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    if (a2)
      v8 = a2;
    else
      v8 = sub_10000434C((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain(a2);
    sub_100077AB8(a1, v8);
    swift_release(v7);
    return swift_bridgeObjectRelease(v8);
  }
  return result;
}

void sub_100077AB8(int a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  const char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  char *v46;
  uint64_t v47;
  int v48;
  void *v49;
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t ObjectType;
  uint64_t (*v56)(uint64_t, uint64_t);
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(void *, uint64_t, uint64_t);
  unint64_t v62;
  char v63;
  float v64;
  NSObject *v65;
  uint64_t v66;
  os_log_type_t v67;
  uint8_t *v68;
  void (*v69)(__n128);
  uint64_t v70;
  NSString v71;
  NSString v72;
  uint64_t Int64;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  uint64_t v77;
  os_log_type_t v78;
  uint8_t *v79;
  __n128 v80;
  NSObject *v81;
  uint64_t v82;
  os_log_type_t v83;
  uint8_t *v84;
  char v85;
  char v86;
  unint64_t v87;
  char v88;
  unint64_t v89;
  char v90;
  unint64_t v91;
  char v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char *v98;
  id v99;
  char *v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  int v106;
  id v107;
  char v108;
  char *v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  char *v113;
  void *v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  char *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  uint64_t v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  char *v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  NSObject *v138;
  uint64_t v139;
  os_log_type_t v140;
  uint8_t *v141;
  _QWORD *v142;
  id v143;
  _QWORD *v144;
  id v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  NSObject *v152;
  uint64_t v153;
  os_log_type_t v154;
  uint8_t *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  const char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  uint8_t *v178;
  os_log_type_t v179;
  uint8_t *v180;
  const char *v181;
  unint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t Strong;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  uint64_t v191;
  id v192;
  uint64_t v193;
  id v194;
  char v195;
  uint64_t v196;
  unint64_t v197;
  char *v198;
  void *v199;
  uint64_t v200;
  char v201;
  __n128 v202;
  void *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  __n128 v209;
  char *v210;
  unint64_t v211;
  uint64_t v212;
  unint64_t v213;
  char *v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  void *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(uint64_t, uint64_t);
  uint64_t v223;
  id v224;
  void *v225;
  int v226;
  __n128 v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  _QWORD *v241;
  char *v242;
  _QWORD *aBlock;
  _QWORD v244[4];
  uint64_t v245;
  id v246[2];
  __int128 v247;
  __int128 v248;

  v3 = v2;
  LODWORD(v242) = a1;
  v5 = (int *)type metadata accessor for D2DSetupModel(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v229 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v229 - v10;
  __chkstk_darwin(v9);
  v239 = (uint64_t)&v229 - v12;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v237 = *(_QWORD *)(v13 - 8);
  v238 = v13;
  __chkstk_darwin(v13);
  v236 = (char *)&v229 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = type metadata accessor for DispatchQoS(0);
  v234 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin(v235);
  v233 = (char *)&v229 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = type metadata accessor for DispatchTime(0);
  v230 = *(_QWORD *)(v232 - 8);
  v16 = __chkstk_darwin(v232);
  v229 = (char *)&v229 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v231 = (char *)&v229 - v19;
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v20 = type metadata accessor for Logger(0, v18);
  sub_10000E8E8(v20, (uint64_t)qword_1001A60D8);
  v21 = swift_bridgeObjectRetain_n(a2, 2);
  v22 = Logger.logObject.getter(v21);
  v24 = static os_log_type_t.default.getter(v22, v23);
  if (os_log_type_enabled(v22, v24))
  {
    v25 = swift_slowAlloc(22, -1);
    v241 = v3;
    v26 = v25;
    v27 = (_QWORD *)swift_slowAlloc(64, -1);
    v240 = v11;
    v28 = v27;
    aBlock = v27;
    *(_DWORD *)v26 = 136315394;
    v29 = sub_10007D888((int)v242);
    v30 = String.init(cString:)(v29);
    v32 = v31;
    *(_QWORD *)&v247 = sub_10001EFA4(v30, v31, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, (char *)&v247 + 8, v26 + 4, v26 + 12);
    swift_bridgeObjectRelease(v32);
    *(_WORD *)(v26 + 12) = 2080;
    *(_QWORD *)&v247 = a2;
    swift_bridgeObjectRetain(a2);
    v33 = sub_100006A6C(&qword_1001A6408);
    v34 = String.init<A>(reflecting:)(&v247, v33);
    v36 = v35;
    *(_QWORD *)&v247 = sub_10001EFA4(v34, v35, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, (char *)&v247 + 8, v26 + 14, v26 + 22);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease_n(a2, 2);
    _os_log_impl((void *)&_mh_execute_header, v22, v24, "Progress: %s %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
    v37 = v28;
    v11 = v240;
    swift_slowDealloc(v37, -1, -1);
    v38 = v26;
    v3 = v241;
    swift_slowDealloc(v38, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a2, 2);
  }

  v40 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
  v41 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
  if (!v41)
    return;
  if ((int)v242 > 399)
  {
    if ((int)v242 <= 999)
    {
      switch((int)v242)
      {
        case 400:
          v42 = Logger.logObject.getter(v39);
          v44 = static os_log_type_t.default.getter(v42, v43);
          if (os_log_type_enabled(v42, v44))
          {
            v45 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v45 = 0;
            _os_log_impl((void *)&_mh_execute_header, v42, v44, "Stop setup from target", v45, 2u);
            swift_slowDealloc(v45, -1, -1);
          }

          v46 = (char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
          v47 = (uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + v5[18];
          v48 = 17;
          goto LABEL_13;
        case 401:
          v81 = Logger.logObject.getter(v39);
          v83 = static os_log_type_t.default.getter(v81, v82);
          if (os_log_type_enabled(v81, v83))
          {
            v84 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v84 = 0;
            _os_log_impl((void *)&_mh_execute_header, v81, v83, "PIN pair from target", v84, 2u);
            swift_slowDealloc(v84, -1, -1);
          }

          sub_100075994();
          return;
        case 410:
          v71 = String._bridgeToObjectiveC()();
          v72 = String._bridgeToObjectiveC()();
          Int64 = CFPrefs_GetInt64(v71, v72, 0);

          if (Int64)
            sub_10007A420();
          else
            sub_10007AC9C(v74, v75);
          goto LABEL_140;
        case 430:
          v65 = Logger.logObject.getter(v39);
          v67 = static os_log_type_t.default.getter(v65, v66);
          if (os_log_type_enabled(v65, v67))
          {
            v68 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v68 = 0;
            _os_log_impl((void *)&_mh_execute_header, v65, v67, "D2D eSim external 2FA: START", v68, 2u);
            swift_slowDealloc(v68, -1, -1);
          }

          v69 = (void (*)(__n128))v3[10];
          if (!v69)
            goto LABEL_140;
          v70 = v3[11];
          goto LABEL_56;
        case 431:
          v76 = Logger.logObject.getter(v39);
          v78 = static os_log_type_t.default.getter(v76, v77);
          if (os_log_type_enabled(v76, v78))
          {
            v79 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v79 = 0;
            _os_log_impl((void *)&_mh_execute_header, v76, v78, "D2D eSim external 2FA: END", v79, 2u);
            swift_slowDealloc(v79, -1, -1);
          }

          v69 = (void (*)(__n128))v3[12];
          if (!v69)
            goto LABEL_140;
          v70 = v3[13];
LABEL_56:
          v80 = swift_retain(v70);
          v69(v80);
          goto LABEL_57;
        default:
          return;
      }
    }
    if ((int)v242 > 1099)
    {
      switch((_DWORD)v242)
      {
        case 0x44C:
          strcpy((char *)v246, "oneTimeCode");
          HIDWORD(v246[1]) = -352321536;
          AnyHashable.init<A>(_:)(&aBlock, v246, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(a2 + 16) && (v89 = sub_100005CF4((uint64_t)&aBlock), (v90 & 1) != 0))
          {
            sub_10000D894(*(_QWORD *)(a2 + 56) + 32 * v89, (uint64_t)&v247);
          }
          else
          {
            v247 = 0u;
            v248 = 0u;
          }
          sub_100006B34((uint64_t)&aBlock);
          if (*((_QWORD *)&v248 + 1))
          {
            v117 = sub_100013194(0, &qword_1001A6410, NSString_ptr);
            if ((swift_dynamicCast(v246, &v247, (char *)&type metadata for Any + 8, v117, 6) & 1) != 0)
            {
              v118 = (char *)v246[0];
              v119 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(v246[0]);
              v121 = v120;
              v122 = swift_bridgeObjectRetain_n(v120, 2);
              v123 = Logger.logObject.getter(v122);
              v125 = static os_log_type_t.default.getter(v123, v124);
              if (os_log_type_enabled(v123, v125))
              {
                v241 = v3;
                v126 = (uint8_t *)swift_slowAlloc(12, -1);
                v127 = swift_slowAlloc(32, -1);
                v242 = v8;
                aBlock = v119;
                v128 = v127;
                *(_QWORD *)&v247 = v127;
                *(_DWORD *)v126 = 136315138;
                v244[0] = v121;
                swift_bridgeObjectRetain(v121);
                v129 = String.init<A>(reflecting:)(&aBlock, &type metadata for String);
                v240 = v118;
                v130 = v119;
                v131 = v11;
                v133 = v132;
                aBlock = (_QWORD *)sub_10001EFA4(v129, v132, (uint64_t *)&v247);
                v3 = v241;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v244, v126 + 4, v126 + 12);
                v134 = v133;
                v11 = v131;
                v119 = v130;
                swift_bridgeObjectRelease(v134);
                swift_bridgeObjectRelease_n(v121, 2);
                _os_log_impl((void *)&_mh_execute_header, v123, v125, "Got OTC: %s)", v126, 0xCu);
                swift_arrayDestroy(v128, 1, (char *)&type metadata for Any + 8);
                v135 = v128;
                v8 = v242;
                swift_slowDealloc(v135, -1, -1);
                swift_slowDealloc(v126, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n(v121, 2);
              }
              v46 = (char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
              v49 = *(void **)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model);
              v50 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + 8);
              *(_QWORD *)v46 = v119;
              *((_QWORD *)v46 + 1) = v121;
              v85 = v46[16];
              v86 = 1;
              goto LABEL_63;
            }
          }
          else
          {
            sub_10000D858((uint64_t)&v247, &qword_1001A4340);
          }
          v164 = swift_bridgeObjectRetain_n(a2, 2);
          v152 = Logger.logObject.getter(v164);
          v154 = static os_log_type_t.error.getter(v152);
          if (os_log_type_enabled(v152, v154))
          {
            v155 = (uint8_t *)swift_slowAlloc(12, -1);
            v156 = (_QWORD *)swift_slowAlloc(32, -1);
            *(_DWORD *)v155 = 136315138;
            v242 = (char *)(v155 + 4);
            aBlock = v156;
            *(_QWORD *)&v247 = a2;
            swift_bridgeObjectRetain(a2);
            v165 = sub_100006A6C(&qword_1001A6408);
            v166 = String.init<A>(reflecting:)(&v247, v165);
            v167 = v8;
            v169 = v168;
            *(_QWORD *)&v247 = sub_10001EFA4(v166, v168, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, (char *)&v247 + 8, v242, v155 + 12);
            v170 = v169;
            v8 = v167;
            swift_bridgeObjectRelease(v170);
            swift_bridgeObjectRelease_n(a2, 2);
            v163 = "missing OTC: %s";
            goto LABEL_127;
          }
          break;
        case 0x7D0:
          strcpy((char *)v246, "viewController");
          HIBYTE(v246[1]) = -18;
          AnyHashable.init<A>(_:)(&aBlock, v246, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(a2 + 16) && (v87 = sub_100005CF4((uint64_t)&aBlock), (v88 & 1) != 0))
          {
            sub_10000D894(*(_QWORD *)(a2 + 56) + 32 * v87, (uint64_t)&v247);
          }
          else
          {
            v247 = 0u;
            v248 = 0u;
          }
          sub_100006B34((uint64_t)&aBlock);
          if (*((_QWORD *)&v248 + 1))
          {
            v112 = sub_100013194(0, (unint64_t *)&qword_1001A3A10, UIViewController_ptr);
            if ((swift_dynamicCast(v246, &v247, (char *)&type metadata for Any + 8, v112, 6) & 1) != 0)
            {
              v113 = (char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
              v114 = *(void **)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model);
              v115 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + 8);
              *(id *)v113 = v246[0];
              *((_QWORD *)v113 + 1) = 0;
              v116 = v113[16];
              v113[16] = 2;
              sub_10007D5D0(v114, v115, v116);
              v113[17] = 1;
              goto LABEL_140;
            }
          }
          else
          {
            sub_10000D858((uint64_t)&v247, &qword_1001A4340);
          }
          v151 = swift_bridgeObjectRetain_n(a2, 2);
          v152 = Logger.logObject.getter(v151);
          v154 = static os_log_type_t.default.getter(v152, v153);
          if (os_log_type_enabled(v152, v154))
          {
            v155 = (uint8_t *)swift_slowAlloc(12, -1);
            v156 = (_QWORD *)swift_slowAlloc(32, -1);
            *(_DWORD *)v155 = 136315138;
            v242 = (char *)(v155 + 4);
            aBlock = v156;
            *(_QWORD *)&v247 = a2;
            swift_bridgeObjectRetain(a2);
            v157 = sub_100006A6C(&qword_1001A6408);
            v158 = String.init<A>(reflecting:)(&v247, v157);
            v159 = v8;
            v161 = v160;
            *(_QWORD *)&v247 = sub_10001EFA4(v158, v160, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, (char *)&v247 + 8, v242, v155 + 12);
            v162 = v161;
            v8 = v159;
            swift_bridgeObjectRelease(v162);
            swift_bridgeObjectRelease_n(a2, 2);
            v163 = "No view controller found for display: %s";
LABEL_127:
            _os_log_impl((void *)&_mh_execute_header, v152, v154, v163, v155, 0xCu);
            swift_arrayDestroy(v156, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v156, -1, -1);
            v178 = v155;
LABEL_138:
            swift_slowDealloc(v178, -1, -1);
            goto LABEL_139;
          }
          break;
        case 0x7D1:
          strcpy((char *)v246, "acttype");
          v246[1] = (id)0xE700000000000000;
          AnyHashable.init<A>(_:)(&aBlock, v246, &type metadata for String, &protocol witness table for String);
          if (*(_QWORD *)(a2 + 16) && (v52 = sub_100005CF4((uint64_t)&aBlock), (v53 & 1) != 0))
          {
            sub_10000D894(*(_QWORD *)(a2 + 56) + 32 * v52, (uint64_t)&v247);
          }
          else
          {
            v247 = 0u;
            v248 = 0u;
          }
          sub_100006B34((uint64_t)&aBlock);
          if (*((_QWORD *)&v248 + 1))
          {
            v149 = swift_dynamicCast(v246, &v247, (char *)&type metadata for Any + 8, &type metadata for UInt32, 6);
            if ((v149 & 1) != 0)
            {
              v150 = (int)v246[0];
              if (!LODWORD(v246[0]) || LODWORD(v246[0]) == 2)
              {
                v46 = (char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
                v46[17] = 2;
                v47 = (uint64_t)&v46[v5[18]];
                v48 = 24;
LABEL_13:
                *(_DWORD *)v47 = v48;
                *(_BYTE *)(v47 + 4) = 0;
                v49 = *(void **)v46;
                v50 = *((_QWORD *)v46 + 1);
                v51 = xmmword_100133A50;
                goto LABEL_62;
              }
              if (LODWORD(v246[0]) != 1)
              {
                type metadata accessor for SFDeviceSetupAccountType(0);
                LODWORD(aBlock) = v150;
                _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v228, &aBlock, v228, &type metadata for UInt32);
                __break(1u);
                return;
              }
              v46 = (char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
              *((_BYTE *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + 17) = 0;
              goto LABEL_41;
            }
          }
          else
          {
            v149 = sub_10000D858((uint64_t)&v247, &qword_1001A4340);
          }
          v152 = Logger.logObject.getter(v149);
          v179 = static os_log_type_t.error.getter(v152);
          if (!os_log_type_enabled(v152, v179))
            goto LABEL_139;
          v180 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v180 = 0;
          v181 = "No account type specified";
          goto LABEL_137;
        default:
          return;
      }
      goto LABEL_128;
    }
    if ((_DWORD)v242 == 1000)
    {
      strcpy((char *)v246, "viewController");
      HIBYTE(v246[1]) = -18;
      AnyHashable.init<A>(_:)(&aBlock, v246, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(a2 + 16) && (v91 = sub_100005CF4((uint64_t)&aBlock), (v92 & 1) != 0))
      {
        sub_10000D894(*(_QWORD *)(a2 + 56) + 32 * v91, (uint64_t)&v247);
      }
      else
      {
        v247 = 0u;
        v248 = 0u;
      }
      sub_100006B34((uint64_t)&aBlock);
      if (*((_QWORD *)&v248 + 1))
      {
        v136 = sub_100013194(0, (unint64_t *)&qword_1001A3A10, UIViewController_ptr);
        if ((swift_dynamicCast(v246, &v247, (char *)&type metadata for Any + 8, v136, 6) & 1) != 0)
        {
          v137 = v246[0];
          v138 = Logger.logObject.getter(v137);
          v140 = static os_log_type_t.default.getter(v138, v139);
          if (os_log_type_enabled(v138, v140))
          {
            v141 = (uint8_t *)swift_slowAlloc(12, -1);
            v142 = (_QWORD *)swift_slowAlloc(32, -1);
            v242 = v8;
            aBlock = v142;
            *(_DWORD *)v141 = 136315138;
            *(_QWORD *)&v247 = v137;
            v143 = v137;
            v240 = v11;
            v144 = v3;
            v145 = v143;
            v146 = String.init<A>(reflecting:)(&v247, v136);
            v148 = v147;
            *(_QWORD *)&v247 = sub_10001EFA4(v146, v147, (uint64_t *)&aBlock);
            v8 = v242;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, (char *)&v247 + 8, v141 + 4, v141 + 12);
            swift_bridgeObjectRelease(v148);

            v3 = v144;
            v11 = v240;
            _os_log_impl((void *)&_mh_execute_header, v138, v140, "Got view controller: %s", v141, 0xCu);
            swift_arrayDestroy(v142, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v142, -1, -1);
            swift_slowDealloc(v141, -1, -1);
          }
          else
          {

          }
          v198 = (char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
          v199 = *(void **)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model);
          v200 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + 8);
          *(_QWORD *)v198 = v137;
          *((_QWORD *)v198 + 1) = 0;
          v201 = v198[16];
          v198[16] = 0;
          sub_10007D5D0(v199, v200, v201);
          goto LABEL_140;
        }
      }
      else
      {
        sub_10000D858((uint64_t)&v247, &qword_1001A4340);
      }
      v171 = swift_bridgeObjectRetain_n(a2, 2);
      v152 = Logger.logObject.getter(v171);
      v154 = static os_log_type_t.error.getter(v152);
      if (os_log_type_enabled(v152, v154))
      {
        v155 = (uint8_t *)swift_slowAlloc(12, -1);
        v156 = (_QWORD *)swift_slowAlloc(32, -1);
        *(_DWORD *)v155 = 136315138;
        v242 = (char *)(v155 + 4);
        aBlock = v156;
        *(_QWORD *)&v247 = a2;
        swift_bridgeObjectRetain(a2);
        v172 = sub_100006A6C(&qword_1001A6408);
        v173 = String.init<A>(reflecting:)(&v247, v172);
        v174 = v8;
        v176 = v175;
        *(_QWORD *)&v247 = sub_10001EFA4(v173, v175, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v247, (char *)&v247 + 8, v242, v155 + 12);
        v177 = v176;
        v8 = v174;
        swift_bridgeObjectRelease(v177);
        swift_bridgeObjectRelease_n(a2, 2);
        v163 = "No view controller: %s";
        goto LABEL_127;
      }
LABEL_128:
      swift_bridgeObjectRelease_n(a2, 2);
      goto LABEL_139;
    }
    if ((_DWORD)v242 != 1001)
      return;
LABEL_40:
    v46 = (char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
LABEL_41:
    v49 = *(void **)v46;
    v50 = *((_QWORD *)v46 + 1);
    v51 = xmmword_100133A90;
LABEL_62:
    *(_OWORD *)v46 = v51;
    v85 = v46[16];
    v86 = 3;
LABEL_63:
    v46[16] = v86;
    sub_10007D5D0(v49, v50, v85);
    goto LABEL_140;
  }
  if ((int)v242 <= 98)
  {
    if ((_DWORD)v242 != 20)
    {
      if ((_DWORD)v242 != 70)
      {
        if ((_DWORD)v242 != 97)
          return;
        v54 = v40[1];
        ObjectType = swift_getObjectType(*(_QWORD *)((char *)v3
                                                   + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession));
        v56 = *(uint64_t (**)(uint64_t, uint64_t))(v54 + 80);
        swift_unknownObjectRetain(v41);
        v57 = (void *)v56(ObjectType, v54);
        swift_unknownObjectRelease(v41);
        if (v57)
        {
          v58 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_migrationController);
          if (v58)
          {
            v59 = *(_QWORD *)((char *)v3
                            + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_migrationController
                            + 8);
            v60 = swift_getObjectType(*(_QWORD *)((char *)v3
                                                + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_migrationController));
            v61 = *(void (**)(void *, uint64_t, uint64_t))(v59 + 8);
            swift_unknownObjectRetain(v58);
            v61(v57, v60, v59);
            swift_unknownObjectRelease(v58);
          }

        }
        goto LABEL_40;
      }
      v98 = (char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
      if (*((_BYTE *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + 16) != 3
        || *((_QWORD *)v98 + 1)
        || *(_QWORD *)v98 != 2)
      {
        goto LABEL_140;
      }
      v99 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
      objc_msgSend(v99, "notificationOccurred:", 0);
      v100 = &v98[v5[15]];
      if ((v100[4] & 1) == 0 && (v100[1] & 1) != 0)
      {
        sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
        v203 = (void *)static OS_dispatch_queue.main.getter(v202);
        v204 = v229;
        static DispatchTime.now()(v203);
        v205 = v231;
        + infix(_:_:)(v204, 1.0);
        v242 = *(char **)(v230 + 8);
        v206 = v232;
        ((void (*)(char *, uint64_t))v242)(v204, v232);
        v207 = swift_allocObject(&unk_10017A780, 24, 7);
        swift_weakInit(v207 + 16, v3);
        v244[3] = sub_10007D880;
        v245 = v207;
        aBlock = _NSConcreteStackBlock;
        v244[0] = 1107296256;
        v244[1] = sub_10001BB50;
        v244[2] = &unk_10017A990;
        v208 = _Block_copy(&aBlock);
        v209 = swift_release(v245);
        v210 = v233;
        static DispatchQoS.unspecified.getter(v209);
        aBlock = _swiftEmptyArrayStorage;
        v211 = sub_10007D580();
        v212 = sub_100006A6C((uint64_t *)&unk_1001A4330);
        v213 = sub_100012F94();
        v214 = v236;
        v215 = v238;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v212, v213, v238, v211);
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v205, v210, v214, v208);
        _Block_release(v208);

        (*(void (**)(char *, uint64_t))(v237 + 8))(v214, v215);
        (*(void (**)(char *, uint64_t))(v234 + 8))(v210, v235);
        ((void (*)(char *, uint64_t))v242)(v205, v206);
        return;
      }

      v101 = *(void **)v98;
      v102 = *((_QWORD *)v98 + 1);
      *(_OWORD *)v98 = xmmword_100133A90;
LABEL_96:
      v111 = v98[16];
      v98[16] = 3;
      sub_10007D5D0(v101, v102, v111);
      goto LABEL_140;
    }
    v93 = (uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
    v94 = *(void **)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model);
    v95 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + 8);
    *(_OWORD *)v93 = xmmword_100133AA0;
    v96 = *(_BYTE *)(v93 + 16);
    *(_BYTE *)(v93 + 16) = 3;
    sub_10007D5D0(v94, v95, v96);
    if (*(_BYTE *)(v93 + 17))
    {
      if (*(_BYTE *)(v93 + 17) == 1)
      {
        v97 = swift_bridgeObjectRelease(0xE700000000000000);
        goto LABEL_135;
      }
      v182 = 0xE800000000000000;
      v183 = 0x64656873696E6966;
    }
    else
    {
      v182 = 0xE400000000000000;
      v183 = 1701736302;
    }
    v184 = _stringCompareWithSmolCheck(_:_:expecting:)(v183, v182, 0x64657472617473, 0xE700000000000000, 0);
    v97 = swift_bridgeObjectRelease(v182);
    if ((v184 & 1) == 0)
    {
      v246[0] = (id)28517;
      v246[1] = (id)0xE200000000000000;
      AnyHashable.init<A>(_:)(&aBlock, v246, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(a2 + 16) && (v189 = sub_100005CF4((uint64_t)&aBlock), (v190 & 1) != 0))
      {
        sub_10000D894(*(_QWORD *)(a2 + 56) + 32 * v189, (uint64_t)&v247);
      }
      else
      {
        v247 = 0u;
        v248 = 0u;
      }
      sub_100006B34((uint64_t)&aBlock);
      if (*((_QWORD *)&v248 + 1))
      {
        v191 = sub_100013194(0, (unint64_t *)&qword_1001A3908, NSError_ptr);
        if ((swift_dynamicCast(v246, &v247, (char *)&type metadata for Any + 8, v191, 6) & 1) != 0)
        {
          v192 = v246[0];
          v193 = v239;
          sub_10007D3F0(v93, v239);
          v194 = v192;
          v195 = sub_100085DA4();
          sub_10007D478(v193);
          if (v195)
          {
            if (v195 == 1)
            {
              v196 = 0x6C616D726F6ELL;
              v197 = 0xE600000000000000;
            }
            else
            {
              v196 = 0x6572756C696166;
              v197 = 0xE700000000000000;
            }
            v216 = _stringCompareWithSmolCheck(_:_:expecting:)(v196, v197, 0x64696C61766E69, 0xE700000000000000, 0);
            swift_bridgeObjectRelease(v197);
            if ((v216 & 1) == 0 && objc_msgSend(v194, "code") == (id)-71160)
            {

              return;
            }
          }
          else
          {
            swift_bridgeObjectRelease(0xE700000000000000);
          }
          v217 = v5[19];
          v218 = *(void **)(v93 + v217);
          *(_QWORD *)(v93 + v217) = v192;

        }
        else
        {
          v192 = 0;
        }
      }
      else
      {
        sub_10000D858((uint64_t)&v247, &qword_1001A4340);
        v192 = 0;
      }
      v219 = *v40;
      if (*v40)
      {
        v220 = v40[1];
        v221 = swift_getObjectType(*v40);
        v222 = *(void (**)(uint64_t, uint64_t))(v220 + 160);
        swift_unknownObjectRetain(v219);
        v222(v221, v220);
        swift_unknownObjectRelease(v219);
        v223 = *v40;
      }
      else
      {
        v223 = 0;
      }
      *v40 = 0;
      v40[1] = 0;
      swift_unknownObjectRelease(v223);
      if (v192)
      {
        v224 = v192;
        v225 = (void *)_convertErrorToNSError(_:)(v224);

      }
      else
      {
        v225 = 0;
      }
      v226 = NSErrorToOSStatus(v225);

      sub_100079C84(v226);
      v69 = (void (*)(__n128))v3[4];
      if (v69)
      {
        v70 = v3[5];
        v227 = swift_retain(v70);
        ((void (*)(_QWORD, __n128))v69)(0, v227);

LABEL_57:
        sub_100012F60((uint64_t)v69, v70);
      }
      else
      {

      }
      goto LABEL_140;
    }
LABEL_135:
    v152 = Logger.logObject.getter(v97);
    v179 = static os_log_type_t.default.getter(v152, v185);
    if (os_log_type_enabled(v152, v179))
    {
      v180 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v180 = 0;
      v181 = "Not ending the session because it is dependent setup, so we should wait for eventDependentEnd";
LABEL_137:
      _os_log_impl((void *)&_mh_execute_header, v152, v179, v181, v180, 2u);
      v178 = v180;
      goto LABEL_138;
    }
LABEL_139:

LABEL_140:
    Strong = swift_unknownObjectWeakLoadStrong(v3 + 2);
    if (Strong)
    {
      v187 = Strong;
      sub_10007D3F0((uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model, (uint64_t)v11);
      sub_10007D3F0((uint64_t)v11, (uint64_t)v8);
      v188 = v187 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
      swift_beginAccess(v187 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, &aBlock, 33, 0);
      sub_10007D434((uint64_t)v8, v188);
      swift_endAccess(&aBlock);
      sub_10009E4A8();
      sub_10007D478((uint64_t)v8);
      swift_unknownObjectRelease(v187);
      sub_10007D478((uint64_t)v11);
    }
    return;
  }
  if ((int)v242 <= 299)
  {
    if ((_DWORD)v242 == 99)
    {
      v46 = (char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
      v49 = *(void **)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model);
      v50 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + 8);
      v51 = xmmword_100133AB0;
      goto LABEL_62;
    }
    if ((_DWORD)v242 != 240)
      return;
    goto LABEL_40;
  }
  if ((_DWORD)v242 == 300 || (_DWORD)v242 == 310)
  {
    *(_QWORD *)&v247 = 0x73736572676F7270;
    *((_QWORD *)&v247 + 1) = 0xE800000000000000;
    AnyHashable.init<A>(_:)(&aBlock, &v247, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a2 + 16) && (v62 = sub_100005CF4((uint64_t)&aBlock), (v63 & 1) != 0))
    {
      sub_10000D894(*(_QWORD *)(a2 + 56) + 32 * v62, (uint64_t)&v247);
    }
    else
    {
      v247 = 0u;
      v248 = 0u;
    }
    sub_100006B34((uint64_t)&aBlock);
    if (*((_QWORD *)&v248 + 1))
    {
      if (swift_dynamicCast(v246, &v247, (char *)&type metadata for Any + 8, &type metadata for Double, 6))
      {
        v64 = *(double *)v246;
        goto LABEL_84;
      }
    }
    else
    {
      sub_10000D858((uint64_t)&v247, &qword_1001A4340);
    }
    v64 = 0.0;
LABEL_84:
    v98 = (char *)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
    v103 = (uint64_t)v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + v5[16];
    *(float *)v103 = v64;
    *(_BYTE *)(v103 + 4) = 0;
    *(_QWORD *)&v247 = 0x65536E69616D6572;
    *((_QWORD *)&v247 + 1) = 0xEA00000000007363;
    AnyHashable.init<A>(_:)(&aBlock, &v247, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(a2 + 16) && (v104 = sub_100005CF4((uint64_t)&aBlock), (v105 & 1) != 0))
    {
      sub_10000D894(*(_QWORD *)(a2 + 56) + 32 * v104, (uint64_t)&v247);
    }
    else
    {
      v247 = 0u;
      v248 = 0u;
    }
    sub_100006B34((uint64_t)&aBlock);
    if (*((_QWORD *)&v248 + 1))
    {
      v106 = swift_dynamicCast(v246, &v247, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
      v107 = v246[0];
      if (!v106)
        v107 = 0;
      v108 = v106 ^ 1;
    }
    else
    {
      sub_10000D858((uint64_t)&v247, &qword_1001A4340);
      v107 = 0;
      v108 = 1;
    }
    v109 = &v98[v5[17]];
    *(_QWORD *)v109 = v107;
    v109[8] = v108;
    v110 = 5;
    if ((_DWORD)v242 != 300)
      v110 = 6;
    v101 = *(void **)v98;
    v102 = *((_QWORD *)v98 + 1);
    *(_QWORD *)v98 = v110;
    *((_QWORD *)v98 + 1) = 0;
    goto LABEL_96;
  }
}

void sub_100079498(int a1, int a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];
  _BYTE v45[24];

  v6 = (int *)type metadata accessor for D2DSetupModel(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v42 = (uint64_t)&v40 - v10;
  a3 += 16;
  swift_beginAccess(a3, v45, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v13 = Strong;
    if (qword_1001A3018 != -1)
      swift_once(&qword_1001A3018, sub_10007279C);
    v14 = type metadata accessor for Logger(0, v12);
    v15 = sub_10000E8E8(v14, (uint64_t)qword_1001A60D8);
    v16 = Logger.logObject.getter(v15);
    v18 = static os_log_type_t.default.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      v19 = swift_slowAlloc(18, -1);
      v20 = swift_slowAlloc(32, -1);
      v44[0] = v20;
      *(_DWORD *)v19 = 136315394;
      v41 = a2;
      v40 = v9;
      LODWORD(v43) = a1;
      v21 = String.init<A>(reflecting:)(&v43, &type metadata for SFPairingFlags);
      v23 = v22;
      v43 = sub_10001EFA4(v21, v22, v44);
      v9 = v40;
      a2 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44, v19 + 4, v19 + 12);
      swift_bridgeObjectRelease(v23);
      *(_WORD *)(v19 + 12) = 1024;
      LODWORD(v43) = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, (char *)&v43 + 4, v19 + 14, v19 + 18);
      _os_log_impl((void *)&_mh_execute_header, v16, v18, "Prompt for PIN: %s, %d throttle seconds", (uint8_t *)v19, 0x12u);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
    }

    if ((a1 & 0x10000) != 0)
    {
      v24 = v6[11];
      v25 = *(_DWORD *)(v13 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + v24);
      v26 = __CFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        goto LABEL_17;
      *(_DWORD *)(v13 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + v24) = v27;
    }
    v28 = v13 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
    v29 = v13 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + v6[15];
    *(_DWORD *)v29 = a1;
    *(_BYTE *)(v29 + 4) = 0;
    *(_BYTE *)(v28 + v6[13]) = 0;
    if (a2 < 1)
      goto LABEL_12;
    v30 = mach_absolute_time();
    v31 = SecondsToUpTicks(a2);
    if (!__CFADD__(v30, v31))
    {
      *(_QWORD *)(v28 + v6[14]) = v30 + v31;
LABEL_12:
      v32 = *(void **)v28;
      v33 = *(_QWORD *)(v28 + 8);
      *(_OWORD *)v28 = xmmword_100133AC0;
      v34 = *(_BYTE *)(v28 + 16);
      *(_BYTE *)(v28 + 16) = 3;
      sub_10007D5D0(v32, v33, v34);
      v35 = swift_unknownObjectWeakLoadStrong(v13 + 16);
      if (v35)
      {
        v36 = v35;
        v37 = v42;
        sub_10007D3F0(v28, v42);
        sub_10007D3F0(v37, (uint64_t)v9);
        v38 = v36 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
        swift_beginAccess(v36 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, v44, 33, 0);
        swift_retain(v13);
        sub_10007D434((uint64_t)v9, v38);
        swift_endAccess(v44);
        sub_10009E4A8();
        sub_10007D478((uint64_t)v9);
        swift_unknownObjectRelease(v36);
        swift_release_n(v13, 2, v39);
        sub_10007D478(v37);
      }
      else
      {
        swift_release(v13);
      }
      return;
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
}

uint64_t sub_100079804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  char *v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v32;
  void *v33;
  uint64_t v34;
  __n128 v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD aBlock[5];
  uint64_t v51;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v48 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for DispatchTime(0);
  v46 = *(uint64_t (**)(char *, uint64_t))(v49 - 8);
  v8 = __chkstk_darwin(v49);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v8);
  v47 = (char *)&v42 - v12;
  v13 = v0 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession;
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
  if (v14)
  {
    v15 = *(_QWORD *)(v13 + 8);
    ObjectType = swift_getObjectType(v14);
    v17 = v5;
    v18 = v4;
    v19 = v1;
    v20 = v2;
    v21 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 128);
    swift_unknownObjectRetain(v14);
    v22 = v21(ObjectType, v15);
    v23 = v20;
    v24 = v19;
    v25 = v18;
    v26 = v22;
    v28 = v27;
    result = swift_unknownObjectRelease(v14);
    if (v26)
    {
      sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
      v43 = static OS_dispatch_queue.main.getter(v29);
      static DispatchTime.now()(v43);
      v44 = v23;
      v30 = v47;
      + infix(_:_:)(v10, 1.0);
      v31 = (uint64_t (*)(char *, uint64_t))*((_QWORD *)v46 + 1);
      v45 = v17;
      v46 = v31;
      v31(v10, v49);
      v32 = swift_allocObject(&unk_10017A950, 32, 7);
      *(_QWORD *)(v32 + 16) = v26;
      *(_QWORD *)(v32 + 24) = v28;
      aBlock[4] = sub_10007D858;
      v51 = v32;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001BB50;
      aBlock[3] = &unk_10017A968;
      v33 = _Block_copy(aBlock);
      v34 = v51;
      swift_retain(v28);
      v35 = swift_release(v34);
      v36 = v48;
      static DispatchQoS.unspecified.getter(v35);
      aBlock[0] = _swiftEmptyArrayStorage;
      v37 = v6;
      v38 = sub_10007D580();
      v39 = sub_100006A6C((uint64_t *)&unk_1001A4330);
      v40 = sub_100012F94();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v39, v40, v24, v38);
      v41 = (void *)v43;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v30, v36, v25, v33);
      _Block_release(v33);

      sub_100012F60(v26, v28);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v24);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v45);
      return v46(v30, v49);
    }
  }
  return result;
}

double sub_100079B08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  _BYTE v17[24];
  _BYTE v18[24];

  v2 = type metadata accessor for D2DSetupModel(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v17[-v6];
  a1 += 16;
  swift_beginAccess(a1, v18, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v10 = Strong;
    v11 = (_QWORD *)(Strong + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model);
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + 16) == 3
      && (!v11[1] ? (v12 = *v11 == 3) : (v12 = 0),
          v12 && (sub_10007D5D0((void *)3, 0, 3), (v13 = swift_unknownObjectWeakLoadStrong(v10 + 16)) != 0)))
    {
      v14 = v13;
      sub_10007D3F0((uint64_t)v11, (uint64_t)v7);
      sub_10007D3F0((uint64_t)v7, (uint64_t)v5);
      v15 = v14 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
      swift_beginAccess(v14 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, v17, 33, 0);
      swift_retain(v10);
      sub_10007D434((uint64_t)v5, v15);
      swift_endAccess(v17);
      sub_10009E4A8();
      sub_10007D478((uint64_t)v5);
      swift_unknownObjectRelease(v14);
      swift_release_n(v10, 2, v16);
      sub_10007D478((uint64_t)v7);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v10).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100079C84(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  NSString v33;
  unint64_t v34;
  Class isa;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  char *v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char v70[160];

  v3 = sub_100006A6C(&qword_1001A42A0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v66 = (char *)&v58 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v58 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v58 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v58 - v15;
  v17 = v1 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  result = type metadata accessor for D2DSetupModel(0);
  v19 = *(int *)(result + 96);
  if ((*(_BYTE *)(v17 + v19) & 1) != 0)
    return result;
  v20 = (int *)result;
  *(_BYTE *)(v17 + v19) = 1;
  sub_100006BD8(v17 + *(int *)(result + 36), (uint64_t)v14, &qword_1001A42A0);
  v21 = type metadata accessor for UUID(0);
  v22 = *(_QWORD *)(v21 - 8);
  v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v65(v14, 1, v21) == 1)
  {
    UUID.init(uuidString:)(0, 0xE000000000000000);
    sub_10000D858((uint64_t)v14, &qword_1001A42A0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v14, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
  }
  v23 = mach_absolute_time();
  v24 = *(_QWORD *)(v17 + v20[12]);
  v25 = v23 >= v24;
  v26 = v23 - v24;
  if (!v25)
  {
    __break(1u);
LABEL_19:
    swift_once(&qword_1001A3018, sub_10007279C);
    goto LABEL_11;
  }
  v60 = v22;
  v62 = a1;
  v63 = v1;
  v61 = UpTicksToMilliseconds(v26);
  v27 = String._bridgeToObjectiveC()();
  v28 = sub_100006A6C(&qword_1001A63C0);
  inited = swift_initStackObject(v28, v70);
  *(_OWORD *)(inited + 16) = xmmword_100133AD0;
  *(_QWORD *)(inited + 32) = 6580595;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  v64 = v16;
  sub_100006BD8((uint64_t)v16, (uint64_t)v11, &qword_1001A42A0);
  v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v65)(v11, 1, v21);
  if ((_DWORD)v30 == 1)
  {
    sub_10000D858((uint64_t)v11, &qword_1001A42A0);
    v31 = 0xE000000000000000;
  }
  else
  {
    UUID.uuidString.getter(v30);
    v31 = v32;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v21);
  }
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31);
  *(_QWORD *)(inited + 48) = v33;
  strcpy((char *)(inited + 56), "smoothedRSSI");
  *(_BYTE *)(inited + 69) = 0;
  *(_WORD *)(inited + 70) = -5120;
  *(NSNumber *)(inited + 72) = Int32._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 80) = 0x646F43726F727265;
  *(_QWORD *)(inited + 88) = 0xE900000000000065;
  *(NSNumber *)(inited + 96) = Int32._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 104) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 112) = 0xEA0000000000734DLL;
  *(NSNumber *)(inited + 120) = UInt64._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 128) = 0x6F434E4950646162;
  *(_QWORD *)(inited + 136) = 0xEB00000000746E75;
  *(NSNumber *)(inited + 144) = UInt32._bridgeToObjectiveC()();
  v34 = sub_10000448C(inited);
  sub_100013194(0, (unint64_t *)&qword_1001A7260, NSObject_ptr);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v34);
  SFMetricsLog(v27, isa);

  v11 = v66;
  if (qword_1001A3018 != -1)
    goto LABEL_19;
LABEL_11:
  v37 = type metadata accessor for Logger(0, v36);
  sub_10000E8E8(v37, (uint64_t)qword_1001A60D8);
  v38 = (uint64_t)v64;
  sub_100006BD8((uint64_t)v64, (uint64_t)v11, &qword_1001A42A0);
  v39 = v63;
  v40 = swift_retain_n(v63, 4);
  v41 = Logger.logObject.getter(v40);
  v43 = static os_log_type_t.default.getter(v41, v42);
  if (os_log_type_enabled(v41, (os_log_type_t)v43))
  {
    v59 = v43;
    v44 = swift_slowAlloc(44, -1);
    v58 = swift_slowAlloc(64, -1);
    v69 = v58;
    *(_DWORD *)v44 = 136316162;
    sub_100006BD8((uint64_t)v11, (uint64_t)v6, &qword_1001A42A0);
    v45 = ((uint64_t (*)(char *, uint64_t, uint64_t))v65)(v6, 1, v21);
    if ((_DWORD)v45 == 1)
    {
      sub_10000D858((uint64_t)v6, &qword_1001A42A0);
      v67 = 0;
      v68 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v68);
      v46 = 0x8000000100136820;
      v47 = 0xD000000000000015;
    }
    else
    {
      v47 = UUID.uuidString.getter(v45);
      v46 = v50;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v6, v21);
    }
    v67 = sub_10001EFA4(v47, v46, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v44 + 4, v44 + 12);
    swift_bridgeObjectRelease(v46);
    sub_10000D858((uint64_t)v11, &qword_1001A42A0);
    *(_WORD *)(v44 + 12) = 1024;
    v51 = *(_DWORD *)(v17 + v20[10]);
    v52 = v63;
    swift_release(v63);
    LODWORD(v67) = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, (char *)&v67 + 4, v44 + 14, v44 + 18);
    swift_release(v52);
    *(_WORD *)(v44 + 18) = 2080;
    LODWORD(v67) = v62;
    v53 = String.init<A>(reflecting:)(&v67, &type metadata for Int32);
    v55 = v54;
    v67 = sub_10001EFA4(v53, v54, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v44 + 20, v44 + 28);
    swift_bridgeObjectRelease(v55);
    *(_WORD *)(v44 + 28) = 2048;
    v67 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v44 + 30, v44 + 38);
    *(_WORD *)(v44 + 38) = 1024;
    v56 = *(_DWORD *)(v17 + v20[11]);
    swift_release(v52);
    LODWORD(v67) = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, (char *)&v67 + 4, v44 + 40, v44 + 44);
    swift_release(v52);
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v59, "iOSSetup: Done, ID %s, RSSI %d, error %s, totalMs %llu, badPIN %u", (uint8_t *)v44, 0x2Cu);
    v57 = v58;
    swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v57, -1, -1);
    swift_slowDealloc(v44, -1, -1);

    v49 = (uint64_t)v64;
  }
  else
  {

    swift_release_n(v39, 4, v48);
    sub_10000D858((uint64_t)v11, &qword_1001A42A0);
    v49 = v38;
  }
  return sub_10000D858(v49, &qword_1001A42A0);
}

void sub_10007A420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  NSURL *v41;
  void *v42;
  void *v43;
  void **v44;
  id v45;
  void **v46;
  id v47;
  NSURL *v48;
  void *v49;
  void *v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  id v53;
  NSURL *v54;
  void *v55;
  void *v56;
  unsigned int v57;
  void **v58;
  id v59;
  void **v60;
  id v61;
  NSURL *v62;
  void *v63;
  void *v64;
  id v65;
  NSURL *v66;
  void *v67;
  void *v68;
  id v69;
  void **v70;
  id v71;
  id v72;
  NSURL *v73;
  void *v74;
  void *v75;
  void **v76;
  uint64_t v77;
  uint64_t v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  void **v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD v90[2];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void **aBlock;
  uint64_t v95;
  void *v96;
  void *v97;
  void *v98;
  uint64_t v99;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v9 = (char *)v90 - v8;
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v10 = type metadata accessor for Logger(0, v7);
  v11 = sub_10000E8E8(v10, (uint64_t)qword_1001A60D8);
  v12 = Logger.logObject.getter(v11);
  v14 = static os_log_type_t.default.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v14, "FileTransfer start", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
  if (v16)
  {
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1
                                               + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession));
    v91 = v1;
    v19 = v9;
    v20 = v3;
    v21 = v6;
    v22 = v2;
    v23 = v11;
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 80);
    swift_unknownObjectRetain(v16);
    v25 = v24(ObjectType, v17);
    v26 = v23;
    v27 = v22;
    v28 = v21;
    v29 = v20;
    v30 = v19;
    v31 = v91;
    v32 = (void *)v25;
    swift_unknownObjectRelease(v16);
    if (v32)
    {
      v90[1] = v26;
      v33 = swift_allocObject(&unk_10017A780, 24, 7);
      swift_weakInit(v33 + 16, v31);
      v98 = sub_10007E004;
      v99 = v33;
      aBlock = _NSConcreteStackBlock;
      v95 = 1107296256;
      v96 = sub_1000AC624;
      v97 = &unk_10017A9B8;
      v34 = _Block_copy(&aBlock);
      objc_msgSend(v32, "setCompletionHandler:", v34, swift_release(v99).n128_f64[0]);
      _Block_release(v34);
      v35 = swift_allocObject(&unk_10017A9F0, 24, 7);
      *(_QWORD *)(v35 + 16) = v32;
      v98 = sub_10007E00C;
      v99 = v35;
      aBlock = _NSConcreteStackBlock;
      v95 = 1107296256;
      v96 = sub_10001B5D0;
      v97 = &unk_10017AA08;
      v36 = _Block_copy(&aBlock);
      v37 = v99;
      v38 = v32;
      objc_msgSend(v38, "setProgressHandler:", v36, swift_release(v37).n128_f64[0]);
      _Block_release(v36);
      v98 = sub_10007B938;
      v99 = 0;
      aBlock = _NSConcreteStackBlock;
      v95 = 1107296256;
      v96 = sub_10007BAF0;
      v97 = &unk_10017AA30;
      v39 = _Block_copy(&aBlock);
      objc_msgSend(v38, "setReceivedItemHandler:", v39);
      _Block_release(v39);
      objc_msgSend(v38, "activate");
      URL.init(fileURLWithPath:)(0x7365542F706D742FLL, 0xEE007478742E3174);
      v40 = objc_msgSend(objc_allocWithZone((Class)NSData), "initWithBytes:length:", "Test1", 5);
      URL._bridgeToObjectiveC()(v41);
      v43 = v42;
      aBlock = 0;
      LODWORD(v37) = objc_msgSend(v40, "writeToURL:options:error:", v42, 0, &aBlock);

      v44 = aBlock;
      if ((_DWORD)v37)
      {
        v45 = objc_allocWithZone((Class)RPFileTransferItem);
        v46 = v44;
        v47 = objc_msgSend(v45, "init");
        URL._bridgeToObjectiveC()(v48);
        v50 = v49;
        objc_msgSend(v47, "setItemURL:", v49);

        objc_msgSend(v38, "addItem:", v47);
        URL.init(fileURLWithPath:)(0x7365542F706D742FLL, 0xEE007478742E3274);
        v51 = *(void (**)(char *, uint64_t))(v29 + 8);
        v51(v30, v27);
        v52 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
        v52(v30, v28, v27);
        v53 = objc_msgSend(objc_allocWithZone((Class)NSData), "initWithBytes:length:", "Test2", 5);
        URL._bridgeToObjectiveC()(v54);
        v56 = v55;
        aBlock = 0;
        v57 = objc_msgSend(v53, "writeToURL:options:error:", v55, 0, &aBlock);

        v58 = aBlock;
        if (v57)
        {
          v59 = objc_allocWithZone((Class)RPFileTransferItem);
          v60 = v58;
          v61 = objc_msgSend(v59, "init");

          v47 = v61;
          URL._bridgeToObjectiveC()(v62);
          v64 = v63;
          objc_msgSend(v47, "setItemURL:", v63);

          objc_msgSend(v38, "addItem:", v47);
          URL.init(fileURLWithPath:)(0x7365542F706D742FLL, 0xEE007478742E3374);
          v51(v30, v27);
          v52(v30, v28, v27);
          v65 = objc_msgSend(objc_allocWithZone((Class)NSData), "initWithBytes:length:", "Test3", 5);
          URL._bridgeToObjectiveC()(v66);
          v68 = v67;
          aBlock = 0;
          LODWORD(v59) = objc_msgSend(v65, "writeToURL:options:error:", v67, 0, &aBlock);

          v58 = aBlock;
          if ((_DWORD)v59)
          {
            v69 = objc_allocWithZone((Class)RPFileTransferItem);
            v70 = v58;
            v71 = objc_msgSend(v69, "init");

            v72 = v71;
            URL._bridgeToObjectiveC()(v73);
            v75 = v74;
            objc_msgSend(v72, "setItemURL:", v74);

            objc_msgSend(v38, "addItem:", v72);
            v51(v30, v27);
LABEL_16:
            objc_msgSend(v38, "finish");

            return;
          }
        }
        v79 = v58;
        v77 = _convertNSErrorToError(_:)(v58);

        swift_willThrow(v80);
        v51(v30, v27);
      }
      else
      {
        v76 = aBlock;
        v77 = _convertNSErrorToError(_:)(v44);

        swift_willThrow(v78);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v27);
      }
      swift_errorRetain(v77);
      v81 = swift_errorRetain(v77);
      v82 = Logger.logObject.getter(v81);
      v83 = static os_log_type_t.error.getter(v82);
      if (os_log_type_enabled(v82, v83))
      {
        v84 = (uint8_t *)swift_slowAlloc(12, -1);
        v85 = (void **)swift_slowAlloc(32, -1);
        aBlock = v85;
        *(_DWORD *)v84 = 136315138;
        v92 = v77;
        swift_errorRetain(v77);
        v86 = sub_100006A6C(&qword_1001A7C30);
        v87 = String.init<A>(reflecting:)(&v92, v86);
        v89 = v88;
        v92 = sub_10001EFA4(v87, v88, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93, v84 + 4, v84 + 12);
        swift_bridgeObjectRelease(v89);
        swift_errorRelease(v77);
        swift_errorRelease(v77);
        _os_log_impl((void *)&_mh_execute_header, v82, v83, "### Migration failed due to error: %s", v84, 0xCu);
        swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v85, -1, -1);
        swift_slowDealloc(v84, -1, -1);

        swift_errorRelease(v77);
      }
      else
      {
        swift_errorRelease(v77);
        swift_errorRelease(v77);
        swift_errorRelease(v77);

      }
      goto LABEL_16;
    }
  }
}

void sub_10007AC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t (*v9)(__n128);
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(NSObject *, uint64_t, uint64_t);
  os_log_t osloga;
  NSObject *oslog;
  NSObject *v40;
  NSObject *v41;
  uint64_t v42;

  v3 = v2;
  v4 = v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
  if (!v5
    || (v6 = *(_QWORD *)(v4 + 8),
        ObjectType = swift_getObjectType(v5),
        v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 80),
        swift_unknownObjectRetain(v5),
        v40 = v8(ObjectType, v6),
        swift_unknownObjectRelease(v5),
        !v40))
  {
    if (qword_1001A3018 != -1)
      swift_once(&qword_1001A3018, sub_10007279C);
    v27 = type metadata accessor for Logger(0, a2);
    v28 = sub_10000E8E8(v27, (uint64_t)qword_1001A60D8);
    v40 = Logger.logObject.getter(v28);
    v29 = static os_log_type_t.error.getter(v40);
    if (os_log_type_enabled(v40, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v29, "### Migration start UI failed: no file transfer session", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }
LABEL_19:

    return;
  }
  v9 = *(uint64_t (**)(__n128))(v3 + 128);
  if (!v9
    || (v10 = *(_QWORD *)(v3 + 136),
        v11 = swift_retain(v10),
        v12 = v9(v11),
        v14 = v13,
        sub_100012F60((uint64_t)v9, v10),
        !v12))
  {
    if (qword_1001A3018 != -1)
      swift_once(&qword_1001A3018, sub_10007279C);
    v31 = type metadata accessor for Logger(0, a2);
    v32 = sub_10000E8E8(v31, (uint64_t)qword_1001A60D8);
    oslog = Logger.logObject.getter(v32);
    v33 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v33, "### Migration start UI failed: create controller failed", v34, 2u);
      swift_slowDealloc(v34, -1, -1);

      return;
    }

    goto LABEL_19;
  }
  v15 = (uint64_t *)(v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_migrationController);
  v16 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_migrationController);
  *v15 = v12;
  v15[1] = v14;
  swift_unknownObjectRetain(v12);
  swift_unknownObjectRelease(v16);
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v18 = type metadata accessor for Logger(0, v17);
  sub_10000E8E8(v18, (uint64_t)qword_1001A60D8);
  v19 = v40;
  v20 = Logger.logObject.getter(v19);
  v22 = static os_log_type_t.default.getter(v20, v21);
  if (os_log_type_enabled(v20, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    osloga = (os_log_t)swift_slowAlloc(8, -1);
    *(_DWORD *)v23 = 138412290;
    v41 = v19;
    v24 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v23 + 4, v23 + 12);
    osloga->isa = (Class)v40;

    _os_log_impl((void *)&_mh_execute_header, v20, v22, "Migration start UI: %@", v23, 0xCu);
    v25 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(osloga, 1, v25);
    swift_slowDealloc(osloga, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    v26 = *v15;
    if (!*v15)
      goto LABEL_22;
    goto LABEL_21;
  }

  v26 = *v15;
  if (*v15)
  {
LABEL_21:
    v35 = v15[1];
    v36 = swift_getObjectType(v26);
    v37 = *(void (**)(NSObject *, uint64_t, uint64_t))(v35 + 16);
    swift_unknownObjectRetain(v26);
    v37(v19, v36, v35);
    swift_unknownObjectRelease(v26);
  }
LABEL_22:

  swift_unknownObjectRelease(v12);
}

void sub_10007B0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t inited;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _BYTE v25[104];
  uint64_t v26[3];

  v3 = a2 + 16;
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v4 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v4, (uint64_t)qword_1001A60D8);
  swift_errorRetain(a1);
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v26[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v23 = a1;
    swift_errorRetain(a1);
    v11 = sub_100006A6C(&qword_1001A3900);
    v12 = String.init<A>(reflecting:)(&v23, v11);
    v14 = v13;
    v23 = sub_10001EFA4(v12, v13, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "FileTransfer completed: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  swift_beginAccess(v3, v26, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v16 = Strong;
    v18 = *(_QWORD *)(Strong + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
    v17 = *(_QWORD *)(Strong + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession + 8);
    swift_unknownObjectRetain(v18);
    swift_release(v16);
    if (v18)
    {
      ObjectType = swift_getObjectType(v18);
      v20 = sub_100006A6C(&qword_1001A5E38);
      inited = swift_initStackObject(v20, v25);
      *(_OWORD *)(inited + 16) = xmmword_100131C40;
      v23 = 0x446574617267694DLL;
      v24 = 0xEB00000000656E6FLL;
      AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v23, &type metadata for String, &protocol witness table for String);
      *(_QWORD *)(inited + 96) = &type metadata for Bool;
      *(_BYTE *)(inited + 72) = 1;
      v22 = sub_10000434C(inited);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 176))(v22, ObjectType, v17);
      swift_bridgeObjectRelease(v22);
      swift_unknownObjectRelease(v18);
    }
  }
}

void sub_10007B380(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;

  if (objc_msgSend(a1, "type") == 1)
  {
    if (qword_1001A3018 != -1)
      swift_once(&qword_1001A3018, sub_10007279C);
    v5 = type metadata accessor for Logger(0, v4);
    sub_10000E8E8(v5, (uint64_t)qword_1001A60D8);
    v43 = a2;
    v6 = Logger.logObject.getter(v43);
    v8 = static os_log_type_t.default.getter(v6, v7);
    if (os_log_type_enabled(v6, v8))
    {
      v9 = 0xD000000000000013;
      v10 = swift_slowAlloc(32, -1);
      v11 = swift_slowAlloc(96, -1);
      v46 = v11;
      *(_DWORD *)v10 = 136315650;
      v12 = objc_msgSend(v43, "targetID");
      if (v12)
      {
        v13 = v12;
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v16 = v15;

      }
      else
      {
        v44 = 0;
        v45 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(0xE000000000000000);
        v14 = 0xD000000000000015;
        v16 = 0x8000000100136820;
      }
      v44 = sub_10001EFA4(v14, v16, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v10 + 4, v10 + 12);

      swift_bridgeObjectRelease(v16);
      *(_WORD *)(v10 + 12) = 2080;
      v28 = objc_msgSend(v43, "peerPublicKey");
      if (v28)
      {
        v29 = v28;
        v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v32 = v31;

        sub_100006B94(v30, v32);
        v33 = Data.description.getter(v30, v32);
        v35 = v34;
        sub_100007348(v30, v32);
        sub_100007348(v30, v32);
      }
      else
      {
        v44 = 0;
        v45 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v45);
        v35 = 0x800000010013A9A0;
        v33 = 0xD000000000000013;
      }
      v44 = sub_10001EFA4(v33, v35, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v10 + 14, v10 + 22);

      swift_bridgeObjectRelease(v35);
      *(_WORD *)(v10 + 22) = 2080;
      v36 = objc_msgSend(v43, "selfPublicKey");
      if (v36)
      {
        v37 = v36;
        v38 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v36);
        v40 = v39;

        sub_100006B94(v38, v40);
        v9 = Data.description.getter(v38, v40);
        v42 = v41;
        sub_100007348(v38, v40);
        sub_100007348(v38, v40);
      }
      else
      {
        v44 = 0;
        v45 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v45);
        v42 = 0x800000010013A9A0;
      }
      v44 = sub_10001EFA4(v9, v42, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v10 + 24, v10 + 32);

      swift_bridgeObjectRelease(v42);
      _os_log_impl((void *)&_mh_execute_header, v6, v8, "FileTransfer session start: TargetID %s, PPK <%s>, SPK <%s>", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy(v11, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      v27 = v10;
      goto LABEL_22;
    }

LABEL_13:
    return;
  }
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v17 = type metadata accessor for Logger(0, v4);
  sub_10000E8E8(v17, (uint64_t)qword_1001A60D8);
  v43 = a1;
  v6 = Logger.logObject.getter(v43);
  v19 = static os_log_type_t.default.getter(v6, v18);
  if (!os_log_type_enabled(v6, v19))
  {

    goto LABEL_13;
  }
  v20 = (uint8_t *)swift_slowAlloc(12, -1);
  v21 = swift_slowAlloc(32, -1);
  v44 = v21;
  *(_DWORD *)v20 = 136315138;
  v46 = (uint64_t)v43;
  v22 = sub_100013194(0, &qword_1001A6418, RPFileTransferProgress_ptr);
  v23 = v43;
  v24 = String.init<A>(reflecting:)(&v46, v22);
  v26 = v25;
  v46 = sub_10001EFA4(v24, v25, &v44);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v20 + 4, v20 + 12);

  swift_bridgeObjectRelease(v26);
  _os_log_impl((void *)&_mh_execute_header, v6, v19, "FileTransfer progress: %s", v20, 0xCu);
  swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v21, -1, -1);
  v27 = (uint64_t)v20;
LABEL_22:
  swift_slowDealloc(v27, -1, -1);

}

uint64_t sub_10007B938(void *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t (*v2)(_QWORD);
  uint64_t v4;
  id v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t (*v9)(_QWORD);
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  id v15;
  uint64_t v16;

  v2 = a2;
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v4 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v4, (uint64_t)qword_1001A60D8);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = v2;
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    v15 = v5;
    v12 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v10 + 4, v10 + 12);
    *v11 = v5;

    v2 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "FileTransfer received item: %@", v10, 0xCu);
    v13 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  return v2(0);
}

void sub_10007BAF0(uint64_t a1, void *a2, void *aBlock)
{
  uint64_t v4;
  void (*v5)(void);
  void *v6;
  uint64_t v7;
  id v8;

  v5 = *(void (**)(void))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = _Block_copy(aBlock);
  v7 = swift_allocObject(&unk_10017AA68, 24, 7);
  *(_QWORD *)(v7 + 16) = v6;
  swift_retain(v4);
  v8 = a2;
  v5();
  swift_release(v4);
  swift_release(v7);

}

void sub_10007BB84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = _convertErrorToNSError(_:)();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_10007BBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char v26;
  __n128 v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void (*v32)(__n128);
  uint64_t v33;
  __n128 v34;
  __n128 v35;
  uint64_t v36;
  void *v37;
  __n128 v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  BOOL v53;
  int v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void **aBlock;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  void *v65;
  void *v66;
  uint64_t v67;
  char v68[24];

  v6 = (int *)type metadata accessor for D2DSetupModel(0);
  v7 = __chkstk_darwin(v6);
  v56 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v57 = (uint64_t)&v55 - v9;
  v58 = type metadata accessor for DispatchWorkItemFlags(0);
  v60 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for DispatchQoS(0);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchTime(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v55 - v19;
  a1 += 16;
  swift_beginAccess(a1, v68, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v22 = Strong;
    if (a2 == 0x363534333231 && a3 == 0xE600000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0x363534333231, 0xE600000000000000, 0) & 1) != 0)
    {
      v23 = v22 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
      v24 = *(void **)(v22 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model);
      v25 = *(_QWORD *)(v22 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + 8);
      *(_OWORD *)v23 = xmmword_100133A90;
      v26 = *(_BYTE *)(v23 + 16);
      *(_BYTE *)(v23 + 16) = 3;
      sub_10007D5D0(v24, v25, v26);
      sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
      v28 = (void *)static OS_dispatch_queue.main.getter(v27);
      static DispatchTime.now()();
      + infix(_:_:)(v18, 3.0);
      v55 = *(void (**)(char *, uint64_t))(v15 + 8);
      v29 = v14;
      v55(v18, v14);
      v30 = swift_allocObject(&unk_10017A780, 24, 7);
      swift_weakInit(v30 + 16, v22);
      v66 = sub_10007D5F8;
      v67 = v30;
      aBlock = _NSConcreteStackBlock;
      v63 = 1107296256;
      v31 = &unk_10017A860;
    }
    else
    {
      if ((a2 != 0x303130303030 || a3 != 0xE600000000000000)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, 0x303130303030, 0xE600000000000000, 0) & 1) == 0)
      {
        v49 = v22 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
        *(_BYTE *)(v49 + v6[13]) = 0;
        v50 = v49 + v6[15];
        *(_DWORD *)v50 = 0x10000;
        *(_BYTE *)(v50 + 4) = 0;
        v51 = v6[11];
        v52 = *(_DWORD *)(v49 + v51);
        v53 = __CFADD__(v52, 1);
        v54 = v52 + 1;
        if (v53)
        {
          __break(1u);
          return;
        }
        *(_DWORD *)(v49 + v51) = v54;
        goto LABEL_13;
      }
      v32 = *(void (**)(__n128))(v22 + 80);
      if (v32)
      {
        v33 = *(_QWORD *)(v22 + 88);
        v34 = swift_retain(v33);
        v32(v34);
        sub_100012F60((uint64_t)v32, v33);
      }
      sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
      v28 = (void *)static OS_dispatch_queue.main.getter(v35);
      static DispatchTime.now()();
      + infix(_:_:)(v18, 5.0);
      v55 = *(void (**)(char *, uint64_t))(v15 + 8);
      v29 = v14;
      v55(v18, v14);
      v36 = swift_allocObject(&unk_10017A780, 24, 7);
      swift_weakInit(v36 + 16, v22);
      v66 = sub_10007D5C8;
      v67 = v36;
      aBlock = _NSConcreteStackBlock;
      v63 = 1107296256;
      v31 = &unk_10017A838;
    }
    v64 = sub_10001BB50;
    v65 = v31;
    v37 = _Block_copy(&aBlock);
    v38 = swift_release(v67);
    static DispatchQoS.unspecified.getter(v38);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v39 = sub_10007D580();
    v40 = sub_100006A6C((uint64_t *)&unk_1001A4330);
    v41 = sub_100012F94();
    v42 = v58;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v40, v41, v58, v39);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v20, v13, v11, v37);
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v42);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v13, v61);
    v55(v20, v29);
LABEL_13:
    v43 = swift_unknownObjectWeakLoadStrong(v22 + 16);
    if (v43)
    {
      v44 = v43;
      v45 = v57;
      sub_10007D3F0(v22 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model, v57);
      v46 = v56;
      sub_10007D3F0(v45, v56);
      v47 = v44 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
      swift_beginAccess(v44 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, &aBlock, 33, 0);
      swift_retain(v22);
      sub_10007D434(v46, v47);
      swift_endAccess(&aBlock);
      sub_10009E4A8();
      sub_10007D478(v46);
      swift_release_n(v22, 2, v48);
      swift_unknownObjectRelease(v44);
      sub_10007D478(v45);
    }
    else
    {
      swift_release(v22);
    }
  }
}

void sub_10007C160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  float v29;
  _BOOL4 v30;
  float v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  uint64_t v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  void *v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  void *v64;
  char *v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  void *v70;
  __n128 v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t inited;
  uint64_t v82;
  unint64_t v83;
  id v84;
  NSString v85;
  Class isa;
  id v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  char v92;
  void *v93;
  id v94;
  void *v95;
  int v96;
  uint64_t Strong;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char v113[80];
  double aBlock;
  uint64_t v115;
  uint64_t (*v116)(uint64_t);
  void *v117;
  uint64_t (*v118)();
  uint64_t v119;
  char v120[24];
  char v121[8];
  uint64_t v122;
  double v123;
  float v124;
  __int128 v125;
  char v126;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v111 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v110 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for DispatchTime(0);
  v107 = *(_QWORD *)(v109 - 8);
  v8 = __chkstk_darwin(v109);
  v106 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v108 = (char *)&v100 - v10;
  v11 = type metadata accessor for D2DSetupModel(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v100 - v16;
  v18 = __chkstk_darwin(v15);
  v21 = (char *)&v100 - v20;
  v125 = xmmword_100133AE0;
  v126 = 3;
  v124 = 0.0;
  v123 = 0.0;
  v22 = v1 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
  v112 = v18;
  v23 = *(int *)(v18 + 120);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model + v23);
  if ((unint64_t)v24 <= 0xA)
  {
    v104 = v5;
    v125 = xmmword_100133AE0;
    v126 = 3;
    v29 = (float)v24 / 10.0;
    v124 = v29;
    v30 = v24 == 0;
    v31 = 500.0 - (float)(v29 * 500.0);
    v32 = 5;
    v33 = 10;
  }
  else
  {
    if ((unint64_t)(v24 - 22) < 0xFFFFFFFFFFFFFFF5)
    {
      sub_10007D3F0(v22, (uint64_t)&v100 - v20);
      v25 = sub_100085DA4();
      sub_10007D478((uint64_t)v21);
      if (v25)
      {
        v26 = v112;
        if (v25 != 1)
        {
          swift_bridgeObjectRelease(0xE700000000000000);
          goto LABEL_26;
        }
        v27 = 0x6C616D726F6ELL;
        v28 = 0xE600000000000000;
      }
      else
      {
        v27 = 0x64696C61766E69;
        v28 = 0xE700000000000000;
        v26 = v112;
      }
      v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, 0x6572756C696166, 0xE700000000000000, 0);
      swift_bridgeObjectRelease(v28);
      if ((v77 & 1) == 0)
      {
LABEL_27:
        v90 = *(void **)v22;
        v91 = *(_QWORD *)(v22 + 8);
        *(_OWORD *)v22 = xmmword_100133AA0;
        v92 = *(_BYTE *)(v22 + 16);
        *(_BYTE *)(v22 + 16) = 3;
        sub_10007D5D0(v90, v91, v92);
        v93 = *(void **)(v22 + *(int *)(v26 + 76));
        if (v93)
        {
          v94 = v93;
          v95 = (void *)_convertErrorToNSError(_:)();

        }
        else
        {
          v95 = 0;
        }
        v96 = NSErrorToOSStatus(v95);

        sub_100079C84(v96);
        Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
        if (Strong)
        {
          v98 = Strong;
          sub_10007D3F0(v22, (uint64_t)v17);
          sub_10007D3F0((uint64_t)v17, (uint64_t)v14);
          v99 = v98 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
          swift_beginAccess(v98 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, &aBlock, 33, 0);
          sub_10007D434((uint64_t)v14, v99);
          swift_endAccess(&aBlock);
          sub_10009E4A8();
          sub_10007D478((uint64_t)v14);
          swift_unknownObjectRelease(v98);
          sub_10007D478((uint64_t)v17);
        }
        goto LABEL_23;
      }
LABEL_26:
      static String._unconditionallyBridgeFromObjectiveC(_:)(NSOSStatusErrorDomain);
      v79 = v78;
      v80 = sub_100006A6C(&qword_1001A56A8);
      inited = swift_initStackObject(v80, v113);
      *(_OWORD *)(inited + 16) = xmmword_100131C40;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
      *(_QWORD *)(inited + 40) = v82;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      strcpy((char *)(inited + 48), "Fake Timeout");
      *(_BYTE *)(inited + 61) = 0;
      *(_WORD *)(inited + 62) = -5120;
      v83 = sub_1000046D0(inited);
      v84 = objc_allocWithZone((Class)NSError);
      v85 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v79);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v83);
      v87 = objc_msgSend(v84, "initWithDomain:code:userInfo:", v85, -6722, isa);

      v88 = *(int *)(v26 + 76);
      v89 = *(void **)(v22 + v88);
      *(_QWORD *)(v22 + v88) = v87;

      goto LABEL_27;
    }
    v104 = v5;
    v125 = xmmword_100133AF0;
    v126 = 3;
    v29 = (float)(v24 - 11) / 10.0;
    v124 = v29;
    v30 = v24 == 11;
    v31 = 2000.0 - (float)(v29 * 2000.0);
    v32 = 6;
    v33 = 21;
  }
  v103 = v6;
  v34 = v31;
  if (v30)
    v35 = -1.0;
  else
    v35 = v34;
  v123 = v35;
  if (v24 == v33)
    v36 = 2.0;
  else
    v36 = 0.3;
  *(_QWORD *)(v22 + v23) = v24 + 1;
  if (qword_1001A3018 != -1)
    swift_once(&qword_1001A3018, sub_10007279C);
  v37 = type metadata accessor for Logger(0, v19);
  sub_10000E8E8(v37, (uint64_t)qword_1001A60D8);
  sub_10007D610((id)v32, 0, 3);
  v38 = sub_10007D610((id)v32, 0, 3);
  v39 = Logger.logObject.getter(v38);
  v41 = static os_log_type_t.default.getter(v39, v40);
  v42 = os_log_type_enabled(v39, v41);
  v105 = v3;
  if (v42)
  {
    v43 = swift_slowAlloc(32, -1);
    v102 = v14;
    v44 = v43;
    v100 = swift_slowAlloc(32, -1);
    v122 = v100;
    *(_DWORD *)v44 = 136315650;
    v101 = v2;
    aBlock = *(double *)&v32;
    v115 = 0;
    LOBYTE(v116) = 3;
    sub_10007D610((id)v32, 0, 3);
    v45 = String.init<A>(reflecting:)(&aBlock, &type metadata for D2DSetupModel.SetupProgress);
    v46 = v1;
    v48 = v47;
    aBlock = COERCE_DOUBLE(sub_10001EFA4(v45, v47, &v122));
    v2 = v101;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v115, v44 + 4, v44 + 12);
    v49 = v48;
    v1 = v46;
    swift_bridgeObjectRelease(v49);
    sub_10007D5D0((void *)v32, 0, 3);
    sub_10007D5D0((void *)v32, 0, 3);
    *(_WORD *)(v44 + 12) = 2048;
    aBlock = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v115, v44 + 14, v44 + 22);
    *(_WORD *)(v44 + 22) = 2048;
    aBlock = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v115, v44 + 24, v44 + 32);
    _os_log_impl((void *)&_mh_execute_header, v39, v41, "Progress: %s { 'remainSecs' : %f, 'progress' : %f }", (uint8_t *)v44, 0x20u);
    v50 = v100;
    swift_arrayDestroy(v100, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1, -1);
    v51 = v44;
    v14 = v102;
    swift_slowDealloc(v51, -1, -1);
  }
  else
  {
    sub_10007D5D0((void *)v32, 0, 3);
    sub_10007D5D0((void *)v32, 0, 3);
  }

  swift_beginAccess(&v124, &v122, 0, 0);
  v52 = v112;
  v53 = v22 + *(int *)(v112 + 64);
  *(float *)v53 = v124;
  *(_BYTE *)(v53 + 4) = 0;
  swift_beginAccess(&v123, v121, 0, 0);
  v54 = v22 + *(int *)(v52 + 68);
  *(double *)v54 = v123;
  *(_BYTE *)(v54 + 8) = 0;
  swift_beginAccess(&v125, v120, 0, 0);
  v55 = v125;
  v56 = *(void **)v22;
  v57 = *(_QWORD *)(v22 + 8);
  *(_OWORD *)v22 = v125;
  v58 = v126;
  v59 = *(_BYTE *)(v22 + 16);
  *(_BYTE *)(v22 + 16) = v126;
  sub_10007D610((id)v55, *((uint64_t *)&v55 + 1), v58);
  sub_10007D5D0(v56, v57, v59);
  v60 = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (v60)
  {
    v61 = v60;
    sub_10007D3F0(v22, (uint64_t)v17);
    sub_10007D3F0((uint64_t)v17, (uint64_t)v14);
    v62 = v61 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
    swift_beginAccess(v61 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, &aBlock, 33, 0);
    sub_10007D434((uint64_t)v14, v62);
    swift_endAccess(&aBlock);
    sub_10009E4A8();
    sub_10007D478((uint64_t)v14);
    swift_unknownObjectRelease(v61);
    sub_10007D478((uint64_t)v17);
  }
  sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
  v64 = (void *)static OS_dispatch_queue.main.getter(v63);
  v65 = v106;
  static DispatchTime.now()();
  v66 = v108;
  + infix(_:_:)(v65, v36);
  v67 = *(void (**)(char *, uint64_t))(v107 + 8);
  v68 = v109;
  v67(v65, v109);
  v69 = swift_allocObject(&unk_10017A780, 24, 7);
  swift_weakInit(v69 + 16, v1);
  v118 = sub_10007D5F8;
  v119 = v69;
  aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
  v115 = 1107296256;
  v116 = sub_10001BB50;
  v117 = &unk_10017A888;
  v70 = _Block_copy(&aBlock);
  v71 = swift_release(v119);
  v72 = v110;
  static DispatchQoS.unspecified.getter(v71);
  aBlock = COERCE_DOUBLE(_swiftEmptyArrayStorage);
  v73 = sub_10007D580();
  v74 = sub_100006A6C((uint64_t *)&unk_1001A4330);
  v75 = sub_100012F94();
  v76 = v104;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v74, v75, v2, v73);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v66, v72, v76, v70);
  _Block_release(v70);

  (*(void (**)(char *, uint64_t))(v105 + 8))(v76, v2);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v72, v103);
  v67(v66, v68);
LABEL_23:
  sub_10007D5D0((void *)v125, *((uint64_t *)&v125 + 1), v126);
}

void sub_10007CBF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void (*v4)(__n128);
  uint64_t v5;
  __n128 v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(void (**)(__n128))(Strong + 96);
    v5 = *(_QWORD *)(Strong + 104);
    sub_100022024((uint64_t)v4, v5);
    v6 = swift_release(v3);
    if (v4)
    {
      v4(v6);
      sub_100012F60((uint64_t)v4, v5);
    }
  }
}

double sub_10007CC70(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    sub_10007C160();
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

id sub_10007CCC4(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "setPairFlags:", a1);
}

id sub_10007CCD8(char a1)
{
  void *v1;

  return objc_msgSend(v1, "setSupportsDependentSetup:", a1 & 1);
}

id sub_10007CCEC()
{
  void *v0;

  return objc_msgSend(v0, "fileTransferSessionTemplate");
}

void sub_10007CD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000DC80(a1, a2, a3, a4, (uint64_t)sub_10000DBE4, (uint64_t)&unk_10017AAD0, (SEL *)&selRef_setProgressHandler_);
}

uint64_t (*sub_10007CD2C())()
{
  void *v0;
  uint64_t (*result)();

  result = (uint64_t (*)())objc_msgSend(v0, "promptForPINHandler");
  if (result)
  {
    *(_QWORD *)(swift_allocObject(&unk_10017AAB8, 24, 7) + 16) = result;
    return sub_10007E040;
  }
  return result;
}

void sub_10007CD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000DC80(a1, a2, a3, a4, (uint64_t)sub_10006E858, (uint64_t)&unk_10017AA80, (SEL *)&selRef_setPromptForPINHandler_);
}

void sub_10007CDAC()
{
  void *v0;
  Class isa;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "sendAppEvent:", isa);

}

id sub_10007CE00(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "setFileTransferSession:", a1);
}

id sub_10007CE14(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "launchSetupForMigration:", a1);
}

uint64_t sub_10007CE28()
{
  return type metadata accessor for D2DSetupInteractor(0);
}

uint64_t type metadata accessor for D2DSetupInteractor(uint64_t a1)
{
  uint64_t result;

  result = qword_1001A6138;
  if (!qword_1001A6138)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for D2DSetupInteractor);
  return result;
}

uint64_t sub_10007CE6C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = &unk_100133D38;
  v4[1] = &unk_100133D50;
  v4[2] = &unk_100133D50;
  v4[3] = &unk_100133D50;
  v4[4] = &unk_100133D50;
  v4[5] = &unk_100133D50;
  v4[6] = &unk_100133D50;
  v4[7] = &unk_100133D50;
  v4[8] = &unk_100133D50;
  result = type metadata accessor for D2DSetupModel(319);
  if (v3 <= 0x3F)
  {
    v4[9] = *(_QWORD *)(result - 8) + 64;
    v4[10] = &unk_100133D50;
    v4[11] = &unk_100133D50;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_10007CF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSURL *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  Class isa;
  unsigned int v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  _BYTE v33[16];
  id v34;

  v0 = sub_100006A6C(&qword_1001A3618);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v32[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v5 = (char *)&v32[-1] - v4;
  URL.init(string:)(0x2F2F3A7366657270, 0xEC000000746F6F72);
  v6 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (!v6)
    goto LABEL_5;
  v7 = v6;
  sub_100006BD8((uint64_t)v5, (uint64_t)v3, &qword_1001A3618);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) != 1)
  {
    URL._bridgeToObjectiveC()(v10);
    v11 = v12;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
  }
  v13 = sub_100117A34();
  v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v34 = 0;
  v16 = objc_msgSend(v7, "openSensitiveURL:withOptions:error:", v11, isa, &v34);

  v17 = v34;
  if (!v16)
  {
    v18 = v17;
    v19 = _convertNSErrorToError(_:)(v17);

    swift_willThrow(v20);
    sub_10000D858((uint64_t)v5, &qword_1001A3618);
    if (qword_1001A3018 != -1)
      swift_once(&qword_1001A3018, sub_10007279C);
    v22 = type metadata accessor for Logger(0, v21);
    sub_10000E8E8(v22, (uint64_t)qword_1001A60D8);
    swift_errorRetain(v19);
    v23 = swift_errorRetain(v19);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = (void *)swift_slowAlloc(32, -1);
      v34 = v27;
      *(_DWORD *)v26 = 136315138;
      swift_getErrorValue(v19, v33, v32);
      v28 = Error.localizedDescription.getter(v32[1], v32[2]);
      v30 = v29;
      v31 = sub_10001EFA4(v28, v29, (uint64_t *)&v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32, v26 + 4, v26 + 12);
      swift_bridgeObjectRelease(v30);
      swift_errorRelease(v19);
      swift_errorRelease(v19);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Open Settings failed with error: %s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      swift_errorRelease(v19);
    }
    else
    {
      swift_errorRelease(v19);
      swift_errorRelease(v19);
      swift_errorRelease(v19);

    }
  }
  else
  {
LABEL_5:
    sub_10000D858((uint64_t)v5, &qword_1001A3618);
  }
}

uint64_t sub_10007D2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v5 = type metadata accessor for D2DSetupModel(0);
  v6 = __chkstk_darwin(v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v10 = &v16[-v9 - 8];
  *(_QWORD *)(v2 + 24) = a2;
  v11 = swift_unknownObjectWeakAssign(v2 + 16, a1);
  result = swift_unknownObjectWeakLoadStrong(v11);
  if (result)
  {
    v13 = result;
    sub_10007D3F0(v2 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model, (uint64_t)v10);
    sub_10007D3F0((uint64_t)v10, (uint64_t)v8);
    v14 = v13 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
    swift_beginAccess(v13 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model, v16, 33, 0);
    sub_10007D434((uint64_t)v8, v14);
    swift_endAccess(v16);
    sub_10009E4A8();
    sub_10007D478((uint64_t)v8);
    swift_unknownObjectRelease(v13);
    return sub_10007D478((uint64_t)v10);
  }
  return result;
}

uint64_t sub_10007D3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for D2DSetupModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007D434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for D2DSetupModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007D478(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for D2DSetupModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007D4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for D2DSetupModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007D4F8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007D51C()
{
  uint64_t v0;

  return sub_100072C3C(v0);
}

uint64_t sub_10007D524()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007D548(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007D558(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007D560()
{
  return sub_10007D64C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_10007D574()
{
  uint64_t *v0;

  sub_10007BBD0(v0[2], v0[3], v0[4]);
}

unint64_t sub_10007D580()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A38F0;
  if (!qword_1001A38F0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1001A38F0);
  }
  return result;
}

void sub_10007D5C8()
{
  uint64_t v0;

  sub_10007CBF4(v0);
}

void sub_10007D5D0(void *a1, uint64_t a2, char a3)
{
  if (a3 == 2)
  {
LABEL_4:

    return;
  }
  if (a3 != 1)
  {
    if (a3)
      return;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease(a2);
}

double sub_10007D5F8()
{
  uint64_t v0;

  return sub_10007CC70(v0);
}

id sub_10007D610(id result, uint64_t a2, char a3)
{
  if (a3 == 2)
    return result;
  if (a3 != 1)
  {
    if (a3)
      return result;
    return result;
  }
  return (id)swift_bridgeObjectRetain(a2);
}

uint64_t sub_10007D638()
{
  return sub_10007D64C((void (*)(_QWORD))&_swift_unknownObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10007D64C(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, 40, 7);
}

uint64_t sub_10007D688(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1001A63E4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10007D6F4;
  return sub_100073890(a1, v4, v5, v6);
}

uint64_t sub_10007D6F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t sub_10007D73C()
{
  unint64_t result;

  result = qword_1001A63F0;
  if (!qword_1001A63F0)
  {
    result = swift_getWitnessTable(&unk_100131730, &type metadata for DTOFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_1001A63F0);
  }
  return result;
}

uint64_t sub_10007D780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100006A6C(&qword_1001A6400);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10007D7E4(char a1)
{
  sub_100006A6C(&qword_1001A6400);
  return sub_100076668(a1);
}

uint64_t sub_10007D824(int a1, unint64_t a2)
{
  uint64_t v2;

  return sub_100077A20(a1, a2, v2);
}

void sub_10007D82C(int a1, int a2)
{
  uint64_t v2;

  sub_100079498(a1, a2, v2);
}

uint64_t sub_10007D834()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007D858()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 16))(0, 0xFFFFFFFFLL);
}

double sub_10007D880()
{
  uint64_t v0;

  return sub_100079B08(v0);
}

const char *sub_10007D888(int a1)
{
  const char *result;

  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300)
              return "BackupProgress";
            if (a1 == 310)
              return "SyncProgress";
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000)
          return "SecureIntentStart";
        if (a1 == 1001)
          return "SecureIntentFinish";
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        result = "SU-No-SetupCancelled";
        break;
      case 904:
        result = "SU-No-SetupObliterate";
        break;
      case 905:
        result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        result = "SysDrop AirDrop Event";
        break;
      case 907:
        result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        result = "SysDrop Cancel Event";
        break;
      case 909:
        result = "File Transfer Progress Event";
        break;
      case 910:
        result = "File Transfer Completed Event";
        break;
      case 911:
        result = "iOSWiFiSetup";
        break;
      case 912:
        result = "HKPrimaryResidentSSIDFetchStart";
        break;
      default:
        switch(a1)
        {
          case 800:
            result = "AuthAccountsStart";
            break;
          case 803:
            result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            result = "AuthAccountsStoreProgress";
            break;
          case 805:
            result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          result = "TVLSFinish";
          break;
        case 270:
          result = "TVLSEstimateStart";
          break;
        case 272:
          result = "TVLSEstimateFinal";
          break;
        case 274:
          result = "TVLSEstimateFailed";
          break;
        case 276:
          result = "TVLSTryAgain";
          break;
        case 277:
          result = "TVLSToneBegan";
          break;
        case 278:
          result = "TVLCalStart";
          break;
        case 279:
          result = "TVLCalStep";
          break;
        case 280:
          result = "TVLCalFailed";
          break;
        case 281:
          result = "TVLCalTryAgain";
          break;
        case 282:
          result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250)
            return "?";
          result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130)
            return "WiFiPoweredOff";
          if (a1 == 140)
            return "RecognizeVoice";
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            result = "iCloudStart";
          }
          else
          {
            if (a1 != 224)
              return "?";
            result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65)
            return "SecurityAPCLoopStart";
          if (a1 == 70)
            return "SecurityFinish";
        }
        else
        {
          if (a1 == 50)
            return "PreAuthFinish";
          if (a1 == 60)
            return "SecurityStart";
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              result = "Error";
              break;
            case 31:
              result = "SessionStarted";
              break;
            case 32:
              result = "SessionEnded";
              break;
            case 33:
              result = "SessionSecured";
              break;
            case 35:
              result = "ConnectStart";
              break;
            case 40:
              result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        result = "BasicConfigStart";
        break;
      case 'Z':
        result = "BasicConfigFinish";
        break;
      case '\\':
        result = "StepStart";
        break;
      case '^':
        result = "StepFinish";
        break;
      case '_':
        result = "PreFinish";
        break;
        result = "SetupFinished";
        break;
      case 'a':
        result = "SetupResumed";
        break;
      case 'b':
        result = "SetupSuspend";
        break;
      case 'c':
        result = "SetupPeerSWUpdate";
        break;
      case 'd':
        result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

void sub_10007E004(uint64_t a1)
{
  uint64_t v1;

  sub_10007B0C0(a1, v1);
}

void sub_10007E00C(void *a1)
{
  uint64_t v1;

  sub_10007B380(a1, *(void **)(v1 + 16));
}

uint64_t sub_10007E014()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10007E038(uint64_t a1)
{
  uint64_t v1;

  sub_10007BB84(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10007E040()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10007E0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A6420);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A6420);
  if (qword_1001A2F00 != -1)
    swift_once(&qword_1001A2F00, sub_100018D74);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD4B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_10007E14C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v2 = type metadata accessor for AuthenticateAccountsModel(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007F1C4(a1, (uint64_t)v4);
  v5 = type metadata accessor for AuthenticateAccounsInteractor(0);
  v6 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  *(_QWORD *)(v6 + 24) = 0;
  swift_unknownObjectWeakInit(v6 + 16, 0);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_setupSession) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_remoteViewControllerProxy) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_loggedUsageStart) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_loggedUsageDone) = 0;
  v7 = (_QWORD *)(v6 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_idleTimerReason);
  *v7 = 0xD000000000000031;
  v7[1] = 0x800000010013AC70;
  sub_10007F208((uint64_t)v4, v6 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model);
  return v6;
}

id sub_10007E250()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsRouter()), "init");
}

id sub_10007E280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;

  v8 = objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsPresenter());
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRetain(a3);
  return sub_1000D9334(a1, a2, a3, a4);
}

uint64_t sub_10007E40C(void *a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, __n128);
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(__n128);
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v4 = v3;
  v8 = type metadata accessor for AuthenticateAccountsModel(0);
  result = __chkstk_darwin(v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = objc_msgSend(a1, "userInfo");
    if (v12)
    {
      v13 = v12;
      v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v12, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    }
    else
    {
      v14 = sub_10000434C((uint64_t)_swiftEmptyArrayStorage);
    }
    if (qword_1001A3020 != -1)
      swift_once(&qword_1001A3020, sub_10007E0BC);
    v16 = type metadata accessor for Logger(0, v15);
    sub_10000E8E8(v16, (uint64_t)qword_1001A6420);
    v17 = swift_bridgeObjectRetain_n(v14, 2);
    v18 = Logger.logObject.getter(v17);
    v20 = static os_log_type_t.default.getter(v18, v19);
    if (os_log_type_enabled(v18, v20))
    {
      v53 = v4;
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v55 = a3;
      v23 = v22;
      v57 = v22;
      *(_DWORD *)v21 = 136315138;
      v52 = v21 + 4;
      v24 = swift_bridgeObjectRetain(v14);
      v54 = v11;
      v25 = Dictionary.description.getter(v24, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
      v26 = a2;
      v28 = v27;
      swift_bridgeObjectRelease(v14);
      v56 = sub_10001EFA4(v25, v28, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v52, v21 + 12);
      swift_bridgeObjectRelease_n(v14, 2);
      v29 = v28;
      a2 = v26;
      v4 = v53;
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v18, v20, "AuthenticateAccounts Flow being configured {userInfo: %s}", v21, 0xCu);
      v11 = v54;
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v14, 2);
    }
    sub_1000A7CBC(v14, v11);
    v30 = v4 + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_interactorGenerator;
    v31 = v4;
    v32 = *(uint64_t (**)(char *, __n128))(v4
                                                   + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_interactorGenerator);
    v33 = *(_QWORD *)(v30 + 8);
    v34 = swift_retain(v33);
    v35 = v32(v11, v34);
    v37 = v36;
    swift_release(v33);
    v39 = *(uint64_t (**)(__n128))(v31
                                           + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_routerGenerator);
    v38 = *(_QWORD *)(v31
                    + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_routerGenerator
                    + 8);
    v40 = swift_retain(v38);
    v41 = v39(v40);
    v43 = v42;
    swift_release(v38);
    v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v31
                                                                               + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_presenterGenerator);
    v44 = *(_QWORD *)(v31
                    + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_presenterGenerator
                    + 8);
    v46 = swift_retain(v44);
    v47 = v45(v35, v37, v41, v43, v46);
    v49 = v48;
    swift_release(v44);
    v50 = (uint64_t *)(v31 + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_presenter);
    v51 = *(_QWORD *)(v31 + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_presenter);
    *v50 = v47;
    v50[1] = v49;
    result = swift_unknownObjectRelease(v51);
    if (a2)
    {
      a2(result);
      swift_unknownObjectRelease(v35);
      swift_unknownObjectRelease(v41);
      return sub_100071138((uint64_t)v11);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10007E838(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE *v11;
  _BYTE *v12;
  char *v13;
  id v14;
  objc_super v15;
  _BYTE v16[136];

  v2 = v1;
  v15.receiver = v2;
  v15.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v15, "viewDidAppear:", a1 & 1);
  if (qword_1001A3020 != -1)
    swift_once(&qword_1001A3020, sub_10007E0BC);
  v5 = type metadata accessor for Logger(0, v4);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A6420);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "AuthenticateAccounts Flow viewDidAppear", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = *(_BYTE **)&v2[OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_presenter];
  if (v11)
  {
    v11[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_currentState] = 0;
    swift_unknownObjectRetain(v11);
    sub_1000D965C((uint64_t)v16);
    v12 = objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsStartViewController());
    v13 = v11;
    v14 = sub_10007ED2C((uint64_t)v16, v13, v12);
    sub_10007EF30(v14, v2, (uint64_t)v13, *(_QWORD *)&v13[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_router]);
    swift_unknownObjectRelease(v13);

  }
}

id sub_10007E9F0(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  if (qword_1001A3020 != -1)
    swift_once(&qword_1001A3020, sub_10007E0BC);
  v6 = type metadata accessor for Logger(0, v4);
  v7 = sub_10000E8E8(v6, (uint64_t)qword_1001A6420);
  v8 = Logger.logObject.getter(v7);
  v10 = static os_log_type_t.default.getter(v8, v9);
  if (os_log_type_enabled(v8, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v10, "AuthenticateAccounts Flow viewDidDisappear", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_presenter];
  if (v12)
  {
    v13 = swift_unknownObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_presenter]);
    sub_1000DC240(v13, v14);
    swift_unknownObjectRelease(v12);
  }
  v16.receiver = v2;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, "viewDidDisappear:", a1 & 1);
}

uint64_t sub_10007EC50()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_presenter));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_interactorGenerator
                          + 8));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_routerGenerator
                          + 8));
  return swift_release(*(_QWORD *)(v0
                                 + OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsFlowViewController_presenterGenerator
                                 + 8));
}

uint64_t type metadata accessor for AuthenticateAccountsFlowViewController()
{
  return objc_opt_self(_TtC18SharingViewService38AuthenticateAccountsFlowViewController);
}

id sub_10007ED2C(uint64_t a1, void *a2, _BYTE *a3)
{
  char *v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  char *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  NSString v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  objc_super v30;

  v6 = &a3[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_presenter];
  *((_QWORD *)v6 + 1) = 0;
  v7 = swift_unknownObjectWeakInit(v6, 0);
  a3[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_started] = 0;
  v8 = &a3[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_viewModel];
  v9 = *(_OWORD *)(a1 + 112);
  *((_OWORD *)v8 + 6) = *(_OWORD *)(a1 + 96);
  *((_OWORD *)v8 + 7) = v9;
  *((_QWORD *)v8 + 16) = *(_QWORD *)(a1 + 128);
  v10 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v8 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v8 + 3) = v10;
  v11 = *(_OWORD *)(a1 + 80);
  *((_OWORD *)v8 + 4) = *(_OWORD *)(a1 + 64);
  *((_OWORD *)v8 + 5) = v11;
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a1;
  *((_OWORD *)v8 + 1) = v12;
  *(_QWORD *)(v7 + 8) = &off_10017CF68;
  swift_unknownObjectWeakAssign(v7, a2);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_BYTE *)(a1 + 48);
  v16 = objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsImageCardContentView());
  sub_10007F060((_QWORD *)a1);
  sub_10007F0F8(v13, v14);
  v17 = (char *)sub_1000955A4(v13, v14, v15);
  v30.receiver = a3;
  v30.super_class = (Class)type metadata accessor for AuthenticateAccountsStartViewController();
  v18 = objc_msgSendSuper2(&v30, "initWithContentView:", v17);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = v18;
  objc_msgSend(v20, "setDismissalType:", v19);
  v21 = v20;
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setTitle:", v22);

  v23 = v21;
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setSubtitle:", v24);

  v25 = *(void **)(a1 + 56);
  v26 = OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageTintColor;
  v27 = *(void **)&v17[OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageTintColor];
  *(_QWORD *)&v17[OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageTintColor] = v25;
  v28 = v25;

  objc_msgSend(*(id *)&v17[OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageView], "setTintColor:", *(_QWORD *)&v17[v26]);
  sub_10007F100((_QWORD *)a1);

  return v23;
}

void sub_10007EF30(void *a1, id a2, uint64_t a3, uint64_t a4)
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  _OWORD v18[2];
  _OWORD v19[2];

  v8 = objc_msgSend(a2, "_remoteViewControllerProxy");
  if (v8)
  {
    v9 = v8;
    _bridgeAnyObjectToAny(_:)(v18);
    swift_unknownObjectRelease(v9);
    sub_100006AAC(v18, v19);
    v10 = sub_100006A6C((uint64_t *)&unk_1001A55D0);
    swift_dynamicCast(&v17, v19, (char *)&type metadata for Any + 8, v10, 7);
    v11 = v17;
    v12 = *(_QWORD *)(a4 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_remoteViewControllerProxy);
    *(_QWORD *)(a4 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_remoteViewControllerProxy) = v17;
    swift_unknownObjectRetain(v11);
    swift_unknownObjectRelease(v12);
    v13 = *(void **)(a4 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_currentCardViewController);
    *(_QWORD *)(a4 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_currentCardViewController) = a1;
    v14 = a1;

    v15 = objc_msgSend(a2, "presentProxCardFlowWithDelegate:initialViewController:", a3, v14);
    v16 = *(void **)(a4 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_navigationController);
    *(_QWORD *)(a4 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_navigationController) = v15;
    swift_unknownObjectRelease(v11);

  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_10007F060(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = (void *)a1[7];
  v6 = a1[12];
  v7 = a1[14];
  v8 = a1[16];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  sub_10007F0F8(v3, v4);
  v9 = v5;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_10007F0F8(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRetain(a2);
}

_QWORD *sub_10007F100(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[1];
  v3 = a1[4];
  v4 = a1[5];
  v5 = (void *)a1[7];
  v6 = a1[12];
  v7 = a1[14];
  v8 = a1[16];
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(v2);
  sub_10007F198(v3, v4);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);

  return a1;
}

uint64_t sub_10007F198(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_10007F1A0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007F1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AuthenticateAccountsModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007F208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AuthenticateAccountsModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007F24C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A6480);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A6480);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10007F2DC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  _QWORD v16[5];
  uint64_t v17;
  objc_super v18;

  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v18, "viewDidLoad");
  sub_1000897BC(0x6Fu);
  v2 = v1;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  objc_msgSend(v0, "setTitle:", v3);

  objc_msgSend(v0, "setDismissalType:", 1);
  v4 = objc_msgSend(v0, "contentView");
  v5 = objc_msgSend(v4, "pickerView");

  objc_msgSend(v5, "setDataSource:", v0);
  v6 = objc_msgSend(v0, "contentView");
  v7 = objc_msgSend(v6, "pickerView");

  objc_msgSend(v7, "setDelegate:", v0);
  sub_1000897BC(0);
  v9 = v8;
  v10 = swift_allocObject(&unk_10017AB38, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v0);
  swift_retain(v10);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v16[4] = sub_10007FD18;
  v17 = v10;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10001B5D0;
  v16[3] = &unk_10017AB50;
  v12 = _Block_copy(v16);
  v13 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v11, 0, v12);

  _Block_release(v12);
  v14 = v17;
  swift_release(v10);
  v15 = objc_msgSend(v0, "addAction:", v13, swift_release(v14).n128_f64[0]);

}

void sub_10007F518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  char v24[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC18SharingViewService30AirTagRolePickerViewController_mainController);
    if (v6)
    {
      v8 = (char *)v6;
      if (qword_1001A3028 != -1)
        swift_once(&qword_1001A3028, sub_10007F24C);
      v9 = type metadata accessor for Logger(0, v7);
      v10 = sub_10000E8E8(v9, (uint64_t)qword_1001A6480);
      v11 = Logger.logObject.getter(v10);
      v13 = static os_log_type_t.default.getter(v11, v12);
      if (os_log_type_enabled(v11, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v13, "Continue pressed in Role Picker", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }

      if (SFIsDevicePhone())
      {
        v15 = *(void **)&v8[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
        if (v15)
        {
          v16 = swift_allocObject(&unk_10017AB88, 24, 7);
          *(_QWORD *)(v16 + 16) = v8;
          v17 = v15;
          v18 = v8;
          sub_1000B41C0(v17, (uint64_t)sub_10007FD5C, v16);

          swift_release(v16);
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        sub_1000C7DA0();

      }
      return;
    }

  }
  if (qword_1001A3028 != -1)
    swift_once(&qword_1001A3028, sub_10007F24C);
  v19 = type metadata accessor for Logger(0, v4);
  v20 = sub_10000E8E8(v19, (uint64_t)qword_1001A6480);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "mainController nil while initializing primaryAction", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

}

uint64_t type metadata accessor for AirTagRolePickerViewController()
{
  return objc_opt_self(_TtC18SharingViewService30AirTagRolePickerViewController);
}

uint64_t sub_10007F904()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC18SharingViewService30AirTagRolePickerViewController_mainController);
  v2 = (void *)Strong;
  if (!Strong)
    return (uint64_t)v2;
  v3 = *(_QWORD *)(Strong + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories);
  swift_bridgeObjectRetain(v3);

  if (!v3)
    return 0;
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_5;
LABEL_20:
    swift_bridgeObjectRelease_n(v3, 2);
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_12:
      v2 = *(void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      return (uint64_t)v2;
    }
LABEL_21:
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v13 = _swiftEmptyArrayStorage;
    else
      v13 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v2 = (void *)_CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    goto LABEL_13;
  }
  if (v3 >= 0)
    v12 = v3 & 0xFFFFFFFFFFFFFF8;
  else
    v12 = v3;
  swift_bridgeObjectRetain(v3);
  result = _CocoaArrayWrapper.endIndex.getter(v12);
  v4 = result;
  if (!result)
    goto LABEL_20;
LABEL_5:
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      else
        v7 = *(id *)(v3 + 8 * v6 + 32);
      v8 = v7;
      ++v6;
      v9 = objc_msgSend(v7, "roles");
      v10 = sub_10007FCB8();
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

      sub_1000CCFDC(v11);
    }
    while (v4 != v6);
    swift_bridgeObjectRelease_n(v3, 2);
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_12;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007FAC4(unint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC18SharingViewService30AirTagRolePickerViewController_mainController);
  if (!Strong)
    return 0;
  v4 = (void *)Strong;
  v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories);
  swift_bridgeObjectRetain(v5);

  if (!v5)
    return 0;
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v5);
    if (v6)
      goto LABEL_5;
LABEL_20:
    result = swift_bridgeObjectRelease_n(v5, 2);
    if ((a1 & 0x8000000000000000) == 0)
      goto LABEL_13;
    goto LABEL_21;
  }
  if (v5 >= 0)
    v17 = v5 & 0xFFFFFFFFFFFFFF8;
  else
    v17 = v5;
  swift_bridgeObjectRetain(v5);
  result = _CocoaArrayWrapper.endIndex.getter(v17);
  v6 = result;
  if (!result)
    goto LABEL_20;
LABEL_5:
  if (v6 >= 1)
  {
    v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
      else
        v9 = *(id *)(v5 + 8 * v8 + 32);
      v10 = v9;
      ++v8;
      v11 = objc_msgSend(v9, "roles");
      v12 = sub_10007FCB8();
      v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

      sub_1000CCFDC(v13);
    }
    while (v6 != v8);
    result = swift_bridgeObjectRelease_n(v5, 2);
    if ((a1 & 0x8000000000000000) == 0)
    {
LABEL_13:
      if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        v15 = (id)_swiftEmptyArrayStorage[a1 + 4];
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v16 = objc_msgSend(v15, "role");

        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        return v14;
      }
      goto LABEL_22;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_10007FCB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A5468;
  if (!qword_1001A5468)
  {
    v1 = objc_opt_self(SPBeaconRole);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A5468);
  }
  return result;
}

uint64_t sub_10007FCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10007FD18(uint64_t a1)
{
  uint64_t v1;

  sub_10007F518(a1, v1);
}

uint64_t sub_10007FD20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007FD30(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007FD38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10007FD5C()
{
  sub_1000C8398();
}

uint64_t sub_10007FD64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A64C8);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A64C8);
  if (qword_1001A2EF0 != -1)
    swift_once(&qword_1001A2EF0, sub_100018CB8);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_10007FDF4(uint64_t *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  NSString v5;
  NSString v6;
  uint64_t v7;
  NSString v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v2 = v1;
  v29 = a1[1];
  v30 = *a1;
  v27 = a1[3];
  v28 = a1[2];
  v32 = a1[4];
  v35 = a1[8];
  v36 = a1[7];
  v26 = a1[9];
  v4 = a1[10];
  v33 = a1[12];
  v34 = a1[11];
  v31 = *(_OWORD *)(a1 + 5);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v5);

  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setSubtitle:", v6);

  v7 = swift_allocObject(&unk_10017ABE0, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, v1);
  v25 = v4;
  swift_bridgeObjectRetain(v4);
  swift_retain(v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  aBlock[4] = sub_100080D1C;
  v38 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B5D0;
  aBlock[3] = &unk_10017ABF8;
  v9 = _Block_copy(aBlock);
  v10 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v8, 0, v9);

  _Block_release(v9);
  v11 = v38;
  swift_release(v7);

  v12 = &v2[OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_model];
  v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_model];
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_model + 8];
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_model + 16];
  v16 = *((_QWORD *)v12 + 3);
  v18 = *((_QWORD *)v12 + 4);
  v17 = *((_QWORD *)v12 + 5);
  v19 = (void *)*((_QWORD *)v12 + 6);
  v20 = *((_QWORD *)v12 + 7);
  v23 = *((_OWORD *)v12 + 5);
  v24 = *((_OWORD *)v12 + 4);
  v21 = *((_QWORD *)v12 + 12);
  *(_QWORD *)v12 = v30;
  *((_QWORD *)v12 + 1) = v29;
  *((_QWORD *)v12 + 2) = v28;
  *((_QWORD *)v12 + 3) = v27;
  *((_QWORD *)v12 + 4) = v32;
  *(_OWORD *)(v12 + 40) = v31;
  *((_QWORD *)v12 + 7) = v36;
  *((_QWORD *)v12 + 8) = v35;
  *((_QWORD *)v12 + 9) = v26;
  *((_QWORD *)v12 + 10) = v25;
  *((_QWORD *)v12 + 11) = v34;
  *((_QWORD *)v12 + 12) = v33;
  sub_1000270DC(a1);
  return sub_10002715C(v13, v14, v15, v16, v18, v17, v19, v20, v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v21);
}

void sub_10008007C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100080A94(Strong, v4);

  }
}

void sub_1000800CC()
{
  char *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSString v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  Class isa;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[5];
  uint64_t v58;
  objc_super v59;

  v59.receiver = v0;
  v59.super_class = (Class)type metadata accessor for PasswordSharingErrorViewController();
  objc_msgSendSuper2(&v59, "viewDidLoad");
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_model];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_model + 8];
  if (v3)
  {
    v4 = v2[10];
    v54 = v2[9];
    v55 = v2[11];
    v5 = v2[8];
    v47 = v4;
    v48 = v5;
    v56 = v2[7];
    v7 = v2[5];
    v6 = (void *)v2[6];
    v49 = v6;
    v8 = v2[3];
    v46 = v2[4];
    v50 = v8;
    v51 = v2[12];
    v52 = *v2;
    v53 = v2[2];
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v7);
    v9 = v6;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v4);
    objc_msgSend(v0, "setDismissalType:", 3);
    v10 = swift_allocObject(&unk_10017ABE0, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16, v0);
    swift_retain(v10);
    v11 = String._bridgeToObjectiveC()();
    aBlock[4] = sub_100080D3C;
    v58 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001B5D0;
    aBlock[3] = &unk_10017AC20;
    v12 = _Block_copy(aBlock);
    v13 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v11, 0, v12);

    _Block_release(v12);
    v14 = v58;
    swift_release(v10);
    objc_msgSend(v0, "setDismissButtonAction:", v13, swift_release(v14).n128_f64[0]);

    v15 = (void *)objc_opt_self(_UIImageSymbolConfiguration);
    swift_bridgeObjectRetain(v7);
    v16 = objc_msgSend(v15, "configurationWithPointSize:", 72.0);
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    v18 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v17, v16);

    v19 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v18);
    objc_msgSend(v19, "setTintColor:", v9);
    objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v20 = objc_msgSend(v0, "contentView");
    objc_msgSend(v20, "addSubview:", v19);

    v21 = objc_msgSend(v0, "contentView");
    v22 = objc_msgSend(v21, "mainContentGuide");

    v23 = (void *)objc_opt_self(NSLayoutConstraint);
    v24 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
    v25 = swift_allocObject(v24, 64, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100132270;
    v26 = objc_msgSend(v19, "topAnchor");
    v27 = objc_msgSend(v22, "topAnchor");
    v28 = objc_msgSend(v26, "constraintGreaterThanOrEqualToAnchor:", v27);

    *(_QWORD *)(v25 + 32) = v28;
    v29 = objc_msgSend(v19, "bottomAnchor");
    v30 = objc_msgSend(v22, "bottomAnchor");
    v31 = objc_msgSend(v29, "constraintLessThanOrEqualToAnchor:", v30);

    *(_QWORD *)(v25 + 40) = v31;
    v32 = objc_msgSend(v19, "centerXAnchor");
    v33 = objc_msgSend(v22, "centerXAnchor");
    v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

    *(_QWORD *)(v25 + 48) = v34;
    v35 = objc_msgSend(v19, "centerYAnchor");
    v36 = objc_msgSend(v22, "centerYAnchor");
    v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

    *(_QWORD *)(v25 + 56) = v37;
    aBlock[0] = v25;
    specialized Array._endMutation()(v38);
    v39 = aBlock[0];
    sub_10000E868();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v39);
    objc_msgSend(v23, "activateConstraints:", isa);

    sub_10002715C(v52, v3, v53, v50, v46, v7, v49, v56, v48, v54, v47, v55, v51);
  }
  else
  {
    if (qword_1001A3030 != -1)
      swift_once(&qword_1001A3030, sub_10007FD64);
    v41 = type metadata accessor for Logger(0, v1);
    v42 = sub_10000E8E8(v41, (uint64_t)qword_1001A64C8);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Error view: model not available", v45, 2u);
      swift_slowDealloc(v45, -1, -1);
    }

  }
}

void sub_1000806C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (char *)Strong;
    if (qword_1001A3030 != -1)
      swift_once(&qword_1001A3030, sub_10007FD64);
    v6 = type metadata accessor for Logger(0, v4);
    v7 = sub_10000E8E8(v6, (uint64_t)qword_1001A64C8);
    v8 = Logger.logObject.getter(v7);
    v10 = static os_log_type_t.default.getter(v8, v9);
    if (os_log_type_enabled(v8, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v10, "Error dismissed", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_presenter]);
    if (v12)
    {
      v14 = v12;
      sub_100095D74(5, v13);

      swift_unknownObjectRelease(v14);
    }
    else
    {

    }
  }
}

uint64_t sub_100080824(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t result;
  uint64_t v12;
  objc_super v13;

  v2 = v1;
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for PasswordSharingErrorViewController();
  objc_msgSendSuper2(&v13, "viewDidAppear:", a1 & 1);
  if (qword_1001A3030 != -1)
    swift_once(&qword_1001A3030, sub_10007FD64);
  v5 = type metadata accessor for Logger(0, v4);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A64C8);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "Error ViewDidAppear", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_presenter]);
  if (result)
  {
    v12 = result;
    sub_1000965C8(v2[OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_type]);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

uint64_t sub_100080A94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  if (qword_1001A3030 != -1)
    swift_once(&qword_1001A3030, sub_10007FD64);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A64C8);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "OK button tapped", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_presenter);
  if (result)
  {
    v12 = result;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService34PasswordSharingErrorViewController_type))
      sub_100095D74(5, v11);
    else
      sub_100096FA8();
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

id sub_100080C44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PasswordSharingErrorViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PasswordSharingErrorViewController()
{
  return objc_opt_self(_TtC18SharingViewService34PasswordSharingErrorViewController);
}

uint64_t sub_100080CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100080D1C(uint64_t a1)
{
  uint64_t v1;

  sub_10008007C(a1, v1);
}

uint64_t sub_100080D24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100080D34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100080D3C(uint64_t a1)
{
  uint64_t v1;

  sub_1000806C0(a1, v1);
}

uint64_t storeEnumTagSinglePayload for PasswordSharingViewType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100080D98 + 4 * byte_100133E15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100080DCC + 4 * byte_100133E10[v4]))();
}

uint64_t sub_100080DCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100080DD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100080DDCLL);
  return result;
}

uint64_t sub_100080DE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100080DF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100080DF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100080DFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PasswordSharingViewType()
{
  return &type metadata for PasswordSharingViewType;
}

uint64_t sub_100080E18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10006BEBC(*a1, *a2);
}

Swift::Int sub_100080E24()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE500000000000000;
  v3 = 0x726F727265;
  if (v1 != 1)
  {
    v3 = 1701736292;
    v2 = 0xE400000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x7472617473;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE500000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100080EB4(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE500000000000000;
  v3 = 0x726F727265;
  if (*v1 != 1)
  {
    v3 = 1701736292;
    v2 = 0xE400000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x7472617473;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE500000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100080F20(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE500000000000000;
  v4 = 0x726F727265;
  if (v2 != 1)
  {
    v4 = 1701736292;
    v3 = 0xE400000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x7472617473;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE500000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_100080FAC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100081070(*a1);
  *a2 = result;
  return result;
}

void sub_100080FD8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x726F727265;
  if (v2 != 1)
  {
    v5 = 1701736292;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7472617473;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_10008102C()
{
  unint64_t result;

  result = qword_1001A6520;
  if (!qword_1001A6520)
  {
    result = swift_getWitnessTable(&unk_100133ED0, &type metadata for PasswordSharingViewType);
    atomic_store(result, (unint64_t *)&qword_1001A6520);
  }
  return result;
}

unint64_t sub_100081070(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001769D0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

void sub_1000810B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  unsigned int v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[5];
  void *v47;

  v2 = type metadata accessor for SFItemDestinationAlertSettings(0);
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  __chkstk_darwin(v2);
  v40 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_100083CF0();
    v7 = sub_100005B80((unint64_t *)&qword_1001A7080, (uint64_t (*)(uint64_t))sub_100083CF0, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = Set.Iterator.init(_cocoa:)(v46, v5, v6, v7);
    a1 = v46[0];
    v38 = v46[1];
    v9 = v46[2];
    v10 = v46[3];
    v11 = v46[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v13 = *(_QWORD *)(a1 + 56);
    v38 = a1 + 56;
    v14 = ~v12;
    v15 = -v12;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v11 = v16 & v13;
    v8 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v9 = v14;
    v10 = 0;
  }
  v34 = v9;
  v36 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v37 = (unint64_t)(v9 + 64) >> 6;
  v39 = enum case for SFItemDestinationAlertSettings.reply(_:);
  v35 = (char *)&type metadata for Swift.AnyObject + 8;
  v17 = v41;
  v18 = v42;
  while (a1 < 0)
  {
    v22 = __CocoaSet.Iterator.next()(v8);
    if (!v22)
      goto LABEL_37;
    v23 = v22;
    v45 = v22;
    v24 = sub_100083CF0();
    swift_unknownObjectRetain(v23);
    swift_dynamicCast(&v47, &v45, v35, v24, 7);
    v25 = v47;
    swift_unknownObjectRelease(v23);
    v21 = v10;
    v19 = v11;
    if (!v25)
      goto LABEL_37;
LABEL_35:
    v43 = v11;
    v44 = v10;
    v29 = objc_msgSend(v25, "info", v34);
    if (v29)
    {
      v30 = v29;
      v31 = v40;
      v32 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v17 + 104))(v40, v39, v18);
      v33 = SFItemDestinationAlertSettings.rawValue.getter(v32);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v31, v18);
      LOBYTE(v31) = objc_msgSend(v30, "BOOLForSetting:", v33);

      if ((v31 & 1) != 0)
        goto LABEL_37;
    }

    v10 = v21;
    v11 = v19;
  }
  if (v11)
  {
    v19 = (v11 - 1) & v11;
    v20 = __clz(__rbit64(v11)) | (v10 << 6);
    v21 = v10;
LABEL_34:
    v25 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v20);
    if (!v25)
      goto LABEL_37;
    goto LABEL_35;
  }
  v26 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v26 >= v37)
      goto LABEL_37;
    v27 = *(_QWORD *)(v38 + 8 * v26);
    v21 = v10 + 1;
    if (!v27)
    {
      v21 = v10 + 2;
      if (v10 + 2 >= v37)
        goto LABEL_37;
      v27 = *(_QWORD *)(v38 + 8 * v21);
      if (!v27)
      {
        v21 = v10 + 3;
        if (v10 + 3 >= v37)
          goto LABEL_37;
        v27 = *(_QWORD *)(v38 + 8 * v21);
        if (!v27)
        {
          v21 = v10 + 4;
          if (v10 + 4 >= v37)
            goto LABEL_37;
          v27 = *(_QWORD *)(v38 + 8 * v21);
          if (!v27)
          {
            v21 = v10 + 5;
            if (v10 + 5 >= v37)
              goto LABEL_37;
            v27 = *(_QWORD *)(v38 + 8 * v21);
            if (!v27)
            {
              v28 = v10 + 6;
              while (v37 != v28)
              {
                v27 = *(_QWORD *)(v38 + 8 * v28++);
                if (v27)
                {
                  v21 = v28 - 1;
                  goto LABEL_33;
                }
              }
LABEL_37:
              sub_10002413C(a1);
              return;
            }
          }
        }
      }
    }
LABEL_33:
    v19 = (v27 - 1) & v27;
    v20 = __clz(__rbit64(v27)) + (v21 << 6);
    goto LABEL_34;
  }
  __break(1u);
}

uint64_t sub_100081448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A6528);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A6528);
  if (qword_1001A2EC0 != -1)
    swift_once(&qword_1001A2EC0, sub_100018C20);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD3F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_1000814D8(void *a1, void (*a2)(void), uint64_t a3)
{
  uint8_t *v3;
  uint8_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  char v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  id v43;
  void *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  __n128 v88;
  void (*v89)(char *, _QWORD, uint64_t, uint64_t, __n128);
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  uint64_t v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint8_t *v106;
  unint64_t v107;
  id v108;
  void *v109;
  uint64_t v110;
  NSObject *v111;
  uint64_t v112;
  os_log_type_t v113;
  uint8_t *v114;
  void (*v115)(uint64_t, uint64_t);
  uint64_t v116;
  id v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t);
  uint64_t v122;
  unint64_t v123;
  uint8_t *v124;
  id v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(void);
  _QWORD v131[2];
  uint64_t v132[5];
  __int128 v133;
  __int128 v134;

  v4 = v3;
  v129 = a3;
  v130 = a2;
  v6 = sub_100006A6C(&qword_1001A65A8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v118 - v10;
  v128 = type metadata accessor for SFItemDestinationAlertViewModel(0);
  v12 = *(_QWORD *)(v128 - 8);
  v13 = __chkstk_darwin(v128);
  v126 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v118 - v16;
  __chkstk_darwin(v15);
  v127 = (char *)&v118 - v18;
  if (!a1)
  {
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v19 = objc_msgSend(a1, "actions");
  if (!v19)
    goto LABEL_8;
  v21 = v19;
  v22 = sub_100083CF0();
  v23 = sub_100005B80((unint64_t *)&qword_1001A7080, (uint64_t (*)(uint64_t))sub_100083CF0, (uint64_t)&protocol conformance descriptor for NSObject);
  v24 = v4;
  v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v21, v22, v23);

  sub_1000810B8(v25);
  v27 = v26;
  v28 = v25;
  v4 = v24;
  swift_bridgeObjectRelease(v28);
  if (!v27)
  {
LABEL_8:
    if (qword_1001A3038 != -1)
      swift_once(&qword_1001A3038, sub_100081448);
    v37 = type metadata accessor for Logger(0, v20);
    sub_10000E8E8(v37, (uint64_t)qword_1001A6528);
    v38 = a1;
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(12, -1);
      v42 = swift_slowAlloc(32, -1);
      v132[0] = v42;
      *(_DWORD *)v41 = 136315138;
      v43 = objc_msgSend(v38, "actions");
      if (v43)
      {
        v44 = v43;
        v45 = sub_100083CF0();
        v46 = sub_100005B80((unint64_t *)&qword_1001A7080, (uint64_t (*)(uint64_t))sub_100083CF0, (uint64_t)&protocol conformance descriptor for NSObject);
        v47 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v44, v45, v46);

      }
      else
      {
        v47 = 0;
      }
      *(_QWORD *)&v133 = v47;
      v48 = sub_100006A6C((uint64_t *)&unk_1001A7070);
      v49 = String.init<A>(reflecting:)(&v133, v48);
      v51 = v50;
      *(_QWORD *)&v133 = sub_10001EFA4(v49, v50, v132);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, (char *)&v133 + 8, v41 + 4, v41 + 12);

      swift_bridgeObjectRelease(v51);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Failed to get action for SVSItemDestinationAlertViewController {actions: %s}", v41, 0xCu);
      swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v41, -1, -1);

    }
    else
    {

    }
    if (v130)
    {
      v130();
      v52 = type metadata accessor for SFAirDropReceive.Failure(0);
      v53 = sub_100005B80(&qword_1001A5A00, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      v54 = swift_allocError(v52, v53, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v55, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v52);
      sub_100083374(0, 0, v54);
      -[uint8_t dismissViewControllerAnimated:completion:](v4, "dismissViewControllerAnimated:completion:", 1, 0);
      swift_errorRelease(v54);
      return;
    }
    goto LABEL_47;
  }
  v29 = *(void **)&v24[OBJC_IVAR___SVSItemDestinationAlertViewController_replyAction];
  *(_QWORD *)&v24[OBJC_IVAR___SVSItemDestinationAlertViewController_replyAction] = v27;
  v125 = v27;

  v30 = objc_msgSend(a1, "userInfo");
  if (!v30)
  {
    v133 = 0u;
    v134 = 0u;
    v35 = v24;
LABEL_25:
    sub_10000D858((uint64_t)&v133, &qword_1001A4340);
    goto LABEL_26;
  }
  v31 = v30;
  v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v30, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v131[0] = static SFItemDestinationAlertSettings.viewModel.getter();
  v131[1] = v33;
  AnyHashable.init<A>(_:)(v132, v131, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v32 + 16))
  {
    v34 = sub_100005CF4((uint64_t)v132);
    v35 = v24;
    if ((v36 & 1) != 0)
    {
      sub_10000D894(*(_QWORD *)(v32 + 56) + 32 * v34, (uint64_t)&v133);
    }
    else
    {
      v133 = 0u;
      v134 = 0u;
    }
  }
  else
  {
    v133 = 0u;
    v134 = 0u;
    v35 = v24;
  }
  sub_100006B34((uint64_t)v132);
  swift_bridgeObjectRelease(v32);
  if (!*((_QWORD *)&v134 + 1))
    goto LABEL_25;
  if ((swift_dynamicCast(v132, &v133, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_26:
    v69 = 0;
    v65 = 0xF000000000000000;
LABEL_27:
    if (qword_1001A3038 != -1)
      swift_once(&qword_1001A3038, sub_100081448);
    v70 = type metadata accessor for Logger(0, v56);
    sub_10000E8E8(v70, (uint64_t)qword_1001A6528);
    v71 = a1;
    v72 = Logger.logObject.getter(v71);
    v73 = static os_log_type_t.error.getter(v72);
    if (os_log_type_enabled(v72, v73))
    {
      v123 = v65;
      v124 = v35;
      v74 = (uint8_t *)swift_slowAlloc(12, -1);
      v75 = swift_slowAlloc(32, -1);
      v132[0] = v75;
      *(_DWORD *)v74 = 136315138;
      v76 = objc_msgSend(v71, "userInfo");
      if (v76)
      {
        v77 = v76;
        v78 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v76, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      }
      else
      {
        v78 = 0;
      }
      *(_QWORD *)&v133 = v78;
      v79 = sub_100006A6C(&qword_1001A5630);
      v80 = String.init<A>(reflecting:)(&v133, v79);
      v82 = v81;
      *(_QWORD *)&v133 = sub_10001EFA4(v80, v81, v132);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, (char *)&v133 + 8, v74 + 4, v74 + 12);

      swift_bridgeObjectRelease(v82);
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "Failed to get view model for SVSItemDestinationAlertViewController {userInfo: %s}", v74, 0xCu);
      swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v75, -1, -1);
      swift_slowDealloc(v74, -1, -1);

      v65 = v123;
      v35 = v124;
    }
    else
    {

    }
    if (v130)
    {
      v130();
      v83 = type metadata accessor for SFAirDropReceive.Failure(0);
      v84 = sub_100005B80(&qword_1001A5A00, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      v85 = swift_allocError(v83, v84, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v83 - 8) + 104))(v86, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v83);
      sub_100083374(0, 0, v85);
      -[uint8_t dismissViewControllerAnimated:completion:](v35, "dismissViewControllerAnimated:completion:", 1, 0);
      swift_errorRelease(v85);
      sub_100023F48(v69, v65);
      v87 = v125;

      return;
    }
    goto LABEL_48;
  }
  v123 = 0;
  v124 = v35;
  v58 = v132[0];
  v57 = v132[1];
  v59 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v59, *(unsigned int *)(v59 + 48), *(unsigned __int16 *)(v59 + 52));
  v60 = sub_100006B94(v58, v57);
  v61 = JSONDecoder.init()(v60);
  v62 = sub_100005B80(&qword_1001A65B0, (uint64_t (*)(uint64_t))&type metadata accessor for SFItemDestinationAlertViewModel, (uint64_t)&protocol conformance descriptor for SFItemDestinationAlertViewModel);
  v63 = v128;
  v122 = v58;
  v64 = v58;
  v65 = v57;
  v66 = v57;
  v67 = v123;
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(v128, v64, v66, v128, v62);
  if (v67)
  {
    swift_errorRelease(v67);
    v68 = swift_release(v61);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v11, 1, 1, v63, v68);
    v69 = v122;
    sub_100007348(v122, v65);
    sub_10000D858((uint64_t)v11, &qword_1001A65A8);
    v35 = v124;
    goto LABEL_27;
  }
  v123 = v65;
  v88 = swift_release(v61);
  v89 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v12 + 56);
  v89(v11, 0, 1, v63, v88);
  v90 = (uint64_t)v127;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v127, v11, v63);
  v91 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v91(v9, v90, v63);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v89)(v9, 0, 1, v63);
  v92 = (uint64_t)&v124[OBJC_IVAR___SVSItemDestinationAlertViewController_viewModel];
  swift_beginAccess(&v124[OBJC_IVAR___SVSItemDestinationAlertViewController_viewModel], v132, 33, 0);
  sub_100083D2C((uint64_t)v9, v92);
  swift_endAccess(v132);
  if (qword_1001A3038 != -1)
    swift_once(&qword_1001A3038, sub_100081448);
  v94 = type metadata accessor for Logger(0, v93);
  v95 = sub_10000E8E8(v94, (uint64_t)qword_1001A6528);
  v121 = v91;
  v96 = ((uint64_t (*)(char *, uint64_t, uint64_t))v91)(v17, v90, v63);
  v120 = v95;
  v97 = Logger.logObject.getter(v96);
  v99 = static os_log_type_t.default.getter(v97, v98);
  if (os_log_type_enabled(v97, v99))
  {
    v100 = (uint8_t *)swift_slowAlloc(12, -1);
    v101 = swift_slowAlloc(32, -1);
    v132[0] = v101;
    *(_DWORD *)v100 = 136315138;
    v124 = v100 + 4;
    v102 = sub_100005B80(&qword_1001A65B8, (uint64_t (*)(uint64_t))&type metadata accessor for SFItemDestinationAlertViewModel, (uint64_t)&protocol conformance descriptor for SFItemDestinationAlertViewModel);
    v103 = dispatch thunk of CustomStringConvertible.description.getter(v128, v102);
    v105 = v104;
    *(_QWORD *)&v133 = sub_10001EFA4(v103, v104, v132);
    v63 = v128;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, (char *)&v133 + 8, v124, v100 + 12);
    swift_bridgeObjectRelease(v105);
    v119 = *(void (**)(char *, uint64_t))(v12 + 8);
    v119(v17, v63);
    _os_log_impl((void *)&_mh_execute_header, v97, v99, "Alert being configured with view model: %s", v100, 0xCu);
    swift_arrayDestroy(v101, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v101, -1, -1);
    v106 = v100;
    v90 = (uint64_t)v127;
    swift_slowDealloc(v106, -1, -1);

    v107 = v123;
  }
  else
  {
    v119 = *(void (**)(char *, uint64_t))(v12 + 8);
    v119(v17, v63);

    v107 = v123;
    v24 = v124;
  }
  v108 = sub_1000829F8(v90);
  v109 = *(void **)&v24[OBJC_IVAR___SVSItemDestinationAlertViewController_alert];
  *(_QWORD *)&v24[OBJC_IVAR___SVSItemDestinationAlertViewController_alert] = v108;

  v111 = Logger.logObject.getter(v110);
  v113 = static os_log_type_t.default.getter(v111, v112);
  if (os_log_type_enabled(v111, v113))
  {
    v114 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v114 = 0;
    _os_log_impl((void *)&_mh_execute_header, v111, v113, "Created alert for SVSItemDestinationAlertViewController", v114, 2u);
    swift_slowDealloc(v114, -1, -1);
  }

  v115 = (void (*)(uint64_t, uint64_t))v119;
  if (v130)
  {
    v130();
    v116 = v122;
    sub_100007348(v122, v107);
    sub_100007348(v116, v107);
    v117 = v125;

    v115(v90, v63);
    return;
  }
LABEL_49:
  __break(1u);
}

id sub_1000822E8(char a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  uint64_t v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;

  v3 = v2;
  if (qword_1001A3038 != -1)
    swift_once(&qword_1001A3038, sub_100081448);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A6528);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "SVSItemDestinationAlertViewController viewDidAppear", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v21.receiver = v2;
  v21.super_class = (Class)type metadata accessor for SVSItemDestinationAlertViewController(0);
  v11 = objc_msgSendSuper2(&v21, "viewDidAppear:", a1 & 1);
  v12 = *(_QWORD *)&v2[OBJC_IVAR___SVSItemDestinationAlertViewController_alert];
  if (v12)
    return objc_msgSend(v2, "presentViewController:animated:completion:", v12, 1, 0);
  v14 = Logger.logObject.getter(v11);
  v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "SVSItemDestinationAlertViewController dismissing because there is no loaded alert", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = type metadata accessor for SFAirDropReceive.Failure(0);
  v18 = sub_100005B80(&qword_1001A5A00, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  v19 = swift_allocError(v17, v18, 0, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v20, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v17);
  sub_100083374(0, 0, v19);
  objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 1, 0);
  return (id)swift_errorRelease(v19);
}

id sub_100082558(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  objc_class *v22;
  id result;
  NSObject *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47[24];
  objc_super v48;

  v2 = v1;
  v4 = type metadata accessor for SFItemDestinationAlertViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v44 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100006A6C(&qword_1001A65A8);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100006A6C(&qword_1001A65A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SFItemDestinationAlertViewModel.Action(0);
  v45 = *(_QWORD *)(v13 - 8);
  v46 = v13;
  __chkstk_darwin(v13);
  v43 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001A3038 != -1)
    swift_once(&qword_1001A3038, sub_100081448);
  v16 = type metadata accessor for Logger(0, v14);
  v17 = sub_10000E8E8(v16, (uint64_t)qword_1001A6528);
  v18 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.default.getter(v18, v19);
  if (os_log_type_enabled(v18, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v20, "SVSItemDestinationAlertViewController viewDidDisappear", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  v22 = (objc_class *)type metadata accessor for SVSItemDestinationAlertViewController(0);
  v48.receiver = v1;
  v48.super_class = v22;
  result = objc_msgSendSuper2(&v48, "viewDidDisappear:", a1 & 1);
  if ((v1[OBJC_IVAR___SVSItemDestinationAlertViewController_sentResponse] & 1) == 0)
  {
    v24 = Logger.logObject.getter(result);
    v26 = static os_log_type_t.default.getter(v24, v25);
    if (os_log_type_enabled(v24, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v26, "SVSItemDestinationAlertViewController view disappeared before alert completed. Assuming cancellation", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }

    v28 = (uint64_t)&v2[OBJC_IVAR___SVSItemDestinationAlertViewController_viewModel];
    swift_beginAccess(&v2[OBJC_IVAR___SVSItemDestinationAlertViewController_viewModel], v47, 0, 0);
    sub_100083C84(v28, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4))
    {
      sub_10000D858((uint64_t)v9, &qword_1001A65A8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v12, 1, 1, v46);
    }
    else
    {
      v29 = v44;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v44, v9, v4);
      v30 = sub_10000D858((uint64_t)v9, &qword_1001A65A8);
      SFItemDestinationAlertViewModel.cancelAction.getter(v30);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v4);
      v32 = v45;
      v31 = v46;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v12, 1, v46) != 1)
      {
        v37 = v43;
        v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v43, v12, v31);
        v39 = SFItemDestinationAlertViewModel.Action.id.getter(v38);
        v41 = v40;
        sub_100083374(v39, v40, 0);
        objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);
        swift_bridgeObjectRelease(v41);
        return (id)(*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v37, v31);
      }
    }
    sub_10000D858((uint64_t)v12, &qword_1001A65A0);
    v33 = type metadata accessor for SFAirDropReceive.Failure(0);
    v34 = sub_100005B80(&qword_1001A5A00, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    v35 = swift_allocError(v33, v34, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v36, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v33);
    sub_100083374(0, 0, v35);
    objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);
    return (id)swift_errorRelease(v35);
  }
  return result;
}

id sub_1000829F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  void *v40;
  double v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  NSString v60;
  void *v61;
  id v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void **aBlock;
  uint64_t v85;
  void (*v86)(uint64_t, void *);
  void *v87;
  uint64_t (*v88)(uint64_t);
  uint64_t v89;

  v2 = v1;
  v4 = sub_100006A6C(&qword_1001A65A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SFItemDestinationAlertViewModel.Action(0);
  v8 = *(_QWORD *)(v7 - 8);
  v81 = v7;
  v82 = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v68 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v79 = (char *)&v64 - v12;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v64 - v14;
  SFItemDestinationAlertViewModel.title.getter(v13);
  v17 = v16;
  SFItemDestinationAlertViewModel.message.getter();
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v22 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v20, v21, 1);

  v69 = a1;
  v23 = SFItemDestinationAlertViewModel.actions.getter();
  v24 = *(char **)(v23 + 16);
  v67 = v9;
  if (v24)
  {
    v66 = v6;
    v25 = v23;
    v77 = (id)objc_opt_self(UIAlertAction);
    v26 = *(unsigned __int8 *)(v82 + 80);
    v80 = v15;
    v65 = v25;
    v27 = v25 + ((v26 + 32) & ~v26);
    v28 = *(_QWORD *)(v82 + 72);
    v74 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
    v75 = v28;
    v72 = v26 | 7;
    v73 = (v26 + 16) & ~v26;
    v71 = (v9 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
    v70 = v71 + 8;
    v78 = v22;
    v76 = v2;
    v30 = v79;
    v29 = v80;
    do
    {
      v83 = v24;
      v31 = v81;
      v32 = v74;
      v33 = ((uint64_t (*)(char *, uint64_t, uint64_t))v74)(v29, v27, v81);
      SFItemDestinationAlertViewModel.Action.title.getter(v33);
      v35 = v34;
      v36 = swift_allocObject(&unk_10017AD48, 24, 7);
      swift_unknownObjectWeakInit(v36 + 16, v2);
      v32(v30, v29, v31);
      v37 = swift_allocObject(&unk_10017AD70, v70, v72);
      v38 = v82;
      (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v37 + v73, v30, v31);
      *(_QWORD *)(v37 + v71) = v36;
      swift_retain(v36);
      v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v35);
      v88 = sub_100083B68;
      v89 = v37;
      aBlock = _NSConcreteStackBlock;
      v85 = 1107296256;
      v86 = sub_10001B5D0;
      v87 = &unk_10017AD88;
      v40 = _Block_copy(&aBlock);
      *(_QWORD *)&v41 = swift_release(v89).n128_u64[0];
      v42 = objc_msgSend(v77, "actionWithTitle:style:handler:", v39, 0, v40, v41);
      _Block_release(v40);
      swift_release(v36);

      v22 = v78;
      objc_msgSend(v78, "addAction:", v42);

      v2 = v76;
      v43 = v31;
      v44 = v83;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v43);
      v27 += v75;
      v24 = v44 - 1;
    }
    while (v24);
    v45 = swift_bridgeObjectRelease(v65);
    v15 = v80;
    v46 = v81;
    v6 = v66;
  }
  else
  {
    v45 = swift_bridgeObjectRelease(v23);
    v46 = v81;
  }
  SFItemDestinationAlertViewModel.cancelAction.getter(v45);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v6, 1, v46) == 1)
  {
    sub_10000D858((uint64_t)v6, &qword_1001A65A0);
  }
  else
  {
    v47 = v46;
    v48 = v82;
    v83 = *(char **)(v82 + 32);
    v49 = v68;
    v50 = ((uint64_t (*)(char *, char *, uint64_t))v83)(v68, v6, v47);
    SFItemDestinationAlertViewModel.Action.title.getter(v50);
    v52 = v51;
    v53 = swift_allocObject(&unk_10017AD48, 24, 7);
    swift_unknownObjectWeakInit(v53 + 16, v2);
    v54 = v49;
    v55 = v47;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v15, v54, v47);
    v56 = *(unsigned __int8 *)(v48 + 80);
    v57 = (v56 + 24) & ~v56;
    v58 = v22;
    v59 = swift_allocObject(&unk_10017ADC0, v57 + v67, v56 | 7);
    *(_QWORD *)(v59 + 16) = v53;
    ((void (*)(uint64_t, char *, uint64_t))v83)(v59 + v57, v15, v47);
    swift_retain(v53);
    v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v52);
    v88 = sub_100083C44;
    v89 = v59;
    aBlock = _NSConcreteStackBlock;
    v85 = 1107296256;
    v86 = sub_10001B5D0;
    v87 = &unk_10017ADD8;
    v61 = _Block_copy(&aBlock);
    swift_release(v89);
    v62 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v60, 1, v61);
    _Block_release(v61);
    swift_release(v53);

    objc_msgSend(v58, "addAction:", v62);
    v22 = v58;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v68, v55);
  }
  return v22;
}

uint64_t sub_100082FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t result;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30[3];

  v5 = type metadata accessor for SFItemDestinationAlertViewModel.Action(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3 + 16;
  if (qword_1001A3038 != -1)
    swift_once(&qword_1001A3038, sub_100081448);
  v11 = type metadata accessor for Logger(0, v7);
  sub_10000E8E8(v11, (uint64_t)qword_1001A6528);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  v13 = Logger.logObject.getter(v12);
  v15 = static os_log_type_t.default.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    v28[1] = a2;
    v16 = swift_slowAlloc(12, -1);
    v28[0] = a3 + 16;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc(32, -1);
    v30[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = SFItemDestinationAlertViewModel.Action.id.getter();
    v21 = v20;
    v29 = sub_10001EFA4(v19, v20, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v17 + 4, v17 + 12);
    swift_bridgeObjectRelease(v21);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    _os_log_impl((void *)&_mh_execute_header, v13, v15, "Alert action chosen: %s", v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    v22 = v17;
    v10 = v28[0];
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }

  swift_beginAccess(v10, v30, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v10);
  if (result)
  {
    v24 = (void *)result;
    v25 = SFItemDestinationAlertViewModel.Action.id.getter();
    v27 = v26;
    sub_100083374(v25, v26, 0);
    objc_msgSend(v24, "dismissViewControllerAnimated:completion:", 1, 0);

    return swift_bridgeObjectRelease(v27);
  }
  return result;
}

uint64_t sub_100083230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v2 = a2 + 16;
  if (qword_1001A3038 != -1)
    swift_once(&qword_1001A3038, sub_100081448);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_10000E8E8(v3, (uint64_t)qword_1001A6528);
  v5 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter(v5, v6);
  if (os_log_type_enabled(v5, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v7, "Alert cancel chosen", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  swift_beginAccess(v2, v14, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v10 = (void *)result;
    v11 = SFItemDestinationAlertViewModel.Action.id.getter();
    v13 = v12;
    sub_100083374(v11, v12, 0);
    objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);

    return swift_bridgeObjectRelease(v13);
  }
  return result;
}

void sub_100083374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  id v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  NSObject *v33;

  v6 = type metadata accessor for SFItemDestinationAlertSettings(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v3 + OBJC_IVAR___SVSItemDestinationAlertViewController_sentResponse) = 1;
  v11 = *(void **)(v3 + OBJC_IVAR___SVSItemDestinationAlertViewController_replyAction);
  if (!v11)
  {
    if (qword_1001A3038 != -1)
      swift_once(&qword_1001A3038, sub_100081448);
    v18 = type metadata accessor for Logger(0, v8);
    v19 = sub_10000E8E8(v18, (uint64_t)qword_1001A6528);
    v33 = Logger.logObject.getter(v19);
    v20 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v33, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v20, "Missing action when performing SVSItemDestinationAlertViewController dismiss", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }
    goto LABEL_14;
  }
  v33 = v11;
  if (!-[NSObject canSendResponse](v33, "canSendResponse"))
  {
    if (qword_1001A3038 != -1)
      swift_once(&qword_1001A3038, sub_100081448);
    v22 = type metadata accessor for Logger(0, v12);
    v23 = sub_10000E8E8(v22, (uint64_t)qword_1001A6528);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Cannot send response for action in SVSItemDestinationAlertViewController", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

LABEL_14:
    return;
  }
  if (a2)
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)BSMutableSettings), "init");
    v14 = String._bridgeToObjectiveC()();
    v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for SFItemDestinationAlertSettings.chosenActionID(_:), v6);
    v16 = SFItemDestinationAlertSettings.rawValue.getter(v15);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    objc_msgSend(v13, "setObject:forSetting:", v14, v16);

    v17 = objc_msgSend((id)objc_opt_self(BSActionResponse), "responseWithInfo:", v13);
  }
  else
  {
    if (a3)
    {
      v27 = a3;
    }
    else
    {
      v28 = type metadata accessor for SFAirDropReceive.Failure(0);
      v29 = sub_100005B80(&qword_1001A5A00, (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure, (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
      v27 = swift_allocError(v28, v29, 0, 0);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v28);
    }
    swift_errorRetain(a3);
    v13 = (id)_convertErrorToNSError(_:)(v27);
    swift_errorRelease(v27);
    v17 = objc_msgSend((id)objc_opt_self(BSActionResponse), "responseForError:", v13);
  }
  v31 = v17;

  -[NSObject sendResponse:](v33, "sendResponse:", v31);
}

id sub_10008371C(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  char *v6;
  uint64_t v7;
  NSString v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v3[OBJC_IVAR___SVSItemDestinationAlertViewController_alert] = 0;
  v6 = &v3[OBJC_IVAR___SVSItemDestinationAlertViewController_viewModel];
  v7 = type metadata accessor for SFItemDestinationAlertViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v3[OBJC_IVAR___SVSItemDestinationAlertViewController_sentResponse] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___SVSItemDestinationAlertViewController_replyAction] = 0;
  if (a2)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for SVSItemDestinationAlertViewController(0);
  v9 = objc_msgSendSuper2(&v11, "initWithNibName:bundle:", v8, a3);

  return v9;
}

id sub_100083860(void *a1)
{
  _BYTE *v1;
  char *v3;
  uint64_t v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR___SVSItemDestinationAlertViewController_alert] = 0;
  v3 = &v1[OBJC_IVAR___SVSItemDestinationAlertViewController_viewModel];
  v4 = type metadata accessor for SFItemDestinationAlertViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v1[OBJC_IVAR___SVSItemDestinationAlertViewController_sentResponse] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___SVSItemDestinationAlertViewController_replyAction] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for SVSItemDestinationAlertViewController(0);
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

id sub_100083930()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SVSItemDestinationAlertViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000839B4()
{
  return type metadata accessor for SVSItemDestinationAlertViewController(0);
}

uint64_t type metadata accessor for SVSItemDestinationAlertViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1001A6588;
  if (!qword_1001A6588)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SVSItemDestinationAlertViewController);
  return result;
}

void sub_1000839F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  sub_100083A7C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100133F50;
    v4[3] = "\b";
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_100083A7C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1001A6598)
  {
    v2 = type metadata accessor for SFItemDestinationAlertViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1001A6598);
  }
}

uint64_t sub_100083AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

uint64_t sub_100083AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for SFItemDestinationAlertViewModel.Action(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100083B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for SFItemDestinationAlertViewModel.Action(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100082FD0(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100083BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100083BC8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100083BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SFItemDestinationAlertViewModel.Action(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100083C44(uint64_t a1)
{
  uint64_t v1;

  type metadata accessor for SFItemDestinationAlertViewModel.Action(0);
  return sub_100083230(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100083C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A65A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100083CCC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100083CF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A7E20;
  if (!qword_1001A7E20)
  {
    v1 = objc_opt_self(BSAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A7E20);
  }
  return result;
}

uint64_t sub_100083D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006A6C(&qword_1001A65A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_100083D7C(char *a1, char **a2, int *a3)
{
  int v5;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v17[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v17);
  }
  else
  {
    v7 = *a2;
    v8 = (uint64_t)a2[1];
    v9 = *((_BYTE *)a2 + 16);
    sub_10007D610(*a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *((_QWORD *)a1 + 1) = v8;
    a1[16] = v9;
    a1[17] = *((_BYTE *)a2 + 17);
    v10 = a3[6];
    v11 = &a1[v10];
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for UUID(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      v16 = sub_100006A6C(&qword_1001A42A0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v18 = a3[7];
    v19 = a3[8];
    v20 = &a1[v18];
    v21 = (uint64_t *)((char *)a2 + v18);
    v23 = *v21;
    v22 = v21[1];
    LOBYTE(v21) = *((_BYTE *)a2 + v19);
    *(_QWORD *)v20 = v23;
    *((_QWORD *)v20 + 1) = v22;
    a1[v19] = (char)v21;
    v24 = a3[9];
    v25 = &a1[v24];
    v26 = (char *)a2 + v24;
    swift_bridgeObjectRetain(v22);
    if (v15(v26, 1, v13))
    {
      v27 = sub_100006A6C(&qword_1001A42A0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v25, v26, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v25, 0, 1, v13);
    }
    v28 = a3[11];
    *(_DWORD *)&a1[a3[10]] = *(_DWORD *)((char *)a2 + a3[10]);
    *(_DWORD *)&a1[v28] = *(_DWORD *)((char *)a2 + v28);
    v29 = a3[13];
    *(_QWORD *)&a1[a3[12]] = *(char **)((char *)a2 + a3[12]);
    a1[v29] = *((_BYTE *)a2 + v29);
    v30 = a3[15];
    *(_QWORD *)&a1[a3[14]] = *(char **)((char *)a2 + a3[14]);
    v31 = &a1[v30];
    v32 = (uint64_t)a2 + v30;
    *(_DWORD *)v31 = *(_DWORD *)v32;
    v31[4] = *(_BYTE *)(v32 + 4);
    v33 = a3[16];
    v34 = a3[17];
    v35 = &a1[v33];
    v36 = (uint64_t)a2 + v33;
    *(_DWORD *)v35 = *(_DWORD *)v36;
    v35[4] = *(_BYTE *)(v36 + 4);
    v37 = &a1[v34];
    v38 = (uint64_t)a2 + v34;
    *(_QWORD *)v37 = *(_QWORD *)v38;
    v37[8] = *(_BYTE *)(v38 + 8);
    v39 = a3[18];
    v40 = a3[19];
    v41 = &a1[v39];
    v42 = (uint64_t)a2 + v39;
    *(_DWORD *)v41 = *(_DWORD *)v42;
    v41[4] = *(_BYTE *)(v42 + 4);
    v43 = *(char **)((char *)a2 + v40);
    *(_QWORD *)&a1[v40] = v43;
    v44 = a3[21];
    a1[a3[20]] = *((_BYTE *)a2 + a3[20]);
    a1[v44] = *((_BYTE *)a2 + v44);
    v45 = a3[23];
    a1[a3[22]] = *((_BYTE *)a2 + a3[22]);
    a1[v45] = *((_BYTE *)a2 + v45);
    v46 = a3[25];
    a1[a3[24]] = *((_BYTE *)a2 + a3[24]);
    a1[v46] = *((_BYTE *)a2 + v46);
    v47 = a3[27];
    a1[a3[26]] = *((_BYTE *)a2 + a3[26]);
    v48 = &a1[v47];
    v49 = (char **)((char *)a2 + v47);
    v50 = v49[1];
    *(_QWORD *)v48 = *v49;
    *((_QWORD *)v48 + 1) = v50;
    v51 = a3[29];
    a1[a3[28]] = *((_BYTE *)a2 + a3[28]);
    a1[v51] = *((_BYTE *)a2 + v51);
    *(_QWORD *)&a1[a3[30]] = *(char **)((char *)a2 + a3[30]);
    v52 = v43;
    swift_bridgeObjectRetain(v50);
  }
  return a1;
}

uint64_t sub_10008404C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  sub_10007D5D0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  v8 = a1 + a2[9];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[27] + 8));
}

uint64_t sub_100084120(uint64_t a1, uint64_t a2, int *a3)
{
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;

  v6 = *(id *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_10007D610(*(id *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    v15 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (uint64_t *)(a2 + v16);
  v21 = *v19;
  v20 = v19[1];
  LOBYTE(v19) = *(_BYTE *)(a2 + v17);
  *v18 = v21;
  v18[1] = v20;
  *(_BYTE *)(a1 + v17) = (_BYTE)v19;
  v22 = a3[9];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  swift_bridgeObjectRetain(v20);
  if (v14(v24, 1, v12))
  {
    v25 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v23, v24, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
  }
  v26 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v26) = *(_DWORD *)(a2 + v26);
  v27 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v28 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  v31 = a3[16];
  v32 = a3[17];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  v37 = a3[18];
  v38 = a3[19];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  v41 = *(void **)(a2 + v38);
  *(_QWORD *)(a1 + v38) = v41;
  v42 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + v42) = *(_BYTE *)(a2 + v42);
  v43 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v43) = *(_BYTE *)(a2 + v43);
  v44 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v44) = *(_BYTE *)(a2 + v44);
  v45 = a3[27];
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  v48 = v47[1];
  *v46 = *v47;
  v46[1] = v48;
  v49 = a3[29];
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_BYTE *)(a1 + v49) = *(_BYTE *)(a2 + v49);
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  v50 = v41;
  swift_bridgeObjectRetain(v48);
  return a1;
}

uint64_t sub_1000843C4(uint64_t a1, uint64_t a2, int *a3)
{
  id v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;

  v6 = *(id *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_10007D610(*(id *)a2, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v11 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v8;
  sub_10007D5D0(v9, v10, v11);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  v21 = a3[7];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v24 = v23[1];
  v25 = v22[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v26 = a3[9];
  v27 = (void *)(a1 + v26);
  v28 = (void *)(a2 + v26);
  v29 = v17((void *)(a1 + v26), 1, v15);
  v30 = v17(v28, 1, v15);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v27, v28, v15);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v27, v15);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    v31 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v27, v28, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v27, 0, 1, v15);
LABEL_13:
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + a3[11]) = *(_DWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v32 = a3[15];
  v33 = a1 + v32;
  v34 = (int *)(a2 + v32);
  v35 = *v34;
  *(_BYTE *)(v33 + 4) = *((_BYTE *)v34 + 4);
  *(_DWORD *)v33 = v35;
  v36 = a3[16];
  v37 = a1 + v36;
  v38 = (int *)(a2 + v36);
  v39 = *v38;
  *(_BYTE *)(v37 + 4) = *((_BYTE *)v38 + 4);
  *(_DWORD *)v37 = v39;
  v40 = a3[17];
  v41 = a1 + v40;
  v42 = (uint64_t *)(a2 + v40);
  v43 = *v42;
  *(_BYTE *)(v41 + 8) = *((_BYTE *)v42 + 8);
  *(_QWORD *)v41 = v43;
  v44 = a3[18];
  v45 = a1 + v44;
  v46 = a2 + v44;
  LODWORD(v43) = *(_DWORD *)v46;
  *(_BYTE *)(v45 + 4) = *(_BYTE *)(v46 + 4);
  *(_DWORD *)v45 = v43;
  v47 = a3[19];
  v48 = *(void **)(a1 + v47);
  v49 = *(void **)(a2 + v47);
  *(_QWORD *)(a1 + v47) = v49;
  v50 = v49;

  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  v51 = a3[27];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  *v52 = *v53;
  v54 = v53[1];
  v55 = v52[1];
  v52[1] = v54;
  swift_bridgeObjectRetain(v54);
  swift_bridgeObjectRelease(v55);
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  return a1;
}

uint64_t sub_10008475C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v11((const void *)(a2 + v14), 1, v9))
  {
    v17 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  v18 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v18) = *(_DWORD *)(a2 + v18);
  v19 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a3[16];
  v24 = a3[17];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_DWORD *)v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  v27 = a1 + v24;
  v28 = a2 + v24;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a3[18];
  v30 = a3[19];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  v33 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  v35 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v35) = *(_BYTE *)(a2 + v35);
  v36 = a3[27];
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  *(_OWORD *)(a1 + v36) = *(_OWORD *)(a2 + v36);
  v37 = a3[29];
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  return a1;
}

uint64_t sub_1000849C8(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_10007D5D0(v7, v8, v9);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v10 = a3[6];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = v20[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease(v24);
  v25 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v26 = (void *)(a1 + v25);
  v27 = (void *)(a2 + v25);
  v28 = v15((void *)(a1 + v25), 1, v13);
  v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v26, v27, v13);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v26, v13);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    v30 = sub_100006A6C(&qword_1001A42A0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v26, v27, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
LABEL_13:
  v31 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_DWORD *)(a1 + v31) = *(_DWORD *)(a2 + v31);
  v32 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v33 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v34 = a1 + v33;
  v35 = a2 + v33;
  *(_DWORD *)v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = *(_BYTE *)(v35 + 4);
  v36 = a3[16];
  v37 = a3[17];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_DWORD *)v38 = *(_DWORD *)v39;
  *(_BYTE *)(v38 + 4) = *(_BYTE *)(v39 + 4);
  v40 = a1 + v37;
  v41 = a2 + v37;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  v42 = a3[18];
  v43 = a3[19];
  v44 = a1 + v42;
  v45 = a2 + v42;
  *(_DWORD *)v44 = *(_DWORD *)v45;
  *(_BYTE *)(v44 + 4) = *(_BYTE *)(v45 + 4);
  v46 = *(void **)(a1 + v43);
  *(_QWORD *)(a1 + v43) = *(_QWORD *)(a2 + v43);

  v47 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  v48 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v48) = *(_BYTE *)(a2 + v48);
  v49 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v49) = *(_BYTE *)(a2 + v49);
  v50 = a3[27];
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  v54 = *v52;
  v53 = v52[1];
  v55 = v51[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease(v55);
  v56 = a3[29];
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_BYTE *)(a1 + v56) = *(_BYTE *)(a2 + v56);
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  return a1;
}

uint64_t sub_100084D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100084D10);
}

uint64_t sub_100084D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100006A6C(&qword_1001A42A0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 108) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100084D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100084DA4);
}

uint64_t sub_100084DA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100006A6C(&qword_1001A42A0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 108) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for D2DSetupModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1001A6630;
  if (!qword_1001A6630)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for D2DSetupModel);
  return result;
}

void sub_100084E64(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  void *v12;
  char *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  char *v24;
  char *v25;
  void *v26;
  void *v27;
  void *v28;
  char *v29;

  v4[0] = &unk_100133F98;
  v4[1] = &unk_100133FB0;
  sub_100084F6C(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = &unk_100133FC8;
    v7 = (char *)&value witness table for Builtin.Int8 + 64;
    v8 = v5;
    v9 = (char *)&value witness table for Builtin.Int32 + 64;
    v10 = (char *)&value witness table for Builtin.Int32 + 64;
    v11 = (char *)&value witness table for Builtin.Int64 + 64;
    v12 = &unk_100133FE0;
    v13 = (char *)&value witness table for Builtin.Int64 + 64;
    v14 = &unk_100133FF8;
    v15 = &unk_100133FF8;
    v16 = &unk_100134010;
    v17 = &unk_100133FF8;
    v18 = &unk_100134028;
    v19 = &unk_100133FE0;
    v20 = &unk_100133FE0;
    v21 = &unk_100133FB0;
    v22 = &unk_100133FE0;
    v23 = &unk_100133FE0;
    v24 = (char *)&value witness table for Builtin.Int8 + 64;
    v25 = (char *)&value witness table for Builtin.Int8 + 64;
    v26 = &unk_100134040;
    v27 = &unk_100133FE0;
    v28 = &unk_100133FE0;
    v29 = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 27, v4, a1 + 16);
  }
}

void sub_100084F6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1001A4C70)
  {
    v2 = type metadata accessor for UUID(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1001A4C70);
  }
}

uint64_t destroy for D2DSetupViewModel(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 112));
  result = *(_QWORD *)(a1 + 136);
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 152));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 168));
    return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 184));
  }
  return result;
}

uint64_t initializeWithCopy for D2DSetupViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v25;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v9 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v8;
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  v11 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  v13 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v25 = *(_QWORD *)(a2 + 136);
  v14 = v4;
  swift_bridgeObjectRetain(v6);
  v15 = v7;
  v16 = v9;
  v17 = v8;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  if (v25)
  {
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v25;
    v18 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v18;
    v19 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v19;
    v20 = *(_QWORD *)(a2 + 176);
    v21 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = v20;
    *(_QWORD *)(a1 + 184) = v21;
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v21);
  }
  else
  {
    v22 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v22;
    v23 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v23;
  }
  return a1;
}

uint64_t assignWithCopy for D2DSetupViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(void **)(a1 + 24);
  v10 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v11 = v10;

  v12 = *(void **)(a1 + 32);
  v13 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  v14 = v13;

  v15 = *(void **)(a1 + 40);
  v16 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v16;
  v17 = v16;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v18 = *(_QWORD *)(a2 + 56);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v20 = *(_QWORD *)(a2 + 72);
  v21 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  v22 = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v22;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v23 = *(_QWORD *)(a2 + 96);
  v24 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v25 = *(_QWORD *)(a2 + 112);
  v26 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v27 = (_OWORD *)(a1 + 128);
  v28 = (__int128 *)(a2 + 128);
  v29 = *(_QWORD *)(a1 + 136);
  v30 = *(_QWORD *)(a2 + 136);
  if (v29)
  {
    if (v30)
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      v31 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 136) = v31;
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRelease(v29);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      v32 = *(_QWORD *)(a2 + 152);
      v33 = *(_QWORD *)(a1 + 152);
      *(_QWORD *)(a1 + 152) = v32;
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRelease(v33);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      v34 = *(_QWORD *)(a2 + 168);
      v35 = *(_QWORD *)(a1 + 168);
      *(_QWORD *)(a1 + 168) = v34;
      swift_bridgeObjectRetain(v34);
      swift_bridgeObjectRelease(v35);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      v36 = *(_QWORD *)(a2 + 184);
      v37 = *(_QWORD *)(a1 + 184);
      *(_QWORD *)(a1 + 184) = v36;
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRelease(v37);
    }
    else
    {
      sub_1000853F0((_QWORD *)(a1 + 128));
      v42 = *(_OWORD *)(a2 + 176);
      v44 = *v28;
      v43 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v42;
      *v27 = v44;
      *(_OWORD *)(a1 + 144) = v43;
    }
  }
  else if (v30)
  {
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v38 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 136) = v38;
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    v39 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 152) = v39;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    v40 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 168) = v40;
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    v41 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 184) = v41;
    swift_bridgeObjectRetain(v38);
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v41);
  }
  else
  {
    v45 = *v28;
    v46 = *(_OWORD *)(a2 + 144);
    v47 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v47;
    *v27 = v45;
    *(_OWORD *)(a1 + 144) = v46;
  }
  return a1;
}

_QWORD *sub_1000853F0(_QWORD *a1)
{
  destroy for DismissalConfirmationInformation(a1);
  return a1;
}

__n128 initializeWithTake for D2DSetupViewModel(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for D2DSetupViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v12;
  swift_bridgeObjectRelease(v13);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v14 = *(_QWORD *)(a2 + 96);
  v15 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a2 + 112);
  v17 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v16;
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v18 = *(_QWORD *)(a1 + 136);
  if (!v18)
    goto LABEL_5;
  v19 = *(_QWORD *)(a2 + 136);
  if (!v19)
  {
    sub_1000853F0((_QWORD *)(a1 + 128));
LABEL_5:
    v26 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v26;
    v27 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v27;
    return a1;
  }
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v19;
  swift_bridgeObjectRelease(v18);
  v20 = *(_QWORD *)(a2 + 152);
  v21 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v20;
  swift_bridgeObjectRelease(v21);
  v22 = *(_QWORD *)(a2 + 168);
  v23 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v22;
  swift_bridgeObjectRelease(v23);
  v24 = *(_QWORD *)(a2 + 184);
  v25 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v24;
  swift_bridgeObjectRelease(v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for D2DSetupViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 192))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for D2DSetupViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for D2DSetupViewModel()
{
  return &type metadata for D2DSetupViewModel;
}

uint64_t sub_100085664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  int v30;
  unint64_t v31;
  char v32;
  char v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  int v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t result;
  BOOL v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD v53[5];
  __int128 v54;
  __int128 v55;

  v4 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for D2DSetupModel(0);
  v8 = a2 + v7[6];
  v9 = type metadata accessor for UUID(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v11 = (_QWORD *)(a2 + v7[7]);
  *v11 = 0;
  v11[1] = 0;
  v12 = a2 + v7[9];
  v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v10)(v12, 1, 1, v9);
  v14 = a2 + v7[15];
  *(_DWORD *)v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  v15 = a2 + v7[16];
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  v16 = a2 + v7[17];
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  v17 = a2 + v7[18];
  *(_DWORD *)v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  *(_QWORD *)(a2 + v7[19]) = 0;
  *(_BYTE *)(a2 + v7[22]) = 2;
  v18 = v7[29];
  *(_BYTE *)(a2 + v18) = SFIsGreenTeaDevice(v13);
  *(_QWORD *)(a2 + v7[30]) = 0;
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = 3;
  v51 = 0xD000000000000010;
  v52 = 0x8000000100136400;
  AnyHashable.init<A>(_:)(v53, &v51, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v19 = sub_100005CF4((uint64_t)v53), (v20 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v19, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  sub_100006B34((uint64_t)v53);
  if (*((_QWORD *)&v55 + 1))
  {
    if ((swift_dynamicCast(&v51, &v54, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v21 = v52;
      UUID.init(uuidString:)(v51, v52);
      swift_bridgeObjectRelease(v21);
      sub_10000D8D0((uint64_t)v6, v8);
    }
  }
  else
  {
    sub_10000D858((uint64_t)&v54, &qword_1001A4340);
  }
  *(_QWORD *)&v54 = 0x6F6973726556736FLL;
  *((_QWORD *)&v54 + 1) = 0xE90000000000006ELL;
  AnyHashable.init<A>(_:)(v53, &v54, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v22 = sub_100005CF4((uint64_t)v53), (v23 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v22, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  sub_100006B34((uint64_t)v53);
  if (!*((_QWORD *)&v55 + 1))
  {
    sub_10000D858((uint64_t)&v54, &qword_1001A4340);
    goto LABEL_17;
  }
  if (!swift_dynamicCast(&v51, &v54, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
  {
LABEL_17:
    v24 = 0;
    goto LABEL_18;
  }
  v24 = v51;
LABEL_18:
  *(_BYTE *)(a2 + v7[8]) = v24;
  v51 = 0x556E6F6973736573;
  v52 = 0xEB00000000444955;
  AnyHashable.init<A>(_:)(v53, &v51, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v25 = sub_100005CF4((uint64_t)v53), (v26 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v25, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  sub_100006B34((uint64_t)v53);
  if (*((_QWORD *)&v55 + 1))
  {
    if ((swift_dynamicCast(&v51, &v54, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v27 = v52;
      UUID.init(uuidString:)(v51, v52);
      swift_bridgeObjectRelease(v27);
      sub_10000D8D0((uint64_t)v6, v12);
    }
  }
  else
  {
    sub_10000D858((uint64_t)&v54, &qword_1001A4340);
  }
  *(_QWORD *)&v54 = 1769173874;
  *((_QWORD *)&v54 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)(v53, &v54, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v28 = sub_100005CF4((uint64_t)v53), (v29 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v28, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  sub_100006B34((uint64_t)v53);
  if (!*((_QWORD *)&v55 + 1))
  {
    sub_10000D858((uint64_t)&v54, &qword_1001A4340);
    goto LABEL_34;
  }
  if (!swift_dynamicCast(&v51, &v54, (char *)&type metadata for Any + 8, &type metadata for Int32, 6))
  {
LABEL_34:
    v30 = 0;
    goto LABEL_35;
  }
  v30 = v51;
LABEL_35:
  *(_DWORD *)(a2 + v7[10]) = v30;
  *(_DWORD *)(a2 + v7[11]) = 0;
  *(_QWORD *)(a2 + v7[12]) = 0;
  *(_BYTE *)(a2 + v7[13]) = 0;
  *(_QWORD *)(a2 + v7[14]) = 0;
  *(_QWORD *)&v54 = 0x726174536F747561;
  *((_QWORD *)&v54 + 1) = 0xE900000000000074;
  AnyHashable.init<A>(_:)(v53, &v54, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v31 = sub_100005CF4((uint64_t)v53), (v32 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v31, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  sub_100006B34((uint64_t)v53);
  if (!*((_QWORD *)&v55 + 1))
  {
    sub_10000D858((uint64_t)&v54, &qword_1001A4340);
    goto LABEL_43;
  }
  if (!swift_dynamicCast(&v51, &v54, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
LABEL_43:
    v33 = 0;
    goto LABEL_44;
  }
  v33 = v51;
LABEL_44:
  *(_BYTE *)(a2 + v7[20]) = v33;
  *(_BYTE *)(a2 + v7[21]) = 0;
  *(_BYTE *)(a2 + v7[23]) = 0;
  *(_BYTE *)(a2 + v7[24]) = 0;
  *(_QWORD *)&v54 = 0x6C43656369766564;
  *((_QWORD *)&v54 + 1) = 0xEF65646F43737361;
  AnyHashable.init<A>(_:)(v53, &v54, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v34 = sub_100005CF4((uint64_t)v53), (v35 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v34, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  sub_100006B34((uint64_t)v53);
  if (!*((_QWORD *)&v55 + 1))
  {
    sub_10000D858((uint64_t)&v54, &qword_1001A4340);
    goto LABEL_52;
  }
  if (!swift_dynamicCast(&v51, &v54, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
  {
LABEL_52:
    v36 = 0;
    goto LABEL_53;
  }
  v36 = v51;
LABEL_53:
  v37 = v7[25];
  *(_BYTE *)(a2 + v37) = v36;
  *(_QWORD *)&v54 = 0x6F4D656369766564;
  *((_QWORD *)&v54 + 1) = 0xEF65646F436C6564;
  AnyHashable.init<A>(_:)(v53, &v54, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v38 = sub_100005CF4((uint64_t)v53), (v39 & 1) != 0))
  {
    sub_10000D894(*(_QWORD *)(a1 + 56) + 32 * v38, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  swift_bridgeObjectRelease(a1);
  sub_100006B34((uint64_t)v53);
  if (*((_QWORD *)&v55 + 1))
  {
    if (swift_dynamicCast(&v51, &v54, (char *)&type metadata for Any + 8, &type metadata for UInt8, 6))
    {
      v40 = v51;
      goto LABEL_62;
    }
  }
  else
  {
    sub_10000D858((uint64_t)&v54, &qword_1001A4340);
  }
  v40 = 0;
LABEL_62:
  *(_BYTE *)(a2 + v7[26]) = v40;
  v41 = *(unsigned __int8 *)(a2 + v37);
  v42 = (id)sub_100117374(*(_BYTE *)(a2 + v37));
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
  v45 = v44;

  v46 = (uint64_t *)(a2 + v7[27]);
  *v46 = v43;
  v46[1] = v45;
  result = SFDeviceClassCodeGet();
  if (v41)
    v48 = (_DWORD)result == v41;
  else
    v48 = 0;
  v49 = v48;
  *(_BYTE *)(a2 + v7[28]) = v49;
  return result;
}

uint64_t sub_100085DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;

  v1 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for D2DSetupModel(0);
  sub_10000D74C(v0 + *(int *)(v4 + 24), (uint64_t)v3);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5);
  if ((_DWORD)v7 == 1)
  {
    sub_10000D858((uint64_t)v3, &qword_1001A42A0);
    return 0;
  }
  v9 = UUID.uuidString.getter(v7);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
  if (v9 == 0xD000000000000024)
  {
    v12 = 0x8000000100135FE0;
    if (v11 == 0x8000000100135FE0)
      goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100135FE0, v9, v11, 0) & 1) != 0)
  {
    v12 = v11;
LABEL_8:
    swift_bridgeObjectRelease(v12);
    return 1;
  }
  if (v9 == 0xD000000000000024 && v11 == 0x8000000100136010)
  {
    swift_bridgeObjectRelease(0x8000000100136010);
    return 2;
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000024, 0x8000000100136010, v9, v11, 0);
    swift_bridgeObjectRelease(v11);
    if ((v13 & 1) == 0)
      return 0;
    return 2;
  }
}

uint64_t sub_100085F40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A65C0);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A65C0);
  if (qword_1001A2EE8 != -1)
    swift_once(&qword_1001A2EE8, sub_100018C94);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD468);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_100085FD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10006BB1C(*a1, *a2);
}

Swift::Int sub_100085FDC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE600000000000000;
  v3 = 0x6C616D726F6ELL;
  if (v1 != 1)
  {
    v3 = 0x6572756C696166;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64696C61766E69;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100086078(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE600000000000000;
  v3 = 0x6C616D726F6ELL;
  if (*v1 != 1)
  {
    v3 = 0x6572756C696166;
    v2 = 0xE700000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x64696C61766E69;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE700000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1000860F0(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE600000000000000;
  v4 = 0x6C616D726F6ELL;
  if (v2 != 1)
  {
    v4 = 0x6572756C696166;
    v3 = 0xE700000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x64696C61766E69;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE700000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_100086188@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_100176A38;
  result = sub_10008823C(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1000861BC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x6C616D726F6ELL;
  if (v2 != 1)
  {
    v5 = 0x6572756C696166;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x64696C61766E69;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100086218(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10006BC2C(*a1, *a2);
}

Swift::Int sub_100086224()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE700000000000000;
  v3 = 0x64657472617473;
  if (v1 != 1)
  {
    v3 = 0x64656873696E6966;
    v2 = 0xE800000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1701736302;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1000862BC(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE700000000000000;
  v3 = 0x64657472617473;
  if (*v1 != 1)
  {
    v3 = 0x64656873696E6966;
    v2 = 0xE800000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 1701736302;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100086330(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE700000000000000;
  v4 = 0x64657472617473;
  if (v2 != 1)
  {
    v4 = 0x64656873696E6966;
    v3 = 0xE800000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 1701736302;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE400000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_1000863C4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_100176AA0;
  result = sub_10008823C(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1000863F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x64657472617473;
  if (v2 != 1)
  {
    v5 = 0x64656873696E6966;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

id sub_100086450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  char v5;
  Swift::String v6;
  void *object;
  Swift::String v8;
  void *v9;
  id v10;
  id v11;
  Swift::String v12;
  void *v13;
  Swift::String v14;
  id v15;
  id v16;
  Swift::String v17;
  id v18;
  id v19;
  int *v20;
  Swift::String v21;
  void *v22;
  Swift::String v23;
  id v24;
  id v25;
  Swift::String v26;
  id v27;
  id v28;
  uint64_t *v29;
  void *v30;
  uint64_t v31;
  Swift::String v32;
  void *v33;
  Swift::String v34;
  id v35;
  id v36;
  Swift::String v37;
  id v38;
  id v39;
  uint64_t v40;
  Swift::String v41;
  void *v42;
  Swift::String v43;
  id v44;
  id v45;
  Swift::String v46;
  id v47;
  id v48;
  Swift::String v49;
  void *v50;
  Swift::String v51;
  id v52;
  id v53;
  Swift::String v54;
  id v55;
  id v56;
  Swift::String v57;
  void *v58;
  Swift::String v59;
  id v60;
  id v61;
  Swift::String v62;
  id v63;
  id v64;
  Swift::String v65;
  void *v66;
  Swift::String v67;
  id v68;
  id v69;
  Swift::String v70;
  id v71;
  id v72;
  Swift::String v73;
  void *v74;
  Swift::String v75;
  id v76;
  id v77;
  Swift::String v78;
  id v79;
  id v80;
  Swift::String v81;
  void *v82;
  Swift::String v83;
  id v84;
  id v85;
  Swift::String v86;
  id v87;
  id v88;
  Swift::String v89;
  void *v90;
  Swift::String v91;
  id v92;
  id v93;
  Swift::String v94;
  id v95;
  id v96;
  int *v97;
  int v98;
  uint64_t v99;
  Swift::String v100;
  void *v101;
  Swift::String v102;
  id v103;
  id v104;
  Swift::String v105;
  id v106;
  id v107;
  int *v108;
  int v109;
  uint64_t v110;
  Swift::String v111;
  void *v112;
  Swift::String v113;
  id v114;
  id v115;
  Swift::String v116;
  id v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  Swift::String v122;
  void *v123;
  Swift::String v124;
  id v125;
  id v126;
  Swift::String v127;
  id v128;
  id v129;
  int *v130;
  int v131;
  uint64_t v132;
  Swift::String v133;
  void *v134;
  Swift::String v135;
  id v136;
  id v137;
  Swift::String v138;
  id v139;
  id v140;
  id v141;
  uint64_t v142;
  Swift::String v143;
  void *v144;
  Swift::String v145;
  id v146;
  id v147;
  Swift::String v148;
  id v149;
  id v150;
  Swift::String v151;
  void *v152;
  Swift::String v153;
  id v154;
  id v155;
  Swift::String v156;
  id v157;
  id v158;
  Swift::String v159;
  void *v160;
  Swift::String v161;
  id v162;
  id v163;
  Swift::String v164;
  id v165;
  id v166;
  uint64_t v167;
  Swift::String v168;
  void *v169;
  Swift::String v170;
  id v171;
  id v172;
  Swift::String v173;
  id v174;
  id v175;
  Swift::String v176;
  void *v177;
  Swift::String v178;
  id v179;
  id v180;
  Swift::String v181;
  id v182;
  id v183;
  void *v184;
  Swift::String v185;
  void *v186;
  Swift::String v187;
  id v188;
  id v189;
  Swift::String v190;
  id v191;
  id v192;
  uint64_t v193;
  Swift::String v194;
  void *v195;
  Swift::String v196;
  id v197;
  id v198;
  Swift::String v199;
  id v200;
  id v201;
  uint64_t v202;
  Swift::String v203;
  void *v204;
  Swift::String v205;
  id v206;
  id v207;
  Swift::String v208;
  id v209;
  id v210;
  uint64_t *v211;
  void *v212;
  Swift::String v213;
  void *v214;
  Swift::String v215;
  id v216;
  id v217;
  Swift::String v218;
  id v219;
  id v220;
  Swift::String v221;
  void *v222;
  Swift::String v223;
  id v224;
  id v225;
  Swift::String v226;
  id v227;
  id v228;
  Swift::String v229;
  void *v230;
  Swift::String v231;
  id v232;
  id v233;
  Swift::String v234;
  id v235;
  Swift::String v236;
  uint64_t v238;
  void *v239;
  void *v240;
  id v241[2];
  char v242;
  Swift::String v243;

  v1 = sub_100006A6C(&qword_1001A42A0);
  __chkstk_darwin(v1);
  v3 = (char *)&v238 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243._countAndFlagsBits = 0x73736572676F7270;
  v243._object = (void *)0xE90000000000003DLL;
  v4 = *(void **)(v0 + 8);
  v5 = *(_BYTE *)(v0 + 16);
  v241[0] = *(id *)v0;
  v241[1] = v4;
  v242 = v5;
  sub_10007D610(v241[0], (uint64_t)v4, v5);
  v6._countAndFlagsBits = String.init<A>(reflecting:)(v241, &type metadata for D2DSetupModel.SetupProgress);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 32;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  v9 = v243._object;
  v241[0] = (id)0x757465534432443CLL;
  v241[1] = (id)0xEF206C65646F4D70;
  String.append(_:)(v243);
  swift_bridgeObjectRelease(v9);
  v11 = v241[0];
  v10 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD000000000000017;
  v241[1] = (id)0x800000010013AD90;
  LOBYTE(v243._countAndFlagsBits) = *(_BYTE *)(v0 + 17);
  v12._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for D2DSetupModel.DependentSetupProgress);
  v13 = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v13);
  v14._countAndFlagsBits = 32;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  v15 = v241[0];
  v16 = v241[1];
  v241[0] = v11;
  v241[1] = v10;
  swift_bridgeObjectRetain(v10);
  v17._countAndFlagsBits = (uint64_t)v15;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v16);
  v19 = v241[0];
  v18 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v241[1]);
  v240 = (void *)0xD000000000000011;
  v241[0] = (id)0xD000000000000011;
  v241[1] = (id)0x800000010013ADB0;
  v20 = (int *)type metadata accessor for D2DSetupModel(0);
  sub_10000D74C(v0 + v20[6], (uint64_t)v3);
  v21._countAndFlagsBits = String.init<A>(reflecting:)(v3, v1);
  v22 = v21._object;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v22);
  v23._countAndFlagsBits = 32;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  v24 = v241[0];
  v25 = v241[1];
  v241[0] = v19;
  v241[1] = v18;
  swift_bridgeObjectRetain(v18);
  v26._countAndFlagsBits = (uint64_t)v24;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v25);
  v28 = v241[0];
  v27 = v241[1];
  strcpy((char *)v241, "appleId=");
  BYTE1(v241[1]) = 0;
  WORD1(v241[1]) = 0;
  HIDWORD(v241[1]) = -402653184;
  v29 = (uint64_t *)(v0 + v20[7]);
  v30 = (void *)v29[1];
  v243._countAndFlagsBits = *v29;
  v243._object = v30;
  swift_bridgeObjectRetain(v30);
  v31 = sub_100006A6C(&qword_1001A5430);
  v32._countAndFlagsBits = String.init<A>(reflecting:)(&v243, v31);
  v33 = v32._object;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v33);
  v34._countAndFlagsBits = 32;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  v35 = v241[0];
  v36 = v241[1];
  v241[0] = v28;
  v241[1] = v27;
  swift_bridgeObjectRetain(v27);
  v37._countAndFlagsBits = (uint64_t)v35;
  v37._object = v36;
  String.append(_:)(v37);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v36);
  v39 = v241[0];
  v38 = v241[1];
  strcpy((char *)v241, "osVersion=");
  BYTE3(v241[1]) = 0;
  HIDWORD(v241[1]) = -369098752;
  LOBYTE(v243._countAndFlagsBits) = *(_BYTE *)(v0 + v20[8]);
  type metadata accessor for SFOSVersion(0);
  v41._countAndFlagsBits = String.init<A>(reflecting:)(&v243, v40);
  v42 = v41._object;
  String.append(_:)(v41);
  swift_bridgeObjectRelease(v42);
  v43._countAndFlagsBits = 32;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  v44 = v241[0];
  v45 = v241[1];
  v241[0] = v39;
  v241[1] = v38;
  swift_bridgeObjectRetain(v38);
  v46._countAndFlagsBits = (uint64_t)v44;
  v46._object = v45;
  String.append(_:)(v46);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v45);
  v48 = v241[0];
  v47 = v241[1];
  strcpy((char *)v241, "sessionUUID=");
  BYTE5(v241[1]) = 0;
  HIWORD(v241[1]) = -5120;
  sub_10000D74C(v0 + v20[9], (uint64_t)v3);
  v49._countAndFlagsBits = String.init<A>(reflecting:)(v3, v1);
  v50 = v49._object;
  String.append(_:)(v49);
  swift_bridgeObjectRelease(v50);
  v51._countAndFlagsBits = 32;
  v51._object = (void *)0xE100000000000000;
  String.append(_:)(v51);
  v52 = v241[0];
  v53 = v241[1];
  v241[0] = v48;
  v241[1] = v47;
  swift_bridgeObjectRetain(v47);
  v54._countAndFlagsBits = (uint64_t)v52;
  v54._object = v53;
  String.append(_:)(v54);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v53);
  v56 = v241[0];
  v55 = v241[1];
  v241[0] = (id)0x3D69737372;
  v241[1] = (id)0xE500000000000000;
  LODWORD(v243._countAndFlagsBits) = *(_DWORD *)(v0 + v20[10]);
  v57._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for Int32);
  v58 = v57._object;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v58);
  v59._countAndFlagsBits = 32;
  v59._object = (void *)0xE100000000000000;
  String.append(_:)(v59);
  v60 = v241[0];
  v61 = v241[1];
  v241[0] = v56;
  v241[1] = v55;
  swift_bridgeObjectRetain(v55);
  v62._countAndFlagsBits = (uint64_t)v60;
  v62._object = v61;
  String.append(_:)(v62);
  swift_bridgeObjectRelease(v55);
  swift_bridgeObjectRelease(v61);
  v64 = v241[0];
  v63 = v241[1];
  strcpy((char *)v241, "badPINCount=");
  BYTE5(v241[1]) = 0;
  HIWORD(v241[1]) = -5120;
  LODWORD(v243._countAndFlagsBits) = *(_DWORD *)(v0 + v20[11]);
  v65._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for UInt32);
  v66 = v65._object;
  String.append(_:)(v65);
  swift_bridgeObjectRelease(v66);
  v67._countAndFlagsBits = 32;
  v67._object = (void *)0xE100000000000000;
  String.append(_:)(v67);
  v68 = v241[0];
  v69 = v241[1];
  v241[0] = v64;
  v241[1] = v63;
  swift_bridgeObjectRetain(v63);
  v70._countAndFlagsBits = (uint64_t)v68;
  v70._object = v69;
  String.append(_:)(v70);
  swift_bridgeObjectRelease(v63);
  swift_bridgeObjectRelease(v69);
  v72 = v241[0];
  v71 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD000000000000012;
  v241[1] = (id)0x800000010013ADD0;
  v243._countAndFlagsBits = *(_QWORD *)(v0 + v20[12]);
  v73._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for UInt64);
  v74 = v73._object;
  String.append(_:)(v73);
  swift_bridgeObjectRelease(v74);
  v75._countAndFlagsBits = 32;
  v75._object = (void *)0xE100000000000000;
  String.append(_:)(v75);
  v76 = v241[0];
  v77 = v241[1];
  v241[0] = v72;
  v241[1] = v71;
  swift_bridgeObjectRetain(v71);
  v78._countAndFlagsBits = (uint64_t)v76;
  v78._object = v77;
  String.append(_:)(v78);
  swift_bridgeObjectRelease(v71);
  swift_bridgeObjectRelease(v77);
  v80 = v241[0];
  v79 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD000000000000015;
  v241[1] = (id)0x800000010013ADF0;
  LOBYTE(v243._countAndFlagsBits) = *(_BYTE *)(v0 + v20[13]);
  v81._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for Bool);
  v82 = v81._object;
  String.append(_:)(v81);
  swift_bridgeObjectRelease(v82);
  v83._countAndFlagsBits = 32;
  v83._object = (void *)0xE100000000000000;
  String.append(_:)(v83);
  v84 = v241[0];
  v85 = v241[1];
  v241[0] = v80;
  v241[1] = v79;
  swift_bridgeObjectRetain(v79);
  v86._countAndFlagsBits = (uint64_t)v84;
  v86._object = v85;
  String.append(_:)(v86);
  swift_bridgeObjectRelease(v79);
  swift_bridgeObjectRelease(v85);
  v88 = v241[0];
  v87 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD000000000000014;
  v241[1] = (id)0x800000010013AE10;
  v243._countAndFlagsBits = *(_QWORD *)(v0 + v20[14]);
  v89._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for UInt64);
  v90 = v89._object;
  String.append(_:)(v89);
  swift_bridgeObjectRelease(v90);
  v91._countAndFlagsBits = 32;
  v91._object = (void *)0xE100000000000000;
  String.append(_:)(v91);
  v92 = v241[0];
  v93 = v241[1];
  v241[0] = v88;
  v241[1] = v87;
  swift_bridgeObjectRetain(v87);
  v94._countAndFlagsBits = (uint64_t)v92;
  v94._object = v93;
  String.append(_:)(v94);
  swift_bridgeObjectRelease(v87);
  swift_bridgeObjectRelease(v93);
  v96 = v241[0];
  v95 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD000000000000014;
  v241[1] = (id)0x800000010013AE30;
  v97 = (int *)(v0 + v20[15]);
  v98 = *v97;
  LOBYTE(v97) = *((_BYTE *)v97 + 4);
  LODWORD(v243._countAndFlagsBits) = v98;
  BYTE4(v243._countAndFlagsBits) = (_BYTE)v97;
  v99 = sub_100006A6C(&qword_1001A66D0);
  v100._countAndFlagsBits = String.init<A>(reflecting:)(&v243, v99);
  v101 = v100._object;
  String.append(_:)(v100);
  swift_bridgeObjectRelease(v101);
  v102._countAndFlagsBits = 32;
  v102._object = (void *)0xE100000000000000;
  String.append(_:)(v102);
  v103 = v241[0];
  v104 = v241[1];
  v241[0] = v96;
  v241[1] = v95;
  swift_bridgeObjectRetain(v95);
  v105._countAndFlagsBits = (uint64_t)v103;
  v105._object = v104;
  String.append(_:)(v105);
  swift_bridgeObjectRelease(v95);
  swift_bridgeObjectRelease(v104);
  v107 = v241[0];
  v106 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD000000000000013;
  v241[1] = (id)0x800000010013AE50;
  v108 = (int *)(v0 + v20[16]);
  v109 = *v108;
  LOBYTE(v108) = *((_BYTE *)v108 + 4);
  LODWORD(v243._countAndFlagsBits) = v109;
  BYTE4(v243._countAndFlagsBits) = (_BYTE)v108;
  v110 = sub_100006A6C(&qword_1001A66D8);
  v111._countAndFlagsBits = String.init<A>(reflecting:)(&v243, v110);
  v112 = v111._object;
  String.append(_:)(v111);
  swift_bridgeObjectRelease(v112);
  v113._countAndFlagsBits = 32;
  v113._object = (void *)0xE100000000000000;
  String.append(_:)(v113);
  v114 = v241[0];
  v115 = v241[1];
  v241[0] = v107;
  v241[1] = v106;
  swift_bridgeObjectRetain(v106);
  v116._countAndFlagsBits = (uint64_t)v114;
  v116._object = v115;
  String.append(_:)(v116);
  swift_bridgeObjectRelease(v106);
  swift_bridgeObjectRelease(v115);
  v118 = v241[0];
  v117 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD00000000000001BLL;
  v241[1] = (id)0x800000010013AE70;
  v119 = v0 + v20[17];
  v120 = *(_QWORD *)v119;
  LOBYTE(v119) = *(_BYTE *)(v119 + 8);
  v243._countAndFlagsBits = v120;
  LOBYTE(v243._object) = v119;
  v121 = sub_100006A6C(&qword_1001A66E0);
  v122._countAndFlagsBits = String.init<A>(reflecting:)(&v243, v121);
  v123 = v122._object;
  String.append(_:)(v122);
  swift_bridgeObjectRelease(v123);
  v124._countAndFlagsBits = 32;
  v124._object = (void *)0xE100000000000000;
  String.append(_:)(v124);
  v125 = v241[0];
  v126 = v241[1];
  v241[0] = v118;
  v241[1] = v117;
  swift_bridgeObjectRetain(v117);
  v127._countAndFlagsBits = (uint64_t)v125;
  v127._object = v126;
  String.append(_:)(v127);
  swift_bridgeObjectRelease(v117);
  swift_bridgeObjectRelease(v126);
  v129 = v241[0];
  v128 = v241[1];
  strcpy((char *)v241, "dismissType=");
  BYTE5(v241[1]) = 0;
  HIWORD(v241[1]) = -5120;
  v130 = (int *)(v0 + v20[18]);
  v131 = *v130;
  LOBYTE(v130) = *((_BYTE *)v130 + 4);
  LODWORD(v243._countAndFlagsBits) = v131;
  BYTE4(v243._countAndFlagsBits) = (_BYTE)v130;
  v132 = sub_100006A6C(&qword_1001A66E8);
  v133._countAndFlagsBits = String.init<A>(reflecting:)(&v243, v132);
  v134 = v133._object;
  String.append(_:)(v133);
  swift_bridgeObjectRelease(v134);
  v135._countAndFlagsBits = 32;
  v135._object = (void *)0xE100000000000000;
  String.append(_:)(v135);
  v136 = v241[0];
  v137 = v241[1];
  v241[0] = v129;
  v241[1] = v128;
  swift_bridgeObjectRetain(v128);
  v138._countAndFlagsBits = (uint64_t)v136;
  v138._object = v137;
  String.append(_:)(v138);
  swift_bridgeObjectRelease(v128);
  swift_bridgeObjectRelease(v137);
  v140 = v241[0];
  v139 = v241[1];
  v241[0] = (id)0x3D726F727265;
  v241[1] = (id)0xE600000000000000;
  v243._countAndFlagsBits = *(_QWORD *)(v0 + v20[19]);
  v141 = (id)v243._countAndFlagsBits;
  v142 = sub_100006A6C(&qword_1001A63D8);
  v143._countAndFlagsBits = String.init<A>(reflecting:)(&v243, v142);
  v144 = v143._object;
  String.append(_:)(v143);
  swift_bridgeObjectRelease(v144);
  v145._countAndFlagsBits = 32;
  v145._object = (void *)0xE100000000000000;
  String.append(_:)(v145);
  v146 = v241[0];
  v147 = v241[1];
  v241[0] = v140;
  v241[1] = v139;
  swift_bridgeObjectRetain(v139);
  v148._countAndFlagsBits = (uint64_t)v146;
  v148._object = v147;
  String.append(_:)(v148);
  swift_bridgeObjectRelease(v139);
  swift_bridgeObjectRelease(v147);
  v150 = v241[0];
  v149 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v241[1]);
  v239 = (void *)0xD000000000000010;
  v241[0] = (id)0xD000000000000010;
  v241[1] = (id)0x800000010013AE90;
  LOBYTE(v243._countAndFlagsBits) = *(_BYTE *)(v0 + v20[20]);
  v151._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for Bool);
  v152 = v151._object;
  String.append(_:)(v151);
  swift_bridgeObjectRelease(v152);
  v153._countAndFlagsBits = 32;
  v153._object = (void *)0xE100000000000000;
  String.append(_:)(v153);
  v154 = v241[0];
  v155 = v241[1];
  v241[0] = v150;
  v241[1] = v149;
  swift_bridgeObjectRetain(v149);
  v156._countAndFlagsBits = (uint64_t)v154;
  v156._object = v155;
  String.append(_:)(v156);
  swift_bridgeObjectRelease(v149);
  swift_bridgeObjectRelease(v155);
  v158 = v241[0];
  v157 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD000000000000016;
  v241[1] = (id)0x800000010013AEB0;
  LOBYTE(v243._countAndFlagsBits) = *(_BYTE *)(v0 + v20[21]);
  v159._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for Bool);
  v160 = v159._object;
  String.append(_:)(v159);
  swift_bridgeObjectRelease(v160);
  v161._countAndFlagsBits = 32;
  v161._object = (void *)0xE100000000000000;
  String.append(_:)(v161);
  v162 = v241[0];
  v163 = v241[1];
  v241[0] = v158;
  v241[1] = v157;
  swift_bridgeObjectRetain(v157);
  v164._countAndFlagsBits = (uint64_t)v162;
  v164._object = v163;
  String.append(_:)(v164);
  swift_bridgeObjectRelease(v157);
  swift_bridgeObjectRelease(v163);
  v166 = v241[0];
  v165 = v241[1];
  strcpy((char *)v241, "isWifiOn=");
  WORD1(v241[1]) = 0;
  HIDWORD(v241[1]) = -385875968;
  LOBYTE(v243._countAndFlagsBits) = *(_BYTE *)(v0 + v20[22]);
  v167 = sub_100006A6C(&qword_1001A66F0);
  v168._countAndFlagsBits = String.init<A>(reflecting:)(&v243, v167);
  v169 = v168._object;
  String.append(_:)(v168);
  swift_bridgeObjectRelease(v169);
  v170._countAndFlagsBits = 32;
  v170._object = (void *)0xE100000000000000;
  String.append(_:)(v170);
  v171 = v241[0];
  v172 = v241[1];
  v241[0] = v166;
  v241[1] = v165;
  swift_bridgeObjectRetain(v165);
  v173._countAndFlagsBits = (uint64_t)v171;
  v173._object = v172;
  String.append(_:)(v173);
  swift_bridgeObjectRelease(v165);
  swift_bridgeObjectRelease(v172);
  v175 = v241[0];
  v174 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = v240;
  v241[1] = (id)0x800000010013AED0;
  LOBYTE(v243._countAndFlagsBits) = *(_BYTE *)(v0 + v20[23]);
  v176._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for Bool);
  v177 = v176._object;
  String.append(_:)(v176);
  swift_bridgeObjectRelease(v177);
  v178._countAndFlagsBits = 32;
  v178._object = (void *)0xE100000000000000;
  String.append(_:)(v178);
  v179 = v241[0];
  v180 = v241[1];
  v241[0] = v175;
  v241[1] = v174;
  swift_bridgeObjectRetain(v174);
  v181._countAndFlagsBits = (uint64_t)v179;
  v181._object = v180;
  String.append(_:)(v181);
  swift_bridgeObjectRelease(v174);
  swift_bridgeObjectRelease(v180);
  v183 = v241[0];
  v182 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v241[1]);
  v184 = v239;
  v241[0] = v239;
  v241[1] = (id)0x800000010013AEF0;
  LOBYTE(v243._countAndFlagsBits) = *(_BYTE *)(v0 + v20[24]);
  v185._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for Bool);
  v186 = v185._object;
  String.append(_:)(v185);
  swift_bridgeObjectRelease(v186);
  v187._countAndFlagsBits = 32;
  v187._object = (void *)0xE100000000000000;
  String.append(_:)(v187);
  v188 = v241[0];
  v189 = v241[1];
  v241[0] = v183;
  v241[1] = v182;
  swift_bridgeObjectRetain(v182);
  v190._countAndFlagsBits = (uint64_t)v188;
  v190._object = v189;
  String.append(_:)(v190);
  swift_bridgeObjectRelease(v182);
  swift_bridgeObjectRelease(v189);
  v192 = v241[0];
  v191 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD000000000000015;
  v241[1] = (id)0x800000010013AF10;
  LOBYTE(v243._countAndFlagsBits) = *(_BYTE *)(v0 + v20[25]);
  type metadata accessor for SFDeviceClassCode(0);
  v194._countAndFlagsBits = String.init<A>(reflecting:)(&v243, v193);
  v195 = v194._object;
  String.append(_:)(v194);
  swift_bridgeObjectRelease(v195);
  v196._countAndFlagsBits = 32;
  v196._object = (void *)0xE100000000000000;
  String.append(_:)(v196);
  v197 = v241[0];
  v198 = v241[1];
  v241[0] = v192;
  v241[1] = v191;
  swift_bridgeObjectRetain(v191);
  v199._countAndFlagsBits = (uint64_t)v197;
  v199._object = v198;
  String.append(_:)(v199);
  swift_bridgeObjectRelease(v191);
  swift_bridgeObjectRelease(v198);
  v201 = v241[0];
  v200 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD000000000000015;
  v241[1] = (id)0x800000010013AF30;
  LOBYTE(v243._countAndFlagsBits) = *(_BYTE *)(v0 + v20[26]);
  type metadata accessor for SFDeviceModelCode(0);
  v203._countAndFlagsBits = String.init<A>(reflecting:)(&v243, v202);
  v204 = v203._object;
  String.append(_:)(v203);
  swift_bridgeObjectRelease(v204);
  v205._countAndFlagsBits = 32;
  v205._object = (void *)0xE100000000000000;
  String.append(_:)(v205);
  v206 = v241[0];
  v207 = v241[1];
  v241[0] = v201;
  v241[1] = v200;
  swift_bridgeObjectRetain(v200);
  v208._countAndFlagsBits = (uint64_t)v206;
  v208._object = v207;
  String.append(_:)(v208);
  swift_bridgeObjectRelease(v200);
  swift_bridgeObjectRelease(v207);
  v210 = v241[0];
  v209 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = (id)0xD000000000000015;
  v241[1] = (id)0x800000010013AF50;
  v211 = (uint64_t *)(v0 + v20[27]);
  v212 = (void *)v211[1];
  v243._countAndFlagsBits = *v211;
  v243._object = v212;
  swift_bridgeObjectRetain(v212);
  v213._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for String);
  v214 = v213._object;
  String.append(_:)(v213);
  swift_bridgeObjectRelease(v214);
  v215._countAndFlagsBits = 32;
  v215._object = (void *)0xE100000000000000;
  String.append(_:)(v215);
  v216 = v241[0];
  v217 = v241[1];
  v241[0] = v210;
  v241[1] = v209;
  swift_bridgeObjectRetain(v209);
  v218._countAndFlagsBits = (uint64_t)v216;
  v218._object = v217;
  String.append(_:)(v218);
  swift_bridgeObjectRelease(v209);
  swift_bridgeObjectRelease(v217);
  v220 = v241[0];
  v219 = v241[1];
  strcpy((char *)v241, "testMode=");
  WORD1(v241[1]) = 0;
  HIDWORD(v241[1]) = -385875968;
  LOBYTE(v243._countAndFlagsBits) = sub_100085DA4();
  v221._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for D2DSetupModel.TestMode);
  v222 = v221._object;
  String.append(_:)(v221);
  swift_bridgeObjectRelease(v222);
  v223._countAndFlagsBits = 32;
  v223._object = (void *)0xE100000000000000;
  String.append(_:)(v223);
  v224 = v241[0];
  v225 = v241[1];
  v241[0] = v220;
  v241[1] = v219;
  swift_bridgeObjectRetain(v219);
  v226._countAndFlagsBits = (uint64_t)v224;
  v226._object = v225;
  String.append(_:)(v226);
  swift_bridgeObjectRelease(v219);
  swift_bridgeObjectRelease(v225);
  v228 = v241[0];
  v227 = v241[1];
  v241[0] = 0;
  v241[1] = (id)0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v241[1]);
  v241[0] = v184;
  v241[1] = (id)0x800000010013AF70;
  v243._countAndFlagsBits = *(_QWORD *)(v0 + v20[30]);
  v229._countAndFlagsBits = String.init<A>(reflecting:)(&v243, &type metadata for Int);
  v230 = v229._object;
  String.append(_:)(v229);
  swift_bridgeObjectRelease(v230);
  v231._countAndFlagsBits = 32;
  v231._object = (void *)0xE100000000000000;
  String.append(_:)(v231);
  v232 = v241[0];
  v233 = v241[1];
  v241[0] = v228;
  v241[1] = v227;
  swift_bridgeObjectRetain(v227);
  v234._countAndFlagsBits = (uint64_t)v232;
  v234._object = v233;
  String.append(_:)(v234);
  swift_bridgeObjectRelease(v227);
  swift_bridgeObjectRelease(v233);
  v235 = v241[1];
  swift_bridgeObjectRetain(v241[1]);
  v236._countAndFlagsBits = 62;
  v236._object = (void *)0xE100000000000000;
  String.append(_:)(v236);
  swift_bridgeObjectRelease(v235);
  return v241[0];
}

uint64_t sub_100087430()
{
  _QWORD *v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  void *v20;
  Swift::String v21;
  uint64_t v22;
  void *v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  void *v29;
  Swift::String v30;
  uint64_t v31;
  void *v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  void *v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  void *v46;
  Swift::String v47;
  uint64_t v48;
  void *v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  void *v54;
  Swift::String v55;
  uint64_t v56;
  void *v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  Swift::String v61;
  void *v62;
  Swift::String v63;
  uint64_t v64;
  void *v65;
  Swift::String v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Swift::String v70;
  void *v71;
  Swift::String v72;
  uint64_t v73;
  void *v74;
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  Swift::String v79;
  void *v80;
  Swift::String v81;
  uint64_t v82;
  void *v83;
  Swift::String v84;
  uint64_t v85;
  Swift::String v86;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92[8];
  _BYTE v93[16];
  _BYTE v94[16];
  char v95[8];
  _BYTE v96[16];
  _BYTE v97[16];
  id v98;
  id v99[2];

  v92[0] = 0x3D656C746974;
  v92[1] = 0xE600000000000000;
  v1 = v0[2];
  v88 = v0[1];
  v89 = v1;
  swift_bridgeObjectRetain(v1);
  v2._countAndFlagsBits = String.init<A>(reflecting:)(&v88, &type metadata for String);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 32;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = v92[0];
  v6 = (void *)v92[1];
  v92[0] = 0xD000000000000013;
  v92[1] = 0x800000010013AF90;
  v5._object = v6;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v6);
  v8 = v92[0];
  v7 = v92[1];
  v92[0] = 0x3D6567616D69;
  v92[1] = 0xE600000000000000;
  sub_10005B590((uint64_t)(v0 + 3), (uint64_t)v99, &qword_1001A66F8);
  sub_10005B590((uint64_t)v99, (uint64_t)&v88, &qword_1001A66F8);
  sub_100087C44(v99);
  v9 = sub_100006A6C(&qword_1001A66F8);
  v10._countAndFlagsBits = String.init<A>(reflecting:)(&v88, v9);
  v11 = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 32;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13 = v92[0];
  v14 = (void *)v92[1];
  v92[0] = v8;
  v92[1] = v7;
  swift_bridgeObjectRetain(v7);
  v15._countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v14);
  v17 = v92[0];
  v16 = v92[1];
  strcpy((char *)v92, "subtitle=");
  WORD1(v92[1]) = 0;
  HIDWORD(v92[1]) = -385875968;
  sub_10005B590((uint64_t)(v0 + 5), (uint64_t)&v98, &qword_1001A6700);
  sub_10005B590((uint64_t)&v98, (uint64_t)&v88, &qword_1001A6700);
  sub_100087C44(&v98);
  v18 = sub_100006A6C(&qword_1001A6700);
  v19._countAndFlagsBits = String.init<A>(reflecting:)(&v88, v18);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  v21._countAndFlagsBits = 32;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  v22 = v92[0];
  v23 = (void *)v92[1];
  v92[0] = v17;
  v92[1] = v16;
  swift_bridgeObjectRetain(v16);
  v24._countAndFlagsBits = v22;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v23);
  v26 = v92[0];
  v25 = v92[1];
  v92[0] = 0;
  v92[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(v92[1]);
  v92[0] = 0xD000000000000010;
  v92[1] = 0x800000010013AFB0;
  sub_10005B590((uint64_t)(v0 + 6), (uint64_t)v97, &qword_1001A5430);
  sub_10005B590((uint64_t)v97, (uint64_t)&v88, &qword_1001A5430);
  sub_100087C6C((uint64_t)v97);
  v27 = sub_100006A6C(&qword_1001A5430);
  v28._countAndFlagsBits = String.init<A>(reflecting:)(&v88, v27);
  v29 = v28._object;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v29);
  v30._countAndFlagsBits = 32;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  v31 = v92[0];
  v32 = (void *)v92[1];
  v92[0] = v26;
  v92[1] = v25;
  swift_bridgeObjectRetain(v25);
  v33._countAndFlagsBits = v31;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v32);
  v35 = v92[0];
  v34 = v92[1];
  v92[0] = 0;
  v92[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v92[1]);
  v92[0] = 0xD000000000000015;
  v92[1] = 0x800000010013AFD0;
  sub_10005B590((uint64_t)(v0 + 8), (uint64_t)v96, &qword_1001A5430);
  sub_10005B590((uint64_t)v96, (uint64_t)&v88, &qword_1001A5430);
  sub_100087C6C((uint64_t)v96);
  v36._countAndFlagsBits = String.init<A>(reflecting:)(&v88, v27);
  v37 = v36._object;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v37);
  v38._countAndFlagsBits = 32;
  v38._object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  v39 = v92[0];
  v40 = (void *)v92[1];
  v92[0] = v35;
  v92[1] = v34;
  swift_bridgeObjectRetain(v34);
  v41._countAndFlagsBits = v39;
  v41._object = v40;
  String.append(_:)(v41);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v40);
  v43 = v92[0];
  v42 = v92[1];
  strcpy((char *)v92, "progress=");
  WORD1(v92[1]) = 0;
  HIDWORD(v92[1]) = -385875968;
  sub_10005B590((uint64_t)(v0 + 10), (uint64_t)v95, &qword_1001A66D8);
  sub_10005B590((uint64_t)v95, (uint64_t)&v88, &qword_1001A66D8);
  v44 = sub_100006A6C(&qword_1001A66D8);
  v45._countAndFlagsBits = String.init<A>(reflecting:)(&v88, v44);
  v46 = v45._object;
  String.append(_:)(v45);
  swift_bridgeObjectRelease(v46);
  v47._countAndFlagsBits = 32;
  v47._object = (void *)0xE100000000000000;
  String.append(_:)(v47);
  v48 = v92[0];
  v49 = (void *)v92[1];
  v92[0] = v43;
  v92[1] = v42;
  swift_bridgeObjectRetain(v42);
  v50._countAndFlagsBits = v48;
  v50._object = v49;
  String.append(_:)(v50);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v49);
  v52 = v92[0];
  v51 = v92[1];
  v92[0] = 0;
  v92[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v92[1]);
  v92[0] = 0xD000000000000011;
  v92[1] = 0x800000010013AFF0;
  sub_10005B590((uint64_t)(v0 + 11), (uint64_t)v94, &qword_1001A5430);
  sub_10005B590((uint64_t)v94, (uint64_t)&v88, &qword_1001A5430);
  sub_100087C6C((uint64_t)v94);
  v53._countAndFlagsBits = String.init<A>(reflecting:)(&v88, v27);
  v54 = v53._object;
  String.append(_:)(v53);
  swift_bridgeObjectRelease(v54);
  v55._countAndFlagsBits = 32;
  v55._object = (void *)0xE100000000000000;
  String.append(_:)(v55);
  v56 = v92[0];
  v57 = (void *)v92[1];
  v92[0] = v52;
  v92[1] = v51;
  swift_bridgeObjectRetain(v51);
  v58._countAndFlagsBits = v56;
  v58._object = v57;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v57);
  v60 = v92[0];
  v59 = v92[1];
  v92[0] = 0;
  v92[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(v92[1]);
  v92[0] = 0xD000000000000018;
  v92[1] = 0x800000010013B010;
  sub_10005B590((uint64_t)(v0 + 13), (uint64_t)v93, &qword_1001A5430);
  sub_10005B590((uint64_t)v93, (uint64_t)&v88, &qword_1001A5430);
  sub_100087C6C((uint64_t)v93);
  v61._countAndFlagsBits = String.init<A>(reflecting:)(&v88, v27);
  v62 = v61._object;
  String.append(_:)(v61);
  swift_bridgeObjectRelease(v62);
  v63._countAndFlagsBits = 32;
  v63._object = (void *)0xE100000000000000;
  String.append(_:)(v63);
  v64 = v92[0];
  v65 = (void *)v92[1];
  v92[0] = v60;
  v92[1] = v59;
  swift_bridgeObjectRetain(v59);
  v66._countAndFlagsBits = v64;
  v66._object = v65;
  String.append(_:)(v66);
  swift_bridgeObjectRelease(v59);
  swift_bridgeObjectRelease(v65);
  v68 = v92[0];
  v67 = v92[1];
  v92[0] = 0;
  v92[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease(v92[1]);
  strcpy((char *)v92, "dismissalType=");
  HIBYTE(v92[1]) = -18;
  v88 = v0[15];
  type metadata accessor for PRXDismissalType(0);
  v70._countAndFlagsBits = String.init<A>(reflecting:)(&v88, v69);
  v71 = v70._object;
  String.append(_:)(v70);
  swift_bridgeObjectRelease(v71);
  v72._countAndFlagsBits = 32;
  v72._object = (void *)0xE100000000000000;
  String.append(_:)(v72);
  v73 = v92[0];
  v74 = (void *)v92[1];
  v92[0] = v68;
  v92[1] = v67;
  swift_bridgeObjectRetain(v67);
  v75._countAndFlagsBits = v73;
  v75._object = v74;
  String.append(_:)(v75);
  swift_bridgeObjectRelease(v67);
  swift_bridgeObjectRelease(v74);
  v77 = v92[0];
  v76 = v92[1];
  v92[0] = 0;
  v92[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease(v92[1]);
  v90 = 0xD00000000000001CLL;
  v91 = 0x800000010013B030;
  sub_10005B590((uint64_t)(v0 + 16), (uint64_t)v92, &qword_1001A5878);
  sub_10005B590((uint64_t)v92, (uint64_t)&v88, &qword_1001A5878);
  sub_100087C94(v92);
  v78 = sub_100006A6C(&qword_1001A5878);
  v79._countAndFlagsBits = String.init<A>(reflecting:)(&v88, v78);
  v80 = v79._object;
  String.append(_:)(v79);
  swift_bridgeObjectRelease(v80);
  v81._countAndFlagsBits = 32;
  v81._object = (void *)0xE100000000000000;
  String.append(_:)(v81);
  v82 = v90;
  v83 = (void *)v91;
  v88 = v77;
  v89 = v76;
  swift_bridgeObjectRetain(v76);
  v84._countAndFlagsBits = v82;
  v84._object = v83;
  String.append(_:)(v84);
  swift_bridgeObjectRelease(v76);
  swift_bridgeObjectRelease(v83);
  v85 = v89;
  swift_bridgeObjectRetain(v89);
  v86._countAndFlagsBits = 62;
  v86._object = (void *)0xE100000000000000;
  String.append(_:)(v86);
  swift_bridgeObjectRelease(v85);
  return v88;
}

uint64_t sub_100087BD0()
{
  return sub_100087430();
}

void sub_100087C28(uint64_t a1)
{
  sub_100087CCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

id *sub_100087C44(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_100087C6C(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t *sub_100087C94(uint64_t *a1)
{
  sub_10001440C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

void sub_100087CCC(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_100087D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char v10;

  if (a6)
    return 0;
  sub_100087ECC();
  sub_10007D610(v8, v9, 0);
  sub_10007D610(v7, v6, 0);
  v10 = static NSObject.== infix(_:_:)(v8, v7);
  sub_10007D5D0(v7, v6, 0);
  sub_10007D5D0(v8, v9, 0);
  return v10 & 1;
}

unint64_t sub_100087ECC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1001A7260;
  if (!qword_1001A7260)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001A7260);
  }
  return result;
}

ValueMetadata *type metadata accessor for D2DSetupModel.TestMode()
{
  return &type metadata for D2DSetupModel.TestMode;
}

uint64_t _s18SharingViewService13D2DSetupModelV22DependentSetupProgressOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100087F6C + 4 * byte_100133F7A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100087FA0 + 4 * byte_100133F75[v4]))();
}

uint64_t sub_100087FA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100087FA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100087FB0);
  return result;
}

uint64_t sub_100087FBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100087FC4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100087FC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100087FD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for D2DSetupModel.DependentSetupProgress()
{
  return &type metadata for D2DSetupModel.DependentSetupProgress;
}

void destroy for D2DSetupModel.SetupProgress(uint64_t a1)
{
  sub_10007D5D0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s18SharingViewService13D2DSetupModelV13SetupProgressOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10007D610(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for D2DSetupModel.SetupProgress(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10007D610(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_10007D5D0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for D2DSetupModel.SetupProgress(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_10007D5D0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for D2DSetupModel.SetupProgress(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for D2DSetupModel.SetupProgress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_10008816C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_100088184(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for D2DSetupModel.SetupProgress()
{
  return &type metadata for D2DSetupModel.SetupProgress;
}

unint64_t sub_1000881B0()
{
  unint64_t result;

  result = qword_1001A6708;
  if (!qword_1001A6708)
  {
    result = swift_getWitnessTable(&unk_1001341A0, &type metadata for D2DSetupModel.DependentSetupProgress);
    atomic_store(result, (unint64_t *)&qword_1001A6708);
  }
  return result;
}

unint64_t sub_1000881F8()
{
  unint64_t result;

  result = qword_1001A6710;
  if (!qword_1001A6710)
  {
    result = swift_getWitnessTable(&unk_100134240, &type metadata for D2DSetupModel.TestMode);
    atomic_store(result, (unint64_t *)&qword_1001A6710);
  }
  return result;
}

unint64_t sub_10008823C(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  unint64_t v5;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 >= 3)
    return 3;
  else
    return v5;
}

uint64_t sub_100088280(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A6720);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A6720);
  if (qword_1001A2EE8 != -1)
    swift_once(&qword_1001A2EE8, sub_100018C94);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD468);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_100088310()
{
  qword_1001A6740 = 0;
  return swift_unknownObjectWeakInit(&unk_1001A6738, 0);
}

void sub_100088324()
{
  sub_100088404("D2D Setup showing Start card", (uint64_t (*)(_QWORD))type metadata accessor for D2DSetupStartViewController, (void (*)(id, uint64_t))sub_10009F5FC);
}

void sub_100088340()
{
  sub_100088404("D2D Setup showing Manual Auth card", (uint64_t (*)(_QWORD))type metadata accessor for D2DSetupManualAuthViewController, (void (*)(id, uint64_t))sub_10009F778);
}

void sub_10008835C()
{
  sub_100088404("D2D Setup showing WiFi card", (uint64_t (*)(_QWORD))type metadata accessor for D2DSetupWiFiViewController, (void (*)(id, uint64_t))sub_10009F5FC);
}

void sub_100088378()
{
  sub_100088404("D2D Setup showing Finish card", (uint64_t (*)(_QWORD))type metadata accessor for D2DSetupFinishViewController, (void (*)(id, uint64_t))sub_10009F5FC);
}

void sub_100088394()
{
  sub_100088404("D2D Setup showing OneTimeCode card", (uint64_t (*)(_QWORD))type metadata accessor for D2DSetupFinishViewController, (void (*)(id, uint64_t))sub_10009F5FC);
}

void sub_1000883B0()
{
  sub_100088404("D2D Setup showing Backup Sync card", (uint64_t (*)(_QWORD))type metadata accessor for D2DSetupBackupSyncViewController, (void (*)(id, uint64_t))sub_10009F5FC);
}

void sub_1000883CC()
{
  sub_100088404("D2D Setup showing Done Failure card", (uint64_t (*)(_QWORD))type metadata accessor for D2DSetupDoneFailureViewController, (void (*)(id, uint64_t))sub_10009F5FC);
}

void sub_1000883E8()
{
  sub_100088404("D2D Setup showing Done Success card", (uint64_t (*)(_QWORD))type metadata accessor for D2DSetupDoneSuccessViewController, (void (*)(id, uint64_t))sub_10009F5FC);
}

void sub_100088404(const char *a1, uint64_t (*a2)(_QWORD), void (*a3)(id, uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;

  v7 = v3;
  if (qword_1001A3048 != -1)
    swift_once(&qword_1001A3048, sub_100088280);
  v8 = type metadata accessor for Logger(0, a2);
  v9 = sub_10000E8E8(v8, (uint64_t)qword_1001A6720);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v12, a1, v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = a2(0);
  v15 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");
  a3(v15, v7);

}

id sub_100088520(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __n128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id result;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    if (qword_1001A3048 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1001A3048, sub_100088280);
LABEL_3:
  v11 = type metadata accessor for Logger(0, v10);
  sub_10000E8E8(v11, (uint64_t)qword_1001A6720);
  v12 = a1;
  v13 = Logger.logObject.getter(v12);
  v15 = static os_log_type_t.default.getter(v13, v14);
  if (os_log_type_enabled(v13, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v24 = (uint64_t)v12;
    v25 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = sub_100013194(0, (unint64_t *)&qword_1001A3A10, UIViewController_ptr);
    v19 = v12;
    v20 = String.init<A>(reflecting:)(&v24, v18);
    v22 = v21;
    v24 = sub_10001EFA4(v20, v21, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v16 + 4, v16 + 12);

    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v13, v15, "D2D Setup showing %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

  }
  result = *(id *)(v2 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_navigationController);
  if (result)
    return objc_msgSend(result, "pushViewController:animated:", v12, 1);
  return result;
}

void sub_1000887A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::String v18;
  void *object;
  Swift::String v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  uint64_t v45;
  os_log_type_t v46;
  uint8_t *v47;
  _BOOL8 v48;
  uint64_t v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD v57[4];

  if (qword_1001A3048 != -1)
LABEL_59:
    swift_once(&qword_1001A3048, sub_100088280);
  v4 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v4, (uint64_t)qword_1001A6720);
  swift_bridgeObjectRetain_n(a1, 2);
  v5 = (id)v2;
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v55 = (void *)v10;
    *(_DWORD *)v9 = 136315394;
    if (a1)
    {
      v11 = sub_100013194(0, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
      v12 = sub_10005B9EC();
      v13 = swift_bridgeObjectRetain(a1);
      v14 = Set.description.getter(v13, v11, v12);
      v16 = v15;
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v56 = 0;
      v57[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v57[0]);
      v56 = 0x6C616E6F6974704FLL;
      v57[0] = 0xE90000000000003CLL;
      v17 = sub_100006A6C(&qword_1001A5620);
      v18._countAndFlagsBits = _typeName(_:qualified:)(v17, 0);
      object = v18._object;
      String.append(_:)(v18);
      swift_bridgeObjectRelease(object);
      v20._countAndFlagsBits = 0x656E6F6E2E3ELL;
      v20._object = (void *)0xE600000000000000;
      String.append(_:)(v20);
      v14 = v56;
      v16 = v57[0];
    }
    v56 = sub_10001EFA4(v14, v16, (uint64_t *)&v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v16);
    *(_WORD *)(v9 + 12) = 2080;
    if (*((_BYTE *)&v5->isa + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_isBlockingHardwareButtons))
      v21 = 7562617;
    else
      v21 = 28526;
    if (*((_BYTE *)&v5->isa + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_isBlockingHardwareButtons))
      v22 = 0xE300000000000000;
    else
      v22 = 0xE200000000000000;
    v56 = sub_10001EFA4(v21, v22, (uint64_t *)&v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v9 + 14, v9 + 22);

    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "Button actions: %s, blocked %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  if (a1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 >= 0)
        v23 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v23 = a1;
      swift_bridgeObjectRetain(a1);
      v24 = __CocoaSet.makeIterator()(v23);
      v25 = sub_100013194(0, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
      v26 = sub_10005B9EC();
      v27 = Set.Iterator.init(_cocoa:)(&v56, v24, v25, v26);
      a1 = v56;
      v53 = v57[0];
      v2 = v57[1];
      v28 = v57[2];
      v29 = v57[3];
    }
    else
    {
      v30 = -1 << *(_BYTE *)(a1 + 32);
      v53 = a1 + 56;
      v2 = ~v30;
      v31 = -v30;
      if (v31 < 64)
        v32 = ~(-1 << v31);
      else
        v32 = -1;
      v29 = v32 & *(_QWORD *)(a1 + 56);
      v27 = (_QWORD *)swift_bridgeObjectRetain(a1);
      v28 = 0;
    }
    v52 = v2;
    v33 = (unint64_t)(v2 + 64) >> 6;
    while (1)
    {
      v34 = v28;
      if (a1 < 0)
      {
        v37 = __CocoaSet.Iterator.next()(v27);
        if (!v37)
          goto LABEL_57;
        v2 = v37;
        v54 = v37;
        v38 = sub_100013194(0, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
        swift_unknownObjectRetain(v2);
        swift_dynamicCast(&v55, &v54, (char *)&type metadata for Swift.AnyObject + 8, v38, 7);
        v39 = v55;
        swift_unknownObjectRelease(v2);
        if (!v39)
          goto LABEL_57;
      }
      else
      {
        if (v29)
        {
          v35 = __clz(__rbit64(v29));
          v29 &= v29 - 1;
          v36 = v35 | (v28 << 6);
        }
        else
        {
          v40 = v28 + 1;
          if (__OFADD__(v28, 1))
          {
            __break(1u);
            goto LABEL_59;
          }
          if (v40 >= v33)
            goto LABEL_57;
          v41 = *(_QWORD *)(v53 + 8 * v40);
          ++v28;
          if (!v41)
          {
            v28 = v34 + 2;
            if (v34 + 2 >= v33)
              goto LABEL_57;
            v41 = *(_QWORD *)(v53 + 8 * v28);
            if (!v41)
            {
              v28 = v34 + 3;
              if (v34 + 3 >= v33)
                goto LABEL_57;
              v41 = *(_QWORD *)(v53 + 8 * v28);
              if (!v41)
              {
                v28 = v34 + 4;
                if (v34 + 4 >= v33)
                  goto LABEL_57;
                v41 = *(_QWORD *)(v53 + 8 * v28);
                if (!v41)
                {
                  v42 = v34 + 5;
                  while (v33 != v42)
                  {
                    v41 = *(_QWORD *)(v53 + 8 * v42++);
                    if (v41)
                    {
                      v28 = v42 - 1;
                      goto LABEL_46;
                    }
                  }
LABEL_57:
                  sub_10002413C(a1);
                  return;
                }
              }
            }
          }
LABEL_46:
          v29 = (v41 - 1) & v41;
          v36 = __clz(__rbit64(v41)) + (v28 << 6);
        }
        v39 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v36);
        if (!v39)
          goto LABEL_57;
      }
      if ((*((_BYTE *)&v5->isa + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_isBlockingHardwareButtons) & 1) == 0)
      {
        v43 = objc_msgSend(v39, "events");
        if ((v43 & 0x10) != 0)
        {
          v44 = Logger.logObject.getter(v43);
          v46 = static os_log_type_t.default.getter(v44, v45);
          if (os_log_type_enabled(v44, v46))
          {
            v47 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v47 = 0;
            _os_log_impl((void *)&_mh_execute_header, v44, v46, "Home button", v47, 2u);
            swift_slowDealloc(v47, -1, -1);
          }

          if ((*((_BYTE *)&v5->isa + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_homePressed) & 1) != 0
            || !(v48 = sub_1000612BC()))
          {
            *((_BYTE *)&v5->isa + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissedForExternalContent) = 0;
            v2 = (uint64_t)v5;
            sub_10008911C(4, 1);
          }
          else
          {
            v2 = Logger.logObject.getter(v48);
            v50 = static os_log_type_t.default.getter(v2, v49);
            if (os_log_type_enabled((os_log_t)v2, v50))
            {
              v51 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v51 = 0;
              _os_log_impl((void *)&_mh_execute_header, (os_log_t)v2, v50, "Ignoring first home button press to unlock", v51, 2u);
              swift_slowDealloc(v51, -1, -1);
            }

            *((_BYTE *)&v5->isa + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_homePressed) = 1;
          }
        }
      }
      objc_msgSend(v39, "sendResponseWithUnHandledEvents:", 0, v52);

    }
  }
  __break(1u);
}

id sub_100088E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t started;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  id v24;
  uint64_t v25;

  v1 = v0;
  if (qword_1001A3050 != -1)
    swift_once(&qword_1001A3050, sub_100088310);
  Strong = swift_unknownObjectWeakLoadStrong(&unk_1001A6738);
  if (Strong)
  {
    v4 = (void *)Strong;
    if (qword_1001A3048 != -1)
      swift_once(&qword_1001A3048, sub_100088280);
    v5 = type metadata accessor for Logger(0, v3);
    sub_10000E8E8(v5, (uint64_t)qword_1001A6720);
    v6 = v4;
    v7 = Logger.logObject.getter(v6);
    v9 = static os_log_type_t.default.getter(v7, v8);
    if (os_log_type_enabled(v7, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v10 = 138412290;
      v24 = v6;
      v6 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v10 + 4, v10 + 12);
      *v11 = v4;

      _os_log_impl((void *)&_mh_execute_header, v7, v9, "D2D Setup using cached card for initial card: %@", v10, 0xCu);
      v12 = sub_100006A6C(&qword_1001A5420);
      swift_arrayDestroy(v11, 1, v12);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

      return v6;
    }

LABEL_15:
    return v6;
  }
  if (qword_1001A3048 != -1)
    swift_once(&qword_1001A3048, sub_100088280);
  v13 = type metadata accessor for Logger(0, v3);
  v14 = sub_10000E8E8(v13, (uint64_t)qword_1001A6720);
  v15 = Logger.logObject.getter(v14);
  v17 = static os_log_type_t.default.getter(v15, v16);
  if (os_log_type_enabled(v15, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v17, "D2D Setup creating Start card", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  started = type metadata accessor for D2DSetupStartViewController();
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(started)), "init");
  v20 = v1 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_prepareForPresentation;
  v21 = *(void (**)(void))(v1 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_prepareForPresentation);
  if (v21)
  {
    v22 = *(_QWORD *)(v20 + 8);
    sub_100022024((uint64_t)v21, v22);
    v6 = v6;
    v21();
    sub_100012F60((uint64_t)v21, v22);
    goto LABEL_15;
  }
  return v6;
}

void sub_10008911C(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  void *Strong;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissed) & 1) == 0)
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissed) = 1;
    if (qword_1001A3048 != -1)
      swift_once(&qword_1001A3048, sub_100088280);
    v33 = a1;
    v11 = type metadata accessor for Logger(0, v8);
    v12 = sub_10000E8E8(v11, (uint64_t)qword_1001A6720);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc(18, -1);
      v16 = swift_slowAlloc(32, -1);
      v35 = v16;
      *(_DWORD *)v15 = 136315394;
      v32 = a2;
      LODWORD(v34) = v33;
      type metadata accessor for SVSUserActionType(0);
      v18 = String.init<A>(reflecting:)(&v34, v17);
      v20 = v19;
      v34 = sub_10001EFA4(v18, v19, &v35);
      LOBYTE(a2) = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v15 + 4, v15 + 12);
      swift_bridgeObjectRelease(v20);
      *(_WORD *)(v15 + 12) = 1024;
      LODWORD(v34) = a2 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 4, v15 + 14, v15 + 18);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "D2D Setup dismiss with type %s, animated: %{BOOL}d", (uint8_t *)v15, 0x12u);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }

    sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
    *v10 = static OS_dispatch_queue.main.getter();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6);
    v21 = _dispatchPreconditionTest(_:)(v10);
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
    if ((v21 & 1) == 0)
    {
      __break(1u);
      goto LABEL_24;
    }
    v22 = v33;
    if (v33 == 24)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_hostViewController);
      if (Strong)
      {
        v24 = Strong;
        objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", a2 & 1, 0);

        goto LABEL_13;
      }
      v26 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_navigationController);
      if (!v26 || (v27 = objc_msgSend(v26, "presentingViewController")) == 0)
      {
LABEL_13:
        if (qword_1001A3050 == -1)
        {
LABEL_14:
          qword_1001A6740 = 0;
          swift_unknownObjectWeakAssign(&unk_1001A6738, 0);
          return;
        }
LABEL_24:
        swift_once(&qword_1001A3050, sub_100088310);
        goto LABEL_14;
      }
      v28 = v27;
      while (1)
      {
        v29 = objc_msgSend(v28, "presentingViewController");

        if (!v29)
          break;
        v30 = objc_msgSend(v28, "presentingViewController");

        v28 = v30;
        if (!v30)
          goto LABEL_12;
      }
      objc_msgSend(v28, "dismissViewControllerAnimated:completion:", a2 & 1, 0);

    }
    else
    {
      v25 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_navigationController);
      if (v25)
        objc_msgSend(v25, "dismissViewControllerAnimated:completion:", a2 & 1, 0);
    }
LABEL_12:
    if (v22 == 25)
      return;
    goto LABEL_13;
  }
}

id sub_1000894CC()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  objc_super v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_navigationController] = 0;
  v0[OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissedForExternalContent] = 0;
  v0[OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissed] = 0;
  v1 = &v0[OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_didDismiss];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_prepareForPresentation];
  *v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_isBlockingHardwareButtons] = 0;
  v0[OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_homePressed] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_hostViewController], 0);
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for D2DSetupRouter();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_10008958C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for D2DSetupRouter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for D2DSetupRouter()
{
  return objc_opt_self(_TtC18SharingViewService14D2DSetupRouter);
}

void sub_10008963C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  void (*v10)(BOOL, __n128);
  uint64_t v11;
  char v12;
  __n128 v13;

  v3 = v2;
  if (qword_1001A3048 != -1)
    swift_once(&qword_1001A3048, sub_100088280);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A6720);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "D2D Setup was dismissed", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissed) & 1) == 0)
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissedForExternalContent) = 0;
    sub_10008911C(0, 1);
  }
  v10 = *(void (**)(BOOL, __n128))(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_didDismiss);
  if (v10)
  {
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_didDismiss + 8);
    v12 = *(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissedForExternalContent);
    v13 = swift_retain(v11);
    v10((v12 & 1) == 0, v13);
    sub_100012F60((uint64_t)v10, v11);
  }
}

uint64_t sub_1000897BC(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v7;
  unint64_t v8;
  const char *v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t countAndFlagsBits;
  char v17;
  char v18;
  NSString v19;
  char v20;
  char v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  char v26;
  char v27;
  unint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  unint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  unint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  char v62;
  char v63;
  unint64_t v64;
  char v65;
  char v66;
  NSString v67;
  id v68;
  uint64_t v69;
  void *v70;
  void *v71;
  id v72;
  Swift::String v73;
  Swift::String_optional v74;
  Swift::String v75;
  unint64_t v76;
  Swift::String v77;

  v1 = sub_10008A9C4(a1);
  v3 = (NSString)v1;
  v4 = v2;
  v5 = 0x800000010013B150;
  if (v1 != 0xD00000000000001BLL || v2 != 0x800000010013B150)
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 0xD00000000000001BLL, 0x800000010013B150, 0);
    swift_bridgeObjectRelease(v4);
    if ((v6 & 1) != 0)
      goto LABEL_5;
    v5 = 0x800000010013B170;
    if (v3 != (NSString)0xD00000000000001ELL || v4 != 0x800000010013B170)
    {
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000001ELL, 0x800000010013B170, 0);
      swift_bridgeObjectRelease(v4);
      if ((v17 & 1) != 0)
        goto LABEL_5;
      v5 = 0x800000010013B190;
      if (v3 != (NSString)0xD000000000000023 || v4 != 0x800000010013B190)
      {
        v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000023, 0x800000010013B190, 0);
        swift_bridgeObjectRelease(v4);
        if ((v18 & 1) != 0)
          goto LABEL_5;
        v19 = (NSString)0xD000000000000013;
        v5 = 0x800000010013B1C0;
        if (v3 != (NSString)0xD000000000000013 || v4 != 0x800000010013B1C0)
        {
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000013, 0x800000010013B1C0, 0);
          swift_bridgeObjectRelease(v4);
          if ((v20 & 1) != 0)
            goto LABEL_5;
          v5 = 0x800000010013B1E0;
          if (v3 != (NSString)0xD000000000000016 || v4 != 0x800000010013B1E0)
          {
            v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000016, 0x800000010013B1E0, 0);
            swift_bridgeObjectRelease(v4);
            if ((v21 & 1) != 0)
              goto LABEL_5;
            v22 = 0xEE00454C5449545FLL;
            if (v3 == (NSString)0x4C4C41435F444E45 && v4 == 0xEE00454C5449545FLL)
              goto LABEL_23;
            v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x4C4C41435F444E45, 0xEE00454C5449545FLL, 0);
            swift_bridgeObjectRelease(v4);
            if ((v23 & 1) != 0)
              goto LABEL_25;
            v24 = 0xD000000000000011;
            v22 = 0x800000010013B200;
            if (v3 == (NSString)0xD000000000000011 && v4 == 0x800000010013B200)
              goto LABEL_23;
            v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000011, 0x800000010013B200, 0);
            swift_bridgeObjectRelease(v4);
            if ((v25 & 1) != 0)
              goto LABEL_25;
            v22 = 0x800000010013B220;
            if (v3 == (NSString)0xD000000000000020 && v4 == 0x800000010013B220)
              goto LABEL_23;
            v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000020, 0x800000010013B220, 0);
            swift_bridgeObjectRelease(v4);
            if ((v26 & 1) != 0)
              goto LABEL_25;
            v22 = 0x800000010013B250;
            if (v3 == (NSString)0xD000000000000021 && v4 == 0x800000010013B250)
            {
LABEL_23:
              swift_bridgeObjectRelease(v22);
LABEL_25:
              v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
              v76 = 0xE000000000000000;
              v10 = 0x800000010013B8B0;
              v11 = v3;
              v12 = v4;
              v8 = 0xD000000000000013;
              goto LABEL_7;
            }
            v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000021, 0x800000010013B250, 0);
            swift_bridgeObjectRelease(v4);
            if ((v27 & 1) != 0)
              goto LABEL_25;
            v28 = 0xEF454C5449545F4CLL;
            if (v3 == (NSString)0x4C41435F4554554DLL && v4 == 0xEF454C5449545F4CLL)
              goto LABEL_37;
            v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x4C41435F4554554DLL, 0xEF454C5449545F4CLL, 0);
            swift_bridgeObjectRelease(v4);
            if ((v29 & 1) != 0)
              goto LABEL_39;
            v28 = 0x800000010013B280;
            if (v3 == (NSString)0xD000000000000012 && v4 == 0x800000010013B280)
              goto LABEL_37;
            v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000012, 0x800000010013B280, 0);
            swift_bridgeObjectRelease(v4);
            if ((v30 & 1) != 0)
              goto LABEL_39;
            v28 = 0x800000010013B2A0;
            if (v3 == (NSString)0xD00000000000001BLL && v4 == 0x800000010013B2A0)
              goto LABEL_37;
            v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000001BLL, 0x800000010013B2A0, 0);
            swift_bridgeObjectRelease(v4);
            if ((v31 & 1) != 0)
              goto LABEL_39;
            v28 = 0x800000010013B2C0;
            if (v3 == (NSString)0xD00000000000001BLL && v4 == 0x800000010013B2C0)
              goto LABEL_37;
            v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000001BLL, 0x800000010013B2C0, 0);
            swift_bridgeObjectRelease(v4);
            if ((v32 & 1) != 0)
              goto LABEL_39;
            v28 = 0x800000010013B2E0;
            if (v3 == (NSString)0xD00000000000001BLL && v4 == 0x800000010013B2E0)
              goto LABEL_37;
            v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000001BLL, 0x800000010013B2E0, 0);
            swift_bridgeObjectRelease(v4);
            if ((v33 & 1) != 0)
              goto LABEL_39;
            v28 = 0x800000010013B300;
            if (v3 == (NSString)0xD00000000000001BLL && v4 == 0x800000010013B300)
              goto LABEL_37;
            v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000001BLL, 0x800000010013B300, 0);
            swift_bridgeObjectRelease(v4);
            if ((v34 & 1) != 0)
              goto LABEL_39;
            v28 = 0x800000010013B320;
            if (v3 == (NSString)0xD000000000000012 && v4 == 0x800000010013B320)
              goto LABEL_37;
            v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000012, 0x800000010013B320, 0);
            swift_bridgeObjectRelease(v4);
            if ((v35 & 1) != 0)
              goto LABEL_39;
            v28 = 0xEE00454E4F445F4CLL;
            if (v3 == (NSString)0x4C41435F4554554DLL && v4 == 0xEE00454E4F445F4CLL)
            {
LABEL_37:
              swift_bridgeObjectRelease(v28);
LABEL_39:
              v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
              v8 = 0xD000000000000014;
              v76 = 0xE000000000000000;
              v9 = "Localizable-MuteCall";
              goto LABEL_6;
            }
            v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x4C41435F4554554DLL, 0xEE00454E4F445F4CLL, 0);
            swift_bridgeObjectRelease(v4);
            if ((v36 & 1) != 0)
              goto LABEL_39;
            if (v3 == (NSString)0xD00000000000001BLL && v4 == 0x800000010013B340)
            {
              swift_bridgeObjectRelease(0x800000010013B340);
              goto LABEL_65;
            }
            v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000001BLL, 0x800000010013B340, 0);
            swift_bridgeObjectRelease(v4);
            if ((v37 & 1) != 0)
            {
LABEL_65:
              v19 = String._bridgeToObjectiveC()();
              v7 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleWithIdentifier:", v19);

              if (v7)
              {
                v8 = 0xD000000000000014;
                v76 = 0xE000000000000000;
                v9 = "Localizable-PID_8229";
                goto LABEL_6;
              }
              goto LABEL_134;
            }
            if (v3 == (NSString)0xD00000000000001BLL && v4 == 0x800000010013B360)
            {
              swift_bridgeObjectRelease(0x800000010013B360);
            }
            else
            {
              v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000001BLL, 0x800000010013B360, 0);
              swift_bridgeObjectRelease(v4);
              if ((v38 & 1) == 0)
              {
                if (v3 == (NSString)0xD00000000000001BLL && v4 == 0x800000010013B380)
                {
                  swift_bridgeObjectRelease(0x800000010013B380);
                }
                else
                {
                  v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000001BLL, 0x800000010013B380, 0);
                  swift_bridgeObjectRelease(v4);
                  if ((v39 & 1) == 0)
                  {
                    v24 = 0xD000000000000017;
                    v40 = 0x800000010013B3A0;
                    if (v3 == (NSString)0xD000000000000017 && v4 == 0x800000010013B3A0)
                      goto LABEL_132;
                    v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000017, 0x800000010013B3A0, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v41 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B3C0;
                    if (v3 == (NSString)0xD00000000000001ALL && v4 == 0x800000010013B3C0)
                      goto LABEL_132;
                    v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000001ALL, 0x800000010013B3C0, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v42 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B3E0;
                    if (v3 == (NSString)0xD000000000000019 && v4 == 0x800000010013B3E0)
                      goto LABEL_132;
                    v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000019, 0x800000010013B3E0, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v43 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B400;
                    if (v3 == (NSString)0xD000000000000020 && v4 == 0x800000010013B400)
                      goto LABEL_132;
                    v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000020, 0x800000010013B400, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v44 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B430;
                    if (v3 == (NSString)0xD000000000000023 && v4 == 0x800000010013B430)
                      goto LABEL_132;
                    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000023, 0x800000010013B430, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v45 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B460;
                    if (v3 == (NSString)0xD000000000000023 && v4 == 0x800000010013B460)
                      goto LABEL_132;
                    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000023, 0x800000010013B460, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v46 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B490;
                    if (v3 == (NSString)0xD000000000000026 && v4 == 0x800000010013B490)
                      goto LABEL_132;
                    v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000026, 0x800000010013B490, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v47 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B4C0;
                    if (v3 == (NSString)0xD00000000000002ELL && v4 == 0x800000010013B4C0)
                      goto LABEL_132;
                    v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000002ELL, 0x800000010013B4C0, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v48 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B4F0;
                    if (v3 == (NSString)0xD000000000000031 && v4 == 0x800000010013B4F0)
                      goto LABEL_132;
                    v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000031, 0x800000010013B4F0, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v49 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B530;
                    if (v3 == (NSString)0xD00000000000002ALL && v4 == 0x800000010013B530)
                      goto LABEL_132;
                    v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000002ALL, 0x800000010013B530, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v50 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B560;
                    if (v3 == (NSString)0xD00000000000002DLL && v4 == 0x800000010013B560)
                      goto LABEL_132;
                    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000002DLL, 0x800000010013B560, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v51 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B590;
                    if (v3 == (NSString)0xD00000000000002CLL && v4 == 0x800000010013B590)
                      goto LABEL_132;
                    v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD00000000000002CLL, 0x800000010013B590, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v52 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B5C0;
                    if (v3 == (NSString)0xD000000000000030 && v4 == 0x800000010013B5C0)
                      goto LABEL_132;
                    v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000030, 0x800000010013B5C0, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v53 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B600;
                    if (v3 == (NSString)0xD000000000000033 && v4 == 0x800000010013B600)
                      goto LABEL_132;
                    v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000033, 0x800000010013B600, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v54 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B640;
                    if (v3 == (NSString)0xD000000000000032 && v4 == 0x800000010013B640)
                      goto LABEL_132;
                    v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000032, 0x800000010013B640, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v55 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B680;
                    if (v3 == (NSString)0xD000000000000033 && v4 == 0x800000010013B680)
                      goto LABEL_132;
                    v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000033, 0x800000010013B680, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v56 & 1) != 0)
                      goto LABEL_133;
                    v40 = 0x800000010013B6C0;
                    if (v3 == (NSString)0xD000000000000036 && v4 == 0x800000010013B6C0)
                      goto LABEL_132;
                    v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000036, 0x800000010013B6C0, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v57 & 1) != 0)
                      goto LABEL_133;
                    v58 = 0xD000000000000035;
                    v40 = 0x800000010013B700;
                    if (v3 == (NSString)0xD000000000000035 && v4 == 0x800000010013B700)
                    {
LABEL_132:
                      swift_bridgeObjectRelease(v40);
                      goto LABEL_133;
                    }
LABEL_135:
                    v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v58, v40, 0);
                    swift_bridgeObjectRelease(v4);
                    if ((v59 & 1) == 0)
                    {
                      v60 = 0xEC00000047415452;
                      if (v3 == (NSString)0x49415F4552414853 && v4 == 0xEC00000047415452)
                        goto LABEL_141;
                      v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x49415F4552414853, 0xEC00000047415452, 0);
                      swift_bridgeObjectRelease(v4);
                      if ((v61 & 1) != 0)
                      {
LABEL_143:
                        v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                        v76 = 0xE000000000000000;
                        v10 = 0x800000010013B7A0;
                        v11 = v3;
                        v12 = v4;
                        v8 = v24;
                        goto LABEL_7;
                      }
                      v60 = 0x800000010013B740;
                      if (v3 == (NSString)0xD000000000000015 && v4 == 0x800000010013B740)
                      {
LABEL_141:
                        swift_bridgeObjectRelease(v60);
                        goto LABEL_143;
                      }
                      v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000015, 0x800000010013B740, 0);
                      swift_bridgeObjectRelease(v4);
                      if ((v62 & 1) != 0)
                        goto LABEL_143;
                      if (v3 == v19 && v4 == 0x800000010013B760)
                      {
                        swift_bridgeObjectRelease(0x800000010013B760);
                        return 0;
                      }
                      v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v19, 0x800000010013B760, 0);
                      swift_bridgeObjectRelease(v4);
                      if ((v63 & 1) != 0)
                        return 0;
                      v64 = 0x80000001001391C0;
                      if (v3 == (NSString)0xD000000000000010 && v4 == 0x80000001001391C0)
                        goto LABEL_154;
                      v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0xD000000000000010, 0x80000001001391C0, 0);
                      swift_bridgeObjectRelease(v4);
                      if ((v65 & 1) == 0)
                      {
                        v64 = 0x800000010013B780;
                        if (v3 == v19 && v4 == 0x800000010013B780)
                        {
LABEL_154:
                          swift_bridgeObjectRelease(v64);
                          goto LABEL_156;
                        }
                        v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v19, 0x800000010013B780, 0);
                        swift_bridgeObjectRelease(v4);
                        if ((v66 & 1) == 0)
                        {
                          v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                          v76 = 0xE000000000000000;
                          v11 = v3;
                          v12 = v4;
                          v8 = 0x617A696C61636F4CLL;
                          v10 = 0xEB00000000656C62;
                          goto LABEL_7;
                        }
                      }
LABEL_156:
                      v67 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease(v4);
                      v68 = sub_100116484(v67);

                      v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
                      v71 = v70;

                      v72 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                      v77._object = (void *)0xE000000000000000;
                      v73._countAndFlagsBits = v69;
                      v73._object = v71;
                      v74.value._countAndFlagsBits = 0x617A696C61636F4CLL;
                      v74.value._object = (void *)0xEB00000000656C62;
                      v75._countAndFlagsBits = 0;
                      v75._object = (void *)0xE000000000000000;
                      v77._countAndFlagsBits = 0;
                      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, v74, (NSBundle)v72, v75, v77)._countAndFlagsBits;
                      swift_bridgeObjectRelease(v71);

                      return countAndFlagsBits;
                    }
LABEL_133:
                    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                    v8 = 0xD00000000000001CLL;
                    v76 = 0xE000000000000000;
                    v9 = "Localizable-AdaptiveControls";
                    goto LABEL_6;
                  }
                }
                v19 = String._bridgeToObjectiveC()();
                v7 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleWithIdentifier:", v19);

                if (v7)
                {
                  v8 = 0xD000000000000014;
                  v76 = 0xE000000000000000;
                  v9 = "Localizable-PID_8218";
                  goto LABEL_6;
                }
LABEL_134:
                _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x800000010013B810, "SharingViewService/SVSString.swift", 34, 2, 301, 0);
                __break(1u);
                goto LABEL_135;
              }
            }
            v19 = String._bridgeToObjectiveC()();
            v7 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleWithIdentifier:", v19);

            if (v7)
            {
              v8 = 0xD000000000000014;
              v76 = 0xE000000000000000;
              v9 = "Localizable-PID_8230";
              goto LABEL_6;
            }
            goto LABEL_134;
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease(v5);
LABEL_5:
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v8 = 0xD000000000000017;
  v76 = 0xE000000000000000;
  v9 = "Localizable-Counterfeit";
LABEL_6:
  v10 = (unint64_t)(v9 - 32) | 0x8000000000000000;
  v11 = v3;
  v12 = v4;
LABEL_7:
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v14 = 0;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v11, *(Swift::String_optional *)&v8, (NSBundle)v7, v13, *(Swift::String *)(&v76 - 1))._countAndFlagsBits;
  swift_bridgeObjectRelease(v4);

  return countAndFlagsBits;
}

uint64_t sub_10008A9C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10008A9F8 + 4 * word_1001342C8[a1]))(0x45554E49544E4F43, 0xE800000000000000);
}

uint64_t sub_10008A9F8()
{
  return 0x574F4E5F544F4ELL;
}

uint64_t sub_10008AA10()
{
  return 1162760004;
}

uint64_t sub_10008AA20()
{
  return 1346980691;
}

uint64_t sub_10008AA30()
{
  return 0x4C5F50555F544553;
}

uint64_t sub_10008AA50()
{
  return 0x494147415F595254;
}

uint64_t sub_10008AA70()
{
  return 0x5455425F444C4F48;
}

uint64_t sub_10008AA90()
{
  return 0x5443454E4E4F43;
}

unint64_t sub_10008AAA8()
{
  return 0xD000000000000011;
}

uint64_t sub_10008B778(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A6818);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A6818);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10008B808(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  unsigned int v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t Strong;
  void *v34;
  uint64_t v35;
  unsigned int *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  Class isa;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  char *v87;
  uint64_t ObjectType;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[3];
  char v92[16];
  objc_super v93;
  id v94;

  v2 = v1;
  v4 = type metadata accessor for AirTagPairing2.Assets.ViewIdentifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for AirTagMovieViewController();
  v93.receiver = v1;
  v93.super_class = v8;
  objc_msgSendSuper2(&v93, "viewWillAppear:", a1 & 1);
  if (qword_1001A3058 != -1)
    swift_once(&qword_1001A3058, sub_10008B778);
  v10 = type metadata accessor for Logger(0, v9);
  v11 = sub_10000E8E8(v10, (uint64_t)qword_1001A6818);
  v12 = Logger.logObject.getter(v11);
  v14 = static os_log_type_t.default.getter(v12, v13);
  if (os_log_type_enabled(v12, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v14, "AirTagMovieViewController viewWillAppear", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = objc_msgSend((id)objc_opt_self(AVAudioSession), "sharedInstance");
  v94 = 0;
  v17 = objc_msgSend(v16, "setCategory:withOptions:error:", AVAudioSessionCategoryAmbient, 1, &v94);

  v18 = v94;
  if (v17)
  {
    v19 = v94;
  }
  else
  {
    v20 = v94;
    v21 = _convertNSErrorToError(_:)(v18);

    swift_willThrow(v22);
    swift_errorRetain(v21);
    v23 = swift_errorRetain(v21);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = (void *)swift_slowAlloc(32, -1);
      v87 = v7;
      v28 = v27;
      v94 = v27;
      ObjectType = v5;
      v89 = v4;
      *(_DWORD *)v26 = 136315138;
      swift_getErrorValue(v21, v92, v91);
      v29 = Error.localizedDescription.getter(v91[1], v91[2]);
      v31 = v30;
      v90 = sub_10001EFA4(v29, v30, (uint64_t *)&v94);
      v5 = ObjectType;
      v4 = v89;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v91, v26 + 4, v26 + 12);
      swift_bridgeObjectRelease(v31);
      swift_errorRelease(v21);
      swift_errorRelease(v21);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "setCategory failed: %s", v26, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      v32 = v28;
      v7 = v87;
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      swift_errorRelease(v21);
    }
    else
    {
      swift_errorRelease(v21);
      swift_errorRelease(v21);
      swift_errorRelease(v21);

    }
  }
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18SharingViewService25AirTagMovieViewController_mainController]);
  if (Strong
    && (v34 = (void *)Strong,
        v35 = *(_QWORD *)(Strong + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_assets),
        swift_retain(v35),
        v34,
        v35))
  {
    if (v2[OBJC_IVAR____TtC18SharingViewService25AirTagMovieViewController_shouldSkipEngageMovie])
      v36 = (unsigned int *)&enum case for AirTagPairing2.Assets.ViewIdentifier.loop(_:);
    else
      v36 = (unsigned int *)&enum case for AirTagPairing2.Assets.ViewIdentifier.intro(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *v36, v4);
    v37 = (void *)AirTagPairing2.Assets.view(_:)(v7);
    v39 = v38;
    v89 = v38;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v40 = &v2[OBJC_IVAR____TtC18SharingViewService25AirTagMovieViewController_movie];
    v41 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService25AirTagMovieViewController_movie];
    *v40 = v37;
    v40[1] = v39;
    v42 = v37;

    v43 = objc_msgSend(v2, "contentView");
    v44 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v43, "setBackgroundColor:", v44);

    ObjectType = swift_getObjectType(v42);
    v45 = v42;
    objc_msgSend(v45, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v46 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
    v47 = objc_msgSend(v2, "contentView");
    objc_msgSend(v47, "addSubview:", v45);

    v48 = objc_msgSend(v2, "contentView");
    objc_msgSend(v48, "addLayoutGuide:", v46);

    v49 = objc_msgSend(v2, "contentView");
    v50 = objc_msgSend(v49, "mainContentGuide");

    v87 = (char *)objc_opt_self(NSLayoutConstraint);
    v51 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
    v52 = swift_allocObject(v51, 112, 7);
    *(_OWORD *)(v52 + 16) = xmmword_100133650;
    v53 = objc_msgSend(v45, "heightAnchor");
    v54 = objc_msgSend(v53, "constraintEqualToConstant:", 362.0);

    *(_QWORD *)(v52 + 32) = v54;
    v55 = objc_msgSend(v45, "widthAnchor");
    v56 = objc_msgSend(v55, "constraintEqualToConstant:", 350.0);

    *(_QWORD *)(v52 + 40) = v56;
    v57 = objc_msgSend(v45, "centerYAnchor");
    v58 = objc_msgSend(v46, "centerYAnchor");
    v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

    *(_QWORD *)(v52 + 48) = v59;
    v60 = objc_msgSend(v45, "centerXAnchor");

    v61 = objc_msgSend(v46, "centerXAnchor");
    v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

    *(_QWORD *)(v52 + 56) = v62;
    v63 = objc_msgSend(v46, "topAnchor");
    v64 = objc_msgSend(v50, "topAnchor");
    v65 = objc_msgSend(v63, "constraintGreaterThanOrEqualToAnchor:", v64);

    *(_QWORD *)(v52 + 64) = v65;
    v66 = objc_msgSend(v46, "bottomAnchor");
    v67 = objc_msgSend(v50, "bottomAnchor");
    v68 = objc_msgSend(v66, "constraintLessThanOrEqualToAnchor:", v67);

    *(_QWORD *)(v52 + 72) = v68;
    v69 = objc_msgSend(v46, "heightAnchor");
    v70 = objc_msgSend(v69, "constraintEqualToConstant:", 145.0);

    *(_QWORD *)(v52 + 80) = v70;
    v71 = objc_msgSend(v46, "centerYAnchor");
    v72 = objc_msgSend(v50, "centerYAnchor");
    v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

    *(_QWORD *)(v52 + 88) = v73;
    v74 = objc_msgSend(v46, "leadingAnchor");
    v75 = objc_msgSend(v50, "leadingAnchor");
    v76 = objc_msgSend(v74, "constraintEqualToAnchor:", v75);

    *(_QWORD *)(v52 + 96) = v76;
    v77 = objc_msgSend(v46, "trailingAnchor");
    v78 = objc_msgSend(v50, "trailingAnchor");
    v79 = objc_msgSend(v77, "constraintEqualToAnchor:", v78);

    *(_QWORD *)(v52 + 104) = v79;
    v94 = (id)v52;
    specialized Array._endMutation()(v80);
    v81 = v94;
    sub_10000E868();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v81);
    objc_msgSend(v87, "activateConstraints:", isa);

    v94 = v45;
    dispatch thunk of VideoPlaybackControllable.play()(ObjectType, v89);

    swift_release(v35);
  }
  else
  {
    v83 = Logger.logObject.getter(Strong);
    v84 = static os_log_type_t.error.getter(v83);
    if (os_log_type_enabled(v83, v84))
    {
      v85 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v85 = 0;
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "AirTag assets are nil, exiting here", v85, 2u);
      swift_slowDealloc(v85, -1, -1);
    }

  }
}

id sub_10008C280()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AirTagMovieViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AirTagMovieViewController()
{
  return objc_opt_self(_TtC18SharingViewService25AirTagMovieViewController);
}

uint64_t sub_10008C308(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A6870);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A6870);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_10008C398()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  id v9;
  void *v10;
  NSString v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  Class isa;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSString v61;
  void *v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  _QWORD aBlock[5];
  uint64_t v68;
  objc_super v69;

  v1 = v0;
  v69.receiver = v0;
  v69.super_class = (Class)type metadata accessor for AirTagPairLockedViewController();
  objc_msgSendSuper2(&v69, "viewDidLoad");
  sub_1000897BC(0x60u);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  objc_msgSend(v1, "setTitle:", v4);

  sub_1000897BC(0x77u);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v1, "setBottomTrayTitle:", v7);

  objc_msgSend(v1, "setDismissalType:", 1);
  v8 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v10 = (void *)objc_opt_self(UIImage);
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "imageNamed:", v11);

  objc_msgSend(v8, "setImage:", v12);
  objc_msgSend(v8, "setContentMode:", 1);
  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "systemGrayColor");
  objc_msgSend(v8, "setTintColor:", v14);

  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v15 = objc_msgSend(v1, "contentView");
  objc_msgSend(v15, "addSubview:", v8);

  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v10, "imageNamed:", v16);

  objc_msgSend(v9, "setImage:", v17);
  objc_msgSend(v9, "setContentMode:", 1);
  v18 = objc_msgSend(v13, "systemBlueColor");
  objc_msgSend(v9, "setTintColor:", v18);

  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v19 = objc_msgSend(v1, "contentView");
  objc_msgSend(v19, "addSubview:", v9);

  v20 = objc_msgSend(v1, "contentView");
  v21 = objc_msgSend(v20, "mainContentGuide");

  v66 = (id)objc_opt_self(NSLayoutConstraint);
  v22 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v23 = swift_allocObject(v22, 128, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1001321C0;
  v24 = objc_msgSend(v8, "centerXAnchor");
  v25 = objc_msgSend(v21, "centerXAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v23 + 32) = v26;
  v27 = objc_msgSend(v8, "centerYAnchor");
  v28 = objc_msgSend(v21, "centerYAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v23 + 40) = v29;
  v30 = objc_msgSend(v8, "widthAnchor");
  v31 = objc_msgSend(v30, "constraintEqualToConstant:", 152.0);

  *(_QWORD *)(v23 + 48) = v31;
  v32 = objc_msgSend(v8, "heightAnchor");
  v33 = objc_msgSend(v32, "constraintEqualToConstant:", 152.0);

  *(_QWORD *)(v23 + 56) = v33;
  v34 = objc_msgSend(v8, "topAnchor");
  v35 = objc_msgSend(v21, "topAnchor");
  v36 = objc_msgSend(v34, "constraintGreaterThanOrEqualToAnchor:", v35);

  *(_QWORD *)(v23 + 64) = v36;
  v37 = objc_msgSend(v8, "bottomAnchor");
  v38 = objc_msgSend(v21, "bottomAnchor");
  v39 = objc_msgSend(v37, "constraintLessThanOrEqualToAnchor:", v38);

  *(_QWORD *)(v23 + 72) = v39;
  v40 = objc_msgSend(v9, "centerXAnchor");
  v41 = objc_msgSend(v21, "centerXAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v23 + 80) = v42;
  v43 = objc_msgSend(v9, "centerYAnchor");
  v44 = objc_msgSend(v21, "centerYAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  *(_QWORD *)(v23 + 88) = v45;
  v46 = objc_msgSend(v9, "widthAnchor");
  v47 = objc_msgSend(v46, "constraintEqualToConstant:", 152.0);

  *(_QWORD *)(v23 + 96) = v47;
  v48 = objc_msgSend(v9, "heightAnchor");
  v49 = objc_msgSend(v48, "constraintEqualToConstant:", 152.0);

  *(_QWORD *)(v23 + 104) = v49;
  v50 = objc_msgSend(v9, "topAnchor");
  v51 = objc_msgSend(v21, "topAnchor");
  v52 = objc_msgSend(v50, "constraintGreaterThanOrEqualToAnchor:", v51);

  *(_QWORD *)(v23 + 112) = v52;
  v53 = objc_msgSend(v9, "bottomAnchor");
  v54 = objc_msgSend(v21, "bottomAnchor");
  v55 = objc_msgSend(v53, "constraintLessThanOrEqualToAnchor:", v54);

  *(_QWORD *)(v23 + 120) = v55;
  specialized Array._endMutation()(v56);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23);
  objc_msgSend(v66, "activateConstraints:", isa);

  sub_1000897BC(0x76u);
  v59 = v58;
  v60 = swift_allocObject(&unk_10017B1B8, 24, 7);
  swift_unknownObjectWeakInit(v60 + 16, v1);
  swift_retain(v60);
  v61 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v59);
  aBlock[4] = sub_10008D160;
  v68 = v60;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B5D0;
  aBlock[3] = &unk_10017B1D0;
  v62 = _Block_copy(aBlock);
  v63 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v61, 0, v62);

  _Block_release(v62);
  v64 = v68;
  swift_release(v60);
  v65 = objc_msgSend(v1, "addAction:", v63, swift_release(v64).n128_f64[0]);

}

void sub_10008CC58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 16;
  if (qword_1001A3060 != -1)
    swift_once(&qword_1001A3060, sub_10008C308);
  v8 = type metadata accessor for Logger(0, v4);
  v9 = sub_10000E8E8(v8, (uint64_t)qword_1001A6870);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v13 = 134217984;
    v23 = 64;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v13 + 4, v13 + 12);
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "learnMorePressed in %ld", v13, 0xCu);
    swift_slowDealloc(v13, -1, -1);
  }

  swift_beginAccess(v7, &v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC18SharingViewService30AirTagPairLockedViewController_mainController);
    if (v16)
    {
      v17 = (void *)v16;
      v18 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
      sub_1000B313C(0, (uint64_t)v6, (uint64_t)sub_10008CEAC, 0, 71);

      sub_10000E92C((uint64_t)v6);
      return;
    }

  }
  v19 = Logger.logObject.getter(Strong);
  v20 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "mainController nil while initializing primaryAction", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

}

uint64_t sub_10008CEAC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  NSURL *v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  Class isa;
  uint64_t v15;

  v0 = sub_100006A6C(&qword_1001A3618);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  URL.init(string:)(0xD000000000000024, 0x8000000100138F40);
  Optional.unwrap(_:file:line:)(v6, sub_1000521B4, 0, "SharingViewService/AirTagPairLockedViewController.swift", 55, 2, 73, v0);
  sub_10000E92C((uint64_t)v2);
  v7 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v7)
  {
    v9 = v7;
    URL._bridgeToObjectiveC()(v8);
    v11 = v10;
    v12 = sub_1000046D0((uint64_t)_swiftEmptyArrayStorage);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v12);
    objc_msgSend(v9, "openSensitiveURL:withOptions:", v11, isa);

  }
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_10008D0DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AirTagPairLockedViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AirTagPairLockedViewController()
{
  return objc_opt_self(_TtC18SharingViewService30AirTagPairLockedViewController);
}

uint64_t sub_10008D13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10008D160(uint64_t a1)
{
  uint64_t v1;

  sub_10008CC58(a1, v1);
}

uint64_t sub_10008D168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10008D178(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10008D180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A68B8);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A68B8);
  if (qword_1001A2EE8 != -1)
    swift_once(&qword_1001A2EE8, sub_100018C94);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD468);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_10008D210()
{
  qword_1001A68D8 = 0;
  return swift_unknownObjectWeakInit(&unk_1001A68D0, 0);
}

uint64_t sub_10008D224()
{
  qword_1001A68E8 = 0;
  return swift_unknownObjectWeakInit(&unk_1001A68E0, 0);
}

uint64_t sub_10008D238()
{
  qword_1001A68F8 = 0;
  return swift_unknownObjectWeakInit(&unk_1001A68F0, 0);
}

id sub_10008D24C(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (**v8)(uint64_t);
  id (**v9)();
  uint64_t (**v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  NSString v12;
  id v13;
  objc_super v15;

  v5 = &v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenter];
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_svsAssertion] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_remoteAlertHandle] = 0;
  v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_shouldCleanupOnDismiss] = 1;
  v8 = (uint64_t (**)(uint64_t))&v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactorGenerator];
  *v8 = sub_10008D368;
  v8[1] = 0;
  v9 = (id (**)())&v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_routerGenerator];
  *v9 = sub_10008D3B0;
  v9[1] = 0;
  v10 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenterGenerator];
  *v10 = sub_10008D3E0;
  v10[1] = 0;
  if (a2)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v12 = 0;
  }
  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for D2DSetupFlowViewController();
  v13 = objc_msgSendSuper2(&v15, "initWithNibName:bundle:", v12, a3);

  return v13;
}

uint64_t sub_10008D368(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for D2DSetupInteractor(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = swift_bridgeObjectRetain(a1);
  return sub_10007282C(v3);
}

id sub_10008D3B0()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for D2DSetupRouter()), "init");
}

uint64_t sub_10008D3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v30[24];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v10 = type metadata accessor for D2DSetupModel(0);
  __chkstk_darwin(v10);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for D2DSetupPresenter(0);
  v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  *(_QWORD *)(v14 + 24) = 0;
  swift_unknownObjectWeakInit(v14 + 16, 0);
  v15 = (_QWORD *)(v14 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_interactor);
  *v15 = a1;
  v15[1] = a2;
  v16 = (_QWORD *)(v14 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_router);
  *v16 = a3;
  v16[1] = a4;
  v17 = v14 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state;
  *(_QWORD *)v17 = 0;
  *(_QWORD *)(v17 + 8) = 0;
  *(_BYTE *)(v17 + 16) = 3;
  v18 = v14 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRetain(a3);
  v19 = swift_bridgeObjectRetain(a5);
  sub_100085664(v19, v18);
  swift_beginAccess(v18, v30, 0, 0);
  sub_10007D3F0(v18, (uint64_t)v12);
  sub_10009FD58((uint64_t)v12, 0, 0, 3);
  v20 = (_OWORD *)(v14 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel);
  v21 = v40;
  v22 = v41;
  v23 = v38;
  v20[8] = v39;
  v20[9] = v21;
  v24 = v42;
  v20[10] = v22;
  v20[11] = v24;
  v25 = v36;
  v20[4] = v35;
  v20[5] = v25;
  v20[6] = v37;
  v20[7] = v23;
  v26 = v32;
  *v20 = v31;
  v20[1] = v26;
  v27 = v34;
  v20[2] = v33;
  v20[3] = v27;
  return v14;
}

uint64_t sub_10008D60C(void *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t (*v30)(void *, __n128);
  uint64_t v31;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(__n128);
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD *, uint64_t, uint64_t, uint64_t, void *, __n128);
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (**v67)(char);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (**v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  void (*v80)(uint64_t);
  uint64_t v81;
  uint64_t v82;

  v3 = v2;
  if (qword_1001A3070 != -1)
    swift_once(&qword_1001A3070, sub_10008D210);
  Strong = swift_unknownObjectWeakLoadStrong(&unk_1001A68D0);
  result = swift_unknownObjectRelease(Strong);
  if (!Strong)
    goto LABEL_16;
  if (qword_1001A3078 != -1)
    swift_once(&qword_1001A3078, sub_10008D224);
  v8 = swift_unknownObjectWeakLoadStrong(&unk_1001A68E0);
  result = swift_unknownObjectRelease(v8);
  if (!v8)
    goto LABEL_16;
  if (qword_1001A3080 != -1)
    swift_once(&qword_1001A3080, sub_10008D238);
  result = swift_unknownObjectWeakLoadStrong(&unk_1001A68F0);
  if (result)
  {
    swift_unknownObjectRelease(result);
    if (qword_1001A3068 != -1)
      swift_once(&qword_1001A3068, sub_10008D180);
    v10 = type metadata accessor for Logger(0, v9);
    v11 = sub_10000E8E8(v10, (uint64_t)qword_1001A68B8);
    v12 = Logger.logObject.getter(v11);
    v14 = static os_log_type_t.default.getter(v12, v13);
    if (os_log_type_enabled(v12, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v14, "D2D Setup Flow being reconfigured with cached state after dismissing for external content", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    result = sub_10008DC9C();
    if (a2)
      return a2(result);
  }
  else
  {
LABEL_16:
    if (a1)
    {
      v16 = objc_msgSend(a1, "userInfo");
      if (v16)
      {
        v17 = v16;
        v18 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      }
      else
      {
        v18 = (void *)sub_10000434C((uint64_t)_swiftEmptyArrayStorage);
      }
      if (qword_1001A3068 != -1)
        swift_once(&qword_1001A3068, sub_10008D180);
      v80 = (void (*)(uint64_t))a2;
      v20 = type metadata accessor for Logger(0, v19);
      sub_10000E8E8(v20, (uint64_t)qword_1001A68B8);
      v21 = swift_bridgeObjectRetain_n(v18, 2);
      v22 = Logger.logObject.getter(v21);
      v24 = static os_log_type_t.default.getter(v22, v23);
      if (os_log_type_enabled(v22, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(12, -1);
        v26 = swift_slowAlloc(32, -1);
        v82 = v26;
        *(_DWORD *)v25 = 136315138;
        v27 = sub_100091B8C(v18);
        v29 = v28;
        v81 = sub_10001EFA4((uint64_t)v27, v28, &v82);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v25 + 4, v25 + 12);
        swift_bridgeObjectRelease_n(v18, 2);
        swift_bridgeObjectRelease(v29);
        _os_log_impl((void *)&_mh_execute_header, v22, v24, "D2D Setup Flow being configured with user info: %s", v25, 0xCu);
        swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1, -1);
        swift_slowDealloc(v25, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v18, 2);
      }
      v30 = *(uint64_t (**)(void *, __n128))(v3
                                                     + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactorGenerator);
      v31 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactorGenerator + 8);
      v32 = swift_retain(v31);
      v33 = (_QWORD *)v30(v18, v32);
      v35 = v34;
      swift_release(v31);
      v36 = *(uint64_t (**)(__n128))(v3
                                             + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_routerGenerator);
      v37 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_routerGenerator + 8);
      v38 = swift_retain(v37);
      v39 = v36(v38);
      v41 = v40;
      swift_release(v37);
      v42 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, void *, __n128))(v3
                                                                                          + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenterGenerator);
      v43 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenterGenerator + 8);
      v44 = swift_retain(v43);
      v45 = v42(v33, v35, v39, v41, v18, v44);
      v47 = v46;
      v49 = v48;
      swift_bridgeObjectRelease(v18);
      swift_release(v43);
      v50 = swift_unknownObjectRetain(v45);
      sub_10007D2D8(v50, v47);
      swift_unknownObjectRelease(v45);
      v51 = swift_allocObject(&unk_10017B230, 24, 7);
      swift_unknownObjectWeakInit(v51 + 16, v3);
      v52 = v33[4];
      v53 = v33[5];
      v33[4] = sub_10008F8F4;
      v33[5] = v51;
      sub_100012F60(v52, v53);
      v54 = swift_allocObject(&unk_10017B230, 24, 7);
      swift_unknownObjectWeakInit(v54 + 16, v3);
      v55 = v33[6];
      v56 = v33[7];
      v33[6] = sub_10008F8FC;
      v33[7] = v54;
      sub_100012F60(v55, v56);
      v57 = swift_allocObject(&unk_10017B230, 24, 7);
      swift_unknownObjectWeakInit(v57 + 16, v3);
      v58 = v33[8];
      v59 = v33[9];
      v33[8] = sub_10008F904;
      v33[9] = v57;
      sub_100012F60(v58, v59);
      v60 = swift_allocObject(&unk_10017B230, 24, 7);
      swift_unknownObjectWeakInit(v60 + 16, v3);
      v61 = v33[10];
      v62 = v33[11];
      v33[10] = sub_10008F90C;
      v33[11] = v60;
      sub_100012F60(v61, v62);
      v63 = swift_allocObject(&unk_10017B230, 24, 7);
      swift_unknownObjectWeakInit(v63 + 16, v3);
      v64 = v33[12];
      v65 = v33[13];
      v33[12] = sub_10008F914;
      v33[13] = v63;
      sub_100012F60(v64, v65);
      v66 = swift_allocObject(&unk_10017B230, 24, 7);
      swift_unknownObjectWeakInit(v66 + 16, v3);
      v67 = (void (**)(char))(v39 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_didDismiss);
      v68 = *(_QWORD *)(v39 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_didDismiss);
      v69 = *(_QWORD *)(v39 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_didDismiss + 8);
      *v67 = sub_10008F91C;
      v67[1] = (void (*)(char))v66;
      sub_100012F60(v68, v69);
      v70 = swift_allocObject(&unk_10017B258, 40, 7);
      *(_QWORD *)(v70 + 24) = v47;
      *(_QWORD *)(v70 + 32) = v49;
      swift_unknownObjectWeakInit(v70 + 16, v45);
      v71 = (uint64_t (**)(uint64_t, uint64_t))(v39
                                                      + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_prepareForPresentation);
      v72 = *(_QWORD *)(v39 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_prepareForPresentation);
      v73 = *(_QWORD *)(v39 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_prepareForPresentation + 8);
      *v71 = sub_10008F948;
      v71[1] = (uint64_t (*)(uint64_t, uint64_t))v70;
      sub_100012F60(v72, v73);
      v74 = (_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor);
      v75 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor);
      *v74 = v33;
      v74[1] = v35;
      swift_unknownObjectRetain(v33);
      swift_unknownObjectRelease(v75);
      v76 = (uint64_t *)(v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router);
      v77 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router);
      *v76 = v39;
      v76[1] = v41;
      swift_unknownObjectRetain(v39);
      swift_unknownObjectRelease(v77);
      v78 = (uint64_t *)(v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenter);
      v79 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenter);
      *v78 = v45;
      v78[1] = v49;
      swift_unknownObjectRetain(v45);
      result = swift_unknownObjectRelease(v79);
      if (v80)
      {
        v80(result);
        swift_unknownObjectRelease(v33);
        swift_unknownObjectRelease(v39);
        return swift_unknownObjectRelease(v45);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10008DC9C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  void *v14;
  NSString v15;

  if (qword_1001A3070 != -1)
    swift_once(&qword_1001A3070, sub_10008D210);
  Strong = swift_unknownObjectWeakLoadStrong(&unk_1001A68D0);
  v2 = qword_1001A68D8;
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor);
  *v3 = Strong;
  v3[1] = v2;
  swift_unknownObjectRelease(v4);
  if (qword_1001A3078 != -1)
    swift_once(&qword_1001A3078, sub_10008D224);
  v5 = swift_unknownObjectWeakLoadStrong(&unk_1001A68E0);
  v6 = qword_1001A68E8;
  v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router);
  *v7 = v5;
  v7[1] = v6;
  swift_unknownObjectRelease(v8);
  if (qword_1001A3080 != -1)
    swift_once(&qword_1001A3080, sub_10008D238);
  v9 = swift_unknownObjectWeakLoadStrong(&unk_1001A68F0);
  v10 = qword_1001A68F8;
  v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenter);
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenter);
  *v11 = v9;
  v11[1] = v10;
  swift_unknownObjectRelease(v12);
  qword_1001A68D8 = 0;
  swift_unknownObjectWeakAssign(&unk_1001A68D0, 0);
  qword_1001A68E8 = 0;
  swift_unknownObjectWeakAssign(&unk_1001A68E0, 0);
  qword_1001A68F8 = 0;
  swift_unknownObjectWeakAssign(&unk_1001A68F0, 0);
  result = sub_100064288();
  if (result)
  {
    v14 = (void *)result;
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "setIdleTimerDisabled:forReason:", 1, v15);

    return swift_unknownObjectRelease(v14);
  }
  return result;
}

void sub_10008DE50(char a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  id v5;
  void *v6;
  NSString v7;
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = (void *)sub_100064288();

    if (v6)
    {
      v7 = String._bridgeToObjectiveC()();
      objc_msgSend(v6, "setIdleTimerDisabled:forReason:", a1 & 1, v7);

      swift_unknownObjectRelease(v6);
    }

  }
}

void sub_10008DF00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  uint64_t v5;
  char *v6;
  void *v7;
  char v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = *(_QWORD *)&Strong[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router];
    if (v5)
      *(_BYTE *)(v5 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_isBlockingHardwareButtons) = 1;
    v6 = Strong;
    v7 = (void *)sub_100064288();

    if (v7)
    {
      objc_msgSend(v7, "setDesiredHardwareButtonEvents:", a1);

      swift_unknownObjectRelease(v7);
    }
    else
    {

    }
  }
}

void sub_10008DFB4(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(_QWORD *)&Strong[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router];
    if (v3)
      *(_BYTE *)(v3 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_isBlockingHardwareButtons) = 0;
    v4 = Strong;
    v5 = (void *)sub_100064288();

    if (v5)
    {
      objc_msgSend(v5, "setDesiredHardwareButtonEvents:", 16 * (SFDeviceHomeButtonType(v6, v7) != 3));

      swift_unknownObjectRelease(v5);
    }
    else
    {

    }
  }
}

void sub_10008E064(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    if (qword_1001A3068 != -1)
      swift_once(&qword_1001A3068, sub_10008D180);
    v5 = type metadata accessor for Logger(0, v3);
    v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A68B8);
    v7 = Logger.logObject.getter(v6);
    v9 = static os_log_type_t.default.getter(v7, v8);
    if (os_log_type_enabled(v7, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v9, "D2D Setup Flow: dismiss remote alert before external content (eSim external 2FA)", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    sub_10008E16C();
  }
}

void *sub_10008E16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  void *v7;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_shouldCleanupOnDismiss) = 0;
  if (qword_1001A3070 != -1)
    swift_once(&qword_1001A3070, sub_10008D210);
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor);
  qword_1001A68D8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor + 8);
  swift_unknownObjectWeakAssign(&unk_1001A68D0, v1);
  if (qword_1001A3078 != -1)
    swift_once(&qword_1001A3078, sub_10008D224);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router);
  qword_1001A68E8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router + 8);
  swift_unknownObjectWeakAssign(&unk_1001A68E0, v2);
  if (qword_1001A3080 != -1)
    swift_once(&qword_1001A3080, sub_10008D238);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenter);
  qword_1001A68F8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenter + 8);
  v4 = swift_unknownObjectWeakAssign(&unk_1001A68F0, v3);
  sub_10008F12C(v4, v5);
  result = (void *)sub_100064288();
  if (result)
  {
    v7 = result;
    objc_msgSend(result, "deactivate");
    return (void *)swift_unknownObjectRelease(v7);
  }
  return result;
}

void sub_10008E294(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE v18[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (_BYTE *)Strong;
    if (qword_1001A3068 != -1)
      swift_once(&qword_1001A3068, sub_10008D180);
    v5 = type metadata accessor for Logger(0, v3);
    v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A68B8);
    v7 = Logger.logObject.getter(v6);
    v9 = static os_log_type_t.default.getter(v7, v8);
    if (os_log_type_enabled(v7, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v9, "D2D Setup Flow: recreate remote alert and prox cards after external content (eSim external 2FA)", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    sub_10008F794();
    v11 = OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_svsAssertion;
    v12 = *(void **)&v4[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_svsAssertion];
    if (v12)
    {
      objc_msgSend(v12, "invalidate");
      v13 = *(void **)&v4[v11];
      *(_QWORD *)&v4[v11] = 0;

      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Invalidated assertion", v17, 2u);
        swift_slowDealloc(v17, -1, -1);
      }

    }
    v4[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_shouldCleanupOnDismiss] = 1;

  }
}

void sub_10008E450(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  char *v23;
  char v24[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_shouldCleanupOnDismiss;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_shouldCleanupOnDismiss) = a1 & 1;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor);
    if (v7)
    {
      v8 = OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
      v9 = v7 + v8 + *(int *)(type metadata accessor for D2DSetupModel(0) + 72);
      if (*(_BYTE *)(v9 + 4))
        v10 = 8;
      else
        v10 = *(_DWORD *)v9;
      swift_unknownObjectRetain(v7);
      sub_100077238(v10);
      swift_unknownObjectRelease(v7);
    }
    v11 = v5;
    v12 = (void *)sub_100064288();

    if (v12)
    {
      objc_msgSend(v12, "dismiss");
      swift_unknownObjectRelease(v12);
    }
    if (*((_BYTE *)v5 + v6) == 1)
    {
      v13 = OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_svsAssertion;
      v14 = *(void **)&v11[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_svsAssertion];
      if (v14)
      {
        objc_msgSend(v14, "invalidate");
        v15 = *(void **)&v11[v13];
        *(_QWORD *)&v11[v13] = 0;

        if (qword_1001A3068 != -1)
          swift_once(&qword_1001A3068, sub_10008D180);
        v17 = type metadata accessor for Logger(0, v16);
        v18 = sub_10000E8E8(v17, (uint64_t)qword_1001A68B8);
        v19 = Logger.logObject.getter(v18);
        v20 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v21 = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "Invalidated assertion", v21, 2u);
          swift_slowDealloc(v21, -1, -1);
        }

      }
      v22 = OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_remoteAlertHandle;
      objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_remoteAlertHandle], "invalidate");
      v23 = *(char **)&v11[v22];
      *(_QWORD *)&v11[v22] = 0;

      v11 = v23;
    }

  }
}

uint64_t sub_10008E650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v13;
  _BYTE v14[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = Strong;
    *(_QWORD *)(Strong + 24) = a2;
    swift_unknownObjectWeakAssign(Strong + 16, a1);
    swift_unknownObjectRetain(a1);
    sub_10009DE10();
    swift_unknownObjectRelease(v8);
    swift_unknownObjectRelease(a1);
  }
  swift_beginAccess(v6, &v13, 0, 0);
  v9 = swift_unknownObjectWeakLoadStrong(v6);
  if (v9)
    v10 = *(_QWORD *)(a3 + 32);
  else
    v10 = 0;
  ObjectType = swift_getObjectType(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 16))(v9, v10, ObjectType, a2);
}

id sub_10008E7E4(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  objc_class *v15;
  id result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char v22;
  id v23;
  id v24;
  void *v25;
  objc_super v26;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v8 = (id *)((char *)&v26.receiver - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1001A3068 != -1)
    swift_once(&qword_1001A3068, sub_10008D180);
  v9 = type metadata accessor for Logger(0, v6);
  v10 = sub_10000E8E8(v9, (uint64_t)qword_1001A68B8);
  v11 = Logger.logObject.getter(v10);
  v13 = static os_log_type_t.default.getter(v11, v12);
  if (os_log_type_enabled(v11, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v13, "D2D Setup Flow viewDidAppear", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = (objc_class *)type metadata accessor for D2DSetupFlowViewController();
  v26.receiver = v2;
  v26.super_class = v15;
  result = objc_msgSendSuper2(&v26, "viewDidAppear:", a1 & 1);
  v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor];
  if (v17)
  {
    swift_unknownObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor]);
    v18 = mach_absolute_time();
    v19 = v17 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_model;
    *(_QWORD *)(v19 + *(int *)(type metadata accessor for D2DSetupModel(0) + 48)) = v18;
    result = (id)swift_unknownObjectRelease(v17);
  }
  v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router];
  if (!v20)
    goto LABEL_10;
  sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
  swift_unknownObjectRetain(v20);
  *v8 = static OS_dispatch_queue.main.getter(v21);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  v22 = _dispatchPreconditionTest(_:)(v8);
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v22 & 1) != 0)
  {
    v23 = sub_100088E40();
    v24 = objc_msgSend(v2, "presentProxCardFlowWithDelegate:initialViewController:", v20, v23);

    v25 = *(void **)(v20 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_navigationController);
    *(_QWORD *)(v20 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_navigationController) = v24;

    swift_unknownObjectWeakAssign(v20 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_hostViewController, v2);
    result = (id)swift_unknownObjectRelease(v20);
LABEL_10:
    v2[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_shouldCleanupOnDismiss] = 1;
    return result;
  }
  __break(1u);
  return result;
}

id sub_10008EA98(char a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  objc_super v22;

  v3 = v2;
  if (qword_1001A3068 != -1)
    swift_once(&qword_1001A3068, sub_10008D180);
  v5 = type metadata accessor for Logger(0, a2);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A68B8);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "D2D Setup Flow viewDidDisappear", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = sub_100064288();
  if (v11)
  {
    v12 = (void *)v11;
    v13 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setIdleTimerDisabled:forReason:", 0, v13);

    v11 = swift_unknownObjectRelease(v12);
  }
  v14 = OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router;
  v15 = *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router];
  if (v15
    && (*(_BYTE *)(v15 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissed) & 1) == 0
    && v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_shouldCleanupOnDismiss] == 1)
  {
    v16 = Logger.logObject.getter(v11);
    v18 = static os_log_type_t.default.getter(v16, v17);
    if (os_log_type_enabled(v16, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v18, "Main disappeared without dismiss (device locked?)...dismissing UI", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    v20 = *(_QWORD *)&v3[v14];
    if (v20)
    {
      *(_BYTE *)(v20 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissedForExternalContent) = 0;
      swift_unknownObjectRetain(v20);
      sub_10008911C(21, 1);
      swift_unknownObjectRelease(v20);
    }
  }
  sub_10008EDC4();
  v22.receiver = v3;
  v22.super_class = (Class)type metadata accessor for D2DSetupFlowViewController();
  return objc_msgSendSuper2(&v22, "viewDidDisappear:", a1 & 1);
}

void sub_10008EDC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  void *v19;

  v1 = OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_shouldCleanupOnDismiss;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_shouldCleanupOnDismiss) == 1)
  {
    v2 = v0;
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor);
    if (!v3)
      goto LABEL_7;
    v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
    v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession);
    if (v5)
    {
      v6 = v4[1];
      ObjectType = swift_getObjectType(*(_QWORD *)(v3
                                                 + OBJC_IVAR____TtC18SharingViewService18D2DSetupInteractor_setupSession));
      v8 = *(void (**)(uint64_t, uint64_t))(v6 + 160);
      swift_unknownObjectRetain(v3);
      swift_unknownObjectRetain(v5);
      v8(ObjectType, v6);
      swift_unknownObjectRelease(v5);
      v5 = *v4;
    }
    else
    {
      swift_unknownObjectRetain(v3);
    }
    *v4 = 0;
    v4[1] = 0;
    swift_unknownObjectRelease(v3);
    swift_unknownObjectRelease(v5);
    if (*(_BYTE *)(v2 + v1) == 1)
    {
LABEL_7:
      v9 = OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_svsAssertion;
      v10 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_svsAssertion);
      if (v10)
      {
        objc_msgSend(v10, "invalidate");
        v11 = *(void **)(v2 + v9);
        *(_QWORD *)(v2 + v9) = 0;

        if (qword_1001A3068 != -1)
          swift_once(&qword_1001A3068, sub_10008D180);
        v13 = type metadata accessor for Logger(0, v12);
        v14 = sub_10000E8E8(v13, (uint64_t)qword_1001A68B8);
        v15 = Logger.logObject.getter(v14);
        v16 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v17 = 0;
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "Invalidated assertion", v17, 2u);
          swift_slowDealloc(v17, -1, -1);
        }

      }
      v18 = OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_remoteAlertHandle;
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_remoteAlertHandle), "invalidate");
      v19 = *(void **)(v2 + v18);
      *(_QWORD *)(v2 + v18) = 0;

    }
  }
}

void sub_10008EFA0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenter));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactorGenerator + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_routerGenerator + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenterGenerator + 8));

}

id sub_10008F038()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for D2DSetupFlowViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for D2DSetupFlowViewController()
{
  return objc_opt_self(_TtC18SharingViewService26D2DSetupFlowViewController);
}

void sub_10008F12C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSString v10;
  id v11;
  void *v12;
  NSObject *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  id v28;
  NSString v29;
  Class isa;
  id v31;
  unsigned __int8 v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  _QWORD *v54;
  void *v55;
  uint64_t v56;
  NSObject *oslog;
  os_log_t osloga;
  id v59;
  uint64_t v60;

  v3 = OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_svsAssertion;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_svsAssertion))
  {
    if (qword_1001A3068 != -1)
      swift_once(&qword_1001A3068, sub_10008D180);
    v4 = type metadata accessor for Logger(0, a2);
    v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A68B8);
    oslog = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(oslog, v6);
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "Skipping taking assertion to keep alive because it is already taken", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    return;
  }
  v9 = v2;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(RBSProcessPredicate), "predicateMatchingBundleIdentifier:", v10);

  v12 = (void *)objc_opt_self(RBSProcessHandle);
  v59 = 0;
  v13 = v11;
  v14 = objc_msgSend(v12, "handleForPredicate:error:", v13, &v59);
  v15 = v59;
  if (v14)
  {
    v16 = v14;
    v17 = v59;
    osloga = v13;

    v18 = objc_msgSend(v16, "identity");
    v19 = objc_msgSend((id)objc_opt_self(RBSTarget), "targetWithProcessIdentity:", v18);

    v20 = String._bridgeToObjectiveC()();
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend((id)objc_opt_self(RBSDomainAttribute), "attributeWithDomain:name:", v20, v21);

    v23 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
    v24 = swift_allocObject(v23, 40, 7);
    *(_OWORD *)(v24 + 16) = xmmword_100132030;
    *(_QWORD *)(v24 + 32) = v22;
    v59 = (id)v24;
    specialized Array._endMutation()(v24);
    v25 = v59;
    v26 = objc_allocWithZone((Class)RBSAssertion);
    v27 = v19;
    v28 = v22;
    v29 = String._bridgeToObjectiveC()();
    sub_100013194(0, &qword_1001A6970, RBSAttribute_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v25);
    v31 = objc_msgSend(v26, "initWithExplanation:target:attributes:", v29, v27, isa);

    v59 = 0;
    v32 = objc_msgSend(v31, "acquireWithError:", &v59);
    v33 = v59;
    if ((v32 & 1) != 0)
    {
      v34 = qword_1001A3068;
      v35 = v59;
      if (v34 != -1)
        swift_once(&qword_1001A3068, sub_10008D180);
      v37 = type metadata accessor for Logger(0, v36);
      v38 = sub_10000E8E8(v37, (uint64_t)qword_1001A68B8);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Successfully acquired assertion", v41, 2u);
        swift_slowDealloc(v41, -1, -1);
      }

      v42 = *(void **)(v9 + v3);
      *(_QWORD *)(v9 + v3) = v31;

      return;
    }
    v46 = v59;
    v44 = _convertNSErrorToError(_:)(v33);

    swift_willThrow(v47);
    v13 = osloga;
  }
  else
  {
    v43 = v59;
    v44 = _convertNSErrorToError(_:)(v15);

    swift_willThrow(v45);
    v27 = v13;
  }

  if (qword_1001A3068 != -1)
    swift_once(&qword_1001A3068, sub_10008D180);
  v49 = type metadata accessor for Logger(0, v48);
  sub_10000E8E8(v49, (uint64_t)qword_1001A68B8);
  swift_errorRetain(v44);
  v50 = swift_errorRetain(v44);
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.error.getter(v51);
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc(12, -1);
    v54 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v53 = 138412290;
    swift_errorRetain(v44);
    v55 = (void *)_swift_stdlib_bridgeErrorToNSError(v44);
    v59 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v53 + 4, v53 + 12);
    *v54 = v55;
    swift_errorRelease(v44);
    swift_errorRelease(v44);
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "Failed to take assertion on SharingViewService ensuring it is active: %@", v53, 0xCu);
    v56 = sub_100006A6C(&qword_1001A5420);
    swift_arrayDestroy(v54, 1, v56);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v53, -1, -1);

    swift_errorRelease(v44);
  }
  else
  {
    swift_errorRelease(v44);
    swift_errorRelease(v44);
    swift_errorRelease(v44);

  }
}

void sub_10008F794()
{
  uint64_t v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  v1 = objc_allocWithZone((Class)SBSRemoteAlertDefinition);
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "initWithServiceName:viewControllerClassName:", v2, v3);

  v9 = objc_msgSend(objc_allocWithZone((Class)SBSRemoteAlertConfigurationContext), "init");
  v5 = objc_msgSend((id)objc_opt_self(SBSRemoteAlertHandle), "newHandleWithDefinition:configurationContext:", v4, v9);
  v6 = OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_remoteAlertHandle;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_remoteAlertHandle);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_remoteAlertHandle) = v5;

  v8 = *(id *)(v0 + v6);
  objc_msgSend(v8, "activateWithContext:", 0);

}

uint64_t sub_10008F8AC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008F8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_10008F8F4(char a1)
{
  uint64_t v1;

  sub_10008DE50(a1, v1);
}

void sub_10008F8FC(uint64_t a1)
{
  uint64_t v1;

  sub_10008DF00(a1, v1);
}

void sub_10008F904()
{
  uint64_t v0;

  sub_10008DFB4(v0);
}

void sub_10008F90C()
{
  uint64_t v0;

  sub_10008E064(v0);
}

void sub_10008F914()
{
  uint64_t v0;

  sub_10008E294(v0);
}

void sub_10008F91C(char a1)
{
  uint64_t v1;

  sub_10008E450(a1, v1);
}

uint64_t sub_10008F924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 40, 7);
}

uint64_t sub_10008F948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10008E650(a1, a2, v2);
}

void sub_10008F950()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = &v0[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_interactor];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_router];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_presenter];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_svsAssertion] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_remoteAlertHandle] = 0;
  v0[OBJC_IVAR____TtC18SharingViewService26D2DSetupFlowViewController_shouldCleanupOnDismiss] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100136660, "SharingViewService/D2DSetupFlowViewController.swift", 51, 2, 58, 0);
  __break(1u);
}

void sub_10008FA04()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  void *v12;
  id v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  void (*v17)(uint64_t, void *);
  void *v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  objc_super v21;

  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for AuthenticateAccountsStartViewController();
  objc_msgSendSuper2(&v21, "viewDidLoad");
  v1 = &v0[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_viewModel];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_viewModel + 96];
  v3 = swift_allocObject(&unk_10017B280, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v0);
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v19 = sub_1000901AC;
  v20 = v3;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_10001B5D0;
  v18 = &unk_10017B298;
  v5 = _Block_copy(&v15);
  v6 = (void *)objc_opt_self(PRXAction);
  v7 = objc_msgSend(v6, "actionWithTitle:style:handler:", v4, 0, v5);

  _Block_release(v5);
  v8 = v20;
  swift_release(v3);

  v9 = *((_QWORD *)v1 + 16);
  v10 = swift_allocObject(&unk_10017B280, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v0);
  swift_bridgeObjectRetain(v9);
  swift_retain(v10);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v19 = sub_1000901CC;
  v20 = v10;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_10001B5D0;
  v18 = &unk_10017B2C0;
  v12 = _Block_copy(&v15);
  v13 = objc_msgSend(v6, "actionWithTitle:style:handler:", v11, 1, v12);

  _Block_release(v12);
  v14 = v20;
  swift_release(v10);

}

void sub_10008FC64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *Strong;
  char *v4;
  NSString v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    if (Strong[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_started] == 1
      || (Strong[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_started] = 1,
          objc_msgSend(Strong, "setDismissalType:", *(_QWORD *)&Strong[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_viewModel+ 72]), v5 = String._bridgeToObjectiveC()(), objc_msgSend(v4, "showActivityIndicatorWithStatus:", v5), v5, (v6 = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_presenter])) == 0))
    {

    }
    else
    {
      v8 = v6;
      sub_1000DA51C(v6, v7);

      swift_unknownObjectRelease(v8);
    }
  }
}

void sub_10008FD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_presenter);

    if (v5)
    {
      sub_1000DC510(v6, v7);
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_10008FDE0(char a1)
{
  char *v1;
  char *v2;
  char *v4;
  NSString v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  objc_super v13;

  v2 = v1;
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for AuthenticateAccountsStartViewController();
  objc_msgSendSuper2(&v13, "viewWillAppear:", a1 & 1);
  v4 = &v2[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_viewModel];
  if (v2[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_viewModel + 80] == 1
    && (v2[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_started] & 1) == 0)
  {
    v2[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_started] = 1;
    objc_msgSend(v2, "setDismissalType:", *((_QWORD *)v4 + 9));
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "showActivityIndicatorWithStatus:", v5);

    Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_presenter]);
    if (Strong)
    {
      v8 = Strong;
      sub_1000DA51C(Strong, v7);
      swift_unknownObjectRelease(v8);
    }
  }
  v9 = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_presenter]);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend((id)objc_opt_self(NSDistributedNotificationCenter), "defaultCenter");
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v11, "addObserver:selector:name:object:", v10, "handleDeviceSetupWithNotification:", v12, 0);
    swift_unknownObjectRelease(v10);

  }
}

void sub_10008FF88(char a1)
{
  char *v1;
  uint64_t Strong;
  uint64_t v4;
  id v5;
  NSString v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for AuthenticateAccountsStartViewController();
  objc_msgSendSuper2(&v7, "viewDidDisappear:", a1 & 1);
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18SharingViewService39AuthenticateAccountsStartViewController_presenter]);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend((id)objc_opt_self(NSDistributedNotificationCenter), "defaultCenter");
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "removeObserver:name:object:", v4, v6, 0);
    swift_unknownObjectRelease(v4);

  }
}

id sub_1000900C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AuthenticateAccountsStartViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AuthenticateAccountsStartViewController()
{
  return objc_opt_self(_TtC18SharingViewService39AuthenticateAccountsStartViewController);
}

uint64_t sub_100090188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1000901AC(uint64_t a1)
{
  uint64_t v1;

  sub_10008FC64(a1, v1);
}

uint64_t sub_1000901B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000901C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000901CC(uint64_t a1)
{
  uint64_t v1;

  sub_10008FD3C(a1, v1);
}

void sub_1000901DC()
{
  NSString v0;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;
  Class isa;
  _BYTE v5[104];

  v0 = String._bridgeToObjectiveC()();
  v1 = sub_100006A6C(&qword_1001A63C0);
  inited = swift_initStackObject(v1, v5);
  *(_OWORD *)(inited + 16) = xmmword_100132B30;
  *(_QWORD *)(inited + 32) = 0x79546E6F69746361;
  *(_QWORD *)(inited + 40) = 0xEA00000000006570;
  *(NSNumber *)(inited + 48) = Int32._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 56) = 0x6174536572616873;
  *(_QWORD *)(inited + 64) = 0xEA00000000006574;
  *(NSNumber *)(inited + 72) = Int32._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 80) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 88) = 0xEA0000000000734DLL;
  *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
  v3 = sub_10000448C(inited);
  sub_100087ECC();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  SFMetricsLog(v0, isa);

}

void sub_10009030C()
{
  NSString v0;
  uint64_t v1;
  uint64_t inited;
  unint64_t v3;
  Class isa;
  uint64_t v5;

  v0 = String._bridgeToObjectiveC()();
  v1 = sub_100006A6C(&qword_1001A63C0);
  inited = swift_initStackObject(v1, &v5);
  *(_OWORD *)(inited + 16) = xmmword_100133A80;
  *(_QWORD *)(inited + 32) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 40) = 0xEA0000000000734DLL;
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 56) = 0x646F43726F727265;
  *(_QWORD *)(inited + 64) = 0xE900000000000065;
  *(NSNumber *)(inited + 72) = Int32._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 80) = 0x6F7073746F487369;
  *(_QWORD *)(inited + 88) = 0xE900000000000074;
  *(NSNumber *)(inited + 96) = Bool._bridgeToObjectiveC()();
  *(_QWORD *)(inited + 104) = 0x41676E697373696DLL;
  *(_QWORD *)(inited + 112) = 0xEA00000000006B63;
  *(NSNumber *)(inited + 120) = Bool._bridgeToObjectiveC()();
  v3 = sub_10000448C(inited);
  sub_100087ECC();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
  SFMetricsLog(v0, isa);

}

id sub_100090468(uint64_t a1)
{
  char *v1;
  void *v2;
  __int128 v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  NSString v22;
  objc_super v24;

  v2 = v1;
  v4 = *(_OWORD *)(a1 + 48);
  v5 = &v1[OBJC_IVAR____TtC18SharingViewService43AuthenticateAccountsImageCardViewController_viewModel];
  *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 3) = v4;
  *((_QWORD *)v5 + 8) = *(_QWORD *)(a1 + 64);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a1;
  *((_OWORD *)v5 + 1) = v6;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 48);
  v10 = objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsImageCardContentView());
  sub_1000906FC((_QWORD *)a1);
  sub_10007F0F8(v7, v8);
  v11 = (char *)sub_1000955A4(v7, v8, v9);
  v12 = *(void **)(a1 + 56);
  v13 = OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageTintColor;
  v14 = *(void **)&v11[OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageTintColor];
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageTintColor] = v12;
  v15 = v12;

  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageView], "setTintColor:", *(_QWORD *)&v11[v13]);
  v24.receiver = v2;
  v24.super_class = (Class)type metadata accessor for AuthenticateAccountsImageCardViewController();
  v16 = objc_msgSendSuper2(&v24, "initWithContentView:", v11);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = v16;
  objc_msgSend(v18, "setDismissalType:", v17);
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setTitle:", v20);

  v21 = v19;
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setSubtitle:", v22);
  sub_100090760((_QWORD *)a1);

  return v21;
}

id sub_100090640()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AuthenticateAccountsImageCardViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AuthenticateAccountsImageCardViewController()
{
  return objc_opt_self(_TtC18SharingViewService43AuthenticateAccountsImageCardViewController);
}

_QWORD *sub_1000906FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  v5 = (void *)a1[7];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  sub_10007F0F8(v3, v4);
  v6 = v5;
  return a1;
}

_QWORD *sub_100090760(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = a1[1];
  v3 = a1[4];
  v4 = a1[5];
  v5 = (void *)a1[7];
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(v2);
  sub_10007F198(v3, v4);

  return a1;
}

uint64_t sub_1000907C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A69E8);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A69E8);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

id sub_100090854(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  objc_super v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v5 = swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC18SharingViewService28B389CustomNameViewController_mainController], 0);
  swift_unknownObjectWeakAssign(v5, a1);
  v6 = objc_allocWithZone((Class)PRXTextField);
  v7 = v2;
  v8 = objc_msgSend(v6, "init");
  v9 = OBJC_IVAR____TtC18SharingViewService28B389CustomNameViewController_nameField;
  *(_QWORD *)&v7[OBJC_IVAR____TtC18SharingViewService28B389CustomNameViewController_nameField] = v8;
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = sub_100117218(v10, v11, v12);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v16 = swift_allocObject(&unk_10017B370, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, a1);
  v17 = swift_allocObject(&unk_10017B3C0, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16, *(_QWORD *)&v7[v9]);
  v18 = swift_allocObject(&unk_10017B3E8, 32, 7);
  *(_QWORD *)(v18 + 16) = v16;
  *(_QWORD *)(v18 + 24) = v17;
  swift_retain(v16);
  swift_retain(v17);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  aBlock[4] = sub_100091B6C;
  v31 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001B5D0;
  aBlock[3] = &unk_10017B400;
  v20 = _Block_copy(aBlock);
  v21 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v19, 0, v20);

  _Block_release(v20);
  v22 = v31;
  swift_release(v16);
  swift_release(v17);
  swift_release(v22);
  *(_QWORD *)&v7[OBJC_IVAR____TtC18SharingViewService28B389CustomNameViewController_continueAction] = v21;

  v29.receiver = v7;
  v29.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v29, "initWithContentView:", 0);
  v24 = (void *)objc_opt_self(NSNotificationCenter);
  v25 = v23;
  v26 = objc_msgSend(v24, "defaultCenter");
  v27 = v25;
  objc_msgSend(v26, "addObserver:selector:name:object:", v27, "updateContinueButton", UITextFieldTextDidChangeNotification, 0);

  return v27;
}

void sub_100090B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  char v20[24];
  char v21[24];
  char v22[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = a3 + 16;
    swift_beginAccess(v7, v21, 0, 0);
    v8 = (void *)swift_unknownObjectWeakLoadStrong(v7);
    v9 = v8;
    if (v8)
    {
      v10 = objc_msgSend(v8, "text");

      if (v10)
      {
        v9 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v12 = v11;

LABEL_7:
        v13 = &v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleName];
        v14 = *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_customRoleName + 8];
        *(_QWORD *)v13 = v9;
        *((_QWORD *)v13 + 1) = v12;

        swift_bridgeObjectRelease(v14);
        goto LABEL_8;
      }
      v9 = 0;
    }
    v12 = 0;
    goto LABEL_7;
  }
LABEL_8:
  swift_beginAccess(v4, v20, 0, 0);
  v15 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (v15)
  {
    v16 = v15;
    v17 = sub_1000301F4(v16);
    v18 = *(void **)&v16[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav];
    if (v18)
    {
      sub_10011757C(v18, v17);
      sub_100031994(v19);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100090CB4()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *Strong;
  NSString v34;
  void *v35;
  id v36;
  uint64_t v37;
  void **v38;
  uint64_t v39;
  void (*v40)(uint64_t, void *);
  void *v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  objc_super v44;

  v44.receiver = v0;
  v44.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v44, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryLarge);
    objc_msgSend(v2, "_setLocalOverrideTraitCollection:", v3);

    v4 = (void *)objc_opt_self(NSBundle);
    v5 = objc_msgSend(v4, "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v7 = String._bridgeToObjectiveC()();
    v8 = sub_100117218(v5, v6, v7);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v10 = v9;

    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    objc_msgSend(v0, "setTitle:", v11);

    v12 = objc_msgSend(v4, "mainBundle");
    v13 = String._bridgeToObjectiveC()();
    v14 = String._bridgeToObjectiveC()();
    v15 = sub_100117218(v12, v13, v14);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v17 = v16;

    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v0, "setSubtitle:", v18);

    objc_msgSend(v0, "setDismissalType:", 1);
    v19 = swift_allocObject(&unk_10017B320, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16, v0);
    swift_retain(v19);
    v20 = String._bridgeToObjectiveC()();
    v42 = sub_100091B18;
    v43 = v19;
    v38 = _NSConcreteStackBlock;
    v39 = 1107296256;
    v40 = sub_10001B5D0;
    v41 = &unk_10017B338;
    v21 = _Block_copy(&v38);
    v22 = (void *)objc_opt_self(PRXAction);
    v23 = objc_msgSend(v22, "actionWithTitle:style:handler:", v20, 0, v21);

    _Block_release(v21);
    v24 = v43;
    swift_release(v19);
    objc_msgSend(v0, "setDismissButtonAction:", v23, swift_release(v24).n128_f64[0]);

    v25 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService28B389CustomNameViewController_continueAction];
    objc_msgSend(v25, "setEnabled:", 0);

    v26 = objc_msgSend(v4, "mainBundle");
    v27 = String._bridgeToObjectiveC()();
    v28 = String._bridgeToObjectiveC()();
    v29 = sub_100117218(v26, v27, v28);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v31 = v30;

    v32 = swift_allocObject(&unk_10017B370, 24, 7);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18SharingViewService28B389CustomNameViewController_mainController]);
    swift_unknownObjectWeakInit(v32 + 16, Strong);

    swift_retain(v32);
    v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    v42 = sub_100091B38;
    v43 = v32;
    v38 = _NSConcreteStackBlock;
    v39 = 1107296256;
    v40 = sub_10001B5D0;
    v41 = &unk_10017B388;
    v35 = _Block_copy(&v38);
    v36 = objc_msgSend(v22, "actionWithTitle:style:handler:", v34, 1, v35);

    _Block_release(v35);
    v37 = v43;
    swift_release(v32);

    sub_1000914D4();
  }
  else
  {
    __break(1u);
  }
}

void sub_1000911DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t Strong;
  void *v15;
  uint64_t ObjectType;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31[3];

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 16;
  if (qword_1001A3088 != -1)
    swift_once(&qword_1001A3088, sub_1000907C4);
  v8 = sub_10000E8E8(v3, (uint64_t)qword_1001A69E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  v9 = swift_retain_n(a2, 2);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v31[0] = v27;
    *(_DWORD *)v13 = 136315138;
    swift_beginAccess(a2 + 16, v30, 0, 0);
    v28 = a2 + 16;
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (!Strong)
    {
      swift_release(a2);
      __break(1u);
      return;
    }
    v15 = (void *)Strong;
    ObjectType = swift_getObjectType(Strong);

    v17 = _typeName(_:qualified:)(ObjectType, 0);
    v19 = v18;
    v29 = sub_10001EFA4(v17, v18, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v13 + 4, v13 + 12);
    swift_release_n(a2, 2, v20);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "dismissPressed in %s", v13, 0xCu);
    v21 = v27;
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v28;
  }
  else
  {

    swift_release_n(a2, 2, v22);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_beginAccess(v7, v31, 0, 0);
  v23 = swift_unknownObjectWeakLoadStrong(v7);
  if (v23)
  {
    v24 = (void *)v23;
    v25 = (void *)swift_unknownObjectWeakLoadStrong(v23 + OBJC_IVAR____TtC18SharingViewService28B389CustomNameViewController_mainController);

    if (v25)
    {
      objc_msgSend(v25, "dismiss:", 5);

    }
  }
}

void sub_100091484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100048944(Strong, v4);

  }
}

void sub_1000914D4()
{
  char *v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService28B389CustomNameViewController_nameField];
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = sub_100117218(v2, v3, v4);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v7 = v6;

  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  objc_msgSend(v1, "setPlaceholder:", v8);

  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = objc_msgSend(v0, "contentView");
  objc_msgSend(v9, "addSubview:", v1);

  v33 = (void *)objc_opt_self(NSLayoutConstraint);
  v10 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100132270;
  v12 = objc_msgSend(v1, "topAnchor");
  v13 = objc_msgSend(v0, "contentView");
  v14 = objc_msgSend(v13, "mainContentGuide");

  v15 = objc_msgSend(v14, "topAnchor");
  v16 = objc_msgSend(v12, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v11 + 32) = v16;
  v17 = objc_msgSend(v1, "leadingAnchor");
  v18 = objc_msgSend(v0, "contentView");
  v19 = objc_msgSend(v18, "mainContentGuide");

  v20 = objc_msgSend(v19, "leadingAnchor");
  v21 = objc_msgSend(v17, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v11 + 40) = v21;
  v22 = objc_msgSend(v1, "trailingAnchor");
  v23 = objc_msgSend(v0, "contentView");
  v24 = objc_msgSend(v23, "mainContentGuide");

  v25 = objc_msgSend(v24, "trailingAnchor");
  v26 = objc_msgSend(v22, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v11 + 48) = v26;
  v27 = objc_msgSend(v1, "bottomAnchor");
  v28 = objc_msgSend(v0, "contentView");
  v29 = objc_msgSend(v28, "mainContentGuide");

  v30 = objc_msgSend(v29, "bottomAnchor");
  v31 = objc_msgSend(v27, "constraintLessThanOrEqualToAnchor:", v30);

  *(_QWORD *)(v11 + 56) = v31;
  specialized Array._endMutation()(v32);
  sub_10000E868();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v33, "activateConstraints:", isa);

}

uint64_t type metadata accessor for B389CustomNameViewController()
{
  return objc_opt_self(_TtC18SharingViewService28B389CustomNameViewController);
}

uint64_t sub_100091AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100091B18(uint64_t a1)
{
  uint64_t v1;

  sub_1000911DC(a1, v1);
}

uint64_t sub_100091B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100091B30(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100091B38(uint64_t a1)
{
  uint64_t v1;

  sub_100091484(a1, v1);
}

uint64_t sub_100091B40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100091B6C(uint64_t a1)
{
  uint64_t v1;

  sub_100090B6C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_100091B8C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;

  v2 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)objc_opt_self(NSJSONSerialization);
  v27 = a1;
  swift_bridgeObjectRetain(a1);
  v6 = sub_100006A6C(&qword_1001A6408);
  v7 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v27, v6);
  v27 = 0;
  v8 = objc_msgSend(v5, "dataWithJSONObject:options:error:", v7, 1, &v27);
  swift_unknownObjectRelease(v7);
  v9 = v27;
  if (!v8)
  {
    v17 = v9;
    v18 = _convertNSErrorToError(_:)(v9);

    swift_willThrow(v19);
    v27 = 0;
    v28 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    v20._countAndFlagsBits = 0xD00000000000001ALL;
    v20._object = (void *)0x800000010013C410;
    String.append(_:)(v20);
    v26 = v18;
    v21 = sub_100006A6C(&qword_1001A7C30);
    _print_unlocked<A, B>(_:_:)(&v26, &v27, v21, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v22._object = (void *)0x800000010013C430;
    v22._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v22);
    v26 = (uint64_t)a1;
    _print_unlocked<A, B>(_:_:)(&v26, &v27, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    swift_errorRelease(v18);
    return v27;
  }
  v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;

  static String.Encoding.utf8.getter(v13);
  v14 = String.init(data:encoding:)(v10, v12, v4);
  if (!v15)
  {
    v27 = 0;
    v28 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    v23._countAndFlagsBits = 0xD00000000000002ELL;
    v23._object = (void *)0x800000010013C450;
    String.append(_:)(v23);
    v26 = (uint64_t)a1;
    _print_unlocked<A, B>(_:_:)(&v26, &v27, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    sub_100007348(v10, v12);
    return v27;
  }
  v16 = v14;
  sub_100007348(v10, v12);
  return (id)v16;
}

uint64_t sub_100091E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A6A40);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A6A40);
  if (qword_1001A2ED0 != -1)
    swift_once(&qword_1001A2ED0, sub_100018C48);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD420);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100091EBC(void *a1, void (*a2)(void), uint64_t a3)
{
  char *v3;
  char *v4;
  id v8;
  void *v9;
  void *v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void (*v30)(void);
  uint64_t v31;
  uint64_t v32;

  if (a1)
  {
    v4 = v3;
    v8 = objc_msgSend(a1, "userInfo");
    if (v8)
    {
      v9 = v8;
      v10 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    }
    else
    {
      v10 = (void *)sub_10000434C((uint64_t)_swiftEmptyArrayStorage);
    }
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "setUserInfo:", isa);

    if (qword_1001A3090 != -1)
      swift_once(&qword_1001A3090, sub_100091E2C);
    v13 = type metadata accessor for Logger(0, v12);
    sub_10000E8E8(v13, (uint64_t)qword_1001A6A40);
    v14 = swift_bridgeObjectRetain(v10);
    v15 = Logger.logObject.getter(v14);
    v17 = static os_log_type_t.default.getter(v15, v16);
    if (os_log_type_enabled(v15, v17))
    {
      v30 = a2;
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = a3;
      v19 = swift_slowAlloc(32, -1);
      v32 = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = sub_100091B8C(v10);
      v22 = v21;
      v31 = sub_10001EFA4((uint64_t)v20, v21, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease_n(v10, 2);
      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v15, v17, "BoopToMeet Flow being configured {UserInfo: %s}", v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      v23 = v18;
      a2 = v30;
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v10, 2);
    }
    v24 = objc_msgSend(a1, "actions", v29);
    if (v24)
    {
      v25 = sub_100013194(0, (unint64_t *)&qword_1001A7E20, BSAction_ptr);
      v26 = sub_10009370C((unint64_t *)&qword_1001A7080, (unint64_t *)&qword_1001A7E20, BSAction_ptr);
      v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v24, v25, v26);

      v24 = (id)sub_100007CF4(v27);
      swift_bridgeObjectRelease(v27);
    }
    v28 = *(void **)&v4[OBJC_IVAR___BoopToMeetFlowViewController_replyAction];
    *(_QWORD *)&v4[OBJC_IVAR___BoopToMeetFlowViewController_replyAction] = v24;

    if (a2)
    {
      a2();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_100092268(int a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  id v36;
  void *v37;
  void (*v38)(char *, uint64_t);
  id result;
  id v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  objc_super v44;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v5 = type metadata accessor for CNBoopSessionViewOld(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v41 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v41 - v13;
  v15 = objc_msgSend(v1, "userInfo");
  if (v15
    && (v17 = v15,
        v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v17, v19 = *(_QWORD *)(v18 + 16), swift_bridgeObjectRelease(v18), v19))
  {
    v43 = a1;
    v42 = v6;
    if (qword_1001A3090 != -1)
      swift_once(&qword_1001A3090, sub_100091E2C);
    v20 = type metadata accessor for Logger(0, v16);
    v21 = sub_10000E8E8(v20, (uint64_t)qword_1001A6A40);
    v22 = Logger.logObject.getter(v21);
    v24 = static os_log_type_t.default.getter(v22, v23);
    if (os_log_type_enabled(v22, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v24, "BoopToMeetFlowViewController: viewDidAppear", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    v44.receiver = v2;
    v44.super_class = ObjectType;
    objc_msgSendSuper2(&v44, "viewDidAppear:", v43 & 1);
    v26 = swift_allocObject(&unk_10017B4F8, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16, v2);
    v27 = swift_retain(v26);
    v28.n128_f64[0] = static CNBoopSessionViewOld.initFromNFC(with:)(sub_1000936E0, v26, v27);
    swift_release_n(v26, 2, v28);
    v34 = v42;
    v35 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    v35(v12, v14, v5);
    v36 = objc_allocWithZone((Class)sub_100006A6C(&qword_1001A6B08));
    v35(v9, v12, v5);
    v37 = (void *)UIHostingController.init(rootView:)(v9);
    v38 = *(void (**)(char *, uint64_t))(v34 + 8);
    v38(v12, v5);
    objc_msgSend(v37, "setModalPresentationStyle:", 0);
    objc_msgSend(v2, "presentViewController:animated:completion:", v37, 1, 0);

    v38(v14, v5);
    result = (id)sub_100064288();
    if (result)
    {
      v40 = result;
      objc_msgSend(result, "setDesiredHardwareButtonEvents:", 16);
      return (id)swift_unknownObjectRelease(v40);
    }
  }
  else
  {
    if (qword_1001A3090 != -1)
      swift_once(&qword_1001A3090, sub_100091E2C);
    v29 = type metadata accessor for Logger(0, v16);
    v30 = sub_10000E8E8(v29, (uint64_t)qword_1001A6A40);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "BoopToMeetFlowViewController dismissing: UserInfo empty", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }

    return objc_msgSend(v2, "dismiss:", 0);
  }
  return result;
}

void sub_100092804(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD aBlock[5];
  uint64_t v12;
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = swift_allocObject(&unk_10017B4F8, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16, v4);
    aBlock[4] = sub_1000936B0;
    v12 = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001BB50;
    aBlock[3] = &unk_10017B560;
    v6 = _Block_copy(aBlock);
    -[NSObject dismissViewControllerAnimated:completion:](v4, "dismissViewControllerAnimated:completion:", 1, v6, swift_release(v12).n128_f64[0]);
    _Block_release(v6);
  }
  else
  {
    if (qword_1001A3090 != -1)
      swift_once(&qword_1001A3090, sub_100091E2C);
    v7 = type metadata accessor for Logger(0, v3);
    v8 = sub_10000E8E8(v7, (uint64_t)qword_1001A6A40);
    v4 = Logger.logObject.getter(v8);
    v9 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v4, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v9, "Self(BoopToMeetFlowViewController) is expected in the dismissViewAction, however self is nil, exiting", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }
  }

}

uint64_t sub_100092994(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  uint64_t v5;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  v5 = sub_100093610(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)((char *)v2 + qword_1001AD708) - 8) + 8))(a1);
  return v5;
}

void sub_100092A34(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  objc_super v17;

  v2 = v1;
  v17.receiver = v2;
  v17.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v17, "viewDidDisappear:", a1 & 1);
  if (qword_1001A3090 != -1)
    swift_once(&qword_1001A3090, sub_100091E2C);
  v5 = type metadata accessor for Logger(0, v4);
  v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A6A40);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "BoopToMeetFlowViewController: viewDidDisappear", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v12 = *(void **)&v2[OBJC_IVAR___BoopToMeetFlowViewController_replyAction];
  if (v12)
  {
    v13 = v12;
    if (objc_msgSend(v13, "canSendResponse"))
    {
      v14 = objc_msgSend((id)objc_opt_self(BSActionResponse), "responseWithInfo:", 0);
      objc_msgSend(v13, "sendResponse:", v14);

      goto LABEL_11;
    }

  }
  v14 = Logger.logObject.getter(v11);
  v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "repy action can't be send from the remote alert", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }
LABEL_11:

}

void sub_100092D74(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[5];
  uint64_t v39;
  _QWORD v40[5];

  if (!a1)
    goto LABEL_43;
  v2 = v1;
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v4 = a1;
    swift_bridgeObjectRetain(a1);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_100013194(0, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
    v7 = sub_10009370C((unint64_t *)&qword_1001A5610, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
    v8 = Set.Iterator.init(_cocoa:)(v40, v5, v6, v7);
    v3 = v40[0];
    v36 = v40[1];
    v9 = v40[2];
    v10 = v40[3];
    v11 = v40[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v36 = a1 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v10 = 0;
  }
  v35 = v9;
  v15 = (unint64_t)(v9 + 64) >> 6;
  while (v3 < 0)
  {
    v19 = __CocoaSet.Iterator.next()(v8);
    if (!v19)
      goto LABEL_41;
    v20 = v19;
    v37 = v19;
    v21 = sub_100013194(0, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(aBlock, &v37, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
    v22 = (id)aBlock[0];
    swift_unknownObjectRelease(v20);
    v18 = v10;
    v16 = v11;
    if (!v22)
      goto LABEL_41;
LABEL_35:
    if ((objc_msgSend(v22, "events", v35) & 0x10) != 0)
    {
      if (qword_1001A3090 != -1)
        swift_once(&qword_1001A3090, sub_100091E2C);
      v27 = type metadata accessor for Logger(0, v26);
      v28 = sub_10000E8E8(v27, (uint64_t)qword_1001A6A40);
      v29 = Logger.logObject.getter(v28);
      v31 = static os_log_type_t.default.getter(v29, v30);
      if (os_log_type_enabled(v29, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v31, "BoopToMeetFlowViewController: user initiated dismiss", v32, 2u);
        swift_slowDealloc(v32, -1, -1);
      }

      v33 = swift_allocObject(&unk_10017B4F8, 24, 7);
      swift_unknownObjectWeakInit(v33 + 16, v2);
      aBlock[4] = sub_1000936B0;
      v39 = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001BB50;
      aBlock[3] = &unk_10017B510;
      v34 = _Block_copy(aBlock);
      objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v34, swift_release(v39).n128_f64[0]);

      _Block_release(v34);
    }
    else
    {

    }
    v10 = v18;
    v11 = v16;
  }
  if (v11)
  {
    v16 = (v11 - 1) & v11;
    v17 = __clz(__rbit64(v11)) | (v10 << 6);
    v18 = v10;
LABEL_34:
    v22 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v17);
    if (!v22)
      goto LABEL_41;
    goto LABEL_35;
  }
  v23 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v23 >= v15)
      goto LABEL_41;
    v24 = *(_QWORD *)(v36 + 8 * v23);
    v18 = v10 + 1;
    if (!v24)
    {
      v18 = v10 + 2;
      if (v10 + 2 >= v15)
        goto LABEL_41;
      v24 = *(_QWORD *)(v36 + 8 * v18);
      if (!v24)
      {
        v18 = v10 + 3;
        if (v10 + 3 >= v15)
          goto LABEL_41;
        v24 = *(_QWORD *)(v36 + 8 * v18);
        if (!v24)
        {
          v18 = v10 + 4;
          if (v10 + 4 >= v15)
            goto LABEL_41;
          v24 = *(_QWORD *)(v36 + 8 * v18);
          if (!v24)
          {
            v25 = v10 + 5;
            while (v15 != v25)
            {
              v24 = *(_QWORD *)(v36 + 8 * v25++);
              if (v24)
              {
                v18 = v25 - 1;
                goto LABEL_33;
              }
            }
LABEL_41:
            sub_10002413C(v3);
            return;
          }
        }
      }
    }
LABEL_33:
    v16 = (v24 - 1) & v24;
    v17 = __clz(__rbit64(v24)) + (v18 << 6);
    goto LABEL_34;
  }
  __break(1u);
LABEL_43:
  __break(1u);
}

void sub_10009317C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = (void *)sub_100064288();

    if (v4)
    {
      objc_msgSend(v4, "invalidate");
      swift_unknownObjectRelease(v4);
    }
  }
}

uint64_t type metadata accessor for BoopToMeetFlowViewController()
{
  return objc_opt_self(BoopToMeetFlowViewController);
}

uint64_t sub_1000933CC(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, qword_1001AD708 + a1 + 16);
}

uint64_t sub_10009340C()
{
  return 1;
}

void *sub_100093414(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_100093454(a1, a2);
}

void *sub_100093454(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  uint64_t v13;

  v5 = *(_QWORD *)((swift_isaMask & *v2) + qword_1001AD708);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = (char *)&v13 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v13 - v7);
  v9 = (void *)UIHostingController.init(coder:rootView:)(a1, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11 = v9;
  v10(a2, v5);
  if (v9)

  return v9;
}

id sub_100093514(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id v7;
  objc_super v9;

  v6 = (objc_class *)type metadata accessor for SecureHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + qword_1001AD708), *(_QWORD *)((swift_isaMask & *v4) + qword_1001AD708 + 8), a4);
  v9.receiver = v4;
  v9.super_class = v6;
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

id sub_100093588(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  return sub_100093514(v3, v4, v5, v6);
}

id sub_1000935AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for SecureHostingController(0, *(_QWORD *)((swift_isaMask & *v4) + qword_1001AD708), *(_QWORD *)((swift_isaMask & *v4) + qword_1001AD708 + 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t type metadata accessor for SecureHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100017500(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SecureHostingController);
}

uint64_t sub_100093610(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  __chkstk_darwin(a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return UIHostingController.init(rootView:)(v2);
}

uint64_t sub_10009368C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1000936B0()
{
  uint64_t v0;

  sub_10009317C(v0);
}

uint64_t sub_1000936C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000936D8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000936E0()
{
  uint64_t v0;

  sub_100092804(v0);
}

uint64_t sub_1000936E8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009370C(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100013194(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_10009375C(void *a1, char a2, double a3)
{
  id v6;
  id result;
  void *v8;
  id v9;
  id v10;
  id v11;
  double v12;
  id v13;
  id v14;
  double v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  id v32;
  id v33;
  double v34;
  double v35;
  id v36;
  id v37;
  id v38;
  double v39;
  id v40;
  double v41;
  id v42;
  id v43;
  double v44;
  void *v45;

  v6 = objc_msgSend(objc_allocWithZone((Class)SVSCardContainerView), "init");
  objc_msgSend(v6, "setJustBeAContainer:", a2 & 1);
  result = objc_msgSend(a1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  v8 = result;
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v8, "addSubview:", v6);
  v9 = objc_msgSend(v6, "centerXAnchor");
  v10 = objc_msgSend(v8, "centerXAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  LODWORD(v12) = 1148846080;
  objc_msgSend(v11, "setPriority:", v12);
  v45 = v11;
  objc_msgSend(v11, "setActive:", 1);
  v13 = objc_msgSend(v6, "heightAnchor");
  v14 = objc_msgSend(v13, "constraintEqualToConstant:", a3);

  LODWORD(v15) = 1148846080;
  objc_msgSend(v14, "setPriority:", v15);
  objc_msgSend(v14, "setActive:", 1);
  v16 = objc_msgSend(a1, "traitCollection");
  v17 = objc_msgSend(v16, "horizontalSizeClass");

  v18 = objc_msgSend(a1, "traitCollection");
  v19 = objc_msgSend(v18, "verticalSizeClass");

  if ((a2 & 1) != 0)
    goto LABEL_7;
  v20 = objc_msgSend(a1, "traitCollection");
  objc_msgSend(v20, "displayCornerRadius");
  v22 = v21;

  if (qword_1001A30B0 != -1)
    swift_once(&qword_1001A30B0, sub_1000990EC);
  v23 = *(double *)&qword_1001AD720;
  result = objc_msgSend(a1, "view");
  if (!result)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  v24 = result;
  objc_msgSend(result, "_setContinuousCornerRadius:", sub_10009559C(PRXCardDefaultCornerRadius, v22 - v23));

LABEL_7:
  v25 = (void *)objc_opt_self(UIColor);
  v26 = v6;
  v27 = objc_msgSend(v25, "whiteColor");
  objc_msgSend(v26, "setBackgroundColor:", v27);

  if (v19 == (id)2 && v17 == (id)2)
  {
    v28 = objc_msgSend(v26, "centerYAnchor");
    v29 = objc_msgSend(v8, "centerYAnchor");
    v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

    LODWORD(v31) = 1148846080;
    objc_msgSend(v30, "setPriority:", v31);
    objc_msgSend(v30, "setActive:", 1);
    v32 = objc_msgSend(v26, "widthAnchor");
    sub_10009910C();
    v33 = objc_msgSend(v32, "constraintEqualToConstant:");

    LODWORD(v34) = 1148846080;
    objc_msgSend(v33, "setPriority:", v34);
    objc_msgSend(v33, "setActive:", 1);
  }
  else
  {
    v35 = 0.0;
    if ((a2 & 1) == 0)
    {
      if (qword_1001A30D8 != -1)
        swift_once(&qword_1001A30D8, sub_1000992D4);
      v35 = *(double *)&qword_1001AD740;
    }
    v36 = objc_msgSend(v8, "bottomAnchor");
    v37 = objc_msgSend(v26, "bottomAnchor");
    v38 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v37, v35);

    LODWORD(v39) = 1148846080;
    objc_msgSend(v38, "setPriority:", v39);
    objc_msgSend(v38, "setActive:", 1);
    objc_msgSend(a1, "setBottomMarginConstraint:", v38);
    v40 = objc_msgSend(v26, "widthAnchor");
    sub_10009910C();
    v30 = objc_msgSend(v40, "constraintLessThanOrEqualToConstant:");

    LODWORD(v41) = 1148846080;
    objc_msgSend(v30, "setPriority:", v41);
    objc_msgSend(v30, "setActive:", 1);
    v42 = objc_msgSend(v26, "widthAnchor");
    v43 = objc_msgSend(v8, "widthAnchor");
    v33 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, v35 * -2.0);

    LODWORD(v44) = 1148846080;
    objc_msgSend(v33, "setPriority:", v44);
    objc_msgSend(v33, "setActive:", 1);

  }
  objc_msgSend(a1, "setContainerView:", v26);

  return v26;
}

uint64_t sub_100093D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A6B10);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A6B10);
  if (qword_1001A2ED8 != -1)
    swift_once(&qword_1001A2ED8, sub_100018C6C);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD438);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100093E20(char a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  void *v6;
  id v7;
  SVSCardContainerView *v8;
  UIPickerView v9;
  char *v10;
  uint64_t v11;
  void *Strong;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  double v21;
  NSString v22;
  NSString v23;
  uint64_t v24;
  uint64_t v25;
  SVSCardContainerView *v26;
  UILabel v27;
  id v28;
  NSString v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  SVSCardContainerView *v53;
  UIButton v54;
  char *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  void *v61;
  objc_super v62;

  v2 = v1;
  if (qword_1001A30A8 != -1)
    swift_once(&qword_1001A30A8, sub_1000990D8);
  v4 = sub_10009375C(v2, 0, *(double *)&qword_1001AD718);
  v6 = v5;

  v62.receiver = v2;
  v62.super_class = (Class)type metadata accessor for B389RolePickerViewController();
  objc_msgSendSuper2(&v62, "viewWillAppear:", a1 & 1);
  v7 = objc_msgSend(v2, "containerView");
  objc_msgSend(v7, "setSwipeDismissible:", 0);

  objc_msgSend(v2, "setModalPresentationStyle:", 4);
  v8 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v9.super.super.super.isa = setupHeightlessPicker(inContainerView:)(v8).super.super.super.isa;

  v10 = &v2[OBJC_IVAR____TtC18SharingViewService28B389RolePickerViewController_rolePickerView];
  v11 = swift_unknownObjectWeakAssign(&v2[OBJC_IVAR____TtC18SharingViewService28B389RolePickerViewController_rolePickerView], v9.super.super.super.isa);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_23;
  }
  v13 = Strong;
  objc_msgSend(Strong, "setDataSource:", v2);

  v14 = (void *)swift_unknownObjectWeakLoadStrong(v10);
  if (!v14)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v15 = v14;
  objc_msgSend(v14, "setDelegate:", v2);

  v16 = objc_msgSend(v2, "containerView");
  v17 = sub_1000992F4(v16);
  v18 = objc_msgSend(v17, "bottomAnchor");
  v19 = objc_msgSend(v16, "bottomAnchor");
  if (qword_1001A30C8 != -1)
    swift_once(&qword_1001A30C8, sub_100099228);
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, -*((double *)&xmmword_1001A6F78 + 1));

  LODWORD(v21) = 1148846080;
  objc_msgSend(v20, "setPriority:", v21);
  objc_msgSend(v20, "setActive:", 1);

  objc_msgSend(v17, "addTarget:action:forControlEvents:", v2, "continuePressed:", 64);
  v22 = String._bridgeToObjectiveC()();
  v23 = sub_100117314(v22);

  if (!v23)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v25 = v24;
    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
  }
  objc_msgSend(v17, "setTitle:forState:", v23, 0);

  v26 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v27.super.super.super.isa = setupTitleLabel(inContainerView:textAlignment:)(v26, NSTextAlignmentCenter).super.super.super.isa;

  v28 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v29 = String._bridgeToObjectiveC()();
  v30 = String._bridgeToObjectiveC()();
  v31 = sub_100117218(v28, v29, v30);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v33 = v32;

  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v33);
  -[objc_class setText:](v27.super.super.super.isa, "setText:", v34);

  v35 = (void *)objc_opt_self(UIFont);
  v36 = objc_msgSend(v35, "systemFontOfSize:", 30.0);
  v37 = objc_msgSend(v36, "fontDescriptor");
  v38 = objc_msgSend(v37, "fontDescriptorWithSymbolicTraits:", 2);

  v39 = sub_100006A6C((uint64_t *)&unk_1001A6CF0);
  Optional.unwrap(_:file:line:)(&v61, sub_100099650, 0, "SharingViewService/SVSCardConfiguration.swift", 45, 2, 260, v39);

  v40 = v61;
  objc_msgSend(v36, "pointSize");
  v41 = objc_msgSend(v35, "fontWithDescriptor:size:", v40);

  -[objc_class setFont:](v27.super.super.super.isa, "setFont:", v41);
  v42 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  -[objc_class setTextColor:](v27.super.super.super.isa, "setTextColor:", v42);

  v43 = (void *)swift_unknownObjectWeakLoadStrong(v10);
  if (!v43)
    goto LABEL_24;
  v44 = v43;
  v45 = objc_msgSend(v43, "topAnchor");

  v46 = -[objc_class bottomAnchor](v27.super.super.super.isa, "bottomAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, 14.5);

  objc_msgSend(v47, "setActive:", 1);
  v48 = objc_msgSend(v17, "topAnchor");
  v49 = (void *)swift_unknownObjectWeakLoadStrong(v10);
  if (!v49)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v50 = v49;
  v51 = objc_msgSend(v49, "bottomAnchor");

  v52 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v51, 11.0);
  objc_msgSend(v52, "setActive:", 1);

  v53 = (SVSCardContainerView *)objc_msgSend(v2, "containerView");
  v54.super.super.super.super.isa = setupXButton(inContainerView:)(v53).super.super.super.super.isa;

  -[objc_class addTarget:action:forControlEvents:](v54.super.super.super.super.isa, "addTarget:action:forControlEvents:", v2, "dismissPressed:", 64);
  v55 = (char *)objc_msgSend(v2, "mainController");
  if (!v55)
  {
LABEL_26:
    __break(1u);
    return;
  }
  v56 = v55;
  v57 = *(_QWORD *)&v55[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories];
  if (v57)
  {
    if ((unint64_t)v57 >> 62)
    {
      if (v57 >= 0)
        v60 = v57 & 0xFFFFFFFFFFFFFF8;
      else
        v60 = *(_QWORD *)&v55[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories];
      swift_bridgeObjectRetain(*(_QWORD *)&v55[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories]);
      v58 = _CocoaArrayWrapper.endIndex.getter(v60);
    }
    else
    {
      v58 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)&v55[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories]);
    }

    swift_bridgeObjectRelease(v57);
    v59 = v58 != 0;
  }
  else
  {

    v59 = 0;
  }
  v2[OBJC_IVAR____TtC18SharingViewService28B389RolePickerViewController_rolesLoaded] = v59;
}

void sub_100094620()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  void *Strong;
  uint64_t v7;
  id v8;

  v1 = (char *)objc_msgSend(v0, "mainController");
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories];
    if (v3)
    {
      if ((unint64_t)v3 >> 62)
      {
        if (v3 >= 0)
          v7 = v3 & 0xFFFFFFFFFFFFFF8;
        else
          v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories];
        swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories]);
        v4 = _CocoaArrayWrapper.endIndex.getter(v7);
        swift_bridgeObjectRelease(v3);
      }
      else
      {
        v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v5 = v4 != 0;
    }
    else
    {
      v5 = 0;
    }
    v0[OBJC_IVAR____TtC18SharingViewService28B389RolePickerViewController_rolesLoaded] = v5;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC18SharingViewService28B389RolePickerViewController_rolePickerView]);
    if (Strong)
    {
      v8 = Strong;
      objc_msgSend(Strong, "reloadAllComponents");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100094754()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  void *Strong;
  void *v5;
  id v6;
  char *v7;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  unint64_t v36;
  char v37;
  id v38;
  id v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  char *v45;
  char *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;

  v1 = v0;
  v2 = (char *)objc_msgSend(v0, "mainController");
  if (!v2)
    goto LABEL_45;
  v3 = v2;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC18SharingViewService28B389RolePickerViewController_rolePickerView]);
  if (!Strong)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v5 = Strong;
  v6 = objc_msgSend(Strong, "selectedRowInComponent:", 0);

  v7 = &v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex];
  *(_QWORD *)v7 = v6;
  v7[8] = 0;

  v8 = objc_msgSend(v1, "mainController");
  if (!v8)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v9 = v8;
  v10 = sub_100030BA0();
  v12 = v11;

  if (qword_1001A3098 != -1)
    swift_once(&qword_1001A3098, sub_100093D5C);
  v14 = type metadata accessor for Logger(0, v13);
  v15 = sub_10000E8E8(v14, (uint64_t)qword_1001A6B10);
  v16 = swift_bridgeObjectRetain(v12);
  v51 = v15;
  v17 = Logger.logObject.getter(v16);
  v19 = static os_log_type_t.default.getter(v17, v18);
  if (os_log_type_enabled(v17, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v54 = v21;
    *(_DWORD *)v20 = 136315138;
    if (v12)
    {
      v22 = v12;
    }
    else
    {
      v52 = 0;
      v53 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(0xE000000000000000);
      v22 = 0x8000000100136820;
      v10 = 0xD000000000000015;
    }
    swift_bridgeObjectRetain(v12);
    v52 = (_QWORD *)sub_10001EFA4(v10, v22, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease_n(v12, 2);
    swift_bridgeObjectRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v17, v19, "continuePressed, name = %s", v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v12, 2);
  }
  v23 = (char *)objc_msgSend(v1, "mainController", v51);
  if (!v23)
    goto LABEL_48;
  v24 = v23;
  v25 = *(_QWORD *)&v23[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories];
  swift_bridgeObjectRetain(v25);

  if (!v25)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v52 = _swiftEmptyArrayStorage;
  if ((unint64_t)v25 >> 62)
  {
    if (v25 >= 0)
      v34 = v25 & 0xFFFFFFFFFFFFFF8;
    else
      v34 = v25;
    swift_bridgeObjectRetain(v25);
    v26 = _CocoaArrayWrapper.endIndex.getter(v34);
    if (v26)
      goto LABEL_16;
LABEL_27:
    swift_bridgeObjectRelease_n(v25, 2);
    v33 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v25);
  if (!v26)
    goto LABEL_27;
LABEL_16:
  if (v26 < 1)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v27 = 0;
  do
  {
    if ((v25 & 0xC000000000000001) != 0)
      v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v25);
    else
      v28 = *(id *)(v25 + 8 * v27 + 32);
    v29 = v28;
    ++v27;
    v30 = objc_msgSend(v28, "roles");
    v31 = sub_10007FCB8();
    v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);

    sub_1000CCFDC(v32);
  }
  while (v26 != v27);
  swift_bridgeObjectRelease_n(v25, 2);
  v33 = (unint64_t)v52;
LABEL_28:
  v35 = objc_msgSend(v1, "mainController");
  if (!v35)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v36 = *(_QWORD *)&v35[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex];
  v37 = v35[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_selectedRoleIndex + 8];

  if ((v37 & 1) != 0)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if ((v36 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v36 >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v38 = *(id *)(v33 + 8 * v36 + 32);
  swift_bridgeObjectRelease(v33);
  v39 = objc_msgSend(v38, "roleId");

  if (v39 != (id)SPBeaconRoleIdOther)
  {
    v50 = (char *)objc_msgSend(v1, "mainController");
    if (v50)
    {
      v46 = v50;
      sub_100048AB8();
      goto LABEL_41;
    }
    goto LABEL_54;
  }
  v41 = Logger.logObject.getter(v40);
  v43 = static os_log_type_t.default.getter(v41, v42);
  if (os_log_type_enabled(v41, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v44 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v43, "Showing name and emoji view", v44, 2u);
    swift_slowDealloc(v44, -1, -1);
  }

  v45 = (char *)objc_msgSend(v1, "mainController");
  if (!v45)
    goto LABEL_52;
  v46 = v45;
  v47 = *(void **)&v45[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_vcNav];
  if (!v47)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v48 = *(void **)&v46[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_namingVC];
  if (v48)
  {
    sub_10011757C(v47, v48);
    sub_100031994(v49);
LABEL_41:

    return;
  }
LABEL_55:
  __break(1u);
}

id sub_100094E60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for B389RolePickerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for B389RolePickerViewController()
{
  return objc_opt_self(_TtC18SharingViewService28B389RolePickerViewController);
}

void sub_100094F90(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  if (qword_1001A3098 != -1)
    swift_once(&qword_1001A3098, sub_100093D5C);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_10000E8E8(v4, (uint64_t)qword_1001A6B10);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.default.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v9 = 134217984;
    v12 = 58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v9 + 4, v9 + 12);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "dismissPressed in %ld", v9, 0xCu);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = objc_msgSend(v3, "mainController");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "dismiss:", 5);

  }
}

void sub_1000950D0()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC18SharingViewService28B389RolePickerViewController_rolesLoaded) == 1)
  {
    if (SFIsDevicePhone())
    {
      v1 = objc_msgSend(v0, "mainController");
      if (v1)
      {
        v2 = v1;
        v3 = swift_allocObject(&unk_10017B5E0, 24, 7);
        *(_QWORD *)(v3 + 16) = v0;
        sub_10003672C(v0, (uint64_t)sub_10009557C, v3);

        swift_release(v3);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      sub_100094754();
    }
  }
}

char *sub_10009518C()
{
  void *v0;
  char *result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  result = (char *)objc_msgSend(v0, "mainController");
  if (!result)
    goto LABEL_26;
  v2 = result;
  v3 = *(_QWORD *)&result[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories];
  if (v3)
    v4 = v3;
  else
    v4 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v13 = v4;
    else
      v13 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v4);
    result = (char *)_CocoaArrayWrapper.endIndex.getter(v13);
    v5 = (uint64_t)result;
    if (result)
      goto LABEL_7;
LABEL_20:
    swift_bridgeObjectRelease_n(v4, 2);
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_14:
      v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);

LABEL_15:
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      return (char *)v12;
    }
LABEL_21:
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v14 = _swiftEmptyArrayStorage;
    else
      v14 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v12 = _CocoaArrayWrapper.endIndex.getter(v14);

    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    goto LABEL_15;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  result = (char *)swift_bridgeObjectRetain(v4);
  if (!v5)
    goto LABEL_20;
LABEL_7:
  if (v5 >= 1)
  {
    v6 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      else
        v7 = *(id *)(v4 + 8 * v6 + 32);
      v8 = v7;
      ++v6;
      v9 = objc_msgSend(v7, "roles");
      v10 = sub_10007FCB8();
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

      sub_1000CCFDC(v11);
    }
    while (v5 != v6);
    swift_bridgeObjectRelease_n(v4, 2);
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_14;
    goto LABEL_21;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void sub_100095364(unint64_t a1)
{
  void *v1;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;

  v3 = (char *)objc_msgSend(v1, "mainController");
  if (!v3)
    goto LABEL_22;
  v4 = v3;
  v5 = *(_QWORD *)&v3[OBJC_IVAR____TtC18SharingViewService27B389SetupMainViewController_roleCategories];
  swift_bridgeObjectRetain(v5);

  if (v5)
  {
    if ((unint64_t)v5 >> 62)
    {
      if (v5 >= 0)
        v15 = v5 & 0xFFFFFFFFFFFFFF8;
      else
        v15 = v5;
      swift_bridgeObjectRetain(v5);
      v6 = _CocoaArrayWrapper.endIndex.getter(v15);
      if (v6)
      {
LABEL_5:
        if (v6 < 1)
        {
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        v7 = 0;
        do
        {
          if ((v5 & 0xC000000000000001) != 0)
            v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
          else
            v8 = *(id *)(v5 + 8 * v7 + 32);
          v9 = v8;
          ++v7;
          v10 = objc_msgSend(v8, "roles");
          v11 = sub_10007FCB8();
          v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

          sub_1000CCFDC(v12);
        }
        while (v6 != v7);
        swift_bridgeObjectRelease_n(v5, 2);
        if ((a1 & 0x8000000000000000) == 0)
          goto LABEL_12;
        goto LABEL_19;
      }
    }
    else
    {
      v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v5);
      if (v6)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease_n(v5, 2);
    if ((a1 & 0x8000000000000000) == 0)
    {
LABEL_12:
      if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        v13 = (id)_swiftEmptyArrayStorage[a1 + 4];
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v14 = objc_msgSend(v13, "role");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v14);

        return;
      }
      goto LABEL_20;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_100095558()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10009557C()
{
  sub_100094754();
}

double sub_10009559C(double a1, double a2)
{
  return fmax(a1, a2);
}

uint64_t sub_1000955A4(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  Class isa;
  uint64_t result;
  objc_super v41;

  v7 = OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageConfiguration;
  v8 = (void *)objc_opt_self(UIFont);
  v9 = v3;
  v10 = objc_msgSend(v8, "systemFontOfSize:", 100.0);
  v11 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v10);

  *(_QWORD *)&v3[v7] = v11;
  v12 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageView] = v12;
  v13 = objc_msgSend(v12, "tintColor");
  if (v13)
  {
    *(_QWORD *)&v9[OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageTintColor] = v13;
    v14 = &v9[OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageDefinition];
    *(_QWORD *)v14 = a1;
    *((_QWORD *)v14 + 1) = a2;
    v14[16] = a3 & 1;

    v41.receiver = v9;
    v41.super_class = (Class)type metadata accessor for AuthenticateAccountsImageCardContentView();
    v15 = (char *)objc_msgSendSuper2(&v41, "initWithCardStyle:", 0);
    v16 = OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageView;
    v17 = *(void **)&v15[OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageView];
    v18 = v15;
    objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v17, "setContentMode:", 4);
    objc_msgSend(v18, "addSubview:", v17);
    v19 = (void *)objc_opt_self(NSLayoutConstraint);
    v20 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
    v21 = swift_allocObject(v20, 64, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100132270;
    v22 = objc_msgSend(v17, "centerXAnchor");
    v23 = objc_msgSend(v18, "mainContentGuide");
    v24 = objc_msgSend(v23, "centerXAnchor");

    v25 = objc_msgSend(v22, "constraintEqualToAnchor:", v24);
    *(_QWORD *)(v21 + 32) = v25;
    v26 = objc_msgSend(*(id *)&v15[v16], "centerYAnchor");
    v27 = objc_msgSend(v18, "mainContentGuide");
    v28 = objc_msgSend(v27, "centerYAnchor");

    v29 = objc_msgSend(v26, "constraintEqualToAnchor:", v28);
    *(_QWORD *)(v21 + 40) = v29;
    v30 = objc_msgSend(*(id *)&v15[v16], "topAnchor");
    v31 = objc_msgSend(v18, "mainContentGuide");
    v32 = objc_msgSend(v31, "topAnchor");

    v33 = objc_msgSend(v30, "constraintGreaterThanOrEqualToAnchor:", v32);
    *(_QWORD *)(v21 + 48) = v33;
    v34 = objc_msgSend(*(id *)&v15[v16], "bottomAnchor");
    v35 = objc_msgSend(v18, "mainContentGuide");
    v36 = objc_msgSend(v35, "bottomAnchor");

    v37 = objc_msgSend(v34, "constraintLessThanOrEqualToAnchor:", v36);
    *(_QWORD *)(v21 + 56) = v37;
    specialized Array._endMutation()(v38);
    sub_10000E868();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v21);
    objc_msgSend(v19, "activateConstraints:", isa);

    sub_100095AA4();
    return (uint64_t)v18;
  }
  else
  {
    result = sub_10007F198(a1, a2);
    __break(1u);
  }
  return result;
}

void sub_100095AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  NSString v4;
  void *v5;
  NSString v6;
  id v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageDefinition);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageDefinition
                 + 8);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageView);
  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageDefinition
                 + 16) & 1) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageDefinition
                                       + 8));
    v4 = String._bridgeToObjectiveC()();
    sub_10007F198(v1, v2);
    v7 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v4);
  }
  else
  {
    v5 = *(void **)(v0
                  + OBJC_IVAR____TtC18SharingViewService40AuthenticateAccountsImageCardContentView_imageConfiguration);
    sub_10007F0F8(v1, v2);
    v4 = v5;
    v6 = String._bridgeToObjectiveC()();
    sub_10007F198(v1, v2);
    v7 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v6, v4);

  }
  objc_msgSend(v3, "setImage:", v7);

}

id sub_100095C34()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AuthenticateAccountsImageCardContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AuthenticateAccountsImageCardContentView()
{
  return objc_opt_self(_TtC18SharingViewService40AuthenticateAccountsImageCardContentView);
}

uint64_t sub_100095CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Logger(0, a2);
  sub_10000E96C(v2, qword_1001A6D50);
  v3 = sub_10000E8E8(v2, (uint64_t)qword_1001A6D50);
  if (qword_1001A2EF0 != -1)
    swift_once(&qword_1001A2EF0, sub_100018CB8);
  v4 = sub_10000E8E8(v2, (uint64_t)qword_1001AD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

void sub_100095D74(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  NSObject *oslog;
  _BYTE v19[32];

  if (*(_BYTE *)(v2 + 48) == 1)
  {
    if (qword_1001A30A0 != -1)
      swift_once(&qword_1001A30A0, sub_100095CE4);
    v3 = type metadata accessor for Logger(0, a2);
    v4 = sub_10000E8E8(v3, (uint64_t)qword_1001A6D50);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Flow already finished", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

  }
  else
  {
    v7 = v2;
    *(_BYTE *)(v2 + 48) = 1;
    v9 = *(_QWORD *)(v2 + 64);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56));
    v11 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v19, ObjectType, v9);
    *(_DWORD *)(v12 + *(int *)(type metadata accessor for PasswordSharingModel(0) + 64)) = a1;
    v11(v19, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v7 + 16);
    if (Strong)
    {
      v14 = Strong;
      v15 = *(void **)(Strong
                     + OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_prxContainerViewController);
      if (v15 && (v16 = objc_msgSend(v15, "mainNavigationController")) != 0)
      {
        v17 = v16;
        objc_msgSend(v16, "dismissViewControllerAnimated:completion:", 1, 0);
        swift_unknownObjectRelease(v14);

      }
      else
      {
        swift_unknownObjectRelease(v14);
      }
    }
  }
}

void sub_100095F28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  Swift::String v19;
  void *object;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  uint64_t v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t ObjectType;
  void (*v54)(uint64_t *, _QWORD);
  uint64_t v55;
  uint64_t Strong;
  uint64_t v57;
  void *v58;
  id v59;
  void *v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[4];
  uint64_t v65;
  _QWORD v66[4];

  v3 = v2;
  if (qword_1001A30A0 != -1)
LABEL_55:
    swift_once(&qword_1001A30A0, sub_100095CE4);
  v5 = type metadata accessor for Logger(0, a2);
  sub_10000E8E8(v5, (uint64_t)qword_1001A6D50);
  v6 = swift_bridgeObjectRetain_n(a1, 2);
  v7 = Logger.logObject.getter(v6);
  v9 = static os_log_type_t.default.getter(v7, v8);
  if (os_log_type_enabled(v7, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v64[0] = v11;
    *(_DWORD *)v10 = 136315138;
    if (a1)
    {
      v12 = sub_100013194(0, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
      v13 = sub_10005B9EC();
      v14 = swift_bridgeObjectRetain(a1);
      v15 = Set.description.getter(v14, v12, v13);
      v17 = v16;
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v65 = 0;
      v66[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v66[0]);
      v65 = 0x6C616E6F6974704FLL;
      v66[0] = 0xE90000000000003CLL;
      v18 = sub_100006A6C(&qword_1001A5620);
      v19._countAndFlagsBits = _typeName(_:qualified:)(v18, 0);
      object = v19._object;
      String.append(_:)(v19);
      swift_bridgeObjectRelease(object);
      v21._countAndFlagsBits = 0x656E6F6E2E3ELL;
      v21._object = (void *)0xE600000000000000;
      String.append(_:)(v21);
      v15 = v65;
      v17 = v66[0];
    }
    v65 = sub_10001EFA4(v15, v17, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "Handling button actions: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  if (a1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 >= 0)
        v22 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v22 = a1;
      swift_bridgeObjectRetain(a1);
      v23 = __CocoaSet.makeIterator()(v22);
      v24 = sub_100013194(0, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
      v25 = sub_10005B9EC();
      v26 = Set.Iterator.init(_cocoa:)(&v65, v23, v24, v25);
      a1 = v65;
      v62 = v66[0];
      v27 = v66[1];
      v28 = v66[2];
      v29 = v66[3];
    }
    else
    {
      v30 = -1 << *(_BYTE *)(a1 + 32);
      v62 = a1 + 56;
      v27 = ~v30;
      v31 = -v30;
      if (v31 < 64)
        v32 = ~(-1 << v31);
      else
        v32 = -1;
      v29 = v32 & *(_QWORD *)(a1 + 56);
      v26 = (_QWORD *)swift_bridgeObjectRetain(a1);
      v28 = 0;
    }
    v61 = (unint64_t)(v27 + 64) >> 6;
    while (1)
    {
      v33 = v28;
      if (a1 < 0)
      {
        v36 = __CocoaSet.Iterator.next()(v26);
        if (!v36)
          goto LABEL_53;
        v37 = v36;
        v63 = v36;
        v38 = sub_100013194(0, (unint64_t *)&qword_1001A5BC0, SBUIRemoteAlertButtonAction_ptr);
        swift_unknownObjectRetain(v37);
        swift_dynamicCast(v64, &v63, (char *)&type metadata for Swift.AnyObject + 8, v38, 7);
        v39 = (id)v64[0];
        swift_unknownObjectRelease(v37);
        if (!v39)
          goto LABEL_53;
      }
      else
      {
        if (v29)
        {
          v34 = __clz(__rbit64(v29));
          v29 &= v29 - 1;
          v35 = v34 | (v28 << 6);
        }
        else
        {
          v40 = v28 + 1;
          if (__OFADD__(v28, 1))
          {
            __break(1u);
            goto LABEL_55;
          }
          if (v40 >= v61)
            goto LABEL_53;
          v41 = *(_QWORD *)(v62 + 8 * v40);
          ++v28;
          if (!v41)
          {
            v28 = v33 + 2;
            if (v33 + 2 >= v61)
              goto LABEL_53;
            v41 = *(_QWORD *)(v62 + 8 * v28);
            if (!v41)
            {
              v28 = v33 + 3;
              if (v33 + 3 >= v61)
                goto LABEL_53;
              v41 = *(_QWORD *)(v62 + 8 * v28);
              if (!v41)
              {
                v28 = v33 + 4;
                if (v33 + 4 >= v61)
                  goto LABEL_53;
                v41 = *(_QWORD *)(v62 + 8 * v28);
                if (!v41)
                {
                  v42 = v33 + 5;
                  while (v61 != v42)
                  {
                    v41 = *(_QWORD *)(v62 + 8 * v42++);
                    if (v41)
                    {
                      v28 = v42 - 1;
                      goto LABEL_40;
                    }
                  }
LABEL_53:
                  sub_10002413C(a1);
                  return;
                }
              }
            }
          }
LABEL_40:
          v29 = (v41 - 1) & v41;
          v35 = __clz(__rbit64(v41)) + (v28 << 6);
        }
        v39 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v35);
        if (!v39)
          goto LABEL_53;
      }
      v43 = objc_msgSend(v39, "events");
      if ((v43 & 0x10) != 0)
      {
        v44 = Logger.logObject.getter(v43);
        v46 = static os_log_type_t.default.getter(v44, v45);
        if (os_log_type_enabled(v44, v46))
        {
          v47 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v47 = 0;
          _os_log_impl((void *)&_mh_execute_header, v44, v46, "Home button pressed", v47, 2u);
          swift_slowDealloc(v47, -1, -1);
        }

        if (*(_BYTE *)(v3 + 48) == 1)
        {
          v49 = Logger.logObject.getter(v48);
          v50 = static os_log_type_t.error.getter(v49);
          if (os_log_type_enabled(v49, v50))
          {
            v51 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v51 = 0;
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Flow already finished", v51, 2u);
            swift_slowDealloc(v51, -1, -1);
          }

        }
        else
        {
          *(_BYTE *)(v3 + 48) = 1;
          v52 = *(_QWORD *)(v3 + 64);
          ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 56));
          v54 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v52 + 48))(v64, ObjectType, v52);
          *(_DWORD *)(v55 + *(int *)(type metadata accessor for PasswordSharingModel(0) + 64)) = 4;
          v54(v64, 0);
          Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
          if (Strong)
          {
            v57 = Strong;
            v58 = *(void **)(Strong
                           + OBJC_IVAR____TtC18SharingViewService33PasswordSharingFlowViewController_prxContainerViewController);
            if (v58 && (v59 = objc_msgSend(v58, "mainNavigationController")) != 0)
            {
              v60 = v59;
              objc_msgSend(v59, "dismissViewControllerAnimated:completion:", 1, 0);
              swift_unknownObjectRelease(v57);

            }
            else
            {
              swift_unknownObjectRelease(v57);
            }
          }
        }
      }
      objc_msgSend(v39, "sendResponseWithUnHandledEvents:", 0);

    }
  }
  __break(1u);
}

uint64_t sub_1000965C8(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  void (*v15)(_BYTE *, _QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[32];

  v2 = v1;
  v4 = sub_100006A6C(&qword_1001A6F70);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1;
  if (!a1)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
LABEL_11:
    v12 = *(_QWORD *)(v2 + 64);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 56));
    Date.init()();
    v14 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
    v15 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v19, ObjectType, v12);
    v17 = v16;
    v18 = type metadata accessor for PasswordSharingModel(0);
    sub_100012FE0((uint64_t)v6, v17 + *(int *)(v18 + 76));
    v15(v19, 0);
    return sub_100096724();
  }
  if (a1 == 1)
    v8 = 0xE500000000000000;
  else
    v8 = 0xE400000000000000;
  if (v7 == 1)
    v9 = 0x726F727265;
  else
    v9 = 1701736292;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v8, 0x7472617473, 0xE500000000000000, 0);
  result = swift_bridgeObjectRelease(v8);
  if ((v10 & 1) != 0)
    goto LABEL_11;
  return result;
}

uint64_t sub_100096724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  __n128 v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD aBlock[5];
  uint64_t v57;
  char v58[32];

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v54 = *(_QWORD *)(v0 - 8);
  v55 = v0;
  __chkstk_darwin(v0);
  v51 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DispatchQoS(0);
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  __chkstk_darwin(v2);
  v50 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchTimeInterval(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for DispatchTime(0);
  v45 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v44 - v11;
  v13 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100013194(0, (unint64_t *)&unk_1001A4390, OS_dispatch_source_ptr);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_100005B80((unint64_t *)&unk_1001A6F50, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
  v18 = sub_100006A6C(qword_1001A43A0);
  v19 = sub_100097300((unint64_t *)&unk_1001A6F60, qword_1001A43A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v13, v17);
  sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
  v20 = (void *)static OS_dispatch_queue.main.getter();
  v21 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v16, v20);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  ObjectType = swift_getObjectType(v21);
  static DispatchTime.now()();
  v23 = v49;
  v24 = *(_QWORD *)(v49 + 56) + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model;
  swift_beginAccess(v24, v58, 0, 0);
  v25 = type metadata accessor for PasswordSharingModel(0);
  + infix(_:_:)(v10, *(double *)(v24 + *(int *)(v25 + 44)));
  v26 = v46;
  v27 = *(void (**)(char *, uint64_t))(v45 + 8);
  v27(v10, v46);
  *v6 = 0;
  v29 = v47;
  v28 = v48;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v47 + 104))(v6, enum case for DispatchTimeInterval.nanoseconds(_:), v48);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v12, v6, ObjectType, 0.0);
  (*(void (**)(_QWORD *, uint64_t))(v29 + 8))(v6, v28);
  v27(v12, v26);
  v30 = swift_allocObject(&unk_10017B6B8, 24, 7);
  swift_weakInit(v30 + 16, v23);
  aBlock[4] = sub_1000972E0;
  v57 = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001BB50;
  aBlock[3] = &unk_10017B6D0;
  v31 = _Block_copy(aBlock);
  v32 = swift_retain(v30);
  v33 = v50;
  static DispatchQoS.unspecified.getter(v32);
  v34 = v51;
  sub_100096C58();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)(v33, v34, v31, ObjectType);
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v55);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v53);
  v35 = v57;
  swift_release(v30);
  swift_release(v35);
  v36 = *(_QWORD *)(v23 + 88);
  *(_QWORD *)(v23 + 88) = v21;
  swift_unknownObjectRetain(v21);
  swift_unknownObjectRelease(v36);
  if (qword_1001A30A0 != -1)
    swift_once(&qword_1001A30A0, sub_100095CE4);
  v38 = type metadata accessor for Logger(0, v37);
  v39 = sub_10000E8E8(v38, (uint64_t)qword_1001A6D50);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Starting touch delay timer", v42, 2u);
    swift_slowDealloc(v42, -1, -1);
  }

  OS_dispatch_source.activate()();
  return swift_unknownObjectRelease(v21);
}

uint64_t sub_100096C04(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    sub_100096E20();
    return swift_release(v3);
  }
  return result;
}

uint64_t sub_100096C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_100005B80((unint64_t *)&qword_1001A38F0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v2 = sub_100006A6C((uint64_t *)&unk_1001A4330);
  v3 = sub_100097300((unint64_t *)&qword_1001A38F8, (uint64_t *)&unk_1001A4330);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

void sub_100096D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 88);
  if (v1)
  {
    v2 = v0;
    v3 = qword_1001A30A0;
    swift_unknownObjectRetain(v1);
    if (v3 != -1)
      swift_once(&qword_1001A30A0, sub_100095CE4);
    v5 = type metadata accessor for Logger(0, v4);
    v6 = sub_10000E8E8(v5, (uint64_t)qword_1001A6D50);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Invaliding touch delay timer", v9, 2u);
      swift_slowDealloc(v9, -1, -1);
    }

    swift_getObjectType(v1);
    OS_dispatch_source.cancel()();
    swift_unknownObjectRelease(v1);
    v10 = *(_QWORD *)(v2 + 88);
    *(_QWORD *)(v2 + 88) = 0;
    swift_unknownObjectRelease(v10);
  }
}

void sub_100096E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100013194(0, (unint64_t *)&qword_1001A6810, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v6 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (qword_1001A30A0 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1001A30A0, sub_100095CE4);
LABEL_3:
  v8 = type metadata accessor for Logger(0, v7);
  v9 = sub_10000E8E8(v8, (uint64_t)qword_1001A6D50);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Touch delay timer fired", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  *(_BYTE *)(v1 + 96) = 1;
  sub_100096D04();
}

void sub_100096FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char v26[24];

  v1 = v0;
  if ((*(_BYTE *)(v0 + 96) & 1) != 0
    || (v2 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_model,
        swift_beginAccess(v2, v26, 0, 0),
        *(_BYTE *)(v2 + *(int *)(type metadata accessor for PasswordSharingModel(0) + 40)) == 1))
  {
    sub_10000FD38();
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 32);
    if (Strong)
    {
      v6 = (char *)Strong;
      if (qword_1001A2FA8 != -1)
        swift_once(&qword_1001A2FA8, sub_10005F48C);
      v7 = type metadata accessor for Logger(0, v5);
      v8 = sub_10000E8E8(v7, (uint64_t)qword_1001A58D8);
      v9 = Logger.logObject.getter(v8);
      v11 = static os_log_type_t.default.getter(v9, v10);
      if (os_log_type_enabled(v9, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v11, "Show activity indicator", v12, 2u);
        swift_slowDealloc(v12, -1, -1);
      }

      v13 = *(_QWORD *)&v6[OBJC_IVAR____TtC18SharingViewService34PasswordSharingStartViewController_activityIndicatorTitle
                         + 8];
      swift_bridgeObjectRetain(v13);
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v13);
      objc_msgSend(v6, "showActivityIndicatorWithStatus:", v14);
      swift_unknownObjectRelease(v6);

    }
    v15 = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (v15)
    {
      v16 = v15;
      v17 = sub_100064288();
      if (v17)
      {
        v18 = (void *)v17;
        v19 = String._bridgeToObjectiveC()();
        objc_msgSend(v18, "setIdleTimerDisabled:forReason:", 1, v19);
        swift_unknownObjectRelease(v16);

        v20 = (uint64_t)v18;
      }
      else
      {
        v20 = v16;
      }
      swift_unknownObjectRelease(v20);
    }
  }
  else
  {
    if (qword_1001A30A0 != -1)
      swift_once(&qword_1001A30A0, sub_100095CE4);
    v21 = type metadata accessor for Logger(0, v3);
    v22 = sub_10000E8E8(v21, (uint64_t)qword_1001A6D50);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Touch delay timer has not fired yet, cannot share password", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

  }
}

uint64_t sub_100097258(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  sub_100013338((uint64_t)(v2 + 2), a2);
  sub_100013338((uint64_t)(v2 + 4), v3);
  swift_unknownObjectRelease(v2[7]);
  swift_unknownObjectRelease(v2[9]);
  swift_unknownObjectRelease(v2[11]);
  return swift_deallocClassInstance(v2, 97, 7);
}

uint64_t type metadata accessor for PasswordSharingPresenter()
{
  return objc_opt_self(_TtC18SharingViewService24PasswordSharingPresenter);
}

uint64_t sub_1000972BC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000972E0()
{
  uint64_t v0;

  return sub_100096C04(v0);
}

uint64_t sub_1000972E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000972F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100097300(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100008048(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100097340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit(a3 + 16, 0);
  *(_QWORD *)(a3 + 40) = 0;
  swift_unknownObjectWeakInit(a3 + 32, 0);
  *(_BYTE *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + 88) = 0;
  *(_BYTE *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 56) = a1;
  *(_QWORD *)(a3 + 64) = &off_100177B28;
  *(_QWORD *)(a3 + 72) = a2;
  *(_QWORD *)(a3 + 80) = &off_10017A250;
  v6 = a1 + OBJC_IVAR____TtC18SharingViewService25PasswordSharingInteractor_delegate;
  *(_QWORD *)(v6 + 8) = &off_10017B630;
  swift_unknownObjectWeakAssign(v6, a3);
  v7 = a2 + OBJC_IVAR____TtC18SharingViewService21PasswordSharingRouter_delegate;
  *(_QWORD *)(v7 + 8) = &off_10017B650;
  swift_unknownObjectWeakAssign(v7, a3);
  return a3;
}

uint64_t sub_1000973FC(void *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v18;

  v4 = type metadata accessor for PasswordSharingModel(0);
  __chkstk_darwin(v4);
  v6 = (unint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
    v7 = a2;
  else
    v7 = sub_10000434C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain(a2);
  sub_10000B090(v7, v6);
  v8 = type metadata accessor for PasswordSharingInteractor(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = sub_10000F588((uint64_t)v6);
  v10 = (objc_class *)type metadata accessor for PasswordSharingRouter();
  v11 = (char *)objc_allocWithZone(v10);
  v12 = &v11[OBJC_IVAR____TtC18SharingViewService21PasswordSharingRouter_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0);
  *(_QWORD *)&v11[OBJC_IVAR____TtC18SharingViewService21PasswordSharingRouter_prxContainerViewController] = a1;
  v18.receiver = v11;
  v18.super_class = v10;
  v13 = a1;
  v14 = objc_msgSendSuper2(&v18, "init");
  v15 = type metadata accessor for PasswordSharingPresenter();
  v16 = swift_allocObject(v15, 97, 7);
  return sub_100097340(v9, (uint64_t)v14, v16);
}

UILabel __swiftcall setupTitleLabel(inContainerView:textAlignment:)(SVSCardContainerView *inContainerView, NSTextAlignment textAlignment)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t *v13;
  double v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  double v25;
  id v26;
  double v27;
  id v28;
  double v29;
  void *v31;

  v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v4, "setTextColor:", v5);

  v6 = (void *)objc_opt_self(UIFont);
  v7 = objc_msgSend(v6, "systemFontOfSize:", 30.0);
  v8 = objc_msgSend(v7, "fontDescriptor");
  v9 = objc_msgSend(v8, "fontDescriptorWithSymbolicTraits:", 2);

  v10 = sub_100006A6C((uint64_t *)&unk_1001A6CF0);
  Optional.unwrap(_:file:line:)(&v31, sub_100099650, 0, "SharingViewService/SVSCardConfiguration.swift", 45, 2, 260, v10);

  v11 = v31;
  objc_msgSend(v7, "pointSize", v9);
  v12 = objc_msgSend(v6, "fontWithDescriptor:size:", v11);

  objc_msgSend(v4, "setFont:", v12);
  objc_msgSend(v4, "setNumberOfLines:", 1);
  objc_msgSend(v4, "setMinimumScaleFactor:", 0.5);
  objc_msgSend(v4, "setLineBreakMode:", 4);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v4, "setTextAlignment:", textAlignment);
  objc_msgSend(v4, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v4, "setAccessibilityTraits:", UIAccessibilityTraitHeader);
  -[SVSCardContainerView addSubview:](inContainerView, "addSubview:", v4);
  if (textAlignment == NSTextAlignmentCenter)
  {
    if (qword_1001A30E0 != -1)
      swift_once(&qword_1001A30E0, sub_1000992E4);
    v13 = &qword_1001AD748;
  }
  else
  {
    if (qword_1001A30C8 != -1)
      swift_once(&qword_1001A30C8, sub_100099228);
    v13 = (uint64_t *)&xmmword_1001A6F78 + 1;
  }
  v14 = *(double *)v13;
  v15 = objc_msgSend(v4, "leadingAnchor");
  v16 = -[SVSCardContainerView leadingAnchor](inContainerView, "leadingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, v14);

  v18 = -[SVSCardContainerView trailingAnchor](inContainerView, "trailingAnchor");
  v19 = objc_msgSend(v4, "trailingAnchor");
  if (qword_1001A30E0 != -1)
    swift_once(&qword_1001A30E0, sub_1000992E4);
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, *(double *)&qword_1001AD748);

  v21 = objc_msgSend(v4, "firstBaselineAnchor");
  v22 = -[SVSCardContainerView topAnchor](inContainerView, "topAnchor");
  if (qword_1001A30C8 != -1)
    swift_once(&qword_1001A30C8, sub_100099228);
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, *(double *)&qword_1001A6F88);

  v24 = v17;
  LODWORD(v25) = 1148846080;
  objc_msgSend(v24, "setPriority:", v25);
  objc_msgSend(v24, "setActive:", 1);

  v26 = v20;
  LODWORD(v27) = 1148846080;
  objc_msgSend(v26, "setPriority:", v27);
  objc_msgSend(v26, "setActive:", 1);

  v28 = v23;
  LODWORD(v29) = 1148846080;
  objc_msgSend(v28, "setPriority:", v29);
  objc_msgSend(v28, "setActive:", 1);

  return (UILabel)v4;
}

UIButton __swiftcall setupXButton(inContainerView:)(SVSCardContainerView *inContainerView)
{
  NSString v2;
  id v3;
  UIButton result;
  id v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  double v18;
  id v19;
  double v20;
  id v21;
  double v22;
  id v23;
  double v24;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v2);

  if (v3)
  {
    v5 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 0);
    objc_msgSend(v5, "setImage:forState:", v3, 0);
    if (SFDeviceModelCodeGet(objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0)) == 1)
      v6 = 31.0;
    else
      v6 = 24.0;
    -[SVSCardContainerView addSubview:](inContainerView, "addSubview:", v5);
    v7 = objc_msgSend(v5, "heightAnchor");
    v8 = objc_msgSend(v7, "constraintEqualToConstant:", 40.0);

    v9 = objc_msgSend(v5, "widthAnchor");
    v10 = objc_msgSend(v9, "constraintEqualToConstant:", 40.0);

    v11 = -[SVSCardContainerView trailingAnchor](inContainerView, "trailingAnchor");
    v12 = objc_msgSend(v5, "centerXAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, v6);

    v14 = objc_msgSend(v5, "centerYAnchor");
    v15 = -[SVSCardContainerView topAnchor](inContainerView, "topAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, v6);

    v17 = v8;
    LODWORD(v18) = 1148846080;
    objc_msgSend(v17, "setPriority:", v18);
    objc_msgSend(v17, "setActive:", 1);

    v19 = v10;
    LODWORD(v20) = 1148846080;
    objc_msgSend(v19, "setPriority:", v20);
    objc_msgSend(v19, "setActive:", 1);

    v21 = v13;
    LODWORD(v22) = 1148846080;
    objc_msgSend(v21, "setPriority:", v22);
    objc_msgSend(v21, "setActive:", 1);

    v23 = v16;
    LODWORD(v24) = 1148846080;
    objc_msgSend(v23, "setPriority:", v24);
    objc_msgSend(v23, "setActive:", 1);

    return (UIButton)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall setupBottomLabel(inContainerView:forLabel:)(SVSCardContainerView *inContainerView, UILabel forLabel)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  double v29;
  void *v30;
  id v31;
  double v32;
  void *v33;
  id v34;
  double v35;
  void *v36;
  id v37;
  double v38;
  void *v39;
  id v40;
  double v41;
  void *v42;
  id v43;
  double v44;
  void *v45;
  uint64_t v46;
  _BYTE v47[80];

  -[objc_class setNumberOfLines:](forLabel.super.super.super.isa, "setNumberOfLines:", 3);
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  -[objc_class setTextColor:](forLabel.super.super.super.isa, "setTextColor:", v4);

  -[objc_class setTextAlignment:](forLabel.super.super.super.isa, "setTextAlignment:", 1);
  v5 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCallout);
  -[objc_class setFont:](forLabel.super.super.super.isa, "setFont:", v5);

  -[objc_class setMinimumScaleFactor:](forLabel.super.super.super.isa, "setMinimumScaleFactor:", 0.3);
  -[objc_class setAdjustsFontSizeToFitWidth:](forLabel.super.super.super.isa, "setAdjustsFontSizeToFitWidth:", 1);
  -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](forLabel.super.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  -[SVSCardContainerView addSubview:](inContainerView, "addSubview:", forLabel.super.super.super.isa);
  v6 = sub_100006A6C((uint64_t *)&unk_1001A7CA0);
  inited = swift_initStackObject(v6, v47);
  *(_OWORD *)(inited + 16) = xmmword_100131CB0;
  v8 = -[objc_class centerXAnchor](forLabel.super.super.super.isa, "centerXAnchor");
  v9 = -[SVSCardContainerView centerXAnchor](inContainerView, "centerXAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(inited + 32) = v10;
  v11 = -[objc_class widthAnchor](forLabel.super.super.super.isa, "widthAnchor");
  v12 = -[SVSCardContainerView widthAnchor](inContainerView, "widthAnchor");
  if (qword_1001A30C8 != -1)
    swift_once(&qword_1001A30C8, sub_100099228);
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:constant:", v12, *((double *)&xmmword_1001A6F78 + 1) * -2.0);

  *(_QWORD *)(inited + 40) = v13;
  v14 = -[objc_class leadingAnchor](forLabel.super.super.super.isa, "leadingAnchor");
  v15 = -[SVSCardContainerView leadingAnchor](inContainerView, "leadingAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, *((double *)&xmmword_1001A6F78 + 1));

  *(_QWORD *)(inited + 48) = v16;
  v17 = -[objc_class trailingAnchor](forLabel.super.super.super.isa, "trailingAnchor");
  v18 = -[SVSCardContainerView trailingAnchor](inContainerView, "trailingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, *((double *)&xmmword_1001A6F78 + 1));

  *(_QWORD *)(inited + 56) = v19;
  v20 = -[objc_class bottomAnchor](forLabel.super.super.super.isa, "bottomAnchor");
  v21 = -[SVSCardContainerView bottomAnchor](inContainerView, "bottomAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, -30.0);

  *(_QWORD *)(inited + 64) = v22;
  v23 = -[objc_class heightAnchor](forLabel.super.super.super.isa, "heightAnchor");
  v24 = objc_msgSend(v23, "constraintLessThanOrEqualToConstant:", 55.0);

  *(_QWORD *)(inited + 72) = v24;
  v46 = inited;
  specialized Array._endMutation()(v25);
  v26 = inited;
  v27 = inited & 0xC000000000000001;
  if (v27)
  {
    v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v46);
  }
  else
  {
    if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10) < 6uLL)
    {
      __break(1u);
      return;
    }
    v28 = *(id *)(v46 + 32);
  }
  v30 = v28;
  LODWORD(v29) = 1148846080;
  objc_msgSend(v28, "setPriority:", v29);
  objc_msgSend(v30, "setActive:", 1);

  if (v27)
    v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v26);
  else
    v31 = *(id *)(v26 + 40);
  v33 = v31;
  LODWORD(v32) = 1148846080;
  objc_msgSend(v31, "setPriority:", v32);
  objc_msgSend(v33, "setActive:", 1);

  if (v27)
    v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v26);
  else
    v34 = *(id *)(v26 + 48);
  v36 = v34;
  LODWORD(v35) = 1148846080;
  objc_msgSend(v34, "setPriority:", v35);
  objc_msgSend(v36, "setActive:", 1);

  if (v27)
    v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3, v26);
  else
    v37 = *(id *)(v26 + 56);
  v39 = v37;
  LODWORD(v38) = 1148846080;
  objc_msgSend(v37, "setPriority:", v38);
  objc_msgSend(v39, "setActive:", 1);

  if (v27)
    v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(4, v26);
  else
    v40 = *(id *)(v26 + 64);
  v42 = v40;
  LODWORD(v41) = 1148846080;
  objc_msgSend(v40, "setPriority:", v41);
  objc_msgSend(v42, "setActive:", 1);

  if (v27)
    v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(5, v26);
  else
    v43 = *(id *)(v26 + 72);
  v45 = v43;
  LODWORD(v44) = 1148846080;
  objc_msgSend(v43, "setPriority:", v44);
  objc_msgSend(v45, "setActive:", 1);
  swift_bridgeObjectRelease(v26);

}

id sub_10009829C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  id v23;
  double v24;
  id v25;
  double v26;

  v12 = objc_allocWithZone((Class)type metadata accessor for TextSpinner());
  swift_bridgeObjectRetain(a3);
  v13 = sub_100099910(a5, a2, a3);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setDistribution:", 0);
  objc_msgSend(v13, "setAlignment:", 3);
  objc_msgSend(v13, "setSpacing:", 7.0);
  objc_msgSend(a1, "addSubview:", v13);
  v14 = objc_msgSend(v13, "heightAnchor");
  v15 = objc_msgSend(v14, "constraintEqualToConstant:", 50.0);

  v16 = objc_msgSend(v13, "centerXAnchor");
  v17 = objc_msgSend(a1, "centerXAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  v19 = objc_msgSend(v13, "bottomAnchor");
  v20 = objc_msgSend(v19, "constraintEqualToAnchor:constant:", a4, a6);

  v21 = v15;
  LODWORD(v22) = 1148846080;
  objc_msgSend(v21, "setPriority:", v22);
  objc_msgSend(v21, "setActive:", 1);

  v23 = v18;
  LODWORD(v24) = 1148846080;
  objc_msgSend(v23, "setPriority:", v24);
  objc_msgSend(v23, "setActive:", 1);

  v25 = v20;
  LODWORD(v26) = 1148846080;
  objc_msgSend(v25, "setPriority:", v26);
  objc_msgSend(v25, "setActive:", 1);

  return v13;
}

id sub_1000984E4(void *a1, id a2, double a3)
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  objc_msgSend(a2, "addSubview:", a1);
  v6 = objc_msgSend(a1, "widthAnchor");
  v7 = objc_msgSend(v6, "constraintEqualToConstant:", a3);

  objc_msgSend(v7, "setActive:", 1);
  v8 = objc_msgSend(a1, "heightAnchor");
  v9 = objc_msgSend(v8, "constraintEqualToConstant:", a3);

  objc_msgSend(v9, "setActive:", 1);
  v10 = objc_msgSend(a1, "centerXAnchor");
  v11 = objc_msgSend(a2, "centerXAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  objc_msgSend(v12, "setActive:", 1);
  v13 = objc_msgSend(a1, "centerYAnchor");
  v14 = objc_msgSend(a2, "centerYAnchor");
  if (qword_1001A30B8 != -1)
    swift_once(&qword_1001A30B8, sub_1000990FC);
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, *(double *)&qword_1001AD728);

  objc_msgSend(v15, "setActive:", 1);
  return v15;
}

SVSHighlightButton __swiftcall setupNormalButton(inContainerView:)(SVSCardContainerView *inContainerView)
{
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;

  v2 = sub_1000992F4(inContainerView);
  v3 = objc_msgSend(v2, "bottomAnchor");
  v4 = -[SVSCardContainerView bottomAnchor](inContainerView, "bottomAnchor");
  if (qword_1001A30C8 != -1)
    swift_once(&qword_1001A30C8, sub_100099228);
  v5 = objc_msgSend(v3, "constraintEqualToAnchor:constant:", v4, -*((double *)&xmmword_1001A6F78 + 1));

  LODWORD(v6) = 1148846080;
  objc_msgSend(v5, "setPriority:", v6);
  objc_msgSend(v5, "setActive:", 1);

  return (SVSHighlightButton)v2;
}

UIButton __swiftcall setupOptionButton(inContainerView:)(SVSCardContainerView *inContainerView)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  double v18;
  id v19;
  double v20;
  id v21;
  double v22;
  id v23;
  double v24;

  v2 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v3 = objc_msgSend(v2, "titleLabel");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 17.0, UIFontWeightSemibold);
    objc_msgSend(v4, "setFont:", v5);

  }
  -[SVSCardContainerView addSubview:](inContainerView, "addSubview:", v2);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(v2, "centerXAnchor");
  v7 = -[SVSCardContainerView centerXAnchor](inContainerView, "centerXAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  v9 = objc_msgSend(v2, "widthAnchor");
  v10 = -[SVSCardContainerView widthAnchor](inContainerView, "widthAnchor");
  if (qword_1001A30C8 != -1)
    swift_once(&qword_1001A30C8, sub_100099228);
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, *((double *)&xmmword_1001A6F78 + 1) * -2.0);

  v12 = objc_msgSend(v2, "lastBaselineAnchor");
  v13 = -[SVSCardContainerView bottomAnchor](inContainerView, "bottomAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, -*(double *)&xmmword_1001A6F78);

  v15 = objc_msgSend(v2, "heightAnchor");
  v16 = objc_msgSend(v15, "constraintEqualToConstant:", 33.0);

  v17 = v8;
  LODWORD(v18) = 1148846080;
  objc_msgSend(v17, "setPriority:", v18);
  objc_msgSend(v17, "setActive:", 1);

  v19 = v11;
  LODWORD(v20) = 1148846080;
  objc_msgSend(v19, "setPriority:", v20);
  objc_msgSend(v19, "setActive:", 1);

  v21 = v14;
  LODWORD(v22) = 1148846080;
  objc_msgSend(v21, "setPriority:", v22);
  objc_msgSend(v21, "setActive:", 1);

  v23 = v16;
  LODWORD(v24) = 1148846080;
  objc_msgSend(v23, "setPriority:", v24);
  objc_msgSend(v23, "setActive:", 1);

  return (UIButton)v2;
}

Swift::tuple_SVSHighlightButton_UIButton __swiftcall setupNormalButtonAndOptionButton(inContainerView:)(SVSCardContainerView *inContainerView)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  id v23;
  double v24;
  id v25;
  double v26;
  id v27;
  double v28;
  id v29;
  double v30;
  objc_class *v31;
  objc_class *v32;
  Swift::tuple_SVSHighlightButton_UIButton result;

  v2 = sub_1000992F4(inContainerView);
  v3 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v4 = objc_msgSend(v3, "titleLabel");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 17.0, UIFontWeightMedium);
    objc_msgSend(v5, "setFont:", v6);

  }
  -[SVSCardContainerView addSubview:](inContainerView, "addSubview:", v3);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = objc_msgSend(v3, "centerXAnchor");
  v8 = -[SVSCardContainerView centerXAnchor](inContainerView, "centerXAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  v10 = objc_msgSend(v3, "widthAnchor");
  v11 = objc_msgSend(v2, "widthAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  v13 = objc_msgSend(v3, "lastBaselineAnchor");
  v14 = -[SVSCardContainerView bottomAnchor](inContainerView, "bottomAnchor");
  if (qword_1001A30C8 != -1)
    swift_once(&qword_1001A30C8, sub_100099228);
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, -*(double *)&xmmword_1001A6F78);

  v16 = objc_msgSend(v3, "firstBaselineAnchor");
  v17 = objc_msgSend(v2, "bottomAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, 31.0);

  v19 = objc_msgSend(v3, "heightAnchor");
  v20 = objc_msgSend(v19, "constraintEqualToConstant:", 33.0);

  v21 = v9;
  LODWORD(v22) = 1148846080;
  objc_msgSend(v21, "setPriority:", v22);
  objc_msgSend(v21, "setActive:", 1);

  v23 = v12;
  LODWORD(v24) = 1148846080;
  objc_msgSend(v23, "setPriority:", v24);
  objc_msgSend(v23, "setActive:", 1);

  v25 = v15;
  LODWORD(v26) = 1148846080;
  objc_msgSend(v25, "setPriority:", v26);
  objc_msgSend(v25, "setActive:", 1);

  v27 = v18;
  LODWORD(v28) = 1148846080;
  objc_msgSend(v27, "setPriority:", v28);
  objc_msgSend(v27, "setActive:", 1);

  v29 = v20;
  LODWORD(v30) = 1148846080;
  objc_msgSend(v29, "setPriority:", v30);
  objc_msgSend(v29, "setActive:", 1);

  v31 = (objc_class *)v2;
  v32 = (objc_class *)v3;
  result._1.super.super.super.super.isa = v32;
  result._0.super.super.super.super.super.isa = v31;
  return result;
}

UIPickerView __swiftcall setupHeightlessPicker(inContainerView:)(SVSCardContainerView *inContainerView)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIPickerView), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  -[SVSCardContainerView addSubview:](inContainerView, "addSubview:", v2);
  v3 = objc_msgSend(v2, "widthAnchor");
  v4 = -[SVSCardContainerView widthAnchor](inContainerView, "widthAnchor");
  v5 = objc_msgSend(v3, "constraintEqualToAnchor:", v4);

  objc_msgSend(v5, "setActive:", 1);
  v6 = objc_msgSend(v2, "centerXAnchor");
  v7 = -[SVSCardContainerView centerXAnchor](inContainerView, "centerXAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  objc_msgSend(v8, "setActive:", 1);
  v9 = objc_msgSend(v2, "centerYAnchor");
  v10 = -[SVSCardContainerView centerYAnchor](inContainerView, "centerYAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -9.0);

  objc_msgSend(v11, "setActive:", 1);
  return (UIPickerView)v2;
}

void sub_1000990D8()
{
  qword_1001AD718 = 0x4078600000000000;
}

void sub_1000990EC()
{
  qword_1001AD720 = 0x4018000000000000;
}

